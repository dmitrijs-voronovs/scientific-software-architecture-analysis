quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Availability,"	- convert ASImage into XImage; * asimage2mask_ximage() - convert alpha channel of ASImage into XImage; * asimage2pixmap()	- convert ASImage into Pixmap ( possibly using; * 					 precreated XImage ); * asimage2mask() 	- convert alpha channel of ASImage into 1 bit; * 				 	 mask Pixmap.; * SEE ALSO; * Other libAfterImage modules :; * ascmap.h asfont.h asimage.h asvisual.h blender.h export.h; * import.h transform.h ximage.h; * AUTHOR; * Sasha Vasko <sasha at aftercode dot net>; *******/; /****f* libAfterImage/picture_ximage2asimage(); * NAME; * picture_ximage2asimage(); * SYNOPSIS; * ASImage *picture_ximage2asimage ( struct ASVisual *asv,; * XImage * xim, XImage *alpha_xim,; * unsigned int compression );; * INPUTS; * asv - pointer to valid ASVisual structure; * xim - source XImage; * alpha_xim - source XImage for Alpha channel; * compression - degree of compression of resulting ASImage.; * RETURN VALUE; * pointer to newly allocated ASImage, containing encoded data, on; * success. NULL on failure.; * DESCRIPTION; * picture_ximage2asimage will attempt to create new ASImage with the same; * dimensions as supplied XImage. If both XImages are supplied - they must; * have same dimentions. XImage will be decoded based on; * supplied ASVisual, and resulting scanlines will be encoded into; * ASImage.; *********/; /****f* libAfterImage/ximage2asimage(); * NAME; * ximage2asimage() - same as picture_ximage2asimage with alpha_ximage ; * set to NULL. Supplied for compatibility with older versions and for ; * convinience.; * SYNOPSIS; * ASImage *ximage2asimage ( struct ASVisual *asv, XImage * xim,; * unsigned int compression );; * INPUTS; * asv 		 - pointer to valid ASVisual structure; * xim 		 - source XImage; * compression - degree of compression of resulting ASImage.; * RETURN VALUE; * pointer to newly allocated ASImage, containing encoded data, on; * success. NULL on failure.; * DESCRIPTION; *********/; /****f* libAfterImage/pixmap2asimage(); * NAME; * pixmap2asimage(); * SYNOPSI",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h:1252,failure,failure,1252,graf2d/asimage/src/libAfterImage/ximage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h,1,['failure'],['failure']
Availability," ## joint distribution for ""x"" and ""y"" can be factorized.; ## Generally, these regions have many events, so it the ratio can be; ## measured very precisely there. So we extend the model to describe the; ## left two boxes... denoted with ""bar"".; ## - In the upper left we observe nonbar events and expect bbar events; ## - In the bottom left we observe noffbar events and expect tau bbar events; ## Note again we have:; ##; ## ~~~{.cpp}; ## tau ~ <expectation off bar> / <expectation on bar>; ## ~~~; ##; ## One can further expand the model to account for the systematic associated; ## to assuming the distribution of ""x"" and ""y"" factorizes (eg. that; ## tau is the same for off/on and offbar/onbar). This can be done in several; ## ways, but here we introduce an additional parameter rho, which so that; ## one set of models will use tau and the other tau*rho. The choice is arbitrary,; ## but it has consequences on the numerical stability of the algorithms.; ## The ""bar"" measurements typically have more events (& smaller relative errors).; ## If we choose; ##; ## ~~~{.cpp}; ## <expectation noffbar> = tau * rho * <expectation noonbar>; ## ~~~; ##; ## the product tau*rho will be known very precisely (~1/sqrt(bbar)) and the contour; ## in those parameters will be narrow and have a non-trivial tau~1/rho shape.; ## However, if we choose to put rho on the non/noff measurements (where the; ## product will have an error `~1/sqrt(b))`, the contours will be more amenable; ## to numerical techniques. Thus, here we choose to define:; ##; ## ~~~{.cpp}; ## tau := <expectation off bar> / (<expectation on bar>); ## rho := <expectation off> / (<expectation on> * tau); ##; ## ^ y; ## |; ## |---------------------------+; ## | | |; ## | nonbar | non |; ## | bbar | s+b |; ## | | |; ## |---------------+-----------|; ## | | |; ## | noffbar | noff |; ## | tau bbar | tau b rho |; ## | | |; ## +-----------------------------> x; ## ~~~; ##; ## Left in this way, the problem is under-constrained. However, o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:2110,error,errors,2110,tutorials/roostats/FourBinInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py,1,['error'],['errors']
Availability," (""Mean"", ""Std Dev"", ...) can be changed from; `$ROOTSYS/etc/system.rootrc` or `.rootrc` (look for the string `Hist.Stats.`). \anchor HP08; ### Fit Statistics. The type of information about fit parameters printed in the histogram statistics; box can be selected via the parameter mode. The parameter mode can be; `= pcev` (default `= 0111`). p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" an",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:25913,error,error,25913,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['error']
Availability," * ::usleep(int(1e6 * ::drand48()));; * std::ostringstream buf;; * buf << ""child pid "" << ::getpid() << "" sends message "" << i;; * std::cout << ""[CHILD] : "" << buf.str() << std::endl;; * pipe << buf.str() << BidirMMapPipe::flush;; * if (!pipe) return -1;; * if (pipe.eof()) break;; * }; * // tell parent we're done; * pipe << """" << BidirMMapPipe::flush;; * // wait for parent to acknowledge; * std::string s;; * pipe >> s;; * pipe.close();; * return 0;; * }; *; * // function to spawn a child; * BidirMMapPipe* spawnChild(int (*childexec)(BidirMMapPipe&)); * {; * BidirMMapPipe *p = new BidirMMapPipe();; * if (p->isChild()) {; * int retVal = childexec(*p);; * delete p;; * std::exit(retVal);; * }; * return p;; * }; *; * int main(); * {; * typedef BidirMMapPipe::PollEntry PollEntry;; * // poll data structure; * BidirMMapPipe::PollVector pipes;; * pipes.reserve(3);; * // spawn children; * for (int i = 0; i < 3; ++i) {; * pipes.push_back(PollEntry(spawnChild(randomchild),; * BidirMMapPipe::Readable));; * }; * // while at least some children alive; * while (!pipes.empty()) {; * // poll, wait until status change (infinite timeout); * int npipes = BidirMMapPipe::poll(pipes, -1);; * // scan for pipes with changed status; * for (std::vector<PollEntry>::iterator it = pipes.begin();; * npipes && pipes.end() != it; ) {; * if (!it->revents) {; * // unchanged, next one; * ++it;; * continue;; * }; * --npipes; // maybe we can stop early...; * // read from pipes which are readable; * if (it->revents & BidirMMapPipe::Readable) {; * std::string s;; * *(it->pipe) >> s;; * if (!s.empty()) {; * std::cout << ""[PARENT]: Read from pipe "" <<; * it->pipe << "": "" << s << std::endl;; * ++it;; * continue;; * } else {; * // child is shutting down...; * *(it->pipe) << """" << BidirMMapPipe::flush;; * goto childcloses;; * }; * }; * // retire pipes with error or end-of-file condition; * if (it->revents & (BidirMMapPipe::Error |; * BidirMMapPipe::EndOfFile |; * BidirMMapPipe::Invalid)) {; * std::cout << ""[PAR",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:3078,alive,alive,3078,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['alive'],['alive']
Availability," * ASVisual structure pointed by asv will have the following data; * members set on success :; * dpy, visual_info, colormap, own_colormap, black_pixel, white_pixel.; * DESCRIPTION; * query_screen_visual_id() will go though prioritized list of possible; * Visuals and attempt to match those to what is available on the; * specified screen. If all items from list fail, then it goes about; * querying default visual.; * query_screen_visual is identical to query_screen_visual_id with; * visual_id and cmap set to 0.; * Once X Visual has been identified, we create X colormap and allocate; * white and black pixels from it.; *********/; /****f* libAfterImage/setup_truecolor_visual(); * NAME; * setup_truecolor_visual(); * SYNOPSIS; * Bool setup_truecolor_visual( ASVisual *asv );; * INPUTS; * asv 		- preallocated ASVisual structure.; * RETURN VALUE; * True on success, False if visual is not TrueColor.; * DESCRIPTION; * setup_truecolor_visual() checks if Visual is indeed TrueColor and if; * so it goes about querying color masks, deducing real XImage; * colordepth, and whether we work in BGR mode. It then goes about; * setting up correct hooks to X IO functions.; *********/; /****f* libAfterImage/setup_pseudo_visual(); * NAME; * setup_pseudo_visual(); * SYNOPSIS; * void setup_pseudo_visual( ASVisual *asv );; * INPUTS; * asv 		- preallocated ASVisual structure.; * DESCRIPTION; * setup_pseudo_visual() assumes that Visual is PseudoColor. It then; * tries to decide as to how many colors preallocate, and goes about; * setting up correct X IO hooks and possibly initialization of reverse; * colormap in case ASVisual already has colormap preallocated.; *********/; /****f* libAfterImage/setup_as_colormap(); * NAME; * setup_as_colormap(); * SYNOPSIS; * void setup_as_colormap( ASVisual *asv );; * INPUTS; * asv 		- preallocated ASVisual structure.; * DESCRIPTION; * That has to be called in order to pre-allocate sufficient number of; * colors. It uses colormap size identification supplied in A",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h:1796,mask,masks,1796,graf2d/asimage/src/libAfterImage/asvisual.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h,1,['mask'],['masks']
Availability," *********/; /****f* libAfterImage/transform/pad_asimage(); * NAME ; * pad_asimage() enlarges ASImage, padding it with specified color on ; * each side in accordance with requested geometry.; * SYNOPSIS; * ASImage *pad_asimage( ASVisual *asv, ASImage *src,; * int dst_x, int dst_y,; * unsigned int to_width,; * unsigned int to_height,; * ARGB32 color,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * src - source ASImage; * dst_x, dst_y - placement of the source image relative to the origin of; * destination image; * to_width - width of the destination image; * to_height - height of the destination image; * color - ARGB32 color value to pad with.; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out - compression level of resulting image in range 0-100.; * quality - output quality; * RETURN VALUE; * returns newly created and encoded ASImage on success, NULL of failure.; *********/; /****f* libAfterImage/transform/blur_asimage_gauss(); * NAME; * blur_asimage_gauss() Performs Gaussian blurr of the image ; * ( usefull for drop shadows and the likes ).; * SYNOPSIS; * ASImage* blur_asimage_gauss( ASVisual* asv, ASImage* src,; * double horz, double vert,; * ASAltImFormats out_format,; * unsigned int compression_out, ; * 								int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * src - source ASImage; * horz - horizontal radius of the blurr; * vert - vertical radius of the blurr; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out - compression level of resulting image in range 0-100.; * quality - output quality; * RETURN VALUE; * returns newly created and encoded ASImage on success, NULL of failure.; *********/; /****f* libAfterImage/transform/fill_asimage(); * NAME; * fill_asimage()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:10091,failure,failure,10091,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['failure'],['failure']
Availability," - 6 new full-width pinyin characters in row 0x28.; * - ISO646-CN in row 0x2A.; * - 32 half-width pinyin characters in row 0x2B.; * 3. GB 8565.2-88 additions:; * - 50 characters in row 0x2D.; * - 92 characters in row 0x2E.; * - 93 characters in row 0x2F.; * - 470 characters in rows 0x7A-0x7E.; * 4. ISO-IR-165 additions:; * - 22 characters in row 0x26.; * - 94 characters in row 0x2C.; * - 44 new characters in row 0x2D.; * - 1 new character in row 0x2F.; *; * The conversion table was created from the following sources:; * Ad 1. The 0x2367 correction is already integrated in the unicode.org; * GB2312.TXT table. The 0x6F71 mapping is the same in the unicode.org; * GB2312.TXT and UNIHAN.TXT table and in Koichi Yasuoka's Uni2GB table,; * so we assume it's correct.; * The unicode.org UNIHAN.TXT table about GB 8565 is not usable: it has; * extraneous code points at rows 0x28, 0x2C, 0x2D. Note also that it does; * not list the 69 non-hanzi in row 0x2F. Moreover, it has the characters; * 0x2F7A-0x2F7D shifted down by one to 0x2F79-0x2F7C.; * Therefore we take the GB8565 and ISO-IR-165 data from Koichi Yasuoka's; * Uni2GB table.; * Ad 1. Yasuoka maps 0x2367 to U+0261 (small script g) and 0x2840 to U+FF47; * (full-width small normal g). While coherent with ISO-IR's 165.pdf,; * this disagrees with Ken Lunde's book: He says that ISO-IR-165; * includes the GB6345 correction, i.e. maps 0x2367 to U+FF47 or U+0067; * and _not_ to U+0261 (small script g).; * To overcome the confusion, we just map both 0x2367 and 0x2840 to; * U+FF47.; * Ad 2. Row 0x28: Add a mapping from 0x283F to U+01F9.; * Row 0x2A: Mapping is well-known, also present in Koichi Yasuoka's; * table.; * Row 0x2B: Typed in by hand from appendix E in Ken Lunde's book.; * When converting from Unicode to ISO-IR-165, prefer the half-width; * range 0x2B{21..40} to the full-width range 0x28{21..40}.; * Ad 3. Rows 0x2D, 0x2E: Both Koichi Yasuoka's Uni2GB table and the UNIHAN.TXT; * data for GB 8565 agree here.; * Row 0x2F: Taken",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/isoir165.h:2145,down,down,2145,graf2d/win32gdk/gdk/src/iconv/isoir165.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/isoir165.h,1,['down'],['down']
Availability," - [Introduction](\ref HP00); - [Histograms' plotting options](\ref HP01); - [Options supported for 1D and 2D histograms](\ref HP01a); - [Options supported for 1D histograms](\ref HP01b); - [Options supported for 2D histograms](\ref HP01c); - [Options supported for 3D histograms](\ref HP01d); - [Options supported for histograms' stacks (THStack)](\ref HP01e); - [Setting the Style](\ref HP02); - [Setting line, fill, marker, and text attributes](\ref HP03); - [Setting Tick marks on the histogram axis](\ref HP04); - [Giving titles to the X, Y and Z axis](\ref HP05); - [The option ""SAME""](\ref HP060); - [Limitations](\ref HP060a); - [Colors automatically picked in palette](\ref HP061); - [Superimposing two histograms with different scales in the same pad](\ref HP06); - [Statistics Display](\ref HP07); - [Fit Statistics](\ref HP08); - [The error bars options](\ref HP09); - [The bar chart option](\ref HP100); - [The ""BAR"" and ""HBAR"" options](\ref HP10); - [The SCATter plot option (legacy draw option)](\ref HP11); - [The ARRow option](\ref HP12); - [The BOX option](\ref HP13); - [The COLor option (default for 2D and 3D histograms)](\ref HP14); - [The CANDLE and VIOLIN options](\ref HP140); - [The CANDLE option](\ref HP140a); - [The VIOLIN option](\ref HP140b); - [The TEXT and TEXTnn Option](\ref HP15); - [The CONTour options](\ref HP16); - [The LIST option](\ref HP16a); - [The AITOFF, MERCATOR, SINUSOIDAL and PARABOLIC options](\ref HP16b); - [The LEGO options](\ref HP17); - [The ""SURFace"" options](\ref HP18); - [Cylindrical, Polar, Spherical and PseudoRapidity/Phi options](\ref HP19); - [Base line for bar-charts and lego plots](\ref HP20); - [TH2Poly Drawing](\ref HP20a); - [The SPEC option](\ref HP21); - [Option ""Z"" : Adding the color palette on the right side of the pad](\ref HP22); - [Setting the color palette](\ref HP23); - [Drawing a sub-rang",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:975,error,error,975,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['error']
Availability," - pointer to valid ASImage structure; * color - color channel's number; * data - raw channel data of 32 bits per pixel - only lowest 8 bits; * gets encoded.; * y - image row starting with 0; * RETURN VALUE; * asimage_add_line() return size of the encoded channel scanline in; * bytes. On failure it will return 0.; * DESCRIPTION; * Encodes raw data of the single channel into ASImage channel scanline.; * based on compression level selected for this ASImage all or part of; * the scanline will be RLE encoded.; *********/; /****f* libAfterImage/asimage/asimage_add_line_mono(); * NAME; * asimage_add_line_mono(); * SYNOPSIS; * size_t asimage_add_line_mono ( ASImage * im, ColorPart color,; * CARD8 value, unsigned int y);; * INPUTS; * im				- pointer to valid ASImage structure; * color			- color channel's number; * value			- value for the channel; * y 				- image row starting with 0; * RETURN VALUE; * asimage_add_line_mono() return size of the encoded channel scanline; * in bytes. On failure it will return 0.; * DESCRIPTION; * encodes ASImage channel scanline to have same color components; * value in every pixel. Useful for vertical gradients for example.; *********/; /****f* libAfterImage/asimage/get_asimage_chanmask(); * NAME; * get_asimage_chanmask(); * SYNOPSIS; * ASFlagType get_asimage_chanmask( ASImage *im);; * INPUTS; * im - valid ASImage object.; * DESCRIPTION; * goes throu all the scanlines of the ASImage and toggles bits ; * representing those components that have at least some data.; *********/; /****f* libAfterImage/asimage/move_asimage_channel(); * NAME; * move_asimage_channel(); * SYNOPSIS; * void move_asimage_channel( ASImage *dst, int channel_dst,; * ASImage *src, int channel_src );; * INPUTS; * dst - ASImage which will have its channel substituted;; * channel_dst - what channel to move data to;; * src - ASImage which will donate its channel to dst;; * channel_src - what source image channel to move data from.; * DESCRIPTION; * MOves channel data from one ASIm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h:1191,failure,failure,1191,graf2d/asimage/src/libAfterImage/asimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h,1,['failure'],['failure']
Availability," ------------------------------------------------------------ |; | divsym | uses the histogram `TH1::Divide` method, yields symmetric errors |; | diff | subtracts the histograms |; | diffsig | subtracts the histograms and divides by the uncertainty |. Begin_Macro(source); ../../../tutorials/hist/ratioplot1.C; End_Macro. ## Fit residuals; A second constructor only accepts a single histogram, but expects it to have a fitted; function. The function is used to calculate the residual between the fit and the; histogram. Here, it is expected that h1 has a fit function in it's list of functions. The class calculates the; difference between the histogram and the fit function at each point and divides it by the uncertainty. There; are a few option to steer which error is used (as is the case for `diffsig`). The default is to use; the statistical uncertainty from h1 using `TH1::GetBinError`. If the `option` string contains `errasym`, asymmetric; errors will be used. The type of error can be steered by `TH1::SetBinErrorOption`. The corresponding error will be used,; depending on if the function is below or above the bin content. The third option `errfunc` uses the square root of; the function value as the error. Begin_Macro(source); ../../../tutorials/hist/ratioplot2.C; End_Macro. ## Error options for difference divided by uncertainty and fit residual; The uncertainty that is used in the calculation can be steered by providing; options to the `option` argument. | Option | Description |; | ---------- | ------------------------------------------------------------ |; | errasym | Uses calculated asymmetric errors from `TH1::GetBinErrorUp`/`TH1::GetBinErrorLow`. Note that you need to set `TH1::SetBinErrorOption` first |; | errfunc | Uses \f$ \sqrt{f(x)} \f$ as the error |. The asymmetric error case uses the upper or lower error depending on the relative size; of the bin contents, or the bin content and the function value. ## Access to internal parts; You can access the internal obje",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx:2350,error,error,2350,graf2d/gpad/src/TRatioPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx,1,['error'],['error']
Availability," ../../../tutorials/graphs/exclusiongraph.C; End_Macro. \anchor GrP3; ### Graphs with error bars; Three classes are available to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when b",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:6212,error,error,6212,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability," // +-------------+ +----+ | |; // | | | |; // V V | |; // +-------------+ | |; // | AND | | |; // +-------------+ | |; // | | |; // +-----+ | |; // | | |; // V V V; // +-------------+; // | CMP |; // +-------------+; //; // The AND node may be safely removed for some combinations of inputs. In; // particular we need to take into account the extension type of the Input,; // the exact values of AddConstant, CompConstant, and CC, along with the nominal; // width of the input (this can work for any width inputs, the above graph is; // specific to 8 bits.; //; // The specific equations were worked out by generating output tables for each; // AArch64CC value in terms of and AddConstant (w1), CompConstant(w2). The; // problem was simplified by working with 4 bit inputs, which means we only; // needed to reason about 24 distinct bit patterns: 8 patterns unique to zero; // extension (8,15), 8 patterns unique to sign extensions (-8,-1), and 8; // patterns present in both extensions (0,7). For every distinct set of; // AddConstant and CompConstants bit patterns we can consider the masked and; // unmasked versions to be equivalent if the result of this function is true for; // all 16 distinct bit patterns of for the current extension type of Input (w0).; //; // sub w8, w0, w1; // and w10, w8, #0x0f; // cmp w8, w2; // cset w9, AArch64CC; // cmp w10, w2; // cset w11, AArch64CC; // cmp w9, w11; // cset w0, eq; // ret; //; // Since the above function shows when the outputs are equivalent it defines; // when it is safe to remove the AND. Unfortunately it only runs on AArch64 and; // would be expensive to run during compiles. The equations below were written; // in a test harness that confirmed they gave equivalent outputs to the above; // for all inputs function, so they can be used determine if the removal is; // legal instead.; //; // isEquivalentMaskless() is the code for testing if the AND can be removed; // factored out of the DAG recognition as the DAG can take several forms.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:1545,mask,masked,1545,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['mask'],['masked']
Availability," // destroyed.; /// @endcode; ///; /// A success value *can not* be dropped. For example, just calling 'foo(<...>)'; /// without testing the return value will raise a runtime error, even if foo; /// returns success.; ///; /// For Error instances representing failure, you must use either the; /// handleErrors or handleAllErrors function with a typed handler. E.g.:; ///; /// @code{.cpp}; /// class MyErrorInfo : public ErrorInfo<MyErrorInfo> {; /// // Custom error info.; /// };; ///; /// Error foo(<...>) { return make_error<MyErrorInfo>(...); }; ///; /// auto E = foo(<...>); // <- foo returns failure with MyErrorInfo.; /// auto NewE =; /// handleErrors(std::move(E),; /// [](const MyErrorInfo &M) {; /// // Deal with the error.; /// },; /// [](std::unique_ptr<OtherError> M) -> Error {; /// if (canHandle(*M)) {; /// // handle error.; /// return Error::success();; /// }; /// // Couldn't handle this error instance. Pass it up the stack.; /// return Error(std::move(M));; /// });; /// // Note - The error passed to handleErrors will be marked as checked. If; /// // there is no matched handler, a new error with the same payload is; /// // created and returned.; /// // The handlers take the error checked by handleErrors as an argument,; /// // which can be used to retrieve more information. If a new error is; /// // created by a handler, it will be passed back to the caller of; /// // handleErrors and needs to be checked or return up to the stack.; /// // Otherwise, the passed-in error is considered consumed.; /// @endcode; ///; /// The handleAllErrors function is identical to handleErrors, except; /// that it has a void return type, and requires all errors to be handled and; /// no new errors be returned. It prevents errors (assuming they can all be; /// handled) from having to be bubbled all the way to the top-level.; ///; /// *All* Error instances must be checked before destruction, even if; /// they're moved-assigned or constructed from Success values that have already; /// b",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h:2019,Error,Error,2019,interpreter/llvm-project/llvm/include/llvm/Support/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h,2,"['Error', 'error']","['Error', 'error']"
Availability," /// ### Fit status; ///; /// The status of the fit is obtained converting the TFitResultPtr to an integer; /// independently if the fit option ""S"" is used or not:; ///; /// ~~~ {.cpp}; /// TFitResultPtr r = h->Fit(myFunc,opt);; /// Int_t fitStatus = r;; /// ~~~; ///; /// - `status = 0` : the fit has been performed successfully (i.e no error occurred).; /// - `status < 0` : there is an error not connected with the minimization procedure, for example when a wrong function is used.; /// - `status > 0` : return status from Minimizer, depends on used Minimizer. For example for TMinuit and Minuit2 we have:; /// - `status = migradStatus + 10*minosStatus + 100*hesseStatus + 1000*improveStatus`.; /// TMinuit returns 0 (for migrad, minos, hesse or improve) in case of success and 4 in case of error (see the documentation of TMinuit::mnexcm). For example, for an error; /// only in Minos but not in Migrad a fitStatus of 40 will be returned.; /// Minuit2 returns 0 in case of success and different values in migrad,minos or; /// hesse depending on the error. See in this case the documentation of; /// Minuit2Minimizer::Minimize for the migrad return status, Minuit2Minimizer::GetMinosError for the; /// minos return status and Minuit2Minimizer::Hesse for the hesse return status.; /// If other minimizers are used see their specific documentation for the status code returned.; /// For example in the case of Fumili, see TFumili::Minimize.; ///; /// \anchor HFitRange; /// ### Fitting in a range; ///; /// In order to fit in a sub-range of the histogram you have two options:; /// - pass to this function the lower (`xxmin`) and upper (`xxmax`) values for the fitting range;; /// - define a specific range in the fitted function and use the fitting option ""R"".; /// For example, if your histogram has a defined range between -4 and 4 and you want to fit a gaussian; /// only in the interval 1 to 3, you can do:; ///; /// ~~~ {.cpp}; /// TF1 *f1 = new TF1(""f1"", ""gaus"", 1, 3);; /// histo->Fit(""f1"", """,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:12932,error,error,12932,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability," /// projection of PDF is achieved by constructing an average over all observable values in given set.; /// Consult RooFit plotting tutorial for further explanation of meaning & use of this technique; ///; /// <tr><td> `ProjWData(const RooArgSet& s, const RooAbsData& d)` <td> As above but only consider subset 's' of observables in dataset 'd' for projection through data averaging; ///; /// <tr><td> `ProjectionRange(const char* rn)` <td> Override default range of projection integrals to a different range specified by given range name.; /// This technique allows you to project a finite width slice in a real-valued observable; ///; /// <tr><td> `NumCPU(Int_t ncpu)` <td> Number of CPUs to use simultaneously to calculate data-weighted projections (only in combination with ProjWData); ///; ///; /// <tr><th><th> Misc content control; /// <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printed per curve. A negative; /// value suppress output completely, a zero value will only print the error count per p.d.f component,; /// a positive value is will print details of each error up to numErr messages per p.d.f component.; ///; /// <tr><td> `EvalErrorValue(double value)` <td> Set curve points at which (pdf) evaluation errors occur to specified value. By default the; /// function value is plotted.; ///; /// <tr><td> `Normalization(double scale, ScaleType code)` <td> Adjust normalization by given scale factor. Interpretation of number depends on code:; /// - Relative: relative adjustment factor for a normalized function,; /// - NumEvent: scale to match given number of events.; /// - Raw: relative adjustment factor for an un-normalized function.; ///; /// <tr><td> `Name(const chat* name)` <td> Give curve specified name in frame. Useful if curve is to be referenced later; ///; /// <tr><td> `Asymmetry(const RooCategory& c)` <td> Show the asymmetry of the PDF in given two-state category [F(+)-F(-)] / [F(+)+F(-)] rather than; /// the PDF projecti",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:3434,error,error,3434,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['error'],['error']
Availability," ///; /// ""macrofilename"" and optionally ""cutfilename"" are expected to point; /// to source file which will be included in by the generated skeletong.; /// Method of the same name as the file(minus the extension and path); /// will be called by the generated skeleton's Process method as follow:; /// ~~~{.cpp}; /// [if (cutfilename())] htemp->Fill(macrofilename());; /// ~~~; /// ""option"" can be used select some of the optional features during; /// the code generation. The possible options are:; /// - nohist : indicates that the generated ProcessFill should not; /// fill the histogram.; ///; /// 'maxUnrolling' controls how deep in the class hierarchy does the; /// system 'unroll' class that are not split. 'unrolling' a class; /// will allow direct access to its data members a class (this; /// emulates the behavior of TTreeFormula).; ///; /// The main features of this skeleton are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bound; /// * ability to use the branch data as object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~{.cpp}; /// Double_t somepx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somepx will be updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~{.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~{.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// This 2 functions are run in a context such that the b",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:1905,avail,available,1905,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['avail'],['available']
Availability," ///; /// One or more object ( can be added to the list; /// of functions (fFunctions) associated to each histogram.; /// When TH1::Fit is invoked, the fitted function is added to the histogram list of functions (fFunctions).; /// If the histogram is made persistent, the list of associated functions is also persistent.; /// Given a histogram h, one can retrieve an associated function with:; ///; /// ~~~ {.cpp}; /// TF1 *myfunc = h->GetFunction(""myfunc"");; /// ~~~; /// or by quering directly the list obtained by calling `TH1::GetListOfFunctions`.; ///; /// \anchor HFitStatus; /// ### Fit status; ///; /// The status of the fit is obtained converting the TFitResultPtr to an integer; /// independently if the fit option ""S"" is used or not:; ///; /// ~~~ {.cpp}; /// TFitResultPtr r = h->Fit(myFunc,opt);; /// Int_t fitStatus = r;; /// ~~~; ///; /// - `status = 0` : the fit has been performed successfully (i.e no error occurred).; /// - `status < 0` : there is an error not connected with the minimization procedure, for example when a wrong function is used.; /// - `status > 0` : return status from Minimizer, depends on used Minimizer. For example for TMinuit and Minuit2 we have:; /// - `status = migradStatus + 10*minosStatus + 100*hesseStatus + 1000*improveStatus`.; /// TMinuit returns 0 (for migrad, minos, hesse or improve) in case of success and 4 in case of error (see the documentation of TMinuit::mnexcm). For example, for an error; /// only in Minos but not in Migrad a fitStatus of 40 will be returned.; /// Minuit2 returns 0 in case of success and different values in migrad,minos or; /// hesse depending on the error. See in this case the documentation of; /// Minuit2Minimizer::Minimize for the migrad return status, Minuit2Minimizer::GetMinosError for the; /// minos return status and Minuit2Minimizer::Hesse for the hesse return status.; /// If other minimizers are used see their specific documentation for the status code returned.; /// For example in the case of Fumili, ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:12268,error,error,12268,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability," ///; /// When using option ""L"" a likelihood fit is used instead of the default chi-square fit.; /// The likelihood is built assuming a Poisson probability density function for each bin.; /// The negative log-likelihood to be minimized is; ///; /// \f[; /// NLL = - \sum_{i}{ \log {\mathrm P} ( y(i) | f(x(i) | p ) ) }; /// \f]; /// where `P(y|f)` is the Poisson distribution of observing a count `y(i)` in the bin when the expected count is `f(x(i)|p)`.; /// The exact likelihood used is the Poisson likelihood described in this paper:; /// S. Baker and R. D. Cousins, “Clarification of the use of chi-square and likelihood functions in fits to histograms,”; /// Nucl. Instrum. Meth. 221 (1984) 437.; ///; /// \f[; /// NLL = \sum_{i}{( f(x(i) | p ) + y(i)\log(y(i)/ f(x(i) | p )) - y(i)) }; /// \f]; /// By using this formulation, `2*NLL` can be interpreted as the chi-square resulting from the fit.; ///; /// This method should be always used when the bin content represents counts (i.e. errors are sqrt(N) ).; /// The likelihood method has the advantage of treating correctly bins with low statistics. In case of high; /// statistics/bin the distribution of the bin content becomes a normal distribution and the likelihood and the chi2 fit; /// give the same result.; ///; /// The likelihood method, although a bit slower, it is therefore the recommended method,; /// when the histogram represent counts (Poisson statistics), where the chi-square methods may; /// give incorrect results, especially in case of low statistics.; /// In case of a weighted histogram, it is possible to perform also a likelihood fit by using the; /// option ""WL"". Note a weighted histogram is a histogram which has been filled with weights and it; /// has the information on the sum of the weight square for each bin ( TH1::Sumw2() has been called).; /// The bin error for a weighted histogram is the square root of the sum of the weight square.; ///; /// \anchor HFitRes; /// ### Fit Result; ///; /// The function ret",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:8640,error,errors,8640,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['errors']
Availability," ///; /// ~~~ {.cpp}; /// TFitResultPtr r = h->Fit(myFunc,""S"");; /// TMatrixDSym cov = r->GetCovarianceMatrix(); // to access the covariance matrix; /// Double_t chi2 = r->Chi2(); // to retrieve the fit chi2; /// Double_t par0 = r->Parameter(0); // retrieve the value for the parameter 0; /// Double_t err0 = r->ParError(0); // retrieve the error for the parameter 0; /// r->Print(""V""); // print full information of fit including covariance matrix; /// r->Write(); // store the result in a file; /// ~~~; ///; /// The fit parameters, error and chi-square (but not covariance matrix) can be retrieved also; /// directly from the fitted function that is passed to this call.; /// Given a pointer to an associated fitted function `myfunc`, one can retrieve the function/fit; /// parameters with calls such as:; ///; /// ~~~ {.cpp}; /// Double_t chi2 = myfunc->GetChisquare();; /// Double_t par0 = myfunc->GetParameter(0); //value of 1st parameter; /// Double_t err0 = myfunc->GetParError(0); //error on first parameter; /// ~~~; ///; /// ##### Associated functions; ///; /// One or more object ( can be added to the list; /// of functions (fFunctions) associated to each histogram.; /// When TH1::Fit is invoked, the fitted function is added to the histogram list of functions (fFunctions).; /// If the histogram is made persistent, the list of associated functions is also persistent.; /// Given a histogram h, one can retrieve an associated function with:; ///; /// ~~~ {.cpp}; /// TF1 *myfunc = h->GetFunction(""myfunc"");; /// ~~~; /// or by quering directly the list obtained by calling `TH1::GetListOfFunctions`.; ///; /// \anchor HFitStatus; /// ### Fit status; ///; /// The status of the fit is obtained converting the TFitResultPtr to an integer; /// independently if the fit option ""S"" is used or not:; ///; /// ~~~ {.cpp}; /// TFitResultPtr r = h->Fit(myFunc,opt);; /// Int_t fitStatus = r;; /// ~~~; ///; /// - `status = 0` : the fit has been performed successfully (i.e no error occurred).; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:11227,error,error,11227,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability," 1,; one obtains the three distributions of Fig. 2.; Whereas the distribution of \f$\Delta E\f$ clearly indicates the presence of the signal,; the distribution of \f${m_{\rm ES}}\f$ and \f${\cal F}\f$ are less obviously populated by signal. \image html splot_genfiTOTNIM.png Figure 2 width=800. Distributions of the three discriminating variables for signal plus; background. The three distributions are the ones obtained from a data; sample obtained through a Monte Carlo simulation based on the; distributions shown in Fig.; 1.; The data sample consists of 500 signal events and 5000 background events. Choosing \f$\Delta E\f$ and \f${\cal F}\f$ as discriminating variables to determine; \f$N_1\f$ and \f$N_2\f$ through a maximum Likelihood fit, one builds, for the control; variable \f${m_{\rm ES}}\f$ which is unknown to the fit, the two \f$\hbox {$_s$}{\cal P}lots\f$; for signal and background shown in; Fig. 3.; One observes that the \f$\hbox{$_s$}{\cal P}lot\f$; for signal reproduces correctly the PDF even where the latter vanishes,; although the error bars remain sizeable. This results from the almost; complete cancellation between positive and negative weights: the sum of; weights is close to zero while the sum of weights squared is not. The; occurrence of negative weights occurs through the appearance of the; covariance matrix, and its negative components, in the definition of; Eq. (2). A word of caution is in order with respect to the error bars. Whereas; their sum in quadrature is identical to the statistical uncertainties; of the yields determined by the fit, and if, in addition, they are; asymptotically correct, the error bars should be handled with care for; low statistics and/or for too fine binning. This is because the error; bars do not incorporate two known properties of the PDFs: PDFs are; positive definite and can be non-zero in a given x-bin, even if in the; particular data sample at hand, no event is observed in this bin. The; latter limitation is not speci",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:8826,error,error,8826,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['error'],['error']
Availability," 100*ff+ll = ffll. - The two digits number `ll` represent the normal line width; - The two digits number `ff` represent the filled area width.; - The sign of ""ffll"" allows to flip the filled area from one side of the line to the other. The current fill area attributes are used to draw the hatched zone. Begin_Macro(source); ../../../tutorials/graphs/exclusiongraph.C; End_Macro. \anchor GrP3; ### Graphs with error bars; Three classes are available to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:5894,error,error,5894,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability," 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; End_Macro. The option ""0"" shows the error bars for data points outside range. Begin_Macro(source); {; auto c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0};; float err_y[] = {5,5,5};; float y[] = {1,4,9};; auto tg = new TGraphErrors(3,x,y,err_x,err_y);; c48->Divide(2,1);; c48->cd(1); gPad->DrawFrame(0,0,4,8); tg->Draw(""PC"");; c48->cd(2); gPad->DrawFrame(0,0,4,8); tg->Draw(""0PC"");; }; End_Macro. The option ""3"" shows the errors as a band. Begin_Macro(source); {; auto c41 = new TCanvas(""c41"",""c41"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a band"");; ge->SetFillColor(4);; ge->SetFillStyle(3010);; ge->Draw(""a3"");; }; End_Macro. The option ""4"" is similar to the option ""3"" except that the band; is smoothed. As the following picture shows, this option should be; used carefully because the smoothing algorithm may show some (huge); ""bouncing"" effects. In some cases it looks nicer than option ""3""; (because it is smooth) but it can be misleading. Begin_Macro(source); {; auto c42 = new TCanvas(""c42"",""c42"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a smooth band"");; ge->SetFillColor(6);; ge->SetFillStyle(3005);; ge->Draw(""a4"");; }; End_Macro. The following example shows how the option ""[]"" can be used to superimpose; systematic errors on top of a graph with statistical errors. Begin_Macro(source); {; auto c43 = new TCanvas(""c43"",""c43"",200,10,600,400);; c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:8848,Error,Errors,8848,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['Error'],['Errors']
Availability," ASVisual structure; * src - source ASImage; * horz - horizontal radius of the blurr; * vert - vertical radius of the blurr; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out - compression level of resulting image in range 0-100.; * quality - output quality; * RETURN VALUE; * returns newly created and encoded ASImage on success, NULL of failure.; *********/; /****f* libAfterImage/transform/fill_asimage(); * NAME; * fill_asimage() - Fills rectangle within the existing ASImage with ; * specified color.; * SYNOPSIS; * Bool fill_asimage( ASVisual *asv, ASImage *im,; * int x, int y, int width, int height,; * ARGB32 color );; * INPUTS; * asv - pointer to valid ASVisual structure; * im - ASImage to fill with the color; * x, y - left-top corner of the rectangle to fill.; * width, height - size of the rectangle to fill.; * color - ARGB32 color value to fill rectangle with.; * RETURN VALUE; * True on success, False on failure.; *********/; /****f* libAfterImage/transform/adjust_asimage_hsv(); * NAME; * adjust_asimage_hsv() - adjusts image color properties in HSV colorspace; * SYNOPSIS; * ASImage *adjust_asimage_hsv( ASVisual *asv, ASImage *src,; * int offset_x, int offset_y,; * unsigned int to_width,; * unsigned int to_height,; * unsigned int affected_hue,; * unsigned int affected_radius,; * int hue_offset, int saturation_offset,; * int value_offset,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality);; * INPUTS; * asv - pointer to valid ASVisual structure; * src - ASImage to adjust colors of.; * offset_x,; * offset_y - position on infinite surface tiled with original image,; * of the left-top corner of the area to be used for new; * image.; * to_width,; * to_height - size of the area of the original image to be used; * for new image.; * affected_hue - hue in degrees in range 0-360. This allows to limit; * impact of color adjustment to affect only limited; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:11529,failure,failure,11529,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['failure'],['failure']
Availability," Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its computed adler32; checksum is equal to that saved by the compressor and returns Z_STREAM_END; only if the checksum is correct. inflate() can decompress and check either zlib-wrapped or gzip-wrapped; deflate data. The header type is detected automatically, if requested when; initializing with inflateInit2(). Any information contained in the gzip; header is not retained, so applications that need that information should; instead use raw inflate, see inflateInit2() below, or inflateBack() and; perform their own processing of the gzip header and trailer. When processing; gzip-wrapped deflate data, strm->adler32 is set to the CRC-32 of the output; producted so far. The CRC-32 is checked against the gzip trailer. inflate() returns Z_OK if some progress has been made (more input processed; or more output produced), Z_STREAM_END if the end of the compressed data has; been reached and all uncompressed output has been produced, Z_NEED_DICT if a; preset dictionary is needed at this point, Z_DATA_ERROR if the input data was; corrupted (input stream not conforming to the zlib format or incorrect check; value), Z_STREAM_ERROR if the stream structure was inconsistent (for example; next_in or next_out was Z_NULL), Z_MEM_ERROR if there was not enough memory,; Z_BUF_ERROR if no progress is possible or if there was not enough room in the; output buffer when Z_FINISH is used. Note that Z_BUF_ERROR is not fatal, and; inflate() can be called again with more input and more output space to; continue decompressing. If Z_DATA_ERROR is returned, the application may; then call inflateSync() to look for a good compression block if a partial; recovery of the data is desired.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:6932,recover,recovery,6932,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['recover'],['recovery']
Availability," Canvas is an area mapped to a window directly under the control of the display; manager. A ROOT session may have several canvases open at any given time. A Canvas may be subdivided into independent graphical areas: the __Pads__.; A canvas has a default pad which has the name of the canvas itself.; An example of a Canvas layout is sketched in the picture below. \image html gpad_canvas.png. This canvas contains two pads named P1 and P2. Both Canvas, P1 and P2 can be; moved, grown, shrunk using the normal rules of the Display manager. Once objects have been drawn in a canvas, they can be edited/moved by pointing; directly to them. The cursor shape is changed to suggest the type of action that; one can do on this object. Clicking with the right mouse button on an object; pops-up a contextmenu with a complete list of actions possible on this object. A graphical editor may be started from the canvas ""View"" menu under the menu; entry ""Toolbar"". An interactive HELP is available by clicking on the HELP button at the top right; of the canvas. It gives a short explanation about the canvas' menus. A canvas may be automatically divided into pads via `TPad::Divide`. At creation time, no matter if in interactive or batch mode, the constructor; defines the size of the canvas window (including the size of the window; manager's decoration). To define precisely the graphics area size of a canvas in; the interactive mode, the following four lines of code should be used:; ~~~ {.cpp}; {; Double_t w = 600;; Double_t h = 600;; auto c = new TCanvas(""c"", ""c"", w, h);; c->SetWindowSize(w + (w - c->GetWw()), h + (h - c->GetWh()));; }; ~~~; and in the batch mode simply do:; ~~~ {.cpp}; c->SetCanvasSize(w,h);; ~~~. If the canvas size exceeds the window size, scroll bars will be added to the canvas; This allows to display very large canvases (even bigger than the screen size). The; Following example shows how to proceed.; ~~~ {.cpp}; {; auto c = new TCanvas(""c"",""c"");; c->SetCanvasSize(1500, 1500);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx:1030,avail,available,1030,graf2d/gpad/src/TCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx,1,['avail'],['available']
Availability," E Brotzman; * MR = Martin Reinecke; * WDP = William D Pence; * -- Kevin McCarty, for Debian (19 Dec. 2005) */; /*******; Modifications:; Oct 1997: Changed symbol name extname to appendus (PDW/HSTX); (Conflicted with a common variable name in FTOOLS); Nov 1997: If g77Fortran defined, also define f2cFortran (PDW/HSTX); Feb 1998: Let VMS see the NUM_ELEMS code. Lets programs treat; single strings as vectors with single elements; Nov 1999: If macintoxh defined, also define f2cfortran (for Mac OS-X); Apr 2000: If WIN32 defined, also define PowerStationFortran and; VISUAL_CPLUSPLUS (Visual C++); Jun 2000: If __GNUC__ and linux defined, also define f2cFortran; (linux/gcc environment detection); Apr 2002: If __CYGWIN__ is defined, also define f2cFortran; Nov 2002: If __APPLE__ defined, also define f2cfortran (for Mac OS-X). Nov 2003: If __INTEL_COMPILER or INTEL_COMPILER defined, also define; f2cFortran (KMCCARTY); Dec 2005: If f2cFortran is defined, enforce REAL functions in FORTRAN; returning ""double"" in C. This was one of the items on; Burkhard's TODO list. (KMCCARTY); Dec 2005: Modifications to support 8-byte integers. (MR); USE AT YOUR OWN RISK!; Feb 2006 Added logic to typedef the symbol 'LONGLONG' to an appropriate; intrinsic 8-byte integer datatype (WDP); Apr 2006: Modifications to support gfortran (and g77 with -fno-f2c flag); since by default it returns ""float"" for FORTRAN REAL function.; (KMCCARTY); May 2008: Revert commenting out of ""extern"" in COMMON_BLOCK_DEF macro.; Add braces around do-nothing "";"" in 3 empty while blocks to; get rid of compiler warnings. Thanks to ROOT developers; Jacek Holeczek and Rene Brun for these suggestions. (KMCCARTY); *******/; /*; Avoid symbols already used by compilers and system *.h:; __ - OSF1 zukal06 V3.0 347 alpha, cc -c -std1 cfortest.c. */; /*; Determine what 8-byte integer data type is available.; 'long long' is now supported by most compilers, but older; MS Visual C++ compilers before V7.0 use '__int64' instead. (WDP); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:2281,avail,available,2281,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['avail'],['available']
Availability," It is sometimes necessary to limit the processing of the dataset to a range of entries. For this reason, the RDataFrame; offers the concept of ranges as a node of the RDataFrame chain of transformations; this means that filters, columns and; actions can be concatenated to and intermixed with Range()s. If a range is specified after a filter, the range will act; exclusively on the entries passing the filter -- it will not even count the other entries! The same goes for a Range(); hanging from another Range(). Here are some commented examples:; ~~~{.cpp}; RDataFrame d(""myTree"", ""file.root"");; // Here we store a dataframe that loops over only the first 30 entries in a variable; auto d30 = d.Range(30);; // This is how you pick all entries from 15 onwards; auto d15on = d.Range(15, 0);; // We can specify a stride too, in this case we pick an event every 3; auto d15each3 = d.Range(0, 15, 3);; ~~~; Note that ranges are not available when multi-threading is enabled. More information on ranges is available; [here](#ranges). ### Executing multiple actions in the same event loop; As a final example let us apply two different cuts on branch ""MET"" and fill two different histograms with the ""pt_v"" of; the filtered events.; By now, you should be able to easily understand what is happening:; ~~~{.cpp}; RDataFrame d(""treeName"", ""file.root"");; auto h1 = d.Filter(""MET > 10"").Histo1D(""pt_v"");; auto h2 = d.Histo1D(""pt_v"");; h1->Draw(); // event loop is run once here; h2->Draw(""SAME""); // no need to run the event loop again; ~~~; RDataFrame executes all above actions by **running the event-loop only once**. The trick is that actions are not; executed at the moment they are called, but they are **lazy**, i.e. delayed until the moment one of their results is; accessed through the smart pointer. At that time, the event loop is triggered and *all* results are produced; simultaneously. ### Properly exploiting RDataFrame laziness. For yet another example of the difference between the correct an",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:24666,avail,available,24666,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability," Minimum covariance Determinant Estimator""; Technometrics, August 1999, Vol.41, NO.3. What are robust estimators?; ""An important property of an estimator is its robustness. An estimator; is called robust if it is insensitive to measurements that deviate; from the expected behaviour. There are 2 ways to treat such deviating; measurements: one may either try to recognise them and then remove; them from the data sample; or one may leave them in the sample, taking; care that they do not influence the estimate unduly. In both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected.""; R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz; ""Data Analysis Techniques for High-Energy Physics"", 2nd edition. What does this algorithm do?; It computes a highly robust estimator of multivariate location and scatter.; Then, it takes those estimates to compute robust distances of all the; data vectors. Those with large robust distances are considered outliers.; Robust distances can then be plotted for better visualization of the data. How does this algorithm do it?; The MCD objective is to find h observations(out of n) whose classical; covariance matrix has the lowest determinant. The MCD estimator of location; is then the average of those h points and the MCD estimate of scatter; is their covariance matrix. The minimum(and default) h = (n+nvariables+1)/2; so the algorithm is effective when less than (n+nvar+1)/2 variables are outliers.; The algorithm also allows for exact fit situations - that is, when h or more; observations lie on a hyperplane. Then the algorithm still yields the MCD location T; and scatter matrix S, the latter being singular as it should be. From (T,S) the; program then computes the equation of the hyperplane. How can this algorithm be used?; In any case, when contamination of data is suspected, that might influence; th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx:1749,robust,robust,1749,math/physics/src/TRobustEstimator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx,1,['robust'],['robust']
Availability," P_{\mathrm{ext}}} = 0; \f]. #### Getting the right parameter errors with limits. In the best case, where the minimum is far from any limits, MINUIT will; correctly transform the error matrix, and the parameter errors it reports; should be accurate and very close to those you would have got without; limits. In other cases (which should be more common, since otherwise you; wouldn't need limits), the very meaning of parameter errors becomes; problematic. Mathematically, since the limit is an absolute constraint on; the parameter, a parameter at its limit has no error, at least in one; direction. The error matrix, which can assign only symmetric errors, then; becomes essentially meaningless. ### Interpretation of Parameter Errors:. There are two kinds of problems that can arise: the reliability of; MINUIT's error estimates, and their statistical interpretation, assuming; they are accurate. ### Statistical interpretation:. For discussion of basic concepts, such as the meaning of the elements of; the error matrix, or setting of exact confidence levels see:. 1. F.James.; Determining the statistical Significance of experimental Results.; Technical Report DD/81/02 and CERN Report 81-03, CERN, 1981. 2. W.T.Eadie, D.Drijard, F.James, M.Roos, and B.Sadoulet.; Statistical Methods in Experimental Physics.; North-Holland, 1971. ### Reliability of MINUIT error estimates. MINUIT always carries around its own current estimates of the parameter; errors, which it will print out on request, no matter how accurate they; are at any given point in the execution. For example, at initialization,; these estimates are just the starting step sizes as specified by the user.; After a HESSE step, the errors are usually quite accurate,; unless there has been a problem. MINUIT, when it prints out error values,; also gives some indication of how reliable it thinks they are. For; example, those marked <TT>CURRENT GUESS ERROR</TT> are only working values; not to be believed, and <TT>APPROXIMATE ERROR<",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:7779,error,error,7779,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['error']
Availability," Plot:; 'Contour' : ComboBox: draw a contour plot (None, Cont0..4); 'Cont #' : TGNumberEntry: set the number of Contours; 2d Plot checkboxes:; 'Arrow' : arrow mode. Shows gradient between adjacent cells; 'Col' : a box is drawn for each cell with a color scale; varying with contents; 'Text' : Draw bin contents as text; 'Box' : a box is drawn for each cell with surface; proportional to contents; 'Scat' : Draw a scatter-plot (default); 'Palette' : the color palette is drawn. 3d Plot:; 'Type' : ComboBox: set histogram type Lego or Surface-Plot; draw(Lego, Lego1..4, Surf, Surf1..5); see THistPainter::Paint; 'Coords' : ComboBox: set the coordinate system (Cartesian, ..; Spheric) see THistPainter::Paint; 'Cont #' : TGNumberEntry: set the number of Contours (for e.g.; Lego2 drawoption; 3d Plot checkboxes:; 'Errors' : draw errors in a cartesian lego plot; 'Palette' : the color palette is drawn; 'Front' : draw the front box of a cartesian lego plot; 'Back' : draw the back box of a cartesian lego plot; Available for a 3D lego plot:; 'Bar' : change the bar attributes; 'W' : change Bar Width; 'O' : change Bar Offset; Further Editor:; 'Marker' : change the Marker attributes (color, appearance,; thickness) see TAttMarkerEditor. Rebinning Tab:; This Tab has two different layouts. One is for a histogram which; is not drawn from an ntuple. The other one is available for a; histogram which is drawn from an ntuple. In this case the rebin; algorithm can create a rebinned histogram from the original data; i.e. the ntuple.; To see te differences do for example:; TFile f(""hsimple.root"");; hpxpy->Draw(""Lego2""); // non ntuple histogram; ntuple->Draw(""px:py"","""",""Lego2""); // ntuple histogram; Non ntuple histogram:; 'Rebin': with the Sliders (one for the x, one for the y axis); the number of bins (shown in the field below the; Slider) can be changed to any number which divides; the number of bins of the original histogram.; Pushing 'Apply' will delete the origin histogram and; replace it by the ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH2Editor.cxx:1973,Error,Errors,1973,gui/ged/src/TH2Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH2Editor.cxx,3,"['Avail', 'Error', 'error']","['Available', 'Errors', 'errors']"
Availability," Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file VarLocBasedImpl.cpp; ///; /// LiveDebugValues is an optimistic ""available expressions"" dataflow; /// algorithm. The set of expressions is the set of machine locations; /// (registers, spill slots, constants, and target indices) that a variable; /// fragment might be located, qualified by a DIExpression and indirect-ness; /// flag, while each variable is identified by a DebugVariable object. The; /// availability of an expression begins when a DBG_VALUE instruction specifies; /// the location of a DebugVariable, and continues until that location is; /// clobbered or re-specified by a different DBG_VALUE for the same; /// DebugVariable.; ///; /// The output of LiveDebugValues is additional DBG_VALUE instructions,; /// placed to extend variable locations as far they're available. This file; /// and the VarLocBasedLDV class is an implementation that explicitly tracks; /// locations, using the VarLoc class.; ///; /// The canonical ""available expressions"" problem doesn't have expression; /// clobbering, instead when a variable is re-assigned, any expressions using; /// that variable get invalidated. LiveDebugValues can map onto ""available; /// expressions"" by having every register represented by a variable, which is; /// used in an expression that becomes available at a DBG_VALUE instruction.; /// When the register is clobbered, its variable is effectively reassigned, and; /// expressions computed from it become unavailable. A similar construct is; /// needed when a DebugVariable has its location re-specified, to invalidate; /// all other locations for that DebugVariable.; ///; /// Using the dataflow analysis to compute the available expressions, we create; /// a DBG_VALUE at the beginning of",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:1168,avail,available,1168,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,1,['avail'],['available']
Availability," TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; End_Macro. The option ""0"" shows the error bars for data points outside range. Begin_Macro(source); {; auto c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0};; float err_y[] = {5,5,5};; float y[] = {1,4,9};; auto tg = new TGraphErrors(3,x,y,err_x,err_y);; c48->Divide(2,1);; c48->cd(1); gPad->DrawFrame(0,0,4,8); tg->Draw(""PC"");; c48->cd(2); gPad->DrawFrame(0,0,4,8); tg->Draw(""0PC"");; }; End_Macro. The option ""3"" shows the errors as a band. Begin_Macro(source); {; auto c41 = new TCanvas(""c41"",""c41"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a band"");; ge->SetFillColor(4);; ge->SetFillStyle(3010);; ge->Draw(""a3"");; }; End_Macro. The option ""4"" is similar to the option ""3"" except that the band; is smoothed. As the following picture shows, this option should be; used carefully because the smoothing algorithm may show some (huge); ""bouncing"" effects. In some cases it looks nicer than option ""3""; (because it is smooth) but it can be misleading. Begin_Macro(source); {; auto c42 = new TCanvas(""c42"",""c42"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:8553,error,errors,8553,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['errors']
Availability," The currently loaded macro can be compiled with ACLiC if you select; Tools menu / Compile Macro; by clicking on the corresponding; toolbar button, or by using Ctrl+F7 accelerator keys.; This is identical to the command "".L macro.C++"" in the root prompt; command line. #### Interrupting a Running Macro. You can interrupt a running macro by selecting the Tools menu /; Interrupt; by clicking on the corresponding toolbar button, or by; using Shift+F5 accelerator keys. #### Interface to CINT Interpreter. Any command entered in the Command combo box will be passed to; the CINT interpreter. This combo box will keep the commands history; and will allow you to re-execute the same commands during an editor; session. #### Keyboard Bindings. The following table lists the keyboard shortcuts and accelerator; keys. | Key: | Action |; |---------------|----------------|; | Up | Move cursor up. |; | Shift+Up | Move cursor up and extend selection. |; | Down | Move cursor down. |; | Shift+Down | Move cursor down and extend selection. |; | Left | Move cursor left. |; | Shift+Left | Move cursor left and extend selection. |; | Right | Move cursor right. |; | Shift+Right | Move cursor right and extend selection. |; | Home | Move cursor to begin of line. |; | Shift+Home | Move cursor to begin of line and extend selection. |; | Ctrl+Home | Move cursor to top of page. |; | End | Move cursor to end of line. |; | Shift+End | Move cursor to end of line and extend selection. |; | Ctrl+End | Move cursor to end of page. |; | PgUp | Move cursor up one page. |; | Shift+PgUp | Move cursor up one page and extend selection. |; | PgDn | Move cursor down one page. |; | Shift+PgDn | Move cursor down one page and extend selection. |; | Delete | Delete character after cursor, or text selection. |; | BackSpace | Delete character before cursor, or text selection. |; | Ctrl+B | Move cursor left. |; | Ctrl+D | Delete character after cursor, or text selection. |; | Ctrl+E | Move cursor to end of line. |; | Ctrl+H ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx:4470,Down,Down,4470,gui/gui/src/TGTextEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx,2,"['Down', 'down']","['Down', 'down']"
Availability," The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the x-Errors with %f similar to `gStyle->SetErrorX(dx)` but does not affect them directly (Useful when used in addition with box errors to make the box only half as wide as the x-Errors e.g. s=0.5) |; | ""S"" | First one only | Use individual TAttFill and TAttLine attributes for the different error dimensions instead of the global ones. |. Per default the Fill and Line Styles of the Graph are being used for all error; dimensions. To use the specific ones add the draw option ""S"" to the first block. Begin_Macro(source); {; auto c47 = new TCanvas(""c47"",""c47"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double aexh[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double* aeylstat = new double[5] {1, 0.5, 1, 0.5, 1};; double* aeyhstat = new double[5] {0.5, 1, 0.5, 1, 0.5};; double* aeylsys = new double[5] {0.5, 0.4, 0.8, 0.3, 1.2};; double* aeyhsys = new double[5] {0.6, 0.7, 0.6, 0.4, 0.8};. TGraphMultiErrors* gme = new TGraphMultiErrors(""gme"", ""TGraphMultiErrors Example"", 5, ax, ay, aexl, aexh, aeylstat, aeyhstat);; gme->AddYError(5, aeylsys, aeyhsys);; gme->SetMarkerStyle(20);; gme->SetLineColor(kRed);; gme->GetAttLine(0)->SetLineColor(kRed);; gme->GetAttLine(1)->SetLineColor(kBlue);; gme",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:14365,error,error,14365,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability," \alpha}{N + \alpha + \beta}; \f]. Optionally the mode can also be used as a value for the estimated efficiency. This can be done by calling; SetBit(kPosteriorMode) or TEfficiency::SetPosteriorMode. In this case, the estimated efficiency is:. \f[; \hat{\varepsilon} = \frac{k + \alpha -1}{N + \alpha + \beta - 2}; \f]. In the case of a uniform prior distribution, B(x,1,1), the posterior mode is k/n, equivalent to the frequentist; estimate (the maximum likelihood value). The statistic options also specify which confidence interval is used for calculating; the uncertainties of the efficiency. The following properties define the error; calculation:; - **fConfLevel:** desired confidence level: 0 < fConfLevel < 1 (TEfficiency::GetConfidenceLevel / TEfficiency::SetConfidenceLevel); - **fStatisticOption** defines which method is used to calculate the boundaries of the confidence interval (TEfficiency::SetStatisticOption); - **fBeta_alpha, fBeta_beta:** parameters for the prior distribution which is only used in the bayesian case (TEfficiency::GetBetaAlpha / TEfficiency::GetBetaBeta / TEfficiency::SetBetaAlpha / TEfficiency::SetBetaBeta); - **kIsBayesian:** flag whether bayesian statistics are used or not (TEfficiency::UsesBayesianStat); - **kShortestInterval:** flag whether shortest interval (instead of central one) are used in case of Bayesian statistics (TEfficiency::UsesShortestInterval). Normally shortest interval should be used in combination with the mode (see TEfficiency::UsesPosteriorMode); - **fWeight:** global weight for this TEfficiency object which is used during combining or merging with other TEfficiency objects(TEfficiency::GetWeight / TEfficiency::SetWeight). In the following table, the implemented confidence intervals are listed; with their corresponding statistic option. For more details on the calculation,; please have a look at the mentioned functions. | name | statistic option | function | kIsBayesian | parameters |; |------------------|-----------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:8922,error,error,8922,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['error'],['error']
Availability," \pi i}\int_{c-i\infty}^{c+i\infty} \phi(s) e^{\lambda_L s} ds\f]; where \f$\phi(s) = e^{C} e^{\psi(s)}\f$; with \f$ C = \kappa (1+\beta^2 \gamma )\f$; and \f$\psi(s)= s \ln \kappa + (s+\beta^2 \kappa); \cdot \left ( \int \limits_{0}^{1}; \frac{1 - e^{\frac{-st}{\kappa}}}{t} \,d t- \gamma \right ); - \kappa \, e^{\frac{-s}{\kappa}}\f$.; \f$ \gamma = 0.5772156649\dots\f$ is Euler's constant. For the class Vavilov,; Pdf returns the Vavilov distribution as function of Landau's parameter; \f$\lambda_L = \lambda_V/\kappa - \ln \kappa\f$,; which is the convention used in the CERNLIB routines, and in the tables; by S.M. Seltzer and M.J. Berger: Energy loss stragglin of protons and mesons:; Tabulation of the Vavilov distribution, pp 187-203; in: National Research Council (U.S.), Committee on Nuclear Science:; Studies in penetration of charged particles in matter,; Nat. Akad. Sci. Publication 1133,; Nucl. Sci. Series Report No. 39,; Washington (Nat. Akad. Sci.) 1964, 388 pp.; Available from; <A HREF=""http://books.google.de/books?id=kmMrAAAAYAAJ&lpg=PP9&pg=PA187#v=onepage&q&f=false"">Google books</A>. Therefore, for small values of \f$\kappa < 0.01\f$,; pdf approaches the Landau distribution. For values \f$\kappa > 10\f$, the Gauss approximation should be used; with \f$\mu\f$ and \f$\sigma\f$ given by Vavilov::Mean(kappa, beta2); and sqrt(Vavilov::Variance(kappa, beta2). The original Vavilov pdf is obtained by; v.Pdf(lambdaV/kappa-log(kappa))/kappa. Two subclasses are provided:; - VavilovFast uses the algorithm by; A. Rotondi and P. Montagna, Fast calculation of Vavilov distribution,; <A HREF=""http://dx.doi.org/10.1016/0168-583X(90)90749-K"">Nucl. Instr. and Meth. B47 (1990) 215-224</A>,; which has been implemented in; <A HREF=""https://cern-tex.web.cern.ch/cern-tex/shortwrupsdir/g115/top.html"">; CERNLIB (G115)</A>. - VavilovAccurate uses the algorithm by; B. Schorr, Programs for the Landau and the Vavilov distributions and the corresponding random numbers,; <A HREF=""http://dx.d",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Vavilov.h:1442,Avail,Available,1442,math/mathmore/inc/Math/Vavilov.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Vavilov.h,1,['Avail'],['Available']
Availability," `expectedEvents()` function.; ///; /// \param[in] sumEntries The number of observed events.; /// \param[in] nset The normalization set when asking the pdf for the expected; /// number of events.; /// \param[in] observedSumW2 The number of observed events when weighting with; /// squared weights. If non-zero, the weight-squared error; /// correction is applied to the extended term.; /// \param[in] doOffset Offset the extended term by a counterterm where the; /// expected number of events equals the observed number of events.; /// This constant shift results in a term closer to zero that is; /// approximately chi-square distributed. It is useful to do this; /// also when summing multiple NLL terms to avoid numeric precision; /// loss that happens if you sum multiple terms of different orders; /// of magnitude.; ///; /// The weight-squared error correction works as follows:; /// adjust poisson such that; /// estimate of \f$N_\mathrm{expect}\f$ stays at the same value, but has a different variance, rescale; /// both the observed and expected count of the Poisson with a factor \f$ \sum w_{i} / \sum w_{i}^2 \f$; /// (the effective weight of the Poisson term),; /// i.e., change \f$\mathrm{Poisson}(N_\mathrm{observed} = \sum w_{i} | N_\mathrm{expect} )\f$; /// to \f$ \mathrm{Poisson}(\sum w_{i} \cdot \sum w_{i} / \sum w_{i}^2 | N_\mathrm{expect} \cdot \sum w_{i} / \sum w_{i}^2 ) \f$,; /// weighted by the effective weight \f$ \sum w_{i}^2 / \sum w_{i} \f$ in the likelihood.; /// Since here we compute the likelihood with the weight square, we need to multiply by the; /// square of the effective weight:; /// - \f$ W_\mathrm{expect} = N_\mathrm{expect} \cdot \sum w_{i} / \sum w_{i}^2 \f$ : effective expected entries; /// - \f$ W_\mathrm{observed} = \sum w_{i} \cdot \sum w_{i} / \sum w_{i}^2 \f$ : effective observed entries; ///; /// The extended term for the likelihood weighted by the square of the weight will be then:; ///; /// \f$ \left(\sum w_{i}^2 / \sum w_{i}\right)^2 \cd",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:1270,error,error,1270,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['error'],['error']
Availability," `x,y,z,t` or; `x[0],x[1],x[2],x[3],....x[N]` for N-dimensional formulas. This class is not anymore the base class for the function classes `TF1`, but it has now; a data member of TF1 which can be accessed via `TF1::GetFormula`. TFormula supports gradient and hessian calculations through clad.; To calculate the gradient one needs to first declare a `CladStorage` of the; same size as the number of parameters and then pass the variables and the; created `CladStorage`:. ```; TFormula f(""f"", ""x*[0] - y*[1]"");; Double_t p[] = {40, 30};; Double_t x[] = {1, 2};; f.SetParameters(p);; TFormula::CladStorage grad(2);; f.GradientPar(x, grad);; ```. The process is similar for hessians, except that the size of the created; CladStorage should be the square of the number of parameters because; `HessianPar` returns a flattened matrix:. ```; TFormula::CladStorage hess(4);; f.HessianPar(x, hess);; ```. \anchor FormulaFuncs; ### List of predefined functions. The list of available predefined functions which can be used as shortcuts is the following:; 1. One Dimensional functions:; - `gaus` is a substitute for `[Constant]*exp(-0.5*((x-[Mean])/[Sigma])*((x-[Mean])/[Sigma]))`; - `landau` is a substitute for `[Constant]*TMath::Landau (x,[MPV],[Sigma],false)`; - `expo` is a substitute for `exp([Constant]+[Slope]*x)`; - `crystalball` is substitute for `[Constant]*ROOT::Math::crystalball_function (x,[Alpha],[N],[Sigma],[Mean])`; - `breitwigner` is a substitute for `[p0]*ROOT::Math::breitwigner_pdf (x,[p2],[p1])`; - `pol0,1,2,...N` is a substitute for a polynomial of degree `N` :; `([p0]+[p1]*x+[p2]*pow(x,2)+....[pN]*pow(x,N)`; - `cheb0,1,2,...N` is a substitute for a Chebyshev polynomial of degree `N`:; `ROOT::Math::Chebyshev10(x,[p0],[p1],[p2],...[pN])`. Note the maximum N allowed here is 10.; 2. Two Dimensional functions:; - `xygaus` is a substitute for `[Constant]*exp(-0.5*pow(((x-[MeanX])/[SigmaX]),2 )- 0.5*pow(((y-[MeanY])/[SigmaY]),2))`, a 2d Gaussian without correlation.; - `bigaus` is ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:3963,avail,available,3963,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['avail'],['available']
Availability," a row at; * a time). Direct algorithms are also available, but they are much more; * complex and seem not to be any faster when reduced to code.; *; * This implementation is based on an algorithm described in; * C. Loeffler, A. Ligtenberg and G. Moschytz, ""Practical Fast 1-D DCT; * Algorithms with 11 Multiplications"", Proc. Int'l. Conf. on Acoustics,; * Speech, and Signal Processing 1989 (ICASSP '89), pp. 988-991.; * The primary algorithm described there uses 11 multiplies and 29 adds.; * We use their alternate method with 12 multiplies and 32 adds.; * The advantage of this method is that no data path contains more than one; * multiplication; this allows a very simple and accurate implementation in; * scaled fixed-point arithmetic, with a minimal number of shifts.; *; * We also provide IDCT routines with various output sample block sizes for; * direct resolution reduction or enlargement and for direct resolving the; * common 2x1 and 1x2 subsampling cases without additional resampling: NxN; * (N=1...16), 2NxN, and Nx2N (N=1...8) pixels for one 8x8 input DCT block.; *; * For N<8 we simply take the corresponding low-frequency coefficients of; * the 8x8 input DCT block and apply an NxN point IDCT on the sub-block; * to yield the downscaled outputs.; * This can be seen as direct low-pass downsampling from the DCT domain; * point of view rather than the usual spatial domain point of view,; * yielding significant computational savings and results at least; * as good as common bilinear (averaging) spatial downsampling.; *; * For N>8 we apply a partial NxN IDCT on the 8 input coefficients as; * lower frequencies and higher frequencies assumed to be zero.; * It turns out that the computational effort is similar to the 8x8 IDCT; * regarding the output size.; * Furthermore, the scaling and descaling is the same for all IDCT sizes.; *; * CAUTION: We rely on the FIX() macro except for the N=1,2,4,8 cases; * since there would be too many additional constants to pre-calculate.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c:1859,down,downscaled,1859,graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c,3,['down'],"['downsampling', 'downscaled']"
Availability," a time, we can generate; /// multiple machine basic blocks for one IR level basic block.; /// This is how we handle bit tests and switches.; ///; /// 2. At the MI level, tail calls are represented via a special return; /// MIInst called ""tcreturn"". Thus if we know the basic block in which we; /// wish to insert the stack protector check, we get the correct behavior; /// by always inserting the stack protector check right before the return; /// statement. This is a ""magical transformation"" since no matter where; /// the stack protector check intrinsic is, we always insert the stack; /// protector check code at the end of the BB.; ///; /// Given the aforementioned constraints, the following solution was devised:; ///; /// 1. On platforms that do not support ISel stack protector check; /// generation, allow for the normal IR level stack protector check; /// generation to continue.; ///; /// 2. On platforms that do support ISel stack protector check; /// generation:; ///; /// a. Use the IR level stack protector pass to decide if a stack; /// protector is required/which BB we insert the stack protector check; /// in by reusing the logic already therein.; ///; /// b. After we finish selecting the basic block, we produce the validation; /// code with one of these techniques:; /// 1) with a call to a guard check function; /// 2) with inlined instrumentation; ///; /// 1) We insert a call to the check function before the terminator.; ///; /// 2) We first find a splice point in the parent basic block; /// before the terminator and then splice the terminator of said basic; /// block into the success basic block. Then we code-gen a new tail for; /// the parent basic block consisting of the two loads, the comparison,; /// and finally two branches to the success/failure basic blocks. We; /// conclude by code-gening the failure basic block if we have not; /// code-gened it already (all stack protector checks we generate in; /// the same function, use the same failure basic block).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenCommonISel.h:4625,failure,failure,4625,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenCommonISel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenCommonISel.h,3,['failure'],['failure']
Availability," accurate, although there is always a small chance that MINUIT; has been fooled. Some visible signs that MINUIT may have been fooled are:. 1. Warning messages produced during the minimization or error analysis. 2. Failure to find new minimum. 3. Value of <TT>EDM</TT> too big (estimated Distance to Minimum). 4. Correlation coefficients exactly equal to zero, unless some parameters; are known to be uncorrelated with the others. 5. Correlation coefficients very close to one (greater than 0.99). This; indicates both an exceptionally difficult problem, and one which has been; badly parameterised so that individual errors are not very meaningful; because they are so highly correlated. 6. Parameter at limit. This condition, signalled by a MINUIT warning; message, may make both the function minimum and parameter errors; unreliable. See the discussion above ``Getting the right parameter errors; with limits''. The best way to be absolutely sure of the errors, is to use; ``independent'' calculations and compare them, or compare the calculated; errors with a picture of the function. Theoretically, the covariance; matrix for a ``physical'' function must be positive-definite at the; minimum, although it may not be so for all points far away from the; minimum, even for a well-determined physical problem. Therefore, if MIGRAD; reports that it has found a non-positive-definite covariance matrix, this; may be a sign of one or more of the following:. ##### A non-physical region:. On its way to the minimum, MIGRAD may have traversed a region which has; unphysical behaviour, which is of course not a serious problem as long as; it recovers and leaves such a region. ##### An underdetermined problem:. If the matrix is not positive-definite even at the minimum, this may mean; that the solution is not well-defined, for example that there are more; unknowns than there are data points, or that the parameterisation of the; fit contains a linear dependence. If this is the case, then MINUIT (or a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:9912,error,errors,9912,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,2,['error'],['errors']
Availability," an estimator is its robustness. An estimator; is called robust if it is insensitive to measurements that deviate; from the expected behaviour. There are 2 ways to treat such deviating; measurements: one may either try to recognise them and then remove; them from the data sample; or one may leave them in the sample, taking; care that they do not influence the estimate unduly. In both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected.""; R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz; ""Data Analysis Techniques for High-Energy Physics"", 2nd edition. What does this algorithm do?; It computes a highly robust estimator of multivariate location and scatter.; Then, it takes those estimates to compute robust distances of all the; data vectors. Those with large robust distances are considered outliers.; Robust distances can then be plotted for better visualization of the data. How does this algorithm do it?; The MCD objective is to find h observations(out of n) whose classical; covariance matrix has the lowest determinant. The MCD estimator of location; is then the average of those h points and the MCD estimate of scatter; is their covariance matrix. The minimum(and default) h = (n+nvariables+1)/2; so the algorithm is effective when less than (n+nvar+1)/2 variables are outliers.; The algorithm also allows for exact fit situations - that is, when h or more; observations lie on a hyperplane. Then the algorithm still yields the MCD location T; and scatter matrix S, the latter being singular as it should be. From (T,S) the; program then computes the equation of the hyperplane. How can this algorithm be used?; In any case, when contamination of data is suspected, that might influence; the classical estimates.; Also, robust estimation of location and scatter is a tool to robustify; other multivariate techniques such as, for e",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx:1852,Robust,Robust,1852,math/physics/src/TRobustEstimator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx,1,['Robust'],['Robust']
Availability," and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAbsCategory.cxx; \class RooAbsCategory; \ingroup Roofitcore. RooAbsCategory is the base class for objects that represent a discrete value with a finite number of states. Each state is denoted by an integer and a name. Both can be used to retrieve and; set states, but referring to states by index is more efficient. Conversion between; index and name can be done using lookupName() or lookupIndex().; It is possible to iterate through all defined states using begin() and end(). For category classes deriving from RooAbsCategory, states can only be evaluated, *i.e.*, queried.; Refer to RooAbsCategoryLValue and its derived classes for categories where states can also be set. The; simplest category class whose states can be set, queried and saved in a dataset, refer to RooCategory. ### Interface change in ROOT-6.22; Category data were based in the class RooCatType, holding an index state and a category name truncated to 256; characters. This wastes 64 bytes of storage space per entry, and prevents fast retrieval of category data.; Since ROOT-6.22, categories are only represented by an integer. RooAbsCategory::lookupName() can be used to; retrieve the corresponding state name. There is no limit for the length of the state name. To not break old code, the old RooCatType interfaces are still available. Whenever possible,; the following replacements should be used:; - lookupType() \f$ \rightarrow \f$ lookupName() / lookupIndex(); - typeIterator() \f$ \rightarrow \f$ range-based for loop / begin() / end(); - isValidIndex(Int_t index) \f$ \rightarrow \f$ hasIndex(); - isValid(const RooCatType&) \f$ \rightarrow \f$ hasIndex() / hasLabel(); **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCategory.cxx:2011,avail,available,2011,roofit/roofitcore/src/RooAbsCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCategory.cxx,1,['avail'],['available']
Availability," and \a B. Returns 1 if the length of the string in \a A is less than; /// the maximum, otherwise, returns 0.; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// int _mm_cmpestrs(__m128i A, int LA, __m128i B, int LB, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VPCMPESTRI / PCMPESTRI </c>; /// instruction.; ///; /// \param A; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param LA; /// An integer that specifies the length of the string in \a A.; /// \param B; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param LB; /// An integer that specifies the length of the string in \a B.; /// \param M; /// An 8-bit immediate operand specifying whether the characters are bytes or; /// words and the type of comparison to perform. \n; /// Bits [1:0]: Determine source data format. \n; /// 00: 16 unsigned bytes \n; /// 01: 8 unsigned words \n; /// 10: 16 signed bytes \n; /// 11: 8 signed words \n; /// Bits [3:2]: Determine comparison type and aggregation method. \n; /// 00: Subset: Each character in \a B is compared for equality with all; /// the characters in \a A. \n; /// 01: Ranges: Each character in \a B is compared to \a A. The comparison; /// basis is greater than or equal for even-indexed elements in \a A,; /// and less than or equal for odd-indexed elements in \a A. \n; /// 10: Match: Compare each pair of corresponding characters in \a A and; /// \a B for equality. \n; /// 11: Substring: Search \a B for substring matches of \a A. \n; /// Bits [5:4]: Determine whether to perform a one's complement in the bit; /// mask of the comparison results. \n; /// 00: No effect. \n; /// 01: Negate the bit mask. \n; /// 10: No effect. \n; /// 11: Negate the bit mask only for bits with an index less than or equal; /// to the size of \a A or \a B. \n; /// \returns Returns 1 if the length of the string in \a A is less than the; /// maximum, otherwise, returns 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:1819,mask,mask,1819,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,3,['mask'],['mask']
Availability," arbitrary 'detail' string. The resulting trace will include 'Total'; // entries summing the time spent for each name. Thus, it's best to choose; // names to be fairly generic, and rely on the detail field to capture; // everything else of interest.; //; // To avoid lifetime issues name and detail strings are copied into the event; // entries at their time of creation. Care should be taken to make string; // construction cheap to prevent 'Heisenperf' effects. In particular, the; // 'detail' argument may be a string-returning closure:; //; // \code; // int n;; // {; // TimeTraceScope scope(""my_event_name"",; // [n]() { return (Twine(""x="") + Twine(n)).str(); });; // ...my code...; // }; // \endcode; // The closure will not be called if tracing is disabled. Otherwise, the; // resulting string will be directly moved into the entry.; //; // The main process should begin with a timeTraceProfilerInitialize, and; // finish with timeTraceProfileWrite and timeTraceProfilerCleanup calls.; // Each new thread should begin with a timeTraceProfilerInitialize, and; // finish with a timeTraceProfilerFinishThread call.; //; // Timestamps come from std::chrono::stable_clock. Note that threads need; // not see the same time from that clock, and the resolution may not be; // the best available.; //; // Currently, there are a number of compatible viewers:; // - chrome://tracing is the original chromium trace viewer.; // - http://ui.perfetto.dev is the replacement for the above, under active; // development by Google as part of the 'Perfetto' project.; // - https://www.speedscope.app/ has also been reported as an option.; //; // Future work:; // - Support akin to LLVM_DEBUG for runtime enable/disable of named tracing; // families for non-debug builds which wish to support optional tracing.; // - Evaluate the detail closures at profile write time to avoid; // stringification costs interfering with tracing.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TimeProfiler.h:2411,avail,available,2411,interpreter/llvm-project/llvm/include/llvm/Support/TimeProfiler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TimeProfiler.h,1,['avail'],['available']
Availability," are reserved and cannot appear anywhere within a; // replacement sequence. Outside of a replacement sequence, in order to print; // a literal '{' it must be doubled as ""{{"".; //; // ===Parameter Indexing===; //; // `index` specifies the index of the parameter in the parameter pack to format; // into the output. Note that it is possible to refer to the same parameter; // index multiple times in a given format string. This makes it possible to; // output the same value multiple times without passing it multiple times to the; // function. For example:; //; // formatv(""{0} {1} {0}"", ""a"", ""bb""); //; // would yield the string ""abba"". This can be convenient when it is expensive; // to compute the value of the parameter, and you would otherwise have had to; // save it to a temporary.; //; // ===Formatter Search===; //; // For a given parameter of type T, the following steps are executed in order; // until a match is found:; //; // 1. If the parameter is of class type, and inherits from format_adapter,; // Then format() is invoked on it to produce the formatted output. The; // implementation should write the formatted text into `Stream`.; // 2. If there is a suitable template specialization of format_provider<>; // for type T containing a method whose signature is:; // void format(const T &Obj, raw_ostream &Stream, StringRef Options); // Then this method is invoked as described in Step 1.; // 3. If an appropriate operator<< for raw_ostream exists, it will be used.; // For this to work, (raw_ostream& << const T&) must return raw_ostream&.; //; // If a match cannot be found through either of the above methods, a compiler; // error is generated.; //; // ===Invalid Format String Handling===; //; // In the case of a format string which does not match the grammar described; // above, the output is undefined. With asserts enabled, LLVM will trigger an; // assertion. Otherwise, it will try to do something reasonable, but in general; // the details of what that is are undefined.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FormatVariadic.h:3497,error,error,3497,interpreter/llvm-project/llvm/include/llvm/Support/FormatVariadic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FormatVariadic.h,1,['error'],['error']
Availability," array expands automatically; when objects are added (shrinking can be done by hand using Expand() ). The TRefArray can be filled with:; ~~~ {.cpp}; array.Add(obj); array.AddAt(obj,i); but not array[i] = obj !!!; ~~~; The array elements can be retrieved with:; ~~~ {.cpp}; TObject *obj = array.At(i);; ~~~; By default the TRefArray 'points' to the current process and can only; receive object that have been created in this process.; To point the TRefArray to a different process do:; ~~~ {.cpp}; TRefArray array( processId );; ~~~; For example, if 'obj' is an instance that was created in the different; process and you do:; ~~~ {.cpp}; TRefArray array( TProcessID::GetProcessWithUID( obj ) );; ~~~; Then; ~~~ {.cpp}; array.Add(obj);; ~~~; is correct (obj comes from the process the array is pointed to; while; ~~~ {.cpp}; TObject *nobj = new TObject;; array.Add(nobj);; ~~~; is incorrect since 'nobj' was created in a different process than the; one the array is pointed to. In this case you will see error message:; ~~~ {.cpp}; Error in <TRefArray::AddAtAndExpand>: The object at 0x... is not; registered in the process the TRefArray point to; (pid = ProcessID../....); ~~~; When a TRefArray is Streamed, only the pointer unique id is written,; not the referenced object. TRefArray may be assigned to different; branches of one Tree or several Trees.; The branch containing the TRefArray can be read before or after the; array (eg TClonesArray, STL vector,..) of the referenced objects. See an example in $ROOTSYS/test/Event.h. ### RESTRICTIONS when using TRefArray. - Elements in a TRefArray cannot point to a TFile or TDirectory.; - All elements of a TRefArray must be set in the same process,; In particular, one cannot modify some elements of the array in; a different process. Use an array of TRef when one of the above restrictions is met. The number of TRef handled by a single process id is limited to; 16777215 (see TRef for more detail). When the TProcessID is full; (has seen 16777215 ob",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx:1499,error,error,1499,core/cont/src/TRefArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx,1,['error'],['error']
Availability," arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:6953,error,error,6953,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability," as the column names that are passed as the first argument. Besides the variation tags, in; this case we also have to explicitly pass the variation name (here: ""ptAndEta"") as the default column name does not exist. The above call will produce variations ""ptAndEta:down"" and ""ptAndEta:up"". #### Combining multiple variations. Even if a result depends on multiple variations, only one variation is applied at a time, i.e. there will be no result produced; by applying multiple systematic variations at the same time.; For example, in the following example snippet, the RResultMap instance `all_h` will contain keys ""nominal"", ""pt:down"",; ""pt:up"", ""eta:0"", ""eta:1"", but no ""pt:up&&eta:0"" or similar:. ~~~{.cpp}; auto df = _df.Vary(""pt"",; ""ROOT::RVecD{pt*0.9, pt*1.1}"",; {""down"", ""up""}); .Vary(""eta"",; [](float eta) { return RVecF{eta*0.9f, eta*1.1f}; },; {""eta""},; 2);. auto nom_h = df.Histo2D(histoModel, ""pt"", ""eta"");; auto all_hs = VariationsFor(nom_h);; all_hs.GetKeys(); // returns {""nominal"", ""pt:down"", ""pt:up"", ""eta:0"", ""eta:1""}; ~~~. Note how we passed the integer `2` instead of a list of variation tags to the second Vary() invocation: this is a; shorthand that automatically generates tags 0 to N-1 (in this case 0 and 1). \note Currently, VariationsFor() and RResultMap are in the `ROOT::RDF::Experimental` namespace, to indicate that these; interfaces might still evolve and improve based on user feedback. We expect that some aspects of the related; programming model will be streamlined in future versions. \note Currently, the results of a Snapshot(), Report() or Display() call cannot be varied (i.e. it is not possible to; call \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" on them. These limitations will be lifted in future releases. See the Vary() method for more information and [this tutorial](https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html) ; for an example usage of Vary and \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" in the an",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:59135,down,down,59135,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['down'],['down']
Availability," as they; // do not alias, which permits only allocating variables they use; // - if the address is allowed to differ, functions need help to find it; //; // Uses from kernels are implemented here by grouping them in a per-kernel; // struct instance. This duplicates the variables, accurately modelling their; // aliasing properties relative to a single global representation. It also; // permits control over alignment via padding.; //; // Uses from functions are more complicated and the primary purpose of this; // IR pass. Several different lowering are chosen between to meet requirements; // to avoid allocating any LDS where it is not necessary, as that impacts; // occupancy and may fail the compilation, while not imposing overhead on a; // feature whose primary advantage over global memory is performance. The basic; // design goal is to avoid one kernel imposing overhead on another.; //; // Implementation.; //; // LDS variables with constant annotation or non-undef initializer are passed; // through unchanged for simplification or error diagnostics in later passes.; // Non-undef initializers are not yet implemented for LDS.; //; // LDS variables that are always allocated at the same address can be found; // by lookup at that address. Otherwise runtime information/cost is required.; //; // The simplest strategy possible is to group all LDS variables in a single; // struct and allocate that struct in every kernel such that the original; // variables are always at the same address. LDS is however a limited resource; // so this strategy is unusable in practice. It is not implemented here.; //; // Strategy | Precise allocation | Zero runtime cost | General purpose |; // --------+--------------------+-------------------+-----------------+; // Module | No | Yes | Yes |; // Table | Yes | No | Yes |; // Kernel | Yes | Yes | No |; // Hybrid | Yes | Partial | Yes |; //; // ""Module"" spends LDS memory to save cycles. ""Table"" spends cycles and global; // memory to save LDS. ""Kern",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:2680,error,error,2680,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['error'],['error']
Availability," auto c45 = new TCanvas(""c45"",""c45"",200,10,600,400);; const Int_t n = 10;; Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; auto gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""A graph with bend errors"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; End_Macro. \anchor GrP3d; #### TGraphMultiErrors; A `TGraphMultiErrors` works basically the same way like a `TGraphAsymmErrors`.; It has the possibility to define more than one type / dimension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:13031,Error,Errors,13031,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['Error'],['Errors']
Availability," be believed, and <TT>APPROXIMATE ERROR</TT> means that they have; been calculated but there is reason to believe that they may not be; accurate. If no mitigating adjective is given, then at least MINUIT believes the; errors are accurate, although there is always a small chance that MINUIT; has been fooled. Some visible signs that MINUIT may have been fooled are:. 1. Warning messages produced during the minimization or error analysis. 2. Failure to find new minimum. 3. Value of <TT>EDM</TT> too big (estimated Distance to Minimum). 4. Correlation coefficients exactly equal to zero, unless some parameters; are known to be uncorrelated with the others. 5. Correlation coefficients very close to one (greater than 0.99). This; indicates both an exceptionally difficult problem, and one which has been; badly parameterised so that individual errors are not very meaningful; because they are so highly correlated. 6. Parameter at limit. This condition, signalled by a MINUIT warning; message, may make both the function minimum and parameter errors; unreliable. See the discussion above ``Getting the right parameter errors; with limits''. The best way to be absolutely sure of the errors, is to use; ``independent'' calculations and compare them, or compare the calculated; errors with a picture of the function. Theoretically, the covariance; matrix for a ``physical'' function must be positive-definite at the; minimum, although it may not be so for all points far away from the; minimum, even for a well-determined physical problem. Therefore, if MIGRAD; reports that it has found a non-positive-definite covariance matrix, this; may be a sign of one or more of the following:. ##### A non-physical region:. On its way to the minimum, MIGRAD may have traversed a region which has; unphysical behaviour, which is of course not a serious problem as long as; it recovers and leaves such a region. ##### An underdetermined problem:. If the matrix is not positive-definite even at the minimum, this m",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:9772,error,errors,9772,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['errors']
Availability," be combined with any drawing option. For instance, ""AC"" draws the histogram as a smooth Curve without axis.|; | ""]["" | When this option is selected the first and last vertical lines of the histogram are not drawn.|; | ""B"" | Bar chart option.|; | ""BAR"" | Like option ""B"", but bars can be drawn with a 3D effect.|; | ""HBAR"" | Like option ""BAR"", but bars are drawn horizontally.|; | ""C"" | Draw a smooth Curve through the histogram bins.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E1"" | Draw error bars with perpendicular lines at the edges.|; | ""E2"" | Draw error bars with rectangles.|; | ""E3"" | Draw a fill area through the end points of the vertical error bars.|; | ""E4"" | Draw a smoothed filled area through the end points of the error bars.|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|; | ""L"" | Draw a line through the bin contents.|; | ""P"" | Draw current marker at each bin except empty bins.|; | ""P*"" | Draw a star marker at each bin except empty bins.|; | ""P0"" | Draw current marker at each bin including empty bins.|; | ""PIE"" | Draw histogram as a Pie Chart.|; | ""*H"" | Draw histogram with a * at each bin.|; | ""LF2"" | Draw histogram like with option ""L"" but with a fill area. Note that ""L"" draws also a fill area if the hist fill color is set but the fill area corresponds to the histogram contour.|. \anchor HP01c; #### Options supported for 2D histograms. | Option | Description |; |--------------|------------------------------------------------------------------|; | "" "" | Default (color plot).|; | ""ARR"" | Arrow mode. Shows gradient between adjacent cells.|; | ""BOX"" | A box is drawn for each cell with surface proportional to the content's absolute value. A negative content is marked with a X. |; | ""BOX1"" | A but",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:9101,error,error,9101,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['error']
Availability," because the error; bars do not incorporate two known properties of the PDFs: PDFs are; positive definite and can be non-zero in a given x-bin, even if in the; particular data sample at hand, no event is observed in this bin. The; latter limitation is not specific to \f$\hbox {$_s$}{\cal P}lots\f$ ,; rather it is always present when one is willing to infer the PDF at the; origin of an histogram, when, for some bins, the number of entries does; not guaranty the applicability of the Gaussian regime. In such; situations, a satisfactory practice is to attach allowed ranges to the; histogram to indicate the upper and lower limits of the PDF value which; are consistent with the actual observation, at a given confidence; level. \image html splot_mass-bkg-sPlot.png Figure 3 width=600. The \f$\hbox {$_s$}{\cal P}lots\f$ (signal on top, background on bottom); obtained for \f${m_{\rm ES}}\f$ are represented as dots with error bars.; They are obtained from a fit using only information from \f$\Delta E\f$ and; \f${\cal F}\f$. <p>; Choosing \f${m_{\rm ES}}\f$ and \f$\Delta E\f$ as discriminating variables to; determine \f$N_1\f$ and \f$N_2\f$ through a maximum Likelihood fit, one builds,; for the control variable \f${\cal F}\f$ which is unknown to the fit, the two; \f$\hbox {$_s$}{\cal P}lots\f$ for signal and background shown in; Fig. 4.; In the \f$\hbox{$_s$}{\cal P}lot\f$ for signal one observes that error bars are; the largest in the \f$x\f$ regions where the background is the largest. \image html splot_fisher-bkg-sPlot.png Figure 4 width=600. The \f$\hbox {$_s$}{\cal P}lots\f$ (signal on top, background on bottom) obtained; for \f${\cal F}\f$ are represented as dots with error bars. They are obtained; from a fit using only information from \f${m_{\rm ES}}\f$ and \f$\Delta E\f$. The results above can be obtained by running the tutorial TestSPlot.C; */; ////////////////////////////////////////////////////////////////////////////////; /// default constructor (used by I/O only)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:10922,error,error,10922,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,2,['error'],['error']
Availability," bit mask is zero and the length of the; /// string in \a B is the maximum, otherwise, returns 0.; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// int _mm_cmpestra(__m128i A, int LA, __m128i B, int LB, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VPCMPESTRI / PCMPESTRI </c>; /// instruction.; ///; /// \param A; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param LA; /// An integer that specifies the length of the string in \a A.; /// \param B; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param LB; /// An integer that specifies the length of the string in \a B.; /// \param M; /// An 8-bit immediate operand specifying whether the characters are bytes or; /// words and the type of comparison to perform. \n; /// Bits [1:0]: Determine source data format. \n; /// 00: 16 unsigned bytes \n; /// 01: 8 unsigned words \n; /// 10: 16 signed bytes \n; /// 11: 8 signed words \n; /// Bits [3:2]: Determine comparison type and aggregation method. \n; /// 00: Subset: Each character in \a B is compared for equality with all; /// the characters in \a A. \n; /// 01: Ranges: Each character in \a B is compared to \a A. The comparison; /// basis is greater than or equal for even-indexed elements in \a A,; /// and less than or equal for odd-indexed elements in \a A. \n; /// 10: Match: Compare each pair of corresponding characters in \a A and; /// \a B for equality. \n; /// 11: Substring: Search \a B for substring matches of \a A. \n; /// Bits [5:4]: Determine whether to perform a one's complement on the bit; /// mask of the comparison results. \n; /// 00: No effect. \n; /// 01: Negate the bit mask. \n; /// 10: No effect. \n; /// 11: Negate the bit mask only for bits with an index less than or equal; /// to the size of \a A or \a B.; /// \returns Returns 1 if the bit mask is zero and the length of the string in; /// \a B is the maximum, otherwise, returns 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:1834,mask,mask,1834,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,4,['mask'],['mask']
Availability," call.; // If node `A` depends on node `B` then the path contains an `A`->`B` edge.; // From the call stack of the import functions we can read the very same; // path.; //; // Now imagine the following AST, where the `->` represents dependency in; // therms of the import.; // ```; // A->B->C->D; // `->E; // ```; // We would like to import A.; // The import behaves like a DFS, so we will visit the nodes in this order:; // ABCDE.; // During the visitation we will have the following ImportPaths:; // ```; // A; // AB; // ABC; // ABCD; // ABC; // AB; // ABE; // AB; // A; // ```; // If during the visit of E there is an error then we set an error for E,; // then as the call stack shrinks for B, then for A:; // ```; // A; // AB; // ABC; // ABCD; // ABC; // AB; // ABE // Error! Set an error to E; // AB // Set an error to B; // A // Set an error to A; // ```; // However, during the import we could import C and D without any error and; // they are independent from A,B and E.; // We must not set up an error for C and D.; // So, at the end of the import we have an entry in `ImportDeclErrors` for; // A,B,E but not for C,D.; //; // Now what happens if there is a cycle in the import path?; // Let's consider this AST:; // ```; // A->B->C->A; // `->E; // ```; // During the visitation we will have the below ImportPaths and if during; // the visit of E there is an error then we will set up an error for E,B,A.; // But what's up with C?; // ```; // A; // AB; // ABC; // ABCA; // ABC; // AB; // ABE // Error! Set an error to E; // AB // Set an error to B; // A // Set an error to A; // ```; // This time we know that both B and C are dependent on A.; // This means we must set up an error for C too.; // As the call stack reverses back we get to A and we must set up an error; // to all nodes which depend on A (this includes C).; // But C is no longer on the import path, it just had been previously.; // Such situation can happen only if during the visitation we had a cycle.; // If we didn't have ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h:1086,error,error,1086,interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h,1,['error'],['error']
Availability," can retrieve an associated function with:; ///; /// ~~~ {.cpp}; /// TF1 *myfunc = h->GetFunction(""myfunc"");; /// ~~~; /// or by quering directly the list obtained by calling `TH1::GetListOfFunctions`.; ///; /// \anchor HFitStatus; /// ### Fit status; ///; /// The status of the fit is obtained converting the TFitResultPtr to an integer; /// independently if the fit option ""S"" is used or not:; ///; /// ~~~ {.cpp}; /// TFitResultPtr r = h->Fit(myFunc,opt);; /// Int_t fitStatus = r;; /// ~~~; ///; /// - `status = 0` : the fit has been performed successfully (i.e no error occurred).; /// - `status < 0` : there is an error not connected with the minimization procedure, for example when a wrong function is used.; /// - `status > 0` : return status from Minimizer, depends on used Minimizer. For example for TMinuit and Minuit2 we have:; /// - `status = migradStatus + 10*minosStatus + 100*hesseStatus + 1000*improveStatus`.; /// TMinuit returns 0 (for migrad, minos, hesse or improve) in case of success and 4 in case of error (see the documentation of TMinuit::mnexcm). For example, for an error; /// only in Minos but not in Migrad a fitStatus of 40 will be returned.; /// Minuit2 returns 0 in case of success and different values in migrad,minos or; /// hesse depending on the error. See in this case the documentation of; /// Minuit2Minimizer::Minimize for the migrad return status, Minuit2Minimizer::GetMinosError for the; /// minos return status and Minuit2Minimizer::Hesse for the hesse return status.; /// If other minimizers are used see their specific documentation for the status code returned.; /// For example in the case of Fumili, see TFumili::Minimize.; ///; /// \anchor HFitRange; /// ### Fitting in a range; ///; /// In order to fit in a sub-range of the histogram you have two options:; /// - pass to this function the lower (`xxmin`) and upper (`xxmax`) values for the fitting range;; /// - define a specific range in the fitted function and use the fitting option ""R"".; /// Fo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:12673,error,error,12673,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability," can; /// guarantee that anything that the user will do to an object of type A can; /// also be done to an object of type B. This is trivially true if the two; /// types are the same, or if B is a subclass of A. It becomes more complex; /// in cases where protocols are involved.; ///; /// Object types in Objective-C describe the minimum requirements for an; /// object, rather than providing a complete description of a type. For; /// example, if A is a subclass of B, then B* may refer to an instance of A.; /// The principle of substitutability means that we may use an instance of A; /// anywhere that we may use an instance of B - it will implement all of the; /// ivars of B and all of the methods of B.; ///; /// This substitutability is important when type checking methods, because; /// the implementation may have stricter type definitions than the interface.; /// The interface specifies minimum requirements, but the implementation may; /// have more accurate ones. For example, a method may privately accept; /// instances of B, but only publish that it accepts instances of A. Any; /// object passed to it will be type checked against B, and so will implicitly; /// by a valid A*. Similarly, a method may return a subclass of the class that; /// it is declared as returning.; ///; /// This is most important when considering subclassing. A method in a; /// subclass must accept any object as an argument that its superclass's; /// implementation accepts. It may, however, accept a more general type; /// without breaking substitutability (i.e. you can still use the subclass; /// anywhere that you can use the superclass, but not vice versa). The; /// converse requirement applies to return types: the return type for a; /// subclass method must be a valid object of the kind that the superclass; /// advertises, but it may be specified more accurately. This avoids the need; /// for explicit down-casting by callers.; ///; /// Note: This is a stricter requirement than for assignment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:1982,down,down-casting,1982,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['down'],['down-casting']
Availability," can; be changed using the method `SetTextAngle` and retrieved using the; method `GetTextAngle`.; The following picture shows the text angle:. Begin_Macro(source); textangle.C; End_Macro. \anchor ATTTEXT3; ## Text Color. The text color is a color index (integer) pointing in the ROOT; color table.; The text color of any class inheriting from `TAttText` can; be changed using the method `SetTextColor` and retrieved using the; method `GetTextColor`.; The following table shows the first 50 default colors. Begin_Macro; {; TCanvas *c = new TCanvas(""c"",""Fill Area colors"",0,0,500,200);; c->DrawColorTable();; return c;; }; End_Macro. ### Color transparency; `SetTextColorAlpha()`, allows to set a transparent color.; In the following example the text color of the text `text`; is set to blue with an opacity of 35% (i.e. a transparency of 65%).; (The color `kBlue` itself is internally stored as fully opaque.). ~~~ {.cpp}; text->SetTextColorAlpha(kBlue, 0.35);; ~~~. The transparency is available on all platforms when the flag `OpenGL.CanvasPreferGL` is set to `1`; in `$ROOTSYS/etc/system.rootrc`, or on Mac with the Cocoa backend. On the file output; it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript. Alternatively, you can call at the top of your script `gSytle->SetCanvasPreferGL();`.; Or if you prefer to activate GL for a single canvas `c`, then use `c->SetSupportGL(true);`. \anchor ATTTEXT4; ## Text Size. If the text precision (see next paragraph) is smaller than 3, the text; size (`textsize`) is a fraction of the current pad size. Therefore the; same `textsize` value can generate text outputs with different absolute; sizes in two different pads.; The text size in pixels (`charheight`) is computed the following way:. ~~~ {.cpp}; pad_width = gPad->XtoPixel(gPad->GetX2());; pad_height = gPad->YtoPixel(gPad->GetY1());; if (pad_width < pad_height) charheight = textsize*pad_width;; else charheight = textsize*pad_height;; ~~~. If the text precision is equal to 3, ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttText.cxx:2770,avail,available,2770,core/base/src/TAttText.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttText.cxx,1,['avail'],['available']
Availability," case, whether the; non-positive-definiteness is real or only numerical is largely irrelevant,; since in both cases the error matrix will be unreliable and the minimum; suspicious. ##### An ill-posed problem:. For questions of parameter dependence, see the discussion above on; positive-definiteness. Possible other mathematical problems are the following:. ##### Excessive numerical roundoff:. Be especially careful of exponential and factorial functions which get big; very quickly and lose accuracy. ##### Starting too far from the solution:. The function may have unphysical local minima, especially at infinity in; some variables. ##### Minuit parameter errors in the presence of limits; This concerns the way Minuit reports the symmetric (or parabolic) errors; on parameters. It does not apply to the errors reported from Minos, which; are in general asymmetric. The symmetric errors reported by Minuit are always calculated from; the covariance matrix, assuming that this matrix has been calculated,; usually as the result of a Migrad minimization or a direct; calculation by Hesse which inverts the second derivative matrix. When there are no limits on the parameter in question, the error reported; by Minuit should therefore be exactly equal to the square root of the; corresponding diagonal element of the error matrix reported by Minuit. However, when there are limits on the parameter, there is a transformation; between the internal parameter values seen by Minuit (which are unbounded); and the external parameter values seen by the user in FCN (which remain; inside the desired limits). Therefore the internal error matrix kept by; Minuit must be transformed to an external error matrix for the user.; This is done by multiplying the (I,J)th element by DEXDIN(I)*DEXDIN(J),; where DEXDIN is the derivative of the external value with respect to the; internal value at the minimum. This is a linearisation of the; transformation, and is the only way to produce an error matrix in extern",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:12517,error,errors,12517,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['errors']
Availability," characterized by a bias and weighted links; between them (let's call those links synapses). The input neurons; receive the inputs, normalize them and forward them to the first; hidden layer. Each neuron in any subsequent layer first computes a linear; combination of the outputs of the previous layer. The output of the; neuron is then function of that combination with <I>f</I> being; linear for output neurons or a sigmoid for hidden layers. This is; useful because of two theorems:. 1. A linear combination of sigmoids can approximate any; continuous function.; 2. Trained with output = 1 for the signal and 0 for the; background, the approximated function of inputs X is the probability; of signal, knowing X. ### Learning methods. The aim of all learning methods is to minimize the total error on; a set of weighted examples. The error is defined as the sum in; quadrature, divided by two, of the error on each individual output; neuron.; In all methods implemented, one needs to compute; the first derivative of that error with respect to the weights.; Exploiting the well-known properties of the derivative, especially the; derivative of compound functions, one can write:. - for a neuron: product of the local derivative with the; weighted sum on the outputs of the derivatives.; - for a synapse: product of the input with the local derivative; of the output neuron. This computation is called back-propagation of the errors. A; loop over all examples is called an epoch.; Six learning methods are implemented. #### Stochastic minimization:. is the most trivial learning method. This is the Robbins-Monro; stochastic approximation applied to multilayer perceptrons. The; weights are updated after each example according to the formula:; \f$w_{ij}(t+1) = w_{ij}(t) + \Delta w_{ij}(t)\f$. with. \f$\Delta w_{ij}(t) = - \eta(d e_p / d w_{ij} + \delta) + \epsilon \Delta w_{ij}(t-1)\f$. The parameters for this method are Eta, EtaDecay, Delta and; Epsilon. #### Steepest descent with fixed step s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:4047,error,error,4047,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['error'],['error']
Availability," complex - complex; //; // Important note on the following tests. The operation of raising a complex; // number to a power does not yet a single value, but rather an infinite; // number of values, particularly if the number is non rational.; // For a real number a, you can define a^(b+ic) by writing a = e^(ln a):; //; // b+ic (ln a)(b+ic) (b ln a) + i(c ln a); // a = e = e; //; // (b ln a); // = e ( cos (c ln a) + i sin (c ln a) ); //; // b; // = a ( cos (c ln a) + i sin (c ln a) ).; //; // Now, if a is a complex number instead of a real number, there is no; // single value to ""ln a"": there are lots of different complex numbers z; // for which e^z = a, and for any such complex number z, you could define; // a^(b+ic) to be e^(z(b+ic)) and use the above technique to calculate it.; //; // In fact, the same thing is true even when a is a real number. The; // expression a^(b+ic) has many possible values (infinite except when b; // and c are both rational numbers), because instead of doing the calculation; // writing a = e^(ln a), you could also do it by writing a = e^(ln a + 2pi i); // or by writing a = e^(ln a + 4 pi i), or a = e^(ln a + 6 pi i), and so on.; // Each of these equalities is true (in fact e^(2pi n i)=1 for integer n).; //; // When a is real it is more ""natural"" to use the ordinary real-valued; // logarithm ln a rather than than something like ln a + 2 pi i.; // Technically, this value is called the principal value. This is what; // the formula up above gives you. Unfortunately this alone does not; // guarantees that the inverse operation brings you back where you; // started from.; //; // When a is not real there is no one natural choice of logarithm to prefer; // over any other, so in those cases we have to say that an expression like; // a^(b+ic) has many different values.; //; // This is because in these tests we exclude from the error output the; // results where we ended up very far from the initial value, and the; // difference is more than 50%.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/ctorture.cxx:1891,error,error,1891,test/ctorture.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/ctorture.cxx,1,['error'],['error']
Availability," contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStatusBitsChecker. TStatusBitsChecker::Check and TStatusBitsChecker::CheckAllClasses will; determine if the set of ""status bit"" declared in the class and its; base classes presents any overlap. The status bit are declared in; a given class by declaring an enum type named EStatusBits.; If some of the duplication is intentional, those duplication can; be registered in an enum type named EStatusBitsDupExceptions. ~~~ {.cpp}; // TStreamerElement status bits; enum EStatusBits {; kHasRange = BIT(6),; kCache = BIT(9),; kRepeat = BIT(10),; kRead = BIT(11),; kWrite = BIT(12),; kDoNotDelete = BIT(13),; kWholeObject = BIT(14); };. enum class EStatusBitsDupExceptions {; // This bit duplicates TObject::kInvalidObject. As the semantic of kDoNotDelete is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kInvalidObject and its semantic is not (and should not be); // used in TStreamerElement; kDoNotDelete = TStreamerElement::kDoNotDelete,. // This bit duplicates TObject::kCannotPick. As the semantic of kHasRange is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kCannotPick and its semantic is not (and should not be); // used in TStreamerElement; kHasRange = TStreamerElement::kHasRange; };; ~~~ {.cpp}. Without the EStatusBitsDupExceptions enum you would see. ~~~ {.cpp}; TStatusBitsChecker::Check(""TStreamerElement"");. Error in `<TStatusBitsChecker>`: In TStreamerElement class hierarchy, there are duplicates bits:; Error in `<TStatusBitsChecker>`: Bit 6 used in TStreamerElement as kHasRange; Error in `<TStatusBitsChecker>`: Bit 6 used in TObject as kCannotPick; Error in `<TStatusBitsChecker>`: Bit 13 used in TStreamerElement as kDoNotDelete; Error in `<TStatusBitsChecker>`: Bit 13 used in TObject as kInvalidObject; ~~~ {.cpp}. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:1851,Error,Error,1851,core/meta/src/TStatusBitsChecker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx,5,['Error'],['Error']
Availability," copy of the object is shared; memory call Update() also whenever the mapped object(s) change(s); call Update() to put a fresh copy in the shared memory. This extra; step is necessary since it is not possible to share objects with; virtual pointers between processes (the vtbl ptr points to the; originators unique address space and can not be used by the; consumer process(es)). Consumer processes can map the memory region; from this file and access the objects stored in it via the Get(); method (which returns a copy of the object stored in the shared; memory with correct vtbl ptr set). Only objects of classes with a; Streamer() member function defined can be shared. I know the current implementation is not ideal (you need to copy to; and from the shared memory file) but the main problem is with the; class' virtual_table pointer. This pointer points to a table unique; for every process. Therefore, different options are:; -# One could allocate an object directly in shared memory in the; producer, but the consumer still has to copy the object from; shared memory into a local object which has the correct vtbl; pointer for that process (copy ctor's can be used for creating; the local copy).; -# Another possibility is to only allow objects without virtual; functions in shared memory (like simple C structs), or to; forbid (how?) the consumer from calling any virtual functions; of the objects in shared memory.; -# A last option is to copy the object internals to shared memory; and copy them again from there. This is what is done in the; TMapFile (using the object Streamer() to make a deep copy). Option 1) saves one copy, but requires solid copy ctor's (along the; full inheritance chain) to rebuild the object in the consumer. Most; classes don't provide these copy ctor's, especially not when objects; contain collections, etc. 2) is too limiting or dangerous (calling; accidentally a virtual function will segv). So since we have a; robust Streamer mechanism I opted for 3).; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx:2157,robust,robust,2157,io/io/src/TMapFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx,1,['robust'],['robust']
Availability," current estimates of the parameter; errors, which it will print out on request, no matter how accurate they; are at any given point in the execution. For example, at initialization,; these estimates are just the starting step sizes as specified by the user.; After a HESSE step, the errors are usually quite accurate,; unless there has been a problem. MINUIT, when it prints out error values,; also gives some indication of how reliable it thinks they are. For; example, those marked <TT>CURRENT GUESS ERROR</TT> are only working values; not to be believed, and <TT>APPROXIMATE ERROR</TT> means that they have; been calculated but there is reason to believe that they may not be; accurate. If no mitigating adjective is given, then at least MINUIT believes the; errors are accurate, although there is always a small chance that MINUIT; has been fooled. Some visible signs that MINUIT may have been fooled are:. 1. Warning messages produced during the minimization or error analysis. 2. Failure to find new minimum. 3. Value of <TT>EDM</TT> too big (estimated Distance to Minimum). 4. Correlation coefficients exactly equal to zero, unless some parameters; are known to be uncorrelated with the others. 5. Correlation coefficients very close to one (greater than 0.99). This; indicates both an exceptionally difficult problem, and one which has been; badly parameterised so that individual errors are not very meaningful; because they are so highly correlated. 6. Parameter at limit. This condition, signalled by a MINUIT warning; message, may make both the function minimum and parameter errors; unreliable. See the discussion above ``Getting the right parameter errors; with limits''. The best way to be absolutely sure of the errors, is to use; ``independent'' calculations and compare them, or compare the calculated; errors with a picture of the function. Theoretically, the covariance; matrix for a ``physical'' function must be positive-definite at the; minimum, although it may not be so for a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:9170,Failure,Failure,9170,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['Failure'],['Failure']
Availability," cv-qualifiers of the '*this' object.; // The object referred to by '*this' starts out with the cv-qualifiers of its; // member function. We then start with the innermost lambda and iterate; // outward checking to see if any lambda performs a by-copy capture of '*this'; // - and if so, any nested lambda must respect the 'constness' of that; // capturing lamdbda's call operator.; //; // Since the FunctionScopeInfo stack is representative of the lexical; // nesting of the lambda expressions during initial parsing (and is the best; // place for querying information about captures about lambdas that are; // partially processed) and perhaps during instantiation of function templates; // that contain lambda expressions that need to be transformed BUT not; // necessarily during instantiation of a nested generic lambda's function call; // operator (which might even be instantiated at the end of the TU) - at which; // time the DeclContext tree is mature enough to query capture information; // reliably - we use a two pronged approach to walk through all the lexically; // enclosing lambda expressions:; //; // 1) Climb down the FunctionScopeInfo stack as long as each item represents; // a Lambda (i.e. LambdaScopeInfo) AND each LSI's 'closure-type' is lexically; // enclosed by the call-operator of the LSI below it on the stack (while; // tracking the enclosing DC for step 2 if needed). Note the topmost LSI on; // the stack represents the innermost lambda.; //; // 2) If we run out of enclosing LSI's, check if the enclosing DeclContext; // represents a lambda's call operator. If it does, we must be instantiating; // a generic lambda's call operator (represented by the Current LSI, and; // should be the only scenario where an inconsistency between the LSI and the; // DeclContext should occur), so climb out the DeclContexts if they; // represent lambdas, while querying the corresponding closure types; // regarding capture information.; // 1) Climb down the function scope info stack.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:2147,down,down,2147,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['down'],['down']
Availability," do; * so - then it will check if filename has alldigit extentions. It will; * then try to interpret that extention as a face number, and try and; * find the file with extention stripped off.; * If file was found function will atempt to read it using FreeType; * library. If requested face is not available in the font - face 0 will; * be used.; * On success all the font's glyphs will be rendered and cached, and; * needed font geometry info collected.; * When FreeType Library is not available that function does nothing.; *********/; /****f* libAfterImage/asfont/open_X11_font(); * NAME; * open_X11_font(); * SYNOPSIS; * ASFont *open_X11_font( ASFontManager *fontman,; * const char *font_string);; * INPUTS; * fontman - pointer to previously created ASFontManager. Needed for; * connection X Server.; * font_string - name of the font as recognized by Xlib.; * RETURN VALUE; * pointer to Opened ASFont structure, containing all the glyphs of the; * font, as well as other relevant info. On failure returns NULL.; * DESCRIPTION; * open_X11_font() attempts to load and query font using Xlib calls.; * On success it goes thgroughthe codemap of the font and renders all; * the glyphs available. Glyphs then gets transfered to the client's; * memory and encoded using RLE compression. At this time smoothing; * filters are applied on glyph pixmaps, if its size exceeds threshold.; * TODO; * implement proper XFontSet support, when used with I18N enabled.; *********/; /****f* libAfterImage/asfont/get_asfont(); * NAME; * get_asfont(); * SYNOPSIS; * ASFont *get_asfont( ASFontManager *fontman,; * const char *font_string,; * int face_no, int size,; * ASFontType type );; * INPUTS; * fontman - pointer to previously created ASFontManager. Needed for; * connection to FreeType library, path to search fonts; * in, and X Server connection.; * font_string - font name or filename of the file containing font's data.; * face_no - number of face within the font file; * size - font size in points. Applicable on",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h:1962,failure,failure,1962,graf2d/asimage/src/libAfterImage/asfont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h,1,['failure'],['failure']
Availability," done via the TBranch::SetAddress member function. \anchor addingacolumnofobjs; ## Add a column holding objects. ~~~ {.cpp}; MyClass object;; auto branch = tree.Branch(branchname, &object, bufsize, splitlevel); ~~~; Note: The 2nd parameter must be the address of a valid object.; The object must not be destroyed (i.e. be deleted) until the TTree; is deleted or TTree::ResetBranchAddress is called. - if splitlevel=0, the object is serialized in the branch buffer.; - if splitlevel=1 (default), this branch will automatically be split; into subbranches, with one subbranch for each data member or object; of the object itself. In case the object member is a TClonesArray,; the mechanism described in case C is applied to this array.; - if splitlevel=2 ,this branch will automatically be split; into subbranches, with one subbranch for each data member or object; of the object itself. In case the object member is a TClonesArray,; it is processed as a TObject*, only one branch. Another available syntax is the following:. ~~~ {.cpp}; auto branch = tree.Branch(branchname, &p_object, bufsize, splitlevel); auto branch = tree.Branch(branchname, className, &p_object, bufsize, splitlevel); ~~~; - p_object is a pointer to an object.; - If className is not specified, Branch uses the type of p_object to determine the; type of the object.; - If className is used to specify explicitly the object type, the className must; be of a type related to the one pointed to by the pointer. It should be either; a parent or derived class. Note: The pointer whose address is passed to TTree::Branch must not; be destroyed (i.e. go out of scope) until the TTree is deleted or; TTree::ResetBranchAddress is called. Note: The pointer p_object must be initialized before calling TTree::Branch; - Do either:; ~~~ {.cpp}; MyDataClass* p_object = nullptr;; tree.Branch(branchname, &p_object);; ~~~; - Or:; ~~~ {.cpp}; auto p_object = new MyDataClass;; tree.Branch(branchname, &p_object);; ~~~; Whether the pointer is set ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:8486,avail,available,8486,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['avail'],['available']
Availability," each axis can be set with; TGeoManager::SetBombX(Double_t bomb) and corresponding Y and Z.; - 2 - bomb in cylindrical coordinates. Only the bomb factors on Z and R; are considered; \image html geom_frameexp.jpg. - 3 - bomb in radial spherical coordinate : TGeoManager::SetBombR(). Volumes themselves support different visualization settings :; - TGeoVolume::SetVisibility() : set volume visibility.; - TGeoVolume::VisibleDaughters() : set daughters visibility.; All these actions automatically updates the current view if any. ### Checking the geometry. Several checking methods are accessible from the volume context menu. They; generally apply only to the visible parts of the drawn geometry in order to; ease geometry checking, and their implementation is in the TGeoChecker class; from the painting package. #### Checking a given point.; Can be called from TGeoManager::CheckPoint(Double_t x, Double_t y, Double_t z).; This method is drawing the daughters of the volume containing the point one; level down, printing the path to the deepest physical node holding this point.; It also computes the closest distance to any boundary. The point will be drawn; in red, as well as a sphere having this closest distance as radius. In case a; non-zero distance is given by the user as fifth argument of CheckPoint, this; distance will be used as radius of the safety sphere. \image html geom_checkpoint.jpg. #### Shooting random points.; Can be called from TGeoVolume::RandomPoints() (context menu function) and; it will draw this volume with current visualization settings. Random points; are generated in the bounding box of the top drawn volume. The points are; classified and drawn with the color of their deepest container. Only points; in visible nodes will be drawn. \image html geom_random1.jpg. #### Raytracing.; Can be called from TGeoVolume::RandomRays() (context menu of volumes) and; will shoot rays from a given point in the local reference frame with random; directions. The intersections ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:10769,down,down,10769,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['down'],['down']
Availability," each; histogram is paint into a separate pad. The following example shows various types of stacks (hstack.C). Begin_Macro(source); ../../../tutorials/hist/hstack.C; End_Macro. The option `nostackb` allows to draw the histograms next to each; other as bar charts:. Begin_Macro(source); {; auto cst0 = new TCanvas(""cst0"",""cst0"",600,400);; auto hs = new THStack(""hs"",""Stacked 1D histograms: option #font[82]{\""nostackb\""}"");. auto h1 = new TH1F(""h1"",""h1"",10,-4,4);; h1->FillRandom(""gaus"",20000);; h1->SetFillColor(kRed);; hs->Add(h1);. auto h2 = new TH1F(""h2"",""h2"",10,-4,4);; h2->FillRandom(""gaus"",15000);; h2->SetFillColor(kBlue);; hs->Add(h2);. auto h3 = new TH1F(""h3"",""h3"",10,-4,4);; h3->FillRandom(""gaus"",10000);; h3->SetFillColor(kGreen);; hs->Add(h3);. hs->Draw(""nostackb"");; hs->GetXaxis()->SetNdivisions(-10);; cst0->SetGridx();; }; End_Macro. If at least one of the histograms in the stack has errors, the whole stack is; visualized by default with error bars. To visualize it without errors the; option `HIST` should be used. Begin_Macro(source); {; auto cst1 = new TCanvas(""cst1"",""cst1"",700,400);; cst1->Divide(2,1);. auto hst11 = new TH1F(""hst11"", """", 20, -10, 10);; hst11->Sumw2();; hst11->FillRandom(""gaus"", 1000);; hst11->SetFillColor(kViolet);; hst11->SetLineColor(kViolet);. auto hst12 = new TH1F(""hst12"", """", 20, -10, 10);; hst12->FillRandom(""gaus"", 500);; hst12->SetFillColor(kBlue);; hst12->SetLineColor(kBlue);. THStack st1(""st1"", ""st1"");; st1.Add(hst11);; st1.Add(hst12);. cst1->cd(1); st1.Draw();; cst1->cd(2); st1.Draw(""hist"");; }; End_Macro. \anchor HP27; ### Drawing of 3D implicit functions. 3D implicit functions (`TF3`) can be drawn as iso-surfaces.; The implicit function f(x,y,z) = 0 is drawn in cartesian coordinates.; In the following example the options ""FB"" and ""BB"" suppress the; ""Front Box"" and ""Back Box"" around the plot. Begin_Macro(source); {; auto c2 = new TCanvas(""c2"",""c2"",600,400);; auto f3 = new TF3(""f3"",""sin(x*x+y*y+z*z-36)"",-2,2,-2,2,-2,2);; f3->SetClipp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:96771,error,errors,96771,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['errors']
Availability," entries of the 2-D histogram, otherwise; /// the number of entries is incremented by 1 for all non empty cells.; ///; /// if option ""d"" is specified, the profile is drawn in the current pad.; ///; /// if option ""o"" , the original axis range of the target axis will be; /// kept, but only bins inside the selected range will be filled.; ///; /// The option can also be used to specify the projected profile error type.; /// Values which can be used are 's', 'i', or 'g'. See TProfile::BuildOptions for details; /// Using a TCutG object, it is possible to select a sub-range of a 2-D histogram.; ///; /// One must create a graphical cut (mouse or C++) and specify the name; /// of the cut between [] in the option.; /// For example, with a TCutG named ""cutg"", one can call:; /// myhist->ProfileY("" "",firstybin,lastybin,""[cutg]"");; /// To invert the cut, it is enough to put a ""-"" in front of its name:; /// myhist->ProfileY("" "",firstybin,lastybin,""[-cutg]"");; /// It is possible to apply several cuts:; /// myhist->ProfileY("" "",firstybin,lastybin,""[cutg1,cutg2]"");; ///; /// NOTE that if a TProfile named ""name"" exists in the current directory or pad with; /// a compatible axis the profile is reset and filled again with the projected contents of the TH2.; /// In the case of axis incompatibility an error is reported and a NULL pointer is returned.; ///; /// NOTE that the Y axis attributes of the TH2 are copied to the X axis of the profile.; ///; /// NOTE that the default under- / overflow behavior differs from what ProjectionX; /// does! Profiles take the bin center into account, so here the under- and overflow; /// bins are ignored by default.; ///; /// NOTE that the return profile histogram is computed using the X bin center values instead of; /// the real X values which are used to fill the 2d histogram. Therefore the obtained profile is just an approximation of the; /// correct profile histogram that would be obtained when filling it directly with the original data (see ROOT-7770)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:1706,error,error,1706,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,1,['error'],['error']
Availability," errors. Begin_Macro(source); {; auto c43 = new TCanvas(""c43"",""c43"",200,10,600,400);; c43->DrawFrame(0., -0.5, 6., 2);. double x[5] = {1, 2, 3, 4, 5};; double zero[5] = {0, 0, 0, 0, 0};. // data set (1) with stat and sys errors; double py1[5] = {1.2, 1.15, 1.19, 0.9, 1.4};; double ey_stat1[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to draw it only with the stat errors; auto graph2 = new TGraphErrors(5, x, y2, zero, ey_stat2);; graph2->SetMarkerStyle(24);; graph2->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");; }; End_Macro. \anchor GrP3b; #### TGraphAsymmErrors; A `TGraphAsymmErrors` is like a `TGraphErrors` but the errors; defined along X and Y are not symmetric: The left and right errors are; different along X and the bottom and up errors are different along Y. Begin_Macro(source); {; auto c44 = new TCanvas(""c44"",""c44"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double aexh[] = {0.5, 0.4, 0.3, 0.2, 0.1};; double aeyl[] = {1, 0.5, 1, 0.5, 1};; double aeyh[] = {0.5, 1, 0.5, 1, 0.5};; auto gae = new TGraphAsymmErrors(5, ax, ay, aexl, aexh, aeyl, aeyh);; gae->SetTitle(""Not symmetric errors"");; gae->SetFillColor(2);; gae->SetFillStyle(3001);; gae->Draw(""a2"");; gae->Draw(""p"");; }; End_Macro. \anchor G",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:10743,error,errors,10743,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['errors']
Availability," event will be overwritten by the new data. All internal members that are; /// TObject* are automatically deleted. It is important that these members; /// be in a valid state when GetEntry is called. Pointers must be correctly; /// initialized. However these internal members will not be deleted if the; /// characters ""->"" are specified as the first characters in the comment; /// field of the data member declaration.; ///; /// If ""->"" is specified, the pointer member is read via pointer->Streamer(buf).; /// In this case, it is assumed that the pointer is never null (case of; /// pointer TClonesArray *fTracks in the Event example). If ""->"" is not; /// specified, the pointer member is read via buf >> pointer. In this case; /// the pointer may be null. Note that the option with ""->"" is faster to; /// read or write and it also consumes less space in the file.; ///; /// ## OPTION 2; ///; /// The option AutoDelete is set; /// ~~~ {.cpp}; /// TBranch *branch = T.GetBranch(""event"");; /// branch->SetAddress(&event);; /// branch->SetAutoDelete(true);; /// for (Long64_t i=0;i<nentries;i++) {; /// T.GetEntry(i);; /// // the object event has been filled at this point; /// }; /// ~~~; /// In this case, at each iteration, the object event is deleted by GetEntry; /// and a new instance of Event is created and filled.; ///; /// ## OPTION 3; ///; /// ~~~ {.cpp}; /// Same as option 1, but you delete yourself the event.; ///; /// for (Long64_t i=0;i<nentries;i++) {; /// delete event;; /// event = 0; // EXTREMELY IMPORTANT; /// T.GetEntry(i);; /// // the object event has been filled at this point; /// }; /// ~~~; /// It is strongly recommended to use the default option 1. It has the; /// additional advantage that functions like TTree::Draw (internally calling; /// TTree::GetEntry) will be functional even when the classes in the file are; /// not available.; ///; /// Note: See the comments in TBranchElement::SetAddress() for the; /// object ownership policy of the underlying (user) data.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:4324,avail,available,4324,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['avail'],['available']
Availability," exist, they are coded using one bit each (0 and 1).; 5. There is no way of sending zero distance codes--a dummy must be; sent if there are none. (History: a pre 2.0 version of PKZIP would; store blocks with no distance codes, but this was discovered to be; too harsh a criterion.) Valid only for 1.93a. 2.04c does allow; zero distance codes, which is sent as one code of zero bits in; length.; 6. There are up to 286 literal/length codes. Code 256 represents the; end-of-block. Note however that the static length tree defines; 288 codes just to fill out the Huffman codes. Codes 286 and 287; cannot be used though, since there is no length base or extra bits; defined for them. Similarily, there are up to 30 distance codes.; However, static trees define 32 codes (all 5 bits) to fill out the; Huffman codes, but the last two had better not show up in the data.; 7. Unzip can check dynamic Huffman blocks for complete code sets.; The exception is that a single code would not be complete (see #4).; 8. The five bits following the block type is really the number of; literal codes sent minus 257.; 9. Length codes 8,16,16 are interpreted as 13 length codes of 8 bits; (1+6+6). Therefore, to output three times the length, you output; three codes (1+1+1), whereas to output four times the same length,; you only need two codes (1+3). Hmm.; 10. In the tree reconstruction algorithm, Code = Code + Increment; only if BitLength(i) is not zero. (Pretty obvious.); 11. Correction: 4 Bits: # of Bit Length codes - 4 (4 - 19); 12. Note: length code 284 can represent 227-258, but length code 285; really is 258. The last length deserves its own, short code; since it gets used a lot in very redundant files. The length; 258 is special since 258 - 3 (the min match length) is 255.; 13. The literal/length and distance code bit lengths are read as a; single stream of lengths. It is possible (and advantageous) for; a repeat code (16, 17, or 18) to go across the boundary between; the two sets of lengths.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:8461,redundant,redundant,8461,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['redundant'],['redundant']
Availability," existence of limits has probably not prevented MINUIT; from finding the right minimum. On the other hand, if one or more; parameters is near its limit at the minimum, this may be because the true; minimum is indeed at a limit, or it may be because the minimizer has; become ``blocked'' at a limit. This may normally happen only if the; parameter is so close to a limit (internal value at an odd multiple of; \f$\pm \frac{\pi}{2}\f$; that MINUIT prints a warning to this effect when it prints; the parameter values. The minimizer can become blocked at a limit, because at a limit; the derivative seen by the minimizer; \f$\partial F / \partial P_{\mathrm{int}}\f$; is zero no matter what the real derivative; \f$\partial F / \partial P_{\mathrm{ext}}\f$ is. \f[; \frac{\partial F}{\partial P_{\mathrm{int}}} =; \frac{\partial F}{\partial P_{\mathrm{ext}}}; \frac{\partial P_{\mathrm{ext}}}{\partial P_{\mathrm{int}}} =; \frac{\partial F}{\partial P_{\mathrm{ext}}} = 0; \f]. #### Getting the right parameter errors with limits. In the best case, where the minimum is far from any limits, MINUIT will; correctly transform the error matrix, and the parameter errors it reports; should be accurate and very close to those you would have got without; limits. In other cases (which should be more common, since otherwise you; wouldn't need limits), the very meaning of parameter errors becomes; problematic. Mathematically, since the limit is an absolute constraint on; the parameter, a parameter at its limit has no error, at least in one; direction. The error matrix, which can assign only symmetric errors, then; becomes essentially meaningless. ### Interpretation of Parameter Errors:. There are two kinds of problems that can arise: the reliability of; MINUIT's error estimates, and their statistical interpretation, assuming; they are accurate. ### Statistical interpretation:. For discussion of basic concepts, such as the meaning of the elements of; the error matrix, or setting of exact confidence",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:6830,error,errors,6830,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['errors']
Availability," face within the font file; * size - font size in points. Applicable only to scalable fonts,; * such as TrueType.; * verbose - if True, extensive error messages will be printed if; * problems encountered.; * RETURN VALUE; * pointer to Opened ASFont structure, containing all the glyphs of the; * font, as well as other relevant info. On failure returns NULL.; * DESCRIPTION; * open_freetype_font() will attempt to find font file in any of the; * directories specified in ASFontManager's font_path. If it fails to do; * so - then it will check if filename has alldigit extentions. It will; * then try to interpret that extention as a face number, and try and; * find the file with extention stripped off.; * If file was found function will atempt to read it using FreeType; * library. If requested face is not available in the font - face 0 will; * be used.; * On success all the font's glyphs will be rendered and cached, and; * needed font geometry info collected.; * When FreeType Library is not available that function does nothing.; *********/; /****f* libAfterImage/asfont/open_X11_font(); * NAME; * open_X11_font(); * SYNOPSIS; * ASFont *open_X11_font( ASFontManager *fontman,; * const char *font_string);; * INPUTS; * fontman - pointer to previously created ASFontManager. Needed for; * connection X Server.; * font_string - name of the font as recognized by Xlib.; * RETURN VALUE; * pointer to Opened ASFont structure, containing all the glyphs of the; * font, as well as other relevant info. On failure returns NULL.; * DESCRIPTION; * open_X11_font() attempts to load and query font using Xlib calls.; * On success it goes thgroughthe codemap of the font and renders all; * the glyphs available. Glyphs then gets transfered to the client's; * memory and encoded using RLE compression. At this time smoothing; * filters are applied on glyph pixmaps, if its size exceeds threshold.; * TODO; * implement proper XFontSet support, when used with I18N enabled.; *********/; /****f* libAfterImage/a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h:1456,avail,available,1456,graf2d/asimage/src/libAfterImage/asfont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h,1,['avail'],['available']
Availability," file. If you are writing the file, fill in the information; * you want to put into the PNG file, using png_set_*() functions, then; * call png_write_info().; *; * The names chosen should be very close to the PNG specification, so; * consult that document for information about the meaning of each field.; *; * With libpng < 0.95, it was only possible to directly set and read the; * the values in the png_info_struct, which meant that the contents and; * order of the values had to remain fixed. With libpng 0.95 and later,; * however, there are now functions that abstract the contents of; * png_info_struct from the application, so this makes it easier to use; * libpng with dynamic libraries, and even makes it possible to use; * libraries that don't have all of the libpng ancillary chunk-handing; * functionality. In libpng-1.5.0 this was moved into a separate private; * file that is not visible to applications.; *; * The following members may have allocated storage attached that should be; * cleaned up before the structure is discarded: palette, trans, text,; * pcal_purpose, pcal_units, pcal_params, hist, iccp_name, iccp_profile,; * splt_palettes, scal_unit, row_pointers, and unknowns. By default, these; * are automatically freed when the info structure is deallocated, if they were; * allocated internally by libpng. This behavior can be changed by means; * of the png_data_freer() function.; *; * More allocation details: all the chunk-reading functions that; * change these members go through the corresponding png_set_*; * functions. A function to clear these members is available: see; * png_free_data(). The png_set_* functions do not depend on being; * able to point info structure members to any of the storage they are; * passed (they make their own copies), EXCEPT that the png_set_text; * functions use the same storage passed to them in the text_ptr or; * itxt_ptr structure argument, and the png_set_rows and png_set_unknowns; * functions do not make their own copies.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pnginfo.h:2222,avail,available,2222,graf2d/asimage/src/libAfterImage/libpng/pnginfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pnginfo.h,1,['avail'],['available']
Availability," for efficiency corrections); //; // define: Norm_j = sum_k B_kj (data member fSumOverY); //; // the derivative of A wrt this input matrix B is given by:; //; // dA_ij / dB_kj = ( delta_ik - A_ij ) * 1/Norm_j; //; // The covariance matrix Vxx is:; //; // Vxx_mn = sum_ijlk [ (dX_m / dA_ij) * (dA_ij / dB_kj) * DB_kj; // * (dX_n / dA_lj) * (dA_lj / dB_kj) ]; //; // where DB_kj is the error on B_kj squared; // Simplify the sum over k:; //; // sum_k [ (dA_ij / dB_kj) * DB_kj * (dA_lj / dB_kj) ]; // = sum_k [ ( delta_ik - A_ij ) * 1/Norm_j * DB_kj *; // * ( delta_lk - A_lj ) * 1/Norm_j ]; // = sum_k [ ( delta_ik*delta_lk - delta_ik*A_lj - delta_lk*A_ij; // + A_ij * A_lj ) * DB_kj / Norm_j^2 ]; //; // introduce normalized errors: Rsq_kj = DB_kj / Norm_j^2; // after summing over k:; // delta_ik*delta_lk*Rsq_kj -> delta_il*Rsq_ij; // delta_ik*A_lj*Rsq_kj -> A_lj*Rsq_ij; // delta_lk*A_ij*Rsq_kj -> A_ij*Rsq_lj; // A_ij*A_lj*Rsq_kj -> A_ij*A_lj*sum_k(Rsq_kj); //; // introduce sum of normalized errors squared: SRsq_j = sum_k(Rsq_kj); //; // Note: Rsq_ij is stored as fDAinRelSq (excludes extra indices of B); // and SRsq_j is stored as fDAinColRelSq (sum includes all indices of B); //; // Vxx_nm = sum_ijl [ (dX_m / dA_ij) * (dX_n / dA_lj); // (delta_il*Rsq_ij - A_lj*Rsq_ij - A_ij*Rsq_lj + A_ij*A_lj *SRsq_j) ]; //; // Vxx_nm = sum_j [ F_mj * F_nj * SRsq_j; // - sum_j [ G_mj * F_nj ]; // - sum_j [ F_mj * G_nj ]; // + sum_ij [ (dX_m / dA_ij) * (dX_n / dA_lj) * Rsq_ij ]; //; // where:; // F_mj = sum_i [ (dX_m / dA_ij) * A_ij ]; // G_mj = sum_i [ (dX_m / dA_ij) * Rsq_ij ]; //; // In order to avoid explicitly calculating the 3-dimensional tensor; // (dX_m/dA_ij) the sums are evaluated further, using; // dX_k / dA_ij = M0_kj * Z0_i - M1_ki * Z1_j; //; // F_mj = M0_mj * (A# Z0)_j - (M1 A)_mj Z1_j; // G_mj = M0_mj * (Rsq# Z0)_j - (M1 Rsq)_mj Z1_j; //; // and; //; // sum_ij [ (dX_m/dA_ij) * (dX_n/dA_ij) * Rsq_ij ] =; // sum_j [ M0_mj * M0_nj * [ sum_i (Z0_i)^2 * Rsq_ij ] ]; // + sum_i [ M1_m",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:1628,error,errors,1628,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,1,['error'],['errors']
Availability," gives us much better register allocation, possible compiler; /// optimizations and a fast start-up. But this brings the major issue; /// as well: msan needs to see all program events, including system; /// calls and reads/writes in system libraries, so we either need to; /// compile *everything* with msan or use a binary translation; /// component (e.g. DynamoRIO) to instrument pre-built libraries.; /// Another difference from Memcheck is that we use 8 shadow bits per; /// byte of application memory and use a direct shadow mapping. This; /// greatly simplifies the instrumentation code and avoids races on; /// shadow updates (Memcheck is single-threaded so races are not a; /// concern there. Memcheck uses 2 shadow bits per byte with a slow; /// path storage that uses 8 bits per byte).; ///; /// The default value of shadow is 0, which means ""clean"" (not poisoned).; ///; /// Every module initializer should call __msan_init to ensure that the; /// shadow memory is ready. On error, __msan_warning is called. Since; /// parameters and return values may be passed via registers, we have a; /// specialized thread-local shadow for return values; /// (__msan_retval_tls) and parameters (__msan_param_tls).; ///; /// Origin tracking.; ///; /// MemorySanitizer can track origins (allocation points) of all uninitialized; /// values. This behavior is controlled with a flag (msan-track-origins) and is; /// disabled by default.; ///; /// Origins are 4-byte values created and interpreted by the runtime library.; /// They are stored in a second shadow mapping, one 4-byte value for 4 bytes; /// of application memory. Propagation of origins is basically a bunch of; /// ""select"" instructions that pick the origin of a dirty argument, if an; /// instruction has one.; ///; /// Every 4 aligned, consecutive bytes of application memory have one origin; /// value associated with them. If these bytes contain uninitialized data; /// coming from 2 different allocations, the last store wins. Because o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp:2115,error,error,2115,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,1,['error'],['error']
Availability," h1->GetBinContent(i);; hint1->SetBinContent(i,sum);; }. // scale hint1 to the pad coordinates; float rightmax = 1.1*hint1->GetMaximum();; float scale = gPad->GetUymax()/rightmax;; hint1->SetLineColor(kRed);; hint1->Scale(scale);; hint1->Draw(""same"");. // draw an axis on the right side; auto axis = new TGaxis(gPad->GetUxmax(),gPad->GetUymin(),; gPad->GetUxmax(), gPad->GetUymax(),0,rightmax,510,""+L"");; axis->SetLineColor(kRed);; axis->SetTextColor(kRed);; axis->Draw();; }; End_Macro. \anchor HP07; ### Statistics Display. The type of information shown in the histogram statistics box can be selected; with:. gStyle->SetOptStat(mode);. The `mode` has up to nine digits that can be set to on (1 or 2), off (0). mode = ksiourmen (default = 000001111); k = 1; kurtosis printed; k = 2; kurtosis and kurtosis error printed; s = 1; skewness printed; s = 2; skewness and skewness error printed; i = 1; integral of bins printed; i = 2; integral of bins with option ""width"" printed; o = 1; number of overflows printed; u = 1; number of underflows printed; r = 1; standard deviation printed; r = 2; standard deviation and standard deviation error printed; m = 1; mean value printed; m = 2; mean and mean error values printed; e = 1; number of entries printed; n = 1; name of histogram is printed. For example:. gStyle->SetOptStat(11);. displays only the name of histogram and the number of entries, whereas:. gStyle->SetOptStat(1101);. displays the name of histogram, mean value and standard deviation. <b>WARNING 1:</b> never do:. gStyle->SetOptStat(0001111);. but instead do:. gStyle->SetOptStat(1111);. because `0001111` will be taken as an octal number!. <b>WARNING 2:</b> for backward compatibility with older versions. gStyle->SetOptStat(1);. is taken as:. gStyle->SetOptStat(1111). To print only the name of the histogram do:. gStyle->SetOptStat(1000000001);. <b>NOTE</b> that in case of 2D histograms, when selecting only underflow; (10000) or overflow (100000), the statistics box will show all comb",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:21149,error,error,21149,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,4,['error'],['error']
Availability," h2b = new TH1F(""h2b"",""h2b"",nx,0,nx);; h2b->SetFillColor(38);; h2b->SetBarWidth(0.4);; h2b->SetBarOffset(0.5);; h2b->SetStats(0);; for (i=1;i<=nx;i++) h2b->SetBinContent(i, d_35_1[i-1]);. h2b->Draw(""b same"");; }; End_Macro. \anchor HP10; ### The ""BAR"" and ""HBAR"" options. When the option `bar` or `hbar` is specified, a bar chart is drawn. A vertical; bar-chart is drawn with the options `bar`, `bar0`, `bar1`, `bar2`, `bar3`, `bar4`.; An horizontal bar-chart is drawn with the options `hbar`, `hbar0`, `hbar1`,; `hbar2`, `hbar3`, `hbar4` (hbars.C). - The bar is filled with the histogram fill color.; - The left side of the bar is drawn with a light fill color.; - The right side of the bar is drawn with a dark fill color.; - The percentage of the bar drawn with either the light or dark color is:; - 0% for option ""(h)bar"" or ""(h)bar0""; - 10% for option ""(h)bar1""; - 20% for option ""(h)bar2""; - 30% for option ""(h)bar3""; - 40% for option ""(h)bar4"". When an histogram has errors the option [""HIST""](\ref OPTHIST) together with the `(h)bar` option. Begin_Macro(source); ../../../tutorials/hist/hbars.C; End_Macro. To control the bar width (default is the bin width) `TH1::SetBarWidth()`; should be used. To control the bar offset (default is 0) `TH1::SetBarOffset()` should; be used. These two parameters are useful when several histograms are plotted using; the option `SAME`. They allow to plot the histograms next to each other. \anchor HP11; ### The SCATter plot option (legacy draw option). \attention; Use of option `SCAT` has been deprecated. It was the default drawing option for 2D and; 3D histograms. The new default option is `COL` (heat-map). For each cell (i,j) a number of points proportional to the cell content is; drawn. A maximum of `kNMAX` points per cell is drawn. If the maximum is above; `kNMAX` contents are normalized to `kNMAX` (`kNMAX=2000`).; If option is of the form `scat=ff`, (eg `scat=1.8`,; `scat=1e-3`), then `ff` is used as a scale factor to compute the; number of ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:29997,error,errors,29997,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['errors']
Availability," height,; * unsigned long plane_mask,; * Bool keep_cache,; * unsigned int compression );; * INPUTS; * asv 		 - pointer to valid ASVisual structure; * rgb 		 - source Pixmap for red, green and blue channels; * a 		 - source Pixmap for the alpha channel; * x, y,; * width, height- rectangle on Pixmap to be encoded into ASImage.; * plane_mask - limits color planes to be copied from Pixmap.; * keep_cache - indicates if we should keep XImage, used to copy; * image data from the X server, and attached it to ; * 				 ximage member of resulting ASImage.; * compression - degree of compression of resulting ASImage.; * RETURN VALUE; * pointer to newly allocated ASImage, containing encoded data, on; * success. NULL on failure.; * DESCRIPTION; * picture2asimage will obtain XImage of the requested area of the; * X Pixmap, If alpha channel pixmap is supplied - it will be used to ; * encode ASImage's alpha channel. Alpha channel pixmap must be either; * 8 or 1 bit deep, and it must have the same dimentions as main Pixmap.; *********/; /****f* libAfterImage/pixmap2asimage(); * NAME; * pixmap2asimage(); * SYNOPSIS; * ASImage *pixmap2asimage ( struct ASVisual *asv, Pixmap p,; * int x, int y,; * unsigned int width,; * unsigned int height,; * unsigned long plane_mask,; * Bool keep_cache,; * unsigned int compression );; * INPUTS; * asv 		 - pointer to valid ASVisual structure; * p 		 - source Pixmap; * x, y,; * width, height- rectangle on Pixmap to be encoded into ASImage.; * plane_mask - limits color planes to be copied from Pixmap.; * keep_cache - indicates if we should keep XImage, used to copy; * image data from the X server, and attached it to ; * ximage member of resulting ASImage.; * compression - degree of compression of resulting ASImage.; * RETURN VALUE; * pointer to newly allocated ASImage, containing encoded data, on; * success. NULL on failure.; * DESCRIPTION; * same as picture2asimage() with alpha pixmap set to None. Supplied for; * compatibility and convinience.; *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h:5320,failure,failure,5320,graf2d/asimage/src/libAfterImage/ximage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h,1,['failure'],['failure']
Availability," hsimple.C). #include ""TFile.h""; #include ""TH1F.h""; #include ""TTreeReader.h""; #include ""TTreeReaderValue.h"". void hsimpleReader() {; // Create a histogram for the values we read.; TH1F(""h1"", ""ntuple"", 100, -4, 4);. // Open the file containing the tree.; TFile *myFile = TFile::Open(""$ROOTSYS/tutorials/hsimple.root"");. // Create a TTreeReader for the tree, for instance by passing the; // TTree's name and the TDirectory / TFile it is in.; TTreeReader myReader(""ntuple"", myFile);. // The branch ""px"" contains floats; access them as myPx.; TTreeReaderValue<Float_t> myPx(myReader, ""px"");; // The branch ""py"" contains floats, too; access those as myPy.; TTreeReaderValue<Float_t> myPy(myReader, ""py"");. // Loop over all entries of the TTree or TChain.; while (myReader.Next()) {; // Just access the data as if myPx and myPy were iterators (note the '*'; // in front of them):; myHist->Fill(*myPx + *myPy);; }. myHist->Draw();; }; ~~~. A more complete example including error handling and a few combinations of; TTreeReaderValue and TTreeReaderArray would look like this:. ~~~{.cpp}; #include <TFile.h>; #include <TH1.h>; #include <TTreeReader.h>; #include <TTreeReaderValue.h>; #include <TTreeReaderArray.h>. #include ""TriggerInfo.h""; #include ""Muon.h""; #include ""Tau.h"". #include <vector>; #include <iostream>. bool CheckValue(ROOT::Internal::TTreeReaderValueBase& value) {; if (value.GetSetupStatus() < 0) {; std::cerr << ""Error "" << value.GetSetupStatus(); << ""setting up reader for "" << value.GetBranchName() << '\n';; return false;; }; return true;; }. // Analyze the tree ""MyTree"" in the file passed into the function.; // Returns false in case of errors.; bool analyze(TFile* file) {; // Create a TTreeReader named ""MyTree"" from the given TDirectory.; // The TTreeReader gives access to the TTree to the TTreeReaderValue and; // TTreeReaderArray objects. It knows the current entry number and knows; // how to iterate through the TTree.; TTreeReader reader(""MyTree"", file);. // Read a single floa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:1968,error,error,1968,tree/treeplayer/src/TTreeReader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx,1,['error'],['error']
Availability," if the; parameter is so close to a limit (internal value at an odd multiple of; \f$\pm \frac{\pi}{2}\f$; that MINUIT prints a warning to this effect when it prints; the parameter values. The minimizer can become blocked at a limit, because at a limit; the derivative seen by the minimizer; \f$\partial F / \partial P_{\mathrm{int}}\f$; is zero no matter what the real derivative; \f$\partial F / \partial P_{\mathrm{ext}}\f$ is. \f[; \frac{\partial F}{\partial P_{\mathrm{int}}} =; \frac{\partial F}{\partial P_{\mathrm{ext}}}; \frac{\partial P_{\mathrm{ext}}}{\partial P_{\mathrm{int}}} =; \frac{\partial F}{\partial P_{\mathrm{ext}}} = 0; \f]. #### Getting the right parameter errors with limits. In the best case, where the minimum is far from any limits, MINUIT will; correctly transform the error matrix, and the parameter errors it reports; should be accurate and very close to those you would have got without; limits. In other cases (which should be more common, since otherwise you; wouldn't need limits), the very meaning of parameter errors becomes; problematic. Mathematically, since the limit is an absolute constraint on; the parameter, a parameter at its limit has no error, at least in one; direction. The error matrix, which can assign only symmetric errors, then; becomes essentially meaningless. ### Interpretation of Parameter Errors:. There are two kinds of problems that can arise: the reliability of; MINUIT's error estimates, and their statistical interpretation, assuming; they are accurate. ### Statistical interpretation:. For discussion of basic concepts, such as the meaning of the elements of; the error matrix, or setting of exact confidence levels see:. 1. F.James.; Determining the statistical Significance of experimental Results.; Technical Report DD/81/02 and CERN Report 81-03, CERN, 1981. 2. W.T.Eadie, D.Drijard, F.James, M.Roos, and B.Sadoulet.; Statistical Methods in Experimental Physics.; North-Holland, 1971. ### Reliability of MINUIT error estimates. MIN",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:7196,error,errors,7196,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['errors']
Availability," immediate operand \a M to perform a comparison of string; /// data with implicitly defined lengths that is contained in source operands; /// \a A and \a B. Returns 1 if the bit mask is zero and the length of the; /// string in \a B is the maximum, otherwise, returns 0.; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// int _mm_cmpistra(__m128i A, __m128i B, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VPCMPISTRI / PCMPISTRI </c>; /// instruction.; ///; /// \param A; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param B; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param M; /// An 8-bit immediate operand specifying whether the characters are bytes or; /// words and the type of comparison to perform. \n; /// Bits [1:0]: Determine source data format. \n; /// 00: 16 unsigned bytes \n; /// 01: 8 unsigned words \n; /// 10: 16 signed bytes \n; /// 11: 8 signed words \n; /// Bits [3:2]: Determine comparison type and aggregation method. \n; /// 00: Subset: Each character in \a B is compared for equality with all; /// the characters in \a A. \n; /// 01: Ranges: Each character in \a B is compared to \a A. The comparison; /// basis is greater than or equal for even-indexed elements in \a A,; /// and less than or equal for odd-indexed elements in \a A. \n; /// 10: Match: Compare each pair of corresponding characters in \a A and; /// \a B for equality. \n; /// 11: Substring: Search \a B for substring matches of \a A. \n; /// Bits [5:4]: Determine whether to perform a one's complement on the bit; /// mask of the comparison results. \n; /// 00: No effect. \n; /// 01: Negate the bit mask. \n; /// 10: No effect. \n; /// 11: Negate the bit mask only for bits with an index less than or equal; /// to the size of \a A or \a B. \n; /// \returns Returns 1 if the bit mask is zero and the length of the string in; /// \a B is the maximum; otherwise, returns 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:1720,mask,mask,1720,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,4,['mask'],['mask']
Availability," in order to execute a script, a user has to type at the root; /// prompt; /// ~~~ {.cpp}; /// .X myfunc.C(arg1,arg2); /// ~~~; /// We allow them to type:; /// ~~~ {.cpp}; /// .X myfunc.C++(arg1,arg2); /// ~~~; /// or; /// ~~~ {.cpp}; /// .X myfunc.C+(arg1,arg2); /// ~~~; /// In which case an external compiler will be called to create a shared; /// library. This shared library will then be loaded and the function; /// myfunc will be called with the two arguments. With '++' the shared library; /// is always recompiled. With '+' the shared library is recompiled only; /// if it does not exist yet or the macro file is newer than the shared; /// library.; ///; /// Of course the + and ++ notation is supported in similar way for .x and .L.; ///; /// Through the function TSystem::SetMakeSharedLib(), the user will be able to; /// indicate, with shell commands, how to build a shared library (a good; /// default will be provided). The most common change, namely where to find; /// header files, will be available through the function; /// TSystem::SetIncludePath().; /// A good default will be provided so that a typical user session should be at; /// most:; /// ~~~ {.cpp}; /// root[1] gSystem->SetIncludePath(""-I$ROOTSYS/include; /// -I$HOME/mypackage/include"");; /// root[2] .x myfunc.C++(10,20);; /// ~~~; /// The user may sometimes try to compile a script before it has loaded all the; /// needed shared libraries. In this case we want to be helpful and output a; /// list of the unresolved symbols. So if the loading of the created shared; /// library fails, we will try to build a executable that contains the; /// script. The linker should then output a list of missing symbols.; ///; /// To support this we provide a TSystem::SetMakeExe() function, that sets the; /// directive telling how to create an executable. The loader will need; /// to be informed of all the libraries available. The information about; /// the libraries that has been loaded by .L and TSystem::Load() is accessible",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:3840,avail,available,3840,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['avail'],['available']
Availability," include this header; explicitly, this is not required for ROOT macros. . An example usage of Vary() and \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" in C++:. ~~~{.cpp}; auto nominal_hx =; df.Vary(""pt"", ""ROOT::RVecD{pt*0.9f, pt*1.1f}"", {""down"", ""up""}); .Filter(""pt > pt_cut""); .Define(""x"", someFunc, {""pt""}); .Histo1D<float>(""x"");. // request the generation of varied results from the nominal_hx; ROOT::RDF::Experimental::RResultMap<TH1D> hx = ROOT::RDF::Experimental::VariationsFor(nominal_hx);. // the event loop runs here, upon first access to any of the results or varied results:; hx[""nominal""].Draw(); // same effect as nominal_hx->Draw(); hx[""pt:down""].Draw(""SAME"");; hx[""pt:up""].Draw(""SAME"");; ~~~. A list of variation ""tags"" is passed as the last argument to Vary(). The tags give names to the varied values that are returned; as elements of an RVec of the appropriate C++ type. The number of variation tags must correspond to the number of elements of; this RVec (2 in the example above: the first element will correspond to the tag ""down"", the second; to the tag ""up""). The _full_ variation name will be composed of the varied column name and the variation tags (e.g.; ""pt:down"", ""pt:up"" in this example). Python usage looks similar. Note how we use the ""pt"" column as usual in the Filter() and Define() calls and we simply use ""x"" as the value to fill; the resulting histogram. To produce the varied results, RDataFrame will automatically execute the Filter and Define; calls for each variation and fill the histogram with values and cuts that depend on the variation. There is no limitation to the complexity of a Vary() expression. Just like for the Define() and Filter() calls, users are; not limited to string expressions but they can also pass any valid C++ callable, including lambda functions and; complex functors. The callable can be applied to zero or more existing columns and it will always receive their; _nominal_ value in input. #### Varying multiple column",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:56744,down,down,56744,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['down'],['down']
Availability," including. In addition to provide the API for function minimization (via ROOT::Math::Minimizer::Minimize) the Minimizer class provides:; - the interface for setting the function to be minimized. The objective function passed to the Minimizer must implement the multi-dimensional generic interface; ROOT::Math::IBaseFunctionMultiDim. If the function provides gradient calculation (e.g. implementing the ROOT::Math::IGradientFunctionMultiDim interface); the gradient will be used by the Minimizer class, when needed. There are convenient classes for the users to wrap their own functions in this required interface for minimization.; These are the `ROOT::Math::Functor` class and the `ROOT::Math::GradFunctor` class for wrapping functions providing both evaluation and gradient. Some methods, like Fumili, Fumili2 and GSLMultiFit are; specialized method for least-square and also likelihood minimizations. They require then that the given function implements in addition; the `ROOT::Math::FitMethodFunction` interface.; - The interface for setting the initial values for the function variables (which are the parameters in; of the model function in case of solving for fitting) and specifying their limits.; - The interface to set and retrieve basic minimization parameters. These parameter are controlled by the class `ROOT::Math::MinimizerOptions`.; When no parameters are specified the default ones are used. Specific Minimizer options can also be passed via the `MinimizerOptions` class.; For the list of the available option parameter one must look at the documentation of the corresponding derived class.; - The interface to retrieve the result of minimization ( minimum X values, function value, gradient, error on the minimum, etc...); - The interface to perform a Scan, Hesse or a Contour plot (for the minimizers that support this, i.e. Minuit and Minuit2). An example on how to use this interface is the tutorial NumericalMinimization.C in the tutorials/fit directory. @ingroup MultiMin; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:3577,avail,available,3577,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,2,"['avail', 'error']","['available', 'error']"
Availability," input a pointer to the fitted parameter values; /// and a pointer the covariance matrix from the fit. These pointers should be retrieved from the; /// previously performed fit using the TFitResult class.; /// Note that to get the TFitResult, te fit should be done using the fit option `S`.; /// Example:; /// ~~~~{.cpp}; /// TFitResultPtr r = histo->Fit(func, ""S"");; /// func->IntegralError(x1,x2,r->GetParams(), r->GetCovarianceMatrix()->GetMatrixArray() );; /// ~~~~; ///; /// IMPORTANT NOTE1:; ///; /// A null pointer to the parameter values vector and to the covariance matrix can be passed.; /// In this case, when the parameter values pointer is null, the parameter values stored in this; /// TF1 function object are used in the integral error computation.; /// When the poassed pointer to the covariance matrix is null, a covariance matrix from the last fit is retrieved; /// from a global fitter instance when it exists. Note that the global fitter instance; /// esists only when ROOT is not running with multi-threading enabled (ROOT::IsImplicitMTEnabled() == True).; /// When the ovariance matrix from the last fit cannot be retrieved, an error message is printed and a zero value is; /// returned.; ///; ///; /// IMPORTANT NOTE2:; ///; /// When no covariance matrix is passed and in the meantime a fit is done; /// using another function, the routine will signal an error and it will return zero only; /// when the number of fit parameter is different than the values stored in TF1 (TF1::GetNpar() ).; /// In the case that npar is the same, an incorrect result is returned.; ///; /// IMPORTANT NOTE3:; ///; /// The user must pass a pointer to the elements of the full covariance matrix; /// dimensioned with the right size (npar*npar), where npar is the total number of parameters (TF1::GetNpar()),; /// including also the fixed parameters. The covariance matrix must be retrieved from the TFitResult class as; /// shown above and not from TVirtualFitter::GetCovarianceMatrix() function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:1445,error,error,1445,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,2,['error'],['error']
Availability," it allocates. For the module scope lds,; // this is via metadata indicating whether the variable is not required. If a; // pass deletes that metadata, a fatal error on disagreement with the absolute; // symbol metadata will occur. For kernel scope and dynamic, this is by _name_; // correspondence between the function and the variable. It requires the; // kernel to have a name (which is only a limitation for tests in practice) and; // for nothing to rename the corresponding symbols. This is a hazard if the pass; // is run multiple times during debugging. Alternative schemes considered all; // involve bespoke metadata.; //; // If the name correspondence can be replaced, multiple distinct kernels that; // have the same memory layout can map to the same kernel id (as the address; // itself is handled by the absolute symbol metadata) and that will allow more; // uses of the ""kernel"" style faster lowering and reduce the size of the lookup; // tables.; //; // There is a test that checks this does not fire for a graphics shader. This; // lowering is expected to work for graphics if the isKernel test is changed.; //; // The current markUsedByKernel is sufficient for PromoteAlloca but is elided; // before codegen. Replacing this with an equivalent intrinsic which lasts until; // shortly after the machine function lowering of LDS would help break the name; // mapping. The other part needed is probably to amend PromoteAlloca to embed; // the LDS variables it creates in the same struct created here. That avoids the; // current hazard where a PromoteAlloca LDS variable might be allocated before; // the kernel scope (and thus error on the address check). Given a new invariant; // that no LDS variables exist outside of the structs managed here, and an; // intrinsic that lasts until after the LDS frame lowering, it should be; // possible to drop the name mapping and fold equivalent memory layouts.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:10187,error,error,10187,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['error'],['error']
Availability," i}\int_{c-i\infty}^{c+i\infty} \phi(s) e^{\lambda_L s} ds\f]; where \f$\phi(s) = e^{C} e^{\psi(s)}\f$; with \f$ C = \kappa (1+\beta^2 \gamma )\f$; and \f$\psi(s)= s \ln \kappa + (s+\beta^2 \kappa); \cdot \left ( \int \limits_{0}^{1}; \frac{1 - e^{\frac{-st}{\kappa}}}{t} \,d t- \gamma \right ); - \kappa \, e^{\frac{-s}{\kappa}}\f$.; \f$ \gamma = 0.5772156649\dots\f$ is Euler's constant. For the class VavilovFast,; Pdf returns the Vavilov distribution as function of Landau's parameter; \f$\lambda_L = \lambda_V/\kappa - \ln \kappa\f$,; which is the convention used in the CERNLIB routines, and in the tables; by S.M. Seltzer and M.J. Berger: Energy loss stragglin of protons and mesons:; Tabulation of the Vavilov distribution, pp 187-203; in: National Research Council (U.S.), Committee on Nuclear Science:; Studies in penetration of charged particles in matter,; Nat. Akad. Sci. Publication 1133,; Nucl. Sci. Series Report No. 39,; Washington (Nat. Akad. Sci.) 1964, 388 pp.; Available from; <A HREF=""http://books.google.de/books?id=kmMrAAAAYAAJ&lpg=PP9&pg=PA187#v=onepage&q&f=false"">Google books</A>. Therefore, for small values of \f$\kappa < 0.01\f$,; pdf approaches the Landau distribution. For values \f$\kappa > 10\f$, the Gauss approximation should be used; with \f$\mu\f$ and \f$\sigma\f$ given by Vavilov::mean(kappa, beta2); and sqrt(Vavilov::variance(kappa, beta2). For values \f$\kappa > 10\f$, the Gauss approximation should be used; with \f$\mu\f$ and \f$\sigma\f$ given by Vavilov::mean(kappa, beta2); and sqrt(Vavilov::variance(kappa, beta2). The original Vavilov pdf is obtained by; v.Pdf(lambdaV/kappa-log(kappa))/kappa. For detailed description see; A. Rotondi and P. Montagna, Fast calculation of Vavilov distribution,; <A HREF=""http://dx.doi.org/10.1016/0168-583X(90)90749-K"">Nucl. Instr. and Meth. B47 (1990) 215-224</A>,; which has been implemented in; <A HREF=""https://cern-tex.web.cern.ch/cern-tex/shortwrupsdir/g115/top.html"">; CERNLIB (G115)</A>. The class stores coe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovFast.h:1269,Avail,Available,1269,math/mathmore/inc/Math/VavilovFast.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovFast.h,1,['Avail'],['Available']
Availability," mean for all the elements in; /// one entry can be calculated with: `Sum$(formula )/Length$(formula )`; /// - `Min$(formula )` : return the minimum (within one TTree entry) of the value of the; /// elements of the formula given as a parameter.; /// - `Max$(formula )` : return the maximum (within one TTree entry) of the value of the; /// elements of the formula given as a parameter.; /// - `MinIf$(formula,condition)`; /// - `MaxIf$(formula,condition)` : return the minimum (maximum) (within one TTree entry); /// of the value of the elements of the formula given as a parameter; /// if they match the condition. If no element matches the condition,; /// the result is zero. To avoid the resulting peak at zero, use the; /// pattern:; /// ~~~ {.cpp}; /// tree->Draw(""MinIf$(formula,condition)"",""condition"");; /// ~~~; /// which will avoid calculation `MinIf$` for the entries that have no match; /// for the condition.; /// - `Alt$(primary,alternate)` : return the value of ""primary"" if it is available; /// for the current iteration otherwise return the value of ""alternate"".; /// For example, with arr1[3] and arr2[2]; /// ~~~ {.cpp}; /// tree->Draw(""arr1+Alt$(arr2,0)"");; /// ~~~; /// will draw arr1[0]+arr2[0] ; arr1[1]+arr2[1] and arr1[2]+0; /// Or with a variable size array arr3; /// ~~~ {.cpp}; /// tree->Draw(""Alt$(arr3[0],0)+Alt$(arr3[1],0)+Alt$(arr3[2],0)"");; /// ~~~; /// will draw the sum arr3 for the index 0 to min(2,actual_size_of_arr3-1); /// As a comparison; /// ~~~ {.cpp}; /// tree->Draw(""arr3[0]+arr3[1]+arr3[2]"");; /// ~~~; /// will draw the sum arr3 for the index 0 to 2 only if the; /// actual_size_of_arr3 is greater or equal to 3.; /// Note that the array in 'primary' is flattened/linearized thus using; /// `Alt$` with multi-dimensional arrays of different dimensions in unlikely; /// to yield the expected results. To visualize a bit more what elements; /// would be matched by TTree::Draw, TTree::Scan can be used:; /// ~~~ {.cpp}; /// tree->Scan(""arr1:Alt$(arr2,0)"")",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:17162,avail,available,17162,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['avail'],['available']
Availability," multidimensional search key (e.g. range searches and; nearest neighbour searches). kd-trees are a special case of BSP trees. A kd-tree uses only splitting planes that are perpendicular to one of the coordinate system axes.; This differs from BSP trees, in which arbitrary splitting planes can be used.; In addition, in the typical definition every node of a kd-tree, from the root to the leaves, stores a point.; This differs from BSP trees, in which leaves are typically the only nodes that contain points; (or other geometric primitives). As a consequence, each splitting plane must go through one of; the points in the kd-tree. kd-trees are a variant that store data only in leaf nodes. ### 2. Constructing a classical kd-tree ( Pseudo code). Since there are many possible ways to choose axis-aligned splitting planes, there are many different ways; to construct kd-trees. The canonical method of kd-tree construction has the following constraints:. * As one moves down the tree, one cycles through the axes used to select the splitting planes.; (For example, the root would have an x-aligned plane, the root's children would both have y-aligned; planes, the root's grandchildren would all have z-aligned planes, and so on.); * At each step, the point selected to create the splitting plane is the median of the points being; put into the kd-tree, with respect to their coordinates in the axis being used. (Note the assumption; that we feed the entire set of points into the algorithm up-front.). This method leads to a balanced kd-tree, in which each leaf node is about the same distance from the root.; However, balanced trees are not necessarily optimal for all applications.; The following pseudo-code illustrates this canonical construction procedure (NOTE, that the procedure used; by the TKDTree class is a bit different, the following pseudo-code is given as a simple illustration of the; concept):. ~~~~; function kdtree (list of points pointList, int depth); {; if pointList is empty; re",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTree.cxx:1663,down,down,1663,math/mathcore/src/TKDTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTree.cxx,1,['down'],['down']
Availability," neurons or a sigmoid for hidden layers. This is; useful because of two theorems:. 1. A linear combination of sigmoids can approximate any; continuous function.; 2. Trained with output = 1 for the signal and 0 for the; background, the approximated function of inputs X is the probability; of signal, knowing X. ### Learning methods. The aim of all learning methods is to minimize the total error on; a set of weighted examples. The error is defined as the sum in; quadrature, divided by two, of the error on each individual output; neuron.; In all methods implemented, one needs to compute; the first derivative of that error with respect to the weights.; Exploiting the well-known properties of the derivative, especially the; derivative of compound functions, one can write:. - for a neuron: product of the local derivative with the; weighted sum on the outputs of the derivatives.; - for a synapse: product of the input with the local derivative; of the output neuron. This computation is called back-propagation of the errors. A; loop over all examples is called an epoch.; Six learning methods are implemented. #### Stochastic minimization:. is the most trivial learning method. This is the Robbins-Monro; stochastic approximation applied to multilayer perceptrons. The; weights are updated after each example according to the formula:; \f$w_{ij}(t+1) = w_{ij}(t) + \Delta w_{ij}(t)\f$. with. \f$\Delta w_{ij}(t) = - \eta(d e_p / d w_{ij} + \delta) + \epsilon \Delta w_{ij}(t-1)\f$. The parameters for this method are Eta, EtaDecay, Delta and; Epsilon. #### Steepest descent with fixed step size (batch learning):. It is the same as the stochastic; minimization, but the weights are updated after considering all the; examples, with the total derivative dEdw. The parameters for this; method are Eta, EtaDecay, Delta and Epsilon. #### Steepest descent algorithm:. Weights are set to the minimum along the line defined by the gradient. The; only parameter for this method is Tau. Lower tau = highe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:4450,error,errors,4450,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['error'],['errors']
Availability," not be implemented as one; // of the AArch64 conditional branches that do not use the flags as input; // (CB(N)Z and TB(N)Z). This is implemented by ensuring in the instruction; // selectors to not produce these instructions when speculation hardening; // is enabled. This pass will assert if it does encounter such an instruction.; // - On function call boundaries, the miss-speculation state is transferred from; // the taint register X16 to be encoded in the SP register as value 0.; //; // For the aspect of automatically hardening loads, using the taint register,; // (a.k.a. speculative load hardening, see; // https://llvm.org/docs/SpeculativeLoadHardening.html), the following; // implementation choices are made for AArch64:; // - Many of the optimizations described at; // https://llvm.org/docs/SpeculativeLoadHardening.html to harden fewer; // loads haven't been implemented yet - but for some of them there are; // FIXMEs in the code.; // - loads that load into general purpose (X or W) registers get hardened by; // masking the loaded data. For loads that load into other registers, the; // address loaded from gets hardened. It is expected that hardening the; // loaded data may be more efficient; but masking data in registers other; // than X or W is not easy and may result in being slower than just; // hardening the X address register loaded from.; // - On AArch64, CSDB instructions are inserted between the masking of the; // register and its first use, to ensure there's no non-control-flow; // speculation that might undermine the hardening mechanism.; //; // Future extensions/improvements could be:; // - Implement this functionality using full speculation barriers, akin to the; // x86-slh-lfence option. This may be more useful for the intrinsics-based; // approach than for the SLH approach to masking.; // Note that this pass already inserts the full speculation barriers if the; // function for some niche reason makes use of X16/W16.; // - no indirect branch mispredict",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp:4531,mask,masking,4531,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp,1,['mask'],['masking']
Availability," of a certain value:. Begin_Macro(source); ../../../tutorials/hist/candledecay.C; End_Macro. \anchor HP15; ### The TEXT and TEXTnn Option. For each bin the content is printed. The text attributes are:. - text font = current TStyle font (`gStyle->SetTextFont()`).; - text size = 0.02*padheight*markersize (if `h` is the histogram drawn; with the option `TEXT` the marker size can be changed with; `h->SetMarkerSize(markersize)`).; - text color = marker color. By default the format `g` is used. This format can be redefined; by calling `gStyle->SetPaintTextFormat()`. It is also possible to use `TEXTnn` in order to draw the text with; the angle `nn` (`0 < nn <= 90`). For 2D histograms the text is plotted in the center of each non empty cells.; It is possible to plot empty cells by calling `gStyle->SetHistMinimumZero()`; or providing MIN0 draw option. For 1D histogram the text is plotted at a y; position equal to the bin content. For 2D histograms when the option ""E"" (errors) is combined with the option; text (""TEXTE""), the error for each bin is also printed. Begin_Macro(source); {; auto c01 = new TCanvas(""c01"",""c01"",700,400);; c01->Divide(2,1);; auto htext1 = new TH1F(""htext1"",""Option TEXT on 1D histograms "",10,-4,4);; auto htext2 = new TH2F(""htext2"",""Option TEXT on 2D histograms "",10,-4,4,10,-20,20);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; htext1->Fill(px,0.1);; htext2->Fill(px,5*py,0.1);; }; gStyle->SetPaintTextFormat(""4.1f m"");; htext2->SetMarkerSize(1.8);; c01->cd(1);; htext2->Draw(""TEXT45"");; c01->cd(2);; htext1->Draw();; htext1->Draw(""HIST TEXT0 SAME"");; }; End_Macro. \since **ROOT version 6.07/07:**. In case several histograms are drawn on top ot each other (using option `SAME`),; the text can be shifted using `SetBarOffset()`. It specifies an offset for the; text position in each cell, in percentage of the bin width. Begin_Macro(source); {; auto c03 = new TCanvas(""c03"",""c03"",700,400);; gStyle->SetOptStat(0);; auto htext3 = new T",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:61276,error,errors,61276,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,2,['error'],"['error', 'errors']"
Availability," of available bits to zero. BYTEBITS() discards just; enough bits to put the accumulator on a byte boundary. After BYTEBITS(); and a NEEDBITS(8), then BITS(8) would return the next byte in the stream. NEEDBITS(n) uses PULLBYTE() to get an available byte of input, or to return; if there is no input available. The decoding of variable length codes uses; PULLBYTE() directly in order to pull just enough bytes to decode the next; code, and no more. Some states loop until they get enough input, making sure that enough; state information is maintained to continue the loop where it left off; if NEEDBITS() returns in the loop. For example, want, need, and keep; would all have to actually be part of the saved state in case NEEDBITS(); returns:. case STATEw:; while (want < need) {; NEEDBITS(n);; keep[want++] = BITS(n);; DROPBITS(n);; }; state = STATEx;; case STATEx:. As shown above, if the next state is also the next case, then the break; is omitted. A state may also return if there is not enough output space available to; complete that state. Those states are copying stored data, writing a; literal byte, and copying a matching string. When returning, a ""goto inf_leave"" is used to update the total counters,; update the check value, and determine whether any progress has been made; during that inflate() call in order to return the proper return code.; Progress is defined as a change in either strm->avail_in or strm->avail_out.; When there is a window, goto inf_leave will update the window with the last; output written. If a goto inf_leave occurs in the middle of decompression; and there is no window currently, goto inf_leave will create one and copy; output to the window for the next call of inflate(). In this implementation, the flush parameter of inflate() only affects the; return code (per zlib.h). inflate() always writes as much as possible to; strm->next_out, given the space available and the provided input--the effect; documented in zlib.h of Z_SYNC_FLUSH. Furthermore, inf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:2108,avail,available,2108,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,2,['avail'],['available']
Availability," of size `windowSize` each, though they consume more memory. Finally, if you control the compression process, you can also ignore all buffer size rules,; as long as the encoder and decoder progress in ""lock-step"",; aka use exactly the same buffer sizes, break contiguity at the same place, etc. Once buffers are setup, start decompression, with ZSTD_decompressBegin().; If decompression requires a dictionary, use ZSTD_decompressBegin_usingDict() or ZSTD_decompressBegin_usingDDict(). Then use ZSTD_nextSrcSizeToDecompress() and ZSTD_decompressContinue() alternatively.; ZSTD_nextSrcSizeToDecompress() tells how many bytes to provide as 'srcSize' to ZSTD_decompressContinue().; ZSTD_decompressContinue() requires this _exact_ amount of bytes, or it will fail. @result of ZSTD_decompressContinue() is the number of bytes regenerated within 'dst' (necessarily <= dstCapacity).; It can be zero : it just means ZSTD_decompressContinue() has decoded some metadata item.; It can also be an error code, which can be tested with ZSTD_isError(). A frame is fully decoded when ZSTD_nextSrcSizeToDecompress() returns zero.; Context can then be reset to start a new decompression. Note : it's possible to know if next input to present is a header or a block, using ZSTD_nextInputType().; This information is not required to properly decode a frame. == Special case : skippable frames ==. Skippable frames allow integration of user-defined data into a flow of concatenated frames.; Skippable frames will be ignored (skipped) by decompressor.; The format of skippable frames is as follows :; a) Skippable frame ID - 4 Bytes, Little endian format, any value from 0x184D2A50 to 0x184D2A5F; b) Frame Size - 4 Bytes, Little endian format, unsigned 32-bits; c) Frame Content - any content (User Data) of length equal to Frame Size; For skippable frames ZSTD_getFrameHeader() returns zfhPtr->frameType==ZSTD_skippableFrame.; For skippable frames ZSTD_decompressContinue() always returns 0 : it only skips the content.; *",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:3666,error,error,3666,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability," of the destination image with all 0; * effectively making it transparent.; *********/; /****f* libAfterImage/transform/make_gradient(); * NAME; * make_gradient() - renders linear gradient into new ASImage; * SYNOPSIS; * ASImage *make_gradient ( struct ASVisual *asv,; * struct ASGradient *grad,; * unsigned int width,; * unsigned int height,; * ASFlagType filter,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality);; * INPUTS; * asv - pointer to valid ASVisual structure; * grad - ASGradient structure defining how gradient should be; * drawn; * width - desired width of the resulting image; * height - desired height of the resulting image; * filter - only channels corresponding to set bits will be; * rendered.; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out- compression level of resulting image in range 0-100.; * quality - output quality; * RETURN VALUE; * returns newly created and encoded ASImage on success, NULL of failure.; * DESCRIPTION; * make_gradient() will create new image of requested size and it will; * fill it with gradient, described in structure pointed to by grad.; * Different dithering techniques will be applied to produce nicer; * looking gradients.; *********/; /****f* libAfterImage/transform/flip_asimage(); * NAME; * flip_asimage() - rotates ASImage in 90 degree increments; * SYNOPSIS; * ASImage *flip_asimage ( struct ASVisual *asv,; * ASImage *src,; * int offset_x, int offset_y,; * unsigned int to_width,; * unsigned int to_height,; * int flip, ASAltImFormats out_format,; * unsigned int compression_out, int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * src - source ASImage; * offset_x - left clip margin; * offset_y - right clip margin; * to_width - desired width of the resulting image; * to_height - desired height of the resulting image; * flip - flip flags determining degree of rotation.; * out_format 	- op",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:6338,failure,failure,6338,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['failure'],['failure']
Availability," of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:6692,error,error,6692,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability," of the species; in the control variable \f$x\f$, within the above defined statistical uncertainties. ### Illustrations. To illustrate the technique, one considers an example derived from the analysis where; \f$\hbox {$_s$}{\cal P}lots\f$; have been first used (charmless B decays). One is dealing with a data; sample in which two species are present: the first is termed signal and; the second background. A maximum Likelihood fit is performed to obtain; the two yields \f$N_1\f$ and \f$N_2\f$ . The fit relies on two discriminating; variables collectively denoted \f$y\f$ which are chosen within three possible; variables denoted \f${m_{\rm ES}}\f$ , \f$\Delta E\f$ and \f${\cal F}\f$.; The variable which is not incorporated in \f$y\f$ is used as the control variable; \f$x\f$ . The six distributions of the three variables are assumed to be the ones; depicted in Fig. 1. \image html splot_pdfmesNIM.png Figure 1 width=800. Distributions of the three discriminating variables available to perform the Likelihood fit:; \f${m_{\rm ES}}\f$ , \f$\Delta E\f$ , \f${\cal F}\f$ .; Among the three variables, two are used to perform the fit while one is; kept out of the fit to serve the purpose of a control variable. The; three distributions on the top (resp. bottom) of the figure correspond; to the signal (resp. background). The unit of the vertical axis is; chosen such that it indicates the number of entries per bin, if one; slices the histograms in 25 bins. A data sample being built through a Monte Carlo simulation based on the; distributions shown in Fig.; 1,; one obtains the three distributions of Fig. 2.; Whereas the distribution of \f$\Delta E\f$ clearly indicates the presence of the signal,; the distribution of \f${m_{\rm ES}}\f$ and \f${\cal F}\f$ are less obviously populated by signal. \image html splot_genfiTOTNIM.png Figure 2 width=800. Distributions of the three discriminating variables for signal plus; background. The three distributions are the ones obtained from a data; sam",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:7185,avail,available,7185,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['avail'],['available']
Availability," of type:; ///; /// ~~~ {.cpp}; /// extern void MyFittingFunction(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);; /// ~~~; ///; /// #### Note on treatment of empty bins; ///; /// Empty bins, which have the content equal to zero AND error equal to zero,; /// are excluded by default from the chi-square fit, but they are considered in the likelihood fit.; /// since they affect the likelihood if the function value in these bins is not negligible.; /// Note that if the histogram is having bins with zero content and non zero-errors they are considered as; /// any other bins in the fit. Instead bins with zero error and non-zero content are by default excluded in the chi-squared fit.; /// In general, one should not fit a histogram with non-empty bins and zero errors.; ///; /// If the bin errors are not known, one should use the fit option ""W"", which gives a weight=1 for each bin (it is an unweighted least-square; /// fit). When using option ""WW"" the empty bins will be also considered in the chi-square fit with an error of 1.; /// Note that in this fitting case (option ""W"" or ""WW"") the resulting fitted parameter errors; /// are corrected by the obtained chi2 value using this scaling expression:; /// `errorp *= sqrt(chisquare/(ndf-1))` as it is done when fitting a TGraph with; /// no point errors.; ///; /// #### Excluding points; ///; /// You can use TF1::RejectPoint inside your fitting function to exclude some points; /// within a certain range from the fit. See the tutorial `fit/fitExclude.C`.; ///; ///; /// #### Warning when using the option ""0""; ///; /// When selecting the option ""0"", the fitted function is added to; /// the list of functions of the histogram, but it is not drawn when the histogram is drawn.; /// You can undo this behaviour resetting its corresponding bit in the TF1 object as following:; ///; /// ~~~ {.cpp}; /// h.Fit(""myFunction"", ""0""); // fit, store function but do not draw; /// h.Draw(); // function is not drawn; /// h.GetFunction(""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:18733,error,error,18733,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability," optional gzip encoding. Add; 16 to windowBits to write a simple gzip header and trailer around the; compressed data instead of a zlib wrapper. The gzip header will have no; file name, no extra data, no comment, no modification time (set to zero),; no header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but; is slow and reduces compression ratio; memLevel=9 uses maximum memory; for optimal speed. The default value is 8. See zconf.h for total memory; usage as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small values with a somewhat; random distribution. In this case, the compression algorithm is tuned to; compress them better. The effect of Z_FILTERED is to force more Huffman; coding and less string matching; it is somewhat intermediate between; Z_DEFAULT and Z_HUFFMAN_ONLY. Z_RLE is designed to be almost as fast as; Z_HUFFMAN_ONLY, but give better compression for PNG image data. The strategy; parameter only affects the compression ratio but not the correctness of the; compressed output even if it is not set appropriately. Z_FIXED prevents the; use of dynamic Huffman codes, allowing for a simpler decoder for special; applications. deflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if a parameter is invalid (such as an invalid; method). msg is set to null if there is no error message. deflateInit2 does; not perform any compression: this will be done by deflate().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:3349,error,error,3349,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability," or a.Clear(""C""); }; ~~~; To reduce the number of call to the constructor (especially useful; if the user class requires memory allocation), the object can be; added (and constructed when needed) using ConstructedAt which only; calls the constructor once per slot.; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClones",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:2402,error,error,2402,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,1,['error'],['error']
Availability," placed between register coalescing and machine instruction; // scheduler.; // In this place in the optimization sequence, live interval analysis had; // been performed, and the live intervals should be preserved. A large part; // of the code deals with preserving the liveness information.; //; // Liveness tracking aside, the main functionality of this pass is divided; // into two steps. The first step is to replace an instruction; // %0 = C2_mux %1, %2, %3; // with a pair of conditional transfers; // %0 = A2_tfrt %1, %2; // %0 = A2_tfrf %1, %3; // It is the intention that the execution of this pass could be terminated; // after this step, and the code generated would be functionally correct.; //; // If the uses of the source values %1 and %2 are kills, and their; // definitions are predicable, then in the second step, the conditional; // transfers will then be rewritten as predicated instructions. E.g.; // %0 = A2_or %1, %2; // %3 = A2_tfrt %99, killed %0; // will be rewritten as; // %3 = A2_port %99, %1, %2; //; // This replacement has two variants: ""up"" and ""down"". Consider this case:; // %0 = A2_or %1, %2; // ... [intervening instructions] ...; // %3 = A2_tfrt %99, killed %0; // variant ""up"":; // %3 = A2_port %99, %1, %2; // ... [intervening instructions, %0->vreg3] ...; // [deleted]; // variant ""down"":; // [deleted]; // ... [intervening instructions] ...; // %3 = A2_port %99, %1, %2; //; // Both, one or none of these variants may be valid, and checks are made; // to rule out inapplicable variants.; //; // As an additional optimization, before either of the two steps above is; // executed, the pass attempts to coalesce the target register with one of; // the source registers, e.g. given an instruction; // %3 = C2_mux %0, %1, %2; // %3 will be coalesced with either %1 or %2. If this succeeds,; // the instruction would then be (for example); // %3 = C2_mux %0, %3, %2; // and, under certain circumstances, this could result in only one predicated; // instruction:; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp:1612,down,down,1612,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp,1,['down'],['down']
Availability," polled pipes.; *; * After the BidirMMapPipe is closed, no further operations may be performed on; * that object, save for the destructor which may still be called.; *; * If the BidirMMapPipe has not properly been closed, the destructor will call; * close. However, the exit code of the child is lost in that case.; *; * Closing the object causes the mmapped memory to be unmapped and the two; * pipes to be closed. We also install an atexit handler in the process of; * creating BidirMMapPipes. This ensures that when the current process; * terminates, a SIGTERM signal is sent to the child processes created for all; * unclosed pipes to avoid leaving zombie processes in the OS's process table.; *; * BidirMMapPipe creation, closing and destruction are thread safe. If the; * BidirMMapPipe is used in more than one thread, the other operations have to; * be protected with a mutex (or something similar), though.; *; * End of file (other end closed its pipe, or died) is indicated with the eof(); * method, serious I/O errors set a flags (bad(), fail()), and also throw; * exceptions. For normal read/write operations, they can be suppressed (i.e.; * error reporting only using flags) with a constructor argument.; *; * Technicalities:; * - there is a pool of mmapped pages, half the pages are allocated to the; * parent process, half to the child; * - when one side has accumulated enough data (or a flush forces dirty pages; * out to the other end), it sends these pages to the other end by writing a; * byte containing the page number into the pipe; * - the other end (which has the pages mmapped, too) reads the page number(s); * and puts the corresponding pages on its busy list; * - as the other ends reads, it frees busy pages, and eventually tries to put; * them on the its list; if a page belongs to the other end of the; * connection, it is sent back; * - lists of pages are sent across the pipe, not individual pages, in order; * to minimise the number of read/write operations needed; *",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:3212,error,errors,3212,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['error'],['errors']
Availability," presupposes; sufficiently high statistics that an approximation by a normal distribution is; reasonable) on p, given N, is; \f[; \sqrt{\frac{p(1-p)}{N}}; \f]; However, when p is estimated as n/N, fluctuations from the true p to its; estimate become important, especially for low numbers of events, and giving; rise to biased results. When fitting a parametrized efficiency, these problems can largely be overcome,; as a hypothesized true efficiency is available by construction. Even so, simply; using the corresponding uncertainty still presupposes that Gaussian errors; yields a reasonable approximation. When using, instead of binned efficiency; histograms, the original numerator and denominator histograms, a binned maximum; likelihood can be constructed as the product of bin-by-bin binomial probabilities; to select n out of N events. Assuming that a correct parametrization of the; efficiency is provided, this construction in general yields less biased results; (and is much less sensitive to binning details). A generic use of this method is given below (note that the method works for 2D; and 3D histograms as well):. ~~~ {.cpp}; {; TH1* denominator; // denominator histogram; TH1* numerator; // corresponding numerator histogram; TF1* eff; // efficiency parametrization; .... // set step sizes and initial parameter; .... // values for the fit function; .... // possibly also set ranges, see TF1::SetRange(); TBinomialEfficiencyFitter* f = new TBinomialEfficiencyFitter(; numerator, denominator);; Int_t status = f->Fit(eff, ""I"");; if (status == 0) {; // if the fit was successful, display bin-by-bin efficiencies; // as well as the result of the fit; numerator->Sumw2();; TH1* hEff = dynamic_cast<TH1*>(numerator->Clone(""heff""));; hEff->Divide(hEff, denominator, 1.0, 1.0, ""B"");; hEff->Draw(""E"");; eff->Draw(""same"");; }; }; ~~~. Note that this method cannot be expected to yield reliable results when using; weighted histograms (because the likelihood computation will be incorrect). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBinomialEfficiencyFitter.cxx:3038,reliab,reliable,3038,hist/hist/src/TBinomialEfficiencyFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBinomialEfficiencyFitter.cxx,1,['reliab'],['reliable']
Availability," produce these instructions when speculation hardening; // is enabled. This pass will assert if it does encounter such an instruction.; // - On function call boundaries, the miss-speculation state is transferred from; // the taint register X16 to be encoded in the SP register as value 0.; //; // For the aspect of automatically hardening loads, using the taint register,; // (a.k.a. speculative load hardening, see; // https://llvm.org/docs/SpeculativeLoadHardening.html), the following; // implementation choices are made for AArch64:; // - Many of the optimizations described at; // https://llvm.org/docs/SpeculativeLoadHardening.html to harden fewer; // loads haven't been implemented yet - but for some of them there are; // FIXMEs in the code.; // - loads that load into general purpose (X or W) registers get hardened by; // masking the loaded data. For loads that load into other registers, the; // address loaded from gets hardened. It is expected that hardening the; // loaded data may be more efficient; but masking data in registers other; // than X or W is not easy and may result in being slower than just; // hardening the X address register loaded from.; // - On AArch64, CSDB instructions are inserted between the masking of the; // register and its first use, to ensure there's no non-control-flow; // speculation that might undermine the hardening mechanism.; //; // Future extensions/improvements could be:; // - Implement this functionality using full speculation barriers, akin to the; // x86-slh-lfence option. This may be more useful for the intrinsics-based; // approach than for the SLH approach to masking.; // Note that this pass already inserts the full speculation barriers if the; // function for some niche reason makes use of X16/W16.; // - no indirect branch misprediction gets protected/instrumented; but this; // could be done for some indirect branches, such as switch jump tables.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp:4718,mask,masking,4718,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp,3,['mask'],['masking']
Availability," programs ought to be written; with different goals in mind such as:. 1) A program has excellent documentation that ANYONE can read.; 2) A program when released has no strange ""features"" or bugs.; 3) A program is robust and handles ALL extreme and unusual cases.; 4) A program is written in phases and modules with hard tests for each one.; 5) A program is written for any user who doesn't need special knowledge; to use the program.; 6) A program has well defined user requirements and functional specifications.; 7) A program is written with regard to future expansion and integreation; with other systems (portability). When programming following these additional principles make programs easier; to maintain. A) Choose variable names that accurately describes what the variable does/is.; B) Write comments to inform someone faced with the task of modifying your code.; C) Avoid excessive comments. Write the code so that it says what it does.; D) Follow a strict one-in, one-out flow of control structues except in the; case of fatal error conditions.; E) Avoid using global variables.; F) Do not cause side effects to variables that were not parameters to a; function.; G) Have a single function perform a single purpose.; H) Select a single indentation style and stick with it.; I) Use a consistent naming convention. The following principles help me when I try optimizing code:. a) If optimizing, use a profiler to determine which sections of code most of; the time is spent in. Spend most of your effort in the most used sections.; Don't bother optimizing a procedure using less than 10% of the time. b) High level optimizations are far more effective than cycle shaving.; (e.g. use quick sort instead of optimizing a bubble sort.). c) Be flexible in your approach to solving a problem. List exactly what you; need as a result at a minimum. Get rid of unnecessary assumptions. d) Become familiar with sets of operations that are equivalent, or nearly so.; Learn the relative expense of basic o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:2439,error,error,2439,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['error'],['error']
Availability," quality and speed](\ref ATTTEXT51); - [How to use True Type Fonts](\ref ATTTEXT52); - [List of the currently supported fonts](\ref ATTTEXT53). \anchor ATTTEXT1; ## Text Alignment. The text alignment is an integer number (`align`) allowing to control; the horizontal and vertical position of the text string with respect; to the text position.; The text alignment of any class inheriting from `TAttText` can; be changed using the method `SetTextAlign` and retrieved using the; method `GetTextAlign`. ~~~ {.cpp}; align = 10*HorizontalAlign + VerticalAlign; ~~~. For horizontal alignment the following convention applies:. ~~~ {.cpp}; 1=left adjusted, 2=centered, 3=right adjusted; ~~~. For vertical alignment the following convention applies:. ~~~ {.cpp}; 1=bottom adjusted, 2=centered, 3=top adjusted; ~~~. For example:. ~~~ {.cpp}; align = 11 = left adjusted and bottom adjusted; align = 32 = right adjusted and vertically centered; ~~~. Begin_Macro(source); textalign.C; End_Macro. Mnemonic constants are available:. ~~~ {.cpp}; kHAlignLeft = 10, kHAlignCenter = 20, kHAlignRight = 30,; kVAlignBottom = 1, kVAlignCenter = 2, kVAlignTop = 3; ~~~. They allow to write:. ~~~ {.cpp}; object->SetTextAlign(kHAlignLeft+kVAlignTop);; ~~~. \anchor ATTTEXT2; ## Text Angle. Text angle in degrees.; The text angle of any class inheriting from `TAttText` can; be changed using the method `SetTextAngle` and retrieved using the; method `GetTextAngle`.; The following picture shows the text angle:. Begin_Macro(source); textangle.C; End_Macro. \anchor ATTTEXT3; ## Text Color. The text color is a color index (integer) pointing in the ROOT; color table.; The text color of any class inheriting from `TAttText` can; be changed using the method `SetTextColor` and retrieved using the; method `GetTextColor`.; The following table shows the first 50 default colors. Begin_Macro; {; TCanvas *c = new TCanvas(""c"",""Fill Area colors"",0,0,500,200);; c->DrawColorTable();; return c;; }; End_Macro. ### Color transparency; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttText.cxx:1446,avail,available,1446,core/base/src/TAttText.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttText.cxx,1,['avail'],['available']
Availability," ratios of two Poisson means (option 'pois'):; ///; /// The two histograms are interpreted as independent Poisson processes and the ratio; /// \f[; /// \tau = \frac{n_{1}}{n_{2}} = \frac{\varepsilon}{1 - \varepsilon}; /// \f]; /// with \f$\varepsilon = \frac{n_{1}}{n_{1} + n_{2}}\f$.; /// The histogram 'pass' is interpreted as \f$n_{1}\f$ and the total histogram; /// is used for \f$n_{2}\f$.; ///; /// The (asymmetric) uncertainties of the Poisson ratio are linked to the uncertainties; /// of efficiency by a parameter transformation:; /// \f[; /// \Delta \tau_{low/up} = \frac{1}{(1 - \varepsilon)^{2}} \Delta \varepsilon_{low/up}; /// \f]; ///; /// The x errors span each histogram bin (lowedge ... lowedge+width); /// The y errors depend on the chosen statistic methode which can be determined; /// by the options given below. For a detailed description of the used statistic; /// calculations please have a look at the corresponding functions!; ///; /// Options:; /// - v : verbose mode: prints information about the number of used bins; /// and calculated efficiencies with their errors; /// - cl=x : determine the used confidence level (0<x<1) (default is 0.683); /// - cp : Clopper-Pearson interval (see TEfficiency::ClopperPearson); /// - w : Wilson interval (see TEfficiency::Wilson); /// - n : normal approximation propagation (see TEfficiency::Normal); /// - ac : Agresti-Coull interval (see TEfficiency::AgrestiCoull); /// - fc : Feldman-Cousins interval (see TEfficiency::FeldmanCousinsInterval); /// - midp : Lancaster mid-P interval (see TEfficiency::MidPInterval); /// - b(a,b): bayesian interval using a prior probability ~Beta(a,b); a,b > 0; /// (see TEfficiency::Bayesian); /// - mode : use mode of posterior for Bayesian interval (default is mean); /// - shortest: use shortest interval (done by default if mode is set); /// - central: use central interval (done by default if mode is NOT set); /// - pois: interpret histograms as poisson ratio instead of efficiency; /// - e0 ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:2170,error,errors,2170,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,1,['error'],['errors']
Availability," rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoCompositeShape; \ingroup Shapes_classes. Composite shapes are Boolean combinations of two or more shape; components. The supported Boolean operations are union (+), intersection; (\*) and subtraction(-). Composite shapes derive from the base; **`TGeoShape`** class, therefore providing all shape features:; computation of bounding box, finding if a given point is inside or; outside the combination, as well as computing the distance to; entering/exiting. They can be directly used for creating volumes or used; in the definition of other composite shapes. Composite shapes are provided in order to complement and extend the set; of basic shape primitives. They have a binary tree internal structure,; therefore all shape-related geometry queries are signals propagated from; top level down to the final leaves, while the provided answers are; assembled and interpreted back at top. This `CSG`; `(composite solid geometry)` hierarchy is effective for small number of; components, while performance drops dramatically for large structures.; Building a complete geometry in this style is virtually possible but; highly not recommended. #### The Structure of Composite Shapes. A composite shape can always be looked as the result of a Boolean; operation between only two shape components. All information identifying; these two components as well as their positions with respect to the; frame of the composite is represented by an object called Boolean node.; A composite shape has a pointer to such a Boolean node. Since the shape; components may also be composites, they will also contain binary Boolean; nodes branching out other two shapes in the hierarchy. Any such branch; ends-up when the final leaves are no longer composite shapes, but basic; primitives. The figu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx:1217,down,down,1217,geom/geom/src/TGeoCompositeShape.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx,1,['down'],['down']
Availability," simply returns a new, already filled histogram.</b>. If you use this software, please consider the following citation. <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>. Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Brief recipy to use TUnfoldSys:; <ul>; <li>a matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>a vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>repeated calls to SubtractBackground() to specify background; sources</li>; <li>repeated calls to AddSysError() to specify systematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Description of (systematic) uncertainties available in; TUnfoldSys. There are covariance matrix contributions and there are; systematic shifts. Systematic shifts correspond to the variation of a; (buicance) parameter, for example a background normalisation or a; one-sigma variation of a correlated systematic error.; <table>; <tr><th> </th><th>Set by</th>; <th>Access covariance matrix</th>; <th>Access vector of shifts</th>; <th>Description</th>; </tr>; <tr>; <td>(a)</td><td>TUnfoldSys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the histogram. These are typically statistical errors; from finite Monte Carlo samples.</td>; </tr>; <tr>; <td>(b)</td><td>AddSysError()</td><td>GetEmatrixSysSource()</td>; <td>GetDeltaSysSource()</td>; <td>correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure. Several; such error sources may be defined</td>; </tr>; <t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:3237,avail,available,3237,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,1,['avail'],['available']
Availability," specify option ""U"" and; /// call the following function:; /// ~~~ {.cpp}; /// TVirtualFitter::Fitter(mygraph)->SetFCN(MyFittingFunction); /// ~~~; /// where MyFittingFunction is of type:; /// ~~~ {.cpp}; /// extern void MyFittingFunction(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);; /// ~~~; ///; /// ### Access to the fit result; ///; /// The function returns a TFitResultPtr which can hold a pointer to a TFitResult object.; /// By default the TFitResultPtr contains only the status of the fit and it converts; /// automatically to an integer. If the option ""S"" is instead used, TFitResultPtr contains; /// the TFitResult and behaves as a smart pointer to it. For example one can do:; /// ~~~ {.cpp}; /// TFitResultPtr r = graph->Fit(""myFunc"",""S"");; /// TMatrixDSym cov = r->GetCovarianceMatrix(); // to access the covariance matrix; /// Double_t par0 = r->Parameter(0); // retrieve the value for the parameter 0; /// Double_t err0 = r->ParError(0); // retrieve the error for the parameter 0; /// r->Print(""V""); // print full information of fit including covariance matrix; /// r->Write(); // store the result in a file; /// ~~~; ///; /// The fit parameters, error and chi2 (but not covariance matrix) can be retrieved also; /// from the fitted function.; ///; /// ### Associated functions; ///; /// One or more object (typically a TF1*) can be added to the list; /// of functions (fFunctions) associated to each graph.; /// When TGraph::Fit is invoked, the fitted function is added to this list.; /// Given a graph gr, one can retrieve an associated function; /// with:; /// ~~~ {.cpp}; /// TF1 *myfunc = gr->GetFunction(""myfunc"");; /// ~~~; ///; /// If the graph is made persistent, the list of; /// associated functions is also persistent. Given a pointer (see above); /// to an associated function myfunc, one can retrieve the function/fit; /// parameters with calls such as:; /// ~~~ {.cpp}; /// Double_t chi2 = myfunc->GetChisquare();; /// Double_t par0 = myfunc->GetPa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiGraph.cxx:4943,error,error,4943,hist/hist/src/TMultiGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiGraph.cxx,2,['error'],['error']
Availability," statistical frameworks, and also ease of manipulation, it; may be useful to store statistical models in text form. The RooJSONFactoryWSTool is a helper class to achieve exactly this,; exporting to and importing from JSON and YML. In order to import a workspace from a JSON file, you can do. ~~~ {.py}; ws = ROOT.RooWorkspace(""ws""); tool = ROOT.RooJSONFactoryWSTool(ws); tool.importJSON(""myjson.json""); ~~~. Similarly, in order to export a workspace to a JSON file, you can do. ~~~ {.py}; tool = ROOT.RooJSONFactoryWSTool(ws); tool.exportJSON(""myjson.json""); ~~~. Analogously, in C++, you can do. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooWorkspace ws(""ws"");; RooJSONFactoryWSTool tool(ws);; tool.importJSON(""myjson.json"");; ~~~. and. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooJSONFactoryWSTool tool(ws);; tool.exportJSON(""myjson.json"");; ~~~. For more details, consult the tutorial <a href=""rf515__hfJSON_8py.html"">rf515_hfJSON</a>. In order to import and export YML files, `ROOT` needs to be compiled; with the external dependency <a; href=""https://github.com/biojppm/rapidyaml"">RapidYAML</a>, which needs; to be installed on your system when building `ROOT`. The RooJSONFactoryWSTool only knows about a limited set of classes for; import and export. If import or export of a class you're interested in; fails, you might need to add your own importer or exporter. Please; consult the relevant section in the \ref roofit_dev_docs to learn how to do that (\ref roofit_dev_docs_hs3). You can always get a list of all the available importers and exporters by calling the following functions:; ~~~ {.py}; ROOT.RooFit.JSONIO.printImporters(); ROOT.RooFit.JSONIO.printExporters(); ROOT.RooFit.JSONIO.printFactoryExpressions(); ROOT.RooFit.JSONIO.printExportKeys(); ~~~. Alternatively, you can generate a LaTeX version of the available importers and exporters by calling; ~~~ {.py}; tool = ROOT.RooJSONFactoryWSTool(ws); tool.writedoc(""hs3.tex""); ~~~; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:1794,avail,available,1794,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,2,['avail'],['available']
Availability," std::endl;; * }; * // send shutdown request acknowledged; * pipe << """" << BidirMMapPipe::flush;; *; * pipe.close();; * return 0;; * }; *; * BidirMMapPipe* spawnChild(int (*childexec)(BidirMMapPipe&)); * {; * BidirMMapPipe *p = new BidirMMapPipe();; * if (p->isChild()) {; * int retVal = childexec(*p);; * delete p;; * std::exit(retVal);; * }; * return p;; * }; *; * int main(); * {; * std::cout << ""[PARENT]: simple challenge-response test, one child:"" <<; * std::endl;; * BidirMMapPipe* pipe = spawnChild(simplechild);; * for (int i = 0; i < 5; ++i) {; * std::string str(""What shall we do with a drunken sailor..."");; * *pipe << str << BidirMMapPipe::flush;; * if (!*pipe) return -1;; * std::cout << ""[PARENT]: wrote: "" << str << std::endl;; * *pipe >> str;; * if (!*pipe) return -1;; * std::cout << ""[PARENT]: read: "" << str << std::endl;; * }; * // ask child to shut down; * pipe << """" << BidirMMapPipe::flush;; * // wait for it to see the shutdown request; * std::string s;; * pipe >> s;; * std::cout << ""[PARENT]: exit status of child: "" << pipe->close() <<; * std::endl;; * delete pipe;; * return 0;; * }; * @endcode; *; * When designing your own protocols to use over the pipe, there are a few; * things to bear in mind:; * - Do as http does: When building a request, send all the options and; * properties of that request with the request itself in a single go (one; * flush). Then, the server has everything it needs, and hopefully, it'll; * shut up for a while and to let the client do something useful in the; * meantime... The same goes when the server replies to the request: include; * everything there is to know about the result of the request in the reply.; * - The expensive operation should be the request that is made, all other; * operations should somehow be formulated as options or properties to that; * request.; * - Include a shutdown handshake in whatever protocol you send over the; * pipe. That way, you can shut things down in a controlled way. Otherwise,; * and depend",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:6881,down,down,6881,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['down'],['down']
Availability," stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the uncompressed data buf[0..len-1]. out(); should return zero on success, or non-zero on failure. If out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provided input on the first call by; setting strm->next_in and strm->avail_in. If that input is exhausted, then; in() will be called. Therefore strm->next_in must be initialized before; calling inflateBack(). If strm->next_in is Z_NULL, then in() will be called; immediately for input. If strm->next_in is not Z_NULL, then strm->avail_in; must also be initialized, and then if strm->avail_in is not zero, input will; initially be taken from strm->next_in[0 .. strm->avail_in - 1]. The in_desc and out_desc parameters of inflateBack() is passed as the; first parameter of in() and out() respectively when they are called. These; descriptors can be ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:2156,error,error,2156,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['error'],['error']
Availability," stream to decompress. This is different from the; normal behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the uncompressed data buf[0..len-1]. out(); should return zero on success, or non-zero on failure. If out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provided input on the first call by; setting strm->next_in and strm->avail_in. If that input is exhausted, then; in() will be called. Therefore strm->next_in must be initialized before; calling inflateBack(). If strm->next_in is Z_NULL, then in() will be called; immediately for input. If strm->next_in is not Z_NULL, then strm->avail_in; must also be initialized, and then if strm->avail_in is not zero, input will; initially be taken from strm->next_in[0 .. strm->avail_in - 1]. The in_desc and out_desc parameters of inflateBack() is passed as the; first parameter of in() and out() respectively when they are called. These; descriptors can be ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:2073,error,error,2073,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability," supported by Dask (more information in the; [Dask distributed docs](http://distributed.dask.org/en/stable/)):. ~~~{.py}; import ROOT; from dask.distributed import Client. # Point RDataFrame calls to the Dask specific RDataFrame; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. # In a Python script the Dask client needs to be initalized in a context; # Jupyter notebooks / Python session don't need this; if __name__ == ""__main__"":; # With an already setup cluster that exposes a Dask scheduler endpoint; client = Client(""dask_scheduler.domain.com:8786""). # The Dask RDataFrame constructor accepts the Dask Client object as an optional argument; df = RDataFrame(""mytree"",""myfile.root"", daskclient=client); # Proceed as usual; df.Define(""x"",""someoperation"").Histo1D((""name"", ""title"", 10, 0, 10), ""x""); ~~~. If an instance of [distributed.Client](http://distributed.dask.org/en/stable/api.html#distributed.Client) is not; provided to the RDataFrame object, it will be created for you and it will run the computations in the local machine; using all cores available. ### Choosing the number of distributed tasks. A distributed RDataFrame has internal logic to define in how many chunks the input dataset will be split before sending; tasks to the distributed backend. Each task reads and processes one of said chunks. The logic is backend-dependent, but; generically tries to infer how many cores are available in the cluster through the connection object. The number of; tasks will be equal to the inferred number of cores. There are cases where the connection object of the chosen backend; doesn't have information about the actual resources of the cluster. An example of this is when using Dask to connect to; a batch system. The client object created at the beginning of the application does not automatically know how many cores; will be available during distributed execution, since the jobs are submitted to the batch system after the creation of; the connection. In such cases, t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:40379,avail,available,40379,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability," the <c> VPCMPESTRM / PCMPESTRM </c>; /// instruction.; ///; /// \param A; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param LA; /// An integer that specifies the length of the string in \a A.; /// \param B; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param LB; /// An integer that specifies the length of the string in \a B.; /// \param M; /// An 8-bit immediate operand specifying whether the characters are bytes or; /// words, the type of comparison to perform, and the format of the return; /// value. \n; /// Bits [1:0]: Determine source data format. \n; /// 00: 16 unsigned bytes \n; /// 01: 8 unsigned words \n; /// 10: 16 signed bytes \n; /// 11: 8 signed words \n; /// Bits [3:2]: Determine comparison type and aggregation method. \n; /// 00: Subset: Each character in \a B is compared for equality with all; /// the characters in \a A. \n; /// 01: Ranges: Each character in \a B is compared to \a A. The comparison; /// basis is greater than or equal for even-indexed elements in \a A,; /// and less than or equal for odd-indexed elements in \a A. \n; /// 10: Match: Compare each pair of corresponding characters in \a A and; /// \a B for equality. \n; /// 11: Substring: Search \a B for substring matches of \a A. \n; /// Bits [5:4]: Determine whether to perform a one's complement on the bit; /// mask of the comparison results. \n; /// 00: No effect. \n; /// 01: Negate the bit mask. \n; /// 10: No effect. \n; /// 11: Negate the bit mask only for bits with an index less than or equal; /// to the size of \a A or \a B. \n; /// Bit [6]: Determines whether the result is zero-extended or expanded to 16; /// bytes. \n; /// 0: The result is zero-extended to 16 bytes. \n; /// 1: The result is expanded to 16 bytes (this expansion is performed by; /// repeating each bit 8 or 16 times). \n; /// \returns Returns a 128-bit integer vector representing the result mask of; /// the comparison.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:1848,mask,mask,1848,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,4,['mask'],['mask']
Availability," the creation of custom streams, mixing multiple tables and bit sources. A key property to keep in mind is that encoding and decoding are done **in reverse direction**.; So the first symbol you will encode is the last you will decode, like a LIFO stack. You will need a few variables to track your CStream. They are :. FSE_CTable ct; // Provided by FSE_buildCTable(); BIT_CStream_t bitStream; // bitStream tracking structure; FSE_CState_t state; // State tracking structure (can have several). The first thing to do is to init bitStream and state.; size_t errorCode = BIT_initCStream(&bitStream, dstBuffer, maxDstSize);; FSE_initCState(&state, ct);. Note that BIT_initCStream() can produce an error code, so its result should be tested, using FSE_isError();; You can then encode your input data, byte after byte.; FSE_encodeSymbol() outputs a maximum of 'tableLog' bits at a time.; Remember decoding will be done in reverse direction.; FSE_encodeByte(&bitStream, &state, symbol);. At any time, you can also add any bit sequence.; Note : maximum allowed nbBits is 25, for compatibility with 32-bits decoders; BIT_addBits(&bitStream, bitField, nbBits);. The above methods don't commit data to memory, they just store it into local register, for speed.; Local register size is 64-bits on 64-bits systems, 32-bits on 32-bits systems (size_t).; Writing data to memory is a manual operation, performed by the flushBits function.; BIT_flushBits(&bitStream);. Your last FSE encoding operation shall be to flush your last state value(s).; FSE_flushState(&bitStream, &state);. Finally, you must close the bitStream.; The function returns the size of CStream in bytes.; If data couldn't fit into dstBuffer, it will return a 0 ( == not compressible); If there is an error, it returns an errorCode (which can be tested using FSE_isError()).; size_t size = BIT_closeCStream(&bitStream);; */; /* *****************************************; * FSE symbol decompression API; *******************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:1839,error,error,1839,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,2,['error'],"['error', 'errorCode']"
Availability," the fitting formula can be reset without re-adding all the points.; --Example:; ~~~~; TLinearFitter *lf=new TLinearFitter(""1++x++x*x"");; lf->AssignData(n, 1, x, y, e);; lf->Eval(); //looking at the parameter significance, you see,; // that maybe the fit will improve, if you take out; // the constant term; lf->SetFormula(""x++x*x"");; lf->Eval();; ...; ~~~~. ##### 2.3.2 If the input data is not stored, the fitter will have to be; cleared and the data will have to be added again to try a; different formula. ### 3.Accessing the fit results. #### 3.1 There are methods in the fitter to access all relevant information:; --GetParameters, GetCovarianceMatrix, etc; --the t-values of parameters and their significance can be reached by; GetParTValue() and GetParSignificance() methods. #### 3.2 If fitting with a pre-defined TF123, the fit results are also; written into this function. ### 4.Robust fitting - Least Trimmed Squares regression (LTS); Outliers are atypical(by definition), infrequant observations; data points; which do not appear to follow the characteristic distribution of the rest; of the data. These may reflect genuine properties of the underlying; phenomenon(variable), or be due to measurement errors or anomalies which; shouldn't be modelled. (StatSoft electronic textbook). Even a single gross outlier can greatly influence the results of least-; squares fitting procedure, and in this case use of robust(resistant) methods; is recommended. The method implemented here is based on the article and algorithm:; ""Computing LTS Regression for Large Data Sets"" by; P.J.Rousseeuw and Katrien Van Driessen; The idea of the method is to find the fitting coefficients for a subset; of h observations (out of n) with the smallest sum of squared residuals.; The size of the subset h should lie between (npoints + nparameters +1)/2; and n, and represents the minimal number of good points in the dataset.; The default value is set to (npoints + nparameters +1)/2, but of course; if you are ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx:5492,Robust,Robust,5492,math/minuit/src/TLinearFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx,1,['Robust'],['Robust']
Availability," the interval used by a resource in bottom and top; /// scheduling.; ///; /// Consider an instruction that uses resources X0, X1 and X2 as follows:; ///; /// X0 X1 X1 X2 +--------+-------------+--------------+; /// |Resource|AcquireAtCycle|ReleaseAtCycle|; /// +--------+-------------+--------------+; /// | X0 | 0 | 1 |; /// +--------+-------------+--------------+; /// | X1 | 1 | 3 |; /// +--------+-------------+--------------+; /// | X2 | 3 | 4 |; /// +--------+-------------+--------------+; ///; /// If we can schedule the instruction at cycle C, we need to; /// compute the interval of the resource as follows:; ///; /// # TOP DOWN SCHEDULING; ///; /// Cycles scheduling flows to the _right_, in the same direction; /// of time.; ///; /// C 1 2 3 4 5 ...; /// ------|------|------|------|------|------|----->; /// X0 X1 X1 X2 ---> direction of time; /// X0 [C, C+1); /// X1 [C+1, C+3); /// X2 [C+3, C+4); ///; /// Therefore, the formula to compute the interval for a resource; /// of an instruction that can be scheduled at cycle C in top-down; /// scheduling is:; ///; /// [C+AcquireAtCycle, C+ReleaseAtCycle); ///; ///; /// # BOTTOM UP SCHEDULING; ///; /// Cycles scheduling flows to the _left_, in opposite direction; /// of time.; ///; /// In bottom up scheduling, the scheduling happens in opposite; /// direction to the execution of the cycles of the; /// instruction. When the instruction is scheduled at cycle `C`,; /// the resources are allocated in the past relative to `C`:; ///; /// 2 1 C -1 -2 -3 -4 -5 ...; /// <-----|------|------|------|------|------|------|------|---; /// X0 X1 X1 X2 ---> direction of time; /// X0 (C+1, C]; /// X1 (C, C-2]; /// X2 (C-2, C-3]; ///; /// Therefore, the formula to compute the interval for a resource; /// of an instruction that can be scheduled at cycle C in bottom-up; /// scheduling is:; ///; /// [C-ReleaseAtCycle+1, C-AcquireAtCycle+1); ///; ///; /// NOTE: In both cases, the number of cycles booked by a; /// resources is the value (Releas",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:1071,down,down,1071,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['down'],['down']
Availability," to CFG: %bb.4(?%); ///; /// %bb.4: derived from LLVM BB %entry; /// Predecessors according to CFG: %bb.2 %bb.3; /// %13 = PHI %12, <%bb.3>, %2, <%bb.2>;; /// F8RC:%13,%12,%2; /// <SNIP3>; /// BLR8 implicit %lr8, implicit %rm, implicit %f1; ///; /// When this pattern is detected, branch coalescing will try to collapse; /// it by moving code in %bb.2 to %bb.0 and/or %bb.4 and removing %bb.3.; ///; /// If all conditions are meet, IR should collapse to:; ///; /// %bb.0: derived from LLVM BB %entry; /// liveins: %f1 %f3 %x6; /// <SNIP1>; /// %0 = COPY %f1; F8RC:%0; /// %5 = CMPLWI killed %4, 0; CRRC:%5 GPRC:%4; /// %8 = LXSDX %zero8, killed %7, implicit %rm;; /// mem:LD8[ConstantPool] F8RC:%8 G8RC:%7; /// <SNIP2>; /// BCC 76, %5, <%bb.4>; CRRC:%5; /// Successors according to CFG: %bb.1(0x2aaaaaaa / 0x80000000 = 33.33%); /// %bb.4(0x55555554 / 0x80000000 = 66.67%); ///; /// %bb.1: derived from LLVM BB %entry; /// Predecessors according to CFG: %bb.0; /// Successors according to CFG: %bb.4(0x40000000 / 0x80000000 = 50.00%); ///; /// %bb.4: derived from LLVM BB %entry; /// Predecessors according to CFG: %bb.0 %bb.1; /// %9 = PHI %8, <%bb.1>, %0, <%bb.0>;; /// F8RC:%9,%8,%0; /// %13 = PHI %12, <%bb.1>, %2, <%bb.0>;; /// F8RC:%13,%12,%2; /// <SNIP3>; /// BLR8 implicit %lr8, implicit %rm, implicit %f1; ///; /// Branch Coalescing does not split blocks, it moves everything in the same; /// direction ensuring it does not break use/definition semantics.; ///; /// PHI nodes and its corresponding use instructions are moved to its successor; /// block if there are no uses within the successor block PHI nodes. PHI; /// node ordering cannot be assumed.; ///; /// Non-PHI can be moved up to the predecessor basic block or down to the; /// successor basic block following any PHI instructions. Whether it moves; /// up or down depends on whether the register(s) defined in the instructions; /// are used in current block or in any PHI instructions at the beginning of; /// the successor block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp:3505,down,down,3505,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp,2,['down'],['down']
Availability," to believe that they may not be; accurate. If no mitigating adjective is given, then at least MINUIT believes the; errors are accurate, although there is always a small chance that MINUIT; has been fooled. Some visible signs that MINUIT may have been fooled are:. 1. Warning messages produced during the minimization or error analysis. 2. Failure to find new minimum. 3. Value of <TT>EDM</TT> too big (estimated Distance to Minimum). 4. Correlation coefficients exactly equal to zero, unless some parameters; are known to be uncorrelated with the others. 5. Correlation coefficients very close to one (greater than 0.99). This; indicates both an exceptionally difficult problem, and one which has been; badly parameterised so that individual errors are not very meaningful; because they are so highly correlated. 6. Parameter at limit. This condition, signalled by a MINUIT warning; message, may make both the function minimum and parameter errors; unreliable. See the discussion above ``Getting the right parameter errors; with limits''. The best way to be absolutely sure of the errors, is to use; ``independent'' calculations and compare them, or compare the calculated; errors with a picture of the function. Theoretically, the covariance; matrix for a ``physical'' function must be positive-definite at the; minimum, although it may not be so for all points far away from the; minimum, even for a well-determined physical problem. Therefore, if MIGRAD; reports that it has found a non-positive-definite covariance matrix, this; may be a sign of one or more of the following:. ##### A non-physical region:. On its way to the minimum, MIGRAD may have traversed a region which has; unphysical behaviour, which is of course not a serious problem as long as; it recovers and leaves such a region. ##### An underdetermined problem:. If the matrix is not positive-definite even at the minimum, this may mean; that the solution is not well-defined, for example that there are more; unknowns than there ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:9847,error,errors,9847,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['errors']
Availability," to use the 'branchname' as if it was a data member; /// * protection against array out-of-bound; /// * ability to use the branch data as object (when the user code is available); ///; /// See TTree::MakeProxy for more details.; ///; /// ### Making a Profile histogram; ///; /// In case of a 2-Dim expression, one can generate a TProfile histogram; /// instead of a TH2F histogram by specifying option=prof or option=profs; /// or option=profi or option=profg ; the trailing letter select the way; /// the bin error are computed, See TProfile2D::SetErrorOption for; /// details on the differences.; /// The option=prof is automatically selected in case of y:x>>pf; /// where pf is an existing TProfile histogram.; ///; /// ### Making a 2D Profile histogram; ///; /// In case of a 3-Dim expression, one can generate a TProfile2D histogram; /// instead of a TH3F histogram by specifying option=prof or option=profs.; /// or option=profi or option=profg ; the trailing letter select the way; /// the bin error are computed, See TProfile2D::SetErrorOption for; /// details on the differences.; /// The option=prof is automatically selected in case of z:y:x>>pf; /// where pf is an existing TProfile2D histogram.; ///; /// ### Making a 5D plot using GL; ///; /// If option GL5D is specified together with 5 variables, a 5D plot is drawn; /// using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example.; ///; /// ### Making a parallel coordinates plot; ///; /// In case of a 2-Dim or more expression with the option=para, one can generate; /// a parallel coordinates plot. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Making a candle sticks chart; ///; /// In case of a 2-Dim or more expression with the option=candle, one can generate; /// a candle sticks chart. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables withou",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:20635,error,error,20635,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability," we also look for the presence of the VCTP instruction,; /// which determines whether we can generated the tail-predicated low-overhead; /// loop form.; ///; /// Assumptions and Dependencies:; /// Low-overhead loops are constructed and executed using a setup instruction:; /// DLS, WLS, DLSTP or WLSTP and an instruction that loops back: LE or LETP.; /// WLS(TP) and LE(TP) are branching instructions with a (large) limited range; /// but fixed polarity: WLS can only branch forwards and LE can only branch; /// backwards. These restrictions mean that this pass is dependent upon block; /// layout and block sizes, which is why it's the last pass to run. The same is; /// true for ConstantIslands, but this pass does not increase the size of the; /// basic blocks, nor does it change the CFG. Instructions are mainly removed; /// during the transform and pseudo instructions are replaced by real ones. In; /// some cases, when we have to revert to a 'normal' loop, we have to introduce; /// multiple instructions for a single pseudo (see RevertWhile and; /// RevertLoopEnd). To handle this situation, t2WhileLoopStartLR and t2LoopEnd; /// are defined to be as large as this maximum sequence of replacement; /// instructions.; ///; /// A note on VPR.P0 (the lane mask):; /// VPT, VCMP, VPNOT and VCTP won't overwrite VPR.P0 when they update it in a; /// ""VPT Active"" context (which includes low-overhead loops and vpt blocks).; /// They will simply ""and"" the result of their calculation with the current; /// value of VPR.P0. You can think of it like this:; /// \verbatim; /// if VPT active: ; Between a DLSTP/LETP, or for predicated instrs; /// VPR.P0 &= Value; /// else; /// VPR.P0 = Value; /// \endverbatim; /// When we're inside the low-overhead loop (between DLSTP and LETP), we always; /// fall in the ""VPT active"" case, so we can consider that all VPR writes by; /// one of those instruction is actually a ""and"".; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp:2155,mask,mask,2155,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp,1,['mask'],['mask']
Availability," we have:; ##; ## ~~~{.cpp}; ## tau ~ <expectation off bar> / <expectation on bar>; ## ~~~; ##; ## One can further expand the model to account for the systematic associated; ## to assuming the distribution of ""x"" and ""y"" factorizes (eg. that; ## tau is the same for off/on and offbar/onbar). This can be done in several; ## ways, but here we introduce an additional parameter rho, which so that; ## one set of models will use tau and the other tau*rho. The choice is arbitrary,; ## but it has consequences on the numerical stability of the algorithms.; ## The ""bar"" measurements typically have more events (& smaller relative errors).; ## If we choose; ##; ## ~~~{.cpp}; ## <expectation noffbar> = tau * rho * <expectation noonbar>; ## ~~~; ##; ## the product tau*rho will be known very precisely (~1/sqrt(bbar)) and the contour; ## in those parameters will be narrow and have a non-trivial tau~1/rho shape.; ## However, if we choose to put rho on the non/noff measurements (where the; ## product will have an error `~1/sqrt(b))`, the contours will be more amenable; ## to numerical techniques. Thus, here we choose to define:; ##; ## ~~~{.cpp}; ## tau := <expectation off bar> / (<expectation on bar>); ## rho := <expectation off> / (<expectation on> * tau); ##; ## ^ y; ## |; ## |---------------------------+; ## | | |; ## | nonbar | non |; ## | bbar | s+b |; ## | | |; ## |---------------+-----------|; ## | | |; ## | noffbar | noff |; ## | tau bbar | tau b rho |; ## | | |; ## +-----------------------------> x; ## ~~~; ##; ## Left in this way, the problem is under-constrained. However, one may; ## have some auxiliary measurement (usually based on Monte Carlo) to; ## constrain rho. Let us call this auxiliary measurement that gives; ## the nominal value of rho ""rhonom"". Thus, there is a 'constraint' term in; ## the full model: P(rhonom | rho). In this case, we consider a Gaussian; ## constraint with standard deviation sigma.; ##; ## In the example, the initial values of the parameters are:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:2494,error,error,2494,tutorials/roostats/FourBinInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py,1,['error'],['error']
Availability," weights, the other with squared weights,; * to obtain the correct errors for weighted likelihood fits. If this option is activated, the; * corrected covariance matrix is calculated as \f$ V_\mathrm{corr} = V C^{-1} V \f$, where \f$ V \f$ is the original; * covariance matrix and \f$ C \f$ is the inverse of the covariance matrix calculated using the; * squared weights. This allows to switch between two interpretations of errors:; * <table>; * <tr><th> SumW2Error <th> Interpretation; * <tr><td> true <td> The errors reflect the uncertainty of the Monte Carlo simulation.; * Use this if you want to know how much accuracy you can get from the available Monte Carlo statistics.; *; * **Example**: Simulation with 1000 events, the average weight is 0.1.; * The errors are as big as if one fitted to 1000 events.; * <tr><td> false <td> The errors reflect the errors of a dataset, which is as big as the sum of weights.; * Use this if you want to know what statistical errors you would get if you had a dataset with as many; * events as the (weighted) Monte Carlo simulation represents.; *; * **Example** (Data as above):; * The errors are as big as if one fitted to 100 events.; * </table>; * \note If the `SumW2Error` correction is enabled, the covariance matrix quality stored in the RooFitResult; * object will be the minimum of the original covariance matrix quality and the quality of the covariance; * matrix calculated with the squared weights.; * <tr><td> `AsymptoticError()` <td> Use the asymptotically correct approach to estimate errors in the presence of weights.; * This is slower but more accurate than `SumW2Error`. See also https://arxiv.org/abs/1911.01303).; This option even correctly implements the case of extended likelihood fits; (see this [writeup on extended weighted fits](https://root.cern/files/extended_weighted_fits.pdf) that complements the paper linked before).; * <tr><td> `PrefitDataFraction(double fraction)`; * <td> Runs a prefit on a small dataset of size fraction*(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:4633,error,errors,4633,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['error'],['errors']
Availability," will initiate the drawing of; the corresponding plots. Followed by the keyword the user can select a plot direction (X or V for; vertical projections, or Y or H for horizontal projections) and/or predefined definitions; (1-6 for candles, 1-2 for violins). The order doesn't matter. Default is X and 1. Instead of using the predefined representations, the candle and violin parameters can be; changed individually. In that case the option have the following form:. CANDLEX(<option-string>); CANDLEY(<option-string>); VIOLINX(<option-string>); VIOLINY(<option-string>). All zeros at the beginning of `option-string` can be omitted. `option-string` consists eight values, defined as follow:. ""CANDLEX(zhpawMmb)"". Where:. - `b = 0`; no box drawn; - `b = 1`; the box is drawn. As the candle-plot is also called a box-plot it; makes sense in the very most cases to always draw the box; - `b = 2`; draw a filled box with border. - `m = 0`; no median drawn; - `m = 1`; median is drawn as a line; - `m = 2`; median is drawn with errors (notches); - `m = 3`; median is drawn as a circle. - `M = 0`; no mean drawn; - `M = 1`; mean is drawn as a dashed line; - `M = 3`; mean is drawn as a circle. - `w = 0`; no whisker drawn; - `w = 1`; whisker is drawn to end of distribution.; - `w = 2`; whisker is drawn to max 1.5*iqr. - `a = 0`; no anchor drawn; - `a = 1`; the anchors are drawn. - `p = 0`; no points drawn; - `p = 1`; only outliers are drawn; - `p = 2`; all datapoints are drawn; - `p = 3`: all datapoints are drawn scattered. - `h = 0`; no histogram is drawn; - `h = 1`; histogram at the left or bottom side is drawn; - `h = 2`; histogram at the right or top side is drawn; - `h = 3`; histogram at left and right or top and bottom (violin-style) is drawn. - `z = 0`; no zero indicator line is drawn; - `z = 1`; zero indicator line is drawn. As one can see all individual options for both candle and violin plots can be accessed by this; mechanism. In deed the keywords CANDLE(<option-string>) and VIOLIN(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:43577,error,errors,43577,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['errors']
Availability," will return a single vetor. \code{.cpp}; #include<TRInterface.h>. //in the next function the pointer *double must be changed by TVectorD, because the pointer has no; //sense in R's environment.; Double_t RosenBrock(const TVectorD xx ); {; const Double_t x = xx[0];; const Double_t y = xx[1];; const Double_t tmp1 = y-x*x;; const Double_t tmp2 = 1-x;; return 100*tmp1*tmp1+tmp2*tmp2;; }. TVectorD RosenBrockGrad(const TVectorD xx ); {; const Double_t x = xx[0];; const Double_t y = xx[1];; TVectorD grad(2);; grad[0]=-400 * x * (y - x * x) - 2 * (1 - x);; grad[1]=200 * (y - x * x);; return grad;; }. void Minimization(); {; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; //passing RosenBrock function to R; r[""RosenBrock""]<<ROOT::R::TRFunctionExport(RosenBrock);. //passing RosenBrockGrad function to R; r[""RosenBrockGrad""]<<ROOT::R::TRFunctionExport(RosenBrockGrad);. //the option ""method"" could be ""Nelder-Mead"", ""BFGS"", ""CG"", ""L-BFGS-B"", ""SANN"",""Brent""; //the option ""control"" lets you put some constraints like:; //""maxit"" The maximum number of iterations; //""abstol"" The absolute convergence tolerance.; //""reltol"" Relative convergence tolerance.; r<<""result <- optim( c(0.01,0.01), RosenBrock,method='BFGS',control = list(maxit = 1000000) )"";. //Getting results from R; TVectorD min=r.Eval(""result$par"");. std::cout.precision(8);; //printing results; std::cout<<""-----------------------------------------""<<std::endl;; std::cout<<""Minimum x=""<<min[0]<<"" y=""<<min[1]<<std::endl;; std::cout<<""Value at minimum =""<<RosenBrock(min)<<std::endl;. //using the gradient; r<<""optimHess(result$par, RosenBrock, RosenBrockGrad)"";; r<<""hresult <- optim(c(-1.2,1), RosenBrock, NULL, method = 'BFGS', hessian = TRUE)"";; //getting the minimum calculated with the gradient; TVectorD hmin=r.Eval(""hresult$par"");. //printing results; std::cout<<""-----------------------------------------""<<std::endl;; std::cout<<""Minimization with the Gradient""<<endl;; std::cout<<""Minimum x=""<<hmin[0]<<"" y=""<<hmin[",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h:2351,toler,tolerance,2351,bindings/r/inc/TRFunctionExport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h,1,['toler'],['tolerance']
Availability," will rotate it then based on flip value. Three rotation angles; * supported 90, 180 and 270 degrees.; *********/; /****f* libAfterImage/transform/mirror_asimage(); * NAME; * mirror_asimage(); * SYNOPSIS; * ASImage *mirror_asimage ( struct ASVisual *asv,; * ASImage *src,; * int offset_x, int offset_y,; * unsigned int to_width,; * unsigned int to_height,; * Bool vertical, ASAltImFormats out_format,; * unsigned int compression_out, int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * src - source ASImage; * offset_x - left clip margin; * offset_y - right clip margin; * to_width - desired width of the resulting image; * to_height - desired height of the resulting image; * vertical - mirror in vertical direction.; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out - compression level of resulting image in range 0-100.; * quality - output quality; * RETURN VALUE; * returns newly created and encoded ASImage on success, NULL of failure.; * DESCRIPTION; * mirror_asimage() will create new image of requested size, it will then; * tile source image based on offset_x, offset_y, and destination size,; * and it will mirror it in vertical or horizontal direction.; *********/; /****f* libAfterImage/transform/pad_asimage(); * NAME ; * pad_asimage() enlarges ASImage, padding it with specified color on ; * each side in accordance with requested geometry.; * SYNOPSIS; * ASImage *pad_asimage( ASVisual *asv, ASImage *src,; * int dst_x, int dst_y,; * unsigned int to_width,; * unsigned int to_height,; * ARGB32 color,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * src - source ASImage; * dst_x, dst_y - placement of the source image relative to the origin of; * destination image; * to_width - width of the destination image; * to_height - height of the destination image; * color - ARGB32 col",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:8808,failure,failure,8808,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['failure'],['failure']
Availability," | Pred; // | /; // Succ; // In this case, we are evaluating whether to select edge -> Succ, e.g.; // set Succ as the layout successor of BB. Picking Succ as BB's; // successor breaks the CFG constraints (FIXME: define these constraints).; // With this layout, Pred BB; // is forced to be outlined, so the overall cost will be cost of the; // branch taken from BB to Pred, plus the cost of back taken branch; // from Pred to Succ, as well as the additional cost associated; // with the needed unconditional jump instruction from Pred To Succ.; // The cost of the topological order layout is the taken branch cost; // from BB to Succ, so to make BB->Succ a viable candidate, the following; // must hold:; // 2 * freq(BB->Pred) * taken_branch_cost + unconditional_jump_cost; // < freq(BB->Succ) * taken_branch_cost.; // Ignoring unconditional jump cost, we get; // freq(BB->Succ) > 2 * freq(BB->Pred), i.e.,; // prob(BB->Succ) > 2 * prob(BB->Pred); //; // When real profile data is available, we can precisely compute the; // probability threshold that is needed for edge BB->Succ to be considered.; // Without profile data, the heuristic requires the branch bias to be; // a lot larger to make sure the signal is very strong (e.g. 80% default).; // -----------------------------------------------------------------; // Case 2: diamond like CFG (if-then-else):; // S; // / \; // | \; // BB Pred; // \ /; // Succ; // ..; //; // The current block is BB and edge BB->Succ is now being evaluated.; // Note that edge S->BB was previously already selected because; // prob(S->BB) > prob(S->Pred).; // At this point, 2 blocks can be placed after BB: Pred or Succ. If we; // choose Pred, we will have a topological ordering as shown on the left; // in the picture below. If we choose Succ, we have the solution as shown; // on the right:; //; // topo-order:; //; // S----- ---S; // | | | |; // ---BB | | BB; // | | | |; // | Pred-- | Succ--; // | | | |; // ---Succ ---Pred--; //; // cost = freq(S->Pred) + freq",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp:1131,avail,available,1131,interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp,1,['avail'],['available']
Availability,""" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some artefacts may appear at the end of the band; like in the following example. In such cases ""E3"" should be used instead; of ""E4"". Begin_Macro(source); {; auto ce4 = new TCanvas(""ce4"",""ce4"",600,400);; ce4->Divide(2,1);; auto he4 = new TH1F(""he4"",""Distribution drawn with option E4"",100,-3,3);; Int_t i;; for (i=0;i<10000;i++) he4->Fill(gRandom->Gaus(0,1));; he4->SetFillColor(kRed);; he4->GetXaxis()->SetRange(40,48);; ce4->cd(1);; he4->Draw(""E4"");; ce4->cd(2);; auto he3 = (TH1F*)he4->DrawClone(""E3"");; he3->SetTitle(""Distribution drawn option E3"");; }; End_Macro. 2D histograms can be drawn with error bars as shown is the following example:. Begin_Macro(source); {; auto c2e = new TCanvas(""c2e"",""c2e"",600,400);; auto h2e = new TH2F(""h2e"",""TH2 drawn with option E"",40,-4,4,40,-20,20);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2e->",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:26933,error,error,26933,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,2,['error'],['error']
Availability,""""""" Commands for managing clang diagnostic breakpoints. Syntax: clangdiag enable [<warning>|<diag-name>]; clangdiag disable; clangdiag diagtool [<path>|reset]. The following subcommands are supported:. enable -- Enable clang diagnostic breakpoints.; disable -- Disable all clang diagnostic breakpoints.; diagtool -- Return, set, or reset diagtool path. This command sets breakpoints in clang, and clang based tools, that; emit diagnostics. When a diagnostic is emitted, and clangdiag is; enabled, it will use the appropriate diagtool application to determine; the name of the DiagID, and set breakpoints in all locations that; 'diag::name' appears in the source. Since the new breakpoints are set; after they are encountered, users will need to launch the executable a; second time in order to hit the new breakpoints. For in-tree builds, the diagtool application, used to map DiagID's to; names, is found automatically in the same directory as the target; executable. However, out-or-tree builds must use the 'diagtool'; subcommand to set the appropriate path for diagtool in the clang debug; bin directory. Since this mapping is created at build-time, it's; important for users to use the same version that was generated when; clang was compiled, or else the id's won't match. Notes:; - Substrings can be passed for both <warning> and <diag-name>.; - If <warning> is passed, only enable the DiagID(s) for that warning.; - If <diag-name> is passed, only enable that DiagID.; - Rerunning enable clears existing breakpoints.; - diagtool is used in breakpoint callbacks, so it can be changed; without the need to rerun enable.; - Adding this to your ~.lldbinit file makes clangdiag available at startup:; ""command script import /path/to/clangdiag.py"". """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/clangdiag.py:1680,avail,available,1680,interpreter/llvm-project/clang/utils/clangdiag.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/clangdiag.py,1,['avail'],['available']
Availability,""""""". <div id=""{jsDivId}"" style=""width: {jsCanvasWidth}px; height: {jsCanvasHeight}px; position: relative"">; </div>. <script>. function display_{jsDivId}(Core) {{; let obj = Core.parse({jsonContent});; Core.settings.HandleKeys = false;; Core.draw(""{jsDivId}"", obj, ""{jsDrawOptions}"");; }}. function script_load_{jsDivId}(src, on_error) {{; let script = document.createElement('script');; script.src = src;; script.onload = function() {{ display_{jsDivId}(JSROOT); }};; script.onerror = function() {{ script.remove(); on_error(); }};; document.head.appendChild(script);; }}. if (typeof requirejs !== 'undefined') {{. // We are in jupyter notebooks, use require.js which should be configured already; requirejs.config({{; paths: {{ 'JSRootCore' : [ 'build/jsroot', 'https://root.cern/js/7.7.4/build/jsroot', 'https://jsroot.gsi.de/7.7.4/build/jsroot' ] }}; }})(['JSRootCore'], function(Core) {{; display_{jsDivId}(Core);; }});. }} else if (typeof JSROOT !== 'undefined') {{. // JSROOT already loaded, just use it; display_{jsDivId}(JSROOT);. }} else {{. // We are in jupyterlab without require.js, directly loading jsroot; // Jupyterlab might be installed in a different base_url so we need to know it.; try {{; var base_url = JSON.parse(document.getElementById('jupyter-config-data').innerHTML).baseUrl;; }} catch(_) {{; var base_url = '/';; }}. // Try loading a local version of requirejs and fallback to cdn if not possible.; script_load_{jsDivId}(base_url + 'static/build/jsroot.js', function(){{; console.error('Fail to load JSROOT locally, please check your jupyter_notebook_config.py file');; script_load_{jsDivId}('https://root.cern/js/7.7.4/build/jsroot.js', function(){{; document.getElementById(""{jsDivId}"").innerHTML = ""Failed to load JSROOT"";; }});; }});; }}. </script>; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:1507,error,error,1507,bindings/jupyroot/python/JupyROOT/helpers/utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py,1,['error'],['error']
Availability,"""""""//#include ""TSocket.h""; enum ESockOptions {; kSendBuffer, // size of send buffer; kRecvBuffer, // size of receive buffer; kOobInline, // OOB message inline; kKeepAlive, // keep socket alive; kReuseAddr, // allow reuse of local portion of address 5-tuple; kNoDelay, // send without delay; kNoBlock, // non-blocking I/O; kProcessGroup, // socket process group (used for SIGURG and SIGIO); kAtMark, // are we at out-of-band mark (read only); kBytesToRead // get number of bytes to read, FIONREAD (read only); };. enum ESendRecvOptions {; kDefault, // default option (= 0); kOob, // send or receive out-of-band data; kPeek, // peek at incoming message (receive only); kDontBlock // send/recv as much data as possible without blocking; };; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py:187,alive,alive,187,bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py,1,['alive'],['alive']
Availability,"""""""; :param results_differ: Used to signify that results differ from; the canonical ones.; :param failure_flag: Used to signify a failure during the run.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:130,failure,failure,130,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,1,['failure'],['failure']
Availability,"""""""; @error.%(i)d = private unnamed_addr global [128 x i8] c""%(s)s""; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_fuzz.py:6,error,error,6,interpreter/llvm-project/llvm/utils/shuffle_fuzz.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_fuzz.py,1,['error'],['error']
Availability,"""""""; A lit directive taking a shell command line. For example,; 'RUN: echo hello world'. command: The content accumulated so far from the directive and its; continuation lines.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:70,echo,echo,70,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['echo'],['echo']
Availability,"""""""; A script had a fatal error such that there's no point in retrying. The; message has not been emitted on stdout or stderr but is instead included in; this exception.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:26,error,error,26,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['error'],['error']
Availability,"""""""; Apply substitutions to the script. Allow full regular expression syntax.; Replace each matching occurrence of regular expression pattern a with; substitution b in line ln. If a substitution expands into another substitution, it is expanded; recursively until the line has no more expandable substitutions. If; the line can still can be substituted after being substituted; `recursion_limit` times, it is an error. If the `recursion_limit` is; `None` (the default), no recursive substitution is performed at all.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:412,error,error,412,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['error'],['error']
Availability,"""""""; BOL=cr UP=cuu1 DOWN=cud1 LEFT=cub1 RIGHT=cuf1; CLEAR_SCREEN=clear CLEAR_EOL=el CLEAR_BOL=el1 CLEAR_EOS=ed BOLD=bold; BLINK=blink DIM=dim REVERSE=rev UNDERLINE=smul NORMAL=sgr0; HIDE_CURSOR=cinvis SHOW_CURSOR=cnorm""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py:20,DOWN,DOWN,20,interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,1,['DOWN'],['DOWN']
Availability,"""""""; Check newly defined columns are available also locally.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py:37,avail,available,37,bindings/experimental/distrdf/test/test_proxy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py,1,['avail'],['available']
Availability,"""""""; Compare the warnings produced by scan-build.; strictness defines the success criteria for the test:; 0 - success if there are no crashes or analyzer failure.; 1 - success if there are no difference in the number of reported bugs.; 2 - success if all the bug reports are identical. :return success: Whether tests pass according to the strictness; criteria.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:154,failure,failure,154,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,1,['failure'],['failure']
Availability,"""""""; Download the project and apply the local patchfile if it exists.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:5,Down,Download,5,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,1,['Down'],['Download']
Availability,"""""""; Equivalent of 'GetKeys' of the RResultMap. Unlike its C++ counterpart,; at the moment we cannot retrieve the list of variation names for a; certain action without triggering the distributed computation graph. For; this reason, the function raises an error if the keys are accessed; before computations have been triggered. In the future the behaviour; should be aligned with the C++ counterpart.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py:255,error,error,255,bindings/experimental/distrdf/python/DistRDF/Proxy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py,1,['error'],['error']
Availability,"""""""; Establish the strategy to recreate a std::runtime_error when unpickling. Creates a new error from the original message. Need to use a separate free; function instead of an inline lambda to help pickle.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py:92,error,error,92,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py,1,['error'],['error']
Availability,"""""""; Execute the tests in the run using up to the specified number of; parallel tasks, and inform the caller of each individual result. The; provided tests should be a subset of the tests available in this run; object. The progress_callback will be invoked for each completed test. If timeout is non-None, it should be a time in seconds after which to; stop executing tests. Returns the elapsed testing time. Upon completion, each test in the run will have its result; computed. Tests which were not actually executed (for any reason) will; be marked SKIPPED.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/run.py:188,avail,available,188,interpreter/llvm-project/llvm/utils/lit/lit/run.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/run.py,1,['avail'],['available']
Availability,"""""""; Function to determine the type of a variable x.; If x is a string. It maps it to the corresponding column's type in RDF. (String constants are not supported); Else it determines the fundamental type of x. (int, float, bool); Else it is an a numpy array and maps it to corresponding RVec.; Otherwise flags a type error; Args:; 	 ` x: Variable whose type is to be determined. Returns:; type of the variable x; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py:317,error,error,317,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,1,['error'],['error']
Availability,"""""""; Given the scan-build output directory, checks if the build failed; (by searching for the failures directories). If there are failures, it; creates a summary file in the output directory. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:94,failure,failures,94,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,2,['failure'],['failures']
Availability,"""""""; Jits the provided function using ROOT's NumbaDeclare.; Also checks if the function was jitted earlier in which case it won't jit again but if signature does not match. It raises an error. Arguments:; func: A python callable; cols_list: A list of columns of RDF on which func depends on.; extra_args: A dict of extra arguments that func requires.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py:186,error,error,186,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,1,['error'],['error']
Availability,"""""""; Just return the exit code in case of test failures instead of `die()`-ing; report test; failures in main().; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:47,failure,failures,47,.github/workflows/root-ci-config/build_root.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py,2,['failure'],['failures']
Availability,"""""""; Performs real-time map-reduce using Dask framework, retrieving the partial results ; as soon as they are available, allowing real-time data representation. Args:; ranges (list): A list of ranges to be processed. mapper (function): A function that runs the computational graph; and returns a list of values. reducer (function): A function that merges two lists that were; returned by the mapper. drawables_info_dict (dict): A dictionary where keys are plot object IDs ; and values are tuples containing optional callback functions, ; index of the plot object, and operation name. Returns:; merged_results (TaskResult): The merged result of the computation.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:110,avail,available,110,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,1,['avail'],['available']
Availability,"""""""; Returns a tuple (<supported> , <error message>); where; `<supported>` is True if `killProcessAndChildren()` is supported on; the current host, returns False otherwise.; `<error message>` is an empty string if `<supported>` is True,; otherwise is contains a string describing why the function is; not supported.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/util.py:37,error,error,37,interpreter/llvm-project/llvm/utils/lit/lit/util.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/util.py,2,['error'],['error']
Availability,"""""""; Returns a tuple (<supported> , <error message>); where; `<supported>` is True if setting maxIndividualTestTime is supported; on the current host, returns False otherwise.; `<error message>` is an empty string if `<supported>` is True,; otherwise is contains a string describing why setting; maxIndividualTestTime is not supported.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py:37,error,error,37,interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,2,['error'],['error']
Availability,"""""""; Run the script to download the project, if it exists.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:23,down,download,23,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,1,['down'],['download']
Availability,"""""""; Static Analyzer qualification infrastructure. The goal is to test the analyzer against different projects,; check for failures, compare results, and measure performance. Repository Directory will contain sources of the projects as well as the; information on how to build them and the expected output.; Repository Directory structure:; - ProjectMap file; - Historical Performance Data; - Project Dir1; - ReferenceOutput; - Project Dir2; - ReferenceOutput; ..; Note that the build tree must be inside the project dir. To test the build of the analyzer one would:; - Copy over a copy of the Repository Directory. (TODO: Prefer to ensure that; the build directory does not pollute the repository to min network; traffic).; - Build all projects, until error. Produce logs to report errors.; - Compare results. The files which should be kept around for failure investigations:; RepositoryCopy/Project DirI/ScanBuildResults; RepositoryCopy/Project DirI/run_static_analyzer.log. Assumptions (TODO: shouldn't need to assume these.):; The script is being run from the Repository Directory.; The compiler for scan-build and scan-build are in the PATH.; export PATH=/Users/zaks/workspace/c2llvm/build/Release+Asserts/bin:$PATH. For more logging, set the env variables:; zaks:TI zaks$ export CCC_ANALYZER_LOG=1; zaks:TI zaks$ export CCC_ANALYZER_VERBOSE=1. The list of checkers tested are hardcoded in the Checkers variable.; For testing additional checkers, use the SA_ADDITIONAL_CHECKERS environment; variable. It should contain a comma separated list.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:123,failure,failures,123,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,4,"['error', 'failure']","['error', 'errors', 'failure', 'failures']"
Availability,"""""""; Static Analyzer qualification infrastructure: adding a new project to; the Repository Directory. Add a new project for testing: build it and add to the Project Map file.; Assumes it's being run from the Repository Directory.; The project directory should be added inside the Repository Directory and; have the same name as the project ID. The project should use the following files for set up:; - cleanup_run_static_analyzer.sh - prepare the build environment.; Ex: make clean can be a part of it.; - run_static_analyzer.cmd - a list of commands to run through scan-build.; Each command should be on a separate line.; Choose from: configure, make, xcodebuild; - download_project.sh - download the project into the CachedSource/; directory. For example, download a zip of; the project source from GitHub, unzip it,; and rename the unzipped directory to; 'CachedSource'. This script is not called; when 'CachedSource' is already present,; so an alternative is to check the; 'CachedSource' directory into the; repository directly.; - CachedSource/ - An optional directory containing the source of the; project being analyzed. If present,; download_project.sh will not be called.; - changes_for_analyzer.patch - An optional patch file for any local; changes; (e.g., to adapt to newer version of clang); that should be applied to CachedSource; before analysis. To construct this patch,; run the download script to download; the project to CachedSource, copy the; CachedSource to another directory (for; example, PatchedSource) and make any; needed modifications to the copied; source.; Then run:; diff -ur CachedSource PatchedSource \; > changes_for_analyzer.patch; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestAdd.py:689,down,download,689,interpreter/llvm-project/clang/utils/analyzer/SATestAdd.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestAdd.py,4,['down'],['download']
Availability,"""""""; Test for the pythonization of TGraph, TGraph2D and their error; subclasses, in particular of their X,Y,Z coordinates and errors; getters, which sets the size of the returned buffers.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tgraph_getters.py:62,error,error,62,bindings/pyroot/pythonizations/test/tgraph_getters.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tgraph_getters.py,2,['error'],"['error', 'errors']"
Availability,"""""""; Test the availability of std::string_view; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/string_view.py:14,avail,availability,14,bindings/pyroot/pythonizations/test/string_view.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/string_view.py,1,['avail'],['availability']
Availability,"""""""; The SparkContext.defaultParallelism property roughly translates to the; available amount of logical cores on the cluster. Some examples:; - spark.master = local[n]: returns n.; - spark.executor.instances = m and spark.executor.cores = n: returns `n*m`.; By default, the minimum number this returns is 2 if the context; doesn't know any better. For example, if dynamic allocation is enabled.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:77,avail,available,77,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,1,['avail'],['available']
Availability,"""""""; addMetric(name, value). Attach a test metric to the test result, with the given name and list of; values. It is an error to attempt to attach the metrics with the same; name multiple times. Each value must be an instance of a MetricValue subclass.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py:120,error,error,120,interpreter/llvm-project/llvm/utils/lit/lit/Test.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py,1,['error'],['error']
Availability,"""""""; addMicroResult(microResult). Attach a micro-test result to the test result, with the given name and; result. It is an error to attempt to attach a micro-test with the; same name multiple times. Each micro-test result must be an instance of the Result class.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py:123,error,error,123,interpreter/llvm-project/llvm/utils/lit/lit/Test.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py,1,['error'],['error']
Availability,"""""""; define i32 @main() {; entry:; ; Create a scratch space to print error messages.; %%str = alloca [128 x i8]; %%str.ptr = getelementptr inbounds [128 x i8], [128 x i8]* %%str, i32 0, i32 0. ; Build the input vector and call the test function.; %%v = call fastcc <%(N)d x %(T)s> @test_wrapper(%(inputs)s); ; We need to cast this back to an integer type vector to easily check the; ; result.; %%v.cast = bitcast <%(N)d x %(T)s> %%v to <%(N)d x %(IT)s>; br label %%test.0; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_fuzz.py:69,error,error,69,interpreter/llvm-project/llvm/utils/shuffle_fuzz.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_fuzz.py,1,['error'],['error']
Availability,"""""""; getMissingRequiredFeatures() -> list of strings. Returns a list of features from REQUIRES that are not satisfied.""; Throws ValueError if a REQUIRES line has a syntax error.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py:171,error,error,171,interpreter/llvm-project/llvm/utils/lit/lit/Test.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py,1,['error'],['error']
Availability,"""""""; getUnsupportedFeatures() -> list of strings. Returns a list of features from UNSUPPORTED that are present; in the test configuration's features.; Throws ValueError if an UNSUPPORTED line has a syntax error.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py:205,error,error,205,interpreter/llvm-project/llvm/utils/lit/lit/Test.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py,1,['error'],['error']
Availability,"""""""; isExpectedToFail() -> bool. Check whether this test is expected to fail in the current; configuration. This check relies on the test xfails property which by; some test formats may not be computed until the test has first been; executed.; Throws ValueError if an XFAIL line has a syntax error.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py:292,error,error,292,interpreter/llvm-project/llvm/utils/lit/lit/Test.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py,1,['error'],['error']
Availability,"""""""; isWithinFeatureLimits() -> bool. A test is within the feature limits set by run_only_tests if; 1. the test's requirements ARE satisfied by the available features; 2. the test's requirements ARE NOT satisfied after the limiting; features are removed from the available features. Throws ValueError if a REQUIRES line has a syntax error.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py:148,avail,available,148,interpreter/llvm-project/llvm/utils/lit/lit/Test.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py,3,"['avail', 'error']","['available', 'error']"
Availability,"""""""; template <typename Enum>; struct my_iter_enum {; struct iterator {; using value_type = Enum;; using difference_type = ptrdiff_t;; using reference = const Enum&;; using pointer = const Enum*;; using iterator_category = std::input_iterator_tag;. iterator(Enum value) : cur(value) {}. reference operator*() { return cur; }; pointer operator->() { return &cur; }; bool operator==(const iterator& other) { return cur == other.cur; }; bool operator!=(const iterator& other) { return !(*this == other); }; iterator& operator++() { if (cur != Enum::Unknown) cur = static_cast<Enum>(static_cast<std::underlying_type_t<Enum>>(cur) + 1); return *this; }; iterator operator++(int) { iterator other = *this; ++(*this); return other; }. private:; Enum cur;; int TODO_why_is_this_placeholder_needed; // JIT error? Too aggressive optimization?; };. iterator begin() {; return iterator(Enum::Black);; }. iterator end() {; return iterator(Enum::Unknown);; }; };. enum class MyColorEnum : char {; Black = 1,; Blue,; Red,; Yellow,; Unknown; };""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:797,error,error,797,bindings/pyroot/cppyy/cppyy/test/test_regression.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py,1,['error'],['error']
Availability,"""""""; test.%(i)d:; %%v.%(i)d = extractelement <%(N)d x %(IT)s> %%v.cast, i32 %(i)d; %%cmp.%(i)d = icmp ne %(IT)s %%v.%(i)d, %(r)d; br i1 %%cmp.%(i)d, label %%die.%(i)d, label %%test.%(next_i)d. die.%(i)d:; ; Capture the actual value and print an error message.; %%tmp.%(i)d = zext %(IT)s %%v.%(i)d to i2048; %%bad.%(i)d = trunc i2048 %%tmp.%(i)d to i32; call i32 (i8*, i8*, ...) @sprintf(i8* %%str.ptr, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @error.%(i)d, i32 0, i32 0), i32 %%bad.%(i)d); %%length.%(i)d = call i32 @strlen(i8* %%str.ptr); call i32 @write(i32 2, i8* %%str.ptr, i32 %%length.%(i)d); call void @llvm.trap(); unreachable; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_fuzz.py:245,error,error,245,interpreter/llvm-project/llvm/utils/shuffle_fuzz.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_fuzz.py,2,['error'],['error']
Availability,"""""""; |<h2>Analyzer Failures</h2>; |<p>The analyzer had problems processing the following files:</p>; |<table>; | <thead>; | <tr>; | <td>Problem</td>; | <td>Source File</td>; | <td>Preprocessed File</td>; | <td>STDERR Output</td>; | </tr>; | </thead>; | <tbody>""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py:19,Failure,Failures,19,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,1,['Failure'],['Failures']
Availability,"""""""A script to generate FileCheck statements for 'opt' analysis tests. This script is a utility to update LLVM opt analysis test cases with new; FileCheck patterns. It can either update all of the tests in the file or; a single test function. Example usage:; $ update_analyze_test_checks.py --opt=../bin/opt test/foo.ll. Workflow:; 1. Make a compiler patch that requires updating some number of FileCheck lines; in regression test files.; 2. Save the patch and revert it from your local work area.; 3. Update the RUN-lines in the affected regression tests to look canonical.; Example: ""; RUN: opt < %s -passes='print<cost-model>' -disable-output 2>&1 | FileCheck %s""; 4. Refresh the FileCheck lines for either the entire file or select functions by; running this script.; 5. Commit the fresh baseline of checks.; 6. Apply your patch from step 1 and rebuild your local binaries.; 7. Re-run this script on affected regression tests.; 8. Check the diffs to ensure the script has done something reasonable.; 9. Submit a patch including the regression test diffs for review. A common pattern is to have the script insert complete checking of every; instruction. Then, edit it down to only check the relevant instructions.; The script is designed to make adding checks to a test case fast, it is *not*; designed to be authoratitive about what constitutes a good test!; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_analyze_test_checks.py:1171,down,down,1171,interpreter/llvm-project/llvm/utils/update_analyze_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_analyze_test_checks.py,1,['down'],['down']
Availability,"""""""A shuffle-select vector fuzz tester. This is a python program to fuzz test the LLVM shufflevector and select; instructions. It generates a function with a random sequnece of shufflevectors; while optionally attaching it with a select instruction (regular or zero merge),; maintaining the element mapping accumulated across the function. It then; generates a main function which calls it with a different value in each element; and checks that the result matches the expected mapping. Take the output IR printed to stdout, compile it to an executable using whatever; set of transforms you want to test, and run the program. If it crashes, it found; a bug (an error message with the expected and actual result is printed).; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py:661,error,error,661,interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,1,['error'],['error']
Availability,"""""""Access to templates made available with 'using'""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:28,avail,available,28,bindings/pyroot/cppyy/cppyy/test/test_templates.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py,1,['avail'],['available']
Availability,"""""""Add a path to the include paths available to Cling.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:35,avail,available,35,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,1,['avail'],['available']
Availability,"""""""Add a path to the library search paths available to Cling.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:42,avail,available,42,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,1,['avail'],['available']
Availability,"""""""Always resort to the compiler wrapper even when better; intercept methods are available.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py:81,avail,available,81,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,1,['avail'],['available']
Availability,"""""""Availability of boost::any""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_boost.py:3,Avail,Availability,3,bindings/pyroot/cppyy/cppyy/test/test_boost.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_boost.py,1,['Avail'],['Availability']
Availability,"""""""Bindings for {}.; These bindings are based on https://cppyy.readthedocs.io/en/latest/, and can be; used as per the documentation provided via the cppyy.cgl namespace. The environment; variable LD_LIBRARY_PATH must contain the path of the {}.rootmap file. Use; ""import cppyy; from cppyy.gbl import <some-C++-entity>"". Alternatively, use ""import {}"". This convenience wrapper supports ""discovery"" of the; available C++ entities using, for example Python 3's command line completion support.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:406,avail,available,406,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,1,['avail'],['available']
Availability,"""""""Check availability of ASAN with gcc""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:9,avail,availability,9,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py,1,['avail'],['availability']
Availability,"""""""Check error behavior of failing C++ code""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:9,error,error,9,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py,1,['error'],['error']
Availability,"""""""Check error reporting of cppyy.cppdef""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:9,error,error,9,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py,1,['error'],['error']
Availability,"""""""Config should be a list of parameters given to the %config command.; We allow only one setting per %config line and that setting can only; have one value. Assuming the parameters are valid, update the kernel's setting with; the new value. If there is an error, raise a TableGenKernelException. >>> k.parse_config_magic([]); Traceback (most recent call last):; ...; TableGenKernelException: Incorrect number of parameters to %config. Expected %config <setting> <value>.; >>> k._cell_reset; False; >>> k.parse_config_magic([""a"", ""b"", ""c""]); Traceback (most recent call last):; ...; TableGenKernelException: Incorrect number of parameters to %config. Expected %config <setting> <value>.; >>> k.parse_config_magic([""notasetting"", ""...""]); Traceback (most recent call last):; ...; TableGenKernelException: Unknown kernel setting ""notasetting"". Possible settings are: ""cellreset"".; >>> k.parse_config_magic([""cellreset"", ""food""]); Traceback (most recent call last):; ...; TableGenKernelException: Invalid value for setting ""cellreset"", expected ""on"" or ""off"".; >>> k.parse_config_magic([""cellreset"", ""on""]); >>> k._cell_reset; True; >>> k.parse_config_magic([""cellreset"", ""off""]); >>> k._cell_reset; False; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py:257,error,error,257,interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py,1,['error'],['error']
Availability,"""""""Construct a ToolSubst. key: The text which is to be substituted. command: The command to substitute when the key is matched. By default,; this will treat `key` as a tool name and search for it. If it is a; string, it is interpreted as an exact path. If it is an instance of; FindTool, the specified tool name is searched for on disk. pre: If specified, the substitution will not find matches where; the character immediately preceding the word-boundary that begins; `key` is any of the characters in the string `pre`. post: If specified, the substitution will not find matches where; the character immediately after the word-boundary that ends `key`; is any of the characters specified in the string `post`. verbatim: If True, `key` is an exact regex that is passed to the; underlying substitution. unresolved: Action to take if the tool substitution cannot be; resolved. Valid values:; 'warn' - log a warning but add the substitution anyway.; 'fatal' - Exit the test suite and log a fatal error.; 'break' - Don't add any of the substitutions from the current; group, and return a value indicating a failure.; 'ignore' - Don't add the substitution, and don't log an error. extra_args: If specified, represents a list of arguments that will be; appended to the tool's substitution. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/subst.py:993,error,error,993,interpreter/llvm-project/llvm/utils/lit/lit/llvm/subst.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/subst.py,3,"['error', 'failure']","['error', 'failure']"
Availability,"""""""Conversion errors should be Python exceptions""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:14,error,errors,14,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,1,['error'],['errors']
Availability,"""""""Creates a corpus manifest describing the bitcode that has been found. Args:; relative_output_paths: A list of paths to each bitcode file relative to the; output directory.; outout_dir: The output directory where the corpus is being created.; default_args: An array of compiler flags that should be used to compile; the bitcode when using further downstream tooling.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/mlgo-utils/mlgo/corpus/make_corpus_lib.py:349,down,downstream,349,interpreter/llvm-project/llvm/utils/mlgo-utils/mlgo/corpus/make_corpus_lib.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/mlgo-utils/mlgo/corpus/make_corpus_lib.py,1,['down'],['downstream']
Availability,"""""""Creates failures directory if not exits yet.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py:11,failure,failures,11,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,1,['failure'],['failures']
Availability,"""""""Decorator for command entry methods. The decorator initialize/shutdown logging and guard on programming; errors (catch exceptions). The decorated method can have arbitrary parameters, the return value will; be the exit code of the process.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py:108,error,errors,108,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py,1,['error'],['errors']
Availability,"""""""Do not create a 'failures' subdirectory that includes analyzer; crash reports and preprocessed source files.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py:20,failure,failures,20,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,1,['failure'],['failures']
Availability,"""""""Downloads latest build artifact starting with <prefix>,; and returns the file path to the downloaded file and shell_log.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py:3,Down,Downloads,3,.github/workflows/root-ci-config/build_utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py,2,"['Down', 'down']","['Downloads', 'downloaded']"
Availability,"""""""Echo some comments and invoke both versions of toy""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/MCJIT/cached/genk-timing.py:3,Echo,Echo,3,interpreter/llvm-project/llvm/examples/Kaleidoscope/MCJIT/cached/genk-timing.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/MCJIT/cached/genk-timing.py,5,['Echo'],['Echo']
Availability,"""""""Examples:; - rooteventselector source.root:tree dest.root; Copy the tree 'tree' from 'source.root' to 'dest.root'. - rooteventselector -f 101 source.root:tree dest.root; Copy a subset of the tree 'tree' from 'source.root' to 'dest.root'. The new tree contains events from the old tree except the first hundred. - rooteventselector -l 100 source.root:tree dest.root; Copy a subset of the tree 'tree' from 'source.root' to 'dest.root'. The new tree contains the first hundred events from the old tree. - rooteventselector --recreate source.root:tree dest.root; Recreate the destination file 'dest.root' and copy the tree 'tree' from 'source.root' to 'dest.root'. - rooteventselector -c 1 source.root:tree dest.root; Change the compression factor of the destination file 'dest.root' and copy the tree 'tree' from 'source.root' to 'dest.root'. For more information about compression settings of ROOT file, please look at the reference guide available on the ROOT site. - rooteventselector -s ""(branch1Value > 100)&&( branch2Value )"" source.root:tree dest.root; Copy the tree 'tree' from 'source.root' to 'dest.root' and apply a selection to the output tree. - rooteventselector -e ""muon_*"" source.root:tree dest.root; Copy the tree 'tree' from 'source.root' to 'dest.root' and remove branches matching ""muon_*"". - rooteventselector -e ""*"" -i ""muon_*"" source.root:tree dest.root; Copy the tree 'tree' from 'source.root' to 'dest.root' and only write branches matching ""muon_*""; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/python/rooteventselector.py:940,avail,available,940,main/python/rooteventselector.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/python/rooteventselector.py,1,['avail'],['available']
Availability,"""""""Examples:; - rootmkdir example.root:dir; Add the directory 'dir' to the ROOT file 'example.root'. - rootmkdir example.root:dir1/dir2; Add the directory 'dir2' in 'dir1' which is into the ROOT file 'example.root'. - rootmkdir -p example.root:dir1/dir2/dir3; Make parent directories of 'dir3' as needed, no error if existing. - rootmkdir example.root; Create an empty ROOT file named 'example.root'; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/python/rootmkdir.py:308,error,error,308,main/python/rootmkdir.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/python/rootmkdir.py,1,['error'],['error']
Availability,"""""""Examples:; - rootslimtree source.root:tree dest.root; Copy the tree 'tree' from 'source.root' to 'dest.root'. - rootslimtree --recreate source.root:tree dest.root; Recreate the destination file 'dest.root' and copy the tree 'tree' from 'source.root' to 'dest.root'. - rootslimtree -c 1 source.root:tree dest.root; Change the compression factor of the destination file 'dest.root' and copy the tree 'tree' from 'source.root' to 'dest.root'. For more information about compression settings of ROOT file, please look at the reference guide available on the ROOT site. - rootslimtree -e ""muon_*"" source.root:tree dest.root; Copy the tree 'tree' from 'source.root' to 'dest.root' and remove branches matching ""muon_*"". - rootslimtree -e ""*"" -i ""muon_*"" source.root:tree dest.root; Copy the tree 'tree' from 'source.root' to 'dest.root' and only write branches matching ""muon_*""; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/python/rootslimtree.py:540,avail,available,540,main/python/rootslimtree.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/python/rootslimtree.py,1,['avail'],['available']
Availability,"""""""Execute command ``command`` (list of arguments or string) with. * working directory ``cwd`` (str), use None to use the current; working directory; * environment ``env`` (dict), use None for none; * Input to the command ``input`` (str), use string to pass; no input.; * Max execution time ``timeout`` (int) seconds. Use 0 for no timeout.; * ``redirect_stderr`` (bool), use True if redirect stderr to stdout. Returns a tuple (out, err, exitCode) where; * ``out`` (str) is the standard output of running the command; * ``err`` (str) is the standard error of running the command; * ``exitCode`` (int) is the exitCode of running the command. If the timeout is hit an ``ExecuteCommandTimeoutException``; is raised. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/util.py:549,error,error,549,interpreter/llvm-project/llvm/utils/lit/lit/util.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/util.py,1,['error'],['error']
Availability,"""""""Failure due to typo""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:3,Failure,Failure,3,bindings/pyroot/cppyy/cppyy/test/test_regression.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py,1,['Failure'],['Failure']
Availability,"""""""Generic Error that can be raised without printing a traceback.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_mca_test_checks.py:11,Error,Error,11,interpreter/llvm-project/llvm/utils/update_mca_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_mca_test_checks.py,1,['Error'],['Error']
Availability,"""""""Generic exception for failures in bug reporting.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/Reporter.py:25,failure,failures,25,interpreter/llvm-project/clang/tools/scan-view/share/Reporter.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/Reporter.py,1,['failure'],['failures']
Availability,"""""""Get all the available checkers from default and from the plugins. :param clang: the compiler we are using; :param plugins: list of plugins which was requested by the user; :return: a dictionary of all available checkers and its status. {<checker name>: (<checker description>, <is active by default>)}""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/clang.py:15,avail,available,15,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/clang.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/clang.py,2,['avail'],['available']
Availability,"""""""Given a block_info, see if we can analyze it further to let us break it; down by prefix per-line rather than per-block.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_mca_test_checks.py:76,down,down,76,interpreter/llvm-project/llvm/utils/update_mca_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_mca_test_checks.py,1,['down'],['down']
Availability,"""""""Injection of TDirectory.__getitem__ that raises AttributeError on failure. Method that is assigned to TDirectory.__getitem__. It relies on Get to; obtain the object from the TDirectory and adds on top:; - Raising an AttributeError if the object does not exist; - Caching the result of a successful get for future re-attempts.; Once cached, the same object is retrieved every time.; This pythonisation is inherited by TDirectoryFile and TFile. Example:; ```; myfile.mydir.mysubdir.myHist.Draw(); ```; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py:69,failure,failure,69,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py,1,['failure'],['failure']
Availability,"""""""Interpret a redirected echo or @echo command""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:26,echo,echo,26,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,2,['echo'],['echo']
Availability,"""""""It assembles the analysis command line and executes it. Capture the; output of the analysis and returns with it. If failure reports are; requested, it calls the continuation to generate it.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py:119,failure,failure,119,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,1,['failure'],['failure']
Availability,"""""""Lookup the default pretty-printer for val and use it. If no pretty-printer is defined for the type of val, print an error and; return a placeholder string.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/gdb-scripts/prettyprinters.py:119,error,error,119,interpreter/llvm-project/llvm/utils/gdb-scripts/prettyprinters.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/gdb-scripts/prettyprinters.py,1,['error'],['error']
Availability,"""""""More aggregate testings (used to fail/report errors)""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:48,error,errors,48,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,1,['error'],['errors']
Availability,"""""""Print all available checkers and mark the enabled ones.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py:13,avail,available,13,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,1,['avail'],['available']
Availability,"""""""Provide options to pass through to the analyzer's; -analyzer-config flag. Several options are separated with comma:; 'key1=val1,key2=val2'. Available options:; stable-report-filename=true or false (default). Switch the page naming to:; report-<filename>-<function/method name>-<id>.html; instead of report-XXXXXX.html""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py:143,Avail,Available,143,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,1,['Avail'],['Available']
Availability,"""""""Python errors should propagate through wrapper""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:10,error,errors,10,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,1,['error'],['errors']
Availability,"""""""ROOTs Object-Oriented Technologies.\n; root is an interactive interpreter of C++ code. It uses the ROOT framework. For more information on ROOT, please refer to\n; An extensive Users Guide is available from that site (see below).; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/root-argparse.py:195,avail,available,195,core/base/src/root-argparse.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/root-argparse.py,1,['avail'],['available']
Availability,"""""""Reduce available overloads to 1""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:10,avail,available,10,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,1,['avail'],['available']
Availability,"""""""Reduces GlobalISel failures. This script is a utility to reduce tests that GlobalISel; fails to compile. It runs llc to get the error message using a regex and creates; a custom command to check that specific error. Then, it runs bugpoint; with the custom command. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/bugpoint_gisel_reducer.py:22,failure,failures,22,interpreter/llvm-project/llvm/utils/bugpoint_gisel_reducer.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/bugpoint_gisel_reducer.py,3,"['error', 'failure']","['error', 'failures']"
Availability,"""""""Runs a step of the compilation. Reports failure as exception.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py:43,failure,failure,43,interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,1,['failure'],['failure']
Availability,"""""""Script to bisect over files in an rsp file. This is mostly used for detecting which file contains a miscompile between two; compiler revisions. It does this by bisecting over an rsp file. Between two; build directories, this script will make the rsp file reference the current; build directory's version of some set of the rsp's object files/libraries, and; reference the other build directory's version of the same files for the; remaining set of object files/libraries. Build the target in two separate directories with the two compiler revisions,; keeping the rsp file around since ninja by default deletes the rsp file after; building.; $ ninja -d keeprsp mytarget. Create a script to build the target and run an interesting test. Get the; command to build the target via; $ ninja -t commands | grep mytarget; The command to build the target should reference the rsp file.; This script doesn't care if the test script returns 0 or 1 for specifically the; successful or failing test, just that the test script returns a different; return code for success vs failure.; Since the command that `ninja -t commands` is run from the build directory,; usually the test script cd's to the build directory. $ rsp_bisect.py --test=path/to/test_script --rsp=path/to/build/target.rsp; --other_rel_path=../Other; where --other_rel_path is the relative path from the first build directory to; the other build directory. This is prepended to files in the rsp. For a full example, if the foo target is suspected to contain a miscompile in; some file, have two different build directories, buildgood/ and buildbad/ and; run; $ ninja -d keeprsp foo; in both so we have two versions of all relevant object files that may contain a; miscompile, one built by a good compiler and one by a bad compiler. In buildgood/, run; $ ninja -t commands | grep '-o .*foo'; to get the command to link the files together. It may look something like; clang -o foo @foo.rsp. Now create a test script that runs the link step and what",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/rsp_bisect.py:1064,failure,failure,1064,interpreter/llvm-project/llvm/utils/rsp_bisect.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/rsp_bisect.py,1,['failure'],['failure']
Availability,"""""""Script to find missing formal dependencies in a build.ninja file. Suppose you have a header file that's autogenerated by (for example) Tablegen.; If a C++ compilation step needs to include that header, then it must be; executed after the Tablegen build step that generates the header. So the; dependency graph in build.ninja should have the Tablegen build step as an; ancestor of the C++ one. If it does not, then there's a latent build-failure; bug, because depending on the order that ninja chooses to schedule its build; steps, the C++ build step could run first, and fail because the header it needs; does not exist yet. But because that kind of bug can easily be latent or intermittent, you might; not notice, if your local test build happens to succeed. What you'd like is a; way to detect problems of this kind reliably, even if they _didn't_ cause a; failure on your first test. This script tries to do that. It's specific to the 'ninja' build tool, because; ninja has useful auxiliary output modes that produce the necessary data:. - 'ninja -t graph' emits the full DAG of formal dependencies derived from; build.ninja (in Graphviz format). - 'ninja -t deps' dumps the database of dependencies discovered at build time; by finding out which headers each source file actually included. By cross-checking these two sources of data against each other, you can find; true dependencies shown by 'deps' that are not reflected as formal dependencies; in 'graph', i.e. a generated header that is required by a given source file but; not forced to be built first. To run it:. - set up a build directory using ninja as the build tool (cmake -G Ninja). - in that build directory, run ninja to perform an actual build (populating; the dependency database). - then, in the same build directory, run this script. No arguments are needed; (but -C and -f are accepted, and propagated to ninja for convenience). Requirements outside core Python: the 'pygraphviz' module, available via pip or; as the 'pytho",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/check_ninja_deps.py:440,failure,failure,440,interpreter/llvm-project/llvm/utils/check_ninja_deps.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/check_ninja_deps.py,3,"['failure', 'reliab']","['failure', 'reliably']"
Availability,"""""""Test addressof() error reporting""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:20,error,error,20,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py,1,['error'],['error']
Availability,"""""""Test auto-downcast in adverse inheritance situation""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:13,down,downcast,13,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,1,['down'],['downcast']
Availability,"""""""Test availability of std::ostream""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_streams.py:8,avail,availability,8,bindings/pyroot/cppyy/cppyy/test/test_streams.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_streams.py,1,['avail'],['availability']
Availability,"""""""Test failure to load dictionary""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:8,failure,failure,8,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py,1,['failure'],['failure']
Availability,"""""""Test proper handling when a hierarchy is not fully available""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:54,avail,available,54,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py,1,['avail'],['available']
Availability,"""""""Test pythonizations error reporting""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:23,error,error,23,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,1,['error'],['error']
Availability,"""""""Test that a pointer to base return does an auto-downcast""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:51,down,downcast,51,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,1,['down'],['downcast']
Availability,"""""""Tests for revert_checker. Note that these tests require having LLVM's git history available, since our; repository has a few interesting instances of edge-cases.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/revert_checker_test.py:85,avail,available,85,interpreter/llvm-project/llvm/utils/revert_checker_test.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/revert_checker_test.py,1,['avail'],['available']
Availability,"""""""Update Options.td for the flags changes in https://reviews.llvm.org/Dxyz. This script translates Options.td from using Flags to control option visibility; to using Vis instead. It is meant to be idempotent and usable to help update; downstream forks if they have their own changes to Options.td. Usage:; ```sh; % update_options_td_flags.py path/to/Options.td > Options.td.new; % mv Options.td.new path/to/Options.td; ```. This script will be removed after the next LLVM release.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/update_options_td_flags.py:236,down,downstream,236,interpreter/llvm-project/clang/utils/update_options_td_flags.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/update_options_td_flags.py,1,['down'],['downstream']
Availability,"""""""Verify error handling""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_conversions.py:10,error,error,10,bindings/pyroot/cppyy/cppyy/test/test_conversions.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_conversions.py,1,['error'],['error']
Availability,"""""""\; LLVM {} Release. # A note on binaries. Volunteers make binaries for the LLVM project, which will be uploaded; when they have had time to test and build these binaries. They might; not be available directly or not at all for each release. We suggest; you use the binaries from your distribution or build your own if you; rely on a specific platform or configuration.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/release/github-upload-release.py:193,avail,available,193,interpreter/llvm-project/llvm/utils/release/github-upload-release.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/release/github-upload-release.py,1,['avail'],['available']
Availability,"""""""\; namespace ExceptionByValue {; class Countable : std::exception {; public:; static int s_count;; Countable() : fMsg(""error"") { ++s_count; }; Countable(const Countable&) { ++s_count; }; Countable& operator=(const Countable&) { return *this; }; ~Countable() { --s_count; }; const char* what() const throw() override { return fMsg.c_str(); }; private:; std::string fMsg;; };. int Countable::s_count = 0;. Countable create_one() { return Countable{}; }; int count() { return Countable::s_count; }; }""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:122,error,error,122,bindings/pyroot/cppyy/cppyy/test/test_regression.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py,1,['error'],['error']
Availability,"""""""gen_std.py is a tool to generate a lookup table (from qualified names to; include headers) for C/C++ Standard Library symbols by parsing archived HTML; files from cppreference. The generated files are located in clang/include/Tooling/Inclusions. Caveats and FIXMEs:; - only symbols directly in ""std"" namespace are added, we should also add std's; subnamespace symbols (e.g. chrono).; - symbols with multiple variants or defined in multiple headers aren't added,; e.g. std::move, std::swap. Usage:; 1. Install BeautifulSoup dependency, see instruction:; https://www.crummy.com/software/BeautifulSoup/bs4/doc/#installing-beautiful-soup; 2. Download cppreference offline HTML files (html_book_20220730.zip in Unofficial Release) at; https://en.cppreference.com/w/Cppreference:Archives; 3. Unzip the zip file from step 2 (e.g., to a ""cppreference"" directory). You should; get a ""cppreference/reference"" directory.; 4. Run the command:; // Generate C++ symbols; python3 gen_std.py -cppreference cppreference/reference -symbols=cpp > StdSymbolMap.inc; // Generate C symbols; python3 gen_std.py -cppreference cppreference/reference -symbols=c > CSymbolMap.inc; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/include-mapping/gen_std.py:641,Down,Download,641,interpreter/llvm-project/clang/tools/include-mapping/gen_std.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/include-mapping/gen_std.py,1,['Down'],['Download']
Availability,"""Example of col plots with option SAME"",200,10,700,500);; auto h1 = new TH2F(""h1"",""h1"",40,-3,3,40,-3,3);; auto h2 = new TH2F(""h2"",""h2"",40,-3,3,40,-3,3);; auto h3 = new TH2F(""h3"",""h3"",40,-3,3,40,-3,3);; auto h4 = new TH2F(""h4"",""h4"",40,-3,3,40,-3,3);; h1->SetBit(TH1::kNoStats);; for (Int_t i=0;i<5000;i++) {; double x,y;; gRandom->Rannor(x,y);; if(x>0 && y>0) h1->Fill(x,y,4);; if(x<0 && y<0) h2->Fill(x,y,3);; if(x>0 && y<0) h3->Fill(x,y,2);; if(x<0 && y>0) h4->Fill(x,y,1);; }; h1->Draw(""colz"");; h2->Draw(""col same"");; h3->Draw(""col same"");; h4->Draw(""col same"");; }; End_Macro. The option `COL` can be combined with the option `POL`:. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto hcol1 = new TH2F(""hcol1"",""Option COLor combined with POL"",40,-4,4,40,-4,4);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; hcol1->Fill(px,py);; }; hcol1->Draw(""COLZPOL"");; }; End_Macro. \since **ROOT version 6.07/03:**. A second rendering technique is also available with the COL2 and COLZ2 options. These options provide potential performance improvements compared to the standard; COL option. The performance comparison of the COL2 to the COL option depends on; the histogram and the size of the rendering region in the current pad. In general,; a small (approx. less than 100 bins per axis), sparsely populated TH2 will render; faster with the COL option. However, for larger histograms (approx. more than 100 bins per axis); that are not sparse, the COL2 option will provide up to 20 times performance improvements.; For example, a 1000x1000 bin TH2 that is not sparse will render an order of magnitude; faster with the COL2 option. The COL2 option will also scale its performance based on the size of the; pixmap the histogram image is being rendered into. It also is much better optimized for; sessions where the user is forwarding X11 windows through an `ssh` connection. For the most part, the COL2 and COLZ2 options are a drop in replacement to the C",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:40932,avail,available,40932,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['avail'],['available']
Availability,"""N"" | Does not store the graphics function, does not draw the histogram with the function after fitting.; /// ""0"" | Does not draw the histogram and the fitted function after fitting, but in contrast to option ""N"", it stores the fitted function in the histogram list of functions.; /// ""R"" | Fit using a fitting range specified in the function range with `TF1::SetRange`.; /// ""B"" | Use this option when you want to fix one or more parameters and the fitting function is a predefined one (e.g gaus, expo,..), otherwise in case of pre-defined functions, some default initial values and limits are set.; /// ""C"" | In case of linear fitting, do no calculate the chisquare (saves CPU time).; /// ""G"" | Uses the gradient implemented in `TF1::GradientPar` for the minimization. This allows to use Automatic Differentiation when it is supported by the provided TF1 function.; /// ""EX0"" | When fitting a TGraphErrors or TGraphAsymErrors do not consider errors in the X coordinates; /// ""ROB"" | In case of linear fitting, compute the LTS regression coefficients (robust (resistant) regression), using the default fraction of good points ""ROB=0.x"" - compute the LTS regression coefficients, using 0.x as a fraction of good points; ///; ///; /// This function is used for fitting also the derived TGraph classes such as TGraphErrors or TGraphAsymmErrors.; /// See the note below on how the errors are used when fitting a TGraphErrors or TGraphAsymmErrors.; ///; /// The fitting of the TGraph, i.e simple data points without any error associated, is performed using the; /// un-weighted least-square (chi-square) method.; ///; ///; ///\anchor GFitErrors; /// ### TGraphErrors fit:; ///; /// In case of a TGraphErrors or TGraphAsymmErrors object, when `x` errors are present, the error along x,; /// is projected along the y-direction by calculating the function at the points `x-ex_low` and; /// `x+ex_high`, where `ex_low` and `ex_high` are the corresponding lower and upper error in x.; /// The chi-square is th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:2632,error,errors,2632,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,2,"['error', 'robust']","['errors', 'robust']"
Availability,"""pt"", ""ROOT::RVecD{pt*0.9f, pt*1.1f}"", {""down"", ""up""}); .Filter(""pt > pt_cut""); .Define(""x"", someFunc, {""pt""}); .Histo1D<float>(""x"");. // request the generation of varied results from the nominal_hx; ROOT::RDF::Experimental::RResultMap<TH1D> hx = ROOT::RDF::Experimental::VariationsFor(nominal_hx);. // the event loop runs here, upon first access to any of the results or varied results:; hx[""nominal""].Draw(); // same effect as nominal_hx->Draw(); hx[""pt:down""].Draw(""SAME"");; hx[""pt:up""].Draw(""SAME"");; ~~~. A list of variation ""tags"" is passed as the last argument to Vary(). The tags give names to the varied values that are returned; as elements of an RVec of the appropriate C++ type. The number of variation tags must correspond to the number of elements of; this RVec (2 in the example above: the first element will correspond to the tag ""down"", the second; to the tag ""up""). The _full_ variation name will be composed of the varied column name and the variation tags (e.g.; ""pt:down"", ""pt:up"" in this example). Python usage looks similar. Note how we use the ""pt"" column as usual in the Filter() and Define() calls and we simply use ""x"" as the value to fill; the resulting histogram. To produce the varied results, RDataFrame will automatically execute the Filter and Define; calls for each variation and fill the histogram with values and cuts that depend on the variation. There is no limitation to the complexity of a Vary() expression. Just like for the Define() and Filter() calls, users are; not limited to string expressions but they can also pass any valid C++ callable, including lambda functions and; complex functors. The callable can be applied to zero or more existing columns and it will always receive their; _nominal_ value in input. #### Varying multiple columns in lockstep. In the following Python snippet we use the Vary() signature that allows varying multiple columns simultaneously or; ""in lockstep"":. ~~~{.python}; df.Vary([""pt"", ""eta""],; ""RVec<RVecF>{{pt*0.9, pt*1.1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:56884,down,down,56884,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['down'],['down']
Availability,"# A first order correction to estimated parameter errors in an; # (unbinned) ML fit can be obtained by calculating the; # covariance matrix as; #; # V' = V C-1 V; #; # where V is the covariance matrix calculated from a fit; # to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; # matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; # (i.e. the weights are applied squared); #; # A fit in self mode can be performed as follows:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:50,error,errors,50,tutorials/roofit/rf403_weightedevts.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py,1,['error'],['errors']
Availability,# A simple evaluator of boolean expressions.; #; # Grammar:; # expr :: or_expr; # or_expr :: and_expr ('||' and_expr)*; # and_expr :: not_expr ('&&' not_expr)*; # not_expr :: '!' not_expr; # '(' or_expr ')'; # match_expr; # match_expr :: braced_regex; # identifier; # braced_regex match_expr; # identifier match_expr; # identifier :: [-+=._a-zA-Z0-9]+; # braced_regex :: '{{' python_regex '}}'; # Evaluates `string` as a boolean expression.; # Returns True or False. Throws a ValueError on syntax error.; #; # Variables in `variables` are true.; # Regexes that match any variable in `variables` are true.; # 'true' is true.; # All other identifiers are false.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/BooleanExpression.py:497,error,error,497,interpreter/llvm-project/llvm/utils/lit/lit/BooleanExpression.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/BooleanExpression.py,1,['error'],['error']
Availability,# Add the select instructions to the list of instructions and to the available Values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py:69,avail,available,69,interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,1,['avail'],['available']
Availability,"# Adjust the error level in the minimization to work with likelihoods",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py:13,error,error,13,tutorials/roofit/rf615_simulation_based_inference.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py,2,['error'],['error']
Availability,"# After the context, the current directory is restored back to file_2. Also, the; # two files are kept open. This means that objects read, written or modified; # inside the context are still available afterwards.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot006_tcontext_context_manager.py:191,avail,available,191,tutorials/pyroot/pyroot006_tcontext_context_manager.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot006_tcontext_context_manager.py,1,['avail'],['available']
Availability,"# Also reading data from a TFile can be done in a context manager. Information; # stored in the objects of the file can be queried and used inside the context.; # After the context, the objects are not usable anymore because the file is; # automatically closed. This means you should use this pattern as a quick way; # to get information or modify objects from a certain file, without needing to; # keep the histograms alive afterwards.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot005_tfile_context_manager.py:419,alive,alive,419,tutorials/pyroot/pyroot005_tfile_context_manager.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot005_tfile_context_manager.py,1,['alive'],['alive']
Availability,"# Alternative: fit chi^2 integrating f(x) over ranges defined by X errors, rather; # than taking point at center of bin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py:67,error,errors,67,tutorials/roofit/rf609_xychi2fit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py,1,['error'],['errors']
Availability,"# As fall-through we go to the original compute function and use the error-handling from cppyy",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rbdt.py:69,error,error-handling,69,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rbdt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rbdt.py,1,['error'],['error-handling']
Availability,"# Automatically derive the list of man pages from the contents of the command; # guide subdirectory. This was copied from llvm/docs/conf.py.; #basedir = os.path.dirname(__file__); #man_page_authors = u'Maintained by the Cling Team (<http://compiler-research.org>)'; #command_guide_subpath = 'CommandGuide'; #command_guide_path = os.path.join(basedir, command_guide_subpath); #for name in os.listdir(command_guide_path):; # # Ignore non-ReST files and the index page.; # if not name.endswith('.rst') or name in ('index.rst',):; # continue; #; # # Otherwise, automatically extract the description.; # file_subpath = os.path.join(command_guide_subpath, name); # with open(os.path.join(command_guide_path, name)) as f:; # title = f.readline().rstrip('\n'); # header = f.readline().rstrip('\n'); #; # if len(header) != len(title):; # print((; # ""error: invalid header in %r (does not match title)"" % (; # file_subpath,)), file=sys.stderr); # if ' - ' not in title:; # print((; # (""error: invalid title in %r ""; # ""(expected '<name> - <description>')"") % (; # file_subpath,)), file=sys.stderr); #; # # Split the name out of the title.; # name,description = title.split(' - ', 1); # man_pages.append((file_subpath.replace('.rst',''), name,; # description, man_page_authors, 1)); # If true, show URL addresses after external links.; #man_show_urls = False; # -- Options for Texinfo output ------------------------------------------------; # Grouping the document tree into Texinfo files. List of tuples; # (source start file, target name, title, author,; # dir menu entry, description, category)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:841,error,error,841,interpreter/cling/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py,2,['error'],['error']
Availability,# Bail out here if we can't apply checks in this case.; # Does not indicate an error.; # Maybe not straight compilation (e.g. -S or --version or -flto); # or maybe > 1 input files.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py:79,error,error,79,interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,1,['error'],['error']
Availability,"# Blue markers and error bors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf107_plotstyles.py:19,error,error,19,tutorials/roofit/rf107_plotstyles.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf107_plotstyles.py,1,['error'],['error']
Availability,"# Build a gaussian resolution model scaled by the per-error =; # gauss(dt,bias,sigma*dterr)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf306_condpereventerrors.py:54,error,error,54,tutorials/roofit/rf306_condpereventerrors.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf306_condpereventerrors.py,2,['error'],['error']
Availability,"# By returning a valid result with an empty command, the; # caller treats this as a failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/subst.py:84,failure,failure,84,interpreter/llvm-project/llvm/utils/lit/lit/llvm/subst.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/subst.py,1,['failure'],['failure']
Availability,"# Calculate error using sampling method and visualize as dashed red line.; #; # In self method a number of curves is calculated with variations of the parameter values, sampled; # from a multi-variate Gaussian pdf that is constructed from the fit results covariance matrix.; # The error(x) is determined by calculating a central interval that capture N% of the variations; # for each value of x, N% is controlled by Z (i.e. Z=1 gives N=68%). The number of sampling curves; # is chosen to be such that at least 100 curves are expected to be outside the N% interval, is minimally; # 100 (e.g. Z=1.Ncurve=356, Z=2.Ncurve=2156)) Intervals from the sampling method can be asymmetric,; # and may perform better in the presence of strong correlations, may take; # (much) longer to calculate",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:12,error,error,12,tutorials/roofit/rf610_visualerror.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py,2,['error'],['error']
Availability,"# Case 2 - 'Barlow Beeston' light (one parameter per bin for all samples); # Construct the histogram shapes, using the same parameters for signal and background; # This requires passing the first histogram to the second, so that their common parameters; # can be re-used.; # The first ParamHistFunc will create one parameter per bin, such as `p_ph_sig2_gamma_bin_0`.; # This allows bin 0 to fluctuate up and down.; # Then, the SAME parameters are connected to the background histogram, so the bins fluctuate; # synchronously. This reduces the number of parameters.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf709_BarlowBeeston.py:408,down,down,408,tutorials/roofit/rf709_BarlowBeeston.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf709_BarlowBeeston.py,1,['down'],['down']
Availability,# Check failure,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py:8,failure,failure,8,interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,1,['failure'],['failure']
Availability,# Check if any of the xfails match an available feature.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py:38,avail,available,38,interpreter/llvm-project/llvm/utils/lit/lit/Test.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py,1,['avail'],['available']
Availability,# Check if there are failures.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:21,failure,failures,21,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,1,['failure'],['failures']
Availability,# Check that the source path exists (errors here are reported by the; # caller).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py:37,error,errors,37,interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,1,['error'],['errors']
Availability,"# Check the substitution's name.; #; # Do not extend this to permit '.' or any sequence that's special in a; # python pattern. We could escape that automatically for; # DEFINE/REDEFINE directives in test files. However, lit configuration; # file authors would still have to remember to escape them manually in; # substitution names but not in values. Moreover, the manually chosen; # and automatically chosen escape sequences would have to be consistent; # (e.g., '\.' vs. '[.]') in order for REDEFINE to successfully redefine; # a substitution previously defined by a lit configuration file. All; # this seems too error prone and confusing to be worthwhile. If you; # want your name to express structure, use ':' instead of '.'.; #; # Actually, '{' and '}' are special if they contain only digits possibly; # separated by a comma. Requiring a leading letter avoids that.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:615,error,error,615,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['error'],['error']
Availability,# Choose 2 available Values - remove them from inputs list.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py:11,avail,available,11,interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,1,['avail'],['available']
Availability,# Classify error type: when Clang terminated by a signal it's a 'Crash'.; # (python subprocess Popen.returncode is negative when child terminated; # by signal.) Everything else is 'Other Error'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py:11,error,error,11,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,2,"['Error', 'error']","['Error', 'error']"
Availability,"# Collect results and plot.; # --------------------------------; # We print the two fit results, and plot the fitted curves.; # The curve of the fit without recovery cannot be plotted, because the PDF is undefined if a2 < 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:157,recover,recovery,157,tutorials/roofit/rf612_recoverFromInvalidParameters.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py,1,['recover'],['recovery']
Availability,"# Compare fit results of chi2, L fits to (un)weighted data; # ------------------------------------------------------------; # Note that ML fit on 1Kevt of weighted data is closer to result of ML fit on 43Kevt of unweighted data; # than to 1Kevt of unweighted data, the reference chi^2 fit with SumW2 error gives a result closer to; # that of an unbinned ML fit to 1Kevt of unweighted data.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:300,error,error,300,tutorials/roofit/rf403_weightedevts.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py,1,['error'],['error']
Availability,# Compile step failure,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py:15,failure,failure,15,interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,1,['failure'],['failure']
Availability,"# Construct empirical pdf for per-event error; # -----------------------------------------------------------------; # Use landau pdf to get empirical distribution with long tail",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf307_fullpereventerrors.py:40,error,error,40,tutorials/roofit/rf307_fullpereventerrors.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf307_fullpereventerrors.py,1,['error'],['error']
Availability,"# Construct fake 'external' data with per-event error; # ------------------------------------------------------------------------------------------------------; # Use landau pdf to get somewhat realistic distribution with long tail",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf306_condpereventerrors.py:48,error,error,48,tutorials/roofit/rf306_condpereventerrors.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf306_condpereventerrors.py,1,['error'],['error']
Availability,"# Create a composite pythonizor.; #; # A composite is a type of pythonizor, i.e. it is a callable that expects two; # parameters: a class proxy and a string with the name of that class.; # A composite is created with the following parameters:; # - A string to match the class/es to be pythonized; # - A string to match the method/s to be pythonized in the class/es; # - A callable that will post-process the return value of the matched method/s; #; # Here we create a composite that will match TGraph, TGraph2D and their error; # subclasses, and will pythonize their getter methods of the X,Y,Z coordinate; # and error arrays, which in C++ return a pointer to a double.; # The pythonization consists in setting the size of the array that the getter; # method returns, so that it is known in Python and the array is fully usable; # (its length can be obtained, it is iterable).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tgraph.py:521,error,error,521,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tgraph.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tgraph.py,2,['error'],['error']
Availability,"# Create dataset with X and Y values; # -------------------------------------------------------------------; # Make weighted XY dataset with asymmetric errors stored; # The StoreError() argument is essential as it makes; # the dataset store the error in addition to the values; # of the observables. If errors on one or more observables; # are asymmetric, can store the asymmetric error; # using the StoreAsymError() argument",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py:152,error,errors,152,tutorials/roofit/rf609_xychi2fit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py,4,['error'],"['error', 'errors']"
Availability,"# Create file.root to avoid errors in the RDF constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/string_view.py:28,error,errors,28,bindings/pyroot/pythonizations/test/string_view.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/string_view.py,1,['error'],['errors']
Availability,"# Create manager; # ---------------------------; # Instantiate ROOT.RooMCStudy manager on model with x as observable and given choice of fit options; #; # The Silence() option kills all messages below the PROGRESS level, only a single message; # per sample executed, any error message that occur during fitting; #; # The Extended() option has two effects:; # 1) The extended ML term is included in the likelihood and; # 2) A poisson fluctuation is introduced on the number of generated events; #; # The FitOptions() given here are passed to the fitting stage of each toy experiment.; # If Save() is specified, fit result of each experiment is saved by the manager; #; # A Binned() option is added in self example to bin the data between generation and fitting; # to speed up the study at the expemse of some precision",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py:271,error,error,271,tutorials/roofit/rf801_mcstudy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py,1,['error'],['error']
Availability,"# Create the plot; # Set styles - not yet available for v7; # ROOT.gROOT.SetStyle(""ATLAS""); # Create canvas with pads for main plot and data/MC ratio",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py:42,avail,available,42,tutorials/rcanvas/df104.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py,1,['avail'],['available']
Availability,# Curses isn't available on all platforms,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py:15,avail,available,15,interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,1,['avail'],['available']
Availability,"# Data plotting styles; # ---------------------------------------; # Use sqrt(sum(weights^2)) error instead of Poisson errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf107_plotstyles.py:94,error,error,94,tutorials/roofit/rf107_plotstyles.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf107_plotstyles.py,2,['error'],"['error', 'errors']"
Availability,"# Define efficiency function; # ---------------------------------------------------; # Use error function to simulate turn-on slope",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf703_effpdfprod.py:91,error,error,91,tutorials/roofit/rf703_effpdfprod.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf703_effpdfprod.py,1,['error'],['error']
Availability,"# Do fit to data, obtain error estimates on parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf407_latextables.py:25,error,error,25,tutorials/roofit/rf407_latextables.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf407_latextables.py,1,['error'],['error']
Availability,"# Downcast: TObject -> TObjString",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tclass_dynamiccast.py:2,Down,Downcast,2,bindings/pyroot/pythonizations/test/tclass_dynamiccast.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tclass_dynamiccast.py,1,['Down'],['Downcast']
Availability,"# Draw raw data with errorbars; # Add legend",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:21,error,errorbars,21,tutorials/dataframe/df106_HiggsToFourLeptons.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py,1,['error'],['errorbars']
Availability,"# Echo the debugging diagnostic to stderr.; #; # For that echo command, use 'set' commands to suppress the; # shell's execution trace, which would just add noise. Suppress; # the shell's execution trace for the 'set' commands by; # redirecting their stderr to /dev/null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:2,Echo,Echo,2,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,2,"['Echo', 'echo']","['Echo', 'echo']"
Availability,"# Else raises a Syntax error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py:23,error,error,23,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py,1,['error'],['error']
Availability,# Emit failure handler for each runtime check with proper error message,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py:7,failure,failure,7,interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,2,"['error', 'failure']","['error', 'failure']"
Availability,"# Empty error means, ignore errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:8,error,error,8,.github/workflows/root-ci-config/build_root.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py,2,['error'],"['error', 'errors']"
Availability,"# Encode reference value for parameters in workspace; # ---------------------------------------------------------------------------------------------------; # Define a parameter 'snapshot' in the p.d.f.; # Unlike a named set, parameter snapshot stores an independent set of values for; # a given set of variables in the workspace. The values can be stored and reloaded; # into the workspace variable objects using the loadSnapshot() and saveSnapshot(); # methods. A snapshot saves the value of each variable, errors that are stored; # with it as well as the 'Constant' flag that is used in fits to determine if a; # parameter is kept fixed or not.; # Do a dummy fit to a (supposedly) reference dataset here and store the results; # of that fit into a snapshot",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py:509,error,errors,509,tutorials/roofit/rf510_wsnamedsets.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py,1,['error'],['errors']
Availability,"# Error out",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:2,Error,Error,2,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,1,['Error'],['Error']
Availability,# Evaluate boolean expression `expr`.; # Fail if it does not throw a ValueError containing the text `error`.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/BooleanExpression.py:101,error,error,101,interpreter/llvm-project/llvm/utils/lit/lit/BooleanExpression.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/BooleanExpression.py,1,['error'],['error']
Availability,"# Evaluate the systematic uncertainty; # The systematic uncertainty in this analysis is the MC scale factor uncertainty that depends on lepton; # kinematics such as pT or pseudorapidity.; # Muons uncertainties are negligible, as stated in https://atlas.web.cern.ch/Atlas/GROUPS/PHYSICS/PAPERS/MUON-2018-03/.; # Electrons uncertainties are evaluated based on the plots available in https://doi.org/10.48550/arXiv.1908.00005.; # The uncertainties are linearly interpolated, using the `TGraph::Eval()` method, to cover a range of pT values covered by the analysis.; # Create a VaryHelper to interpolate the available data.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:368,avail,available,368,tutorials/dataframe/df106_HiggsToFourLeptons.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py,2,['avail'],['available']
Availability,"# Explore results of study; # ------------------------------------------------; # Make plots of the distributions of mean, error on mean and the pull of; # mean",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py:123,error,error,123,tutorials/roofit/rf801_mcstudy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py,1,['error'],['error']
Availability,"# Extract symbols from libraries in parallel. This is a huge time saver when; # doing a debug build, as there are hundreds of thousands of symbols in each; # library.; # FIXME: On AIX, the default pool size can be too big for a logical; # partition's allocated memory, and can lead to an out of memory; # IO error. We are setting the pool size to 8 to avoid such; # errors at the moment, and will look for a graceful solution later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/extract_symbols.py:308,error,error,308,interpreter/llvm-project/llvm/utils/extract_symbols.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/extract_symbols.py,2,['error'],"['error', 'errors']"
Availability,"# FYI, if you crashed here with a decode error, your run line probably; # results in bitcode or other binary format being written to the pipe.; # For an opt test, you probably want to add -S or -disable-output.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py:41,error,error,41,interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,1,['error'],['error']
Availability,# Failures,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py:2,Failure,Failures,2,interpreter/llvm-project/llvm/utils/lit/lit/Test.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py,1,['Failure'],['Failures']
Availability,"# Fit again, but pass recovery information to the minimiser:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:22,recover,recovery,22,tutorials/roofit/rf612_recoverFromInvalidParameters.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py,1,['recover'],['recovery']
Availability,"# Fit chi^2 using X and Y errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py:26,error,errors,26,tutorials/roofit/rf609_xychi2fit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py,1,['error'],['errors']
Availability,"# Fit model to data; # ---------------------------------; # The ARGUS background shape has a sharp kinematic cutoff at m=m0; # and is prone to evaluation errors if the cutoff parameter m0; # is floated: when the pdf cutoff value is lower than that in data; # events with m>m0 will have zero probability; # Perform unbinned ML fit. Print detailed error messages for up to; # 10 events per likelihood evaluation. The default error handling strategy; # is to return a very high value of the likelihood to MINUIT if errors occur,; # which will force MINUIT to retreat from the problematic area",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:154,error,errors,154,tutorials/roofit/rf606_nllerrorhandling.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py,4,['error'],"['error', 'errors']"
Availability,"# Fit quadratic polynomial to weighted data; # NOTE: A plain Maximum likelihood fit to weighted data does in general; # NOT result in correct error estimates, individual; # event weights represent Poisson statistics themselves.; #; # Fit with 'wrong' errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:142,error,error,142,tutorials/roofit/rf403_weightedevts.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py,2,['error'],"['error', 'errors']"
Availability,"# For references to keep alive the NumPy arrays that are read by; # MakeNumpyDataFrame.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py:25,alive,alive,25,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py,1,['alive'],['alive']
Availability,"# Generate BMixing data with above set of event errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py:48,error,errors,48,tutorials/roofit/rf310_sliceplot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py,1,['error'],['errors']
Availability,"# Generate mask for select IR instruction, with SEL_UNDEF_POS possibility; # of one undef index.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py:11,mask,mask,11,interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,1,['mask'],['mask']
Availability,"# Generate mask for shufflevector IR instruction, with SHUF_UNDEF_POS possibility; # of one undef index.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py:11,mask,mask,11,interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,1,['mask'],['mask']
Availability,# Generate some string constants that we can use to report errors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_fuzz.py:59,error,errors,59,interpreter/llvm-project/llvm/utils/shuffle_fuzz.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_fuzz.py,1,['error'],['errors']
Availability,"# Get a mask that filters out all entries that are outside the variable definition range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:8,mask,mask,8,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,1,['mask'],['mask']
Availability,"# Get return value for loading the shared library.; # On succesful load the value will be 0.; # If the library does not exist or there was an error; # while loading, the value will be -1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py:142,error,error,142,bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py,1,['error'],['error']
Availability,"# Handle in-process builtins.; #; # Handle ""echo"" as a builtin if it is not part of a pipeline. This; # greatly speeds up tests that construct input files by repeatedly; # echo-appending to a file.; # FIXME: Standardize on the builtin echo implementation. We can use a; # temporary file to sidestep blocking pipe write issues.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:44,echo,echo,44,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,3,['echo'],"['echo', 'echo-appending']"
Availability,"# How we keep the NumPy arrays around as long as the RDataSource is alive:; #; # 1. Cache a container with references to the NumPy arrays in a global; # dictionary. Note that we use a copy of the original dict as the; # container, because otherwise the caller of _MakeNumpyDataFrame can; # invalidate our cache by mutating the np_dict after the call.; #; # 2. Together with the array data, store a deleter function to delete the; # cache element in the cache itself.; #; # 3. The C++ side gets a reference to the deleter function via; # std::function. Note that the C++ side can only get a non-owning; # reference to the Python function, which is the reason why we have to; # keep the deleter alive in the cache itself.; #; # 4. The RDataSource calls the deleter in its destructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py:68,alive,alive,68,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py,2,['alive'],['alive']
Availability,"# If all entries are in the range, we don't need a mask",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:51,mask,mask,51,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,1,['mask'],['mask']
Availability,"# If the description of an issue/pull request is empty, the Github API; # library returns None instead of an empty string. Handle this here to; # avoid failures from trying to manipulate None.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/github-automation.py:152,failure,failures,152,interpreter/llvm-project/llvm/utils/git/github-automation.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/github-automation.py,1,['failure'],['failures']
Availability,"# If the shuffle instruction is not followed by select, add it to the available Values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py:70,avail,available,70,interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,1,['avail'],['available']
Availability,"# If the we don't already have the cached source, run the project's; # download script to download it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:71,down,download,71,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,2,['down'],['download']
Availability,"# If there were any errors during test discovery, exit now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py:20,error,errors,20,interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,1,['error'],['errors']
Availability,"# If we cannot find llvm-tblgen, propogate the error to the notebook.; # (in case the user is not able to see the output from the Jupyter server)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py:47,error,error,47,interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py,1,['error'],['error']
Availability,"# If we don't have a test format or if we are running standalone tests,; # always ""find"" the test itself. Otherwise, we might find no tests at; # all, which is considered an error but isn't an error with standalone; # tests.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py:174,error,error,174,interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,2,['error'],['error']
Availability,"# If we have multiple block_texts, try to break them down further to avoid; # the case where we have very similar block_texts repeated after each; # other.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_mca_test_checks.py:53,down,down,53,interpreter/llvm-project/llvm/utils/update_mca_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_mca_test_checks.py,1,['down'],['down']
Availability,# Ignore errors (only called on exit).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py:9,error,errors,9,interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,1,['error'],['errors']
Availability,# Ignore parse errors,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py:15,error,errors,15,interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,1,['error'],['errors']
Availability,# Ignore socket errors,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py:16,error,errors,16,interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,1,['error'],['errors']
Availability,"# Implement echo flags. We only support -e and -n, and not yet in; # combination. We have to ignore unknown flags, because `echo ""-D FOO""`; # prints the dash.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:12,echo,echo,12,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,2,['echo'],['echo']
Availability,"# In some cases the Dask scheduler doesn't know about available workers; # at creation time. Most notably, when using batch systems like HTCondor; # through dask-jobqueue, creating the cluster object doesn't actually; # start the workers. The scheduler will know about available workers in; # the cluster only after cluster.scale has been called and the resource; # manager has granted the requested jobs. So at this point, we can only; # rely on the information that was passed by the user as a specification; # of the cluster object. This comes in the form:; # {'WORKER-NAME-1': {'cls': <class 'dask.WORKERCLASS'>,; # 'options': {'CORES_OR_NTHREADS': N, ...}},; # 'WORKER-NAME-2': {'cls': <class 'dask.WORKERCLASS'>,; # 'options': {'CORES_OR_NTHREADS': N, ...}}}; # This concept can vary between different types of clusters, but in the; # cluster types defined in dask-jobqueue the keys of the dictionary above; # refer to the name of a job submission, which can then involve multiple; # cores of a node.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:54,avail,available,54,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,2,['avail'],['available']
Availability,"# Inject Experimental.Distributed package into namespace RDF if available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:64,avail,available,64,bindings/pyroot/pythonizations/python/ROOT/_facade.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py,1,['avail'],['available']
Availability,"# Instruct model to precalculate normalization integral that integrate at least; # two dimensions numerically. In self specific case the integral value for; # all values of parameter 'a' are stored in a histogram and available for use; # in subsequent fitting and plotting operations (interpolation is; # applied); # w.pdf(""model"").setNormValueCaching(3)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:217,avail,available,217,tutorials/roofit/rf903_numintcache.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py,1,['avail'],['available']
Availability,"# Interactive minimization, error analysis; # -------------------------------------------------------------------------------; # Create MINUIT interface object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py:28,error,error,28,tutorials/roofit/rf601_intminuit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py,1,['error'],['error']
Availability,"# It is important to have a double-ended queue because we need to; # traverse the nodes in different ways w.r.t. their insertion order.; # While pruning the graph, we need to check leaf nodes before their; # parents, so if a child is pruned then it also decrements the counter; # of children of its parent. Thus, we need a bottom-up traversal.; # While executing the graph in a task, we need to create the RDF nodes; # in the order the user requested them, e.g. starting from the; # RDataFrame itself, then calling its direct children, their children; # and so on. Thus, we need a top-down traversal.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:585,down,down,585,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py,1,['down'],['down']
Availability,# Look for specific error messages,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/creduce-clang-crash.py:20,error,error,20,interpreter/llvm-project/clang/utils/creduce-clang-crash.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/creduce-clang-crash.py,1,['error'],['error']
Availability,"# Make ROOT.RooMCStudy object available on command line after; # macro finishes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py:30,avail,available,30,tutorials/roofit/rf801_mcstudy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py,2,['avail'],['available']
Availability,"# Make RooMCStudy object available on command line after; # macro finishes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf802_mcstudy_addons.py:25,avail,available,25,tutorials/roofit/rf802_mcstudy_addons.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf802_mcstudy_addons.py,1,['avail'],['available']
Availability,"# Make graphic output file with one of the GraphViz tools; # (freely available from www.graphviz.org); #; # 'Top-to-bottom graph'; # unix> dot -Tgif -o rf207_model_dot.gif rf207_model.dot; #; # 'Spring-model graph'; # unix> fdp -Tgif -o rf207_model_fdp.gif rf207_model.dot",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf206_treevistools.py:69,avail,available,69,tutorials/roofit/rf206_treevistools.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf206_treevistools.py,1,['avail'],['available']
Availability,"# Make sure we don't do any redundant pythonization, e.g. if we; # use a version of cppyy that caches both in the namespace and; # in the _instantiations attribute.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:28,redundant,redundant,28,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,1,['redundant'],['redundant']
Availability,"# Make sure we only consider errors, warnings, and extensions.; # FIXME: Make this configurable?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/clangdiag.py:29,error,errors,29,interpreter/llvm-project/clang/utils/clangdiag.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/clangdiag.py,2,['error'],['errors']
Availability,"# Make workspace available on command line after macro finishes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:17,avail,available,17,tutorials/roofit/rf903_numintcache.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py,1,['avail'],['available']
Availability,"# Many people pythonized the RooWorkspace themselves, by adding a new; # attribute `_import` that calls getattr(self, ""import"") under the; # hood. However, `_import` is now the reference to the original cppyy; # overload, and resetting it with a wrapper around `import` would cause; # infinite recursions! We prevent resetting any import-related function; # here, which results in a clearer error to the user than an infinite; # call stack involving the internal pythonization code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py:391,error,error,391,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py,1,['error'],['error']
Availability,"# Many uses of this tool will not need an opt binary, because it's only; # needed for updating a test that runs clang | opt | FileCheck. So we; # defer this error message until we find that opt is actually needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_cc_test_checks.py:157,error,error,157,interpreter/llvm-project/llvm/utils/update_cc_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_cc_test_checks.py,1,['error'],['error']
Availability,"# NB: It is also possible to fit a ROOT.RooAbsReal function to a ROOT.RooDataHist; # using chi2FitTo().; # Note that entries with zero bins are _not_ allowed; # for a proper chi^2 calculation and will give error; # messages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf602_chi2fit.py:206,error,error,206,tutorials/roofit/rf602_chi2fit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf602_chi2fit.py,1,['error'],['error']
Availability,# Names of the project specific scripts.; # The script that downloads the project.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:60,down,downloads,60,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,1,['down'],['downloads']
Availability,# Note: this throws a gdb.error if the info type is not used (by means of a; # call to getPointer() or similar) in the current translation unit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/gdb-scripts/prettyprinters.py:26,error,error,26,interpreter/llvm-project/llvm/utils/gdb-scripts/prettyprinters.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/gdb-scripts/prettyprinters.py,1,['error'],['error']
Availability,"# On Windows with more than 60 processes, multiprocessing's call to; # _winapi.WaitForMultipleObjects() prints an error and lit hangs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/util.py:114,error,error,114,interpreter/llvm-project/llvm/utils/lit/lit/util.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/util.py,1,['error'],['error']
Availability,# Only if we are processing all the variables output the total; # availability.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/llvm-locstats/llvm-locstats.py:66,avail,availability,66,interpreter/llvm-project/llvm/utils/llvm-locstats/llvm-locstats.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/llvm-locstats/llvm-locstats.py,1,['avail'],['availability']
Availability,"# Options supported for 1D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | "" "" | Default. |; | ""AH"" | Draw histogram without axis. ""A"" can be combined with any drawing option. For instance, ""AC"" draws the histogram as a smooth Curve without axis.|; | ""]["" | When this option is selected the first and last vertical lines of the histogram are not drawn.|; | ""B"" | Bar chart option.|; | ""BAR"" | Like option ""B"", but bars can be drawn with a 3D effect.|; | ""HBAR"" | Like option ""BAR"", but bars are drawn horizontally.|; | ""C"" | Draw a smooth Curve through the histogram bins.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E1"" | Draw error bars with perpendicular lines at the edges.|; | ""E2"" | Draw error bars with rectangles.|; | ""E3"" | Draw a fill area through the end points of the vertical error bars.|; | ""E4"" | Draw a smoothed filled area through the end points of the error bars.|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|; | ""L"" | Draw a line through the bin contents.|; | ""P"" | Draw current marker at each bin except empty bins.|; | ""P*"" | Draw a star marker at each bin except empty bins.|; | ""P0"" | Draw current marker at each bin including empty bins.|; | ""PIE"" | Draw histogram as a Pie Chart.|; | ""*H"" | Draw histogram with a * at each bin.|; | ""LF2"" | Draw histogram like with option ""L"" but with a fill area. Note that ""L"" draws also a fill area if the hist fill color is set but the fill area corresponds to the histogram contour.|. \anchor HP01c; #### Options supported for 2D histograms. | Option | Description |; |--------------|------------------------------------------------------------------|; | "" "" | Default (color plot).|; | ""ARR""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:8912,error,error,8912,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['error']
Availability,"# Otherwise, SetBranchAddress is expecting a pointer to the address of; # the object, and the pointer needs to stay alive. Therefore, we create; # a container for the pointer and cache it in the original cppyy proxy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py:116,alive,alive,116,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,1,['alive'],['alive']
Availability,"# Owning RooArgSets; # ---------------------------------; # You can create a RooArgSet that owns copies of the objects instead of; # referencing the originals. A set either owns all of its components or none,; # so once addClone() is used, add() can no longer be used and will result in an; # error message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py:293,error,error,293,tutorials/roofit/rf508_listsetmanip.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py,1,['error'],['error']
Availability,"# Perform another fit. In self configuration only the number of errors per; # likelihood evaluation is shown, it is greater than zero. The; # EvalErrorWall(kFALSE) arguments disables the default error handling strategy; # and will cause the actual (problematic) value of the likelihood to be passed; # to MINUIT.; #; # NB: Use of self option is NOT recommended as default strategt as broken -log(L) values; # can often be lower than 'good' ones because offending events are removed.; # ROOT.This may effectively create a False minimum in problem areas. ROOT.This is clearly; # illustrated in the second plot",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:64,error,errors,64,tutorials/roofit/rf606_nllerrorhandling.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py,2,['error'],"['error', 'errors']"
Availability,"# Perform chi2 fit to binned weighted dataset using sum-of-weights errors; #; # NB: Within the usual approximations of a chi2 fit, chi2 fit to weighted; # data using sum-of-weights-squared errors does give correct error; # estimates",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:67,error,errors,67,tutorials/roofit/rf403_weightedevts.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py,3,['error'],"['error', 'errors']"
Availability,"# Perform the same type of error visualization on the background component only.; # The VisualizeError() option can generally applied to _any_ kind of; # plot (components, asymmetries, etc..)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:27,error,error,27,tutorials/roofit/rf610_visualerror.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py,1,['error'],['error']
Availability,"# Please note that error bars shown (Poisson or SumW2) are for visualization only, the are NOT used; # in a maximum likelihood fit; #; # A (binned) ML fit will ALWAYS assume the Poisson error interpretation of data (the mathematical definition; # of likelihood does not take any external definition of errors). Data with non-unit weights can only be correctly; # fitted with a chi^2 fit (see rf602_chi2fit.py); #; # Importing ROOT TTrees; # -----------------------------------------------------------; # Import ROOT TTree into a RooDataSet",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py:19,error,error,19,tutorials/roofit/rf102_dataimport.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py,3,['error'],"['error', 'errors']"
Availability,"# Plot and fit a RooDataHist with internal errors; # ---------------------------------------------------------------------------------------------; # If histogram has custom error (i.e. its contents is does not originate from a Poisson process; # but e.g. is a sum of weighted events) you can data with symmetric 'sum-of-weights' error instead; # (same error bars as shown by ROOT)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py:43,error,errors,43,tutorials/roofit/rf102_dataimport.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py,4,['error'],"['error', 'errors']"
Availability,"# Plot and fit a RooDataHist; # ---------------------------------------------------; # Make plot of binned dataset showing Poisson error bars (RooFit default)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py:131,error,error,131,tutorials/roofit/rf102_dataimport.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py,1,['error'],['error']
Availability,"# Plot data again to show it on top of error bands:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf709_BarlowBeeston.py:39,error,error,39,tutorials/roofit/rf709_BarlowBeeston.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf709_BarlowBeeston.py,1,['error'],['error']
Availability,"# Plot data again to show it on top of model0 error bands:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf709_BarlowBeeston.py:46,error,error,46,tutorials/roofit/rf709_BarlowBeeston.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf709_BarlowBeeston.py,2,['error'],['error']
Availability,"# Plot data using sum-of-weights-squared error rather than Poisson errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:41,error,error,41,tutorials/roofit/rf403_weightedevts.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py,2,['error'],"['error', 'errors']"
Availability,"# Plot likelihood in m0 in range that includes problematic values; # In self configuration no messages are printed for likelihood evaluation errors,; # but if an likelihood value evaluates with error, corresponding value; # on the curve will be set to the value given in EvalErrorValue().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:141,error,errors,141,tutorials/roofit/rf606_nllerrorhandling.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py,2,['error'],"['error', 'errors']"
Availability,"# Plotting a PDF with disallowed parameters doesn't work. We would get a lot of error messages.; # Therefore, we disable plotting messages in RooFit's message streams:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:80,error,error,80,tutorials/roofit/rf612_recoverFromInvalidParameters.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py,1,['error'],['error']
Availability,# Possibility of one undef index in generated mask for select instruction,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py:46,mask,mask,46,interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,1,['mask'],['mask']
Availability,# Possibility of one undef index in generated mask for shufflevector instruction,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py:46,mask,mask,46,interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,1,['mask'],['mask']
Availability,# Prepare the runtime checks and failure handlers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py:33,failure,failure,33,interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,1,['failure'],['failure']
Availability,"# Prevent this new Python proxy from owning the C++ object; # Otherwise we get an 'already deleted' error in; # TList::Clear when the application ends",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py:100,error,error,100,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py,1,['error'],['error']
Availability,# Print the error message templates as global strings,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py:12,error,error,12,interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,1,['error'],['error']
Availability,"# Print value (and error) of sigma_g2 parameter, reflects; # value and error back propagated from MINUIT",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py:19,error,error,19,tutorials/roofit/rf601_intminuit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py,4,['error'],['error']
Availability,"# Print values of all parameters, reflect values (and error estimates); # that are back propagated from MINUIT",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py:54,error,error,54,tutorials/roofit/rf601_intminuit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py,1,['error'],['error']
Availability,"# Print values of mean and sigma (that now reflect fitted values and; # errors)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf101_basics.py:72,error,errors,72,tutorials/roofit/rf101_basics.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf101_basics.py,1,['error'],['errors']
Availability,"# Project 3D parameter pdf down to 3 permutations of two-dimensional pdfs; # The integrations corresponding to these projections are performed analytically; # by the MV Gaussian pdf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf608_fitresultaspdf.py:27,down,down,27,tutorials/roofit/rf608_fitresultaspdf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf608_fitresultaspdf.py,1,['down'],['down']
Availability,"# Propagate partial error due to yield parameter using linear and sampling; # method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:20,error,error,20,tutorials/roofit/rf610_visualerror.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py,2,['error'],['error']
Availability,"# Propagate the error so that the class lookup that triggered this; # pythonization fails too and the application stops",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:16,error,error,16,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,1,['error'],['error']
Availability,# Python 2 can raise UnicodeDecodeError here too in cases; # where the stdout encoding is ASCII. Ignore decode errors; # in this case.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/display.py:111,error,errors,111,interpreter/llvm-project/llvm/utils/lit/lit/display.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/display.py,1,['error'],['errors']
Availability,"# Python's strerror may not supply the same message; # as C++ std::error_code. One example of such a platform is; # Visual Studio. errc_messages may be supplied which contains the error; # messages for ENOENT, EISDIR, EINVAL and EACCES as a semi colon; # separated string. LLVM testsuites can use get_errc_messages in cmake; # to automatically get the messages and pass them into lit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py:180,error,error,180,interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,1,['error'],['error']
Availability,# Recover namedtuple from json when coming from analyze-cc or analyze-c++,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py:2,Recover,Recover,2,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,1,['Recover'],['Recover']
Availability,"# Regular dunder method must not throw an error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_node.py:42,error,error,42,bindings/experimental/distrdf/test/test_node.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_node.py,1,['error'],['error']
Availability,"# Remove horizontal error bars",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf107_plotstyles.py:20,error,error,20,tutorials/roofit/rf107_plotstyles.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf107_plotstyles.py,1,['error'],['error']
Availability,"# Reopen stdout in binary mode to avoid CRLF translation. The versions; # of echo we are replacing on Windows all emit plain LF, and the LLVM; # tests now depend on this.; # When we open as binary, however, this also means that we have to write; # 'bytes' objects to stdout instead of 'str' objects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:77,echo,echo,77,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['echo'],['echo']
Availability,"# Return a batch when available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:22,avail,available,22,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,1,['avail'],['available']
Availability,"# Returns the high weight errors as numpy arrays.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py:26,error,errors,26,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py,1,['error'],['errors']
Availability,"# Returns the low and high weight errors as numpy arrays.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py:34,error,errors,34,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py,1,['error'],['errors']
Availability,"# Returns the low weight errors as numpy arrays.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py:25,error,errors,25,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py,1,['error'],['errors']
Availability,"# RooFit before ROOT 6.24; # --------------------------------; # Before 6.24, RooFit wasn't able to recover from invalid parameters. The minimiser just errs around; # the starting values of the parameters without finding any improvement.; # Set up the parameters such that the PDF would come out negative. The PDF is now undefined.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:100,recover,recover,100,tutorials/roofit/rf612_recoverFromInvalidParameters.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py,1,['recover'],['recover']
Availability,"# Run HESSE to calculate errors from d2L/dp2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py:25,error,errors,25,tutorials/roofit/rf601_intminuit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py,1,['error'],['errors']
Availability,"# Run the event loop and merge histograms of the respective processes; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py:205,avail,available,205,tutorials/dataframe/df105_WBosonAnalysis.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py,9,['avail'],['available']
Availability,"# Run the event loop; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py:156,avail,available,156,tutorials/dataframe/df104_HiggsToTwoPhotons.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py,6,['avail'],['available']
Availability,"# RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py:134,avail,available,134,tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,3,['avail'],['available']
Availability,"# Sample a 3-D histogram of the pdf to be visualized as an error; # ellipsoid using the GLISO draw option",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf608_fitresultaspdf.py:59,error,error,59,tutorials/roofit/rf608_fitresultaspdf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf608_fitresultaspdf.py,1,['error'],['error']
Availability,"# Scale down the datasets if requested",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py:8,down,down,8,tutorials/dataframe/df105_WBosonAnalysis.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py,3,['down'],['down']
Availability,"# Select events with exactly four good leptons conserving charge and lepton numbers; # Note that all collections are RVecs and good_lep is the mask for the good leptons.; # The lepton types are PDG numbers and set to 11 or 13 for an electron or muon; # irrespective of the charge.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:143,mask,mask,143,tutorials/dataframe/df106_HiggsToFourLeptons.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py,1,['mask'],['mask']
Availability,"# Set Y value and error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py:18,error,error,18,tutorials/roofit/rf609_xychi2fit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py,1,['error'],['error']
Availability,# Set the default available features based on the LitConfig.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py:18,avail,available,18,interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,1,['avail'],['available']
Availability,"# Set tolerance and other minimizer parameters, one can also use default; # values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/NumericalMinimization.py:6,toler,tolerance,6,tutorials/fit/NumericalMinimization.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/NumericalMinimization.py,1,['toler'],['tolerance']
Availability,"# Set up plot for markers and errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/ratioplot.py:30,error,errors,30,tutorials/pyroot/ratioplot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/ratioplot.py,1,['error'],['errors']
Availability,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:599,avail,available,599,tutorials/dataframe/distrdf001_spark_connection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py,2,['avail'],"['availability', 'available']"
Availability,# Show the error conditions:,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:11,error,error,11,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['error'],['error']
Availability,"# Show the test failure output, if requested.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/display.py:16,failure,failure,16,interpreter/llvm-project/llvm/utils/lit/lit/display.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/display.py,1,['failure'],['failure']
Availability,# Silence errors if requested.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/pre-push.py:10,error,errors,10,interpreter/llvm-project/llvm/utils/git/pre-push.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/pre-push.py,1,['error'],['errors']
Availability,"# Since the data are weighted, we use SumW2 to compute the errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:59,error,errors,59,tutorials/roostats/rs301_splot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py,1,['error'],['errors']
Availability,# Some non used exit code for internal errors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py:39,error,errors,39,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py,1,['error'],['errors']
Availability,# Some tests have un-redirected echo commands to help debug test failures.; # Buffer our output and return it to the caller.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:32,echo,echo,32,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,2,"['echo', 'failure']","['echo', 'failures']"
Availability,"# Somehow redundant, but good to test with real syntax",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/titer_iterator.py:10,redundant,redundant,10,bindings/pyroot/pythonizations/test/titer_iterator.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/titer_iterator.py,1,['redundant'],['redundant']
Availability,"# Step #0; # Confirm that the given input, passes and options result in failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline.py:72,failure,failure,72,interpreter/llvm-project/llvm/utils/reduce_pipeline.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline.py,1,['failure'],['failure']
Availability,"# Step #1; # Try to narrow down the failing pass sequence by splitting the pipeline in two; # opt invocations (A and B) starting with invocation A only running the first; # pipeline pass and invocation B the remaining. Keep moving the split point; # forward as long as invocation A exits normally and invocation B fails with; # the expected error. This will accomplish two things first the input IR will be; # further reduced and second, with that IR, the reduced pipeline for invocation; # B will be sufficient to reproduce.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline.py:27,down,down,27,interpreter/llvm-project/llvm/utils/reduce_pipeline.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline.py,2,"['down', 'error']","['down', 'error']"
Availability,# Step #2; # Try removing passes from the end of the remaining pipeline while still; # reproducing the error.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline.py:103,error,error,103,interpreter/llvm-project/llvm/utils/reduce_pipeline.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline.py,1,['error'],['error']
Availability,# Summary file - contains the summary of the failures. Ex: This info can be be; # displayed when buildbot detects a build failure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:45,failure,failures,45,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,2,['failure'],"['failure', 'failures']"
Availability,# Syntax error in an XFAIL line.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py:9,error,error,9,interpreter/llvm-project/llvm/utils/lit/lit/Test.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py,1,['error'],['error']
Availability,# TODO: Handle errors that are coming from llvm-dwarfdump.; # Get the JSON and parse it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/llvm-locstats/llvm-locstats.py:15,error,errors,15,interpreter/llvm-project/llvm/utils/llvm-locstats/llvm-locstats.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/llvm-locstats/llvm-locstats.py,1,['error'],['errors']
Availability,"# TODO: The BayesianCalculator and MCMCCalculator have to be destructed first.; # Otherwise, we can get segmentation faults depending on the destruction order,; # which is random in Python. Probably the issue is that some object has a; # non-owning pointer to another object, which it uses in its destructor. This; # should be fixed either in the design of RooStats in C++, or with; # phythonizations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/IntervalExamples.py:117,fault,faults,117,tutorials/roostats/IntervalExamples.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/IntervalExamples.py,1,['fault'],['faults']
Availability,"# TODO: The BayesianCalculator has to be destructed first. Otherwise, we can get; # segmentation faults depending on the destruction order, which is random in; # Python. Probably the issue is that some object has a non-owning pointer to; # another object, which it uses in its destructor. This should be fixed either; # in the design of RooStats in C++, or with phythonizations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs701_BayesianCalculator.py:97,fault,faults,97,tutorials/roostats/rs701_BayesianCalculator.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs701_BayesianCalculator.py,1,['fault'],['faults']
Availability,"# TODO: The MCMCCalculator has to be destructed first. Otherwise, we can get; # segmentation faults depending on the destruction order, which is random in; # Python. Probably the issue is that some object has a non-owning pointer to; # another object, which it uses in its destructor. This should be fixed either; # in the design of RooStats in C++, or with phythonizations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/MultivariateGaussianTest.py:93,fault,faults,93,tutorials/roostats/MultivariateGaussianTest.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/MultivariateGaussianTest.py,1,['fault'],['faults']
Availability,"# TODO: The calculators have to be destructed first. Otherwise, we can get; # segmentation faults depending on the destruction order, which is random in; # Python. Probably the issue is that some object has a non-owning pointer to; # another object, which it uses in its destructor. This should be fixed either; # in the design of RooStats in C++, or with phythonizations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:91,fault,faults,91,tutorials/roostats/FourBinInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py,1,['fault'],['faults']
Availability,"# TODO: This shouldn't be triggered if entries == 1. The current minimum; # amount of partitions is 2. We need a robust reducer that smartly; # becomes no-op if npartitions == 1 to avoid this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:113,robust,robust,113,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py,1,['robust'],['robust']
Availability,"# TODO: nicer error handling for the following (current: template compilation failure trying; # to assign a pair with <double, string> to <double, double>); # ll2 = ll[:]; # ll2[2] = ll[2][:]; # ll2[2][1] = 'a'; # v = a.vector_pair(ll2)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:14,error,error,14,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,2,"['error', 'failure']","['error', 'failure']"
Availability,"# TODO: the following error message is rather confusing :(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:22,error,error,22,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,1,['error'],['error']
Availability,"# TODO: this emits a warning: Maybe you need to load the corresponding shared library?; # cling JIT session error: Failed to materialize symbols: ... emplace_back; # Despite the warning, the result is correct; # spec.WithGlobalFriends([(""subTree1"", ""PYspecTestFile5.root""),; # (""subTree2"", ""PYspecTestFile6.root""),; # (""subTree"", ""PYspecTestFile4.root"")], ""friendChainN"")",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/dataframe_datasetspec.py:108,error,error,108,tree/dataframe/test/dataframe_datasetspec.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/dataframe_datasetspec.py,1,['error'],['error']
Availability,# TODO:; # - We could optimize based on the knowledge that when splitting a failed; # partition into two and one side checks out okay then we can deduce that; # the other partition must be a failure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/abtest.py:191,failure,failure,191,interpreter/llvm-project/llvm/utils/abtest.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/abtest.py,1,['failure'],['failure']
Availability,"# The Dask client can be created after the condor jobs have been submitted.; # At this point, the jobs may or may not have actually started. Thus, it is; # not guaranteed that the application already has the requested resources; # available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py:231,avail,available,231,tutorials/dataframe/distrdf004_dask_lxbatch.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py,1,['avail'],['available']
Availability,"# The Python callable is now available from C++ in the Numba namespace.; # For example, we can use it from the interpreter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot004_NumbaDeclare.py:29,avail,available,29,tutorials/pyroot/pyroot004_NumbaDeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot004_NumbaDeclare.py,1,['avail'],['available']
Availability,# The current implementation needs psutil on some platforms to set; # a timeout per test. Check it's available.; # See lit.util.killProcessAndChildren(),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py:101,avail,available,101,interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,1,['avail'],['available']
Availability,# The formatter failed but didn't output a diff (e.g. some sort of; # infrastructure failure).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/code-format-helper.py:85,failure,failure,85,interpreter/llvm-project/llvm/utils/git/code-format-helper.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/code-format-helper.py,1,['failure'],['failure']
Availability,"# The line is not common to each block, or we don't have a common prefix.; # If there are no prefixes available, warn and bail out.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_mca_test_checks.py:102,avail,available,102,interpreter/llvm-project/llvm/utils/update_mca_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_mca_test_checks.py,1,['avail'],['available']
Availability,"# The magnitude of the recovery information can be chosen here.; # Higher values mean more aggressive recovery.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:23,recover,recovery,23,tutorials/roofit/rf612_recoverFromInvalidParameters.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py,2,['recover'],['recovery']
Availability,"# The name of the directory storing the cached project source. If this; # directory does not exist, the download script will be executed.; # That script should create the ""CachedSource"" directory and download the; # project source into it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:104,down,download,104,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,2,['down'],['download']
Availability,"# The previous test failure state, if applicable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py:20,failure,failure,20,interpreter/llvm-project/llvm/utils/lit/lit/Test.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py,1,['failure'],['failure']
Availability,"# The purpose of an ""@echo"" command is merely to add a debugging message; # directly to lit's output. It is used internally by lit's internal; # shell and is not currently documented for use in lit tests. However,; # if someone misuses it (e.g., both ""echo"" and ""@echo"" complain about; # stdin redirection), produce the normal execution trace to facilitate; # debugging.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:22,echo,echo,22,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,3,['echo'],['echo']
Availability,"# The tolerance sets the probability to add an unnecessary term.; # lower tolerance will add fewer terms, while higher tolerance; # will add more terms and provide a more flexible function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py:6,toler,tolerance,6,tutorials/roostats/rs_bernsteinCorrection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py,3,['toler'],['tolerance']
Availability,"# Theme options are theme-specific and customize the look and feel of a theme; # further. For a list of options available for each theme, see the; # documentation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/docs/conf.py:112,avail,available,112,interpreter/llvm-project/llvm/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/docs/conf.py,1,['avail'],['available']
Availability,"# Theme options are theme-specific and customize the look and feel of a theme; # further. For a list of options available for each theme, see the; # documentation.; # html_theme_options = {}; # Add any paths that contain custom themes here, relative to this directory.; # html_theme_path = []; # The name for this set of Sphinx documents. If None, it defaults to; # ""<project> v<release> documentation"".; # html_title = None; # A shorter title for the navigation bar. Default is the same as html_title.; # html_short_title = None; # The name of an image file (relative to this directory) to place at the top; # of the sidebar.; # html_logo = None; # The name of an image file (within the static path) to use as favicon of the; # docs. This file should be a Windows icon file (.ico) being 16x16 or 32x32; # pixels large.; # html_favicon = None; # Add any paths that contain custom static files (such as style sheets) here,; # relative to this directory. They are copied after the builtin static files,; # so a file named ""default.css"" will overwrite the builtin ""default.css"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py:112,avail,available,112,interpreter/llvm-project/clang/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py,2,['avail'],['available']
Availability,"# Theme options are theme-specific and customize the look and feel of a theme; # further. For a list of options available for each theme, see the; # documentation.; #html_theme_options = {}; # Add any paths that contain custom themes here, relative to this directory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:112,avail,available,112,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py,1,['avail'],['available']
Availability,"# Theme options are theme-specific and customize the look and feel of a theme; # further. For a list of options available for each theme, see the; # documentation.; #html_theme_options = {}; # Add any paths that contain custom themes here, relative to this directory.; #html_theme_path = []; # The name for this set of Sphinx documents. If None, it defaults to; # ""<project> v<release> documentation"".; #html_title = None; # A shorter title for the navigation bar. Default is the same as html_title.; #html_short_title = None; # The name of an image file (relative to this directory) to place at the top; # of the sidebar.; #html_logo = None; # The name of an image file (within the static path) to use as favicon of the; # docs. This file should be a Windows icon file (.ico) being 16x16 or 32x32; # pixels large.; #html_favicon = None; # Add any paths that contain custom static files (such as style sheets) here,; # relative to this directory. They are copied after the builtin static files,; # so a file named ""default.css"" will overwrite the builtin ""default.css"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:112,avail,available,112,interpreter/cling/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py,1,['avail'],['available']
Availability,"# These need to be passed as variables and not as class attributes; # otherwise the `spark_mapper` function would be referencing this; # this instance of the Spark backend along with the referenced; # SparkContext. This would cause the errors described in SPARK-5063.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:236,error,errors,236,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,1,['error'],['errors']
Availability,"# This doesn't look like a valid gtest file. This can; # have a number of causes, none of them good. For; # instance, we could have created a broken executable.; # Alternatively, someone has cruft in their test; # directory. If we don't return a test here, then no; # failures will get reported, so return a dummy test name; # so that the failure is reported later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/formats/googletest.py:268,failure,failures,268,interpreter/llvm-project/llvm/utils/lit/lit/formats/googletest.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/formats/googletest.py,2,['failure'],"['failure', 'failures']"
Availability,# Try to make implicit int an error for more sensible test output,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/creduce-clang-crash.py:30,error,error,30,interpreter/llvm-project/clang/utils/creduce-clang-crash.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/creduce-clang-crash.py,1,['error'],['error']
Availability,"# Updates the number of partitions for this dataframe if the user did; # not specify one initially. This is done each time the computations are; # triggered, in case the user changed the resource configuration; # between runs (e.g. changing the number of available cores).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:255,avail,available,255,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py,1,['avail'],['available']
Availability,"# Used for downloads",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:11,down,downloads,11,.github/workflows/root-ci-config/build_root.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py,1,['down'],['downloads']
Availability,"# Used to shut down the thread safely at teardown time",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py:15,down,down,15,bindings/pyroot/pythonizations/python/ROOT/_application.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py,1,['down'],['down']
Availability,"# Visualize 1-sigma error encoded in fit result 'r' as orange band using linear error propagation; # ROOT.This results in an error band that is by construction symmetric; #; # The linear error is calculated as; # error(x) = Z* F_a(x) * Corr(a,a') F_a'(x); #; # where F_a(x) = [ f(x,a+da) - f(x,a-da) ] / 2,; #; # with f(x) = the plotted curve; # 'da' = error taken from the fit result; # Corr(a,a') = the correlation matrix from the fit result; # Z = requested significance 'Z sigma band'; #; # The linear method is fast (required 2*N evaluations of the curve, N is the number of parameters),; # but may not be accurate in the presence of strong correlations (~>0.9) and at Z>2 due to linear and; # Gaussian approximations made; #",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:20,error,error,20,tutorials/roofit/rf610_visualerror.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py,6,['error'],['error']
Availability,"# Visualize fit error; # -------------------------------------; # Make plot frame",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:16,error,error,16,tutorials/roofit/rf610_visualerror.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py,1,['error'],['error']
Availability,"# Visualize partial error. For partial error visualization the covariance matrix is first reduced as follows; # ___ -1; # Vred = V22 = V11 - V12 * V22 * V21; #; # Where V11,V12,V21, represent a block decomposition of the covariance matrix into observables that; # are propagated (labeled by index '1') and that are not propagated (labeled by index '2'), V22bar; # is the Shur complement of V22, as shown above; #; # (Note that Vred is _not_ a simple sub-matrix of V); # Propagate partial error due to shape parameters (m,m2) using linear and; # sampling method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:20,error,error,20,tutorials/roofit/rf610_visualerror.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py,3,['error'],['error']
Availability,"# Visualize partial fit error; # ------------------------------------------------------; # Make plot frame",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:24,error,error,24,tutorials/roofit/rf610_visualerror.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py,1,['error'],['error']
Availability,# We allow normal system exit inside a config file to just; # return control without error.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py:85,error,error,85,interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,1,['error'],['error']
Availability,"# We are expecting a lot of evaluation errors. -1 switches off printing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:39,error,errors,39,tutorials/roofit/rf612_recoverFromInvalidParameters.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py,1,['error'],['errors']
Availability,"# We are still expecting a few evaluation errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:42,error,errors,42,tutorials/roofit/rf612_recoverFromInvalidParameters.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py,1,['error'],['errors']
Availability,"# We do the conversion to RooArgSet now, such that we can keep alive; # the normalization set by setting it as an attribute of this; # RooAbsReal.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooabsreal.py:63,alive,alive,63,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooabsreal.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooabsreal.py,1,['alive'],['alive']
Availability,"# We get zip instead of git clone to not download git history",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:41,down,download,41,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,1,['down'],['download']
Availability,# We have to go one level down the directory tree.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:26,down,down,26,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,1,['down'],['down']
Availability,"# Zombie symbols that were available from the Standard Library, but are; # removed in the following standards.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/include-mapping/gen_std.py:27,avail,available,27,interpreter/llvm-project/clang/tools/include-mapping/gen_std.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/include-mapping/gen_std.py,1,['avail'],['available']
Availability,# [Error 22] No application is associated with the specified; # file for this operation: '<URL>',MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/startfile.py:3,Error,Error,3,interpreter/llvm-project/clang/tools/scan-view/share/startfile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/startfile.py,1,['Error'],['Error']
Availability,"# attribute error if compilation failed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:12,error,error,12,bindings/pyroot/cppyy/cppyy/test/test_regression.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py,1,['error'],['error']
Availability,"# can only recover once from each error on Windows, which is functionally; # enough, but precludes further testing here (change: now drop all, see above,; # as on some MSVC builds, no signals are caught ??)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:11,recover,recover,11,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py,2,"['error', 'recover']","['error', 'recover']"
Availability,"# cannot use Keras if PYMVA is not available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:35,avail,available,35,tutorials/tmva/TMVA_Higgs_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py,1,['avail'],['available']
Availability,"# causes auto down-cast",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:14,down,down-cast,14,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,1,['down'],['down-cast']
Availability,"# check that unknown classes do not mask template instantiations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:36,mask,mask,36,bindings/pyroot/cppyy/cppyy/test/test_templates.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py,1,['mask'],['mask']
Availability,"# check that void* does not mask template instantiations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:28,mask,mask,28,bindings/pyroot/cppyy/cppyy/test/test_templates.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py,2,['mask'],['mask']
Availability,"# default to using all available cores (x2 if hyperthreading enabled)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py:23,avail,available,23,bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,1,['avail'],['available']
Availability,# display error message from the static analyzer,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py:10,error,error,10,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,2,['error'],['error']
Availability,"# error testing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:2,error,error,2,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,2,['error'],['error']
Availability,"# fit - use Minuit2 if available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitNormSum.py:23,avail,available,23,tutorials/fit/fitNormSum.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitNormSum.py,1,['avail'],['available']
Availability,"# following used to fail with compilation error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py:42,error,error,42,bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py,1,['error'],['error']
Availability,"# force build of the .pch underneath the cppyy package if not available yet",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/setup.py:62,avail,available,62,bindings/pyroot/cppyy/cppyy/setup.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/setup.py,1,['avail'],['available']
Availability,"# full lazy lookup available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/assert_interactive.py:19,avail,available,19,bindings/pyroot/cppyy/cppyy/test/assert_interactive.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/assert_interactive.py,1,['avail'],['available']
Availability,"# global pythonizors are still run even if namespaced ones available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonization.py:59,avail,available,59,bindings/pyroot/cppyy/cppyy/test/test_pythonization.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonization.py,1,['avail'],['available']
Availability,"# if you wanted to use the ad hoc Gaussian prior instead; # ~~~; # hc1.ForcePriorNuisanceAlt(w.pdf(""gauss_prior"")); # hc1.ForcePriorNuisanceNull(w.pdf(""gauss_prior"")); # ~~~; # if you wanted to use the ad hoc log-normal prior instead; # ~~~; # hc1.ForcePriorNuisanceAlt(w.pdf(""lognorm_prior"")); # hc1.ForcePriorNuisanceNull(w.pdf(""lognorm_prior"")); # ~~~; # these lines save current msg level and then kill any messages below ERROR",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:426,ERROR,ERROR,426,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,2,['ERROR'],['ERROR']
Availability,"# if you wanted to use the ad hoc Gaussian prior instead; # ~~~; # hc2.ForcePriorNuisanceAlt(w.pdf(""gauss_prior"")); # hc2.ForcePriorNuisanceNull(w.pdf(""gauss_prior"")); # ~~~; # if you wanted to use the ad hoc log-normal prior instead; # ~~~; # hc2.ForcePriorNuisanceAlt(w.pdf(""lognorm_prior"")); # hc2.ForcePriorNuisanceNull(w.pdf(""lognorm_prior"")); # ~~~; # these lines save current msg level and then kill any messages below ERROR",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:426,ERROR,ERROR,426,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,2,['ERROR'],['ERROR']
Availability,"# list databases available on server",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlselect.py:17,avail,available,17,tutorials/sql/sqlselect.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlselect.py,1,['avail'],['available']
Availability,# llc is the only llc-like in the LLVM tree but downstream forks can add; # additional ones here if they have them.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_llc_test_checks.py:48,down,downstream,48,interpreter/llvm-project/llvm/utils/update_llc_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_llc_test_checks.py,1,['down'],['downstream']
Availability,"# mix of error and warning",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:9,error,error,9,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py,1,['error'],['error']
Availability,"# multiple C++ exceptions are considered argument conversion errors and; # only result in the same exception type if they are all the same",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:61,error,errors,61,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py,1,['error'],['errors']
Availability,# os.getuid() is not available on all platforms,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py:21,avail,available,21,interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,1,['avail'],['available']
Availability,"# print ""ERROR!""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/release/findRegressions-simple.py:9,ERROR,ERROR,9,interpreter/llvm-project/llvm/utils/release/findRegressions-simple.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/release/findRegressions-simple.py,1,['ERROR'],['ERROR']
Availability,"# print through base class (used to fail with compilation error)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:58,error,error,58,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,1,['error'],['error']
Availability,"# raises on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:12,error,error,12,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,1,['error'],['error']
Availability,"# set error to set initial step size in fit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf712_lagrangianmorphfit.py:6,error,error,6,tutorials/roofit/rf712_lagrangianmorphfit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf712_lagrangianmorphfit.py,1,['error'],['error']
Availability,"# should return error code because of type mismatch",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py:16,error,error,16,bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py,2,['error'],['error']
Availability,"# single C++ exception during overload selection: assumes this is a logic; # error and prioritizes the C++ exception",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:77,error,error,77,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py,1,['error'],['error']
Availability,"# some older versions can be fixed up through a compatibility; # module on the python side; load it, if available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pypy_cppyy.py:104,avail,available,104,bindings/pyroot/cppyy/cppyy/python/cppyy/_pypy_cppyy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pypy_cppyy.py,1,['avail'],['available']
Availability,"# special case pythonization (builtin_map is not available from the C-API)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py:49,avail,available,49,bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py,1,['avail'],['available']
Availability,"# test that no error is causes if python style and cpp style; # args are provided to fitto and that results are identical",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py:15,error,error,15,bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py,1,['error'],['error']
Availability,"# test that no error is causes if python style and cpp style; # args are provided to plotOn and that results are identical",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py:15,error,error,15,bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py,1,['error'],['error']
Availability,"# the following is invalid, GDB fails with:; # Python Exception <class 'gdb.error'> Attempt to take address of value; # not located in memory.; # because isEqual took parameter (for the unsigned long key I was testing); # by const ref, and GDB; # It's also not entirely general - we should be accessing the ""getFirst()""; # member function, not the 'first' member variable, but I've yet to figure; # out how to find/call member functions (especially (const) overloaded; # ones) on a gdb.Value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/gdb-scripts/prettyprinters.py:76,error,error,76,interpreter/llvm-project/llvm/utils/gdb-scripts/prettyprinters.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/gdb-scripts/prettyprinters.py,1,['error'],['error']
Availability,"# the following two fail b/c PySlice_GetIndices succeeds w/o error, while; # returning an overflown value (list object uses different internal APIs); #assert a[ -pow(2,128): 3 ] == type2test([0,1,2]); #assert a[ 3: pow(2,145) ] == type2test([3,4])",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:61,error,error,61,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,1,['error'],['error']
Availability,"# the plot takes a long time and print lots of error; # using a scan it is better",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:47,error,error,47,tutorials/roostats/FourBinInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py,1,['error'],['error']
Availability,"# there are three types of lines we are looking for; # 1) node lines, 2) edge lines 3) support lines (like page size, etc); # is this an edge line?; # note that this is no completely robust, if a none edge line; # for some reason contains -> it will be missidentified; # hand edit the file if this happens",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/DSAextract.py:183,robust,robust,183,interpreter/llvm-project/llvm/utils/DSAextract.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/DSAextract.py,1,['robust'],['robust']
Availability,"# this is a switch to check the sampling distribution; # of -2 log LR for two comparisons:; # the first is for n-1 vs. n degree polynomial corrections; # the second is for n vs. n+1 degree polynomial corrections; # Here we choose n to be the one chosen by the tolerance; # criterion above, eg. n = ""degree"" in the code.; # Setting this to true is takes about 10 min.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py:260,toler,tolerance,260,tutorials/roostats/rs_bernsteinCorrection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py,1,['toler'],['tolerance']
Availability,"# toymcs3.SetTestStatistic(ropl); # toymcs3.SetTestStatistic(mlets); # these lines save current msg level and then kill any messages below ERROR",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:139,ERROR,ERROR,139,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,1,['ERROR'],['ERROR']
Availability,"# use GPU for TMVA if available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:22,avail,available,22,tutorials/tmva/TMVA_RNN_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py,1,['avail'],['available']
Availability,"# use GPU if available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:13,avail,available,13,tutorials/tmva/TMVA_CNN_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py,2,['avail'],['available']
Availability,"# used to fail with compilation error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:32,error,error,32,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,3,['error'],['error']
Availability,"#! /usr/bin/env python; #; # Build a pch for the headers and linkdefs in root-build-dir/etc/dictpch/.; # root-build-dir is first tried as ./ - if that doesn't exist, $ROOTSYS; # is taken as root-build-dir.; #; # $1: PCH output file name; # $2: cxxflags (optional; required if extra headers are supplied); # $3: extra headers to be included in the PCH (optional); #; # exit code 1 for invocation errors; else exit code of rootcling invocation.; #; # Copyright (c) 2014 Rene Brun and Fons Rademakers; # Author: Axel Naumann <axel@cern.ch>, 2014-10-16; # Translated to python by Danilo Piparo, 2015-4-23",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/etc/dictpch/makepch.py:395,error,errors,395,etc/dictpch/makepch.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/dictpch/makepch.py,1,['error'],['errors']
Availability,#!/usr/bin/env python3; # Automatically formatted with yapf (https://github.com/google/yapf); # Script for automatic 'opt' pipeline reduction for when using the new; # pass-manager (NPM). Based around the '-print-pipeline-passes' option.; #; # The reduction algorithm consists of several phases (steps).; #; # Step #0: Verify that input fails with the given pipeline and make note of the; # error code.; #; # Step #1: Split pipeline in two starting from front and move forward as long as; # first pipeline exits normally and the second pipeline fails with the expected; # error code. Move on to step #2 with the IR from the split point and the; # pipeline from the second invocation.; #; # Step #2: Remove passes from end of the pipeline as long as the pipeline fails; # with the expected error code.; #; # Step #3: Make several sweeps over the remaining pipeline trying to remove one; # pass at a time. Repeat sweeps until unable to remove any more passes.; #; # Usage example:; # reduce_pipeline.py --opt-binary=./build-all-Debug/bin/opt --input=input.ll --output=output.ll --passes=PIPELINE [EXTRA-OPT-ARGS ...],MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline.py:391,error,error,391,interpreter/llvm-project/llvm/utils/reduce_pipeline.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline.py,3,['error'],['error']
Availability,"#!/usr/bin/env python; # changelog:; # 10/13/2005b: replaced the # in tmp(.#*)* with alphanumeric and _, this will then remove; # nodes such as %tmp.1.i and %tmp._i.3; # 10/13/2005: exntended to remove variables of the form %tmp(.#)* rather than just; #%tmp.#, i.e. it now will remove %tmp.12.3.15 etc, additionally fixed a spelling error in; # the comments; # 10/12/2005: now it only removes nodes and edges for which the label is %tmp.# rather; # than removing all lines for which the lable CONTAINS %tmp.#",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/DSAclean.py:333,error,error,333,interpreter/llvm-project/llvm/utils/DSAclean.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/DSAclean.py,1,['error'],['error']
Availability,"#!/usr/bin/env python; #; # A pyROOT script that allows one to; # make quick measuremenst.; #; # This is a command-line script that; # takes in signal and background values,; # as well as potentially uncertainties on those; # values, and returns a fitted signal value; # and errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py:275,error,errors,275,tutorials/histfactory/makeQuickModel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py,1,['error'],['errors']
Availability,"#!/usr/bin/env python; #; # Given a previous good compile narrow down miscompiles.; # Expects two directories named ""before"" and ""after"" each containing a set of; # assembly or object files where the ""after"" version is assumed to be broken.; # You also have to provide a script called ""link_test"". It is called with a; # list of files which should be linked together and result tested. ""link_test""; # should returns with exitcode 0 if the linking and testing succeeded.; #; # If a response file is provided, only the object files that are listed in the; # file are inspected. In addition, the ""link_test"" is called with a temporary; # response file representing one iteration of bisection.; #; # abtest.py operates by taking all files from the ""before"" directory and; # in each step replacing one of them with a file from the ""bad"" directory.; #; # Additionally you can perform the same steps with a single .s file. In this; # mode functions are identified by "" -- Begin function FunctionName"" and; # "" -- End function"" markers. The abtest.py then takes all; # function from the file in the ""before"" directory and replaces one function; # with the corresponding function from the ""bad"" file in each step.; #; # Example usage to identify miscompiled files:; # 1. Create a link_test script, make it executable. Simple Example:; # clang ""$@"" -o /tmp/test && /tmp/test || echo ""PROBLEM""; # 2. Run the script to figure out which files are miscompiled:; # > ./abtest.py; # somefile.s: ok; # someotherfile.s: skipped: same content; # anotherfile.s: failed: './link_test' exitcode != 0; # ...; # Example usage to identify miscompiled functions inside a file:; # 3. Run the tests on a single file (assuming before/file.s and; # after/file.s exist); # > ./abtest.py file.s; # funcname1 [0/XX]: ok; # funcname2 [1/XX]: ok; # funcname3 [2/XX]: skipped: same content; # funcname4 [3/XX]: failed: './link_test' exitcode != 0; # ...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/abtest.py:65,down,down,65,interpreter/llvm-project/llvm/utils/abtest.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/abtest.py,2,"['down', 'echo']","['down', 'echo']"
Availability,"## Det(Double_t &d1,Double_t &d2); The determinant is d1*TMath::Power(2.,d2); Expressing the determinant this way makes under/over-flow very; unlikely . #### Decompose(); Here the actually decomposition is performed . One can change the; matrix A after the decomposition constructor has been called; without effecting the decomposition result. #### Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with; the solution . #### TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced; with the solution . #### MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through; the argument and replaced with the solution . #### Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument; the unit matrix . Note that for a matrix a(m,n) with m > n a; pseudo-inverse is calculated . ### Tolerances and Scaling. The tolerance parameter (which is a member of this base class) plays; a crucial role in all operations of the decomposition classes . It; gives the user a powerful tool to monitor and steer the operations; Its default value is sqrt(epsilon) where 1+epsilon = 1. If you do not want to be bothered by the following considerations,; like in most other linear algebra packages, just set the tolerance; with SetTol to an arbitrary small number . The tolerance number is used by each decomposition method to decide; whether the matrix is near singular, except of course SVD which can; handle singular matrices .; For each decomposition this will be checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication that we are losing precision .). If the matrix is flagged as being singular, o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx:2655,toler,tolerance,2655,math/matrix/src/TDecompBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx,1,['toler'],['tolerance']
Availability,"## Restricting the fit range; The fit range can be restricted through. fit->SetRangeX(first bin #, last bin #);; and freed using. fit->ReleaseRangeX();; For 2D histograms the Y range can be similarly restricted using. fit->SetRangeY(first bin #, last bin #);; fit->ReleaseRangeY();; and for 3D histograms also. fit->SetRangeZ(first bin #, last bin #);; fit->ReleaseRangeZ();; It is also possible to exclude individual bins from the fit through. fit->ExcludeBin(bin #);; where the given bin number is assumed to follow the TH1::GetBin() numbering.; Any bins excluded in this way can be included again using the corresponding. fit->IncludeBin(bin #);. ## Weights histograms; Weights histograms (for a motivation see the above publication) can be specified; for the individual MC sources through. fit->SetWeight(parameter #, pointer to weights histogram);; and unset by specifying a null pointer. ## Obtaining fit results; The fit is carried out through. Int_t status = fit->Fit();; where status is the code returned from the ""MINIMIZE"" command. For fits; that converged, parameter values and errors can be obtained through. fit->GetResult(parameter #, value, error);; and the histogram corresponding to the total Monte Carlo prediction (which; is not the same as a simple weighted sum of the input Monte Carlo distributions); can be obtained by. TH1* result = fit->GetPlot();; ## Using different histograms; It is possible to change the histogram being fitted through. fit->SetData(TH1* data);; and to change the template histogram for a given parameter number through. fit->SetMC(parameter #, TH1* MC);; This can speed up code in case of multiple data or template histograms;; however, it should be done with care as any settings are taken over from; the previous fit. In addition, neither the dimensionality nor the numbers of; bins of the histograms should change (in that case it is better to instantiate; a new TFractionFitter object). ## Errors; Any serious inconsistency results in an error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx:4534,error,errors,4534,hist/hist/src/TFractionFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx,4,"['Error', 'error']","['Errors', 'error', 'errors']"
Availability,"## This is the main function, it will be registered as transformer function to JupyROOT, it will run every time; # when some ROOT function produces output. It get's the C++ style output and it returns it in HTML version.; # @param self object pointer; # @param output the content of C++ output stream; # @param error the content of C++ error stream",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py:311,error,error,311,bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py,2,['error'],['error']
Availability,"## TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced; with the solution . #### MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through; the argument and replaced with the solution . #### Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument; the unit matrix . Note that for a matrix a(m,n) with m > n a; pseudo-inverse is calculated . ### Tolerances and Scaling. The tolerance parameter (which is a member of this base class) plays; a crucial role in all operations of the decomposition classes . It; gives the user a powerful tool to monitor and steer the operations; Its default value is sqrt(epsilon) where 1+epsilon = 1. If you do not want to be bothered by the following considerations,; like in most other linear algebra packages, just set the tolerance; with SetTol to an arbitrary small number . The tolerance number is used by each decomposition method to decide; whether the matrix is near singular, except of course SVD which can; handle singular matrices .; For each decomposition this will be checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication that we are losing precision .). If the matrix is flagged as being singular, operations with the; decomposition will fail and will return matrices/vectors that are; invalid . The observant reader will notice that by scaling the complete matrix; by some small number the decomposition will detect a singular matrix .; In this case the user will have to reduce the tolerance number by this; factor . (For CPU time saving we decided not to make this an automatic; procedure) . Code for this could look as follows:; ~~~; const Double_t max",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx:3096,toler,tolerance,3096,math/matrix/src/TDecompBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx,1,['toler'],['tolerance']
Availability,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Cache a processed RDataFrame in memory for further usage.; ##; ## This tutorial shows how the content of a data frame can be cached in memory; ## in form of a dataframe. The content of the columns is stored in memory in; ## contiguous slabs of memory and is ""ready to use"", i.e. no ROOT IO operation; ## is performed.; ##; ## Creating a cached data frame storing all of its content deserialised and uncompressed; ## in memory is particularly useful when dealing with datasets of a moderate size; ## (small enough to fit the RAM) over which several explorative loops need to be; ## performed as fast as possible. In addition, caching can be useful when no file; ## on disk needs to be created as a side effect of checkpointing part of the analysis.; ##; ## All steps in the caching are lazy, i.e. the cached data frame is actually filled; ## only when the event loop is triggered on it.; ##; ## \macro_code; ## \macro_image; ##; ## \date June 2018; ## \author Danilo Piparo (CERN)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py:777,checkpoint,checkpointing,777,tutorials/dataframe/df019_Cache.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py,1,['checkpoint'],['checkpointing']
Availability,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The Higgs to four lepton analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the Higgs to four lepton analysis from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. The decay of the Standard Model Higgs boson; ## to two Z bosons and subsequently to four leptons is called the ""golden channel"". The selection leads; ## to a narrow invariant mass peak on top a relatively smooth and small background, revealing; ## the Higgs at 125 GeV.; ## Systematic errors for the MC scale factors are computed and the Vary function of RDataFrame is used for plotting.; ## The analysis is translated to an RDataFrame workflow processing about 300 MB of simulated events and data.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons_spec.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date March 2020, August 2022, August 2023; ## \authors Stefan Wunsch (KIT, CERN), Julia Mathe (CERN), Marta Czurylo (CERN)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:702,error,errors,702,tutorials/dataframe/df106_HiggsToFourLeptons.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py,1,['error'],['errors']
Availability,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Use RVecs to plot the transverse momentum of selected particles.; ##; ## This tutorial shows how VecOps can be used to slim down the programming; ## model typically adopted in HEP for analysis.; ## In this case we have a dataset containing the kinematic properties of; ## particles stored in individual arrays.; ## We want to plot the transverse momentum of these particles if the energy is; ## greater than 100 MeV.; ## \macro_code; ## \macro_image; ##; ## \date March 2018; ## \authors Danilo Piparo (CERN), Andre Vieira Silva",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df017_vecOpsHEP.py:189,down,down,189,tutorials/dataframe/df017_vecOpsHEP.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df017_vecOpsHEP.py,1,['down'],['down']
Availability,"## \file; ## \ingroup tutorial_fit; ## \notebook; ## Fitting multiple functions to different ranges of a 1-D histogram; ## Example showing how to fit in a sub-range of an histogram; ## A histogram is created and filled with the bin contents and errors; ## defined in the table below.; ## Three Gaussians are fitted in sub-ranges of this histogram.; ## A new function (a sum of 3 Gaussians) is fitted on another subrange; ## Note that when fitting simple functions, such as Gaussians, the initial; ## values of parameters are automatically computed by ROOT.; ## In the more complicated case of the sum of 3 Gaussians, the initial values; ## of parameters must be given. In this particular case, the initial values; ## are taken from the result of the individual fits.; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \authors Jonas Rembser, Rene Brun (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/multifit.py:245,error,errors,245,tutorials/fit/multifit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/multifit.py,1,['error'],['errors']
Availability,"## \file; ## \ingroup tutorial_graphs; ## \notebook -js; ## Bent error bars. Inspired from work of Olivier Couet.; ##; ## \macro_image; ## \macro_code; ##; ## \author Alberto Ferro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/graphs/bent.py:65,error,error,65,tutorials/graphs/bent.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/graphs/bent.py,1,['error'],['error']
Availability,"## \file; ## \ingroup tutorial_math; ## \notebook; ## Show the different kinds of Bessel functions available in ROOT; ## To execute the macro type in:; ##; ## ~~~{.cpp}; ## root[0] .x Bessel.C; ## ~~~; ##; ## It will create one canvas with the representation; ## of the cylindrical and spherical Bessel functions; ## regular and modified; ##; ## Based on Bessel.C by Magdalena Slawinska; ##; ## \macro_image; ## \macro_code; ##; ## \author Juan Fernando Jaramillo Botero",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/Bessel.py:99,avail,available,99,tutorials/math/Bessel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/Bessel.py,1,['avail'],['available']
Availability,"## \file; ## \ingroup tutorial_pyroot; ## \notebook -js; ## A Simple Graph with error bars; ##; ## \macro_image; ## \macro_code; ##; ## \author Wim Lavrijsen",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/gerrors.py:80,error,error,80,tutorials/pyroot/gerrors.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/gerrors.py,1,['error'],['error']
Availability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## 'LIKELIHOOD AND MINIMIZATION' RooFit tutorial macro #606; ##; ## Understanding and customizing error handling in likelihood evaluations; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:151,error,error,151,tutorials/roofit/rf606_nllerrorhandling.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py,1,['error'],['error']
Availability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Likelihood and minimization: Recover from regions where the function is not defined.; ##; ## We demonstrate improved recovery from disallowed parameters. For this, we use a polynomial PDF of the form; ## \f[; ## \mathrm{Pol2} = \mathcal{N} \left( c + a_1 \cdot x + a_2 \cdot x^2 + 0.01 \cdot x^3 \right),; ## \f]; ## where \f$ \mathcal{N} \f$ is a normalisation factor. Unless the parameters are chosen carefully,; ## this function can be negative, and hence, it cannot be used as a PDF. In this case, RooFit passes; ## an error to the minimiser, which might try to recover.; ##; ## \macro_code; ## \macro_output; ##; ## \date June 2021; ## \author Harshal Shende, Stephan Hageboeck (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:85,Recover,Recover,85,tutorials/roofit/rf612_recoverFromInvalidParameters.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py,4,"['Recover', 'error', 'recover']","['Recover', 'error', 'recover', 'recovery']"
Availability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Likelihood and minimization: visualization of errors from a covariance matrix; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:102,error,errors,102,tutorials/roofit/rf610_visualerror.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py,1,['error'],['errors']
Availability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: complete example with use of conditional pdf with per-event errors; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf306_condpereventerrors.py:141,error,errors,141,tutorials/roofit/rf306_condpereventerrors.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf306_condpereventerrors.py,1,['error'],['errors']
Availability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: usage of full pdf with per-event errors; ##; ## \macro_code; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf307_fullpereventerrors.py:114,error,errors,114,tutorials/roofit/rf307_fullpereventerrors.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf307_fullpereventerrors.py,1,['error'],['errors']
Availability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: utility functions classes available for use in tailoring of; ## composite (multidimensional) pdfs; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf302_utilfuncs.py:107,avail,available,107,tutorials/roofit/rf302_utilfuncs.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf302_utilfuncs.py,1,['avail'],['available']
Availability,"## \file; ## \ingroup tutorial_roostats; ## \notebook -js; ## Example of the BernsteinCorrection utility in RooStats.; ##; ## The idea is that one has a distribution coming either from data or Monte Carlo; ## (called ""reality"" in the macro) and a nominal model that is not sufficiently; ## flexible to take into account the real distribution. One wants to take into; ## account the systematic associated with this imperfect modeling by augmenting; ## the nominal model with some correction term (in this case a polynomial).; ## The BernsteinCorrection utility will import into your workspace a corrected model; ## given by nominal(x) * poly_N(x), where poly_N is an n-th order polynomial in; ## the Bernstein basis. The degree N of the polynomial is chosen by specifying the tolerance; ## one has in adding an extra term to the polynomial.; ## The Bernstein basis is nice because it only has positive-definite terms; ## and works well with PDFs.; ## Finally, the macro makes a plot of:; ## - the data (drawn from 'reality'),; ## - the best fit of the nominal model (blue); ## - and the best fit corrected model.; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \date June 2022; ## \authors Artem Busorgin, Kyle Cranmer (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py:775,toler,tolerance,775,tutorials/roostats/rs_bernsteinCorrection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py,1,['toler'],['tolerance']
Availability,"## wait for input to keep the GUI (which lives on a ROOT event dispatcher) alive",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/demo.py:75,alive,alive,75,tutorials/pyroot/demo.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/demo.py,1,['alive'],['alive']
Availability,"### 3.Accessing the fit results. #### 3.1 There are methods in the fitter to access all relevant information:; --GetParameters, GetCovarianceMatrix, etc; --the t-values of parameters and their significance can be reached by; GetParTValue() and GetParSignificance() methods. #### 3.2 If fitting with a pre-defined TF123, the fit results are also; written into this function. ### 4.Robust fitting - Least Trimmed Squares regression (LTS); Outliers are atypical(by definition), infrequant observations; data points; which do not appear to follow the characteristic distribution of the rest; of the data. These may reflect genuine properties of the underlying; phenomenon(variable), or be due to measurement errors or anomalies which; shouldn't be modelled. (StatSoft electronic textbook). Even a single gross outlier can greatly influence the results of least-; squares fitting procedure, and in this case use of robust(resistant) methods; is recommended. The method implemented here is based on the article and algorithm:; ""Computing LTS Regression for Large Data Sets"" by; P.J.Rousseeuw and Katrien Van Driessen; The idea of the method is to find the fitting coefficients for a subset; of h observations (out of n) with the smallest sum of squared residuals.; The size of the subset h should lie between (npoints + nparameters +1)/2; and n, and represents the minimal number of good points in the dataset.; The default value is set to (npoints + nparameters +1)/2, but of course; if you are sure that the data contains less outliers it's better to change; h according to your data. To perform a robust fit, call EvalRobust() function instead of Eval() after; adding the points and setting the fitting function.; Note, that standard errors on parameters are not computed!. */; ////////////////////////////////////////////////////////////////////////////////; ///default c-tor, input data is stored; ///If you don't want to store the input data,; ///run the function StoreData(kFALSE) after constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx:6706,robust,robust,6706,math/minuit/src/TLinearFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx,2,"['error', 'robust']","['errors', 'robust']"
Availability,#: Move the cursor down one line,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py:19,down,down,19,interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,1,['down'],['down']
Availability,"#; # Custom clean.; # TODO: There is no way to reliably clean the ""dist"" directory.; #; #; # Base clean.; #",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:47,reliab,reliably,47,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,1,['reliab'],['reliably']
Availability,"#; # Draw a graph with error bars and fit a function to it; #",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/documentation/primer/macros/TGraphFit.py:23,error,error,23,documentation/primer/macros/TGraphFit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/primer/macros/TGraphFit.py,1,['error'],['error']
Availability,"#; # Draw hpx with its errors and a marker.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/h1ReadAndDraw.py:23,error,errors,23,tutorials/pyroot/h1ReadAndDraw.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/h1ReadAndDraw.py,1,['error'],['errors']
Availability,"#; # Happens e.g. if the template is a dependent type; instead, try to parse; # its definition (brittle, but the original code just had '1' as a guess,; # which is even worse ...).; #; # logger.error(_(""Unexpected template_arg_count={} for {}"").format(tmp, typedef.type.get_typedef_name()))",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py:194,error,error,194,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,1,['error'],['error']
Availability,"#; ## ~~~{.cpp}; ## - s = 40; ## - b = 100; ## - tau = 5; ## - bbar = 1000; ## - rho = 1; ## (sigma for rho = 20%); ## ~~~; ##; ## and in the toy dataset:; ##; ## ~~~{.cpp}; ## - non = 139; ## - noff = 528; ## - nonbar = 993; ## - noffbar = 4906; ## - rhonom = 1.27824; ## ~~~; ##; ## Note, the covariance matrix of the parameters has large off-diagonal terms.; ## Clearly s,b are anti-correlated. Similarly, since noffbar >> nonbar, one would; ## expect bbar,tau to be anti-correlated.; ##; ## This can be seen below.; ##; ## ~~~{.cpp}; ## GLOBAL b bbar rho s tau; ## b 0.96820 1.000 0.191 -0.942 -0.762 -0.209; ## bbar 0.91191 0.191 1.000 0.000 -0.146 -0.912; ## rho 0.96348 -0.942 0.000 1.000 0.718 -0.000; ## s 0.76250 -0.762 -0.146 0.718 1.000 0.160; ## tau 0.92084 -0.209 -0.912 -0.000 0.160 1.000; ## ~~~; ##; ## Similarly, since tau*rho appears as a product, we expect rho,tau; ## to be anti-correlated. When the error on rho is significantly; ## larger than 1/sqrt(bbar), tau is essentially known and the; ## correlation is minimal (tau mainly cares about bbar, and rho about b,s).; ## In the alternate parametrization (bbar* tau * rho) the correlation coefficient; ## for rho,tau is large (and negative).; ##; ## The code below uses best-practices for RooFit & RooStats as of June 2010.; ##; ## It proceeds as follows:; ## - create a workspace to hold the model; ## - use workspace factory to quickly create the terms of the model; ## - use workspace factory to define total model (a prod pdf); ## - create a RooStats ModelConfig to specify observables, parameters of interest; ## - add to the ModelConfig a prior on the parameters for Bayesian techniques; ## note, the pdf it is factorized for parameters of interest & nuisance params; ## - visualize the model; ## - write the workspace to a file; ## - use several of RooStats IntervalCalculators & compare results; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \date July 2022; ## \authors Artem Busorgin, Kyle Cranmer and ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:4409,error,error,4409,tutorials/roostats/FourBinInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py,1,['error'],['error']
Availability,"#If cling is not a symlink try a regular file; #readlink returns POSIX error EINVAL (22) if the; #argument is not a symlink",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/kernel/clingkernel.py:71,error,error,71,interpreter/cling/tools/Jupyter/kernel/clingkernel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/kernel/clingkernel.py,1,['error'],['error']
Availability,"#NOTE:actually JupyROOT is not capturing the error on %%cpp -d if the function is wrong",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/kernel/magics/cppmagic.py:45,error,error,45,bindings/jupyroot/python/JupyROOT/kernel/magics/cppmagic.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/kernel/magics/cppmagic.py,1,['error'],['error']
Availability,"#assert ""no converter available for 'fragile::no_such_class*'"" in str(e)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:22,avail,available,22,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py,1,['avail'],['available']
Availability,"#this should be available only when xgboost is there ?; # We probably don't need a protection here since the code is run only when there is xgboost",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/__init__.py:16,avail,available,16,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/__init__.py,1,['avail'],['available']
Availability,"$ are the independent; variables, \f$ D_{t,j}\f$ the known, dependent quantity, and \f$ E_{t,j}\f$ is; the square error in \f$ D_{t,j}\f$ (TMultiDimFit::AddTestRow). The parameterization is then evaluated at every \f$\mathbf{x}_t\f$ in the; test sample, and; \f[; S_t \equiv \sum_{j=1}^{M_t} \left(D_{t,j} -; D_p\left(\mathbf{x}_{t,j}\right)\right)^2; \f]; is evaluated. The relative error over the test sample; \f[; R_t = \frac{S_t}{\sum_{j=1}^{M_t} D_{t,j}^2}; \f]; should not be to low or high compared to \f$ R\f$ from the training; sample. Also, multiple correlation coefficient from both samples should; be fairly close, otherwise one of the samples is not representative of; the problem. A large difference in the reduced \f$ \chi^2\f$ over the two; samples indicate an over fit, and the maximum number of terms in the; parameterisation should be reduced. It's possible to use [4] to further improve the fit, using the test sample. Christian Holm. ## Bibliography; - <a name=""bevington""></a> Philip R. Bevington and D. Keith Robinson. *Data Reduction and Error Analysis for; the Physical Sciences*. McGraw-Hill, 2 edition, 1992.; - <a name=""mudifi""></a> R. Brun et al. *Long writeup DD/75-23*, CERN, 1980.; - Gene H. Golub and Charles F. van Loan. *Matrix Computations*.; John Hopkins University Press, Baltimore, 3 edition, 1996.; - <a name=""minuit""></a>F. James. *Minuit*. Long writeup D506, CERN, 1998.; - <a name=""wind72""></a>H. Wind. *Function parameterization*. Proceedings of the 1972 CERN Computing and Data Processing; School, volume 72-21 of Yellow report. CERN, 1972.; - <a name=""wind81""></a>H. Wind. 1. principal component analysis, 2. pattern recognition for track; finding, 3. interpolation and functional representation. Yellow report EP/81-12, CERN, 1981. [1]: classTMultiDimFit.html#bevington; [2]: classTMultiDimFit.html#mudifi; [4]: classTMultiDimFit.html#minuit; [5]: classTMultiDimFit.html#wind72; [6]: classTMultiDimFit.html#wind81; [9]: classTMultiDimFit.html#eq:dS2; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:17595,Error,Error,17595,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['Error'],['Error']
Availability,"'''FIXME!; This function is a workaround. On osx, it is impossible to link against; libzmq.so, among the others. The error is known and is; ""ld: can't link with bundle (MH_BUNDLE) only dylibs (MH_DYLIB)""; We cannot at the moment force Aclic to change the linker command in order; to exclude these libraries, so we launch a second root session to compile; the library, which we then load.; '''",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:117,error,error,117,bindings/jupyroot/python/JupyROOT/helpers/utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py,1,['error'],['error']
Availability,"'url'.; /// If 'url' is a '|'-separated list of file URLs, the 'URLs' are tried; /// sequentially in the specified order until a successful open.; /// If the file starts with ""root:"", ""roots:"" or ""rootk:"" a TNetFile object; /// will be returned, with ""http:"" a TWebFile, with ""file:"" a local TFile,; /// etc. (see the list of TFile plugin handlers in $ROOTSYS/etc/system.rootrc; /// for regular expressions that will be checked) and as last a local file will; /// be tried.; /// Before opening a file via TNetFile a check is made to see if the URL; /// specifies a local file. If that is the case the file will be opened; /// via a normal TFile. To force the opening of a local file via a; /// TNetFile use either TNetFile directly or specify as host ""localhost"".; /// The netopt argument is only used by TNetFile. For the meaning of the; /// options and other arguments see the constructors of the individual; /// file classes. In case of error, it returns a nullptr.; ///; /// For TFile implementations supporting asynchronous file open, see; /// TFile::AsyncOpen(...), it is possible to request a timeout with the; /// option <b>`TIMEOUT=<secs>`</b>: the timeout must be specified in seconds and; /// it will be internally checked with granularity of one millisec.; /// For remote files there is the option: <b>CACHEREAD</b> opens an existing; /// file for reading through the file cache. The file will be downloaded to; /// the cache and opened from there. If the download fails, it will be opened remotely.; /// The file will be downloaded to the directory specified by SetCacheFileDir().; ///; /// *The caller is responsible for deleting the pointer.*; /// In READ mode, a nullptr is returned if the file does not exist or cannot be opened.; /// In CREATE mode, a nullptr is returned if the file already exists or cannot be created.; /// In RECREATE mode, a nullptr is returned if the file can not be created.; /// In UPDATE mode, a nullptr is returned if the file cannot be created or opened.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:1836,down,downloaded,1836,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,3,['down'],"['download', 'downloaded']"
Availability,"(""[]"");. // Now draw data set (2). // We first have to draw it only with the stat errors; auto graph2 = new TGraphErrors(5, x, y2, zero, ey_stat2);; graph2->SetMarkerStyle(24);; graph2->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");; }; End_Macro. \anchor GrP3b; #### TGraphAsymmErrors; A `TGraphAsymmErrors` is like a `TGraphErrors` but the errors; defined along X and Y are not symmetric: The left and right errors are; different along X and the bottom and up errors are different along Y. Begin_Macro(source); {; auto c44 = new TCanvas(""c44"",""c44"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double aexh[] = {0.5, 0.4, 0.3, 0.2, 0.1};; double aeyl[] = {1, 0.5, 1, 0.5, 1};; double aeyh[] = {0.5, 1, 0.5, 1, 0.5};; auto gae = new TGraphAsymmErrors(5, ax, ay, aexl, aexh, aeyl, aeyh);; gae->SetTitle(""Not symmetric errors"");; gae->SetFillColor(2);; gae->SetFillStyle(3001);; gae->Draw(""a2"");; gae->Draw(""p"");; }; End_Macro. \anchor GrP3c; #### TGraphBentErrors; A `TGraphBentErrors` is like a `TGraphAsymmErrors`.; An extra parameter allows to bend the error bars to better see them; when several graphs are drawn on the same plot. Begin_Macro(source); {; auto c45 = new TCanvas(""c45"",""c45"",200,10,600,400);; const Int_t n = 10;; Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; auto gr = new TGra",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:11659,error,errors,11659,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['errors']
Availability,"() to specify background; sources</li>; <li>repeated calls to AddSysError() to specify systematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Description of (systematic) uncertainties available in; TUnfoldSys. There are covariance matrix contributions and there are; systematic shifts. Systematic shifts correspond to the variation of a; (buicance) parameter, for example a background normalisation or a; one-sigma variation of a correlated systematic error.; <table>; <tr><th> </th><th>Set by</th>; <th>Access covariance matrix</th>; <th>Access vector of shifts</th>; <th>Description</th>; </tr>; <tr>; <td>(a)</td><td>TUnfoldSys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the histogram. These are typically statistical errors; from finite Monte Carlo samples.</td>; </tr>; <tr>; <td>(b)</td><td>AddSysError()</td><td>GetEmatrixSysSource()</td>; <td>GetDeltaSysSource()</td>; <td>correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure. Several; such error sources may be defined</td>; </tr>; <tr>; <td>(c)</td><td>SetTauError()</td><td>GetEmatrixSysTau()</td>; <td>GetDeltaSysTau()</td>; <td>A systematic error on the regularisation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:3766,error,errors,3766,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,2,['error'],['errors']
Availability,"(\ref EFF05c); - [VI. Further operations](\ref EFF06); - [VI.1 Information about the internal histograms](\ref EFF061); - [VI.2 Fitting](\ref EFF062); - [VI.3 Draw a TEfficiency object](\ref EFF063); - [VI.4 TEfficiency object's axis customisation](\ref EFF064). \anchor EFF01; ## I. Overview; This class handles the calculation of efficiencies and their uncertainties. It; provides several statistical methods for calculating frequentist and Bayesian; confidence intervals as well as a function for combining several efficiencies. Efficiencies have a lot of applications and meanings but in principle, they can; be described by the fraction of good/passed events k out of sample containing; N events. One is usually interested in the dependency of the efficiency on other; (binned) variables. The number of passed and total events is therefore stored; internally in two histograms (TEfficiency::fTotalHistogram and TEfficiency::fPassedHistogram).; Then the efficiency, as well as its upper and lower error, can be calculated for each bin; individually. As the efficiency can be regarded as a parameter of a binomial distribution, the; number of passed and total events must always be integer numbers. Therefore a; filling with weights is not possible. However, you can assign a global weight to each; TEfficiency object (TEfficiency::SetWeight).; It is necessary to create one TEfficiency object; for each weight if you investigate a process involving different weights. This; procedure needs more effort but enables you to re-use the filled object in cases; where you want to change one or more weights. This would not be possible if all; events with different weights were filled in the same histogram. \anchor EFF02; ## II. Creating a TEfficiency object; If you start a new analysis, it is highly recommended to use the TEfficiency class; from the beginning. You can then use one of the constructors for fixed or; variable bin size and your desired dimension. These constructors append the; creat",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:1751,error,error,1751,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['error'],['error']
Availability,") == DISABLE ) ... @endcode; * <li> Cumulative option (-v verbose, -vv more verbose, -vvv even more verbose):; * @code int verbosity = options[VERBOSE].count(); @endcode; * <li> Iterate over all --file=&lt;fname> arguments:; * @code for (Option* opt = options[FILE]; opt; opt = opt->next()); * fname = opt->arg; ... @endcode; * <li> If you really want to, you can still process all arguments in order:; * @code; * for (int i = 0; i < p.optionsCount(); ++i) {; * Option& opt = buffer[i];; * switch(opt.index()) {; * case HELP: ...; * case VERBOSE: ...; * case FILE: fname = opt.arg; ...; * case UNKNOWN: ...; * @endcode; * </ul>; * </ul> @n; * Despite these features the code size remains tiny.; * It is smaller than <a href=""http://uclibc.org"">uClibc</a>'s GNU getopt() and just a; * couple 100 bytes larger than uClibc's SUSv3 getopt(). @n; * (This does not include the usage formatter, of course. But you don't have to use that.); *; * @par Download:; * Tarball with examples and test programs:; * <a style=""font-size:larger;font-weight:bold"" href=""http://sourceforge.net/projects/optionparser/files/optionparser-1.3.tar.gz/download"">optionparser-1.3.tar.gz</a> @n; * Just the header (this is all you really need):; * <a style=""font-size:larger;font-weight:bold"" href=""http://optionparser.sourceforge.net/optionparser.h"">optionparser.h</a>; *; * @par Changelog:; * <b>Version 1.3:</b> Compatible with Microsoft Visual C++. @n; * <b>Version 1.2:</b> Added @ref ROOT::option::Option::namelen ""Option::namelen"" and removed the extraction; * of short option characters into a special buffer. @n; * Changed @ref ROOT::option::Arg::Optional ""Arg::Optional"" to accept arguments if they are attached; * rather than separate. This is what GNU getopt() does and how POSIX recommends; * utilities should interpret their arguments.@n; * <b>Version 1.1:</b> Optional mode with argument reordering as done by GNU getopt(), so that; * options and non-options can be mixed. See; * @ref ROOT::option::Parser::parse(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:2305,Down,Download,2305,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['Down'],['Download']
Availability,"); //error on first parameter; /// ~~~; ///; /// ##### Associated functions; ///; /// One or more object ( can be added to the list; /// of functions (fFunctions) associated to each histogram.; /// When TH1::Fit is invoked, the fitted function is added to the histogram list of functions (fFunctions).; /// If the histogram is made persistent, the list of associated functions is also persistent.; /// Given a histogram h, one can retrieve an associated function with:; ///; /// ~~~ {.cpp}; /// TF1 *myfunc = h->GetFunction(""myfunc"");; /// ~~~; /// or by quering directly the list obtained by calling `TH1::GetListOfFunctions`.; ///; /// \anchor HFitStatus; /// ### Fit status; ///; /// The status of the fit is obtained converting the TFitResultPtr to an integer; /// independently if the fit option ""S"" is used or not:; ///; /// ~~~ {.cpp}; /// TFitResultPtr r = h->Fit(myFunc,opt);; /// Int_t fitStatus = r;; /// ~~~; ///; /// - `status = 0` : the fit has been performed successfully (i.e no error occurred).; /// - `status < 0` : there is an error not connected with the minimization procedure, for example when a wrong function is used.; /// - `status > 0` : return status from Minimizer, depends on used Minimizer. For example for TMinuit and Minuit2 we have:; /// - `status = migradStatus + 10*minosStatus + 100*hesseStatus + 1000*improveStatus`.; /// TMinuit returns 0 (for migrad, minos, hesse or improve) in case of success and 4 in case of error (see the documentation of TMinuit::mnexcm). For example, for an error; /// only in Minos but not in Migrad a fitStatus of 40 will be returned.; /// Minuit2 returns 0 in case of success and different values in migrad,minos or; /// hesse depending on the error. See in this case the documentation of; /// Minuit2Minimizer::Minimize for the migrad return status, Minuit2Minimizer::GetMinosError for the; /// minos return status and Minuit2Minimizer::Hesse for the hesse return status.; /// If other minimizers are used see their specific documenta",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:12217,error,error,12217,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability,");; c47->cd(2); gr->Draw(""AB1"");; }; End_Macro. \anchor GrP2; ### Exclusion graphs. When a graph is painted with the option `C` or `L` it is; possible to draw a filled area on one side of the line. This is useful to show; exclusion zones. This drawing mode is activated when the absolute value of the graph line; width (set by `SetLineWidth()`) is greater than 99. In that; case the line width number is interpreted as:. 100*ff+ll = ffll. - The two digits number `ll` represent the normal line width; - The two digits number `ff` represent the filled area width.; - The sign of ""ffll"" allows to flip the filled area from one side of the line to the other. The current fill area attributes are used to draw the hatched zone. Begin_Macro(source); ../../../tutorials/graphs/exclusiongraph.C; End_Macro. \anchor GrP3; ### Graphs with error bars; Three classes are available to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws add",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:5474,error,error,5474,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability,"* <tr><td> `Strategy(Int_t flag)` <td> Set Minuit strategy (0 to 2, default is 1); * <tr><td> `MaxCalls(int n)` <td> Change maximum number of likelihood function calls from MINUIT (if `n <= 0`, the default of 500 * #%parameters is used); * <tr><td> `EvalErrorWall(bool flag=true)` <td> When parameters are in disallowed regions (e.g. PDF is negative), return very high value to fitter; * to force it out of that region. This can, however, mean that the fitter gets lost in this region. If; * this happens, try switching it off.; * <tr><td> `RecoverFromUndefinedRegions(double strength)` <td> When PDF is invalid (e.g. parameter in undefined region), try to direct minimiser away from that region.; * `strength` controls the magnitude of the penalty term. Leaving out this argument defaults to 10. Switch off with `strength = 0.`.; *; * <tr><td> `SumW2Error(bool flag)` <td> Apply correction to errors and covariance matrix.; * This uses two covariance matrices, one with the weights, the other with squared weights,; * to obtain the correct errors for weighted likelihood fits. If this option is activated, the; * corrected covariance matrix is calculated as \f$ V_\mathrm{corr} = V C^{-1} V \f$, where \f$ V \f$ is the original; * covariance matrix and \f$ C \f$ is the inverse of the covariance matrix calculated using the; * squared weights. This allows to switch between two interpretations of errors:; * <table>; * <tr><th> SumW2Error <th> Interpretation; * <tr><td> true <td> The errors reflect the uncertainty of the Monte Carlo simulation.; * Use this if you want to know how much accuracy you can get from the available Monte Carlo statistics.; *; * **Example**: Simulation with 1000 events, the average weight is 0.1.; * The errors are as big as if one fitted to 1000 events.; * <tr><td> false <td> The errors reflect the errors of a dataset, which is as big as the sum of weights.; * Use this if you want to know what statistical errors you would get if you had a dataset with as many; * e",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:3733,error,errors,3733,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['error'],['errors']
Availability,"* For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeViewer; A graphic user interface designed to handle ROOT trees and to take advantage of; TTree class features. It uses ROOT native GUI widgets adapted for ""drag and drop"" functionality.; in the same session. ### The following capabilities are making the viewer a helpful tool for analysis:. - several trees may be opened in the same session;; - branches and leaves can be easily browsed or scanned;; - fast drawing of branch expressions by double-clicking;; - new variables/selections easy to compose with the built-in editor;; - histograms can be composed by dragging leaves or user-defined expressions; to X, Y and Z axis items;; - the tree entries to be processed can be selected with a double slider;; - selections can be defined and activated by dragging them to the 'Cut' item;; - all expressions can be aliased and aliases can be used in composing others;; - input/output event lists easy to handle;; - menu with histogram drawing options;; - user commands may be executed within the viewer and the current command; can be echoed;; - current 'Draw' event loop is reflected by a progress bar and may be; interrupted by the user;; - all widgets have self-explaining tool tips and/or context menus;; - expressions/leaves can be dragged to a 'scan box' and scanned by; double-clicking this item. The result can be redirected to an ASCII file;. ### The layout has the following items:. - a menu bar with entries : File, Edit, Run, Options and Help;; - a toolbar in the upper part where you can issue user commands, change; the drawing option and the histogram name, three check buttons Hist, Rec; and Scan.HIST toggles histogram drawing mode, REC enables recording of the; last command issued and SCAN enables redirecting of TTree::Scan command in; an ASCII file (see -Scanning expressions-);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:1511,echo,echoed,1511,tree/treeviewer/src/TTreeViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx,1,['echo'],['echoed']
Availability,"* processes are inner loops and need to be as fast as possible. On most; * machines, particularly CPUs with pipelines or instruction prefetch,; * a (subscript-check-less) C table lookup; *		x = sample_range_limit[x];; * is faster than explicit tests; *		if (x < 0) x = 0;; *		else if (x > MAXJSAMPLE) x = MAXJSAMPLE;; * These processes all use a common table prepared by the routine below.; *; * For most steps we can mathematically guarantee that the initial value; * of x is within MAXJSAMPLE+1 of the legal range, so a table running from; * -(MAXJSAMPLE+1) to 2*MAXJSAMPLE+1 is sufficient. But for the initial; * limiting step (just after the IDCT), a wildly out-of-range value is ; * possible if the input data is corrupt. To avoid any chance of indexing; * off the end of memory and getting a bad-pointer trap, we perform the; * post-IDCT limiting thus:; *		x = range_limit[x & MASK];; * where MASK is 2 bits wider than legal sample data, ie 10 bits for 8-bit; * samples. Under normal circumstances this is more than enough range and; * a correct output will be generated; with bogus input data the mask will; * cause wraparound, and we will safely generate a bogus-but-in-range output.; * For the post-IDCT step, we want to convert the data from signed to unsigned; * representation by adding CENTERJSAMPLE at the same time that we limit it.; * So the post-IDCT limiting table ends up looking like this:; * CENTERJSAMPLE,CENTERJSAMPLE+1,...,MAXJSAMPLE,; * MAXJSAMPLE (repeat 2*(MAXJSAMPLE+1)-CENTERJSAMPLE times),; * 0 (repeat 2*(MAXJSAMPLE+1)-CENTERJSAMPLE times),; * 0,1,...,CENTERJSAMPLE-1; * Negative inputs select values from the upper half of the table after; * masking.; *; * We can save some space by overlapping the start of the post-IDCT table; * with the simpler range limiting table. The post-IDCT table begins at; * sample_range_limit + CENTERJSAMPLE.; *; * Note that the table is allocated in near data space on PCs; it's small; * enough and used often enough to justify this.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c:1325,mask,mask,1325,graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,2,['mask'],"['mask', 'masking']"
Availability,"* the child's standard input is attached to /dev/null).; * %G_SPAWN_FILE_AND_ARGV_ZERO means that the first element of @argv is; * the file to execute, while the remaining elements are the; * actual argument vector to pass to the file. Normally; * g_spawn_async_with_pipes() uses @argv[0] as the file to execute, and; * passes all of @argv to the child.; *; * @child_setup and @user_data are a function and user data to be; * called in the child after GLib has performed all the setup it plans; * to perform (including creating pipes, closing file descriptors,; * etc.) but before calling exec(). That is, @child_setup is called; * just before calling exec() in the child. Obviously actions taken in; * this function will only affect the child, not the parent. ; *; * If non-NULL, @child_pid will be filled with the child's process; * ID. You can use the process ID to send signals to the child, or; * to waitpid() if you specified the %G_SPAWN_DO_NOT_REAP_CHILD flag.; *; * If non-NULL, the @standard_input, @standard_output, @standard_error; * locations will be filled with file descriptors for writing to the child's; * standard input or reading from its standard output or standard error.; * The caller of g_spawn_async_with_pipes() must close these file descriptors; * when they are no longer in use. If these parameters are NULL, the; * corresponding pipe won't be created.; *; * @error can be NULL to ignore errors, or non-NULL to report errors.; * If an error is set, the function returns FALSE. Errors; * are reported even if they occur in the child (for example if the; * executable in <literal>argv[0]</literal> is not found). Typically; * the <literal>message</literal> field of returned errors should be displayed; * to users. Possible errors are those from the #G_SPAWN_ERROR domain.; *; * If an error occurs, @child_pid, @standard_input, @standard_output,; * and @standard_error will not be filled with valid values.; * ; * Return value: TRUE on success, FALSE if an error was set; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c:3668,error,error,3668,graf2d/win32gdk/gdk/src/glib/gspawn.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c,10,"['Error', 'error']","['Errors', 'error', 'errors']"
Availability,"** \class TParallelCoord; Parallel Coordinates class. The multidimensional system of Parallel coordinates is a common way of studying; high-dimensional geometry and visualizing multivariate problems. It has first; been proposed by A. Inselberg in 1981. To show a set of points in an n-dimensional space, a backdrop is drawn; consisting of n parallel lines. A point in n-dimensional space is represented as; a polyline with vertices on the parallel axes; the position of the vertex on the; i-th axis corresponds to the i-th coordinate of the point. This tool comes with a rather large gui in the editor. It is necessary to use; this editor in order to explore a data set, as explained below. ### Reduce cluttering:. The main issue for parallel coordinates is the very high cluttering of the; output when dealing with large data set. Two techniques have been implemented to; bypass that so far:. - Draw doted lines instead of plain lines with an adjustable dots spacing. A; slider to adjust the dots spacing is available in the editor.; - Sort the entries to display with a ""weight cut"". On each axis is drawn a; histogram describing the distribution of the data on the corresponding; variable. The ""weight"" of an entry is the sum of the bin content of each bin; the entry is going through. An entry going through the histograms peaks will; have a big weight wether an entry going randomly through the histograms will; have a rather small weight. Setting a cut on this weight allows to draw only; the most representative entries. A slider set the cut is also available in; the gui. ## Selections:. Selections of specific entries can be defined over the data se using parallel; coordinates. With that representation, a selection is an ensemble of ranges; defined on the axes. Ranges defined on the same axis are conjugated with OR; (an entry must be in one or the other ranges to be selected). Ranges on; different axes are are conjugated with AND (an entry must be in all the ranges; to be selected). Se",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:1010,avail,available,1010,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,1,['avail'],['available']
Availability,"************************************************************************; * Some parts of this source are based on libAfterImage 2.00.00; * (http://www.afterstep.org/); *; * Copyright (c) 2002 Sasha Vasko <sasha@aftercode.net>; * Copyright (c) 1998, 1999 Ethan Fischer <allanon@crystaltokyo.com>; *; * This program is free software; you can redistribute it and/or modify; * it under the terms of the GNU Library General Public License as; * published by the Free Software Foundation; either version 2 of the; * License, or (at your option) any later version.; *; * This program is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; * GNU General Public License for more details.; *; * You should have received a copy of the GNU Library General Public; * License along with this program; if not, write to the Free Software; * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.; *; **************************************************************************/; /** \class TASImage; \ingroup asimage. Image class. TASImage is the concrete interface to the image processing library; libAfterImage. It allows reading and writing of images in different formats, several image; manipulations (scaling, tiling, merging, etc.) and displaying in pads. The size; of the image on the screen does not depend on the original size of the image but; on the size of the pad. Therefore it is very easy to resize the image on the; screen by resizing the pad. Besides reading an image from a file an image can be defined by a two; dimensional array of values. A palette defines the color of each value. The image can be zoomed by defining a rectangle with the mouse. The color; palette can be modified with a GUI, just select StartPaletteEditor() from the; context menu. Several examples showing how to use this class are available in the; ROOT tutorials: `$ROOTSYS/tutorials/image/`; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx:2453,avail,available,2453,graf2d/asimage/src/TASImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx,1,['avail'],['available']
Availability,"********************************************************************/; /// \defgroup fitsio FITS file; /// \brief Interface to FITS file.; /// \ingroup Graphics2D; ///; /// TFITS is an interface that lets you reading Flexible Image Transport System; /// (FITS) files, which are generally used in astronomy. This file format; /// was standardized 1981 and today is still widely used among professional; /// and amateur astronomers. FITS is not only an image file, but also; /// it can contain spectrums, data tables, histograms, and multidimensional; /// data. Furthermore, FITS data can be described itself by containing; /// human-readable information that let us to interpret the data within; /// the FITS file. For example, a FITS could contain a 3D data cube,; /// but an additional description would tell us that we must read it, for; /// example, as a 3-layer image.; ///; /// TFITS requires CFITSIO library to be installed on your system. It; /// is currently maintained by NASA/GSFC and can be downloaded from; /// [NASA/GSFC web site](http://fits.gsfc.nasa.gov), as well as documentation.; ///; /// Using this interface is easy and straightforward. There is only 1 class; /// called ""TFITSHDU"" which has several methods to extract data from a; /// FITS file, more specifically, from an HDU within the file. An HDU, or; /// Header Data Unit, is a chunk of data with a header containing several; /// ""keyword = value"" tokens. The header describes the structure of data; /// within the HDU. An HDU can be of two types: an ""image HDU"" or a ""table; /// HDU"". The former can be any kind of multidimensional array of real numbers,; /// by which the name ""image"" may be confusing: you can store an image, but; /// you can also store a N-dimensional data cube. On the other hand, table; /// HDUs are sets of several rows and columns (a.k.a fields) which contain; /// generic data, as strings, real or complex numbers and even arrays.; ///; /// Please have a look to the tutorials ($ROOTSYS/tutorials/f",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx:1358,down,downloaded,1358,graf2d/fitsio/src/TFITS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx,1,['down'],['downloaded']
Availability,"******************************; // For selecting load and store instructions, the addressing modes are defined; // as ComplexPatterns in PPCInstrInfo.td, which are then utilized in the TD; // patterns to match the load the store instructions.; //; // The TD definitions for the addressing modes correspond to their respective; // Select<AddrMode>Form() function in PPCISelDAGToDAG.cpp. These functions rely; // on SelectOptimalAddrMode(), which calls computeMOFlags() to compute the; // address mode flags of a particular node. Afterwards, the computed address; // flags are passed into getAddrModeForFlags() in order to retrieve the optimal; // addressing mode. SelectOptimalAddrMode() then sets the Base and Displacement; // accordingly, based on the preferred addressing mode.; //; // Within PPCISelLowering.h, there are two enums: MemOpFlags and AddrMode.; // MemOpFlags contains all the possible flags that can be used to compute the; // optimal addressing mode for load and store instructions.; // AddrMode contains all the possible load and store addressing modes available; // on Power (such as DForm, DSForm, DQForm, XForm, etc.); //; // When adding new load and store instructions, it is possible that new address; // flags may need to be added into MemOpFlags, and a new addressing mode will; // need to be added to AddrMode. An entry of the new addressing mode (consisting; // of the minimal and main distinguishing address flags for the new load/store; // instructions) will need to be added into initializeAddrModeMap() below.; // Finally, when adding new addressing modes, the getAddrModeForFlags() will; // need to be updated to account for selecting the optimal addressing mode.; // *****************************************************************************; /// Initialize the map that relates the different addressing modes of the load; /// and store instructions to a set of flags. This ensures the load/store; /// instruction is correctly matched during instruction selection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:1121,avail,available,1121,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['avail'],['available']
Availability,"**************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvolution.cxx; \class RooNumConvolution; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1093,avail,available,1093,roofit/roofitcore/src/RooNumConvolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx,1,['avail'],['available']
Availability,"*************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMCStudy.cxx; \class RooMCStudy; \ingroup Roofitcore. Helper class to facilitate Monte Carlo studies; such as 'goodness-of-fit' studies, that involve fitting a PDF; to multiple toy Monte Carlo sets. These may be generated from either same PDF; or from a different PDF with similar parameters. Given a fit and a generator PDF (they might be identical), RooMCStudy can produce; toyMC samples and/or fit these.; It accumulates the post-fit parameters of each iteration in a dataset. These can be; retrieved using fitParams() or fitParDataSet(). This dataset additionally contains the; variables; - NLL: The value of the negative log-likelihood for each run.; - ngen: The number of events generated for each run. Additional plotting routines simplify the task of plotting; the distribution of the minimized likelihood, the fitted parameter values,; fitted error and pull distribution. RooMCStudy provides the option to insert add-in modules; that modify the generate-and-fit cycle and allow to perform; extra steps in the cycle. Output of these modules can be stored; alongside the fit results in the aggregate results dataset.; These study modules should derive from the class RooAbsMCStudyModule. Check the RooFit tutorials; - rf801_mcstudy.C; - rf802_mcstudy_addons.C; - rf803_mcstudy_addons2.C; - rf804_mcstudy_constr.C; for usage examples.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:1560,error,error,1560,roofit/roofitcore/src/RooMCStudy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx,1,['error'],['error']
Availability,"*************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::GiniIndex *; * *; * *; * Description: Implementation of the GiniIndex as separation criterion *; * Large Gini Indices (maximum 0.5) mean , that the sample is well *; * mixed (same amount of signal and bkg) *; * bkg. Small Indices mean, well separated. *; * general definition: *; * Gini(Sample M) = 1 - (c(1)/N)^2 - (c(2)/N)^2 .... - (c(k)/N)^2 *; * Where: M is a sample of whatever N elements (events) *; * that belong to K different classes *; * c(k) is the number of elements that belong to class k *; * for just Signal and Background classes this boils down to: *; * Gini(Sample) = 2s*b/(s+b)^2 *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::GiniIndex; \ingroup TMVA. Implementation of the GiniIndex as separation criterion. Large Gini Indices (maximum 0.5) mean , that the sample is well mixed (same; amount of signal and bkg) bkg. Small Indices mean, well separated. #### General definition:. \f[; Gini(Sample M) = 1 - (\frac{c(1)}{N})^2 - (\frac{c(2)}{N})^2 .... - (\frac{c(k)}{N})^2; \f]. Where:. \f$ M \f$ is a sample of whatever \f$ N \f$ elements (events) that belong; to \f$ K \f$ different classes. \f$ c(k) \f$ is the number of elements that belong to class \f$ k \f$ for just; Signal and Background classes this boils down to:. \f[; Gini(Sample) = \frac{2sb}{(s+b)^2}; \f]; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GiniIndex.cxx:2088,down,down,2088,tmva/tmva/src/GiniIndex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GiniIndex.cxx,1,['down'],['down']
Availability,"**********************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualFFT; \ingroup Base. TVirtualFFT is an interface class for Fast Fourier Transforms. The default FFT library is FFTW. To use it, FFTW3 library should already; be installed, and ROOT should be have fftw3 module enabled, with the directories; of fftw3 include file and library specified (see installation instructions).; Function SetDefaultFFT() allows to change the default library. ## Available transform types:; FFT:; - ""C2CFORWARD"" - a complex input/output discrete Fourier transform (DFT); in one or more dimensions, -1 in the exponent; - ""C2CBACKWARD""- a complex input/output discrete Fourier transform (DFT); in one or more dimensions, +1 in the exponent; - ""R2C"" - a real-input/complex-output discrete Fourier transform (DFT); in one or more dimensions,; - ""C2R"" - inverse transforms to ""R2C"", taking complex input; (storing the non-redundant half of a logically Hermitian array); to real output; - ""R2HC"" - a real-input DFT with output in ¡Èhalfcomplex¡É format,; i.e. real and imaginary parts for a transform of size n stored as; r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1; - ""HC2R"" - computes the reverse of FFTW_R2HC, above; - ""DHT"" - computes a discrete Hartley transform. ## Sine/cosine transforms:; Different types of transforms are specified by parameter kind of the SineCosine() static; function. 4 different kinds of sine and cosine transforms are available. - DCT-I (REDFT00 in FFTW3 notation)- kind=0; - DCT-II (REDFT01 in FFTW3 notation)- kind=1; - DCT-III(REDFT10 in FFTW3 notation)- kind=2; - DCT-IV (REDFT11 in FFTW3 notation)- kind=3; - DST-I (RODFT00 in FFTW3 notation)- kind=4; - DST-II (RODFT01 in FFTW3 notation)- kind=5; - DST-III(RODFT10 in FFT",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:819,Avail,Available,819,core/base/src/TVirtualFFT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx,2,"['Avail', 'redundant']","['Available', 'redundant']"
Availability,"********************/; /** \class TRobustEstimator; \note Despite being in the group of Legacy statistics classes, TRobustEstimator is still useful and no drop-in replacement exists for it.; \ingroup Physics; Minimum Covariance Determinant Estimator - a Fast Algorithm; invented by Peter J.Rousseeuw and Katrien Van Dreissen; ""A Fast Algorithm for the Minimum covariance Determinant Estimator""; Technometrics, August 1999, Vol.41, NO.3. What are robust estimators?; ""An important property of an estimator is its robustness. An estimator; is called robust if it is insensitive to measurements that deviate; from the expected behaviour. There are 2 ways to treat such deviating; measurements: one may either try to recognise them and then remove; them from the data sample; or one may leave them in the sample, taking; care that they do not influence the estimate unduly. In both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected.""; R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz; ""Data Analysis Techniques for High-Energy Physics"", 2nd edition. What does this algorithm do?; It computes a highly robust estimator of multivariate location and scatter.; Then, it takes those estimates to compute robust distances of all the; data vectors. Those with large robust distances are considered outliers.; Robust distances can then be plotted for better visualization of the data. How does this algorithm do it?; The MCD objective is to find h observations(out of n) whose classical; covariance matrix has the lowest determinant. The MCD estimator of location; is then the average of those h points and the MCD estimate of scatter; is their covariance matrix. The minimum(and default) h = (n+nvariables+1)/2; so the algorithm is effective when less than (n+nvar+1)/2 variables are outliers.; The algorithm also allows for exact fit situations - that is",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx:1313,Robust,Robust,1313,math/physics/src/TRobustEstimator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx,3,"['Robust', 'error', 'reliab']","['Robust', 'errors', 'reliably']"
Availability,"************; * Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMultiLayerPerceptron. This class describes a neural network.; There are facilities to train the network and use the output. The input layer is made of inactive neurons (returning the; optionally normalized input) and output neurons are linear.; The type of hidden neurons is free, the default being sigmoids.; (One should still try to pass normalized inputs, e.g. between [0.,1]). The basic input is a TTree and two (training and test) TEventLists.; Input and output neurons are assigned a value computed for each event; with the same possibilities as for TTree::Draw().; Events may be weighted individually or via TTree::SetWeight().; 6 learning methods are available: kStochastic, kBatch,; kSteepestDescent, kRibierePolak, kFletcherReeves and kBFGS. This implementation, written by C. Delaere, is *inspired* from; the mlpfit package from J.Schwindling et al. with some extensions:. - the algorithms are globally the same; - in TMultilayerPerceptron, there is no limitation on the number of; layers/neurons, while MLPFIT was limited to 2 hidden layers; - TMultilayerPerceptron allows you to save the network in a root file, and; provides more export functionalities; - TMultilayerPerceptron gives more flexibility regarding the normalization of; inputs/outputs; - TMultilayerPerceptron provides, thanks to Andrea Bocci, the possibility to; use cross-entropy errors, which allows to train a network for pattern; classification based on Bayesian posterior probability. ### Introduction. Neural Networks are more and more used in various fields for data; analysis and classification, both for research and commercial; institutions. Some randomly chosen examples are:. - image analysis; - financi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:1099,avail,available,1099,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['avail'],['available']
Availability,"********; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooAbsPdf; \ingroup Roofitcore; \brief Abstract interface for all probability density functions. ## RooAbsPdf, the base class of all PDFs. RooAbsPdf is the base class for all probability density; functions (PDFs). The class provides hybrid analytical/numerical; normalization for its implementations, error tracing, and a Monte Carlo; generator interface. ### A Minimal PDF Implementation. A minimal implementation of a PDF class derived from RooAbsPdf; should override the `evaluate()` function. This function should; return the PDF's value (which does not need to be normalised). #### Normalization/Integration. Although the normalization of a PDF is an integral part of a; probability density function, normalization is treated separately; in RooAbsPdf. The reason is that a RooAbsPdf object is more than a; PDF: it can be a building block for a more complex composite PDF; if any of its variables are functions instead of variables. In; such cases, the normalization of the composite PDF may not simply be; integral over the dependents of the top-level PDF: these are; functions with potentially non-trivial Jacobian terms themselves.; \note Therefore, no explicit attempt should be made to normalize the; function output in evaluate(). In particular, normalisation constants; can",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:1087,error,error,1087,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['error'],['error']
Availability,"*; * When need_context_rows is TRUE, this controller guarantees that the buffer; * passed to postprocessing contains at least one row group's worth of samples; * above and below the row group(s) being processed. Note that the context; * rows ""above"" the first passed row group appear at negative row offsets in; * the passed buffer. At the top and bottom of the image, the required; * context rows are manufactured by duplicating the first or last real sample; * row; this avoids having special cases in the upsampling inner loops.; *; * The amount of context is fixed at one row group just because that's a; * convenient number for this controller to work with. The existing; * upsamplers really only need one sample row of context. An upsampler; * supporting arbitrary output rescaling might wish for more than one row; * group of context when shrinking the image; tough, we don't handle that.; * (This is justified by the assumption that downsizing will be handled mostly; * by adjusting the DCT_scaled_size values, so that the actual scale factor at; * the upsample step needn't be much less than one.); *; * To provide the desired context, we have to retain the last two row groups; * of one iMCU row while reading in the next iMCU row. (The last row group; * can't be processed until we have another row group for its below-context,; * and so we have to save the next-to-last group too for its above-context.); * We could do this most simply by copying data around in our buffer, but; * that'd be very slow. We can avoid copying any data by creating a rather; * strange pointer structure. Here's how it works. We allocate a workspace; * consisting of M+2 row groups (where M = min_DCT_scaled_size is the number; * of row groups per iMCU row). We create two sets of redundant pointers to; * the workspace. Labeling the physical row groups 0 to M+1, the synthesized; * pointer lists look like this:; * M+1 M-1; * master pointer --> 0 master pointer --> 0; * 1 1; * ... ...; * M-3 M-3; * M-2 M; * ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c:2834,down,downsizing,2834,graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,1,['down'],['downsizing']
Availability,"*}{; b_{ij} = \frac{\mathbf{f}_j \bullet \mathbf{w}_i}{\mathbf{w}_i^2}; & \mbox{if} & i < j\\; 1 & \mbox{if} & i = j\\; 0 & \mbox{if} & i > j; \f}; Consequently, \f$\mathsf{B}\f$ is an upper triangle matrix, which can be; readily inverted. So we now evaluate; \f[; \mathsf{F}\mathsf{B}^{-1} = \mathsf{W}; \f]; The model \f$\mathsf{W}\mathbf{a}\f$ can therefore be written as; \f$(\mathsf{F}\mathsf{B}^{-1})\mathbf{a} = \mathsf{F}(\mathsf{B}^{-1}\mathbf{a})\,.\f$. The original model \f$\mathsf{F}\mathbf{c}\f$ is therefore identical with; this if; \f[; \mathbf{c} = \left(\mathsf{B}^{-1}\mathbf{a}\right) =; \left[\mathbf{a}^T\left(\mathsf{B}^{-1}\right)^T\right]^T\,.; \f]; The reason we use \f$\left(\mathsf{B}^{-1}\right)^T\f$ rather then; \f$\mathsf{B}^{-1}\f$ is to save storage, since \f$\left(\mathsf{B}^{-1}\right)^T\f$; can be stored in the same matrix as \f$\mathsf{B}\f$ (TMultiDimFit::MakeCoefficients).; The errors in the coefficients is calculated by inverting the curvature matrix; of the non-orthogonal functions \f$ f_{lj}\f$ [1] (TMultiDimFit::MakeCoefficientErrors). ## Considerations; It's important to realize that the training sample should be; representative of the problem at hand, in particular along the borders; of the region of interest. This is because the algorithm presented; here, is a *interpolation*, rather then a *extrapolation* [5]. Also, the independent variables \f$ x_{i}\f$ need to be linear; independent, since the procedure will perform poorly if they are not; [5]. One can find an linear transformation from ones; original variables \f$ \xi_{i}\f$ to a set of linear independent variables; \f$ x_{i}\f$, using a *Principal Components Analysis* (see TPrincipal), and; then use the transformed variable as input to this class [5] [6]. H. Wind also outlines a method for parameterising a multidimensional; dependence over a multidimensional set of variables. An example; of the method from [5], is a follows (please refer to; [5] for a full discussion):. 1. D",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:13434,error,errors,13434,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['error'],['errors']
Availability,"+ E * 2^(n-e') =; //; // Compute Y by applying distributivity first; //; // Y = (B >> 1) + (A >> 1) + E*2^(n-e') =; // = (b_h * 2^(n-1) + b_m * 2 + b_l) >> 1 +; // + (a_h * 2^(n-1) + a_m * 2) >> 1 +; // + E * 2^(n-e) >> 1 =; //; // Again, the shift is computed by dividing the terms by 2 and by cutting; // off b_l.; //; // = b_h * 2^(n-2) + b_m +; // + a_h * 2^(n-2) + a_m +; // + E * 2^(n-(e+1)) =; //; // Again, the sum is built by putting the overflow of [a_m + b+n] into; // the term 2^(n-1). But this time there is room for a second bit in the; // term 2^(n-2) we add this bit to a new term and denote it o_h in a; // second step.; //; // = ([b_h + a_h + (b_m + a_m) >> (n-2)] >> 1) * 2^(n-1) +; // + ([b_h + a_h + (b_m + a_m) >> (n-2)] % 2) * 2^(n-2) +; // + ((b_m + a_m) % 2^(n-2)) +; // + E * 2^(n-(e+1)) =; //; // Let o_h = [b_h + a_h + (b_m + a_m) >> (n-2)] >> 1; // Further replace e+1 by e'.; //; // = o_h * 2^(n-1) +; // + ([b_h + a_h + (b_m + a_m) >> (n-2)] % 2) * 2^(n-2) +; // + ((b_m + a_m) % 2^(n-2)) +; // + E * 2^(n-e') =; //; // Move o_h into the error term and construct E'. To ensure that there is; // no 2^x with negative x, this step requires pre(2) (e < n).; //; // = ([b_h + a_h + (b_m + a_m) >> (n-2)] % 2) * 2^(n-2) +; // + ((b_m + a_m) % 2^(n-2)) +; // + o_h * 2^(e'-1) * 2^(n-e') + | pre(2), move 2^(e'-1); // | out of the old exponent; // + E * 2^(n-e') =; // = ([b_h + a_h + (b_m + a_m) >> (n-2)] % 2) * 2^(n-2) +; // + ((b_m + a_m) % 2^(n-2)) +; // + [o_h * 2^(e'-1) + E] * 2^(n-e') + | move 2^(e'-1) out of; // | the old exponent; //; // Let E' = o_h * 2^(e'-1) + E; //; // = ([b_h + a_h + (b_m + a_m) >> (n-2)] % 2) * 2^(n-2) +; // + ((b_m + a_m) % 2^(n-2)) +; // + E' * 2^(n-e'); //; // Because X and Y are distinct only in there error terms and E' can be; // constructed as shown the theorem holds.; // [qed]; //; // For completeness in case of the case e=n it is also required to show that; // distributivity can be applied.; //; // In this case Theorem(1) tran",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp:2640,error,error,2640,interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp,1,['error'],['error']
Availability,"+ a_h + (b_m + a_m) >> (n-2)] >> 1) * 2^(n-1) +; // + ([b_h + a_h + (b_m + a_m) >> (n-2)] % 2) * 2^(n-2) +; // + ((b_m + a_m) % 2^(n-2)) +; // + E * 2^(n-(e+1)) =; //; // Let o_h = [b_h + a_h + (b_m + a_m) >> (n-2)] >> 1; // Further replace e+1 by e'.; //; // = o_h * 2^(n-1) +; // + ([b_h + a_h + (b_m + a_m) >> (n-2)] % 2) * 2^(n-2) +; // + ((b_m + a_m) % 2^(n-2)) +; // + E * 2^(n-e') =; //; // Move o_h into the error term and construct E'. To ensure that there is; // no 2^x with negative x, this step requires pre(2) (e < n).; //; // = ([b_h + a_h + (b_m + a_m) >> (n-2)] % 2) * 2^(n-2) +; // + ((b_m + a_m) % 2^(n-2)) +; // + o_h * 2^(e'-1) * 2^(n-e') + | pre(2), move 2^(e'-1); // | out of the old exponent; // + E * 2^(n-e') =; // = ([b_h + a_h + (b_m + a_m) >> (n-2)] % 2) * 2^(n-2) +; // + ((b_m + a_m) % 2^(n-2)) +; // + [o_h * 2^(e'-1) + E] * 2^(n-e') + | move 2^(e'-1) out of; // | the old exponent; //; // Let E' = o_h * 2^(e'-1) + E; //; // = ([b_h + a_h + (b_m + a_m) >> (n-2)] % 2) * 2^(n-2) +; // + ((b_m + a_m) % 2^(n-2)) +; // + E' * 2^(n-e'); //; // Because X and Y are distinct only in there error terms and E' can be; // constructed as shown the theorem holds.; // [qed]; //; // For completeness in case of the case e=n it is also required to show that; // distributivity can be applied.; //; // In this case Theorem(1) transforms to (the pre-condition on A can also be; // dropped); //; // Theorem(2): (B + A + E) >> 1 => (B >> 1) + (A >> 1) + E'; // where; // A, B, E, E' are two's complement numbers with the same bit; // width; //; // Let A + B + E = X; // Let (B >> 1) + (A >> 1) = Y; //; // Therefore we need to show that for every X and Y there is an E' which; // makes the equation; //; // X = Y + E'; //; // hold. This is trivially the case for E' = X - Y.; //; // [qed]; //; // Remark: Distributing lshr with and arbitrary number n can be expressed as; // ((((B + A) lshr 1) lshr 1) ... ) {n times}.; // This construction induces n additional error bits at the left.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp:4201,error,error,4201,interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp,1,['error'],['error']
Availability,", Window parent,; * int x, int y,; * unsigned int width, unsigned int height,; * unsigned int border_width,; * unsigned int wclass,; * unsigned long mask,; * XSetWindowAttributes *attributes );; * INPUTS; * asv - pointer to the valid ASVisual structure.; * parent - Window ID of the parent the window.; * x, y - initial position of the new window.; * width, height - initial size of the new window.; * border_width - initial border width of the new window.; * wclass - Window class - InputOnly or InputOutput.; * mask - defines what attributes are set.; * attributes - different window attributes.; * RETURN VALUE; * ID of the newly created window on success. None on failure.; * DESCRIPTION; * create_visual_window() will do sanity checks on passed parameters,; * it will then add mandatory attributes if needed, and attempt to; * create window for the specified ASVisual.; *********/; /****f* libAfterImage/create_visual_gc(); * NAME; * create_visual_gc(); * SYNOPSIS; * GC create_visual_gc( ASVisual *asv, Window root,; * unsigned long mask, XGCValues *gcvalues );; * INPUTS; * asv - pointer to the valid ASVisual structure.; * root - Window ID of the root window of destination screen; * mask, gcvalues - values for creation of new GC - see XCreateGC() for; * details.; * RETURN VALUE; * New GC created for regular window on success. NULL on failure.; * DESCRIPTION; * create_visual_gc() will create temporary window for the ASVisual; * specific depth and Visual and it will then create GC for such window.; * Obtained GC should be good to be used for manipulation of windows and; * Pixmaps created for the same ASVisual.; *********/; /****f* libAfterImage/create_visual_pixmap(); * NAME; * create_visual_pixmap(); * SYNOPSIS; * Pixmap create_visual_pixmap( ASVisual *asv, Window root,; * unsigned int width, unsigned int height,; * unsigned int depth );; * INPUTS; * asv - pointer to the valid ASVisual structure.; * root - Window ID of the root window of destination screen; * width, height - s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h:1175,mask,mask,1175,graf2d/asimage/src/libAfterImage/asvisual.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h,1,['mask'],['mask']
Availability,", eta*1.1}}"",; variationTags=[""down"", ""up""],; variationName=""ptAndEta""); ~~~. The expression returns an RVec of two RVecs: each inner vector contains the varied values for one column. The; inner vectors follow the same ordering as the column names that are passed as the first argument. Besides the variation tags, in; this case we also have to explicitly pass the variation name (here: ""ptAndEta"") as the default column name does not exist. The above call will produce variations ""ptAndEta:down"" and ""ptAndEta:up"". #### Combining multiple variations. Even if a result depends on multiple variations, only one variation is applied at a time, i.e. there will be no result produced; by applying multiple systematic variations at the same time.; For example, in the following example snippet, the RResultMap instance `all_h` will contain keys ""nominal"", ""pt:down"",; ""pt:up"", ""eta:0"", ""eta:1"", but no ""pt:up&&eta:0"" or similar:. ~~~{.cpp}; auto df = _df.Vary(""pt"",; ""ROOT::RVecD{pt*0.9, pt*1.1}"",; {""down"", ""up""}); .Vary(""eta"",; [](float eta) { return RVecF{eta*0.9f, eta*1.1f}; },; {""eta""},; 2);. auto nom_h = df.Histo2D(histoModel, ""pt"", ""eta"");; auto all_hs = VariationsFor(nom_h);; all_hs.GetKeys(); // returns {""nominal"", ""pt:down"", ""pt:up"", ""eta:0"", ""eta:1""}; ~~~. Note how we passed the integer `2` instead of a list of variation tags to the second Vary() invocation: this is a; shorthand that automatically generates tags 0 to N-1 (in this case 0 and 1). \note Currently, VariationsFor() and RResultMap are in the `ROOT::RDF::Experimental` namespace, to indicate that these; interfaces might still evolve and improve based on user feedback. We expect that some aspects of the related; programming model will be streamlined in future versions. \note Currently, the results of a Snapshot(), Report() or Display() call cannot be varied (i.e. it is not possible to; call \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" on them. These limitations will be lifted in future releases. See t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:58904,down,down,58904,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['down'],['down']
Availability,", float); // - array of simple types (int[5], double[5][6]); // - dynamic array of simple types (int* with comment field // [fSize]); // - const char*; // - object of any nonROOT class; // - pointer on object; // - array of objects; // - array of pointers on objects; // - stl string; // - stl vector, list, deque, set, multiset, map, multimap; // - allowed arguments for stl containers are: simple data types, string, object, pointer on object; // Any other data member can not be (yet) read from xml file and write to xml file.; //; // If data member of class is private or protected, it can not be accessed via; // member name. Two alternative way is supported. First, if for class member fValue; // exists function GetValue(), it will be used to get value from the class, and if; // exists SetValue(), it will be used to set appropriate data member. Names of setter; // and getter methods can be specified in comments filed like:; //; // int fValue; // *OPTION={GetMethod=""GetV"";SetMethod=""SetV""}; //; // If getter or setter methods does not available, address to data member will be; // calculated as predefined offset to object start address. In that case generated code; // should be used only on the same platform (OS + compiler), where it was generated.; //; // Generated streamers resolve inheritance tree for given class. This allows to have; // array (or vector) of object pointers on some basic class, while objects of derived; // class(es) are used.; //; // To access data from xml files, user should use TXmlFile class, which is different from; // ROOT TXMLFile, but provides very similar functionality. For example, to read; // object from xml file:; //; // TXmlFile file(""test.xml""); // open xml file; // file.ls(); // show list of keys in file; // TExample* ex1 = (TExample*) file.Get(""ex1"", TExample_streamer); // get object; // file.Close();; //; // To write object to file:; //; // TXmlFile outfile(""test2.xml"", ""recreate""); // create xml file; // TExample* ex1 = new TExample;; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLPlayer.cxx:3055,avail,available,3055,io/xml/src/TXMLPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLPlayer.cxx,1,['avail'],['available']
Availability,", how to build a shared library (a good; /// default will be provided). The most common change, namely where to find; /// header files, will be available through the function; /// TSystem::SetIncludePath().; /// A good default will be provided so that a typical user session should be at; /// most:; /// ~~~ {.cpp}; /// root[1] gSystem->SetIncludePath(""-I$ROOTSYS/include; /// -I$HOME/mypackage/include"");; /// root[2] .x myfunc.C++(10,20);; /// ~~~; /// The user may sometimes try to compile a script before it has loaded all the; /// needed shared libraries. In this case we want to be helpful and output a; /// list of the unresolved symbols. So if the loading of the created shared; /// library fails, we will try to build a executable that contains the; /// script. The linker should then output a list of missing symbols.; ///; /// To support this we provide a TSystem::SetMakeExe() function, that sets the; /// directive telling how to create an executable. The loader will need; /// to be informed of all the libraries available. The information about; /// the libraries that has been loaded by .L and TSystem::Load() is accessible; /// to the script compiler. However, the information about; /// the libraries that have been selected at link time by the application; /// builder (like the root libraries for root.exe) are not available and need; /// to be explicitly listed in fLinkedLibs (either by default or by a call to; /// TSystem::SetLinkedLibs()).; ///; /// To simplify customization we could also add to the .rootrc support for the; /// variables; /// ~~~ {.cpp}; /// Unix.*.Root.IncludePath: -I$ROOTSYS/include; /// WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; ///; /// Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; /// WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; /// ~~~; /// And also support for MakeSharedLibs() and MakeExe().; ///; /// (the ... have to be replaced by the actual values and are here only to; /// shorten this comment).; ///; /// Note th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:4723,avail,available,4723,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['avail'],['available']
Availability,", since the limit is an absolute constraint on; the parameter, a parameter at its limit has no error, at least in one; direction. The error matrix, which can assign only symmetric errors, then; becomes essentially meaningless. ### Interpretation of Parameter Errors:. There are two kinds of problems that can arise: the reliability of; MINUIT's error estimates, and their statistical interpretation, assuming; they are accurate. ### Statistical interpretation:. For discussion of basic concepts, such as the meaning of the elements of; the error matrix, or setting of exact confidence levels see:. 1. F.James.; Determining the statistical Significance of experimental Results.; Technical Report DD/81/02 and CERN Report 81-03, CERN, 1981. 2. W.T.Eadie, D.Drijard, F.James, M.Roos, and B.Sadoulet.; Statistical Methods in Experimental Physics.; North-Holland, 1971. ### Reliability of MINUIT error estimates. MINUIT always carries around its own current estimates of the parameter; errors, which it will print out on request, no matter how accurate they; are at any given point in the execution. For example, at initialization,; these estimates are just the starting step sizes as specified by the user.; After a HESSE step, the errors are usually quite accurate,; unless there has been a problem. MINUIT, when it prints out error values,; also gives some indication of how reliable it thinks they are. For; example, those marked <TT>CURRENT GUESS ERROR</TT> are only working values; not to be believed, and <TT>APPROXIMATE ERROR</TT> means that they have; been calculated but there is reason to believe that they may not be; accurate. If no mitigating adjective is given, then at least MINUIT believes the; errors are accurate, although there is always a small chance that MINUIT; has been fooled. Some visible signs that MINUIT may have been fooled are:. 1. Warning messages produced during the minimization or error analysis. 2. Failure to find new minimum. 3. Value of <TT>EDM</TT> too big (estimat",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:8220,error,errors,8220,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['errors']
Availability,",.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; auto gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""A graph with bend errors"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; End_Macro. \anchor GrP3d; #### TGraphMultiErrors; A `TGraphMultiErrors` works basically the same way like a `TGraphAsymmErrors`.; It has the possibility to define more than one type / dimension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the x-Errors with %f similar to `gStyle->SetErrorX(dx)` but does not affect them directly (Useful when used in addition with box errors to make the box only half as wide as the x-Errors e.g. s=0.5) |; | ""S"" | First one only | Use individual TAttFill and TAttLine attributes for the different error dimensions instead of the global ones. |. Per default the Fill and Line Styles of the Graph are being used for all error; dimensions. To use the specific on",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:13559,error,error,13559,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,2,['error'],"['error', 'errors']"
Availability,"- blue-x)*(red-y - blue-y)-(green-y - blue-y)*(red-x - blue-x); *; * green-scale =; * ( (red-y - blue-y) * (white-x - blue-x) -; * (red-x - blue-x) * (white-y - blue-y) ) / white-y; * -------------------------------------------------------------------------; * (green-x - blue-x)*(red-y - blue-y)-(green-y - blue-y)*(red-x - blue-x); *; * Accuracy:; * The input values have 5 decimal digits of accuracy. The values are all in; * the range 0 < value < 1, so simple products are in the same range but may; * need up to 10 decimal digits to preserve the original precision and avoid; * underflow. Because we are using a 32-bit signed representation we cannot; * match this; the best is a little over 9 decimal digits, less than 10.; *; * The approach used here is to preserve the maximum precision within the; * signed representation. Because the red-scale calculation above uses the; * difference between two products of values that must be in the range -1..+1; * it is sufficient to divide the product by 7; ceil(100,000/32767*2). The; * factor is irrelevant in the calculation because it is applied to both; * numerator and denominator.; *; * Note that the values of the differences of the products of the; * chromaticities in the above equations tend to be small, for example for; * the sRGB chromaticities they are:; *; * red numerator: -0.04751; * green numerator: -0.08788; * denominator: -0.2241 (without white-y multiplication); *; * The resultant Y coefficients from the chromaticities of some widely used; * color space definitions are (to 15 decimal places):; *; * sRGB; * 0.212639005871510 0.715168678767756 0.072192315360734; * Kodak ProPhoto; * 0.288071128229293 0.711843217810102 0.000085653960605; * Adobe RGB; * 0.297344975250536 0.627363566255466 0.075291458493998; * Adobe Wide Gamut RGB; * 0.258728243040113 0.724682314948566 0.016589442011321; */; /* By the argument, above overflow should be impossible here. The return; * value of 2 indicates an internal error to the caller.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:7537,error,error,7537,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,"-------------------------------------------------------===//; /// \file; ///; /// This file implements class CodeRegion and CodeRegions, InstrumentRegion,; /// AnalysisRegions, and InstrumentRegions.; ///; /// A CodeRegion describes a region of assembly code guarded by special LLVM-MCA; /// comment directives.; ///; /// # LLVM-MCA-BEGIN foo; /// ... ## asm; /// # LLVM-MCA-END; ///; /// A comment starting with substring LLVM-MCA-BEGIN marks the beginning of a; /// new region of code.; /// A comment starting with substring LLVM-MCA-END marks the end of the; /// last-seen region of code.; ///; /// Code regions are not allowed to overlap. Each region can have a optional; /// description; internally, regions are described by a range of source; /// locations (SMLoc objects).; ///; /// An instruction (a MCInst) is added to a CodeRegion R only if its; /// location is in range [R.RangeStart, R.RangeEnd].; ///; /// A InstrumentRegion describes a region of assembly code guarded by; /// special LLVM-MCA comment directives.; ///; /// # LLVM-MCA-<INSTRUMENTATION_TYPE> <data>; /// ... ## asm; ///; /// where INSTRUMENTATION_TYPE is a type defined in llvm and expects to use; /// data.; ///; /// A comment starting with substring LLVM-MCA-<INSTRUMENTATION_TYPE>; /// brings data into scope for llvm-mca to use in its analysis for; /// all following instructions.; ///; /// If the same INSTRUMENTATION_TYPE is found later in the instruction list,; /// then the original InstrumentRegion will be automatically ended,; /// and a new InstrumentRegion will begin.; ///; /// If there are comments containing the different INSTRUMENTATION_TYPEs,; /// then both data sets remain available. In contrast with a CodeRegion,; /// an InstrumentRegion does not need a comment to end the region.; //; // An instruction (a MCInst) is added to an InstrumentRegion R only; // if its location is in range [R.RangeStart, R.RangeEnd].; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/CodeRegion.h:1986,avail,available,1986,interpreter/llvm-project/llvm/tools/llvm-mca/CodeRegion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/CodeRegion.h,1,['avail'],['available']
Availability,"--------------------------------------------------===//; //; // This file contains the declaration of the MCPseudoProbe to support the pseudo; // probe encoding for AutoFDO. Pseudo probes together with their inline context; // are encoded in a DFS recursive way in the .pseudoprobe sections. For each; // .pseudoprobe section, the encoded binary data consist of a single or mutiple; // function records each for one outlined function. A function record has the; // following format :; //; // FUNCTION BODY (one for each outlined function present in the text section); // GUID (uint64); // GUID of the function's source name which may be different from the; // actual binary linkage name. This GUID will be used to decode and; // generate a profile against the source function name.; // NPROBES (ULEB128); // Number of probes originating from this function.; // NUM_INLINED_FUNCTIONS (ULEB128); // Number of callees inlined into this function, aka number of; // first-level inlinees; // PROBE RECORDS; // A list of NPROBES entries. Each entry contains:; // INDEX (ULEB128); // TYPE (uint4); // 0 - block probe, 1 - indirect call, 2 - direct call; // ATTRIBUTE (uint3); // 1 - reserved; // 2 - Sentinel; // 4 - HasDiscriminator; // ADDRESS_TYPE (uint1); // 0 - code address for regular probes (for downwards compatibility); // - GUID of linkage name for sentinel probes; // 1 - address delta; // CODE_ADDRESS (uint64 or ULEB128); // code address or address delta, depending on ADDRESS_TYPE; // DISCRIMINATOR (ULEB128) if HasDiscriminator; // INLINED FUNCTION RECORDS; // A list of NUM_INLINED_FUNCTIONS entries describing each of the inlined; // callees. Each record contains:; // INLINE SITE; // ID of the callsite probe (ULEB128); // FUNCTION BODY; // A FUNCTION BODY entry describing the inlined function.; //; // TODO: retire the ADDRESS_TYPE encoding for code addresses once compatibility; // is no longer an issue.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h:1614,down,downwards,1614,interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h,1,['down'],['downwards']
Availability,"------------------------------------------------===//; /// \file InstrRefBasedImpl.cpp; ///; /// This is a separate implementation of LiveDebugValues, see; /// LiveDebugValues.cpp and VarLocBasedImpl.cpp for more information.; ///; /// This pass propagates variable locations between basic blocks, resolving; /// control flow conflicts between them. The problem is SSA construction, where; /// each debug instruction assigns the *value* that a variable has, and every; /// instruction where the variable is in scope uses that variable. The resulting; /// map of instruction-to-value is then translated into a register (or spill); /// location for each variable over each instruction.; ///; /// The primary difference from normal SSA construction is that we cannot; /// _create_ PHI values that contain variable values. CodeGen has already; /// completed, and we can't alter it just to make debug-info complete. Thus:; /// we can identify function positions where we would like a PHI value for a; /// variable, but must search the MachineFunction to see whether such a PHI is; /// available. If no such PHI exists, the variable location must be dropped.; ///; /// To achieve this, we perform two kinds of analysis. First, we identify; /// every value defined by every instruction (ignoring those that only move; /// another value), then re-compute an SSA-form representation of the; /// MachineFunction, using value propagation to eliminate any un-necessary; /// PHI values. This gives us a map of every value computed in the function,; /// and its location within the register file / stack.; ///; /// Secondly, for each variable we perform the same analysis, where each debug; /// instruction is considered a def, and every instruction where the variable; /// is in lexical scope as a use. Value propagation is used again to eliminate; /// any un-necessary PHIs. This gives us a map of each variable to the value; /// it should have in a block.; ///; /// Once both are complete, we have two maps for ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:1401,avail,available,1401,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['avail'],['available']
Availability,"-----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This pass tries to remove unnecessary VGPR live ranges in divergent if-else; /// structures and waterfall loops.; ///; /// When we do structurization, we usually transform an if-else into two; /// successive if-then (with a flow block to do predicate inversion). Consider a; /// simple case after structurization: A divergent value %a was defined before; /// if-else and used in both THEN (use in THEN is optional) and ELSE part:; /// bb.if:; /// %a = ...; /// ...; /// bb.then:; /// ... = op %a; /// ... // %a can be dead here; /// bb.flow:; /// ...; /// bb.else:; /// ... = %a; /// ...; /// bb.endif; ///; /// As register allocator has no idea of the thread-control-flow, it will just; /// assume %a would be alive in the whole range of bb.then because of a later; /// use in bb.else. On AMDGPU architecture, the VGPR is accessed with respect; /// to exec mask. For this if-else case, the lanes active in bb.then will be; /// inactive in bb.else, and vice-versa. So we are safe to say that %a was dead; /// after the last use in bb.then until the end of the block. The reason is; /// the instructions in bb.then will only overwrite lanes that will never be; /// accessed in bb.else.; ///; /// This pass aims to tell register allocator that %a is in-fact dead,; /// through inserting a phi-node in bb.flow saying that %a is undef when coming; /// from bb.then, and then replace the uses in the bb.else with the result of; /// newly inserted phi.; ///; /// Two key conditions must be met to ensure correctness:; /// 1.) The def-point should be in the same loop-level as if-else-endif to make; /// sure the second loop iteration still get correct data.; /// 2.) There sh",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIOptimizeVGPRLiveRange.cpp:1105,alive,alive,1105,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIOptimizeVGPRLiveRange.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIOptimizeVGPRLiveRange.cpp,1,['alive'],['alive']
Availability,"-7 3 4 -8; // -9 -10 -11 -12 <- No regular bins on the overflow line of axis 1; //; // As we go to higher dimensions, the geometry becomes more complex, but; // if we replace ""line"" with ""plane"", we get a similar picture in 3D when we; // slide along axis 2:; //; // No regular bins on the Some of them on the No regular bins again; // UF plane of axis 2 regular planes of ax.2 on the OF plane of ax.2; //; // -1 -2 -3 -4 -17 -18 -19 -20 -29 -30 -31 -32; // -5 -6 -7 -8 -21 1 2 -22 -33 -34 -35 -36; // -9 -10 -11 -12 -23 3 4 -24 -37 -37 -39 -40; // -13 -14 -15 -16 -25 -26 -27 -28 -41 -42 -43 -44; //; // We can generalize this to N dimensions by saying that as we slide along; // the last axis of an N-d histogram, we see an hyperplane full of overflow; // bins, then some hyperplanes with regular bins in the ""middle"" surrounded; // by overflow bins, then a last hyperplane full of overflow bins.; //; // From this, we can devise a recursive algorithm to recover the number of; // regular bins before the overflow bin we're currently looking at:; //; // - Start by processing the last histogram axis.; // - Ignore the first and last hyperplane on this axis, which only contain; // underflow and overflow bins respectively.; // - Count how many complete hyperplanes of regular bins lie before us on; // this axis, which we can do indirectly in our overflow bin based; // reasoning by computing the perimeter of the regular region and dividing; // our ""regular"" overflow bin count by that amount.; // - Now we counted previous hyperplanes on this last histogram axis, but; // we need to process the hyperplane that our bin is located in, if any.; // * For this, we reduce our overflow bin count to a count of; // _unaccounted_ overflow bins in the current hyperplane...; // * ...which allows us to recursively continue the computation by; // processing the next (well, previous) histogram axis in the context; // of this hyperplane, in the same manner as above.; //; // Alright, now that the general ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:1373,recover,recover,1373,hist/histv7/inc/ROOT/RHistImpl.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx,1,['recover'],['recover']
Availability,"->Draw(""p"");; }; End_Macro. \anchor GrP3c; #### TGraphBentErrors; A `TGraphBentErrors` is like a `TGraphAsymmErrors`.; An extra parameter allows to bend the error bars to better see them; when several graphs are drawn on the same plot. Begin_Macro(source); {; auto c45 = new TCanvas(""c45"",""c45"",200,10,600,400);; const Int_t n = 10;; Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; auto gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""A graph with bend errors"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; End_Macro. \anchor GrP3d; #### TGraphMultiErrors; A `TGraphMultiErrors` works basically the same way like a `TGraphAsymmErrors`.; It has the possibility to define more than one type / dimension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmE",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:12751,error,errors,12751,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['errors']
Availability,". It holds all the fill area; attributes. ## Fill Area attributes; Fill Area attributes are:. - [Fill Area color](\ref ATTFILL1); - [Fill Area style](\ref ATTFILL2). \anchor ATTFILL1; ## Fill Area color; The fill area color is a color index (integer) pointing in the ROOT; color table.; The fill area color of any class inheriting from `TAttFill` can; be changed using the method `SetFillColor` and retrieved using the; method `GetFillColor`.; The following table shows the first 50 default colors. Begin_Macro; {; TCanvas *c = new TCanvas(""c"",""Fill Area colors"",0,0,500,200);; c->DrawColorTable();; return c;; }; End_Macro. ### Color transparency; `SetFillColorAlpha()`, allows to set a transparent color.; In the following example the fill color of the histogram `histo`; is set to blue with an opacity of 35% (i.e. a transparency of 65%).; (The color `kBlue` itself is internally stored as fully opaque.). ~~~ {.cpp}; histo->SetFillColorAlpha(kBlue, 0.35);; ~~~. The transparency is available on all platforms when the flag; `OpenGL.CanvasPreferGL` is set to `1` in `$ROOTSYS/etc/system.rootrc`, or on Mac; with the Cocoa backend.; On the file output it is visible with PDF, PNG, Gif, JPEG, SVG, TeX... but not PostScript. Alternatively, you can call at the top of your script `gSytle->SetCanvasPreferGL();`.; Or if you prefer to activate GL for a single canvas `c`, then use `c->SetSupportGL(true);`. ### The ROOT Color Wheel.; The wheel contains the recommended 216 colors to be used in web applications.; The colors in the Color Wheel are created by TColor::CreateColorWheel. Using this color set for your text, background or graphics will give your; application a consistent appearance across different platforms and browsers. Colors are grouped by hue, the aspect most important in human perception; Touching color chips have the same hue, but with different brightness and vividness. Colors of slightly different hues _clash_. If you intend to display; colors of the same hue together, you sh",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttFill.cxx:1174,avail,available,1174,core/base/src/TAttFill.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttFill.cxx,1,['avail'],['available']
Availability,". The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:6737,error,error,6737,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability,"., see THistPainter::Paint; 'Add' : ComboBox: further things which can be added to the; histogram (None, simple/smooth line, fill area; 'Simple Drawing': CheckBox: draw a simple histogram without; errors (= ""HIST"" drawoption). In combination with; some other draw options an outer line is drawn on; top of the histogram; 'Show markers': CheckBox: draw a marker on to of each bin (=""P""; drawoption); 'Draw bar chart': CheckBox: draw a bar chart (=""B"" drawoption); change the Fill Color with Fill in the Style Tab; => will show Bar menue in the Style Tab; 'Bar option': CheckBox: draw a bar chart (=""BAR"" drawoption); => will show Bar menue in the Style Tab; 3d Plot:; 'Type' : ComboBox: set histogram type Lego-Plot or Surface; draw(Lego, Lego1.2, Surf, Surf1..5); see THistPainter::Paint; 'Coords' : ComboBox: set the coordinate system (Cartesian, ..; Spheric) see THistPainter::Paint; 'Error' : see 2D plot; 'Bar' : change the bar attributes; 'W' : change Bar Width; 'O' : change Bar Offset; 'Percentage': specifies the percentage of the bar which is drawn; brighter and darker (10% == BAR1 drawoption); 'Horizontal Bar': draw a horizontal bar chart. 'Marker' : change the Marker attributes (color, appearance,; thickness) see TAttMarkerEditor. This Tab has two different layouts. One is for a histogram which; is not drawn from an ntuple. The other one is available for a; histogram which is drawn from an ntuple. In this case the rebin; algorithm can create a rebinned histogram from the original data; i.e. the ntuple.; To see te differences do:; TFile f(""hsimple.root"");; hpx->Draw(""BAR1""); // non ntuple histogram; ntuple->Draw(""px""); // ntuple histogram; Non ntuple histogram:; 'Rebin': with the Slider the number of bins (shown in the field; below the Slider) can be changed to any number which; divides the number of bins of the original histogram.; Pushing 'Apply' will delete the origin histogram and; replace it by the rebinned one on the screen; Pushing 'Ignore' the origin histogram will",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx:2104,Error,Error,2104,gui/ged/src/TH1Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx,1,['Error'],['Error']
Availability,"....); ~~~; When a TRefArray is Streamed, only the pointer unique id is written,; not the referenced object. TRefArray may be assigned to different; branches of one Tree or several Trees.; The branch containing the TRefArray can be read before or after the; array (eg TClonesArray, STL vector,..) of the referenced objects. See an example in $ROOTSYS/test/Event.h. ### RESTRICTIONS when using TRefArray. - Elements in a TRefArray cannot point to a TFile or TDirectory.; - All elements of a TRefArray must be set in the same process,; In particular, one cannot modify some elements of the array in; a different process. Use an array of TRef when one of the above restrictions is met. The number of TRef handled by a single process id is limited to; 16777215 (see TRef for more detail). When the TProcessID is full; (has seen 16777215 objects), we switch to new one TProcessID; maximum 65535 including the TProcessIDs read from file).; However TRefArray can not switch to new TProcessID if they already; contain objects. When the TProcessID has been switched due to overflow and an new; object is added to an existing, empty TRefArray, you will see:. ~~~ {.cpp}; Warning in <TRefArray::AddAtAndExpand>: The ProcessID for the 0x5f83819e8 has been switched to ProcessID4/6c89f37e-8259-11e2-9717-166ee183beef:4; ~~~; If the TRefArray was not empty, you will see:. ~~~ {.cpp}; Error in <TRefArray::AddAtAndExpand>: The object at %p can not be registered in the process the TRefArray points to (pid = ProcessID4/6c89f37e-8259-11e2-9717-166ee183beef) because the ProcessID has too many objects and the TRefArray already contains other objects.; ~~~; When running out of TProcessIds, you will see:. ~~~ {.cpp}; Warning in <TProcessID::AddProcessID>: Maximum number of TProcessID (65535) is almost reached (one left). TRef will stop being functional when the limit is reached.; Fatal in <TProcessID::AddProcessID>: Maximum number of TProcessID (65535) has been reached. TRef are not longer functional.; ~~~; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx:3033,Error,Error,3033,core/cont/src/TRefArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx,1,['Error'],['Error']
Availability,"..; }. so when inflate() is called again, the same case is attempted again, and; if the appropriate resources are provided, the machine proceeds to the; next state. The NEEDBITS() macro is usually the way the state evaluates; whether it can proceed or should return. NEEDBITS() does the return if; the requested bits are not available. The typical use of the BITS macros; is:. NEEDBITS(n);; ... do something with BITS(n) ...; DROPBITS(n);. where NEEDBITS(n) either returns from inflate() if there isn't enough; input left to load n bits into the accumulator, or it continues. BITS(n); gives the low n bits in the accumulator. When done, DROPBITS(n) drops; the low n bits off the accumulator. INITBITS() clears the accumulator; and sets the number of available bits to zero. BYTEBITS() discards just; enough bits to put the accumulator on a byte boundary. After BYTEBITS(); and a NEEDBITS(8), then BITS(8) would return the next byte in the stream. NEEDBITS(n) uses PULLBYTE() to get an available byte of input, or to return; if there is no input available. The decoding of variable length codes uses; PULLBYTE() directly in order to pull just enough bytes to decode the next; code, and no more. Some states loop until they get enough input, making sure that enough; state information is maintained to continue the loop where it left off; if NEEDBITS() returns in the loop. For example, want, need, and keep; would all have to actually be part of the saved state in case NEEDBITS(); returns:. case STATEw:; while (want < need) {; NEEDBITS(n);; keep[want++] = BITS(n);; DROPBITS(n);; }; state = STATEx;; case STATEx:. As shown above, if the next state is also the next case, then the break; is omitted. A state may also return if there is not enough output space available to; complete that state. Those states are copying stored data, writing a; literal byte, and copying a matching string. When returning, a ""goto inf_leave"" is used to update the total counters,; update the check value, and determine ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:1333,avail,available,1333,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,4,['avail'],['available']
Availability,".0.4 10004; * 1.0.4a-f 10005; * 1.0.5 (+ 2 patches) 10005; * 1.0.5a-d 10006; * 1.0.5e-r 10100 (not source compatible); * 1.0.5s-v 10006 (not binary compatible); * 1.0.6 (+ 3 patches) 10006 (still binary incompatible); * 1.0.6d-f 10007 (still binary incompatible); * 1.0.6g 10007; * 1.0.6h 10007 10.6h (testing xy.z so-numbering); * 1.0.6i 10007 10.6i; * 1.0.6j 10007 2.1.0.6j (incompatible with 1.0.0); * 1.0.7beta11-14 DLLNUM 10007 2.1.0.7beta11-14 (binary compatible); * 1.0.7beta15-18 1 10007 2.1.0.7beta15-18 (binary compatible); * 1.0.7rc1-2 1 10007 2.1.0.7rc1-2 (binary compatible); * 1.0.7 1 10007 (still compatible); * ...; * 1.0.69 10 10069 10.so.0.69[.0]; * ...; * 1.2.59 13 10259 12.so.0.59[.0]; * ...; * 1.4.20 14 10420 14.so.0.20[.0]; * ...; * 1.5.30 15 10530 15.so.15.30[.0]; * ...; * 1.6.40 16 10640 16.so.16.40[.0]; *; * Henceforth the source version will match the shared-library major and; * minor numbers; the shared-library major version number will be used for; * changes in backward compatibility, as it is intended.; * The PNG_LIBPNG_VER macro, which is not used within libpng but is; * available for applications, is an unsigned integer of the form XYYZZ; * corresponding to the source version X.Y.Z (leading zeros in Y and Z).; * Beta versions were given the previous public release number plus a; * letter, until version 1.0.6j; from then on they were given the upcoming; * public release number plus ""betaNN"" or ""rcNN"".; *; * Binary incompatibility exists only when applications make direct access; * to the info_ptr or png_ptr members through png.h, and the compiled; * application is loaded with a different version of the library.; *; * DLLNUM will change each time there are forward or backward changes; * in binary compatibility (e.g., when a new feature is added).; *; * See libpng.txt or libpng.3 for more information. The PNG specification; * is available as a W3C Recommendation and as an ISO/IEC Standard; see; * <https://www.w3.org/TR/2003/REC-PNG-20031110/>; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:9613,avail,available,9613,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,['avail'],['available']
Availability,".; Some predefined RDataSources are natively provided by ROOT such as the ROOT::RDF::RCsvDS which allows to read comma separated files:; ~~~{.cpp}; auto tdf = ROOT::RDF::FromCSV(""MuRun2010B.csv"");; auto filteredEvents =; tdf.Filter(""Q1 * Q2 == -1""); .Define(""m"", ""sqrt(pow(E1 + E2, 2) - (pow(px1 + px2, 2) + pow(py1 + py2, 2) + pow(pz1 + pz2, 2)))"");; auto h = filteredEvents.Histo1D(""m"");; h->Draw();; ~~~. See also FromNumpy (Python-only), FromRNTuple(), FromArrow(), FromSqlite(). \anchor callgraphs; ### Computation graphs (storing and reusing sets of transformations). As we saw, transformed dataframes can be stored as variables and reused multiple times to create modified versions of the dataset. This implicitly defines a **computation graph** in which; several paths of filtering/creation of columns are executed simultaneously, and finally aggregated results are produced. RDataFrame detects when several actions use the same filter or the same defined column, and **only evaluates each; filter or defined column once per event**, regardless of how many times that result is used down the computation graph.; Objects read from each column are **built once and never copied**, for maximum efficiency.; When ""upstream"" filters are not passed, subsequent filters, temporary column expressions and actions are not evaluated,; so it might be advisable to put the strictest filters first in the graph. \anchor representgraph; ### Visualizing the computation graph; It is possible to print the computation graph from any node to obtain a [DOT (graphviz)](https://en.wikipedia.org/wiki/DOT_(graph_description_language)) representation either on the standard output; or in a file. Invoking the function ROOT::RDF::SaveGraph() on any node that is not the head node, the computation graph of the branch; the node belongs to is printed. By using the head node, the entire computation graph is printed. Following there is an example of usage:; ~~~{.cpp}; // First, a sample computational graph is built;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:75400,down,down,75400,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['down'],['down']
Availability,"/ All reduced values are stored in the lowest possible lane. The set; /// of problems every algorithm addresses is a super set of those; /// addressable by algorithms with a lower version number. Overhead; /// increases as algorithm version increases.; ///; /// Terminology; /// Reduce element:; /// Reduce element refers to the individual data field with primitive; /// data types to be combined and reduced across threads.; /// Reduce list:; /// Reduce list refers to a collection of local, thread-private; /// reduce elements.; /// Remote Reduce list:; /// Remote Reduce list refers to a collection of remote (relative to; /// the current thread) reduce elements.; ///; /// We distinguish between three states of threads that are important to; /// the implementation of this function.; /// Alive threads:; /// Threads in a warp executing the SIMT instruction, as distinguished from; /// threads that are inactive due to divergent control flow.; /// Active threads:; /// The minimal set of threads that has to be alive upon entry to this; /// function. The computation is correct iff active threads are alive.; /// Some threads are alive but they are not active because they do not; /// contribute to the computation in any useful manner. Turning them off; /// may introduce control flow overheads without any tangible benefits.; /// Effective threads:; /// In order to comply with the argument requirements of the shuffle; /// function, we must keep all lanes holding data alive. But at most; /// half of them perform value aggregation; we refer to this half of; /// threads as effective. The other half is simply handing off their; /// data.; ///; /// Procedure; /// Value shuffle:; /// In this step active threads transfer data from higher lane positions; /// in the warp to lower lane positions, creating Remote Reduce list.; /// Value aggregation:; /// In this step, effective threads combine their thread local Reduce list; /// with Remote Reduce list and store the result in the thread local",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:1929,alive,alive,1929,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['alive'],['alive']
Availability,"/ Vary provides a natural and flexible syntax to define systematic variations that automatically propagate to; /// Filters, Defines and results. RDataFrame usage of columns with attached variations does not change, but for; /// results that depend on any varied quantity, a map/dictionary of varied results can be produced with; /// ROOT::RDF::Experimental::VariationsFor (see the example below).; ///; /// The dictionary will contain a ""nominal"" value (accessed with the ""nominal"" key) for the unchanged result, and; /// values for each of the systematic variations that affected the result (via upstream Filters or via direct or; /// indirect dependencies of the column values on some registered variations). The keys will be a composition of; /// variation names and tags, e.g. ""pt:up"" and ""pt:down"" for the example below.; ///; /// In the following example we add up/down variations of pt and fill a histogram with a quantity that depends on pt.; /// We automatically obtain three histograms in output (""nominal"", ""pt:up"" and ""pt:down""):; /// ~~~{.cpp}; /// auto nominal_hx =; /// df.Vary(""pt"", [] (double pt) { return RVecD{pt*0.9, pt*1.1}; }, {""down"", ""up""}); /// .Filter(""pt > k""); /// .Define(""x"", someFunc, {""pt""}); /// .Histo1D(""x"");; ///; /// auto hx = ROOT::RDF::Experimental::VariationsFor(nominal_hx);; /// hx[""nominal""].Draw();; /// hx[""pt:down""].Draw(""SAME"");; /// hx[""pt:up""].Draw(""SAME"");; /// ~~~; /// RDataFrame computes all variations as part of a single loop over the data.; /// In particular, this means that I/O and computation of values shared; /// among variations only happen once for all variations. Thus, the event loop; /// run-time typically scales much better than linearly with the number of; /// variations.; ///; /// RDataFrame lazily computes the varied values required to produce the; /// outputs of \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"". If \ref; /// ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" was not called for a result, th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1814,down,down,1814,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['down'],['down']
Availability,"/ has not executed any epilogue; // - ""does not have a call frame"", if the function has not executed the; // prologue, or has executed an epilogue; // which can be computed by a single RPO traversal.; // The location of the prologue is determined by finding the first block in the; // reverse traversal which contains CFI instructions.; // In order to accommodate backends which do not generate unwind info in; // epilogues we compute an additional property ""strong no call frame on entry"",; // which is set for the entry point of the function and for every block; // reachable from the entry along a path that does not execute the prologue. If; // this property holds, it takes precedence over the ""has a call frame""; // property.; // From the point of view of the unwind tables, the ""has/does not have call; // frame"" state at beginning of each block is determined by the state at the end; // of the previous block, in layout order. Where these states differ, we insert; // compensating CFI instructions, which come in two flavours:; // - CFI instructions, which reset the unwind table state to the initial one.; // This is done by a target specific hook and is expected to be trivial; // to implement, for example it could be:; // .cfi_def_cfa <sp>, 0; // .cfi_same_value <rN>; // .cfi_same_value <rN-1>; // ...; // where <rN> are the callee-saved registers.; // - CFI instructions, which reset the unwind table state to the one; // created by the function prologue. These are; // .cfi_restore_state; // .cfi_remember_state; // In this case we also insert a `.cfi_remember_state` after the last CFI; // instruction in the function prologue.; //; // Known limitations:; // * the pass cannot handle an epilogue preceding the prologue in the basic; // block layout; // * the pass does not handle functions where SP is used as a frame pointer and; // SP adjustments up and down are done in different basic blocks (TODO); //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CFIFixup.cpp:3230,down,down,3230,interpreter/llvm-project/llvm/lib/CodeGen/CFIFixup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CFIFixup.cpp,1,['down'],['down']
Availability,"/ layout ::= [[[char]loc]width]; // format ::= <any string not containing ""{"" or ""}"">; // char ::= <any character except ""{"" or ""}"">; // loc ::= ""-"" | ""="" | ""+""; // width ::= <positive integer>; //; // index - A non-negative integer specifying the index of the item in the; // parameter pack to print. Any other value is invalid.; // layout - A string controlling how the field is laid out within the available; // space.; // format - A type-dependent string used to provide additional options to; // the formatting operation. Refer to the documentation of the; // various individual format providers for per-type options.; // char - The padding character. Defaults to ' ' (space). Only valid if; // `loc` is also specified.; // loc - Where to print the formatted text within the field. Only valid if; // `width` is also specified.; // '-' : The field is left aligned within the available space.; // '=' : The field is centered within the available space.; // '+' : The field is right aligned within the available space (this; // is the default).; // width - The width of the field within which to print the formatted text.; // If this is less than the required length then the `char` and `loc`; // fields are ignored, and the field is printed with no leading or; // trailing padding. If this is greater than the required length,; // then the text is output according to the value of `loc`, and padded; // as appropriate on the left and/or right by `char`.; //; // ===Special Characters===; //; // The characters '{' and '}' are reserved and cannot appear anywhere within a; // replacement sequence. Outside of a replacement sequence, in order to print; // a literal '{' it must be doubled as ""{{"".; //; // ===Parameter Indexing===; //; // `index` specifies the index of the parameter in the parameter pack to format; // into the output. Note that it is possible to refer to the same parameter; // index multiple times in a given format string. This makes it possible to; // output the same value mult",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FormatVariadic.h:1334,avail,available,1334,interpreter/llvm-project/llvm/include/llvm/Support/FormatVariadic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FormatVariadic.h,1,['avail'],['available']
Availability,"/ platform ABI's struct-layout algorithm, with the high-level goal; // of duplicating MSVC's layout. For non-bitfields, this follows; // the standard algorithm. The basic bitfield layout rule is to; // allocate an entire unit of the bitfield's declared type; // (e.g. 'unsigned long'), then parcel it up among successive; // bitfields whose declared types have the same size, making a new; // unit as soon as the last can no longer store the whole value.; // Since it completely replaces the platform ABI's algorithm,; // settings like !useBitFieldTypeAlignment() do not apply.; // A zero-width bitfield forces the use of a new storage unit for; // later bitfields. In general, this occurs by rounding up the; // current size of the struct as if the algorithm were about to; // place a non-bitfield of the field's formal type. Usually this; // does not change the alignment of the struct itself, but it does; // on some targets (those that useZeroLengthBitfieldAlignment(),; // e.g. ARM). In ms_struct layout, zero-width bitfields are; // ignored unless they follow a non-zero-width bitfield.; // A field alignment restriction (e.g. from #pragma pack) or; // specification (e.g. from __attribute__((aligned))) changes the; // formal alignment of the field. For System V, this alters the; // required alignment of the notional storage unit that must contain; // the bitfield. For ms_struct, this only affects the placement of; // new storage units. In both cases, the effect of #pragma pack is; // ignored on zero-width bitfields.; // On System V, a packed field (e.g. from #pragma pack or; // __attribute__((packed))) always uses the next available bit; // offset.; // In an ms_struct struct, the alignment of a fundamental type is; // always equal to its size. This is necessary in order to mimic; // the i386 alignment rules on targets which might not fully align; // all types (e.g. Darwin PPC32, where alignof(long long) == 4).; // First, some simple bookkeeping to perform for ms_struct structs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp:2866,avail,available,2866,interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,1,['avail'],['available']
Availability,"/ was known to clang already.; //; // The declarations use __attribute__(__clang_arm_builtin_alias),; // so that each function declared will be recognized as the; // appropriate MVE builtin in spite of its user-facing name.; //; // (That's better than making them all wrapper functions,; // partly because it avoids any compiler error message citing; // the wrapper function definition instead of the user's code,; // and mostly because some MVE intrinsics have arguments; // required to be compile-time constants, and that property; // can't be propagated through a wrapper function. It can be; // propagated through a macro, but macros can't be overloaded; // on argument types very easily - you have to use _Generic,; // which makes error messages very confusing when the user; // gets it wrong.); //; // Finally, the polymorphic versions of the intrinsics are; // also defined with __attribute__(overloadable), so that when; // the same name is defined with several type signatures, the; // right thing happens. Each one of the overloaded; // declarations is given a different builtin id, which; // has exactly the effect we want: first clang resolves the; // overload to the right function, then it knows which builtin; // it's referring to, and then the Sema checking for that; // builtin can check further things like the constant; // arguments.; //; // One more subtlety is the newline just before the return; // type name. That's a cosmetic tweak to make the error; // messages legible if the user gets the types wrong in a call; // to a polymorphic function: this way, clang will print just; // the _final_ line of each declaration in the header, to show; // the type signatures that would have been legal. So all the; // confusing machinery with __attribute__ is left out of the; // error message, and the user sees something that's more or; // less self-documenting: ""here's a list of actually readable; // type signatures for vfooq(), and here's why each one didn't; // match your call"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:1896,error,error,1896,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,2,['error'],['error']
Availability,"/*	register int i ;*/; /* we want to open the input file before doing anything else,; 	 * so that the setjmp() error recovery below can assume the file is open.; 	 * VERY IMPORTANT: use ""b"" option to fopen() if you are on a machine that; 	 * requires it in order to read binary files.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c:111,error,error,111,graf2d/asimage/src/libAfterImage/import.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c,2,"['error', 'recover']","['error', 'recovery']"
Availability,"/* !USE_COMPILE_TIME_MASKS */; /* Use the appropriate mask to copy the required bits. In some cases; * the byte mask will be 0 or 0xff; optimize these cases. row_width is; * the number of pixels, but the code copies bytes, so it is necessary; * to special case the end.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:54,mask,mask,54,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,2,['mask'],['mask']
Availability,"/* ""Connection: Upgrade"" without ""Upgrade"" Header --> Error */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:54,Error,Error,54,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Error'],['Error']
Availability,"/* ""The masking key is a 32-bit value chosen at random by the client.""; 	 * http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-17#section-5; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:8,mask,masking,8,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['mask'],['masking']
Availability,"/* ""g_mem_chunk_new"" creates a new memory chunk.; * Memory chunks are used to allocate pieces of memory which are; * always the same size. Lists are a good example of such a data type.; * The memory chunk allocates and frees blocks of memory as needed.; * Just be sure to call ""g_mem_chunk_free"" and not ""g_free"" on data; * allocated in a mem chunk. (""g_free"" will most likely cause a seg; * fault...somewhere).; *; * Oh yeah, GMemChunk is an opaque data type. (You don't really; * want to know what's going on inside do you?); */; /* ALLOC_ONLY MemChunk's can only allocate memory. The free operation; * is interpreted as a no op. ALLOC_ONLY MemChunk's save 4 bytes per; * atom. (They are also useful for lists which use MemChunk to allocate; * memory but are also part of the MemChunk implementation).; * ALLOC_AND_FREE MemChunk's can allocate and free memory.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.h:392,fault,fault,392,graf2d/win32gdk/gdk/src/glib/gmem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.h,1,['fault'],['fault']
Availability,"/* ""x"" for exposed */; /* x.have: number of bytes available at x.next */; /* x.next: next output data to deliver or write */; /* x.pos: current position in uncompressed data */; /* used for both reading and writing */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h:50,avail,available,50,builtins/zlib/gzguts.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h,1,['avail'],['available']
Availability,/* # of non-dummy blocks down in last MCU */; /* Saved quantization table for component; NULL if none yet saved.; * See jdinput.c comments about the need for this information.; * This field is currently used only for decompression.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:25,down,down,25,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['down'],['down']
Availability,"/* #define DEBUG_NO_PREFIX		 Dump only compressed data. */; /* Masks given codes to BitsPerPixel, to make sure all codes are in range: */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c:63,Mask,Masks,63,graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,1,['Mask'],['Masks']
Availability,/* '@' at end of string is now just printed (previously it was skipped);; * it is an error in the calling code to terminate the string with @.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:85,error,error,85,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['error'],['error']
Availability,"/* 'adler' is the Adler32 checksum of the uncompressed profile data. It may; * be zero to indicate that it is not available. It is used, if provided,; * as a fast check on the profile when checking to see if it is sRGB.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:114,avail,available,114,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['avail'],['available']
Availability,"/* 'message' follows the X/Open approach of using @1, @2 to insert; * parameters previously supplied using the above functions. Errors in; * specifying the parameters will simply result in garbage substitutions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:128,Error,Errors,128,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['Error'],['Errors']
Availability,/* (Re)initialize error mgr and destination modules */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c:18,error,error,18,graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c,2,['error'],['error']
Availability,/* **************************************************************; * Error Management; ****************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse_decompress.c:69,Error,Error,69,builtins/zstd/common/fse_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse_decompress.c,4,['Error'],['Error']
Availability,"/* **************************************************************; * Templates; ****************************************************************/; /*; designed to be included; for type-specific functions (template emulation in C); Objective is to write these functions only once, for improved maintenance; */; /* safety checks */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse_decompress.c:293,mainten,maintenance,293,builtins/zstd/common/fse_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse_decompress.c,2,['mainten'],['maintenance']
Availability,"/* , down */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:5,down,down,5,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['down'],['down']
Availability,/* --- Error management --- */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/hist.c:7,Error,Error,7,builtins/zstd/compress/hist.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/hist.c,1,['Error'],['Error']
Availability,"/* --- simple histogram functions --- */; /*! HIST_count():; * Provides the precise count of each byte within a table 'count'.; * 'count' is a table of unsigned int, of minimum size (*maxSymbolValuePtr+1).; * Updates *maxSymbolValuePtr with actual largest symbol value detected.; * @return : count of the most frequent symbol (which isn't identified).; * or an error code, which can be tested using HIST_isError().; * note : if return == srcSize, there is only one symbol.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/hist.h:361,error,error,361,builtins/zstd/compress/hist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/hist.h,1,['error'],['error']
Availability,/* ---- Define all the available commands ----- */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSGui.h:23,avail,available,23,test/periodic/XSGui.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSGui.h,1,['avail'],['available']
Availability,/* -------------- image transformations start here ------------------- */; /* libpng 1.6.10: add code to cause a png_app_error if a selected TRANSFORM; * is not implemented. This will only happen in de-configured (non-default); * libpng builds. The results can be unexpected - png_read_png may return; * short or mal-formed rows because the transform is skipped.; */; /* Tell libpng to strip 16-bit/color files down to 8 bits per color.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:411,down,down,411,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['down'],['down']
Availability,"/* --------------------------------------------------------------------- */; /*; * Utility routine to tell whether a sequence of bytes is legal UTF-8.; * This must be called with the length pre-determined by the first byte.; * If not calling this from ConvertUTF8to*, then the length can be set by:; * length = trailingBytesForUTF8[*source]+1;; * and the sequence is illegal right away if there aren't that many bytes; * available.; * If presented with a length > 4, this returns false. The Unicode; * definition of UTF-8 goes up to 4-byte sequences.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp:421,avail,available,421,interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp,1,['avail'],['available']
Availability,/* ------------------------------------------------------------------------- */; /* error codes */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h:84,error,error,84,builtins/glew/inc/GL/glew.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h,1,['error'],['error']
Availability,"/* ---------------------------------------------------------------------; The following 4 definitions are compiler-specific.; The C standard does not guarantee that wchar_t has at least; 16 bits, so wchar_t is no less portable than unsigned short!; All should be unsigned values to avoid sign extension during; bit mask & shift operations.; ------------------------------------------------------------------------ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h:315,mask,mask,315,interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,1,['mask'],['mask']
Availability,"/* -1 means ""information not available"" */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.c:29,avail,available,29,graf2d/win32gdk/gdk/src/glib/gdate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.c,1,['avail'],['available']
Availability,/* ... if not add an error message */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:21,error,error,21,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* 0 : no display; 1: errors; 2: default; 3: details; 4: debug */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c:22,error,errors,22,builtins/zstd/dictBuilder/cover.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c,3,['error'],['errors']
Availability,"/* 0 or 1 */; // set tolerance, etc. ...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx:21,toler,tolerance,21,tutorials/fit/fitEllipseTGraphRMM.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx,1,['toler'],['tolerance']
Availability,"/* 0 success, REG_NOMATCH failure */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regexec.c:26,failure,failure,26,interpreter/llvm-project/llvm/lib/Support/regexec.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regexec.c,1,['failure'],['failure']
Availability,/* 0011 */; // Kinds less or equal to NON_ERROR_STATUS are not considered errors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CalledOnceCheck.cpp:74,error,errors,74,interpreter/llvm-project/clang/lib/Analysis/CalledOnceCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CalledOnceCheck.cpp,1,['error'],['errors']
Availability,/* 1 if in handler for user defined error; 	 * pages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:36,error,error,36,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* 10^exp_b10 */; /* First extract a base 10 exponent of the number,; * the calculation below rounds down when converting; * from base 2 to base 10 (multiply by log10(2) -; * 0.3010, but 77/256 is 0.3008, so exp_b10 needs to; * be increased. Note that the arithmetic shift; * performs a floor() unlike C arithmetic - using a; * C multiply would break the following for negative; * exponents.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:101,down,down,101,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['down'],['down']
Availability,"/* 3*dir, for advancing inptr & errorptr */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:32,error,errorptr,32,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['error'],['errorptr']
Availability,"/* 32-bit */; /*; * 32-bit optimized version, which is more readable.; *; * On 32-bit, it removes an ADC and delays a dependency between the two; * halves of m128.high64, but it generates an extra mask on 64-bit.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:197,mask,mask,197,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['mask'],['mask']
Availability,/* 6.2.2. Check if put authorization for static files is; 		 * available.; 		 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:63,avail,available,63,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['avail'],['available']
Availability,"/* ; * This allows for making shaped (partially transparent) windows; * - cool feature, needed for Drag and Drag for example.; * The shape_mask can be the mask; * from gdk_pixmap_create_from_xpm. Stefan Wille; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkwindow.h:155,mask,mask,155,graf2d/win32gdk/gdk/src/gdk/gdkwindow.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkwindow.h,1,['mask'],['mask']
Availability,"/* ; This is a clang style test case for checking that preprocessor; defines match gcc.; */; /*; RUN: for arch in -m32 -m64; do \; RUN: for lang in -std=gnu89 -ansi -std=c99 -std=gnu99; do \; RUN: for input in c objective-c; do \; RUN: for opts in ""-O0"" ""-O1 -dynamic"" ""-O2 -static"" ""-Os""; do \; RUN: echo ""-- $arch, $lang, $input, $opts --""; \; RUN: for cc in 0 1; do \; RUN: if [ ""$cc"" == 0 ]; then \; RUN: cc_prog=clang; \; RUN: output=%t0; \; RUN: else \; RUN: cc_prog=gcc; \; RUN: output=%t1; \; RUN: fi; \; RUN: $cc_prog $arch $lang $opts -march=core2 -dM -E -x $input %s | sort > $output; \; RUN: done; \; RUN: if (! diff %t0 %t1); then exit 1; fi; \; RUN: done; \; RUN: done; \; RUN: done; \; RUN: done;; */; /* We don't care about this difference */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/builtin-defines.c:301,echo,echo,301,interpreter/llvm-project/clang/utils/builtin-defines.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/builtin-defines.c,1,['echo'],['echo']
Availability,/* <setjmp.h> is used for the optional error recovery mechanism */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/export.c:39,error,error,39,graf2d/asimage/src/libAfterImage/export.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/export.c,4,"['error', 'recover']","['error', 'recovery']"
Availability,/* == 1 if cParams(except wlog) or compression level are changed in requestedParams. Triggers transmission of new params to ZSTDMT (if available) then reset to 0. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_internal.h:135,avail,available,135,builtins/zstd/compress/zstd_compress_internal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_internal.h,1,['avail'],['available']
Availability,"/* === Prototypes === */; /* note: prototypes already published within `zstd.h` :; * ZSTD_decompressBlock(); */; /* note: prototypes already published within `zstd_internal.h` :; * ZSTD_getcBlockSize(); * ZSTD_decodeSeqHeaders(); */; /* ZSTD_decompressBlock_internal() :; * decompress block, starting at `src`,; * into destination buffer `dst`.; * @return : decompressed block size,; * or an error code (which can be tested using ZSTD_isError()); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress_block.h:392,error,error,392,builtins/zstd/decompress/zstd_decompress_block.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress_block.h,1,['error'],['error']
Availability,"/* ========= NdbMTReactionXS ============ */; // This class provides the descriptions and comments of all the reactions; // that are available in MF=3",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/NdbMTReacDesc.h:133,avail,available,133,test/periodic/NdbMTReacDesc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/NdbMTReacDesc.h,1,['avail'],['available']
Availability,"/* ==========================================================================; Assembly Syntax: Rd32=mask(#u5,#U5); C Intrinsic Prototype: Word32 Q6_R_mask_II(Word32 Iu5, Word32 IU5); Instruction Type: S_2op; Execution Slots: SLOT23; ========================================================================== */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/hexagon_protos.h:101,mask,mask,101,interpreter/llvm-project/clang/lib/Headers/hexagon_protos.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/hexagon_protos.h,1,['mask'],['mask']
Availability,/* ==========================================================================; Assembly Syntax: Rdd32=mask(Pt4); C Intrinsic Prototype: Word64 Q6_P_mask_p(Byte Pt); Instruction Type: S_2op; Execution Slots: SLOT23; ========================================================================== */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/hexagon_protos.h:102,mask,mask,102,interpreter/llvm-project/clang/lib/Headers/hexagon_protos.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/hexagon_protos.h,1,['mask'],['mask']
Availability,/* ===========================================================================; * Cleanup then free the given gz_stream. Return a zlib error code.; Try freeing in the reverse order of allocations.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:135,error,error,135,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['error'],['error']
Availability,"/* ===========================================================================; * Restore the heap property by moving down the tree starting at node k,; * exchanging a node with the smallest of its two sons if necessary, stopping; * when the heap property is re-established (each father smaller than its; * two sons).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c:118,down,down,118,builtins/zlib/trees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c,4,['down'],['down']
Availability,"/* ===========================================================================; Clear the error and end-of-file flags, and do the same for the real file.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:90,error,error,90,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['error'],['error']
Availability,"/* ===========================================================================; Converts, formats, and writes the args to the compressed file under; control of the format string, as in fprintf. gzprintf returns the number of; uncompressed bytes actually written (0 in case of error).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:276,error,error,276,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['error'],['error']
Availability,"/* ===========================================================================; Opens a gzip (.gz) file for reading or writing. The mode parameter; is as in fopen (""rb"" or ""wb""). The file is given either by file descriptor; or path name (if fd == -1).; gz_open returns NULL if the file could not be opened or if there was; insufficient memory to allocate the (de)compression state; errno; can be checked to distinguish the two cases (if errno is zero, the; zlib error is Z_MEM_ERROR).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:462,error,error,462,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['error'],['error']
Availability,/* ===========================================================================; Reads a long in LSB order from the given gz_stream. Sets z_err in case; of error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:155,error,error,155,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['error'],['error']
Availability,"/* ===========================================================================; Reads bytes from the compressed file until len-1 characters are; read, or a newline character is read and transferred to buf, or an; end-of-file condition is encountered. The string is then terminated; with a null character.; gzgets returns buf, or Z_NULL in case of error. The current implementation is not optimized at all.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:347,error,error,347,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['error'],['error']
Availability,/* ===========================================================================; Reads one byte from the compressed file. gzgetc returns this byte; or -1 in case of end of file or error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:179,error,error,179,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['error'],['error']
Availability,"/* ===========================================================================; Returns the error message for the last error which occurred on the; given compressed file. errnum is set to zlib error number. If an; error occurred in the file system and not in the compression library,; errnum is set to Z_ERRNO and the application may consult errno; to get the exact error code.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:92,error,error,92,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,5,['error'],['error']
Availability,"/* ===========================================================================; Writes c, converted to an unsigned char, into the compressed file.; gzputc returns the value that was written, or -1 in case of error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:208,error,error,208,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['error'],['error']
Availability,"/* ===========================================================================; Writes the given null-terminated string to the compressed file, excluding; the terminating null character.; gzputs returns the number of characters written, or -1 in case of error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:254,error,error,254,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['error'],['error']
Availability,/* ===========================================================================; Writes the given number of uncompressed bytes into the compressed file.; gzwrite returns the number of bytes actually written (0 in case of error).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:220,error,error,220,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['error'],['error']
Availability,"/* @(#)root/clib:$Id$ */; /* Author: Tomi Salo & Fons Rademakers */; /*; Portable snprintf and vsnprintf implementation. Format:; snprintf(holder, sizeof_holder, format, ...); vsnprintf(holder, sizeof_holder, format, args). Return values:; number of characters written or -1 if truncated or -2 if there is an; error in format specification. Author:; Tomi Salo; Original code. Modified:; Fons Rademakers; Return -1 in case of truncation; Added test program.; M.Asokan; Return -2 in case of error in format specification; Distinguish between missing precision and a specified precision of 0. To test snprintf and vsnprintf compile this file with:; cc -g -DSNTEST `root-config --cflags` snprintf.c -o snprintf; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c:310,error,error,310,core/clib/src/snprintf.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c,2,['error'],['error']
Availability,"/* @return : 0 on success, 1 on error */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.c:32,error,error,32,builtins/zstd/common/pool.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.c,2,['error'],['error']
Availability,/* A bit mask containing informational flags */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:9,mask,mask,9,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['mask'],['mask']
Availability,/* A compilation error here means LZ4_STREAMDECODESIZE is not large enough */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:17,error,error,17,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['error'],['error']
Availability,/* A compilation error here means LZ4_STREAMSIZE is not large enough */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:17,error,error,17,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['error'],['error']
Availability,/* A compilation error here means sizeof(ptrdiff_t) is not large enough */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:17,error,error,17,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['error'],['error']
Availability,/* A duplicate configuration option is not an error - the last; 			 * option value will be used. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:46,error,error,46,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* A future job may error and skip our job */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:20,error,error,20,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['error'],['error']
Availability,/* A longjmp because of a bug in the application storage allocator or a; * simple failure to allocate the png_struct.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:82,failure,failure,82,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['failure'],['failure']
Availability,/* A shift of more than the bit depth is an error condition but it; * gets ignored here.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:44,error,error,44,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['error'],['error']
Availability,/* A warning is only logged if there is no prior warning or error. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:60,error,error,60,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['error'],['error']
Availability,/* AND mask is initialized to ones */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcursor-win32.c:7,mask,mask,7,graf2d/win32gdk/gdk/src/gdk/win32/gdkcursor-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcursor-win32.c,1,['mask'],['mask']
Availability,"/* ARM NEON optimizations are being controlled by the compiler settings,; * typically the target FPU. If the FPU has been set to NEON (-mfpu=neon; * with GCC) then the compiler will define __ARM_NEON__ and we can rely; * unconditionally on NEON instructions not crashing, otherwise we must; * disable use of NEON instructions.; *; * NOTE: at present these optimizations depend on 'ALIGNED_MEMORY', so they; * can only be turned on automatically if that is supported too. If; * PNG_ARM_NEON_OPT is set in CPPFLAGS (to >0) then arm/arm_init.c will fail; * to compile with an appropriate #error if ALIGNED_MEMORY has been turned; * off.; *; * Note that gcc-4.9 defines __ARM_NEON instead of the deprecated; * __ARM_NEON__, so we check both variants.; *; * To disable ARM_NEON optimizations entirely, and skip compiling the; * associated assembler code, pass --enable-arm-neon=no to configure; * or put -DPNG_ARM_NEON_OPT=0 in CPPFLAGS.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:586,error,error,586,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['error'],['error']
Availability,/* Accept filter_method 64 (intrapixel differencing) only if; * 1. Libpng was compiled with PNG_MNG_FEATURES_SUPPORTED and; * 2. Libpng did not read a PNG signature (this filter_method is only; * used in PNG datastreams that are embedded in MNG datastreams) and; * 3. The application called png_permit_mng_features with a mask that; * included PNG_FLAG_MNG_FILTER_64 and; * 4. The filter_method is 64 and; * 5. The color_type is RGB or RGBA; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:322,mask,mask,322,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['mask'],['mask']
Availability,"/* Add a complete header string (key + value).; * This function is less efficient as compared to mg_response_header_add,; * and should only be used to convert complete HTTP/1.x header lines.; * Parameters:; * conn: Current connection handle.; * http1_headers: Header line(s) in the form ""name: value\r\n"".; * Return:; * >=0: no error, number of header lines added; * -1: parameter error; * -2: invalid connection type; * -3: invalid connection status; * -4: too many headers; * -5: out of memory; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:328,error,error,328,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,['error'],['error']
Availability,"/* Add a new HTTP response header line; * Parameters:; * conn: Current connection handle.; * header: Header name.; * value: Header value.; * value_len: Length of header value, excluding the terminating zero.; * Use -1 for ""strlen(value)"".; * Return:; * 0: ok; * -1: parameter error; * -2: invalid connection type; * -3: invalid connection status; * -4: too many headers; * -5: out of memory; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:276,error,error,276,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['error'],['error']
Availability,"/* Add an additional domain to an already running web server.; *; * Parameters:; * ctx: Context handle of a server started by mg_start.; * options: NULL terminated list of option_name, option_value pairs that; * specify CivetWeb configuration parameters.; *; * Return:; * < 0 in case of an error; * -1 for a parameter error; * -2 invalid options; * -3 initializing SSL failed; * -4 mandatory domain option missing; * -5 duplicate domain; * -6 out of memory; * > 0 index / handle of a new domain; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:290,error,error,290,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,['error'],['error']
Availability,/* Add enter window events to the event mask */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c:40,mask,mask,40,graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,1,['mask'],['mask']
Availability,"/* Add, edit or delete the entry in the passwords file.; *; * This function allows an application to manipulate .htpasswd files on the; * fly by adding, deleting and changing user records. This is one of the; * several ways of implementing authentication on the server side. For another,; * cookie-based way please refer to the examples/chat in the source tree.; *; * Parameter:; * passwords_file_name: Path and name of a file storing multiple passwords; * realm: HTTP authentication realm (authentication domain) name; * user: User name; * password:; * If password is not NULL, entry modified or added.; * If password is NULL, entry is deleted.; *; * Return:; * 1 on success, 0 on error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:682,error,error,682,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['error'],['error']
Availability,"/* Added at libpng-1.5.5 to support read and write of true CIEXYZ values for; * cHRM, as opposed to using chromaticities. These internal APIs return; * non-zero on a parameter error. The X, Y and Z values are required to be; * positive and less than 1.0.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:176,error,error,176,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,/* Added to libpng-1.6.0: scale a 16-bit value in the range 0..65535 to 0..255; * by dividing by 257 *with rounding*. This macro is exact for the given range.; * See the discourse in pngrtran.c png_do_scale_16_to_8. The values in the; * macro were established by experiment (modifying the added value). The macro; * has a second variant that takes a value already scaled by 255 and divides by; * 65535 - this has a maximum error of .502. Over the range 0..65535*65535 it; * only gives off-by-one errors and only for 0.5% (1 in 200) of the values.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:423,error,error,423,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,2,['error'],"['error', 'errors']"
Availability,"/* Adjust 'windowBits' down if larger than 'data_size'; to stop this; * happening just pass 32768 as the data_size parameter. Notice that zlib; * requires an extra 262 bytes in the window in addition to the data to be; * able to see the whole of the data, so if data_size+262 takes us to the; * next windowBits size we need to fix up the value later. (Because even; * though deflate needs the extra window, inflate does not!); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:23,down,down,23,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['down'],['down']
Availability,"/* After finish_decompress, we can close the input file.; 	 * Here we postpone it until after no more JPEG errors are possible,; 	 * so as to simplify the setjmp error logic above. (Actually, I don't; 	 * think that jpeg_destroy can do an error exit, but why assume anything...); 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c:107,error,errors,107,graf2d/asimage/src/libAfterImage/import.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c,3,['error'],"['error', 'errors']"
Availability,/* AfterStep specific error and Warning handlers : */; /* Returns True if something was actually printed */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asim_afterbase.h:22,error,error,22,graf2d/asimage/src/libAfterImage/asim_afterbase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asim_afterbase.h,1,['error'],['error']
Availability,/* All errors should return -2 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:7,error,errors,7,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['errors']
Availability,"/* All functions and global variables declared anywhere should use; one of the following attributes:. RPY_EXPORTED: the symbol is exported out of libpypy-c.so. RPY_EXTERN: the symbol is not exported out of libpypy-c.so, but; otherwise works like 'extern' by being available to; other C sources. static: as usual, this means the symbol is local to this C file. Don't use _RPY_HIDDEN directly. For tests involving building a custom; .so, translator/tool/cbuild.py overrides RPY_EXTERN so that it becomes; equal to RPY_EXPORTED. Any function or global variable declared with no attribute at all is; a bug; please report or fix it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/precommondefs.h:264,avail,available,264,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/precommondefs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/precommondefs.h,1,['avail'],['available']
Availability,"/* Allocate the actual buffer space (3 row groups) for this component.; * We make the buffer wide enough to allow the downsampler to edge-expand; * horizontally within the buffer, if it so chooses.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c:118,down,downsampler,118,graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,1,['down'],['downsampler']
Availability,"/* Allocate the color conversion buffer.; * We make the buffer wide enough to allow the downsampler to edge-expand; * horizontally within the buffer, if it so chooses.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c:88,down,downsampler,88,graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,1,['down'],['downsampler']
Availability,/* Allocates descriptor for code conversion from encoding ‘fromcode’ to; encoding ‘tocode’ into preallocated memory. Returns an error indicator; (0 or -1 with errno set). */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.h:128,error,error,128,graf2d/win32gdk/gdk/src/iconv/iconv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.h,1,['error'],['error']
Availability,"/* Allocation failed. Return -1 as ""out of memory"" error. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:51,error,error,51,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* Allow an error of +/-0.01 (absolute value) on each chromaticity */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:12,error,error,12,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,/* Allow application (pngtest) errors and warnings to pass */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:31,error,errors,31,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['error'],['errors']
Availability,"/* Also copy JFIF version and resolution information, if available.; * Strictly speaking this isn't ""critical"" info, but it's nearly; * always appropriate to copy it if available. In particular,; * if the application chooses to copy JFIF 1.02 extension markers from; * the source file, we need to copy the version to make sure we don't; * emit a file that has 1.02 extensions but a claimed version of 1.01.; * We will *not*, however, copy version info from mislabeled ""2.01"" files.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jctrans.c:57,avail,available,57,graf2d/asimage/src/libAfterImage/libjpeg/jctrans.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jctrans.c,2,['avail'],['available']
Availability,"/* Also if the pext mask is constant, then the popcount is; constant, we can evaluate the following loop at compile; time and use a constant bit permute vector. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h:20,mask,mask,20,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h,1,['mask'],['mask']
Availability,"/* An error is always logged here, overwriting anything (typically a warning); * that is already there:; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:6,error,error,6,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['error'],['error']
Availability,/* And DGif possible errors. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_lib.h:21,error,errors,21,graf2d/asimage/src/libAfterImage/libungif/gif_lib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_lib.h,1,['error'],['errors']
Availability,/* And EGif possible errors. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_lib.h:21,error,errors,21,graf2d/asimage/src/libAfterImage/libungif/gif_lib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_lib.h,1,['error'],['errors']
Availability,"/* And continue down the tree, setting j to the left son of k */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c:16,down,down,16,builtins/zlib/trees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c,4,['down'],['down']
Availability,/* And do the cleanup prior to any failure return. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:35,failure,failure,35,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['failure'],['failure']
Availability,"/* And this is the formatted message. It may be larger than; * PNG_MAX_ERROR_TEXT, but that is only used for 'chunk' errors and these; * are not (currently) formatted.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:117,error,errors,117,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['error'],['errors']
Availability,/* And'ing with mask[n] masks the lower n bits */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:16,mask,mask,16,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,2,['mask'],"['mask', 'masks']"
Availability,"/* Any other error will apply also to other names we might; 	 * try, and there are 2^32 or so of them, so give up now.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.c:13,error,error,13,graf2d/win32gdk/gdk/src/glib/gfileutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.c,1,['error'],['error']
Availability,/* App warnings are warnings in release (or release candidate) builds but; * are errors during development.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:81,error,errors,81,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['error'],['errors']
Availability,"/* Application errors (new in 1.6); use these functions (declared below) for; * errors in the parameters or order of API function calls on read. The; * 'warning' should be used for an error that can be handled completely; the; * 'error' for one which can be handled safely but which may lose application; * information or settings.; *; * By default these both result in a png_error call prior to release, while in a; * released version the 'warning' is just a warning. However if the application; * explicitly disables benign errors (explicitly permitting the code to lose; * information) they both turn into warnings.; *; * If benign errors aren't supported they end up as the corresponding base call; * (png_warning or png_error.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:15,error,errors,15,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,6,['error'],"['error', 'errors']"
Availability,/* Apply mask if necessary */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:9,mask,mask,9,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['mask'],['mask']
Availability,"/* As above but libpng will ignore the call, or attempt some other partial; * recovery from the error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:78,recover,recovery,78,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,2,"['error', 'recover']","['error', 'recovery']"
Availability,/* Assume Failure to start with: */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkdnd-win32.c:10,Failure,Failure,10,graf2d/win32gdk/gdk/src/gdk/win32/gdkdnd-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkdnd-win32.c,1,['Failure'],['Failure']
Availability,"/* Assure that some input is available. If input is requested, but denied,; then return a Z_BUF_ERROR from inflateBack(). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c:29,avail,available,29,builtins/zlib/infback.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c,2,['avail'],['available']
Availability,"/* Assure that some output space is available, by writing out the window; if it's full. If the write fails, return from inflateBack() with a; Z_BUF_ERROR. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c:36,avail,available,36,builtins/zlib/infback.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c,2,['avail'],['available']
Availability,"/* Assure that there are at least n bits in the bit accumulator. If there is; not enough available input to do that, then return from inflate(). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:89,avail,available,89,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,2,['avail'],['available']
Availability,"/* Assure that there are at least n bits in the bit accumulator. If there is; not enough available input to do that, then return from inflateBack() with; an error. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c:89,avail,available,89,builtins/zlib/infback.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c,4,"['avail', 'error']","['available', 'error']"
Availability,"/* At least one failure was due to permissions, so report that; * error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c:16,failure,failure,16,graf2d/win32gdk/gdk/src/glib/gspawn.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c,2,"['error', 'failure']","['error', 'failure']"
Availability,/* At present if the check_gamma test fails the gamma of the colorspace is; * not updated however the colorspace is not invalidated. This; * corresponds to the case where the existing gamma comes from an sRGB; * chunk or profile. An error message has already been output.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:233,error,error,233,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,"/* At present, jcsample.c can request context rows only for smoothing.; * In the future, we might also need context rows for CCIR601 sampling; * or other more-complex downsampling procedures. The code to support; * context rows should be compiled only if needed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c:167,down,downsampling,167,graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,1,['down'],['downsampling']
Availability,"/* At this point curN contains the 7/16 error value to be propagated; * to the next pixel on the current line, and all the errors for the; * next line have been shifted over. We are therefore ready to move on.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:40,error,error,40,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,2,['error'],"['error', 'errors']"
Availability,/* Attempt sane error recovery */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:16,error,error,16,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,2,"['error', 'recover']","['error', 'recovery']"
Availability,/* Available for callers as a distinct value */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:3,Avail,Available,3,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['Avail'],['Available']
Availability,"/* BUFPOST = repeat call after a suspension, anything else is error */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapistd.c:62,error,error,62,graf2d/asimage/src/libAfterImage/libjpeg/jdapistd.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapistd.c,1,['error'],['error']
Availability,"/* Benign error in libpng. Can continue, but may have a problem.; * User can choose whether to handle as a fatal error or as a warning. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:10,error,error,10,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,['error'],['error']
Availability,/* Bisect the subinterval with the largest error estimate */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:43,error,error,43,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,2,['error'],['error']
Availability,/* Bit mask for all feature defines. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:7,mask,mask,7,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['mask'],['mask']
Availability,/* Break if error occured (-1); 						 * or server shutdown (-2) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:12,error,error,12,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* Build the initializer for a C++20 module:; This is arranged to be run only once regardless of how many times the module; might be included transitively. This arranged by using a guard variable. If there are no initializers at all (and also no imported modules) we reduce; this to an empty function (since the Itanium ABI requires that this function; be available to a caller, which might be produced by a different; implementation). First we call any initializers for imported modules.; We then call initializers for the Global Module Fragment (if present); We then call initializers for the current module.; We then call initializers for the Private Module Fragment (if present); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp:356,avail,available,356,interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,1,['avail'],['available']
Availability,"/* Builds a module from the bitcode in the specified memory buffer, returning a; reference to the module via the OutModule parameter. Returns 0 on success.; Optionally returns a human-readable error message via OutMessage. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitReader.cpp:193,error,error,193,interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitReader.cpp,1,['error'],['error']
Availability,"/* But Z_OK is returned, not Z_STREAM_END; this allows the claim; * function above to return Z_STREAM_END on an error (though it never; * does in the current versions of zlib.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:112,error,error,112,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['error'],['error']
Availability,"/* Buttons 1 to 3 will come in as WM_[LMR]BUTTON{DOWN,UP} */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c:49,DOWN,DOWN,49,graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,1,['DOWN'],['DOWN']
Availability,"/* By default, apply fancy downsampling */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c:27,down,downsampling,27,graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,1,['down'],['downsampling']
Availability,/* CGI error handler should show the status code */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:7,error,error,7,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* CGI program did not explicitly send an error, but a broken; 			 * respon header */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:42,error,error,42,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* CGI program explicitly sent an error */; /* Write the error message to the internal log */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:34,error,error,34,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['error'],['error']
Availability,/* Callback < 0: Error. Abort init. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:17,Error,Error,17,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Error'],['Error']
Availability,"/* Callback types for websocket handlers in C/C++. mg_websocket_connect_handler; Is called when the client intends to establish a websocket connection,; before websocket handshake.; Return value:; 0: civetweb proceeds with websocket handshake.; 1: connection is closed immediately. mg_websocket_ready_handler; Is called when websocket handshake is successfully completed, and; connection is ready for data exchange. mg_websocket_data_handler; Is called when a data frame has been received from the client.; Parameters:; bits: first byte of the websocket frame, see websocket RFC at; http://tools.ietf.org/html/rfc6455, section 5.2; data, data_len: payload, with mask (if any) already applied.; Return value:; 1: keep this websocket connection open.; 0: close this websocket connection. mg_connection_close_handler; Is called, when the connection is closed.*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:662,mask,mask,662,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['mask'],['mask']
Availability,"/* Called on error, including one set by other; * methods in the vtable. The GError should not be freed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.h:13,error,error,13,graf2d/win32gdk/gdk/src/glib/gmarkup.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.h,1,['error'],['error']
Availability,/* Called when civetweb is about to send HTTP error to the client.; 	 Implementing this callback allows to create custom error pages.; 	 Parameters:; 	 conn: current connection.; 	 status: HTTP error status code.; 	 errmsg: error message text.; 	 Return value:; 	 1: run civetweb error handler.; 	 0: callback already handled the error. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:46,error,error,46,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,6,['error'],['error']
Availability,"/* Called when data frame has been received from the peer.; 	 Parameters:; 	 bits: first byte of the websocket frame, see websocket RFC at; 	 http://tools.ietf.org/html/rfc6455, section 5.2; 	 data, data_len: payload, with mask (if any) already applied.; 	 Return value:; 	 1: keep this websocket connection open.; 	 0: close this websocket connection.; 	 This callback is deprecated: Use mg_set_websocket_handler instead. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:223,mask,mask,223,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['mask'],['mask']
Availability,/* Cannot determine if socket is already closed. This should; 		 * not occur and never did in a test. Log an error message; 		 * and continue. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:109,error,error,109,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* Cannot use TrackMouseEvent, as the stupid WM_MOUSELEAVE message; * doesn't tell us where the mouse has gone. Thus we cannot use it to; * generate a correct GdkNotifyType. Pity, as using TrackMouseEvent; * otherwise would make it possible to reliably generate; * GDK_LEAVE_NOTIFY events, which would help get rid of those pesky; * tooltips sometimes popping up in the wrong place.; */; /* define USE_TRACKMOUSEEVENT */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:244,reliab,reliably,244,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,1,['reliab'],['reliably']
Availability,/* Case 2: not enough bytes available to detect anything */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/loop_unicode.h:28,avail,available,28,graf2d/win32gdk/gdk/src/iconv/loop_unicode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/loop_unicode.h,1,['avail'],['available']
Availability,/* Change back the values we flagged as permanent failures */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c:50,failure,failures,50,graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c,1,['failure'],['failures']
Availability,/* Check for an internal error. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:25,error,error,25,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,/* Check for any failure before proceeding. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpread.c:17,failure,failure,17,graf2d/asimage/src/libAfterImage/libpng/pngpread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpread.c,1,['failure'],['failure']
Availability,/* Check for errors */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.c:13,error,errors,13,builtins/zstd/common/pool.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.c,1,['error'],['errors']
Availability,/* Check for errors for any FD in the set */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:13,error,errors,13,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['errors']
Availability,/* Check for the failure cases where support has been disabled at compile; * time. This code is hardly ever compiled - it's here because; * STORE_UNKNOWN_CHUNKS is set by both read and write code (compiling in this; * code) but may be meaningless if the read or write handling of unknown; * chunks is not compiled in.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c:17,failure,failure,17,graf2d/asimage/src/libAfterImage/libpng/pngset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c,1,['failure'],['failure']
Availability,"/* Check if the current request has a valid authentication token set.; * A file is used to provide a list of valid user names, realms and; * password hashes. The file can be created and modified using the; * mg_modify_passwords_file API function.; * Parameters:; * conn: Current connection handle.; * realm: Authentication realm. If NULL is supplied, the sever domain; * set in the authentication_domain configuration is used.; * filename: Path and name of a file storing multiple password hashes.; * Return:; * > 0 Valid authentication; * 0 Invalid authentication; * < 0 Error (all values < 0 should be considered as invalid; * authentication, future error codes will have negative; * numbers); * -1 Parameter error; * -2 File not found; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:572,Error,Error,572,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,3,"['Error', 'error']","['Error', 'error']"
Availability,"/* Check that the scan parameters Ss, Se, Ah/Al are OK for sequential JPEG.; * This ought to be an error condition, but we make it a warning because; * there are some baseline files out there with all zeroes in these bytes.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:99,error,error,99,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,1,['error'],['error']
Availability,"/* Check that the scan parameters Ss, Se, Ah/Al are OK for sequential JPEG.; * This ought to be an error condition, but we make it a warning.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c:99,error,error,99,graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,1,['error'],['error']
Availability,"/* Check the intent, then check for existing settings. It is valid for the; * PNG file to have cHRM or gAMA chunks along with sRGB, but the values must; * be consistent with the correct values. If, however, this function is; * called below because an iCCP chunk matches sRGB then it is quite; * conceivable that an older app recorded incorrect gAMA and cHRM because of; * an incorrect calculation based on the values in the profile - this does; * *not* invalidate the profile (though it still produces an error, which can; * be ignored.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:505,error,error,505,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,"/* Check version.; * Major version must be 1, anything else signals an incompatible change.; * (We used to treat this as an error, but now it's a nonfatal warning,; * because some bozo at Hijaak couldn't read the spec.); * Minor version should be 0..2, but process anyway if newer.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:124,error,error,124,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['error'],['error']
Availability,/* Check whether the list contains more than two error estimates */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:49,error,error,49,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['error'],['error']
Availability,"/* Check which features where set when the civetweb library has been compiled.; The function explicitly addresses compile time defines used when building; the library - it does not mean, the feature has been initialized using a; mg_init_library call.; mg_check_feature can be called anytime, even before mg_init_library has; been called. Parameters:; feature: specifies which feature should be checked; The value is a bit mask. The individual bits are defined as:; 1 serve files (NO_FILES not set); 2 support HTTPS (NO_SSL not set); 4 support CGI (NO_CGI not set); 8 support IPv6 (USE_IPV6 set); 16 support WebSocket (USE_WEBSOCKET set); 32 support Lua scripts and Lua server pages (USE_LUA is set); 64 support server side JavaScript (USE_DUKTAPE is set); 128 support caching (NO_CACHING not set); 256 support server statistics (USE_SERVER_STATS is set); 512 support for on the fly compression (USE_ZLIB is set). These values are defined as MG_FEATURES_*. The result is undefined, if bits are set that do not represent a; defined feature (currently: feature >= 1024).; The result is undefined, if no bit is set (feature == 0). Return:; If a feature is available, the corresponding bit is set; If a feature is not available, the bit is 0; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:422,mask,mask,422,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,3,"['avail', 'mask']","['available', 'mask']"
Availability,/* Cling error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:9,error,error,9,bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx,2,['error'],['error']
Availability,"/* Close, if keep alive is not enabled */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:18,alive,alive,18,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['alive'],['alive']
Availability,"/* Combine 8 of these to get the full mask. For the 1-bpp and 2-bpp; * cases the result needs replicating, for the 4-bpp case the above; * generates a full 32 bits.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:38,mask,mask,38,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['mask'],['mask']
Availability,"/* Combine a row of data, dealing with alpha, etc. if requested. 'row' is an; * array of png_ptr->width pixels. If the image is not interlaced or this; * is the final pass this just does a memcpy, otherwise the ""display"" flag; * is used to determine whether to copy pixels that are not in the current pass.; *; * Because 'png_do_read_interlace' (below) replicates pixels this allows this; * function to achieve the documented 'blocky' appearance during interlaced read; * if display is 1 and the 'sparkle' appearance, where existing pixels in 'row'; * are not changed if they are not in the current pass, when display is 0.; *; * 'display' must be 0 or 1, otherwise the memcpy will be done regardless.; *; * The API always reads from the png_struct row buffer and always assumes that; * it is full width (png_do_read_interlace has already been called.); *; * This function is only ever used to write to row buffers provided by the; * caller of the relevant libpng API and the row must have already been; * transformed by the read transformations.; *; * The PNG_USE_COMPILE_TIME_MASKS option causes generation of pre-computed; * bitmasks for use within the code, otherwise runtime generated masks are used.; * The default is compile time masks.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:1190,mask,masks,1190,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,2,['mask'],['masks']
Availability,"/* Combines the row recently read in with the existing pixels in the row. This; * routine takes care of alpha and transparency if requested. This routine also; * handles the two methods of progressive display of interlaced images,; * depending on the 'display' value; if 'display' is true then the whole row; * (dp) is filled from the start by replicating the available pixels. If; * 'display' is false only those pixels present in the pass are filled in.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:360,avail,available,360,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['avail'],['available']
Availability,"/* Compile errors here mean that zlib now uses the value co-opted in; * pngpriv.h for PNG_UNEXPECTED_ZLIB_RETURN; update the switch above; * and change pngpriv.h. Note that this message is ""... return"",; * whereas the default/Z_OK one is ""... return code"".; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:11,error,errors,11,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['errors']
Availability,/* Compress each sample and sum their sizes (or error) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c:48,error,error,48,builtins/zstd/dictBuilder/cover.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c,1,['error'],['error']
Availability,"/* Compress len zeros to output. Return -1 on error, 0 on success. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzwrite.c:46,error,error,46,builtins/zlib/gzwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzwrite.c,1,['error'],['error']
Availability,"/* Compress whatever is at avail_in and next_in and write to the output file.; Return -1 if there is an error writing to the output file, otherwise 0.; flush is assumed to be a valid deflate() flush value. If flush is Z_FINISH,; then the deflate() state is reset to start a new gzip stream. If gz->direct; is true, then simply write to the output file without compressing, and; ignore flush. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzwrite.c:104,error,error,104,builtins/zlib/gzwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzwrite.c,1,['error'],['error']
Availability,"/* Compress, block-by-block, all of the sequences given.; *; * Returns the cumulative size of all compressed blocks (including their headers), otherwise a ZSTD error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:160,error,error,160,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['error'],['error']
Availability,/* Compression preprocessing (downsampling input buffer control) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h:30,down,downsampling,30,graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,1,['down'],['downsampling']
Availability,"/* Compute actual representation error at this pixel */; /* Note: we can do this even though we don't have the final */; /* pixel code, because the colormap is orthogonal. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:33,error,error,33,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,1,['error'],['error']
Availability,/* Compute error estimate */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:11,error,error,11,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['error'],['error']
Availability,"/* Compute error fractions to be propagated to adjacent pixels.; 	 * Add these into the running sums, and simultaneously shift the; 	 * next-line error sums left by 1 column.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:11,error,error,11,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,2,['error'],['error']
Availability,"/* Compute error fractions to be propagated to adjacent pixels.; * Add these into the running sums, and simultaneously shift the; * next-line error sums left by 1 column.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:11,error,error,11,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,2,['error'],['error']
Availability,/* Compute representation error for this pixel */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:26,error,error,26,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['error'],['error']
Availability,"/* Conditional load ops */; /// Conditionally loads double-precision floating point elements from a; /// memory location pointed to by \a __p into a 128-bit vector of; /// [2 x double], depending on the mask bits associated with each data; /// element.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VMASKMOVPD </c> instruction.; ///; /// \param __p; /// A pointer to a memory location that contains the double-precision; /// floating point values.; /// \param __m; /// A 128-bit integer vector containing the mask. The most significant bit of; /// each data element represents the mask bits. If a mask bit is zero, the; /// corresponding value in the memory location is not loaded and the; /// corresponding field in the return value is set to zero.; /// \returns A 128-bit vector of [2 x double] containing the loaded values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:203,mask,mask,203,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,4,['mask'],['mask']
Availability,"/* Conditional store ops */; /// Moves single-precision floating point values from a 256-bit vector; /// of [8 x float] to a memory location pointed to by \a __p, according to; /// the specified mask.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VMASKMOVPS </c> instruction.; ///; /// \param __p; /// A pointer to a memory location that will receive the float values.; /// \param __m; /// A 256-bit integer vector of [8 x dword] containing the mask. The most; /// significant bit of each dword element in the mask vector represents the; /// mask bits. If a mask bit is zero, the corresponding value from vector; /// \a __a is not stored and the corresponding field in the memory location; /// pointed to by \a __p is not changed.; /// \param __a; /// A 256-bit vector of [8 x float] containing the values to be stored.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:195,mask,mask,195,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,5,['mask'],['mask']
Availability,/* Configuration of the maximum number of websocket PINGs that might; * stay unanswered before the connection is considered broken.; * Note: The name of this define may still change (until it is; * defined as a compile parameter in a documentation).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:52,PING,PINGs,52,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['PING'],['PINGs']
Availability,"/* Connect to a TCP server as a client (can be used to connect to a HTTP server); Parameters:; host: host to connect to, i.e. ""www.wikipedia.org"" or ""192.168.1.1"" or; ""localhost""; port: server port; use_ssl: make a secure connection to server; error_buffer, error_buffer_size: buffer for an error message. Return:; On success, valid mg_connection object.; On error, NULL. Se error_buffer for details.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:291,error,error,291,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,['error'],['error']
Availability,"/* Connect to a websocket as a client; Parameters:; host: host to connect to, i.e. ""echo.websocket.org"" or ""192.168.1.1"" or; ""localhost""; port: server port; use_ssl: make a secure connection to server; error_buffer, error_buffer_size: buffer for an error message; path: server path you are trying to connect to, i.e. if connection to; localhost/app, path should be ""/app""; origin: value of the Origin HTTP header; data_func: callback that should be used when data is received from the; server; user_data: user supplied argument. Return:; On success, valid mg_connection object.; On error, NULL. Se error_buffer for details.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:84,echo,echo,84,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,3,"['echo', 'error']","['echo', 'error']"
Availability,/* Consume the input prior to error checking to mirror buffered mode. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:30,error,error,30,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['error'],['error']
Availability,"/* Control the overlap size, as a fraction of window size.; * The overlap size is an amount of data reloaded from previous job at the beginning of a new job.; * It helps preserve compression ratio, while each job is compressed in parallel.; * This value is enforced only when nbWorkers >= 1.; * Larger values increase compression ratio, but decrease speed.; * Possible values range from 0 to 9 :; * - 0 means ""default"" : value will be determined by the library, depending on strategy; * - 1 means ""no overlap""; * - 9 means ""full overlap"", using a full window size.; * Each intermediate rank increases/decreases load size by a factor 2 :; * 9: full window; 8: w/2; 7: w/4; 6: w/8; 5:w/16; 4: w/32; 3:w/64; 2:w/128; 1:no overlap; 0:default; * default value varies between 6 and 9, depending on strategy */; /* note : additional experimental parameters are also available; * within the experimental section of the API.; * At the time of this writing, they include :; * ZSTD_c_rsyncable; * ZSTD_c_format; * ZSTD_c_forceMaxWindow; * ZSTD_c_forceAttachDict; * ZSTD_c_literalCompressionMode; * ZSTD_c_targetCBlockSize; * ZSTD_c_srcSizeHint; * ZSTD_c_enableDedicatedDictSearch; * ZSTD_c_stableInBuffer; * ZSTD_c_stableOutBuffer; * ZSTD_c_blockDelimiters; * ZSTD_c_validateSequences; * Because they are not stable, it's necessary to define ZSTD_STATIC_LINKING_ONLY to access them.; * note : never ever use experimentalParam? names directly;; * also, the enums values themselves are unstable and can still change.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:859,avail,available,859,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['avail'],['available']
Availability,"/* Convenience function -- create detached thread.; Return: 0 on success, non-0 on error. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:83,error,error,83,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['error'],['error']
Availability,"/* Convert from an sRGB encoded value 0..255 to a 16-bit linear value,; * 0..65535. This table gives the closest 16-bit answers (no errors).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:132,error,errors,132,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['error'],['errors']
Availability,/* Convert mask bitmap to region */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkwindow-win32.c:11,mask,mask,11,graf2d/win32gdk/gdk/src/gdk/win32/gdkwindow-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkwindow-win32.c,1,['mask'],['mask']
Availability,"/* Convert month to the month number. Return -1 on error, or month number */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:51,error,error,51,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* Copied from pngpriv.h but only used in error messages below. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:42,error,error,42,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['error'],['error']
Availability,/* Copy the mask before we shift the queue and destroy it */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:12,mask,mask,12,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['mask'],['mask']
Availability,/* Correct error message? FIXME */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c:11,error,error,11,graf2d/win32gdk/gdk/src/glib/giowin32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c,3,['error'],['error']
Availability,/* Could not parse the CGI response. Check if some error message on; 		 * stderr. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:51,error,error,51,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* Create an error message in allocated memory and set state->err and; state->msg accordingly. Free any previous error message already there. Do; not try to free or allocate space if the error is Z_MEM_ERROR (out of; memory). Simply save the error message as a static string. If there is an; allocation failure constructing the error message, then convert the error to; out of memory. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:13,error,error,13,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,7,"['error', 'failure']","['error', 'failure']"
Availability,"/* Create and initialize the png_struct with the desired error handler; 	 * functions. If you want to use the default stderr and longjump method,; 	 * you can supply NULL for the last three parameters. We also supply the; 	 * the compiler header file version, so that we know if the application; 	 * was compiled with a compatible version of the library. REQUIRED; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c:57,error,error,57,graf2d/asimage/src/libAfterImage/import.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c,1,['error'],['error']
Availability,"/* Create the buffer. It holds downsampled data, so each component; * may be of a different size.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmainct.c:31,down,downsampled,31,graf2d/asimage/src/libAfterImage/libjpeg/jcmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmainct.c,1,['down'],['downsampled']
Availability,"/* Currently the above both depend on SETJMP_SUPPORTED, however it would be; * possible to implement without setjmp support just so long as there is some; * way to handle the error return here:; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:175,error,error,175,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['error'],['error']
Availability,/* DWARF EH functions; currently not available on Darwin/ARM */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/unwind.h:37,avail,available,37,interpreter/llvm-project/clang/lib/Headers/unwind.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/unwind.h,1,['avail'],['available']
Availability,"/* DataTypes:. THistDataContent; THistDataUncertainty; THistDataMomentUncert; THistDataRuntime; and; MyTHistDataNoStat; MyTHistDataContent; MyTHistDataMomentUncert. /opt/build/root_builds/rootcling.cmake/include/ROOT/THistBinIter.h:53:50: error: no member named 'GetUncertainty' in; 'ROOT::Experimental::THistDataContent<2, double, ROOT::Experimental::THistDataDefaultStorage>::TBinStat<double>' auto; GetUncertainty() const { return GetStat().GetUncertainty(); }. new ones (STATCLASSES). THistStatContent; THistStatUncertainty; THistStatTotalSumOfWeights; THistStatTotalSumOfSquaredWeights; THistDataMomentUncert. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/speed/histspeedtest.cxx:239,error,error,239,hist/histv7/speed/histspeedtest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/speed/histspeedtest.cxx,1,['error'],['error']
Availability,"/* Declarations for Floyd-Steinberg dithering.; *; * Errors are accumulated into the array fserrors[], at a resolution of; * 1/16th of a pixel count. The error at a given pixel is propagated; * to its not-yet-processed neighbors using the standard F-S fractions,; *		...	(here)	7/16; *		3/16	5/16	1/16; * We work left-to-right on even rows, right-to-left on odd rows.; *; * We can get away with a single array (holding one row's worth of errors); * by using it to store the current row's errors at pixel columns not yet; * processed, but the next row's errors at columns already processed. We; * need only a few extra variables to hold the errors immediately around the; * current column. (If we are lucky, those variables are in registers, but; * even if not, they're probably cheaper to access than array elements are.); *; * The fserrors[] array is indexed [component#][position].; * We provide (#columns + 2) entries per component; the extra entry at each; * end saves us from special-casing the first and last pixels.; *; * Note: on a wide image, we might not have enough room in a PC's near data; * segment to hold the error array; so it is allocated with alloc_large.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:53,Error,Errors,53,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,7,"['Error', 'error']","['Errors', 'error', 'errors']"
Availability,/* Declare all of the available assembly parser initialization functions. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h:22,avail,available,22,interpreter/llvm-project/llvm/include/llvm-c/Target.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h,1,['avail'],['available']
Availability,/* Declare all of the available assembly printer initialization functions. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h:22,avail,available,22,interpreter/llvm-project/llvm/include/llvm-c/Target.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h,1,['avail'],['available']
Availability,/* Declare all of the available disassembler initialization functions. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h:22,avail,available,22,interpreter/llvm-project/llvm/include/llvm-c/Target.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h,1,['avail'],['available']
Availability,/* Declare all of the target-initialization functions that are available. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h:63,avail,available,63,interpreter/llvm-project/llvm/include/llvm-c/Target.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h,1,['avail'],['available']
Availability,/* Declare buffers for bytes available to return */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx:29,avail,available,29,sql/odbc/src/TODBCServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx,1,['avail'],['available']
Availability,"/* Decompress from input to the provided next_out and avail_out in the state.; On return, state->x.have and state->x.next point to the just decompressed; data. If the gzip stream completes, state->how is reset to LOOK to look for; the next gzip stream or raw data, once state->x.have is depleted. Returns 0; on success, -1 on failure. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c:326,failure,failure,326,builtins/zlib/gzread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c,1,['failure'],['failure']
Availability,/* Default attributes for VLX masked forms. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/gfniintrin.h:30,mask,masked,30,interpreter/llvm-project/clang/lib/Headers/gfniintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/gfniintrin.h,1,['mask'],['masked']
Availability,/* Default attributes for ZMM masked forms. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/gfniintrin.h:30,mask,masked,30,interpreter/llvm-project/clang/lib/Headers/gfniintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/gfniintrin.h,1,['mask'],['masked']
Availability,/* Default attributes for simple form (no masking). */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/gfniintrin.h:42,mask,masking,42,interpreter/llvm-project/clang/lib/Headers/gfniintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/gfniintrin.h,1,['mask'],['masking']
Availability,/* Define if libAfterBase is available */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/win32/config.h:29,avail,available,29,graf2d/asimage/src/libAfterImage/win32/config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/win32/config.h,1,['avail'],['available']
Availability,/* Define if libFreeType is available */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/win32/config.h:28,avail,available,28,graf2d/asimage/src/libAfterImage/win32/config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/win32/config.h,1,['avail'],['available']
Availability,/* Define if libFreeType is available - should always be under win32 ! */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/win32/config.h:28,avail,available,28,graf2d/asimage/src/libAfterImage/win32/config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/win32/config.h,1,['avail'],['available']
Availability,/* Define if libgif is available */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/win32/config.h:23,avail,available,23,graf2d/asimage/src/libAfterImage/win32/config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/win32/config.h,1,['avail'],['available']
Availability,/* Define if libjpeg is available */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/win32/config.h:24,avail,available,24,graf2d/asimage/src/libAfterImage/win32/config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/win32/config.h,1,['avail'],['available']
Availability,/* Define if libpng is available */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/win32/config.h:23,avail,available,23,graf2d/asimage/src/libAfterImage/win32/config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/win32/config.h,1,['avail'],['available']
Availability,/* Define if libtiff is available */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/win32/config.h:24,avail,available,24,graf2d/asimage/src/libAfterImage/win32/config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/win32/config.h,1,['avail'],['available']
Availability,/* Define if support for shared memory XImages is available */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/win32/config.h:50,avail,available,50,graf2d/asimage/src/libAfterImage/win32/config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/win32/config.h,1,['avail'],['available']
Availability,/* Define if you have the <dimm.h> header file; * (available in the Platform SDK); */; /* #define HAVE_DIMM_H 1 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/config.h:51,avail,available,51,graf2d/win32gdk/gdk/src/gdk/config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/config.h,2,['avail'],['available']
Availability,/* Define some mathematical constants that aren't available; * symbolically in some strict ISO C implementations.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gtypes.h:50,avail,available,50,graf2d/win32gdk/gdk/src/glib/gtypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gtypes.h,2,['avail'],['available']
Availability,"/* Define to 1 if you want getc etc. to use unlocked I/O if available.; Unlocked I/O can improve performance in unithreaded apps, but it is not; safe for multithreaded apps. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/config.h:60,avail,available,60,graf2d/win32gdk/gdk/src/iconv/config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/config.h,1,['avail'],['available']
Availability,/* Delete is not successful: Return 500 (Server error). */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:48,error,error,48,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* Dictionary format :; * See :; * https://github.com/facebook/zstd/blob/release/doc/zstd_compression_format.md#dictionary-format; */; /*! ZSTD_loadZstdDictionary() :; * @return : dictID, or an error code; * assumptions : magic number supposed already checked; * dictSize supposed >= 8; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:194,error,error,194,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['error'],['error']
Availability,/* Disable HTTP keep-alive on a per-connection basis.; Reference: https://github.com/civetweb/civetweb/issues/727; Parameters:; conn: Current connection handle.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:21,alive,alive,21,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['alive'],['alive']
Availability,/* Do nothing if already encountered an error in a previous call. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/loop_unicode.h:40,error,error,40,graf2d/win32gdk/gdk/src/iconv/loop_unicode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/loop_unicode.h,5,['error'],['error']
Availability,"/* Do this first in case of an error below; if the app implements its own; * memory management this can lead to png_free calling png_error, which; * will abort this routine and return control to the app error handler.; * An infinite loop may result if it then tries to free the same info; * ptr.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:31,error,error,31,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,2,['error'],['error']
Availability,/* Don't reset is_AltGr_key here. Othewise we can't type several; * AltGr-accessed chars while keeping the AltGr pressed down; * all the time.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:121,down,down,121,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,1,['down'],['down']
Availability,/* Don't send the error message back to the client */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:18,error,error,18,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* Download data from the remote web server.; host: host name to connect to, e.g. ""foo.com"", or ""10.12.40.1"".; port: port number, e.g. 80.; use_ssl: whether to use SSL connection.; error_buffer, error_buffer_size: error message placeholder.; request_fmt,...: HTTP request.; Return:; On success, valid pointer to the new connection, suitable for mg_read().; On error, NULL. error_buffer contains error message.; Example:; char ebuf[100];; struct mg_connection *conn;; conn = mg_download(""google.com"", 80, 0, ebuf, sizeof(ebuf),; ""%s"", ""GET / HTTP/1.0\r\nHost: google.com\r\n\r\n"");. mg_download is equivalent to calling mg_connect_client followed by; mg_printf and mg_get_response. Using these three functions directly may; allow more control as compared to using mg_download.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:3,Down,Download,3,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,4,"['Down', 'error']","['Download', 'error']"
Availability,/* Downsampling */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h:3,Down,Downsampling,3,graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,1,['Down'],['Downsampling']
Availability,/* ERROR */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/hist.c:3,ERROR,ERROR,3,builtins/zstd/compress/hist.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/hist.c,1,['ERROR'],['ERROR']
Availability,/* ERROR : this is not a valid value */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c:3,ERROR,ERROR,3,interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,1,['ERROR'],['ERROR']
Availability,/* ERROR_TEXT */; /* Utility to safely appends strings to a buffer. This never errors out so; * error checking is not required in the caller.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:79,error,errors,79,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,2,['error'],"['error', 'errors']"
Availability,"/* ERR_*, ERROR */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/entropy_common.c:10,ERROR,ERROR,10,builtins/zstd/common/entropy_common.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/entropy_common.c,1,['ERROR'],['ERROR']
Availability,/* Each error code path in this function must send an error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:8,error,error,8,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['error'],['error']
Availability,"/* Either this is an sRGB image, in which case the calculated gamma; * approximation should match, or this is an image with a profile and the; * value libpng calculates for the gamma of the profile does not match the; * value recorded in the file. The former, sRGB, case is an error, the; * latter is just a warning.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:277,error,error,277,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,/* Eliminate the local error handling: */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:23,error,error,23,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,/* Error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,Error,Error,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,3,['Error'],['Error']
Availability,/* Error : last LASTLITERALS bytes must be literals (uncompressed) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:3,Error,Error,3,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['Error'],['Error']
Availability,/* Error : offset outside buffers */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:3,Error,Error,3,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['Error'],['Error']
Availability,/* Error : offset outside buffers */; /* match starting within external dictionary */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:3,Error,Error,3,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,2,['Error'],['Error']
Availability,/* Error checking and repcodes update */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:3,Error,Error,3,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['Error'],['Error']
Availability,/* Error clean up */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:3,Error,Error,3,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,2,['Error'],['Error']
Availability,/* Error codes */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkprivate-win32.h:3,Error,Error,3,graf2d/win32gdk/gdk/src/gdk/win32/gdkprivate-win32.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkprivate-win32.h,1,['Error'],['Error']
Availability,/* Error conditions */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:3,Error,Error,3,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['Error'],['Error']
Availability,/* Error converting fallback string - fatal; 		 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c:3,Error,Error,3,graf2d/win32gdk/gdk/src/glib/gconvert.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c,1,['Error'],['Error']
Availability,/* Error event */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,Error,Error,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Error'],['Error']
Availability,/* Error exit - errmsg has been set. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:3,Error,Error,3,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['Error'],['Error']
Availability,/* Error exit handler: does not return to caller */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:3,Error,Error,3,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['Error'],['Error']
Availability,/* Error from the child. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:3,Error,Error,3,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,2,['Error'],['Error']
Availability,/* Error handler module */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:3,Error,Error,3,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['Error'],['Error']
Availability,/* Error handling */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.h:3,Error,Error,3,graf2d/win32gdk/gdk/src/glib/giochannel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.h,1,['Error'],['Error']
Availability,/* Error message generation */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:3,Error,Error,3,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['Error'],['Error']
Availability,/* Error message the same as for INSIDE_TEXT */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.c:3,Error,Error,3,graf2d/win32gdk/gdk/src/glib/gmarkup.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.c,1,['Error'],['Error']
Availability,/* Error return */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:3,Error,Error,3,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,2,['Error'],['Error']
Availability,/* Error sending the body data */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,Error,Error,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Error'],['Error']
Availability,/* Error types */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gscanner.h:3,Error,Error,3,graf2d/win32gdk/gdk/src/glib/gscanner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gscanner.h,1,['Error'],['Error']
Availability,/* Error while parsing headers */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,Error,Error,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['Error'],['Error']
Availability,"/* Error(""Interpolate"", ""Should not get to here""); */; // may as well soldier on; // SL: initialize before try to find better values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:3,Error,Error,3,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Error'],['Error']
Availability,"/* Error, no bytes read */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,Error,Error,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Error'],['Error']
Availability,/* Error/quit */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:3,Error,Error,3,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,2,['Error'],['Error']
Availability,/* Error: could not load JIT functions. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c:3,Error,Error,3,interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,1,['Error'],['Error']
Availability,/* Error: first report in this thread is method exit */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c:3,Error,Error,3,interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,1,['Error'],['Error']
Availability,/* Error: send failed */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,Error,Error,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['Error'],['Error']
Availability,/* ErrorCode */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/GL_glu.h:3,Error,ErrorCode,3,graf3d/eve7/glu/GL_glu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/GL_glu.h,1,['Error'],['ErrorCode']
Availability,"/* Errorcheck mutexes. If you define G_ERRORCHECK_MUTEXES, then all; * mutexes will check for re-locking and re-unlocking */; /* Initialize thread system with errorcheck mutexes. vtable must be; * NULL. Do not call directly. Use #define G_ERRORCHECK_MUTEXES; * instead.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthread.h:3,Error,Errorcheck,3,graf2d/win32gdk/gdk/src/glib/gthread.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthread.h,2,"['Error', 'error']","['Errorcheck', 'errorcheck']"
Availability,"/* Errors 1xx, 204 and 304 MUST NOT send a body */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,Error,Errors,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Error'],['Errors']
Availability,"/* Even part per LL&M figure 1 --- note that published figure is faulty;; * rotator ""sqrt(2)*c1"" should be ""sqrt(2)*c6"".; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c:65,fault,faulty,65,graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,6,['fault'],['faulty']
Availability,/* Event masks. (Used to select what types of events a window; * will receive).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkevents.h:9,mask,masks,9,graf2d/win32gdk/gdk/src/gdk/gdkevents.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkevents.h,1,['mask'],['masks']
Availability,"/* Event types.; * Nothing: No event occurred.; * Delete: A window delete event was sent by the window manager.; *	 The specified window should be deleted.; * Destroy: A window has been destroyed.; * Expose: Part of a window has been uncovered.; * NoExpose: Same as expose, but no expose event was generated.; * VisibilityNotify: A window has become fully/partially/not obscured.; * MotionNotify: The mouse has moved.; * ButtonPress: A mouse button was pressed.; * ButtonRelease: A mouse button was release.; * KeyPress: A key was pressed.; * KeyRelease: A key was released.; * EnterNotify: A window was entered.; * LeaveNotify: A window was exited.; * FocusChange: The focus window has changed. (The focus window gets; *		 keyboard events).; * Resize: A window has been resized.; * Map: A window has been mapped. (It is now visible on the screen).; * Unmap: A window has been unmapped. (It is no longer visible on; *	 the screen).; * Scroll: A mouse wheel was scrolled either up or down.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkevents.h:983,down,down,983,graf2d/win32gdk/gdk/src/gdk/gdkevents.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkevents.h,1,['down'],['down']
Availability,"/* Expand data to 24-bit RGB, or 8-bit grayscale, with alpha if available. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:64,avail,available,64,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['avail'],['available']
Availability,"/* Expand paletted colors into true RGB triplets; * Expand grayscale images to full 8 bits from 1, 2, or 4 bits/pixel; * Expand paletted or RGB images with transparency to full alpha; * channels so the data will be available as RGBA quartets.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:215,avail,available,215,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['avail'],['available']
Availability,/* Expand paletted or RGB images with transparency to full alpha channels; 				 * so the data will be available as RGBA quartets.; 		 		 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c:102,avail,available,102,graf2d/asimage/src/libAfterImage/import.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c,1,['avail'],['available']
Availability,"/* Expect normal source image, not raw downsampled data */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c:39,down,downsampled,39,graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,1,['down'],['downsampled']
Availability,/* FIXME error detection? */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c:9,error,error,9,graf2d/win32gdk/gdk/src/glib/giowin32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c,2,['error'],['error']
Availability,"/* FIXME get all errors, better error messages */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c:17,error,errors,17,graf2d/win32gdk/gdk/src/glib/giowin32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c,4,['error'],"['error', 'errors']"
Availability,"/* FIXME: if failure occurs on something other than the first; device, things will be badly inconsistent */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c:13,failure,failure,13,graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,1,['failure'],['failure']
Availability,"/* FIXME: this slows things down a little - it could be; * integrated into the strncpy below, perhaps. OTOH, strlen; * is fast.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkpixmap-win32.c:28,down,down,28,graf2d/win32gdk/gdk/src/gdk/win32/gdkpixmap-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkpixmap-win32.c,1,['down'],['down']
Availability,/* Failure case */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:3,Failure,Failure,3,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['Failure'],['Failure']
Availability,/* Failure: the reason is in 'errmsg' */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:3,Failure,Failure,3,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['Failure'],['Failure']
Availability,/* Fatal error - abort start. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:9,error,error,9,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,6,['error'],['error']
Availability,"/* Fatal error - abort start. However, this situation should never; 		 * occur in practice. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:9,error,error,9,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* Fatal error handlers.; * g_on_error_query() will prompt the user to either; * [E]xit, [H]alt, [P]roceed or show [S]tack trace.; * g_on_error_stack_trace() invokes gdb, which attaches to the current; * process and shows a stack trace.; * These function may cause different actions on non-unix platforms.; * The prg_name arg is required by gdb to find the executable, if it is; * passed as NULL, g_on_error_query() will try g_get_prgname().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gbacktrace.h:9,error,error,9,graf2d/win32gdk/gdk/src/glib/gbacktrace.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gbacktrace.h,1,['error'],['error']
Availability,/* Fatal error in PNG image of libpng - can't continue */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:9,error,error,9,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,['error'],['error']
Availability,"/* Fetch data and put it in the output buffer. Assumes state->x.have is 0.; Data is either copied from the input file or decompressed from the input; file depending on state->how. If state->how is LOOK, then a gzip header is; looked for to determine whether to copy or decompress. Returns -1 on error,; otherwise 0. gz_fetch() will leave state->how as COPY or GZIP unless the; end of the input file has been reached and all data has been processed. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c:295,error,error,295,builtins/zlib/gzread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c,1,['error'],['error']
Availability,"/* Fetch value of certain cookie variable into the destination buffer. Destination buffer is guaranteed to be '\0' - terminated. In case of; failure, dst[0] == '\0'. Note that RFC allows many occurrences of the same; parameter. This function returns only first occurrence. Return:; On success, value length.; On error:; -1 (either ""Cookie:"" header is not present at all or the requested; parameter is not found).; -2 (destination buffer is NULL, zero length or too small to hold the; value). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:141,failure,failure,141,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,"['error', 'failure']","['error', 'failure']"
Availability,"/* File is open for writing. If fclose fails, there was probably an; 	 * error flushing the buffer to disk, so the file on disk might be; 	 * broken. Delete it and return an error to the caller. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:73,error,error,73,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['error'],['error']
Availability,"/* File system access:; * NO_FILES = do not serve any files from the file system automatically.; * However, with NO_FILES CivetWeb may still write log files, read access; * control files, default error page files or use API functions like; * mg_send_file in callbacks to send files from the server local; * file system.; * NO_FILES only disables the automatic mapping between URLs and local; * file names.; * NO_FILESYSTEM = do not access any file at all. Useful for embedded; * devices without file system. Logging to files in not available; * (use callbacks instead) and API functions like mg_send_file are not; * available.; * If NO_FILESYSTEM is set, NO_FILES must be set as well.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:196,error,error,196,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,3,"['avail', 'error']","['available', 'error']"
Availability,"/* Fill in IP, port info early so even if SSL setup below fails,; 		 * error handler would have the corresponding info.; 		 * Thanks to Johannes Winkelmann for the patch.; 		 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:71,error,error,71,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* Final output stage: scale down by a factor of 8 and range-limit */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctfst.c:29,down,down,29,graf2d/asimage/src/libAfterImage/libjpeg/jidctfst.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctfst.c,1,['down'],['down']
Availability,"/* Finally claim the zstream for the inflate of the IDAT data, use the bits; * value from the stream (note that this will result in a fatal error if the; * IDAT stream has a bogus deflate header window_bits value, but this should; * not be happening any longer!); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:140,error,error,140,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['error'],['error']
Availability,"/* Finish reading the image into the supplied buffer and clean up the; * png_image structure.; *; * row_stride is the step, in byte or 2-byte units as appropriate,; * between adjacent rows. A positive stride indicates that the top-most row; * is first in the buffer - the normal top-down arrangement. A negative; * stride indicates that the bottom-most row is first in the buffer.; *; * background need only be supplied if an alpha channel must be removed from; * a png_byte format and the removal is to be done by compositing on a solid; * color; otherwise it may be NULL and any composition will be done directly; * onto the buffer. The value is an sRGB color to use for the background,; * for grayscale output the green channel is used.; *; * background must be supplied when an alpha channel must be removed from a; * single byte color-mapped output format, in other words if:; *; * 1) The original format from png_image_begin_read_from_* had; * PNG_FORMAT_FLAG_ALPHA set.; * 2) The format set by the application does not.; * 3) The format set by the application has PNG_FORMAT_FLAG_COLORMAP set and; * PNG_FORMAT_FLAG_LINEAR *not* set.; *; * For linear output removing the alpha channel is always done by compositing; * on black and background is ignored.; *; * colormap must be supplied when PNG_FORMAT_FLAG_COLORMAP is set. It must; * be at least the size (in bytes) returned by PNG_IMAGE_COLORMAP_SIZE.; * image->colormap_entries will be updated to the actual number of entries; * written to the colormap; this may be less than the original value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:283,down,down,283,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['down'],['down']
Availability,"/* First lay down the symbols in order.; * We use a uint64_t to lay down 8 bytes at a time. This reduces branch; * misses since small blocks generally have small table logs, so nearly; * all symbols have counts <= 8. We ensure we have 8 bytes at the end of; * our buffer to handle the over-write.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse_decompress.c:13,down,down,13,builtins/zstd/common/fse_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse_decompress.c,4,['down'],['down']
Availability,/* Floyd-Steinberg error diffusion dither */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:19,error,error,19,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['error'],['error']
Availability,"/* Following fields used by fd channels for input */; /* Data is kept in a circular buffer. To be able to distinguish between; * empty and full buffer, we cannot fill it completely, but have to; * leave a one character gap.; *; * Data available is between indexes rdp and wrp-1 (modulo BUFFER_SIZE).; *; * Empty: wrp == rdp; * Full: (wrp + 1) % BUFFER_SIZE == rdp; * Partial: otherwise; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c:235,avail,available,235,graf2d/win32gdk/gdk/src/glib/giowin32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c,1,['avail'],['available']
Availability,"/* For almost-degenerate situations, the results are not reliable.; * Unless the floating-point arithmetic can be performed without; * rounding errors, *any* implementation will give incorrect results; * on some degenerate inputs, so the client must have some way to; * handle this situation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/geom.c:57,reliab,reliable,57,graf3d/eve7/glu/geom.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/geom.c,2,"['error', 'reliab']","['errors', 'reliable']"
Availability,"/* For other errors, send a generic error message. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:13,error,errors,13,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['error'],"['error', 'errors']"
Availability,"/* For pixel depths up to 4 bpp the 8-pixel mask can be expanded to fit; * into 32 bits, then a single loop over the bytes using the four byte; * values in the 32-bit mask can be used. For the 'display' option the; * expanded mask may also not require any masking within a byte. To; * make this work the PACKSWAP option must be taken into account - it; * simply requires the pixels to be reversed in each byte.; *; * The 'regular' case requires a mask for each of the first 6 passes,; * the 'display' case does a copy for the even passes in the range; * 0..6. This has already been handled in the test above.; *; * The masks are arranged as four bytes with the first byte to use in; * the lowest bits (little-endian) regardless of the order (PACKSWAP or; * not) of the pixels in each byte.; *; * NOTE: the whole of this logic depends on the caller of this function; * only calling it on rows appropriate to the pass. This function only; * understands the 'x' logic; the 'y' logic is handled by the caller.; *; * The following defines allow generation of compile time constant bit; * masks for each pixel depth and each possibility of swapped or not; * swapped bytes. Pass 'p' is in the range 0..6; 'x', a pixel index,; * is in the range 0..7; and the result is 1 if the pixel is to be; * copied in the pass, 0 if not. 'S' is for the sparkle method, 'B'; * for the block method.; *; * With some compilers a compile time expression of the general form:; *; * (shift >= 32) ? (a >> (shift-32)) : (b >> shift); *; * Produces warnings with values of 'shift' in the range 33 to 63; * because the right hand side of the ?: expression is evaluated by; * the compiler even though it isn't used. Microsoft Visual C (various; * versions) and the Intel C compiler are known to do this. To avoid; * this the following macros are used in 1.5.6. This is a temporary; * solution to avoid destabilizing the code during the release process.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:44,mask,mask,44,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,7,['mask'],"['mask', 'masking', 'masks']"
Availability,"/* For user-constructed error messages, has no precise semantics */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.h:24,error,error,24,graf2d/win32gdk/gdk/src/glib/gmarkup.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.h,1,['error'],['error']
Availability,"/* Form pixel value + error, and range-limit to 0..MAXJSAMPLE.; 	 * The maximum error is +- MAXJSAMPLE; this sets the required size; 	 * of the range_limit array.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:22,error,error,22,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,2,['error'],['error']
Availability,"/* Form pixel value + error, and range-limit to 0..MAXJSAMPLE.; * The maximum error is +- MAXJSAMPLE (or less with error limiting);; * this sets the required size of the range_limit array.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:22,error,error,22,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,3,['error'],['error']
Availability,/* Format a message string for the most recent JPEG error or message */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:52,error,error,52,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['error'],['error']
Availability,"/* Format strings */; // static char fmt_9999[] = ""(\002 ** On entry to \002,a6,\002 Parameter nu\// mber \002,i2,\002 had \002,\002an; // illegal Value\002)"";; /* -- LAPACK auxiliary routine (version 3.0) -- */; /* Univ. of Tennessee, Univ. of California Berkeley, NAG Ltd., */; /* Courant Institute, Argonne National Lab, and Rice University */; /* September 30, 1994 */; /* .. Scalar Arguments .. */; /* .. */; /* Purpose */; /* ======= */; /* XERBLA is an Error handler for the LAPACK routines. */; /* It is called by an LAPACK routine if an input Parameter has an */; /* invalid Value. A message is printed and execution stops. */; /* Installers may consider modifying the STOP statement in order to */; /* call system-specific exception-handling facilities. */; /* Arguments */; /* ========= */; /* SRNAME (input) CHARACTER*6 */; /* The Name of the routine which called XERBLA. */; /* INFO (input) INTEGER */; /* The position of the invalid Parameter in the Parameter list */; /* of the calling routine. */; /* ===================================================================== */; /* .. Executable Statements .. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/mnxerbla.cxx:460,Error,Error,460,math/minuit2/src/mnxerbla.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/mnxerbla.cxx,1,['Error'],['Error']
Availability,/* Function to be called when data becomes available */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:43,avail,available,43,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['avail'],['available']
Availability,"/* GCC unused function attribute seems fundamentally broken.; * Several attempts to tell the compiler ""THIS FUNCTION MAY BE USED; * OR UNUSED"" for individual functions failed.; * Either the compiler creates an ""unused-function"" warning if a; * function is not marked with __attribute__((unused)).; * On the other hand, if the function is marked with this attribute,; * but is used, the compiler raises a completely idiotic; * ""used-but-marked-unused"" warning - and; * #pragma GCC diagnostic ignored ""-Wused-but-marked-unused""; * raises error: unknown option after ""#pragma GCC diagnostic"".; * Disable this warning completely, until the GCC guys sober up; * again.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:536,error,error,536,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * GHook: Callback maintenance functions; * Copyright (C) 1998 Tim Janik; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /* ; * MT safe; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/ghook.c:153,mainten,maintenance,153,graf2d/win32gdk/gdk/src/glib/ghook.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/ghook.c,1,['mainten'],['maintenance']
Availability,"/* GObject - GLib Type, Object, Parameter and Signal Library; * Copyright (C) 2000-2001 Tim Janik; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General; * Public License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place, Suite 330,; * Boston, MA 02111-1307, USA.; *; * gbsearcharray.h: binary searchable sorted array maintenance; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gbsearcharray.h:891,mainten,maintenance,891,graf2d/win32gdk/gdk/src/glib/gbsearcharray.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gbsearcharray.h,1,['mainten'],['maintenance']
Availability,/* Generate a compiler error if there is an old png.h in the search path. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:23,error,error,23,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,2,['error'],['error']
Availability,"/* Get a byte of input into the bit accumulator, or return from inflate(); if there is no input available. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:96,avail,available,96,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,2,['avail'],['available']
Availability,"/* Get a byte of input into the bit accumulator, or return from inflateBack(); with an error if there is no input available. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c:87,error,error,87,builtins/zlib/infback.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c,4,"['avail', 'error']","['available', 'error']"
Availability,/* Get a formatted link corresponding to the current request. Parameters:; conn: current connection information.; buf: string buffer (out); buflen: length of the string buffer; Returns:; <0: error; >=0: ok */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:191,error,error,191,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['error'],['error']
Availability,/* Get a masking key - but not 0 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:9,mask,masking,9,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['mask'],['masking']
Availability,"/* Get a value of particular form variable. Parameters:; data: pointer to form-uri-encoded buffer. This could be either POST data,; or request_info.query_string.; data_len: length of the encoded data.; var_name: variable name to decode from the buffer; dst: destination buffer for the decoded variable; dst_len: length of the destination buffer. Return:; On success, length of the decoded variable.; On error:; -1 (variable not found).; -2 (destination buffer is NULL, zero length or too small to hold the; decoded variable). Destination buffer is guaranteed to be '\0' - terminated if it is not; NULL or zero length. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:403,error,error,403,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['error'],['error']
Availability,"/* Get a value of particular form variable. Parameters:; data: pointer to form-uri-encoded buffer. This could be either POST data,; or request_info.query_string.; data_len: length of the encoded data.; var_name: variable name to decode from the buffer; dst: destination buffer for the decoded variable; dst_len: length of the destination buffer; occurrence: which occurrence of the variable, 0 is the 1st, 1 the 2nd, ...; this makes it possible to parse a query like; b=x&a=y&a=z which will have occurrence values b:0, a:0 and a:1. Return:; On success, length of the decoded variable.; On error:; -1 (variable not found).; -2 (destination buffer is NULL, zero length or too small to hold the; decoded variable). Destination buffer is guaranteed to be '\0' - terminated if it is not; NULL or zero length. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:589,error,error,589,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['error'],['error']
Availability,/* Get connection information. It can be printed or stored by the caller.; * Return the size of available information. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:96,avail,available,96,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['avail'],['available']
Availability,"/* Get connection information. Useful for server diagnosis.; Parameters:; ctx: Context handle; idx: Connection index; buffer: Store context information here.; buflen: Length of buffer (including a byte required for a terminating 0).; Return:; Available size of system information, exluding a terminating 0.; The information is complete, if the return value is smaller than buflen.; The result is a JSON formatted string, the exact content may vary.; Note:; It is possible to determine the required buflen, by first calling this; function with buffer = NULL and buflen = NULL. The required buflen is; one byte more than the returned value. However, since the available; context information changes, you should allocate a few bytes more.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:243,Avail,Available,243,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,"['Avail', 'avail']","['Available', 'available']"
Availability,"/* Get context information. Useful for server diagnosis.; Parameters:; ctx: Context handle; buffer: Store context information here.; buflen: Length of buffer (including a byte required for a terminating 0).; Return:; Available size of system information, exluding a terminating 0.; The information is complete, if the return value is smaller than buflen.; The result is a JSON formatted string, the exact content may vary.; Note:; It is possible to determine the required buflen, by first calling this; function with buffer = NULL and buflen = NULL. The required buflen is; one byte more than the returned value. However, since the available; context information changes, you should allocate a few bytes more.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:217,Avail,Available,217,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,"['Avail', 'avail']","['Available', 'available']"
Availability,"/* Get information on the system. Useful for support requests.; Parameters:; buffer: Store system information as string here.; buflen: Length of buffer (including a byte required for a terminating 0).; Return:; Available size of system information, exluding a terminating 0.; The information is complete, if the return value is smaller than buflen.; The result is a JSON formatted string, the exact content may vary.; Note:; It is possible to determine the required buflen, by first calling this; function with buffer = NULL and buflen = NULL. The required buflen is; one byte more than the returned value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:211,Avail,Available,211,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['Avail'],['Available']
Availability,"/* Get the list of ports that civetweb is listening on.; The parameter size is the size of the ports array in elements.; The caller is responsibility to allocate the required memory.; This function returns the number of struct mg_server_port elements; filled in, or <0 in case of an error. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:283,error,error,283,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['error'],['error']
Availability,/* Given a value 'linear' in the range 0..255*65535 calculate the 8-bit sRGB; * encoded value with maximum error 0.646365. Note that the input is not a; * 16-bit value; it has been multiplied by 255! */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:107,error,error,107,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['error'],['error']
Availability,"/* HIST_count_parallel_wksp() :; * store histogram into 4 intermediate tables, recombined at the end.; * this design makes better use of OoO cpus,; * and is noticeably faster when some values are heavily repeated.; * But it needs some additional workspace for intermediate tables.; * `workSpace` must be a U32 table of size >= HIST_WKSP_SIZE_U32.; * @return : largest histogram frequency,; * or an error code (notably when histogram's alphabet is larger than *maxSymbolValuePtr) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/hist.c:398,error,error,398,builtins/zstd/compress/hist.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/hist.c,1,['error'],['error']
Availability,/* HTTP 1.1 default is keep alive */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:28,alive,alive,28,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['alive'],['alive']
Availability,/* Handle alpha and tRNS by replacing with a background color. Prior to; * libpng-1.5.4 this API must not be called before the PNG file header has been; * read. Doing so will result in unexpected behavior and possible warnings or; * errors if the PNG file contains a bKGD chunk.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:233,error,errors,233,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['error'],['errors']
Availability,/* Handler for all errors */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:19,error,errors,19,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['errors']
Availability,"/* Handler for error group, e.g., 5xx error; 					 * handler; 					 * for all server errors (500-599) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:15,error,error,15,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,3,['error'],"['error', 'errors']"
Availability,"/* Handler for specific error, e.g. 404 error */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:24,error,error,24,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['error'],['error']
Availability,/* Has error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:7,error,error,7,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* Helper intrinsics to retry tbegin in case of transient failure. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/htmintrin.h:58,failure,failure,58,interpreter/llvm-project/clang/lib/Headers/htmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/htmintrin.h,1,['failure'],['failure']
Availability,/* Hence generate the appropriate 'block' or 'sparkle' pixel copy mask.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:66,mask,mask,66,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['mask'],['mask']
Availability,"/* Hence the pre-compiled masks indexed by PACKSWAP (or not), depth and; * then pass:; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:26,mask,masks,26,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['mask'],['masks']
Availability,/* Here on an internal programming error. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:35,error,error,35,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['error'],['error']
Availability,"/* How the alpha channel is interpreted - this affects how the color channels; * of a PNG file are returned to the calling application when an alpha channel,; * or a tRNS chunk in a palette file, is present.; *; * This has no effect on the way pixels are written into a PNG output; * datastream. The color samples in a PNG datastream are never premultiplied; * with the alpha samples.; *; * The default is to return data according to the PNG specification: the alpha; * channel is a linear measure of the contribution of the pixel to the; * corresponding composited pixel, and the color channels are unassociated; * (not premultiplied). The gamma encoded color channels must be scaled; * according to the contribution and to do this it is necessary to undo; * the encoding, scale the color values, perform the composition and re-encode; * the values. This is the 'PNG' mode.; *; * The alternative is to 'associate' the alpha with the color information by; * storing color channel values that have been scaled by the alpha.; * image. These are the 'STANDARD', 'ASSOCIATED' or 'PREMULTIPLIED' modes; * (the latter being the two common names for associated alpha color channels).; *; * For the 'OPTIMIZED' mode, a pixel is treated as opaque only if the alpha; * value is equal to the maximum value.; *; * The final choice is to gamma encode the alpha channel as well. This is; * broken because, in practice, no implementation that uses this choice; * correctly undoes the encoding before handling alpha composition. Use this; * choice only if other serious errors in the software or hardware you use; * mandate it; the typical serious error is for dark halos to appear around; * opaque areas of the composited PNG image because of arithmetic overflow.; *; * The API function png_set_alpha_mode specifies which of these choices to use; * with an enumerated 'mode' value and the gamma of the required output:; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:1554,error,errors,1554,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,['error'],"['error', 'errors']"
Availability,"/* Huffman code lookup table entry--this entry is four bytes for machines; that have 16-bit pointers (e.g. PC's in the small or medium model).; Valid extra bits are 0..13. e == 15 is EOB (end of block), e == 16; means that v is a literal, 16 < e < 32 means that v is a pointer to; the next table, which codes e - 16 bits, and lastly e == 99 indicates; an unused code. If a code with e == 99 is looked up, this implies an; error in the data. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:422,error,error,422,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['error'],['error']
Availability,/* IMPORTANT: we have memory now that won't get freed if something else; * goes wrong; this code must free it. png_malloc_array produces no; * warnings; use a png_chunk_report (below) if there is an error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c:199,error,error,199,graf2d/asimage/src/libAfterImage/libpng/pngset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c,1,['error'],['error']
Availability,/* INPUT_SMOOTHING_SUPPORTED */; /*; * Module initialization routine for downsampling.; * Note that we must select a routine for each component.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c:73,down,downsampling,73,graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,1,['down'],['downsampling']
Availability,/* If a colorspace error has already been output skip this chunk */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:19,error,error,19,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,3,['error'],['error']
Availability,"/* If allowed is 1, png_benign_error() is treated as a warning.; *; * If allowed is 0, png_benign_error() is treated as an error (which; * is the default behavior if png_set_benign_errors() is not called).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c:123,error,error,123,graf2d/asimage/src/libAfterImage/libpng/pngset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c,1,['error'],['error']
Availability,/* If change is not now 0 some transformation is missing - error out. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:59,error,error,59,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['error'],['error']
Availability,"/* If long is > 32 bits on your machine, and shifting/masking longs is; * reasonably fast, making bit_buf_type be long and setting BIT_BUF_SIZE; * appropriately should be a win. Unfortunately we can't define the size; * with something like #define BIT_BUF_SIZE (sizeof(bit_buf_type)*8); * because not all machines measure sizeof in 8-bit bytes.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:54,mask,masking,54,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,2,['mask'],['masking']
Availability,"/* If no errors, we should have returned to USTATE_INSIDE_TEXT */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.c:9,error,errors,9,graf2d/win32gdk/gdk/src/glib/gmarkup.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.c,1,['error'],['errors']
Availability,"/* If no thread data is available, provide and set one. This; can happen for the main thread and for threads, that are not; created by GLib. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthread.c:24,avail,available,24,graf2d/win32gdk/gdk/src/glib/gthread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthread.c,1,['avail'],['available']
Availability,"/* If standard_output or standard_error are non-NULL, the full; * standard output or error of the command will be placed there.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.h:85,error,error,85,graf2d/win32gdk/gdk/src/glib/gspawn.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.h,1,['error'],['error']
Availability,"/* If the area has been marked, then it is being destroyed.; * (ie marked to be destroyed).; * We check to see if all of the segments on the free list that; * reference this area have been removed. This occurs when; * the ammount of free memory is less than the allocatable size.; * If the chunk should be freed, then we place it in the ""free_mem_area"".; * This is so we make sure not to free the mem area here and then; * allocate it again a few lines down.; * If we don't allocate a chunk a few lines down then the ""free_mem_area""; * will be freed.; * If there is already a ""free_mem_area"" then we'll just free this mem area.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.c:453,down,down,453,graf2d/win32gdk/gdk/src/glib/gmem.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.c,2,['down'],['down']
Availability,"/* If the keep value is 'default' or 'never' override it, but; * still error out on critical chunks unless the keep value is; * 'always' While this is weird it is the behavior in 1.4.12.; * A possible improvement would be to obey the value set for the; * chunk, but this would be an API change that would probably; * damage some applications.; *; * The png_app_warning below catches the case that matters, where; * the application has not set specific save or ignore for this; * chunk or global save or ignore.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:71,error,error,71,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['error'],['error']
Availability,"/* If the maximum space needed is available, make all the buffers full; * height; otherwise parcel it out with the same number of minheights; * in each buffer.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:34,avail,available,34,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['avail'],['available']
Availability,/* If these are set to anything above 0 then all the glyphs has to be ; 	 * padded ( if its smaller then the cell ) or scaled down ; 	 * ( if its bigger then the cell ); 	 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h:126,down,down,126,graf2d/asimage/src/libAfterImage/asfont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h,1,['down'],['down']
Availability,/* If this line results in an error __stdcall is not understood and; * PNG_API_RULE should not have been set to '1'.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h:30,error,error,30,graf2d/asimage/src/libAfterImage/libpng/pngconf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h,1,['error'],['error']
Availability,"/* If this line results in an error, either because __watcall is not; * understood or because of a redefine just below you cannot use *this*; * build of the library with the compiler you are using. *This* build was; * build using Watcom and applications must also be built using Watcom!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h:30,error,error,30,graf2d/asimage/src/libAfterImage/libpng/pngconf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h,1,['error'],['error']
Availability,"/* If unaligned allocations down from a too-large top have left us; * unaligned, we need to realign our alloc ptr. Technically, this; * can consume space that is unaccounted for in the neededSpace; * calculation. However, I believe this can only happen when the; * workspace is too large, and specifically when it is too large; * by a larger margin than the space that will be consumed. */; /* TODO: cleaner, compiler warning friendly way to do this??? */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_cwksp.h:28,down,down,28,builtins/zstd/compress/zstd_cwksp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_cwksp.h,1,['down'],['down']
Availability,/* If warnings or errors are turned off the code is disabled or redirected here.; * From 1.5.4 functions have been added to allow very limited formatting of; * error and warning messages - this code will also be disabled here.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:18,error,errors,18,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,2,['error'],"['error', 'errors']"
Availability,"/* If we don't want to use the data from an ancillary chunk,; * we have two options: an error abort, or a warning and we; * ignore the data in this chunk (which should be OK, since; * it's considered ancillary for a RGB or RGBA image).; *; * IMPLEMENTATION NOTE: this is only here because png_crc_finish uses the; * chunk type to determine whether to check the ancillary or the critical; * flags.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:88,error,error,88,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['error'],['error']
Availability,"/* If we get here, the JPEG code has signaled an error.; 		 * We need to clean up the JPEG object, close the input file, and return.; 		 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c:49,error,error,49,graf2d/asimage/src/libAfterImage/import.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c,1,['error'],['error']
Availability,"/* If we reach an IDAT chunk, this means we have read all of the; * header chunks, and we can start reading the image (or if this; * is called after the image has been read - we have an error).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpread.c:186,error,error,186,graf2d/asimage/src/libAfterImage/libpng/pngpread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpread.c,1,['error'],['error']
Availability,"/* If we wait for only one file descriptor, wait on error as well */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:52,error,error,52,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* If we're hosted, fall back to the system's stdatomic.h. FreeBSD, for; * example, already has a Clang-compatible stdatomic.h header.; *; * Exclude the MSVC path as well as the MSVC header as of the 14.31.30818; * explicitly disallows `stdatomic.h` in the C mode via an `#error`. Fallback; * to the clang resource header until that is fully supported. The; * `stdatomic.h` header requires C++ 23 or newer.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/stdatomic.h:273,error,error,273,interpreter/llvm-project/clang/lib/Headers/stdatomic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/stdatomic.h,1,['error'],['error']
Availability,"/* If we've gotten enough data, downsample a row group. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c:32,down,downsample,32,graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,1,['down'],['downsample']
Availability,"/* If your compiler barfs on ' #error', replace # with the trigraph for # */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:32,error,error,32,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['error'],['error']
Availability,"/* Ignore any errors here, they're irrelevant */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:14,error,errors,14,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,1,['error'],['errors']
Availability,/* Ignore errors for readonly files */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:10,error,errors,10,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,3,['error'],['errors']
Availability,/* Ignore errors here. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:10,error,errors,10,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['errors']
Availability,/* Ignore errors. We can't call; 			 * mg_cry here anyway ;-) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:10,error,errors,10,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['errors']
Availability,"/* Ignore failure to create shared image,; * display might not be local.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/testgdk.c:10,failure,failure,10,graf2d/win32gdk/gdk/src/gdk/testgdk.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/testgdk.c,1,['failure'],['failure']
Availability,"/* Improve previous approximations to the integral and test for; accuracy. We write these expressions in the same way as the original; QUADPACK code so that the rounding errors are the same, which; makes testing easier. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:170,error,errors,170,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['error'],['errors']
Availability,"/* In Win32, vsnprintf is available as the ""non-ANSI"" _vsnprintf. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h:26,avail,available,26,builtins/zlib/gzguts.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h,2,['avail'],['available']
Availability,"/* In a debug build, print all html errors */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:36,error,errors,36,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['errors']
Availability,"/* In case redirect_code is none of the above, return error. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:54,error,error,54,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* In direct contradiction to the Unix98 spec, IRIX runs into; 	 * difficulty if you pass in POLLERR, POLLHUP or POLLNVAL; 	 * flags in the events field of the pollfd while it should; 	 * just ignoring them. So we mask them out here.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.c:214,mask,mask,214,graf2d/win32gdk/gdk/src/glib/gmain.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.c,1,['mask'],['mask']
Availability,"/* In fact it is an error if it isn't supported, but checking is; * the safe way.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:20,error,error,20,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['error'],['error']
Availability,"/* In libpng 1.7 this now does an app-error, so stop it: */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:38,error,error,38,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['error'],['error']
Availability,"/* In selecting the actual DCT scaling for each component, we try to; * scale down the chroma components via DCT scaling rather than downsampling.; * This saves time if the downsampler gets to use 1:1 scaling.; * Note this code adapts subsampling ratios which are powers of 2.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c:78,down,down,78,graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,3,['down'],"['down', 'downsampler', 'downsampling']"
Availability,/* In stable builds only warn if an application error can be completely; * handled.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:48,error,error,48,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,2,['error'],['error']
Availability,"/* In the case of gamma transformations only do transformations on images where; * the [file] gamma and screen_gamma are not close reciprocals, otherwise it; * slows things down slightly, and also needlessly introduces small errors.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:173,down,down,173,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,2,"['down', 'error']","['down', 'errors']"
Availability,"/* Incomplete text, do not report an error */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c:37,error,error,37,graf2d/win32gdk/gdk/src/glib/gconvert.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c,1,['error'],['error']
Availability,"/* Indicates an error case, preventing the kind from being deduced. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:16,error,error,16,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['error'],['error']
Availability,/* Indicates if the queue is shutting down */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.c:38,down,down,38,builtins/zstd/common/pool.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.c,1,['down'],['down']
Availability,"/* Init, lay down lowprob symbols */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse_decompress.c:13,down,down,13,builtins/zstd/common/fse_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse_decompress.c,2,['down'],['down']
Availability,/* Initialize state for writing a gzip file. Mark initialization by setting; state->size to non-zero. Return -1 on failure or 0 on success. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzwrite.c:115,failure,failure,115,builtins/zlib/gzwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzwrite.c,1,['failure'],['failure']
Availability,"/* Initialize the default input/output functions for the PNG file. If you; * use your own read or write routines, you can call either png_set_read_fn(); * or png_set_write_fn() instead of png_init_io(). If you have defined; * PNG_NO_STDIO or otherwise disabled PNG_STDIO_SUPPORTED, you must use a; * function of your own because ""FILE *"" isn't necessarily available.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:356,avail,available,356,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['avail'],['available']
Availability,"/* Initialize the info structure. This is now an internal function (0.89); * and applications using it are urged to use png_create_info_struct(); * instead. Use deprecated in 1.6.0, internal use removed (used internally it; * is just a memset).; *; * NOTE: it is almost inconceivable that this API is used because it bypasses; * the user-memory mechanism and the user error handling/warning mechanisms in; * those cases where it does anything other than a memset.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:368,error,error,368,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,/* Initialize the propagated errors to zero. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:29,error,errors,29,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,2,['error'],['errors']
Availability,"/* Initialize this library. This should be called once before any other; * function from this library. This function is not guaranteed to be; * thread safe.; * Parameters:; * features: bit mask for features to be initialized.; * Note: The TLS libraries (like OpenSSL) is initialized; * only if the MG_FEATURES_TLS bit is set.; * Currently the other bits do not influence; * initialization, but this may change in future; * versions.; * Return value:; * initialized features; * 0: error; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:189,mask,mask,189,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,"['error', 'mask']","['error', 'mask']"
Availability,"/* Insert errmax by traversing the list top-down, starting; comparison from the element elist(order(i_nrmax+1)). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:44,down,down,44,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['down'],['down']
Availability,"/* Internal array allocator, outputs no error or warning messages on failure,; * just returns NULL.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:40,error,error,40,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,2,"['error', 'failure']","['error', 'failure']"
Availability,"/* Internal base allocator - no messages, NULL on failure to allocate. This; * does, however, call the application provided allocator and that could call; * png_error (although that would be a bug in the application implementation.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:50,failure,failure,50,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['failure'],['failure']
Availability,"/* Internal data */; /* The mesh structure is similar in spirit, notation, and operations; * to the ""quad-edge"" structure (see L. Guibas and J. Stolfi, Primitives; * for the manipulation of general subdivisions and the computation of; * Voronoi diagrams, ACM Transactions on Graphics, 4(2):74-123, April 1985).; * For a simplified description, see the course notes for CS348a,; * ""Mathematical Foundations of Computer Graphics"", available at the; * Stanford bookstore (and taught during the fall quarter).; * The implementation also borrows a tiny subset of the graph-based approach; * use in Mantyla's Geometric Work Bench (see M. Mantyla, An Introduction; * to Sold Modeling, Computer Science Press, Rockville, Maryland, 1988).; *; * The fundamental data structure is the ""half-edge"". Two half-edges; * go together to make an edge, but they point in opposite directions.; * Each half-edge has a pointer to its mate (the ""symmetric"" half-edge Sym),; * its origin vertex (Org), the face on its left side (Lface), and the; * adjacent half-edges in the CCW direction around the origin vertex; * (Onext) and around the left face (Lnext). There is also a ""next""; * pointer for the global edge list (see below).; *; * The notation used for mesh navigation:; *	Sym = the mate of a half-edge (same edge, but opposite direction); *	Onext = edge CCW around origin vertex (keep same origin); *	Dnext = edge CCW around destination vertex (keep same dest); *	Lnext = edge CCW around left face (dest becomes new origin); *	Rnext = edge CCW around right face (origin becomes new dest); *; * ""prev"" means to substitute CW for CCW in the definitions above.; *; * The mesh keeps global lists of all vertices, faces, and edges,; * stored as doubly-linked circular lists with a dummy header node.; * The mesh stores pointers to these dummy headers (vHead, fHead, eHead).; *; * The circular edge list is special; since half-edges always occur; * in pairs (e and e->Sym), each half-edge stores a pointer in only; * one dir",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/mesh.h:429,avail,available,429,graf3d/eve7/glu/mesh.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/mesh.h,1,['avail'],['available']
Availability,"/* Internal macro for INPUT_BYTE and INPUT_2BYTES: make a byte available.; * Note we do *not* do INPUT_SYNC before calling fill_input_buffer,; * but we must reload the local copies after a successful fill.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:63,avail,available,63,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['avail'],['available']
Availability,/* Intrinsic functions that require PowerISA 2.07 minimum. */; /* Creates a 2-bit mask from the most significant bits of the DPFP values. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/emmintrin.h:82,mask,mask,82,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/emmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/emmintrin.h,1,['mask'],['mask']
Availability,/* Intrinsic functions that require PowerISA 2.07 minimum. */; /* Creates a 4-bit mask from the most significant bits of the SPFP values. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h:82,mask,mask,82,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h,1,['mask'],['mask']
Availability,/* Intrinsic functions that require PowerISA 2.07 minimum. */; /* Return a mask created from the most significant bit of each 8-bit; element in A. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/emmintrin.h:75,mask,mask,75,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/emmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/emmintrin.h,1,['mask'],['mask']
Availability,/* Intrinsics inside adcintrin.h are available at all times. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/immintrin.h:37,avail,available,37,interpreter/llvm-project/clang/lib/Headers/immintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/immintrin.h,1,['avail'],['available']
Availability,"/* Intrinsics that are available only if __ADX__ is defined. */; /// Adds unsigned 32-bit integers \a __x and \a __y, plus 0 or 1 as indicated; /// by the carry flag \a __cf. Stores the unsigned 32-bit sum in the memory; /// at \a __p, and returns the 8-bit carry-out (carry flag).; ///; /// \code{.operation}; /// temp := (__cf == 0) ? 0 : 1; /// Store32(__p, __x + __y + temp); /// result := CF; /// \endcode; ///; /// \headerfile <immintrin.h>; ///; /// This intrinsic corresponds to the \c ADCX instruction.; ///; /// \param __cf; /// The 8-bit unsigned carry flag; any non-zero value indicates carry.; /// \param __x; /// A 32-bit unsigned addend.; /// \param __y; /// A 32-bit unsigned addend.; /// \param __p; /// Pointer to memory for storing the sum.; /// \returns The 8-bit unsigned carry-out value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/adxintrin.h:23,avail,available,23,interpreter/llvm-project/clang/lib/Headers/adxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/adxintrin.h,1,['avail'],['available']
Availability,/* Is keep alive allowed by the server */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:11,alive,alive,11,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['alive'],['alive']
Availability,/* It is a terminal error if we can't claim the zstream. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:20,error,error,20,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['error'],['error']
Availability,/* It is an error to read while writing a png file */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwio.c:12,error,error,12,graf2d/asimage/src/libAfterImage/libpng/pngwio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwio.c,1,['error'],['error']
Availability,/* It is an error to write to a read device */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrio.c:12,error,error,12,graf2d/asimage/src/libAfterImage/libpng/pngrio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrio.c,1,['error'],['error']
Availability,"/* It is up to the application to check that the profile class matches the; * application requirements; the spec provides no guidance, but it's pretty; * weird if the profile is not scanner ('scnr'), monitor ('mntr'), printer; * ('prtr') or 'spac' (for generic color spaces). Issue a warning in these; * cases. Issue an error for device link or abstract profiles - these don't; * contain the records necessary to transform the color-space to anything; * other than the target device (and not even that for an abstract profile).; * Profiles of these classes may not be embedded in images.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:320,error,error,320,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,/* JSAMPLE should be the smallest type that will hold the values 0..255.; * You can use a signed char by having GETJSAMPLE mask it with 0xFF.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h:123,mask,mask,123,graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h,1,['mask'],['mask']
Availability,/* Just to ensure segfaults if callers try to use; * these when an error is reported.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:67,error,error,67,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,2,['error'],['error']
Availability,"/* Keep stderr and stdout in two different pipes.; 			 * Stdout will be sent back to the client,; 			 * stderr should go into a server error log. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:135,error,error,135,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* LZ4_memcpy_using_offset() presumes :; * - dstEnd >= dstPtr + MINMATCH; * - there is at least 8 bytes available to write after dstEnd */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:104,avail,available,104,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['avail'],['available']
Availability,/* Library errors */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:11,error,errors,11,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['error'],['errors']
Availability,"/* Likewise */; /* We would like to #include any system header file which could define; iconv_t, 1. in order to eliminate the risk that the user gets compilation; errors because some other system header file includes /usr/include/iconv.h; which defines iconv_t or declares iconv after this file, 2. when compiling; for LIBICONV_PLUG, we need the proper iconv_t type in order to produce; binary compatible code.; But gcc's #include_next is not portable. Thus, once libiconv's iconv.h; has been installed in /usr/local/include, there is no way any more to; include the original /usr/include/iconv.h. We simply have to get away; without it.; Ad 1. The risk that a system header file does; #include ""iconv.h"" or #include_next ""iconv.h""; is small. They all do #include <iconv.h>.; Ad 2. The iconv_t type is a pointer type in all cases I have seen. (It; has to be a scalar type because (iconv_t)(-1) is a possible return value; from iconv_open().) */; /* Define iconv_t ourselves. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.h:163,error,errors,163,graf2d/win32gdk/gdk/src/iconv/iconv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.h,1,['error'],['errors']
Availability,/* Limit the error using transfer function set by init_error_limit.; * See comments with init_error_limit for rationale.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:13,error,error,13,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['error'],['error']
Availability,"/* Links the source module into the destination module. The source module is; * destroyed.; * The return value is true if an error occurred, false otherwise.; * Use the diagnostic handler to get any diagnostic message.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Linker.h:125,error,error,125,interpreter/llvm-project/llvm/include/llvm-c/Linker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Linker.h,1,['error'],['error']
Availability,"/* Linux uses -1 on error, Windows NULL. */; /* However, Linux does not return 0 on success either. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:20,error,error,20,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* List of error traps */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdk.c:11,error,error,11,graf2d/win32gdk/gdk/src/gdk/gdk.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdk.c,1,['error'],['error']
Availability,/* Little-endian byte masks for PACKSWAP */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:22,mask,masks,22,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,2,['mask'],['masks']
Availability,"/* Load up input buffer and set eof flag if last data loaded -- return -1 on; error, 0 otherwise. Note that the eof flag is set when the end of the input; file is reached, even though there may be unused data in the buffer. Once; that data has been used, no more attempts will be made to read the file.; If strm->avail_in != 0, then the current data is moved to the beginning of; the input buffer, and then the remainder of the buffer is loaded with the; available data from the input file. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c:78,error,error,78,builtins/zlib/gzread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c,2,"['avail', 'error']","['available', 'error']"
Availability,"/* Look for gzip header, set up for inflate or copy. state->x.have must be 0.; If this is the first time in, allocate required memory. state->how will be; left unchanged if there is no more input data available, will be set to COPY; if there is no gzip header and direct copying will be performed, or it will; be set to GZIP for decompression. If direct copying, then leftover input; data from the input buffer will be copied to the output buffer. In that; case, all further file reads will be directly to either the output buffer or; a user buffer. If decompressing, the inflate state will be initialized.; gz_look() will return 0 on success or -1 on failure. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c:201,avail,available,201,builtins/zlib/gzread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c,2,"['avail', 'failure']","['available', 'failure']"
Availability,"/* Loop continuously, reading messages from the socket, invoking the; 	 * callback, and waiting repeatedly until an error occurs. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:116,error,error,116,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* Loop over multiple requests sent using the same connection; 	 * (while ""keep alive""). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:80,alive,alive,80,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['alive'],['alive']
Availability,/* MASK = */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/TargetLibraryInfo.cpp:3,MASK,MASK,3,interpreter/llvm-project/llvm/lib/Analysis/TargetLibraryInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/TargetLibraryInfo.cpp,2,['MASK'],['MASK']
Availability,"/* MIN, ERROR, ZSTD_*, ZSTD_highbit32 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:8,ERROR,ERROR,8,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['ERROR'],['ERROR']
Availability,"/* Macros for inflate() bit peeking and grabbing.; The usage is:. NEEDBITS(j); x = b & mask[j];; DUMPBITS(j). where NEEDBITS makes sure that b has at least j bits in it, and; DUMPBITS removes the bits from b. The macros use the variable k; for the number of bits in b. Normally, b and k are register; variables for speed, and are initialized at the begining of a; routine that uses these macros from a global bit buffer and count. In order to not ask for more bits than there are in the compressed; stream, the Huffman tables are constructed to only ask for just; enough bits to make up the end-of-block code (value 256). Then no; bytes need to be ""returned"" to the buffer at the end of the last; block. See the huft_build() routine.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:87,mask,mask,87,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['mask'],['mask']
Availability,/* Macros to simplify using the error and trace message stuff */; /* The first parameter is either type of cinfo pointer */; /* Fatal errors (print message and exit) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.h:32,error,error,32,graf2d/asimage/src/libAfterImage/libjpeg/jerror.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.h,2,['error'],"['error', 'errors']"
Availability,/* Main buffer control (downsampled-data buffer) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h:24,down,downsampled-data,24,graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,2,['down'],['downsampled-data']
Availability,"/* Major TODO Items:; - Control dependent poison UB; - Strict mode - (i.e. must analyze every operand); - Poison through memory; - Function ABIs; - Full coverage of intrinsics, etc.. (ouch). Instructions w/Unclear Semantics:; - shufflevector - It would seem reasonable for an out of bounds mask element; to produce poison, but the LangRef does not state.; - all binary ops w/vector operands - The likely interpretation would be that; any element overflowing should produce poison for the entire result, but; the LangRef does not state.; - Floating point binary ops w/fmf flags other than (nnan, noinfs). It seems; strange that only certian flags should be documented as producing poison. Cases of clear poison semantics not yet implemented:; - Exact flags on ashr/lshr produce poison; - NSW/NUW flags on shl produce poison; - Inbounds flag on getelementptr produce poison; - fptosi/fptoui (out of bounds input) produce poison; - Scalable vector types for insertelement/extractelement; - Floating point binary ops w/fmf nnan/noinfs flags produce poison; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PoisonChecking.cpp:290,mask,mask,290,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PoisonChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PoisonChecking.cpp,1,['mask'],['mask']
Availability,/* Make sure we error out on any bad situation */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:16,error,error,16,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['error'],['error']
Availability,/* Make the error-limit table if we didn't already. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:12,error,error-limit,12,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['error'],['error-limit']
Availability,"/* Make the sentinel coordinates big enough that they will never be; * merged with real input features. (Even with the largest possible; * input contour and the maximum tolerance of 1.0, no merging will be; * done with coordinates larger than 3 * GLU_TESS_MAX_COORD).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c:169,toler,tolerance,169,graf3d/eve7/glu/sweep.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c,1,['toler'],['tolerance']
Availability,/* Make this an error in 1.6 because otherwise the application may assume; * that it just worked and get a memory overwrite.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:16,error,error,16,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['error'],['error']
Availability,"/* Manage the read buffer; this simply reallocates the buffer if it is not small; * enough (or if it is not allocated). The routine returns a pointer to the; * buffer; if an error occurs and 'warn' is set the routine returns NULL, else; * it will call png_error (via png_malloc) on failure. (warn == 2 means; * 'silent').; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:174,error,error,174,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,2,"['error', 'failure']","['error', 'failure']"
Availability,/* Map errors 1:1 up to +- MAXJSAMPLE/16 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:7,error,errors,7,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['error'],['errors']
Availability,/* Map errors 1:2 up to +- 3*MAXJSAMPLE/16 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:7,error,errors,7,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['error'],['errors']
Availability,"/* Map the Windows error number in ERROR to a locale-dependent error message; string and return a pointer to it. Typically, the values for ERROR come; from GetLastError. The string pointed to shall not be modified by the application, but may be; overwritten by a subsequent call to gz_strwinerror. The gz_strwinerror function does not change the current setting of; GetLastError. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:19,error,error,19,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,/* Mask for all nonce values */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,Mask,Mask,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Mask'],['Mask']
Availability,/* Mask ops */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avx512fintrin.h:3,Mask,Mask,3,interpreter/llvm-project/clang/lib/Headers/avx512fintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avx512fintrin.h,1,['Mask'],['Mask']
Availability,"/* Merge together all vertices at exactly the same location.; * This is more efficient than processing them one at a time,; * simplifies the code (see ConnectLeftDegenerate), and is also; * important for correct handling of certain degenerate cases.; * For example, suppose there are two identical edges A and B; * that belong to different contours (so without this code they would; * be processed by separate sweep events). Suppose another edge C; * crosses A and B from above. When A is processed, we split it; * at its intersection point with C. However this also splits C,; * so when we insert B we may compute a slightly different; * intersection point. This might leave two edges with a small; * gap between them. This kind of error is especially obvious; * when using boundary extraction (GLU_TESS_BOUNDARY_ONLY).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c:733,error,error,733,graf3d/eve7/glu/sweep.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c,1,['error'],['error']
Availability,/* Message levels and error codes */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps/gl2ps.h:22,error,error,22,graf3d/gl/src/gl2ps/gl2ps.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps/gl2ps.h,1,['error'],['error']
Availability,/* Might as well create the error-limiting table too. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:28,error,error-limiting,28,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['error'],['error-limiting']
Availability,"/* Minuit2 status codes:; * status = 0 : OK; status = 1 : Covariance was made pos defined; status = 2 : Hesse is invalid; status = 3 : Edm is above max; status = 4 : Reached call limit; status = 5 : Any other failure. For Minuit its basically 0 is OK, 4 is failure, I think?; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooFit.cxx:209,failure,failure,209,roofit/xroofit/src/xRooFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooFit.cxx,2,['failure'],['failure']
Availability,"/* Moved to before the 'after IDAT' check below because otherwise duplicate; * PLTE chunks are potentially ignored (the spec says there shall not be more; * than one PLTE, the error is not treated as benign, so this check trumps; * the requirement that PLTE appears before IDAT.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:176,error,error,176,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['error'],['error']
Availability,"/* NEED_SHORT_EXTERNAL_NAMES */; /*; * These two functions are used to allocate and release small chunks of; * memory. (Typically the total amount requested through jpeg_get_small is; * no more than 20K or so; this will be requested in chunks of a few K each.); * Behavior should be the same as for the standard library functions malloc; * and free; in particular, jpeg_get_small must return NULL on failure.; * On most systems, these ARE malloc and free. jpeg_free_small is passed the; * size of the object being freed, just in case it's needed.; * On an 80x86 machine using small-data memory model, these manage near heap.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h:400,failure,failure,400,graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,1,['failure'],['failure']
Availability,"/* NOTE: Maybe some data has already been sent. */; /* TODO (low): If some data has been sent, a correct error; 			 * reply can no longer be sent, so just close the connection */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:105,error,error,105,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* NOTE: prior to 1.6.0 this case resulted in an unknown critical; * chunk being skipped, now there will be a hard error below.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:115,error,error,115,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['error'],['error']
Availability,/* NOTE: the 'setjmp' buffer may still be allocated and the memory and error; * callbacks are still set at this point. They are required to complete the; * destruction of the png_struct itself.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:71,error,error,71,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['error'],['error']
Availability,"/* NOTE: the read macros will obscure these definitions, so that if; * PNG_USE_READ_MACROS is set the library will not use them internally,; * but the APIs will still be available externally.; *; * The parentheses around ""PNGAPI function_name"" in the following three; * functions are necessary because they allow the macros to co-exist with; * these (unused but exported) functions.; */; /* Grab an unsigned 32-bit integer from a buffer in big-endian format. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:170,avail,available,170,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['avail'],['available']
Availability,"/* NO_GZCOMPRESS */; /* ===========================================================================; Sets the starting position for the next gzread or gzwrite on the given; compressed file. The offset represents a number of bytes in the; gzseek returns the resulting offset location as measured in bytes from; the beginning of the uncompressed stream, or -1 in case of error.; SEEK_END is not implemented, returns error.; In this version of the library, gzseek can be extremely slow.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:369,error,error,369,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,2,['error'],['error']
Availability,"/* New APIs for enhanced option and error handling.; These mg_*2 API functions have the same purpose as their original versions,; but provide additional options and/or provide improved error diagnostics. Note: Experimental interfaces may change; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:36,error,error,36,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,['error'],['error']
Availability,"/* No 16-bit support: force chopping 16-bit input down to 8, in this case; * the app program can chose if both APIs are available by setting the; * correct scaling to use.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:50,down,down,50,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,2,"['avail', 'down']","['available', 'down']"
Availability,/* No custom error page. Send default error page. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:13,error,error,13,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['error'],['error']
Availability,"/* No error, but 0 bytes sent. May be EOF? */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:6,error,error,6,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* No information available to generate default OSTeenyVersion value. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/imakemdep.h:18,avail,available,18,misc/rmkdepend/imakemdep.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/imakemdep.h,1,['avail'],['available']
Availability,/* No need to print an error message. We simply abandon the compression; the buffer cannot be compressed or compressed buffer would be larger than original buffer; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/lzma/src/ZipLZMA.c:23,error,error,23,core/lzma/src/ZipLZMA.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lzma/src/ZipLZMA.c,1,['error'],['error']
Availability,/* No truncation check for error buffers */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:27,error,error,27,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,35,['error'],['error']
Availability,/* No unanwered PINGs left */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:16,PING,PINGs,16,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['PING'],['PINGs']
Availability,/* No way to return the error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:24,error,error,24,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,2,['error'],['error']
Availability,"/* Non-fatal error in libpng, chunk name is prepended to message. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:13,error,error,13,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['error'],['error']
Availability,"/* Non-fatal error in libpng. Can continue, but may have a problem. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:13,error,error,13,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['error'],['error']
Availability,/* Non-library errors */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:15,error,errors,15,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['error'],['errors']
Availability,"/* Nonfatal errors (we can keep going, but the data is probably corrupt) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.h:12,error,errors,12,graf2d/asimage/src/libAfterImage/libjpeg/jerror.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.h,1,['error'],['errors']
Availability,/* Normal (big-endian byte) masks - PNG format */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:28,mask,masks,28,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,2,['mask'],['masks']
Availability,"/* Not sure if we want to be silent; But since we're returning a pointer which can be nullptr,; I think it's the user's job to do checks on it.; A dereference will always cause a crash, so it won't; be silent for long...; if( term==nullptr ) {; std::cout << ""Error: Failed to find node: "" << name; << "" as a child of: "" << parent->GetName(); << std::endl;; }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx:259,Error,Error,259,roofit/histfactory/src/HistFactoryNavigation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx,1,['Error'],['Error']
Availability,"/* Note that the actions of the A table were performed inside the AA table.; VAX Ultrix vcc, and HP-UX cc, didn't evaluate arguments to functions left to; right, so we had to split the original table into the current robust two. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:217,robust,robust,217,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['robust'],['robust']
Availability,"/* Notice that this preserves the original chunk order, however chunks; * intercepted by the callback will be written *after* chunks passed to; * libpng. This will actually reverse a pair of sTER chunks or a pair of; * vpAg chunks, resulting in an error later. This is not worth worrying; * about - the chunks should not be duplicated!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:248,error,error,248,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['error'],['error']
Availability,"/* Now check for overflow of the image buffer calculation; this; * limits the whole image size to 32 bits for API compatibility with; * the current, 32-bit, PNG_IMAGE_BUFFER_SIZE macro.; *; * The PNG_IMAGE_BUFFER_SIZE macro is:; *; * (PNG_IMAGE_PIXEL_COMPONENT_SIZE(fmt)*height*(row_stride)); *; * And the component size is always 1 or 2, so make sure that the; * number of *bytes* that the application is saying are available; * does actually fit into a 32-bit number.; *; * NOTE: this will be changed in 1.7 because PNG_IMAGE_BUFFER_SIZE; * will be changed to use png_alloc_size_t; bigger images can be; * accommodated on 64-bit systems.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:417,avail,available,417,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['avail'],['available']
Availability,"/* Now loop reading and writing until all the input is consumed or an error; * terminates the operation. The _out values are maintained across calls to; * this function, but the input must be reset each time.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:70,error,error,70,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['error'],['error']
Availability,/* Now set the IO functions to read from the memory buffer and; * store it into io_ptr. Again do this in-place to avoid calling a; * libpng function that requires error handling.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:163,error,error,163,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['error'],['error']
Availability,/* Number of bytes after end of data in window to initialize in order to avoid; memory checker errors from longest match routines */; /* in trees.c */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:95,error,errors,95,builtins/zlib/deflate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h,2,['error'],['errors']
Availability,"/* Number of entries in the color-map */; /* In the event of an error or warning the following field will be set to a; * non-zero value and the 'message' field will contain a '\0' terminated; * string with the libpng error or warning message. If both warnings and; * an error were encountered, only the error is recorded. If there; * are multiple warnings, only the first one is recorded.; *; * The upper 30 bits of this value are reserved, the low two bits contain; * a value as follows:; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:64,error,error,64,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,4,['error'],['error']
Availability,/* Number of variables available in var */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:23,avail,available,23,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['avail'],['available']
Availability,"/* Obsolete streaming functions (since v1.7.0); * degraded functionality; do not use!; *; * In order to perform streaming compression, these functions depended on data; * that is no longer tracked in the state. They have been preserved as well as; * possible: using them will still produce a correct output. However, they don't; * actually retain any history between compression calls. The compression ratio; * achieved will therefore be no better than compressing each chunk; * independently.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:50,degraded,degraded,50,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['degraded'],['degraded']
Availability,"/* Obtain the pass number, which also turns on the PNG_INTERLACE flag in; * the above error case.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:86,error,error,86,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['error'],['error']
Availability,"/* Old clients (Win XP) will not support SNI. Then, there; 	 * is no server name available in the request - we can; 	 * only work with the default certificate.; 	 * Multiple HTTPS hosts on one IP+port are only possible; 	 * with a certificate containing all alternative names.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:81,avail,available,81,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['avail'],['available']
Availability,"/* On Win9x GDI calls are implemented in 16-bit code and thus; * don't set the 32-bit error code, sigh.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkmain-win32.c:86,error,error,86,graf2d/win32gdk/gdk/src/gdk/win32/gdkmain-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkmain-win32.c,1,['error'],['error']
Availability,/* One and only file descriptor returned error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:41,error,error,41,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* Only if we have a CRC error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:25,error,error,25,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['error'],['error']
Availability,/* Only return an error if we have no data */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:18,error,error,18,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,2,['error'],['error']
Availability,"/* Opaque types. */; /**; * LLVM uses a polymorphic type hierarchy which C cannot represent, therefore; * parameters must be passed as base types. Despite the declared types, most; * of the functions provided operate only on branches of the type hierarchy.; * The declared parameter names are descriptive and specify which type is; * required. Additionally, each type hierarchy is documented along with the; * functions that operate upon it. For more detail, refer to LLVM's C++ code.; * If in doubt, refer to Core.cpp, which performs parameter downcasts in the; * form unwrap<RequiredType>(Param).; */; /**; * Used to pass regions of memory through LLVM interfaces.; *; * @see llvm::MemoryBuffer; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Types.h:545,down,downcasts,545,interpreter/llvm-project/llvm/include/llvm-c/Types.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Types.h,1,['down'],['downcasts']
Availability,"/* OpenGL image is from down to up, PS image is up to down */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:24,down,down,24,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,2,['down'],['down']
Availability,"/* Other defines specific to compilers can go here. Try to keep; * them inside an appropriate ifdef/endif pair for portability.; */; /* C allows up-casts from (void*) to any pointer and (const void*) to any; * pointer to a const object. C++ regards this as a type error and requires an; * explicit, static, cast and provides the static_cast<> rune to ensure that; * const is not cast away.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:264,error,error,264,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['error'],['error']
Availability,/* Overflow error detected */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:12,error,error,12,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['error'],['error']
Availability,/* POOL_thread() :; * Work thread for the thread pool.; * Waits for jobs and executes them.; * @returns : NULL on failure else non-null.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.c:114,failure,failure,114,builtins/zstd/common/pool.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.c,1,['failure'],['failure']
Availability,/* Param error. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:9,error,error,9,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* Parameter error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:13,error,error,13,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['error'],['error']
Availability,/* Parsing failure. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:11,failure,failure,11,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['failure'],['failure']
Availability,/* Place breakpoint here to catch failures */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/testgdk.c:34,failure,failures,34,graf2d/win32gdk/gdk/src/gdk/testgdk.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/testgdk.c,1,['failure'],['failures']
Availability,/* Pointer to routine to downsample a single component */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c:25,down,downsample,25,graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,1,['down'],['downsample']
Availability,/* Poll returned either success (1) or error (-1).; 			 * Forward both to the caller. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:39,error,error,39,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* Post-loop cleanup: we must unload the final error value into the; * final fserrors[] entry. Note we need not unload belowerr because; * it is for the dummy column before or after the actual array.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:47,error,error,47,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,1,['error'],['error']
Availability,/* Post-loop cleanup: we must unload the final error values into the; * final fserrors[] entry. Note we need not unload belowerrN because; * it is for the dummy column before or after the actual array.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:47,error,error,47,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['error'],['error']
Availability,"/* Power 8 Crypto functions; Note: We diverge from the current GCC implementation with regard; to cryptography and related functions as follows:; - Only the SHA and AES instructions and builtins are disabled by -mno-crypto; - The remaining ones are only available on Power8 and up so; require -mpower8-vector; The justification for this is that export requirements require that; Category:Vector.Crypto is optional (i.e. compliant hardware may not provide; support). As a result, we need to be able to turn off support for those.; The remaining ones (currently controlled by -mcrypto for GCC) still; need to be provided on compliant hardware even if Vector.Crypto is not; provided.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/altivec.h:254,avail,available,254,interpreter/llvm-project/clang/lib/Headers/altivec.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/altivec.h,1,['avail'],['available']
Availability,"/* Prepare the reader to ignore all recognized chunks whose data will not; * be used, i.e., all chunks recognized by libpng except for those; * involved in basic image reading:; *; * IHDR, PLTE, IDAT, IEND; *; * Or image data handling:; *; * tRNS, bKGD, gAMA, cHRM, sRGB, [iCCP] and sBIT.; *; * This provides a small performance improvement and eliminates any; * potential vulnerability to security problems in the unused chunks.; *; * At present the iCCP chunk data isn't used, so iCCP chunk can be ignored; * too. This allows the simplified API to be compiled without iCCP support,; * however if the support is there the chunk is still checked to detect; * errors (which are unfortunately quite common.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:659,error,errors,659,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['error'],['errors']
Availability,/* Preset error values: no error propagated to first pixel from left */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:10,error,error,10,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,4,['error'],['error']
Availability,"/* Print ObjC base types, type arguments, and protocol list if available. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/c-index-test/c-index-test.c:63,avail,available,63,interpreter/llvm-project/clang/tools/c-index-test/c-index-test.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/c-index-test/c-index-test.c,1,['avail'],['available']
Availability,/* Print error message to the opened error log stream. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:9,error,error,9,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['error'],['error']
Availability,"/* Print error message to the opened error log stream.; This utilizes the provided logging configuration.; conn: connection (not used for sending data, but to get perameters); fmt: format string without the line return; ...: variable argument list; Example:; mg_cry(conn,""i like %s"", ""logging""); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:9,error,error,9,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,['error'],['error']
Availability,/* Print warning/error/etc. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndexDiagnostic.cpp:17,error,error,17,interpreter/llvm-project/clang/tools/libclang/CIndexDiagnostic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndexDiagnostic.cpp,1,['error'],['error']
Availability,"/* Prior to 1.5.2 the error_fn received a NULL pointer, expressed; * erroneously as '\0', instead of the empty string """". This was; * apparently an error, introduced in libpng-1.2.20, and png_default_error; * will crash in this case.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:148,error,error,148,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['error'],['error']
Availability,"/* Prior to 1.5.4 this output row/pass where the NULL pointer is, but this; * error is incredibly rare and incredibly easy to debug without this; * information.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:78,error,error,78,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['error'],['error']
Availability,"/* Prior to 1.6.0 libpng offered limited support for Microsoft C compiler; * implementations of Intel CPU specific support of user-mode segmented address; * spaces, where 16-bit pointers address more than 65536 bytes of memory using; * separate 'segment' registers. The implementation requires two different; * types of pointer (only one of which includes the segment value.); *; * If required this support is available in version 1.2 of libpng and may be; * available in versions through 1.5, although the correctness of the code has; * not been verified recently.; */; /* Typedef for floating-point numbers that are converted to fixed-point with a; * multiple of 100,000, e.g., gamma; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h:410,avail,available,410,graf2d/asimage/src/libAfterImage/libpng/pngconf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h,2,['avail'],['available']
Availability,"/* Process form data.; * Returns the number of fields handled, or < 0 in case of an error.; * Note: It is possible that several fields are already handled successfully; * (e.g., stored into files), before the request handling is stopped with an; * error. In this case a number < 0 is returned as well.; * In any case, it is the duty of the caller to remove files once they are; * no longer required. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:84,error,error,84,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,['error'],['error']
Availability,/* Propagate the error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:17,error,error,17,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['error'],['error']
Availability,"/* Provide macros for error handling. The ""assert"" macros will; * exit on failure. The ""return"" macros will exit the current; * function. Two different definitions are given for the macros; * if G_DISABLE_ASSERT is not defined, in order to support gcc's; * __PRETTY_FUNCTION__ capability.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmessages.h:22,error,error,22,graf2d/win32gdk/gdk/src/glib/gmessages.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmessages.h,2,"['error', 'failure']","['error', 'failure']"
Availability,"/* Provide the default handling for all unknown chunks or, optionally, for; * specific unknown chunks.; *; * NOTE: prior to 1.6.0 the handling specified for particular chunks on read was; * ignored and the default was used, the per-chunk setting only had an effect on; * write. If you wish to have chunk-specific handling on read in code that must; * work on earlier versions you must use a user chunk callback to specify the; * desired handling (keep or discard.); *; * The 'keep' parameter is a PNG_HANDLE_CHUNK_ value as listed below. The; * parameter is interpreted as follows:; *; * READ:; * PNG_HANDLE_CHUNK_AS_DEFAULT:; * Known chunks: do normal libpng processing, do not keep the chunk (but; * see the comments below about PNG_HANDLE_AS_UNKNOWN_SUPPORTED); * Unknown chunks: for a specific chunk use the global default, when used; * as the default discard the chunk data.; * PNG_HANDLE_CHUNK_NEVER:; * Discard the chunk data.; * PNG_HANDLE_CHUNK_IF_SAFE:; * Keep the chunk data if the chunk is not critical else raise a chunk; * error.; * PNG_HANDLE_CHUNK_ALWAYS:; * Keep the chunk data.; *; * If the chunk data is saved it can be retrieved using png_get_unknown_chunks,; * below. Notice that specifying ""AS_DEFAULT"" as a global default is equivalent; * to specifying ""NEVER"", however when ""AS_DEFAULT"" is used for specific chunks; * it simply resets the behavior to the libpng default.; *; * INTERACTION WITH USER CHUNK CALLBACKS:; * The per-chunk handling is always used when there is a png_user_chunk_ptr; * callback and the callback returns 0; the chunk is then always stored *unless*; * it is critical and the per-chunk setting is other than ALWAYS. Notice that; * the global default is *not* used in this case. (In effect the per-chunk; * value is incremented to at least IF_SAFE.); *; * IMPORTANT NOTE: this behavior will change in libpng 1.7 - the global and; * per-chunk defaults will be honored. If you want to preserve the current; * behavior when your callback returns 0 you must s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:1037,error,error,1037,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['error'],['error']
Availability,/* Push and pop error handlers for X errors; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdk.h:16,error,error,16,graf2d/win32gdk/gdk/src/gdk/gdk.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdk.h,2,['error'],"['error', 'errors']"
Availability,"/* Puts 'string' into 'buffer' at buffer[pos], taking care never to overwrite; * the end. Always leaves the buffer nul terminated. Never errors out (and; * there is no error code.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:137,error,errors,137,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,2,['error'],"['error', 'errors']"
Availability,/* RFC7238 Section 3 */; /* RFC2616 Section 10.4 - Client Error 4xx */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:58,Error,Error,58,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Error'],['Error']
Availability,"/* Read 'avail_out' bytes of data from the IDAT stream. If the output buffer; * is NULL the function checks, instead, for the end of the stream. In this; * case a benign error will be issued if the stream end is not found or if; * extra data has to be consumed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:170,error,error,170,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['error'],['error']
Availability,/* Read directly into the output if it is available (this is set to; * a local buffer below if output is NULL).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:42,avail,available,42,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['avail'],['available']
Availability,"/* Read entire request body and store it in a file ""path"".; Return:; < 0 Error; >= 0 Number of bytes stored in file ""path"".; */; /* Read data from the remote end, return number of bytes read.; Return:; 0 connection has been closed by peer. No more data could be read.; < 0 read error. No more data could be read from the connection.; > 0 number of bytes read into the buffer. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:73,Error,Error,73,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,"['Error', 'error']","['Error', 'error']"
Availability,"/* Read from file, exit the loop on error */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:36,error,error,36,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* Read from the socket into the next available location in the; 			 * message queue. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:38,avail,available,38,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['avail'],['available']
Availability,"/* Read one or more rows of image data. If the image is interlaced,; * and png_set_interlace_handling() has been called, the rows need to; * contain the contents of the rows from the previous pass. If the; * image has alpha or transparency, and png_handle_alpha()[*] has been; * called, the rows contents must be initialized to the contents of the; * screen.; *; * ""row"" holds the actual image, and pixels are placed in it; * as they arrive. If the image is displayed after each pass, it will; * appear to ""sparkle"" in. ""display_row"" can be used to display a; * ""chunky"" progressive image, with finer detail added as it becomes; * available. If you do not want this ""chunky"" display, you may pass; * NULL for display_row. If you do not want the sparkle display, and; * you have not called png_handle_alpha(), you may pass NULL for rows.; * If you have called png_handle_alpha(), and the image has either an; * alpha channel or a transparency chunk, you must provide a buffer for; * rows. In this case, you do not have to provide a display_row buffer; * also, but you may. If the image is not interlaced, or if you have; * not called png_set_interlace_handling(), the display_row buffer will; * be ignored, so pass NULL to it.; *; * [*] png_handle_alpha() does not exist yet, as of this version of libpng; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:631,avail,available,631,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['avail'],['available']
Availability,"/* Reads a module from the specified path, returning via the OutModule parameter; a module provider which performs lazy deserialization. Returns 0 on success.; Optionally returns a human-readable error message via OutMessage. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitReader.cpp:196,error,error,196,interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitReader.cpp,1,['error'],['error']
Availability,/* Receive error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:11,error,error,11,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* Recompute downsampled dimensions of components;; * application needs to know these if using raw downsampled data.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c:13,down,downsampled,13,graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,2,['down'],['downsampled']
Availability,"/* Record the we got a `Permission denied' error. If we end; * up finding no executable we can use, we want to diagnose; * that we did find one but were denied access.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c:43,error,error,43,graf2d/win32gdk/gdk/src/glib/gspawn.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c,1,['error'],['error']
Availability,/* Redirect error code from -1 to -2 (destination buffer too; 				 * small). */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:12,error,error,12,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* Regardless of the error handling below the cached data (if any) can be; * freed now. Notice that the data is not freed if there is a png_error, but; * it will be freed by destroy_read_struct.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:21,error,error,21,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['error'],['error']
Availability,"/* Relabel R/G/B as components 0/1/2, respecting the RGB ordering defined; * in jmorecfg.h. As the code stands, it will do the right thing for R,G,B; * and B,G,R orders. If you define some other weird order in jmorecfg.h,; * you'll get compile errors until you extend this logic. In that case; * you'll probably want to tweak the histogram sizes too.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:244,error,errors,244,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['error'],['errors']
Availability,/* Relative tolerance below which disc is treated as zero. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/complex_quartic.h:12,toler,tolerance,12,math/mathmore/src/complex_quartic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/complex_quartic.h,1,['toler'],['tolerance']
Availability,"/* Render a 24-bit RGB image in buf into the GdkImage, without dithering.; This assumes native byte ordering - what should really be done is to; check whether static_image->byte_order is consistent with the _ENDIAN; config flag, and if not, use a different function. This one is even faster than the one below - its inner loop loads 3; words (i.e. 4 24-bit pixels), does a lot of shifting and masking,; then writes 2 words. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkrgb.c:393,mask,masking,393,graf2d/win32gdk/gdk/src/gdk/gdkrgb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkrgb.c,1,['mask'],['masking']
Availability,"/* Render a 24-bit RGB image in buf into the GdkImage, without dithering.; This assumes native byte ordering - what should really be done is to; check whether static_image->byte_order is consistent with the _ENDIAN; config flag, and if not, use a different function. This routine is faster than the one included with Gtk 1.0 for a number; of reasons:. 1. Shifting instead of lookup tables (less memory traffic). 2. Much less register pressure, especially because shifts are; in the code. 3. A memcpy is avoided (i.e. the transfer function). 4. On big-endian architectures, byte swapping is avoided. That said, it wouldn't be hard to make it even faster - just make an; inner loop that reads 3 words (i.e. 4 24-bit pixels), does a lot of; shifting and masking, then writes 2 words.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkrgb.c:751,mask,masking,751,graf2d/win32gdk/gdk/src/gdk/gdkrgb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkrgb.c,1,['mask'],['masking']
Availability,"/* Replace the (error and abort), and warning functions with user; * supplied functions. If no messages are to be printed you must still; * write and use replacement functions. The replacement error_fn should; * still do a longjmp to the last setjmp location if you are using this; * method of error handling. If error_fn or warning_fn is NULL, the; * default function will be used.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:16,error,error,16,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,['error'],['error']
Availability,/* Report a recoverable issue in chunk data. On read this is used to report; * a problem found while reading a particular chunk and the; * png_chunk_benign_error or png_chunk_warning function is used as; * appropriate. On write this is used to report an error that comes from; * data set via an application call to a png_set_ API and png_app_error or; * png_app_warning is used as appropriate.; *; * The 'error' parameter must have one of the following values:; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:12,recover,recoverable,12,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,3,"['error', 'recover']","['error', 'recoverable']"
Availability,"/* Report an out-of-memory error and stop execution */; /* If we compiled MEM_STATS support, report alloc requests before dying */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:27,error,error,27,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['error'],['error']
Availability,"/* Requested interface unknown, bail with error. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rootql/main.c:42,error,error,42,misc/rootql/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rootql/main.c,2,['error'],['error']
Availability,/* Reset error state variables at start of a new image */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:9,error,error,9,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['error'],['error']
Availability,/* Reset ip_version to 0 if there is an error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:40,error,error,40,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* Reset open PING count */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:14,PING,PING,14,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['PING'],['PING']
Availability,"/* Reset the output buffer each time round if output is NULL and; * make available the full buffer, up to 'remaining_space'; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:73,avail,available,73,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['avail'],['available']
Availability,/* Return -1 in an error case */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:19,error,error,19,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* Return 0 on success, non-zero if an error occurs. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:39,error,error,39,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* Return a device context to draw in a drawable, given a GDK GC,; * and a mask indicating which GC values might be used (for efficiency,; * no need to muck around with text-related stuff if we aren't going; * to output text, for instance).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkwin32.h:75,mask,mask,75,graf2d/win32gdk/gdk/src/gdk/win32/gdkwin32.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkwin32.h,1,['mask'],['mask']
Availability,"/* Return a mask for pass 'p' pixel 'x' at depth 'd'. The mask is; * little endian - the first pixel is at bit 0 - however the extra; * parameter 's' can be set to cause the mask position to be swapped; * within each byte, to match the PNG format. This is done by XOR of; * the shift with 7, 6 or 4 for bit depths 1, 2 and 4.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:12,mask,mask,12,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,3,['mask'],['mask']
Availability,"/* Return codes for the compression/decompression functions. Negative values; * are errors, positive values are used for special but normal events.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:84,error,errors,84,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['error'],['errors']
Availability,"/* Return codes for the compression/decompression functions. Negative; * values are errors, positive values are used for special but normal events.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:84,error,errors,84,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['errors']
Availability,/* Return failure if the match length is less than 2:; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:10,failure,failure,10,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,2,['failure'],['failure']
Availability,/* Return one of the following:; * return (-n); chunk had an error; * return (0); did not recognize; * return (n); success; *; * The unknown chunk structure contains the chunk data:; * png_byte name[5];; * png_byte *data;; * size_t size;; *; * Note that libpng has already taken care of the CRC handling.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:61,error,error,61,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['error'],['error']
Availability,/* Return the error from the last attempt (probably ENOENT). */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c:14,error,error,14,graf2d/win32gdk/gdk/src/glib/gspawn.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c,1,['error'],['error']
Availability,/* Return the user pointer associated with the error functions */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:47,error,error,47,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['error'],['error']
Availability,/* Return to setjmp on error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:23,error,error,23,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['error'],['error']
Availability,/* Returns a ZSTD error code if sequence is not valid */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:18,error,error,18,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['error'],['error']
Availability,"/* Returns the number of bytes to move the current read position back by. Only non-zero; * if we ended up splitting a sequence. Otherwise, it may return a ZSTD error if something; * went wrong.; *; * This function will attempt to scan through blockSize bytes represented by the sequences; * in inSeqs, storing any (partial) sequences.; *; * Occasionally, we may want to change the actual number of bytes we consumed from inSeqs to; * avoid splitting a match, or to avoid splitting a match such that it would produce a match; * smaller than MINMATCH. In this case, we return the number of bytes that we didn't read from this block.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:160,error,error,160,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['error'],['error']
Availability,/* Routine that actually outputs a trace or error message */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:44,error,error,44,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['error'],['error']
Availability,"/* SCANLINE_MOD(print_component,*(imout->available),0, new_line->width ); */; /* copying/encoding previously cached line into destination image : */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.c:41,avail,available,41,graf2d/asimage/src/libAfterImage/imencdec.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.c,1,['avail'],['available']
Availability,"/* SSE4 Floating Point Dot Product Instructions. */; /// Computes the dot product of the two 128-bit vectors of [4 x float]; /// and returns it in the elements of the 128-bit result vector of; /// [4 x float].; ///; /// The immediate integer operand controls which input elements; /// will contribute to the dot product, and where the final results are; /// returned.; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// __m128 _mm_dp_ps(__m128 X, __m128 Y, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VDPPS / DPPS </c> instruction.; ///; /// \param X; /// A 128-bit vector of [4 x float].; /// \param Y; /// A 128-bit vector of [4 x float].; /// \param M; /// An immediate integer operand. Mask bits [7:4] determine which elements; /// of the input vectors are used, with bit [4] corresponding to the lowest; /// element and bit [7] corresponding to the highest element of each [4 x; /// float] vector. If a bit is set, the corresponding elements from the two; /// input vectors are used as an input for dot product; otherwise that input; /// is treated as zero. Bits [3:0] determine which elements of the result; /// will receive a copy of the final dot product, with bit [0] corresponding; /// to the lowest element and bit [3] corresponding to the highest element of; /// each [4 x float] subvector. If a bit is set, the dot product is returned; /// in the corresponding element; otherwise that element is set to zero.; /// \returns A 128-bit vector of [4 x float] containing the dot product.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:727,Mask,Mask,727,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,1,['Mask'],['Mask']
Availability,"/* SSE4 Packed Blending Intrinsics. */; /// Returns a 128-bit vector of [2 x double] where the values are; /// selected from either the first or second operand as specified by the; /// third operand, the control mask.; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// __m128d _mm_blend_pd(__m128d V1, __m128d V2, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VBLENDPD / BLENDPD </c> instruction.; ///; /// \param V1; /// A 128-bit vector of [2 x double].; /// \param V2; /// A 128-bit vector of [2 x double].; /// \param M; /// An immediate integer operand, with mask bits [1:0] specifying how the; /// values are to be copied. The position of the mask bit corresponds to the; /// index of a copied value. When a mask bit is 0, the corresponding 64-bit; /// element in operand \a V1 is copied to the same position in the result.; /// When a mask bit is 1, the corresponding 64-bit element in operand \a V2; /// is copied to the same position in the result.; /// \returns A 128-bit vector of [2 x double] containing the copied values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:212,mask,mask,212,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,5,['mask'],['mask']
Availability,"/* SSE4.2 Packed Comparison Intrinsics and EFlag Reading. */; /// Uses the immediate operand \a M to perform a comparison of string; /// data with implicitly defined lengths that is contained in source operands; /// \a A and \a B. Returns 1 if the bit mask is zero and the length of the; /// string in \a B is the maximum, otherwise, returns 0.; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// int _mm_cmpistra(__m128i A, __m128i B, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VPCMPISTRI / PCMPISTRI </c>; /// instruction.; ///; /// \param A; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param B; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param M; /// An 8-bit immediate operand specifying whether the characters are bytes or; /// words and the type of comparison to perform. \n; /// Bits [1:0]: Determine source data format. \n; /// 00: 16 unsigned bytes \n; /// 01: 8 unsigned words \n; /// 10: 16 signed bytes \n; /// 11: 8 signed words \n; /// Bits [3:2]: Determine comparison type and aggregation method. \n; /// 00: Subset: Each character in \a B is compared for equality with all; /// the characters in \a A. \n; /// 01: Ranges: Each character in \a B is compared to \a A. The comparison; /// basis is greater than or equal for even-indexed elements in \a A,; /// and less than or equal for odd-indexed elements in \a A. \n; /// 10: Match: Compare each pair of corresponding characters in \a A and; /// \a B for equality. \n; /// 11: Substring: Search \a B for substring matches of \a A. \n; /// Bits [5:4]: Determine whether to perform a one's complement on the bit; /// mask of the comparison results. \n; /// 00: No effect. \n; /// 01: Negate the bit mask. \n; /// 10: No effect. \n; /// 11: Negate the bit mask only for bits with an index less than or equal; /// to the size of \a A or \a B. \n; /// \returns Returns 1 if the bit mask is zero and th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:252,mask,mask,252,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,1,['mask'],['mask']
Availability,"/* SSE4.2 Packed Comparison Intrinsics. */; /// Uses the immediate operand \a M to perform a comparison of string; /// data with implicitly defined lengths that is contained in source operands; /// \a A and \a B. Returns a 128-bit integer vector representing the result; /// mask of the comparison.; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// __m128i _mm_cmpistrm(__m128i A, __m128i B, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VPCMPISTRM / PCMPISTRM </c>; /// instruction.; ///; /// \param A; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param B; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param M; /// An 8-bit immediate operand specifying whether the characters are bytes or; /// words, the type of comparison to perform, and the format of the return; /// value. \n; /// Bits [1:0]: Determine source data format. \n; /// 00: 16 unsigned bytes \n; /// 01: 8 unsigned words \n; /// 10: 16 signed bytes \n; /// 11: 8 signed words \n; /// Bits [3:2]: Determine comparison type and aggregation method. \n; /// 00: Subset: Each character in \a B is compared for equality with all; /// the characters in \a A. \n; /// 01: Ranges: Each character in \a B is compared to \a A. The comparison; /// basis is greater than or equal for even-indexed elements in \a A,; /// and less than or equal for odd-indexed elements in \a A. \n; /// 10: Match: Compare each pair of corresponding characters in \a A and; /// \a B for equality. \n; /// 11: Substring: Search \a B for substring matches of \a A. \n; /// Bits [5:4]: Determine whether to perform a one's complement on the bit; /// mask of the comparison results. \n; /// 00: No effect. \n; /// 01: Negate the bit mask. \n; /// 10: No effect. \n; /// 11: Negate the bit mask only for bits with an index less than or equal; /// to the size of \a A or \a B. \n; /// Bit [6]: Determines whether the result is zero-extend",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:275,mask,mask,275,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,1,['mask'],['mask']
Availability,"/* STOPPING = repeat call after a suspension, anything else is error */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c:63,error,error,63,graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c,1,['error'],['error']
Availability,"/* Safely call the real function, but only if doing so is safe at this point; * (if not inside an error handling context). Otherwise assume; * png_safe_execute will call this API after the return.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:98,error,error,98,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,/* Save our program name - for error messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterbase.c:31,error,error,31,graf2d/asimage/src/libAfterImage/afterbase.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterbase.c,1,['error'],['error']
Availability,"/* Scale a 16-bit depth file down to 8-bit, accurately. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:29,down,down,29,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['down'],['down']
Availability,/* Scale rows of bit depth 16 down to 8 accurately */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:30,down,down,30,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['down'],['down']
Availability,/* See if space is available in any existing pool */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:19,avail,available,19,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['avail'],['available']
Availability,"/* Select a size limit (in power of 2) beyond which; * the streaming API will refuse to allocate memory buffer; * in order to protect the host from unreasonable memory requirements.; * This parameter is only useful in streaming mode, since no internal buffer is allocated in single-pass mode.; * By default, a decompression context accepts window sizes <= (1 << ZSTD_WINDOWLOG_LIMIT_DEFAULT).; * Special: value 0 means ""use default maximum windowLog"". */; /* note : additional experimental parameters are also available; * within the experimental section of the API.; * At the time of this writing, they include :; * ZSTD_d_format; * ZSTD_d_stableOutBuffer; * ZSTD_d_forceIgnoreChecksum; * Because they are not stable, it's necessary to define ZSTD_STATIC_LINKING_ONLY to access them.; * note : never ever use experimentalParam? names directly; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:510,avail,available,510,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['avail'],['available']
Availability,"/* Send ""HTTP 200 OK"" response header.; * After calling this function, use mg_write or mg_send_chunk to send the; * response body.; * Parameters:; * conn: Current connection handle.; * mime_type: Set Content-Type for the following content.; * content_length: Size of the following content, if content_length >= 0.; * Will set transfer-encoding to chunked, if set to -1.; * Return:; * < 0 Error; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:388,Error,Error,388,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['Error'],['Error']
Availability,"/* Send ""HTTP 30x"" redirect response.; * The response has content-size zero: do not send any body data after calling; * this function.; * Parameters:; * conn: Current connection handle.; * target_url: New location.; * redirect_code: HTTP redirect type. Could be 301, 302, 303, 307, 308.; * Return:; * < 0 Error (-1 send error, -2 parameter error); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:305,Error,Error,305,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,3,"['Error', 'error']","['Error', 'error']"
Availability,"/* Send HTTP digest access authentication request.; * Browsers will send a user name and password in their next request, showing; * an authentication dialog if the password is not stored.; * Parameters:; * conn: Current connection handle.; * realm: Authentication realm. If NULL is supplied, the sever domain; * set in the authentication_domain configuration is used.; * Return:; * < 0 Error; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:386,Error,Error,386,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['Error'],['Error']
Availability,/* Send HTTP error reply. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:13,error,error,13,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['error'],['error']
Availability,/* Send Websocket PING message */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:18,PING,PING,18,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['PING'],['PING']
Availability,/* Send contents of the file without HTTP headers.; * The code must send a valid HTTP response header before using this function.; *; * Parameters:; * conn: Current connection information.; * path: Full path to the file to send.; *; * Return:; * < 0 Error; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:250,Error,Error,250,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['Error'],['Error']
Availability,"/* Send data to a websocket client wrapped in a websocket frame. Uses; mg_lock_connection to ensure that the transmission is not interrupted,; i.e., when the application is proactively communicating and responding to; a request simultaneously. Send data to a websocket client wrapped in a websocket frame.; This function is available when civetweb is compiled with -DUSE_WEBSOCKET. Return:; 0 when the connection has been closed; -1 on error; >0 number of bytes written on success */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:324,avail,available,324,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,"['avail', 'error']","['available', 'error']"
Availability,"/* Send data to a websocket server wrapped in a masked websocket frame. Uses; mg_lock_connection to ensure that the transmission is not interrupted,; i.e., when the application is proactively communicating and responding to; a request simultaneously. Send data to a websocket server wrapped in a masked websocket frame.; This function is available when civetweb is compiled with -DUSE_WEBSOCKET. Return:; 0 when the connection has been closed; -1 on error; >0 number of bytes written on success */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:48,mask,masked,48,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,4,"['avail', 'error', 'mask']","['available', 'error', 'masked']"
Availability,/* Send data to the client.; Return:; 0 when the connection has been closed; -1 on error; >0 number of bytes written on success */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:83,error,error,83,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['error'],['error']
Availability,/* Send http response; * Parameters:; * conn: Current connection handle.; * Return:; * 0: ok; * -1: parameter error; * -2: invalid connection type; * -3: invalid connection status; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:110,error,error,110,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['error'],['error']
Availability,"/* Send read bytes to the client, exit the loop on error */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:51,error,error,51,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* Send user defined error pages, if defined */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:21,error,error,21,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* Set IPv6 only option, but don't abort on errors. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:44,error,errors,44,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['error'],['errors']
Availability,"/* Set TCP keep-alive for TCP sockets (IPv4 and IPv6).; 			 * This is needed because if HTTP-level keep-alive; 			 * is enabled, and client resets the connection, server won't get; 			 * TCP FIN or RST and will keep the connection open forever. With; 			 * TCP keep-alive, next keep-alive handshake will figure out that; 			 * the client is down and will close the server end.; 			 * Thanks to Igor Klopov who suggested the patch. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:16,alive,alive,16,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,5,"['alive', 'down']","['alive', 'down']"
Availability,"/* Set bits for available features according to API documentation.; 	 * This bit mask is created at compile time, according to the active; 	 * preprocessor defines. It is a single const value at runtime. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:16,avail,available,16,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,"['avail', 'mask']","['available', 'mask']"
Availability,"/* Set close flag, so keep-alive loops will stop */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:27,alive,alive,27,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['alive'],['alive']
Availability,"/* Set compression parameters according to pre-defined cLevel table.; * Note that exact compression parameters are dynamically determined,; * depending on both compression level and srcSize (when known).; * Default level is ZSTD_CLEVEL_DEFAULT==3.; * Special: value 0 means default, which is controlled by ZSTD_CLEVEL_DEFAULT.; * Note 1 : it's possible to pass a negative compression level.; * Note 2 : setting a level does not automatically set all other compression parameters; * to default. Setting this will however eventually dynamically impact the compression; * parameters which have not been manually set. The manually set; * ones will 'stick'. */; /* Advanced compression parameters :; * It's possible to pin down compression parameters to some specific values.; * In which case, these values are no longer dynamically selected by the compressor */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:718,down,down,718,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['down'],['down']
Availability,/* Set error handling if you are using the setjmp/longjmp method (this is; 			 * the normal method of doing things with libpng). REQUIRED unless you; 			 * set up your own error handlers in the png_create_read_struct() earlier.; 			 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c:7,error,error,7,graf2d/asimage/src/libAfterImage/import.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c,2,['error'],['error']
Availability,"/* Set reuse option, but don't abort on errors. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:40,error,errors,40,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['error'],['errors']
Availability,/* Set the action on getting a CRC error for an ancillary or critical chunk. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:35,error,error,35,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['error'],['error']
Availability,/* Set the libpng method of handling chunk CRC errors */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:47,error,errors,47,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['error'],['errors']
Availability,"/* Sets the function callbacks for the push reader, and a pointer to a; * user-defined structure available to the callback functions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:97,avail,available,97,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['avail'],['available']
Availability,/* Shift hash cache down 1. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_lazy.c:20,down,down,20,builtins/zstd/compress/zstd_lazy.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_lazy.c,1,['down'],['down']
Availability,"/* Should not be required, but is safe */; /* Ensure the error message pointer is always set: */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:57,error,error,57,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['error'],['error']
Availability,/* Shut down signal */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:8,down,down,8,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['down'],['down']
Availability,/* Shut down the queue */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.c:8,down,down,8,builtins/zstd/common/pool.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.c,1,['down'],['down']
Availability,/* Simple top-down heapsort. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/divsufsort.c:14,down,down,14,builtins/zstd/dictBuilder/divsufsort.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/divsufsort.c,2,['down'],['down']
Availability,"/* Simple version, good for code maintenance, but unfortunately slow for small inputs */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:33,mainten,maintenance,33,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,2,['mainten'],['maintenance']
Availability,"/* Since avail_out is 0, deflate will be called again with; * more output space, but possibly with both pending and; * avail_in equal to zero. There won't be anything to do,; * but this is not an error situation so make sure we; * return OK instead of BUF_ERROR at next call of deflate:; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:196,error,error,196,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,3,['error'],['error']
Availability,"/* Skip len uncompressed bytes of output. Return -1 on error, 0 on success. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c:55,error,error,55,builtins/zlib/gzread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c,1,['error'],['error']
Availability,/* Skip the 'write_end' on error: */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:27,error,error,27,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['error'],['error']
Availability,"/* Slower way to find the channel vector:; // Get the vector of bin uncertainty caches for this channel; if( _barlowCache.find( channel_name ) == _barlowCache.end() ) {; std::cout << ""Error: channel: "" << channel_name; << "" not found in barlow Cache"" << std::endl;; throw runtime_error(""Channel not in barlow cache"");; }. std::vector< BarlowCache >& channel_cache = _barlowCache[ channel_name ];; */; // Loop over the bins in the cache; // Set all gamma's to 0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:184,Error,Error,184,roofit/histfactory/src/RooBarlowBeestonLL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx,1,['Error'],['Error']
Availability,"/* So the message that results is ""<chunk> using zstream""; this is an; * internal error, but is very useful for debugging. i18n requirements; * are minimal.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:82,error,error,82,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,2,['error'],['error']
Availability,"/* Some other error means we found an executable file, but; * something went wrong executing it; return the error to our; * caller.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c:14,error,error,14,graf2d/win32gdk/gdk/src/glib/gspawn.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c,2,['error'],['error']
Availability,/* Space available in buf */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:9,avail,available,9,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['avail'],['available']
Availability,"/* Split form encoded data into a list of key value pairs.; A form encoded input might be a query string, the body of a; x-www-form-urlencoded POST request or any other data with this; structure: ""keyName1=value1&keyName2=value2&keyName3=value3"".; Values might be percent-encoded - this function will transform; them to the unencoded characters.; The input string is modified by this function: To split the; ""query_string"" member of struct request_info, create a copy first; (e.g., using strdup).; The function itself does not allocate memory. Thus, it is not; required to free any pointer returned from this function.; The output list of is limited to MG_MAX_FORM_FIELDS name-value-; pairs. The default value is reasonably oversized for typical; applications, however, for special purpose systems it might be; required to increase this value at compile time. Parameters:; data: form encoded iput string. Will be modified by this function.; form_fields: output list of name/value-pairs. A buffer with a size; specified by num_form_fields must be provided by the; caller.; num_form_fields: Size of provided form_fields buffer in number of; ""struct mg_header"" elements. Return:; On success: number of form_fields filled; On error:; -1 (parameter error). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:1222,error,error,1222,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,['error'],['error']
Availability,/* Standard state variables for error facility */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:32,error,error,32,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['error'],['error']
Availability,"/* Start web server. Parameters:; callbacks: mg_callbacks structure with user-defined callbacks.; options: NULL terminated list of option_name, option_value pairs that; specify Civetweb configuration parameters. Side-effects: on UNIX, ignores SIGCHLD and SIGPIPE signals. If custom; processing is required for these, signal handlers must be set up; after calling mg_start(). Example:; const char *options[] = {; ""document_root"", ""/var/www"",; ""listening_ports"", ""80,443s"",; NULL; };; struct mg_context *ctx = mg_start(&my_func, NULL, options);. Refer to https://github.com/civetweb/civetweb/blob/master/docs/UserManual.md; for the list of valid option and their possible values. Return:; web server context, or NULL on error. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:718,error,error,718,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['error'],['error']
Availability,"/* Start with initCStream, providing the size of buffer to write into.; * bitStream will never write outside of this buffer.; * `dstCapacity` must be >= sizeof(bitD->bitContainer), otherwise @return will be an error code.; *; * bits are first added to a local register.; * Local register is size_t, hence 64-bits on 64-bits systems, or 32-bits on 32-bits systems.; * Writing data into memory is an explicit operation, performed by the flushBits function.; * Hence keep track how many bits are potentially stored into local register to avoid register overflow.; * After a flushBits, a maximum of 7 bits might still be stored into local register.; *; * Avoid storing elements of more than 24 bits if you want compatibility with 32-bits bitstream readers.; *; * Last operation is to close the bitStream.; * The function returns the final size of CStream in bytes.; * If data couldn't fit into `dstBuffer`, it will return a 0 ( == not storable); */; /*-********************************************; * bitStream decoding API (read backward); **********************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h:210,error,error,210,builtins/zstd/common/bitstream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h,1,['error'],['error']
Availability,"/* Statistics available to the user.; FIXME: By design, the internals of the malloc package are no longer; exported to the user via an include file, so access to this data needs; to be via some other mechanism, such as mmstat_<something> where the; return value is the <something> the user is interested in. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h:14,avail,available,14,core/clib/res/mmprivate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h,1,['avail'],['available']
Availability,"/* Step 1: allocate and initialize JPEG compression object */; /* We have to set up the error handler first, in case the initialization; 	* step fails. (Unlikely, but it could happen if you are out of memory.); 	* This routine fills in the contents of struct jerr, and returns jerr's; 	* address which we place into the link field in cinfo.; 	*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/export.c:88,error,error,88,graf2d/asimage/src/libAfterImage/export.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/export.c,1,['error'],['error']
Availability,"/* Step 1: allocate and initialize JPEG decompression object */; /* We set up the normal JPEG error routines, then override error_exit. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c:94,error,error,94,graf2d/asimage/src/libAfterImage/import.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c,1,['error'],['error']
Availability,/* Still expect a buffer error because we expect; * there to be some tag data!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:25,error,error,25,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['error'],['error']
Availability,/* Stop sending PING */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:16,PING,PING,16,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['PING'],['PING']
Availability,/* Store error message in errmsg_buf */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:9,error,error,9,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* Strip ""#nnnn "" from beginning of error message. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:36,error,error,36,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,2,['error'],['error']
Availability,"/* Strip the prepended error numbers (""#nnn "") from error and warning; * messages before passing them to the error or warning handler.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:23,error,error,23,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,3,['error'],['error']
Availability,"/* Substitute files have already been handled above. */; /* Here we can either generate and send a directory listing,; 		 * or send an ""access denied"" error. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:151,error,error,151,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* Such complex bit manipulation for this simple task, sigh.; * The X cursor and Windows cursor concepts are quite different.; * We assume here that we are always called with fg == black and; * bg == white, *or* the other way around. Random colours won't work.; * (Well, you will get a cursor, but not in those colours.); */; /* Note: The comments below refer to the case fg==black and; * bg==white.; */; /* First set masked-out source bits, as all source bits matter on Windoze.; * As we invert them below, they will be clear in the final XORmask.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcursor-win32.c:418,mask,masked-out,418,graf2d/win32gdk/gdk/src/gdk/win32/gdkcursor-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcursor-win32.c,1,['mask'],['masked-out']
Availability,"/* Summarize any warnings or errors and in 'strict' mode fail the test.; * Unsupported chunks can result in warnings, in that case ignore the strict; * setting, otherwise fail the test on warnings as well as errors.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:29,error,errors,29,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,2,['error'],['errors']
Availability,/* Support for compiler specific function attributes. These are used; * so that where compiler support is available incorrect use of API; * functions in png.h will generate compiler warnings.; *; * Added at libpng-1.2.41.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h:106,avail,available,106,graf2d/asimage/src/libAfterImage/libpng/pngconf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h,1,['avail'],['available']
Availability,"/* Support for compiler specific function attributes. These are used; * so that where compiler support is available, incorrect use of API; * functions in png.h will generate compiler warnings. Added at libpng; * version 1.2.41. Disabling these removes the warnings but may also produce; * less efficient code.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h:106,avail,available,106,graf2d/asimage/src/libAfterImage/libpng/pngconf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h,1,['avail'],['available']
Availability,/* TEMPORARY HACK ??? */; /* assume default tables no good for progressive or downscale mode */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c:78,down,downscale,78,graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,1,['down'],['downscale']
Availability,/* TODO (mid): Define proper return values - maybe return length?; 	 * For the first test use <0 for error and >0 for OK */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:101,error,error,101,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* TODO (mid): error handling depending on the error code.; 			 * These codes are different between Windows and Linux.; 			 * Currently there is no problem with failing send calls,; 			 * if there is a reproducible situation, it should be; 			 * investigated in detail.; 			 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:15,error,error,15,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['error'],['error']
Availability,/* TODO ... report error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:19,error,error,19,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,1,['error'],['error']
Availability,/* TODO: WARNING: TRUNCATION ERROR: DANGER WILL ROBINSON: */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpread.c:29,ERROR,ERROR,29,graf2d/asimage/src/libAfterImage/libpng/pngpread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpread.c,2,['ERROR'],['ERROR']
Availability,/* TODO: is this actually an error in the ISO spec? */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:29,error,error,29,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['error'],['error']
Availability,/* TRUE=apply fancy downsampling */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:20,down,downsampling,20,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['down'],['downsampling']
Availability,/* TRUE=caller supplies downsampled data */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:24,down,downsampled,24,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['down'],['downsampled']
Availability,/* TRUE=downsampled data wanted */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:8,down,downsampled,8,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['down'],['downsampled']
Availability,/* Tell lib we have already handled the first <num_bytes> magic bytes.; * Handling more than 8 bytes from the beginning of the file is an error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:138,error,error,138,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['error'],['error']
Availability,/* Tell libpng how we react to CRC errors in ancillary chunks */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:35,error,errors,35,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['error'],['errors']
Availability,/* Tell libpng how we react to CRC errors in critical chunks */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:35,error,errors,35,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['error'],['errors']
Availability,"/* Terminate access to a mmalloc managed region by unmapping all memory pages; associated with the region, and closing the file descriptor if it is one; that we opened. Returns NULL on success. Returns the malloc descriptor on failure, which can subsequently be used; for further action, such as obtaining more information about the nature of; the failure by examining the preserved errno value. Note that the malloc descriptor that we are using is currently located in; region we are about to unmap, so we first make a local copy of it on the; stack and use the copy. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/detach.c:227,failure,failure,227,core/clib/src/detach.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/detach.c,2,['failure'],['failure']
Availability,/* Test for roundoff and eventually set error flag */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:40,error,error,40,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['error'],['error']
Availability,"/* Test the 'compatibility' setting here, if it is available. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:51,avail,available,51,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['avail'],['available']
Availability,"/* The ""feature merging"" is not intended to be complete. There are; * special cases where edges are nearly parallel to the sweep line; * which are not implemented. The algorithm should still behave; * robustly (ie. produce a reasonable tesselation) in the presence; * of such edges, however it may miss features which could have been; * merged. We could minimize this effect by choosing the sweep line; * direction to be something unusual (ie. not parallel to one of the; * coordinate axes).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/normal.c:201,robust,robustly,201,graf3d/eve7/glu/normal.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/normal.c,1,['robust'],['robustly']
Availability,"/* The PNG spec requires this:; * ""If the iCCP chunk is present, the image samples conform to the colour; * space represented by the embedded ICC profile as defined by the; * International Color Consortium [ICC]. The colour space of the ICC profile; * shall be an RGB colour space for colour images (PNG colour types 2, 3, and; * 6), or a greyscale colour space for greyscale images (PNG colour types 0; * and 4).""; *; * This checking code ensures the embedded profile (on either read or write); * conforms to the specification requirements. Notice that an ICC 'gray'; * color-space profile contains the information to transform the monochrome; * data to XYZ or L*a*b (according to which PCS the profile uses) and this; * should be used in preference to the standard libpng K channel replication; * into R, G and B channels.; *; * Previously it was suggested that an RGB profile on grayscale data could be; * handled. However it it is clear that using an RGB profile in this context; * must be an error - there is no specification of what it means. Thus it is; * almost certainly more correct to ignore the profile.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:997,error,error,997,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,"/* The actual parser. This can be called repeatedly. It updates; * the index into the string and the state variable (which must; * be initialized to 0). It returns a result code, as above. There; * is no point calling the parser any more if it fails to advance to; * the end of the string - it is stuck on an invalid character (or; * terminated by '\0').; *; * Note that the pointer will consume an E or even an E+ and then leave; * a 'maybe' state even though a preceding integer.fraction is valid.; * The PNG_FP_WAS_VALID flag indicates that a preceding substring was; * a valid number. It's possible to recover from this by calling; * the parser again (from the start, with state 0) but with a string; * that omits the last character (i.e. set the size to the index of; * the problem character.) This has not been tested within libpng.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:606,recover,recover,606,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['recover'],['recover']
Availability,"/* The application can compare zlibVersion and ZLIB_VERSION for consistency.; If the first character differs, the library code actually used is not; compatible with the zlib.h header file used by the application. This check; is automatically made by deflateInit and inflateInit.; */; /*; ZEXTERN int ZEXPORT deflateInit OF((z_streamp strm, int level));. Initializes the internal stream state for compression. The fields; zalloc, zfree and opaque must be initialized before by the caller. If; zalloc and zfree are set to Z_NULL, deflateInit updates them to use default; allocation functions. The compression level must be Z_DEFAULT_COMPRESSION, or between 0 and 9:; 1 gives best speed, 9 gives best compression, 0 gives no compression at all; (the input data is simply copied a block at a time). Z_DEFAULT_COMPRESSION; requests a default compromise between speed and compression (currently; equivalent to level 6). deflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if level is not a valid compression level, or; Z_VERSION_ERROR if the zlib library version (zlib_version) is incompatible; with the version assumed by the caller (ZLIB_VERSION). msg is set to null; if there is no error message. deflateInit does not perform any compression:; this will be done by deflate().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1224,error,error,1224,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['error'],['error']
Availability,"/* The application can compare zlibVersion and ZLIB_VERSION for consistency.; If the first character differs, the library code actually used is; not compatible with the zlib.h header file used by the application.; This check is automatically made by deflateInit and inflateInit.; */; /*; ZEXTERN int ZEXPORT deflateInit OF((z_streamp strm, int level));. Initializes the internal stream state for compression. The fields; zalloc, zfree and opaque must be initialized before by the caller.; If zalloc and zfree are set to Z_NULL, deflateInit updates them to; use default allocation functions. The compression level must be Z_DEFAULT_COMPRESSION, or between 0 and 9:; 1 gives best speed, 9 gives best compression, 0 gives no compression at; all (the input data is simply copied a block at a time).; Z_DEFAULT_COMPRESSION requests a default compromise between speed and; compression (currently equivalent to level 6). deflateInit returns Z_OK if success, Z_MEM_ERROR if there was not; enough memory, Z_STREAM_ERROR if level is not a valid compression level,; Z_VERSION_ERROR if the zlib library version (zlib_version) is incompatible; with the version assumed by the caller (ZLIB_VERSION).; msg is set to null if there is no error message. deflateInit does not; perform any compression: this will be done by deflate().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:1221,error,error,1221,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability,"/* The application provided invalid parameters to an API function or called; * an API function at the wrong time, libpng can completely recover.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:136,recover,recover,136,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['recover'],['recover']
Availability,/* The cast is safe because 'location' is a bit mask and only the low four; * bits are significant.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c:48,mask,mask,48,graf2d/asimage/src/libAfterImage/libpng/pngset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c,1,['mask'],['mask']
Availability,"/* The data available event is manual reset, the space available event; * is automatic reset.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c:12,avail,available,12,graf2d/win32gdk/gdk/src/glib/giowin32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c,2,['avail'],['available']
Availability,"/* The downsampled dimensions are the component's actual, unpadded number; * of samples at the main buffer (preprocessing/compression interface);; * DCT scaling is included, so; * downsampled_width = ceil(image_width * Hi/Hmax * DCT_h_scaled_size/DCTSIZE); * and similarly for height.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:7,down,downsampled,7,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['down'],['downsampled']
Availability,/* The end points must be reasonably close to any we already have. The; * following allows an error of up to +/-.001; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:94,error,error,94,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,/* The error code 18446744073709551546 arises when the tgt buffer is too small; * However this error is already handled outside of the compression algorithm; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zstd/src/ZipZSTD.cxx:7,error,error,7,core/zstd/src/ZipZSTD.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zstd/src/ZipZSTD.cxx,2,['error'],['error']
Availability,"/* The error from the true value, in half-ulps, on multiplying two; floating point numbers, which differ from the value they; approximate by at most HUE1 and HUE2 half-ulps, is strictly less; than the returned value. See ""How to Read Floating Point Numbers Accurately"" by William D; Clinger. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp:7,error,error,7,interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,1,['error'],['error']
Availability,/* The error handling and memory handling information is left intact at this; * point: the jmp_buf may still have to be freed. See png_destroy_png_struct; * for how this happens.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:7,error,error,7,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['error'],['error']
Availability,/* The failure case when the request is too large */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngmem.c:7,failure,failure,7,graf2d/asimage/src/libAfterImage/libpng/pngmem.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngmem.c,1,['failure'],['failure']
Availability,"/* The fixed point conversion performs range checking and evaluates; * its argument multiple times, so must be used with care. The; * range checking uses the PNG specification values for a signed; * 32-bit fixed point value except that the values are deliberately; * rounded-to-zero to an integral value - 21474 (21474.83 is roughly; * (2^31-1) * 100000). 's' is a string that describes the value being; * converted.; *; * NOTE: this macro will raise a png_error if the range check fails,; * therefore it is normally only appropriate to use this on values; * that come from API calls or other sources where an out of range; * error indicates a programming error, not a data error!; *; * NOTE: by default this is off - the macro is not used - because the; * function call saves a lot of code.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:626,error,error,626,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,3,['error'],['error']
Availability,"/* The floating point conversion can't overflow, though it can and; * does lose accuracy relative to the original fixed point value.; * In practice this doesn't matter because png_fixed_point only; * stores numbers with very low precision. The png_ptr and s; * arguments are unused by default but are there in case error; * checking becomes a requirement.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:315,error,error,315,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['error'],['error']
Availability,/* The following are the values for 16-bit tables - these work fine for the; * 8-bit conversions but produce very slightly larger errors in the 16-bit; * log (about 1.2 as opposed to 0.7 absolute error in the final value). To; * use these all the shifts below must be adjusted appropriately.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:130,error,errors,130,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,2,['error'],"['error', 'errors']"
Availability,"/* The following code is redundant, but it should avoid; 					 * false positives in static source code analyzers and; 					 * vulnerability scanners.; 					 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:25,redundant,redundant,25,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['redundant'],['redundant']
Availability,"/* The following decodes the appropriate chunks, and does error correction,; * then calls the appropriate callback for the chunk if it is valid.; */; /* Decode the IHDR chunk */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:58,error,error,58,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['error'],['error']
Availability,"/* The following silently ignores cases where fixed point (times 100,000); * gamma values are passed to the floating point API. This is safe and it; * means the fixed point constants work just fine with the floating point; * API. The alternative would just lead to undetected errors and spurious; * bug reports. Negative values fail inside the _fixed API unless they; * correspond to the flag values.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:276,error,errors,276,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['error'],['errors']
Availability,"/* The following two API calls simply set fields in png_struct, so it is safe; * to do them now even though error handling is not yet set up.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:108,error,error,108,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,"/* The following two definitions specify the allocation chunk size; * for the statistics area.; * According to sections F.1.4.4.1.3 and F.1.4.4.2, we need at least; * 49 statistics bins for DC, and 245 statistics bins for AC coding.; *; * We use a compact representation with 1 byte per statistics bin,; * thus the numbers directly represent byte sizes.; * This 1 byte per statistics bin contains the meaning of the MPS; * (more probable symbol) in the highest bit (mask 0x80), and the; * index into the probability estimation state machine table; * in the lower bits (mask 0x7F).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c:466,mask,mask,466,graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,4,['mask'],['mask']
Availability,"/* The function g_io_channel_new_file() is prototyped in both; * giounix.c and giowin32.c, so we stick its documentation here.; */; /**; * g_io_channel_new_file:; * @filename: A string containing the name of a file.; * @mode: One of ""r"", ""w"", ""a"", ""r+"", ""w+"", ""a+"". These have; * the same meaning as in fopen().; * @error: A location to return an error of type %G_IO_FILE_ERROR.; *; * Open a file @filename as a #GIOChannel using mode @mode. This; * channel will be closed when the last reference to it is dropped,; * so there is no need to call g_io_channel_close() (though doing; * so will not cause problems, as long as no attempt is made to; * access the channel after it is closed).; *; * Return value: A #GIOChannel on success, %NULL on failure.; **/; /**; * g_io_channel_close:; * @channel: A #GIOChannel; * ; * Close an IO channel. Any pending data to be written will be; * flushed, ignoring errors. The channel will not be freed until the; * last reference is dropped using g_io_channel_unref(). This; * function is deprecated: you should use g_io_channel_shutdown(); * instead.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:316,error,error,316,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,4,"['error', 'failure']","['error', 'errors', 'failure']"
Availability,/* The image has already been cleaned up; this is just used to; * set the error (because the original write succeeded).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:74,error,error,74,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['error'],['error']
Availability,"/* The input is an array of 16-bit components, these must be scaled to; * 8 bits each. For a 16-bit value V the required value (from the PNG; * specification) is:; *; * (V * 255) / 65535; *; * This reduces to round(V / 257), or floor((V + 128.5)/257); *; * Represent V as the two byte value vhi.vlo. Make a guess that the; * result is the top byte of V, vhi, then the correction to this value; * is:; *; * error = floor(((V-vhi.vhi) + 128.5) / 257); * = floor(((vlo-vhi) + 128.5) / 257); *; * This can be approximated using integer arithmetic (and a signed; * shift):; *; * error = (vlo-vhi+128) >> 8;; *; * The approximate differs from the exact answer only when (vlo-vhi) is; * 128; it then gives a correction of +1 when the exact correction is; * 0. This gives 128 errors. The exact answer (correct for all 16-bit; * input values) is:; *; * error = (vlo-vhi+128)*65535 >> 24;; *; * An alternative arithmetic calculation which also gives no errors is:; *; * (V * 255 + 32895) >> 16; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:406,error,error,406,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,5,['error'],"['error', 'errors']"
Availability,/* The loop is for the number of '1' bits in the mask and clearing; each mask bit as it is processed. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h:49,mask,mask,49,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h,2,['mask'],['mask']
Availability,"/* The oFFs chunk gives the offset in ""offset_unit_type"" units rightwards; * and downwards from the top-left corner of the display, page, or other; * application-specific co-ordinate space. See the PNG_OFFSET_ defines; * below for the unit types. Valid if (valid & PNG_INFO_oFFs) non-zero.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pnginfo.h:81,down,downwards,81,graf2d/asimage/src/libAfterImage/libpng/pnginfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pnginfo.h,1,['down'],['downwards']
Availability,"/* The old code would overflow at the end and this would cause the; * 'pow' function to return a result >1, resulting in an; * arithmetic error. This code follows the spec exactly; ig is; * the recovered input sample, it always has 8-16 bits.; *; * We want input * 65535/max, rounded, the arithmetic fits in 32; * bits (unsigned) so long as max <= 32767.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:138,error,error,138,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,2,"['error', 'recover']","['error', 'recovered']"
Availability,/* The only failure above if png_ptr != NULL is from an invalid ptime */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:12,failure,failure,12,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['failure'],['failure']
Availability,"/* The only success case is Z_STREAM_END, input_len must be 0; if not this; * is an internal error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:93,error,error,93,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['error'],['error']
Availability,"/* The only way fatal error is when two edges are found to intersect,; * but the user has not provided the callback necessary to handle; * generated intersection points.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c:22,error,error,22,graf3d/eve7/glu/sweep.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c,1,['error'],['error']
Availability,/* The order of the tests in the following line is important to; prevent a segmentation fault */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:88,fault,fault,88,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['fault'],['fault']
Availability,/* The order of these checks doesn't matter much; it just affects which; * possible error might be detected if multiple things go wrong at once.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:84,error,error,84,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['error'],['error']
Availability,"/* The palette is maximal, and no free slots available,; so use the close entry, then, dammit. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c:45,avail,available,45,graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c,1,['avail'],['available']
Availability,"/* The pixmap mask is just a bits pattern.; * Color 0 is used for background and 1 for foreground.; * We don't care about the colormap, we just need 0 and 1.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkpixmap-win32.c:14,mask,mask,14,graf2d/win32gdk/gdk/src/gdk/win32/gdkpixmap-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkpixmap-win32.c,1,['mask'],['mask']
Availability,"/* The png_set_<chunk> functions are for storing values in the png_info_struct.; * Similarly, the png_get_<chunk> calls are used to read values from the; * png_info_struct, either storing the parameters in the passed variables, or; * setting pointers into the png_info_struct where the data is stored. The; * png_get_<chunk> functions return a non-zero value if the data was available; * in info_ptr, or return zero and do not change any of the parameters if the; * data was not available.; *; * These functions should be used instead of directly accessing png_info; * to avoid problems with future changes in the size and internal layout of; * png_info_struct.; */; /* Returns ""flag"" if chunk data is valid in info_ptr. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:375,avail,available,375,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,['avail'],['available']
Availability,/* The pop-count of the mask gives the number of the bits from; source to process. This is also needed to shift bits from the; source into the correct position for the result. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h:24,mask,mask,24,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h,1,['mask'],['mask']
Availability,"/* The request sent by the client could not be understood by; 			 * the server, or it was incomplete or a timeout. Send an; 			 * error message and close the connection. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:130,error,error,130,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* The rest of the memory-specific init and write_main in an error protected; * environment. This case needs to use callbacks for the write operations; * since libpng has no built in support for writing to memory.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:61,error,error,61,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['error'],['error']
Availability,"/* The rest of these check to see if the valid field has the appropriate; * flag set, and if it does, writes the chunk.; *; * 1.6.0: COLORSPACE support controls the writing of these chunks too, and; * the chunks will be written if the WRITE routine is there and; * information * is available in the COLORSPACE. (See; * png_colorspace_sync_info in png.c for where the valid flags get set.); *; * Under certain circumstances the colorspace can be invalidated without; * syncing the info_struct 'valid' flags; this happens if libpng detects; * an error and calls png_error while the color space is being set, yet; * the application continues writing the PNG. So check the 'invalid'; * flag here too.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:282,avail,available,282,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,2,"['avail', 'error']","['available', 'error']"
Availability,/* The return code is from either deflateReset or deflateInit2; they have; * pretty much the same set of error codes.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:105,error,error,105,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['error'],['error']
Availability,"/* The same, but the chunk name is prepended to the error string. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:52,error,error,52,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['error'],['error']
Availability,"/* The signature matched, but the profile had been changed in some; * way. This probably indicates a data error or uninformed hacking.; * Fall through to ""no match"".; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:106,error,error,106,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,"/* The size changed on the second read, there can be no; * guarantee that anything is correct at this point.; * The 'msg' pointer has been set to ""unexpected end of; * LZ stream"", which is fine, but return an error code; * that the caller won't accept.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:209,error,error,209,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['error'],['error']
Availability,"/* The visual type.; * ""type"" is the type of visual this is (PseudoColor, TrueColor, etc).; * ""depth"" is the bit depth of this visual.; * ""colormap_size"" is the size of a colormap for this visual.; * ""bits_per_rgb"" is the number of significant bits per red, green and blue.; * The red, green and blue masks, shifts and precisions refer; * to value needed to calculate pixel values in TrueColor and DirectColor; * visuals. The ""mask"" is the significant bits within the pixel. The; * ""shift"" is the number of bits left we must shift a primary for it; * to be in position (according to the ""mask""). ""prec"" refers to how; * much precision the pixel value contains for a particular primary.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkvisual.h:301,mask,masks,301,graf2d/win32gdk/gdk/src/gdk/gdkvisual.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkvisual.h,3,['mask'],"['mask', 'masks']"
Availability,"/* The whole JPEG data is expected to reside in the supplied memory; * buffer, so any request for more data beyond the given buffer size; * is treated as an error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c:157,error,error,157,graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,1,['error'],['error']
Availability,"/* There are no ""black-listed"" or ""white-listed"" bytes:; * this stream either is empty or has tolerated (""gray-listed"") bytes only.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c:94,toler,tolerated,94,builtins/zlib/trees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c,2,['toler'],['tolerated']
Availability,/* There is a possibility of a partial copy at the end here; this; * slows the code down somewhat.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:84,down,down,84,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['down'],['down']
Availability,"/* There is no callback, and Lua is not responsible either. */; /* Reply with a 404 Not Found. We are still at a standard; 		 * HTTP request here, before the websocket handshake, so; 		 * we can still send standard HTTP error replies. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:220,error,error,220,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* These are internal errors: */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngmem.c:22,error,errors,22,graf2d/asimage/src/libAfterImage/libpng/pngmem.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngmem.c,1,['error'],['errors']
Availability,"/* These are the function types for the I/O functions and for the functions; * that allow the user to override the default I/O functions with his or her; * own. The png_error_ptr type should match that of user-supplied warning; * and error functions, while the png_rw_ptr type should match that of the; * user read/write data functions. Note that the 'write' function must not; * modify the buffer it is passed. The 'read' function, on the other hand, is; * expected to return the read data in the buffer.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:234,error,error,234,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['error'],['error']
Availability,/* These arrays save pixel expansion factors so that int_downsample need not; * recompute them each time. They are unused for other downsampling methods.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c:132,down,downsampling,132,graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,1,['down'],['downsampling']
Availability,/* These describe the color_type field in png_info. */; /* color type masks */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:70,mask,masks,70,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['mask'],['masks']
Availability,"/* These functions support 'formatted' warning messages with up to; * PNG_WARNING_PARAMETER_COUNT parameters. In the format string the parameter; * is introduced by @<number>, where 'number' starts at 1. This follows the; * standard established by X/Open for internationalizable error messages.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:279,error,error,279,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['error'],['error']
Availability,"/* These intrinsics are being made available for compatibility with; the IBM XL compiler. For documentation please see the ""z/OS XL; C/C++ Programming Guide"" publicly available on the web. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/htmxlintrin.h:35,avail,available,35,interpreter/llvm-project/clang/lib/Headers/htmxlintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/htmxlintrin.h,2,['avail'],['available']
Availability,"/* These profiles are known to have bad data that may cause; * problems if they are used, therefore attempt to; * discourage their use, skip the 'have_md5' warning below,; * which is made irrelevant by this error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:207,error,error,207,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,/* These should only be open still if we had an error. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:48,error,error,48,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,2,['error'],['error']
Availability,"/* These utilities are used internally to build an error message that relates; * to the current chunk. The chunk name comes from png_ptr->chunk_name,; * which is used to prefix the message. The message is limited in length; * to 63 bytes. The name characters are output as hex digits wrapped in []; * if the character is invalid.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:51,error,error,51,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['error'],['error']
Availability,"/* This API only exists if ANSI-C style error handling is used,; * otherwise it is necessary for png_default_error to be overridden.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:40,error,error,40,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['error'],['error']
Availability,"/* This callback is called only for *unknown* chunks. If; * PNG_HANDLE_AS_UNKNOWN_SUPPORTED is set then it is possible to set known; * chunks to be treated as unknown, however in this case the callback must do; * any processing required by the chunk (e.g. by calling the appropriate; * png_set_ APIs.); *; * There is no write support - on write, by default, all the chunks in the; * 'unknown' list are written in the specified position.; *; * The integer return from the callback function is interpreted thus:; *; * negative: An error occurred; png_chunk_error will be called.; * zero: The chunk was not handled, the chunk will be saved. A critical; * chunk will cause an error at this point unless it is to be saved.; * positive: The chunk was handled, libpng will ignore/discard it.; *; * See ""INTERACTION WITH USER CHUNK CALLBACKS"" below for important notes about; * how this behavior will change in libpng 1.7; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:529,error,error,529,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,['error'],['error']
Availability,/* This check is just done for the error reporting - the routine always; * returns true when the 'from' argument corresponds to sRGB (2).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:35,error,error,35,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,"/* This data comes from contrib/tools/checksum-icc run on downloads of; * all four ICC sRGB profiles from www.color.org.; */; /* adler32, crc32, MD5[4], intent, date, length, file-name */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:58,down,downloads,58,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['down'],['downloads']
Availability,"/* This does set the colorspace gAMA and cHRM values too, but doesn't set the; * flags to write them, if it returns false there was a problem and an error; * message has already been output (but the colorspace may still need to be; * synced to record the invalid flag).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:149,error,error,149,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['error'],['error']
Availability,/* This error code is unknown. This should not happen. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:8,error,error,8,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* This function allows the application to supply a new input function; * for libpng if standard C streams aren't being used.; *; * This function takes as its arguments:; *; * png_ptr - pointer to a png input data structure; *; * io_ptr - pointer to user supplied structure containing info about; * the input functions. May be NULL.; *; * read_data_fn - pointer to a new input function that takes as its; * arguments a pointer to a png_struct, a pointer to; * a location where input data can be stored, and a 32-bit; * unsigned int that is the number of bytes to be read.; * To exit and output any fatal error messages the new write; * function should call png_error(png_ptr, ""Error msg"").; * May be NULL, in which case libpng's default function will; * be used.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrio.c:604,error,error,604,graf2d/asimage/src/libAfterImage/libpng/pngrio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrio.c,2,"['Error', 'error']","['Error', 'error']"
Availability,"/* This function allows the application to supply new output functions for; * libpng if standard C streams aren't being used.; *; * This function takes as its arguments:; * png_ptr - pointer to a png output data structure; * io_ptr - pointer to user supplied structure containing info about; * the output functions. May be NULL.; * write_data_fn - pointer to a new output function that takes as its; * arguments a pointer to a png_struct, a pointer to; * data to be written, and a 32-bit unsigned int that is; * the number of bytes to be written. The new write; * function should call png_error(png_ptr, ""Error msg""); * to exit and output any fatal error messages. May be; * NULL, in which case libpng's default function will; * be used.; * flush_data_fn - pointer to a new flush function that takes as its; * arguments a pointer to a png_struct. After a call to; * the flush function, there should be no data in any buffers; * or pending transmission. If the output method doesn't do; * any buffering of output, a function prototype must still be; * supplied although it doesn't have to do anything. If; * PNG_WRITE_FLUSH_SUPPORTED is not defined at libpng compile; * time, output_flush_fn will be ignored, although it must be; * supplied for compatibility. May be NULL, in which case; * libpng's default function will be used, if; * PNG_WRITE_FLUSH_SUPPORTED is defined. This is not; * a good idea if io_ptr does not point to a standard; * *FILE structure.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwio.c:605,Error,Error,605,graf2d/asimage/src/libAfterImage/libpng/pngwio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwio.c,2,"['Error', 'error']","['Error', 'error']"
Availability,"/* This function is called whenever there is a non-fatal error. This function; * should not be changed. If there is a need to handle warnings differently,; * you should supply a replacement warning function and use; * png_set_error_fn() to replace the warning function at run-time.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:57,error,error,57,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['error'],['error']
Availability,"/* This function originally from Jean-Edouard Lachand-Robert, and; * available at www.codeguru.com. Simplified for our needs, now; * handles just one-bit deep bitmaps (in Window parlance, ie those; * that GDK calls bitmaps (and not pixmaps), with zero pixels being; * transparent.; */; /*; * BitmapToRegion : Create a region from the ""non-transparent"" pixels of; * a bitmap; * Author : Jean-Edouard Lachand-Robert; * (http://www.geocities.com/Paris/LeftBank/1160/resume.htm), June 1998.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkgc-win32.c:69,avail,available,69,graf2d/win32gdk/gdk/src/gdk/win32/gdkgc-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkgc-win32.c,1,['avail'],['available']
Availability,/* This function returns the jmp_buf built in to *png_ptr. It must be; * supplied with an appropriate 'longjmp' function to use on that jmp_buf; * unless the default error function is overridden in which case NULL is; * acceptable. The size of the jmp_buf is checked against the actual size; * allocated by the library - the call will return NULL on a mismatch; * indicating an ABI mismatch.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:166,error,error,166,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['error'],['error']
Availability,"/* This function will do the following:; - If MBB is an entry or exit block, set SR1 and SR2 to R0 and R12; respectively (defaults recommended by the ABI) and return true; - If MBB is not an entry block, initialize the register scavenger and look; for available registers.; - If the defaults (R0/R12) are available, return true; - If TwoUniqueRegsRequired is set to true, it looks for two unique; registers. Otherwise, look for a single available register.; - If the required registers are found, set SR1 and SR2 and return true.; - If the required registers are not found, set SR2 or both SR1 and SR2 to; PPC::NoRegister and return false. Note that if both SR1 and SR2 are valid parameters and TwoUniqueRegsRequired; is not set, this function will attempt to find two different registers, but; still return true if only one register is available (and set SR1 == SR2).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:252,avail,available,252,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,4,['avail'],['available']
Availability,"/* This is a 'mntr' (display) profile with a mediaWhitePointTag that does not; * match the D50 PCS illuminant in the header (it is in fact the D65 values,; * so the white point is recorded as the un-adapted value.) The profiles; * below only differ in one byte - the intent - and are basically the same as; * the previous profile except for the mediaWhitePointTag error and a missing; * chromaticAdaptationTag.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:364,error,error,364,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,"/* This is a bad internal error. The recovery assigns to the zstream msg; * pointer, which is not owned by the caller, but this is safe; it's only; * used on errors!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:26,error,error,26,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,3,"['error', 'recover']","['error', 'errors', 'recovery']"
Availability,/* This is actually an internal error. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:32,error,error,32,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['error'],['error']
Availability,"/* This is always an 8-bit sRGB value, using the 'green' channel; * for gray is much better than calculating the luminance here;; * we can get off-by-one errors in that calculation relative to; * the app expectations and that will show up in transparent; * pixels.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:154,error,errors,154,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['error'],['errors']
Availability,/* This is an IO error. Look at errno. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:17,error,error,17,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* This is an SSL specific error, e.g. SSL_ERROR_SSL */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:27,error,error,27,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* This is an error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:14,error,error,14,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['error'],['error']
Availability,/* This is an error condition. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:14,error,error,14,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['error'],['error']
Availability,/* This is an error even in the 'check' case because the code just; * consumed a non-IDAT header.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:14,error,error,14,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['error'],['error']
Availability,"/* This is an error, but break and return an error; * at the end, because returning out of a loop makes; * it harder for the compiler to optimize.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/entropy_common.c:14,error,error,14,builtins/zstd/common/entropy_common.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/entropy_common.c,2,['error'],['error']
Availability,"/* This is an internal error in libpng: somehow we have been left; * with a stack allocated jmp_buf when the application regained; * control. It's always possible to fix this up, but for the moment; * this is a png_error because that makes it easy to detect.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:23,error,error,23,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['error'],['error']
Availability,/* This is an internal error; 'next' must have been NULL! */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:23,error,error,23,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['error'],['error']
Availability,/* This is available for the caller to store in 'state' if required. Do not; * call the parser after setting it (the parser sometimes clears it.); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:11,avail,available,11,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['avail'],['available']
Availability,"/* This is benign because the non-benign error happened before, when an; * IDAT was encountered in a color-mapped image with no PLTE.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:41,error,error,41,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['error'],['error']
Availability,/* This is only for preventing 'Bus error' */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:36,error,error,36,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['error'],['error']
Availability,"/* This is recoverable, but make it unconditionally an app_error on write to; * avoid writing invalid ICC profiles into PNG files (i.e., we handle them; * on read, with a warning, but on write unless the app turns off; * application errors the PNG won't be written.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:11,recover,recoverable,11,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,2,"['error', 'recover']","['errors', 'recoverable']"
Availability,/* This is redundant if we can be sure that the info_ptr values were all; * assigned in png_set_IHDR(). We do the check anyhow in case an; * application has ignored our advice not to mess with the members; * of info_ptr directly.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngget.c:11,redundant,redundant,11,graf2d/asimage/src/libAfterImage/libpng/pngget.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngget.c,1,['redundant'],['redundant']
Availability,/* This is set by the Microsoft Visual Studio IDE in projects that; * build a DLL. It can't easily be removed from those projects (it; * isn't visible in the Visual Studio UI) so it is a fairly reliable; * indication that PNG_IMPEXP needs to be set to the DLL export; * attributes.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:194,reliab,reliable,194,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['reliab'],['reliable']
Availability,"/* This is similar to png_text_compress, above, except that it does not require; * all of the data at once and, instead of buffering the compressed result,; * writes it as IDAT chunks. Unlike png_text_compress it *can* png_error out; * because it calls the write interface. As a result it does its own error; * reporting and does not return an error code. In the event of error it will; * just call png_error. The input data length may exceed 32-bits. The 'flush'; * parameter is exactly the same as that to deflate, with the following; * meanings:; *; * Z_NO_FLUSH: normal incremental output of compressed data; * Z_SYNC_FLUSH: do a SYNC_FLUSH, used by png_write_flush; * Z_FINISH: this is the end of the input, do a Z_FINISH and clean up; *; * The routine manages the acquire and release of the png_ptr->zstream by; * checking and (at the end) clearing png_ptr->zowner; it does some sanity; * checks on the 'mode' flags while doing this.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:302,error,error,302,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,3,['error'],['error']
Availability,"/* This is the default error handling function. Note that replacements for; * this function MUST NOT RETURN, or the program will likely crash. This; * function is used by default, or if the program supplies NULL for the; * error function pointer in png_set_error_fn().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:23,error,error,23,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,4,['error'],['error']
Availability,"/* This is the error case, however it is benign - the previous row; * is not available so the filter can't be used. Just warn here.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:15,error,error,15,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,2,"['avail', 'error']","['available', 'error']"
Availability,/* This is the first missing function.; 					 * Create a new error message. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:61,error,error,61,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* This is the function that gets called for unknown chunks. The 'keep'; * argument is either non-zero for a known chunk that has been set to be; * handled as unknown or zero for an unknown chunk. By default the function; * just skips the chunk or errors out if it is critical.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:248,error,errors,248,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['error'],['errors']
Availability,/* This is to give the caller an easier error detection in the NULL; * case and guard against uninitialized variable problems:; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:40,error,error,40,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['error'],['error']
Availability,/* This is yet anothermissing function.; 					 * Append existing error message. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:65,error,error,65,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* This looks real messy, but the compiler will reduce; * it down to a reasonable formula. For example, with; * 5 bits per color, we get:; * p = (((r >> 3) & 0x1f) << 10) |; * (((g >> 3) & 0x1f) << 5) |; * ((b >> 3) & 0x1f);; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:61,down,down,61,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['down'],['down']
Availability,/* This need not be an internal error - if the app calls; * png_set_unknown_chunks on a read pointer it must get the location right.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c:32,error,error,32,graf2d/asimage/src/libAfterImage/libpng/pngset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c,1,['error'],['error']
Availability,"/* This pair of functions encapsulates the operation of (a) compressing a; * text string, and (b) issuing it later as a series of chunk data writes.; * The compression_state structure is shared context for these functions; * set up by the caller to allow access to the relevant local variables.; *; * compression_buffer (new in 1.6.0) is just a linked list of zbuffer_size; * temporary buffers. From 1.6.0 it is retained in png_struct so that it will; * be correctly freed in the event of a write error (previous implementations; * just leaked memory.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:497,error,error,497,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['error'],['error']
Availability,"/* This part of the routine is only executed if, due to a difficult; integrand, subdivision increased the error estimate. In the normal; case the insert procedure should start after the nrmax-th largest; error estimate. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:106,error,error,106,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,2,['error'],['error']
Availability,"/* This really is very benign, but it's still an error because; * the extra space may otherwise be used as a Trojan Horse.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:49,error,error,49,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['error'],['error']
Availability,/* This reliably terminates the buffer */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:8,reliab,reliably,8,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['reliab'],['reliably']
Availability,"/* This stuff is so that a failure to free the error control structure; * does not leave libpng in a state with no valid error handling: the; * free always succeeds, if there is an error it gets ignored.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:27,failure,failure,27,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,4,"['error', 'failure']","['error', 'failure']"
Availability,"/* This would produce an invalid PNG file if it worked, but it doesn't and; * deflate will fault it, so it is harmless to just warn here.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:91,fault,fault,91,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['fault'],['fault']
Availability,"/* Those errors indicate the file is missing or not executable; * by us, in which case we want to just try the next path; * directory.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c:9,error,errors,9,graf2d/win32gdk/gdk/src/glib/gspawn.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c,1,['error'],['errors']
Availability,"/* Timeout occurred, but no data available. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:33,avail,available,33,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['avail'],['available']
Availability,"/* To find the length of the output it is necessary to first compress the; * input. The result is buffered rather than using the two-pass algorithm; * that is used on the inflate side; deflate is assumed to be slower and a; * PNG writer is assumed to have more memory available than a PNG reader.; *; * IMPLEMENTATION NOTE: the zlib API deflateBound() can be used to find an; * upper limit on the output size, but it is always bigger than the input; * size so it is likely to be more efficient to use this linked-list; * approach.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:268,avail,available,268,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['avail'],['available']
Availability,"/* To support symbol prefixing it is necessary to know *before* including png.h; * whether the fixed point (and maybe other) APIs are exported, because if they; * are not internal definitions may be required. This is handled below just; * before png.h is included, but load the configuration now if it is available.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:305,avail,available,305,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['avail'],['available']
Availability,/* Transaction failure diagnostics */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/htmxlintrin.h:15,failure,failure,15,interpreter/llvm-project/clang/lib/Headers/htmxlintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/htmxlintrin.h,1,['failure'],['failure']
Availability,"/* Transfer-Encoding is chunked:; 	 * 0 = not chunked,; 	 * 1 = chunked, not yet, or some data read,; 	 * 2 = chunked, has error,; 	 * 3 = chunked, all data read except trailer,; 	 * 4 = chunked, all data read; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:123,error,error,123,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* Transform masks for the high-level interface */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:13,mask,masks,13,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['mask'],['masks']
Availability,"/* Translate 'ret' into an appropriate error string, priority is given to the; * one in zstream if set. This always returns a string, even in cases like; * Z_OK or Z_STREAM_END where the error code is a success code.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:39,error,error,39,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,2,['error'],['error']
Availability,/* Translate a Win32 error code (as returned by GetLastError()) into; * the corresponding message. The returned string should be deallocated; * with g_free().; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gwin32.h:21,error,error,21,graf2d/win32gdk/gdk/src/glib/gwin32.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gwin32.h,1,['error'],['error']
Availability,/* Transposing pixels within a block just requires transposing the; * DCT coefficients.; * Partial iMCUs at the edges require no special treatment; we simply; * process all the available DCT blocks for every component.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:177,avail,available,177,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,1,['avail'],['available']
Availability,/* Treat empty input as fatal error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c:30,error,error,30,graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,1,['error'],['error']
Availability,/* Treat empty input file as fatal error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c:35,error,error,35,graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,1,['error'],['error']
Availability,/* Treat png_benign_error() as errors on read */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:31,error,errors,31,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['error'],['errors']
Availability,/* Treat them as errors on write */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:17,error,errors,17,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['error'],['errors']
Availability,"/* Try to read until it succeeds, fails, times out, or the server; 	 * shuts down. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:77,down,down,77,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['down'],['down']
Availability,"/* Try to write the MCU. In event of a suspension failure, we will; * re-DCT the MCU on restart (a bit inefficient, could be fixed...); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jccoefct.c:50,failure,failure,50,graf2d/asimage/src/libAfterImage/libjpeg/jccoefct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jccoefct.c,1,['failure'],['failure']
Availability,/* Turn down global display level to clean up display at level 2 and below */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c:8,down,down,8,builtins/zstd/dictBuilder/cover.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c,2,['down'],['down']
Availability,"/* Turn on default checking for mmalloc/mrealloc/mfree, for the heap specified; by MD. If FUNC is non-NULL, it is a pointer to the function to call; to abort whenever memory corruption is detected. By default, this is the; standard library function abort(). Note that we disallow installation of initial checking hooks if mmalloc; has been called at any time for this particular heap, since if any region; that is allocated prior to installation of the hooks is subsequently; reallocated or freed after installation of the hooks, it is guaranteed; to trigger a memory corruption error. We do this by checking the state; of the MMALLOC_INITIALIZED flag. However, we can call this function at any time after the initial call,; to update the function pointers to the checking routines and to the; user defined corruption handler routine, as long as these function pointers; have been previously extablished by the initial call. Note that we; do this automatically when remapping an previously used heap, to ensure; that the hooks get updated to the correct values, although the corruption; handler pointer gets set back to the default. The application can then; call mmcheck to use a different corruption handler if desired. Returns non-zero if checking is successfully enabled, zero otherwise. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:579,error,error,579,core/clib/src/mmcheck.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c,1,['error'],['error']
Availability,/* Turn on failure to initialize correctly for all transforms. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:11,failure,failure,11,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['failure'],['failure']
Availability,"/* Turn on quantizing, and reduce the palette to the number of colors; * available.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:73,avail,available,73,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['avail'],['available']
Availability,/* Two macros which return a boolean (0 or 1) saying whether the given row; * or column is in a particular pass. These use a common utility macro that; * returns a mask for a given pass - the offset 'off' selects the row or; * column version. The mask has the appropriate bit set for each column in; * the tile.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:164,mask,mask,164,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,['mask'],['mask']
Availability,"/* Types of windows.; * Root: There is only 1 root window and it is initialized; *	 at startup. Creating a window of type GDK_WINDOW_ROOT; *	 is an error.; * Toplevel: Windows which interact with the window manager.; * Child: Windows which are children of some other type of window.; *	 (Any other type of window). Most windows are child windows.; * Dialog: A special kind of toplevel window which interacts with; *	 the window manager slightly differently than a regular; *	 toplevel window. Dialog windows should be used for any; *	 transient window.; * Pixmap: Pixmaps are really just another kind of window which; *	 doesn't actually appear on the screen. It can't have; *	 children, either and is really just a convenience so; *	 that the drawing functions can work on both windows; *	 and pixmaps transparently. (ie. You shouldn't pass a; *	 pixmap to any procedure which accepts a window with the; *	 exception of the drawing functions).; * Foreign: A window that actually belongs to another application; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkdrawable.h:148,error,error,148,graf2d/win32gdk/gdk/src/gdk/gdkdrawable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkdrawable.h,1,['error'],['error']
Availability,/* Un-initialize this library.; * Return value:; * 0: error; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:54,error,error,54,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['error'],['error']
Availability,"/* Unix might return different error codes indicating to try again.; * For Linux EAGAIN==EWOULDBLOCK, maybe EAGAIN!=EWOULDBLOCK is history from; * decades ago, but better check both and let the compile optimize it. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:31,error,error,31,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* Unknown request error code */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:19,error,error,19,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* Unknown server error code */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:18,error,error,18,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* Update progression status, and verify that scan order is legal.; * Note that inter-scan inconsistencies are treated as warnings; * not fatal errors ... not clear if this is right way to behave.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c:144,error,errors,144,graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,2,['error'],['errors']
Availability,"/* Update the ""free"" memory available in that area */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.c:28,avail,available,28,graf2d/win32gdk/gdk/src/glib/gmem.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.c,1,['avail'],['available']
Availability,/* Use Z_SYNC_FLUSH when there is no more chunk data to ensure that all; * the available output is produced; this allows reading of truncated; * streams.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:79,avail,available,79,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['avail'],['available']
Availability,/* Use default level since no compression level information is available */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/zdict.c:63,avail,available,63,builtins/zstd/dictBuilder/zdict.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/zdict.c,1,['avail'],['available']
Availability,"/* Use read() to load a buffer -- return -1 on error, otherwise 0. Read from; state->fd, and update state->eof, state->err, and state->msg as appropriate.; This function needs to loop on read(), since read() is not guaranteed to; read the number of bytes requested, depending on the type of descriptor. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c:47,error,error,47,builtins/zlib/gzread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c,1,['error'],['error']
Availability,"/* Use the internal API that does not (or at least should not) error out, so; * that this call always returns ok. The application typically sets up the; * error handling *after* creating the info_struct because this is the way it; * has always been done in 'example.c'.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:63,error,error,63,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,2,['error'],['error']
Availability,"/* Use the native ones, if available; they might be implemented in assembly */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gstrfuncs.c:27,avail,available,27,graf2d/win32gdk/gdk/src/glib/gstrfuncs.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gstrfuncs.c,1,['avail'],['available']
Availability,/* Utility macros to construct all the masks for a depth/swap; * combination. The 's' parameter says whether the format is PNG; * (big endian bytes) or not. Only the three odd-numbered passes are; * required for the display/block algorithm.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:39,mask,masks,39,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['mask'],['masks']
Availability,/* Utility to log an error. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:21,error,error,21,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,/* Utility to log an error; this also cleans up the png_image; the function; * always returns 0 (false).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:21,error,error,21,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['error'],['error']
Availability,"/* Utility to safely execute a piece of libpng code catching and logging any; * errors that might occur. Returns true on success, false on failure (either; * of the function or as a result of a png_error.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:80,error,errors,80,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,2,"['error', 'failure']","['errors', 'failure']"
Availability,"/* Utility to save typing/errors, the argument must be a name */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:26,error,errors,26,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['error'],['errors']
Availability,"/* Values for png_set_crc_action() say how to handle CRC errors in; * ancillary and critical chunks, and whether to use the data contained; * therein. Note that it is impossible to ""discard"" data in a critical; * chunk. For versions prior to 0.90, the action was always error/quit,; * whereas in version 0.90 and later, the action for CRC errors in ancillary; * chunks is warn/discard. These values should NOT be changed.; *; * value action:critical action:ancillary; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:57,error,errors,57,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,3,['error'],"['error', 'errors']"
Availability,/* Variable alpha and color: Shader Object for the colored; triangle(s) and an extra extended Graphics State; + Xobject + Shader object for the alpha mask */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:150,mask,mask,150,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['mask'],['mask']
Availability,/* Variable alpha and const color: Simple PDF draw orders; and an extra extended Graphics State + Xobject + Shader; object for the alpha mask */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:137,mask,mask,137,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['mask'],['mask']
Availability,"/* Vector Blend */; /// Merges 64-bit double-precision data values stored in either of the; /// two 256-bit vectors of [4 x double], as specified by the immediate; /// integer operand.; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// __m256d _mm256_blend_pd(__m256d V1, __m256d V2, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VBLENDPD </c> instruction.; ///; /// \param V1; /// A 256-bit vector of [4 x double].; /// \param V2; /// A 256-bit vector of [4 x double].; /// \param M; /// An immediate integer operand, with mask bits [3:0] specifying how the; /// values are to be copied. The position of the mask bit corresponds to the; /// index of a copied value. When a mask bit is 0, the corresponding 64-bit; /// element in operand \a V1 is copied to the same position in the; /// destination. When a mask bit is 1, the corresponding 64-bit element in; /// operand \a V2 is copied to the same position in the destination.; /// \returns A 256-bit vector of [4 x double] containing the copied values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:560,mask,mask,560,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,4,['mask'],['mask']
Availability,"/* Vector extract sign mask */; /// Extracts the sign bits of double-precision floating point elements; /// in a 256-bit vector of [4 x double] and writes them to the lower order; /// bits of the return value.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VMOVMSKPD </c> instruction.; ///; /// \param __a; /// A 256-bit vector of [4 x double] containing the double-precision; /// floating point values with sign bits to be extracted.; /// \returns The sign bits from the operand, written to bits [3:0].",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:23,mask,mask,23,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['mask'],['mask']
Availability,"/* Vector shuffle */; /// Selects 8 float values from the 256-bit operands of [8 x float], as; /// specified by the immediate value operand.; ///; /// The four selected elements in each operand are copied to the destination; /// according to the bits specified in the immediate operand. The selected; /// elements from the first 256-bit operand are copied to bits [63:0] and; /// bits [191:128] of the destination, and the selected elements from the; /// second 256-bit operand are copied to bits [127:64] and bits [255:192] of; /// the destination. For example, if bits [7:0] of the immediate operand; /// contain a value of 0xFF, the 256-bit destination vector would contain the; /// following values: b[7], b[7], a[7], a[7], b[3], b[3], a[3], a[3].; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// __m256 _mm256_shuffle_ps(__m256 a, __m256 b, const int mask);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VSHUFPS </c> instruction.; ///; /// \param a; /// A 256-bit vector of [8 x float]. The four selected elements in this; /// operand are copied to bits [63:0] and bits [191:128] in the destination,; /// according to the bits specified in the immediate operand.; /// \param b; /// A 256-bit vector of [8 x float]. The four selected elements in this; /// operand are copied to bits [127:64] and bits [255:192] in the; /// destination, according to the bits specified in the immediate operand.; /// \param mask; /// An immediate value containing an 8-bit value specifying which elements to; /// copy from \a a and \a b \n.; /// Bits [3:0] specify the values copied from operand \a a. \n; /// Bits [7:4] specify the values copied from operand \a b. \n; /// The destinations within the 256-bit destination are assigned values as; /// follows, according to the bit value assignments described below: \n; /// Bits [1:0] are used to assign values to bits [31:0] and [159:128] in the; /// destination. \n; /// Bits [3:2] are used to assign values to bits [63:32] and [191:160] in",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:864,mask,mask,864,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['mask'],['mask']
Availability,"/* Very unusual -- the new upper or lower edge would pass on the; * wrong side of the sweep event, or through it. This can happen; * due to very small numerical errors in the intersection calculation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c:161,error,errors,161,graf3d/eve7/glu/sweep.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c,1,['error'],['errors']
Availability,"/* WARNINGS */; /* This function is called when the application wants to use another method; * of handling errors and warnings. Note that the error function MUST NOT; * return to the calling routine or serious problems will occur. The return; * method used in the default routine calls longjmp(png_ptr->jmp_buf_ptr, 1); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:107,error,errors,107,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,2,['error'],"['error', 'errors']"
Availability,"/* WARNINGS */; /* This function is called whenever there is a fatal error. This function; * should not be changed. If there is a need to handle errors differently,; * you should supply a replacement error function and use png_set_error_fn(); * to replace the error function at run-time.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:69,error,error,69,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,4,['error'],"['error', 'errors']"
Availability,"/* WRITE */; /* These next functions are called for input/output, memory, and error; * handling. They are in the file pngrio.c, pngwio.c, and pngerror.c,; * and call standard C I/O routines such as fread(), fwrite(), and; * fprintf(). These functions can be made to use other I/O routines; * at run time for those applications that need to handle I/O in a; * different manner by calling png_set_???_fn(). See libpng-manual.txt for; * more information.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:78,error,error,78,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['error'],['error']
Availability,"/* Wait for a response from the server; Parameters:; conn: connection; ebuf, ebuf_len: error message placeholder.; timeout: time to wait for a response in milliseconds (if < 0 then wait; forever). Return:; On success, >= 0; On error/timeout, < 0; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:87,error,error,87,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,['error'],['error']
Availability,"/* Wait for child to exit, even if we have; * an error pending.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c:49,error,error,49,graf2d/win32gdk/gdk/src/glib/gspawn.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c,1,['error'],['error']
Availability,"/* Warn that this being done; this isn't even an error since; * the profile is perfectly valid, but it would be nice if; * people used the up-to-date ones.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:49,error,error,49,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,/* We already know there is no more data buffered in conn->buf; 			 * but there is more available in the SSL layer. So don't poll; 			 * conn->client.sock yet. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:88,avail,available,88,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['avail'],['available']
Availability,/* We also need to decode mask if we have one :*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.c:26,mask,mask,26,graf2d/asimage/src/libAfterImage/imencdec.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.c,2,['mask'],['mask']
Availability,"/* We can ignore the return value from jpeg_read_header since; 	 * (a) suspension is not possible with the stdio data source, and; 	 * (b) we passed TRUE to reject a tables-only JPEG file as an error.; 	 * See libjpeg.doc for more info.; 	 */; /* Step 4: set parameters for decompression */; /* Adjust default decompression parameters */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c:194,error,error,194,graf2d/asimage/src/libAfterImage/import.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c,1,['error'],['error']
Availability,"/* We check that dictionaries have offset codes available for the first; * block. After the first block, the offcode table might not have large; * enough codes to represent the offsets in the data.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:48,avail,available,48,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['avail'],['available']
Availability,"/* We could a use a for loop here, but that combined with; -funroll-loops can expand to a lot of code. The while; loop avoids unrolling and the compiler commons the xor; from clearing the mask bit with the (m != 0) test. The; result is a more compact loop setup and body. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h:188,mask,mask,188,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h,1,['mask'],['mask']
Availability,"/* We count 4, but store 3; so we can give an error; * if there are 4.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.c:46,error,error,46,graf2d/win32gdk/gdk/src/glib/gdate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.c,1,['error'],['error']
Availability,/* We don't use a uint32x4_t pointer because it causes bus errors on ARMv7. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:59,error,errors,59,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['error'],['errors']
Availability,"/* We don't want to emit our first block as a RLE even if it qualifies because; * doing so will cause the decoder (cli only) to throw a ""should consume all input error.""; * This is only an issue for zstd <= v1.4.3; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:162,error,error,162,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,3,['error'],['error']
Availability,/* We have no way to indicate any errors form the actual; * read() or recv() call in the reader thread. Should we have?; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c:34,error,errors,34,graf2d/win32gdk/gdk/src/glib/giowin32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c,1,['error'],['errors']
Availability,"/* We must check the end points to ensure they are reasonable - in the past; * color management systems have crashed as a result of getting bogus; * colorant values, while this isn't the fault of libpng it is the; * responsibility of libpng because PNG carries the bomb and libpng is in a; * position to protect against it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:187,fault,fault,187,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['fault'],['fault']
Availability,/* We must keep the event mask here to filter them ourselves */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkprivate-win32.h:26,mask,mask,26,graf2d/win32gdk/gdk/src/gdk/win32/gdkprivate-win32.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkprivate-win32.h,1,['mask'],['mask']
Availability,"/* We specifically ignore loop conditions, because they're typically; not error checks. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocOverflowSecurityChecker.cpp:74,error,error,74,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocOverflowSecurityChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocOverflowSecurityChecker.cpp,1,['error'],['error']
Availability,"/* We use our private extension JPEG error handler.; 	 * Note that this struct must live as long as the main JPEG parameter; 	 * struct, to avoid dangling-pointer problems.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c:37,error,error,37,graf2d/asimage/src/libAfterImage/import.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c,1,['error'],['error']
Availability,/* We want Y growing downward */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c:21,down,downward,21,graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,2,['down'],['downward']
Availability,/* We want at least as many bits as are available. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp:40,avail,available,40,interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,1,['avail'],['available']
Availability,"/* We've either hit the input parsing restriction or the output parsing restriction.; * In the normal scenario, decoding a full block, it must be the last sequence,; * otherwise it's an error (invalid input or dimensions).; * In partialDecoding scenario, it's necessary to ensure there is no buffer overflow.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:186,error,error,186,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['error'],['error']
Availability,"/* When applicable, dictionary's ID is written into frame header (default:1) */; /* multi-threading parameters */; /* These parameters are only active if multi-threading is enabled (compiled with build macro ZSTD_MULTITHREAD).; * Otherwise, trying to set any other value than default (0) will be a no-op and return an error.; * In a situation where it's unknown if the linked library supports multi-threading or not,; * setting ZSTD_c_nbWorkers to any value >= 1 and consulting the return value provides a quick way to check this property.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:318,error,error,318,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/* Whether to report invalid palette index; added at libng-1.5.10.; * It is possible for an indexed (color-type==3) PNG file to contain; * pixels with invalid (out-of-range) indexes if the PLTE chunk has; * fewer entries than the image's bit-depth would allow. We recover; * from this gracefully by filling any incomplete palette with zeros; * (opaque black). By default, when this occurs libpng will issue; * a benign error. This API can be used to override that behavior.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c:264,recover,recover,264,graf2d/asimage/src/libAfterImage/libpng/pngset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c,2,"['error', 'recover']","['error', 'recover']"
Availability,"/* Who on earth came to the conclusion, using __DATE__ should rise; * an ""expansion of date or time macro is not reproducible""; * warning. That's exactly what was intended by using this macro.; * Just disable this nonsense warning. */; /* And disabling them does not work either:; * #pragma clang diagnostic ignored ""-Wno-error=date-time""; * #pragma clang diagnostic ignored ""-Wdate-time""; * So we just have to disable ALL warnings for some lines; * of code.; * This seems to be a known GCC bug, not resolved since 2012:; * https://gcc.gnu.org/bugzilla/show_bug.cgi?id=53431; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:322,error,error,322,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* Window attribute mask values.; * GDK_WA_TITLE: The ""title"" field is valid.; * GDK_WA_X: The ""x"" field is valid.; * GDK_WA_Y: The ""y"" field is valid.; * GDK_WA_CURSOR: The ""cursor"" field is valid.; * GDK_WA_COLORMAP: The ""colormap"" field is valid.; * GDK_WA_VISUAL: The ""visual"" field is valid.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkwindow.h:20,mask,mask,20,graf2d/win32gdk/gdk/src/gdk/gdkwindow.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkwindow.h,1,['mask'],['mask']
Availability,"/* Windows happily opens files with some garbage at the end of file name.; 	 * For example, fopen(""a.cgi "", ""r"") on Windows successfully opens; 	 * ""a.cgi"", despite one would expect an error back. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:185,error,error,185,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* With concatenated compressed files that can have embedded; * crc trailers, z_eof is no longer the only/best indicator of EOF; * on a gz_stream. Handle end-of-stream error explicitly here.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:168,error,error,168,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['error'],['error']
Availability,/* Write filter_method 64 (intrapixel differencing) only if; * 1. Libpng was compiled with PNG_MNG_FEATURES_SUPPORTED and; * 2. Libpng did not write a PNG signature (this filter_method is only; * used in PNG datastreams that are embedded in MNG datastreams) and; * 3. The application called png_permit_mng_features with a mask that; * included PNG_FLAG_MNG_FILTER_64 and; * 4. The filter_method is 64 and; * 5. The color_type is RGB or RGBA; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:322,mask,mask,322,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,2,['mask'],['mask']
Availability,"/* Write the image to the given memory buffer. The function both writes the; * whole PNG data stream to *memory and updates *memory_bytes with the count; * of bytes written.; *; * 'memory' may be NULL. In this case *memory_bytes is not read however on; * success the number of bytes which would have been written will still be; * stored in *memory_bytes. On failure *memory_bytes will contain 0.; *; * If 'memory' is not NULL it must point to memory[*memory_bytes] of; * writeable memory.; *; * If the function returns success memory[*memory_bytes] (if 'memory' is not; * NULL) contains the written PNG data. *memory_bytes will always be less; * than or equal to the original value.; *; * If the function returns false and *memory_bytes was not changed an error; * occurred during write. If *memory_bytes was changed, or is not 0 if; * 'memory' was NULL, the write would have succeeded but for the memory; * buffer being too small. *memory_bytes contains the required number of; * bytes and will be bigger that the original value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:358,failure,failure,358,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,"['error', 'failure']","['error', 'failure']"
Availability,/* XImage of depth 1 that could be; 									 * used to store mask of the image */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h:62,mask,mask,62,graf2d/asimage/src/libAfterImage/asimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h,1,['mask'],['mask']
Availability,/* XOR mask is initialized to zero */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcursor-win32.c:7,mask,mask,7,graf2d/win32gdk/gdk/src/gdk/win32/gdkcursor-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcursor-win32.c,1,['mask'],['mask']
Availability,/* XXX: 0 byte read an error ?? */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c:23,error,error,23,graf2d/win32gdk/gdk/src/glib/giowin32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c,2,['error'],['error']
Availability,"/* XXX: the following comment comes directly from; * XCC.c. I don't know if it is relevant for; * gdk_color_alloc() as it is for XAllocColor(); * - Federico; */; /*; * I can't figure this out entirely, but it *is* possible; * that XAllocColor succeeds, even if the number of; * allocations we've made exceeds the number of available; * colors in the current colormap. And therefore it; * might be necessary for us to resize the CLUT.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c:323,avail,available,323,graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c,1,['avail'],['available']
Availability,/* Y grows downward */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c:11,down,downward,11,graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,1,['down'],['downward']
Availability,/* Z MASK: the string is valid and a non-zero value. */; /* PNG_FP_SAW_DIGIT: the string is valid. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:5,MASK,MASK,5,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['MASK'],['MASK']
Availability,"/* ZSTDMT_resize() :; * @return : error code if fails, 0 on success */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:34,error,error,34,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['error'],['error']
Availability,"/* ZSTD_c_stableInBuffer; * Experimental parameter.; * Default is 0 == disabled. Set to 1 to enable.; *; * Tells the compressor that the ZSTD_inBuffer will ALWAYS be the same; * between calls, except for the modifications that zstd makes to pos (the; * caller must not modify pos). This is checked by the compressor, and; * compression will fail if it ever changes. This means the only flush; * mode that makes sense is ZSTD_e_end, so zstd will error if ZSTD_e_end; * is not used. The data in the ZSTD_inBuffer in the range [src, src + pos); * MUST not be modified during compression or you will get data corruption.; *; * When this flag is enabled zstd won't allocate an input window buffer,; * because the user guarantees it can reference the ZSTD_inBuffer until; * the frame is complete. But, it will still allocate an output buffer; * large enough to fit a block (see ZSTD_c_stableOutBuffer). This will also; * avoid the memcpy() from the input buffer to the input window buffer.; *; * NOTE: ZSTD_compressStream2() will error if ZSTD_e_end is not used.; * That means this flag cannot be used with ZSTD_compressStream().; *; * NOTE: So long as the ZSTD_inBuffer always points to valid memory, using; * this flag is ALWAYS memory safe, and will never access out-of-bounds; * memory. However, compression WILL fail if you violate the preconditions.; *; * WARNING: The data in the ZSTD_inBuffer in the range [dst, dst + pos) MUST; * not be modified during compression or you will get data corruption. This; * is because zstd needs to reference data in the ZSTD_inBuffer to find; * matches. Normally zstd maintains its own window buffer for this purpose,; * but passing this flag tells zstd to use the user provided buffer.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:445,error,error,445,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,2,['error'],['error']
Availability,"/* ZSTD_c_stableOutBuffer; * Experimental parameter.; * Default is 0 == disabled. Set to 1 to enable.; *; * Tells he compressor that the ZSTD_outBuffer will not be resized between; * calls. Specifically: (out.size - out.pos) will never grow. This gives the; * compressor the freedom to say: If the compressed data doesn't fit in the; * output buffer then return ZSTD_error_dstSizeTooSmall. This allows us to; * always decompress directly into the output buffer, instead of decompressing; * into an internal buffer and copying to the output buffer.; *; * When this flag is enabled zstd won't allocate an output buffer, because; * it can write directly to the ZSTD_outBuffer. It will still allocate the; * input window buffer (see ZSTD_c_stableInBuffer).; *; * Zstd will check that (out.size - out.pos) never grows and return an error; * if it does. While not strictly necessary, this should prevent surprises.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:827,error,error,827,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/* ZSTD_c_validateSequences; * Default is 0 == disabled. Set to 1 to enable sequence validation.; *; * For use with sequence compression API: ZSTD_compressSequences().; * Designates whether or not we validate sequences provided to ZSTD_compressSequences(); * during function execution.; *; * Without validation, providing a sequence that does not conform to the zstd spec will cause; * undefined behavior, and may produce a corrupted block.; *; * With validation enabled, a if sequence is invalid (see doc/zstd_compression_format.md for; * specifics regarding offset/matchlength requirements) then the function will bail out and; * return an error.; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:642,error,error,642,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/* ZSTD_initStats_ultra():; * make a first compression pass, just to seed stats with more accurate starting values.; * only works on first block, with no dictionary and no ldm.; * this function cannot error, hence its contract must be respected.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c:201,error,error,201,builtins/zstd/compress/zstd_opt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c,1,['error'],['error']
Availability,"/* ZSTD_rescaleFreqs() :; * if first block (detected by optPtr->litLengthSum == 0) : init statistics; * take hints from dictionary if there is one; * or init from zero, using src for literals stats, or flat 1 for match symbols; * otherwise downscale existing stats, to be used as seed for next block.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c:240,down,downscale,240,builtins/zstd/compress/zstd_opt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c,1,['down'],['downscale']
Availability,/* ZSTD_writeLastEmptyBlock() :; * output an empty Block with end-of-frame mark to complete a frame; * @return : size of data written into `dst` (== ZSTD_blockHeaderSize (defined in zstd_internal.h)); * or an error code if `dstCapacity` is too small (<ZSTD_blockHeaderSize); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:209,error,error,209,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['error'],['error']
Availability,/* a) Graphics States for shader alpha masks*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:39,mask,masks,39,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['mask'],['masks']
Availability,/* accumulated errors */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:15,error,errors,15,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,2,['error'],['errors']
Availability,/* add mask */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:7,mask,mask,7,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['mask'],['mask']
Availability,/* advance errorptr to current column */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:11,error,errorptr,11,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,2,['error'],['errorptr']
Availability,"/* all colors available, all done */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c:14,avail,available,14,graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c,1,['avail'],['available']
Availability,"/* all done, no errors */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzwrite.c:16,error,errors,16,builtins/zlib/gzwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzwrite.c,1,['error'],['errors']
Availability,/* allocset did set error status in p */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c:20,error,error,20,interpreter/llvm-project/llvm/lib/Support/regcomp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c,1,['error'],['error']
Availability,/* always an error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:13,error,error,13,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['error'],['error']
Availability,/* an error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:6,error,error,6,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['error'],['error']
Availability,/* an error only on write */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:6,error,error,6,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['error'],['error']
Availability,/* and no error propagated to row below yet */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:10,error,error,10,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,2,['error'],['error']
Availability,/* arbitrate between double-shift and shift+mask */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h:44,mask,mask,44,builtins/zstd/common/bitstream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h,1,['mask'],['mask']
Availability,/* argv[ARG_CHILD_ERR_REPORT] is the file descriptor onto which; * write error messages.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32-helper.c:73,error,error,73,graf2d/win32gdk/gdk/src/glib/gspawn-win32-helper.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32-helper.c,1,['error'],['error']
Availability,/* available in output area */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdpostct.c:3,avail,available,3,graf2d/asimage/src/libAfterImage/libjpeg/jdpostct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdpostct.c,1,['avail'],['available']
Availability,/* available in strip */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdpostct.c:3,avail,available,3,graf2d/asimage/src/libAfterImage/libjpeg/jdpostct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdpostct.c,1,['avail'],['available']
Availability,/* available input and output */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c:3,avail,available,3,builtins/zlib/infback.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c,3,['avail'],['available']
Availability,/* available no. of colors in colormap */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkcc.h:3,avail,available,3,graf2d/win32gdk/gdk/src/gdk/gdkcc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkcc.h,1,['avail'],['available']
Availability,/* available objects */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:3,avail,available,3,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['avail'],['available']
Availability,/* avoid error pileups */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c:9,error,error,9,graf2d/win32gdk/gdk/src/glib/gspawn.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c,1,['error'],['error']
Availability,/* avoid making error situations worse */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c:16,error,error,16,interpreter/llvm-project/llvm/lib/Support/regcomp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c,5,['error'],['error']
Availability,/* b) Shader and shader masks */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:24,mask,masks,24,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['mask'],['masks']
Availability,"/* bit shift counter, # of bits left in bit buffer part of C */; /* init: ct = -16 */; /* run: ct = 0..7 */; /* error: ct = -1 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c:112,error,error,112,graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,1,['error'],['error']
Availability,"/* black_mask is the bit mask of black-listed bytes; * set bits 0..6, 14..25, and 28..31; * 0xf3ffc07f = binary 11110011111111111100000001111111; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c:25,mask,mask,25,builtins/zlib/trees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c,2,['mask'],['mask']
Availability,/* bmask[n] is mask for n rightmost bits */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:15,mask,mask,15,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,1,['mask'],['mask']
Availability,/* buffer for error text */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:14,error,error,14,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['error'],['error']
Availability,/* bytes still available in this pool */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:15,avail,available,15,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,2,['avail'],['available']
Availability,/* c) XObjects (Images & Shader Masks) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:32,Mask,Masks,32,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['Mask'],['Masks']
Availability,"/* calculate offsets between declared and actual type, up-cast: direction > 0; down-cast: direction < 0 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/capi.h:79,down,down-cast,79,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/capi.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/capi.h,2,['down'],['down-cast']
Availability,/* cancels errors with IEEE arithmetic */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Math.h:11,error,errors,11,math/mathcore/inc/Math/Math.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Math.h,1,['error'],['errors']
Availability,/* carry over quantization error allow for error diffusion:*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.c:27,error,error,27,graf2d/asimage/src/libAfterImage/asvisual.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.c,8,['error'],['error']
Availability,/* check and forward error code */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/error_private.h:21,error,error,21,builtins/zstd/common/error_private.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/error_private.h,1,['error'],['error']
Availability,/* check op precedence for error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/cmake/win/w32pragma.h:27,error,error,27,cmake/win/w32pragma.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/cmake/win/w32pragma.h,1,['error'],['error']
Availability,/* check that there's no error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:25,error,error,25,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['error'],['error']
Availability,/* check that we're reading and that there's no (serious) error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c:58,error,error,58,builtins/zlib/gzread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c,4,['error'],['error']
Availability,/* check that we're reading and that there's no error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:48,error,error,48,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['error'],['error']
Availability,/* check that we're writing and that there's no error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzwrite.c:48,error,error,48,builtins/zlib/gzwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzwrite.c,6,['error'],['error']
Availability,/* choose what kind of error diffusion we'll use : */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.c:23,error,error,23,graf2d/asimage/src/libAfterImage/imencdec.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.c,1,['error'],['error']
Availability,/* chunkSize must be power of 2 for mask==(chunkSize-1) to work */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:36,mask,mask,36,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['mask'],['mask']
Availability,/* clear error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:9,error,error,9,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['error'],['error']
Availability,/* clear error and end-of-file */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:9,error,error,9,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['error'],['error']
Availability,/* compilation failures here means scratchBuffer is not large enough */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/fse_compress.c:15,failure,failures,15,builtins/zstd/compress/fse_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/fse_compress.c,1,['failure'],['failures']
Availability,/* complementary error function */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephes.h:17,error,error,17,math/mathcore/src/SpecFuncCephes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephes.h,1,['error'],['error']
Availability,/* construct error message with path */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:13,error,error,13,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['error'],['error']
Availability,"/* could consider as an error, but just ignore */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:24,error,error,24,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['error'],['error']
Availability,/* ct_data near *tree; the tree to restore */; /* int k; node to move down */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZTrees.c:70,down,down,70,core/zip/src/ZTrees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZTrees.c,1,['down'],['down']
Availability,"/* cur holds the error propagated from the previous pixel on the; 	 * current line. Add the error propagated from the previous line; 	 * to form the complete error correction term for this pixel, and; 	 * round the error term (which is expressed * 16) to an integer.; 	 * RIGHT_SHIFT rounds towards minus infinity, so adding 8 is correct; 	 * for either sign of the error value.; 	 * Note: errorptr points to *previous* column's array entry.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:17,error,error,17,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,6,['error'],"['error', 'errorptr']"
Availability,"/* curN holds the error propagated from the previous pixel on the; * current line. Add the error propagated from the previous line; * to form the complete error correction term for this pixel, and; * round the error term (which is expressed * 16) to an integer.; * RIGHT_SHIFT rounds towards minus infinity, so adding 8 is correct; * for either sign of the error value.; * Note: errorptr points to *previous* column's array entry.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:18,error,error,18,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,6,['error'],"['error', 'errorptr']"
Availability,/* current error or pixel value */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:11,error,error,11,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,2,['error'],['error']
Availability,/* current mask and opcode */; /* Overflow case */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:11,mask,mask,11,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['mask'],['mask']
Availability,"/* current mask and opcode, overwritten by; 				 * memmove() */; /* Length of the message being read at the front of the; 				 * queue. Cast to 31 bit is OK, since we limited; 				 * data_len before. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:11,mask,mask,11,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['mask'],['mask']
Availability,"/* data will be fetched fromthe slot identified by id and placed into buffer. ; * Data will be fetched from offset and will count buf_size bytes if buf_size is greater then; * available data - data will be tiled to accomodate this size, unless NotTileable is set */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asstorage.h:176,avail,available,176,graf2d/asimage/src/libAfterImage/asstorage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asstorage.h,1,['avail'],['available']
Availability,/* decompress and handle errors */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c:25,error,errors,25,builtins/zlib/gzread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c,1,['error'],['errors']
Availability,/* default error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:11,error,error,11,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,4,['error'],['error']
Availability,"/* defined(XXH_STATIC_LINKING_ONLY) && !defined(XXHASH_H_STATIC_13879238742) */; /* ======================================================================== */; /* ======================================================================== */; /* ======================================================================== */; /*-**********************************************************************; * xxHash implementation; *-**********************************************************************; * xxHash's implementation used to be hosted inside xxhash.c.; *; * However, inlining requires implementation to be visible to the compiler,; * hence be included alongside the header.; * Previously, implementation was hosted inside xxhash.c,; * which was then #included when inlining was activated.; * This construction created issues with a few build and install systems,; * as it required xxhash.c to be stored in /include directory.; *; * xxHash implementation is now directly integrated within xxhash.h.; * As a consequence, xxhash.c is no longer needed in /include.; *; * xxhash.c is still available and is still useful.; * In a ""normal"" setup, when xxhash is not inlined,; * xxhash.h only exposes the prototypes and public symbols,; * while xxhash.c can be built into an object file xxhash.o; * which can then be linked into the final binary.; ************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1089,avail,available,1089,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['avail'],['available']
Availability,/* deflate has finished flushing only when it hasn't used up; * all the available space in the output buffer:; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:72,avail,available,72,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['avail'],['available']
Availability,/* do the mallocs early so failure handling is easy */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c:27,failure,failure,27,interpreter/llvm-project/llvm/lib/Support/regcomp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c,1,['failure'],['failure']
Availability,/* down-cast */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:3,down,down-cast,3,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,2,['down'],['down-cast']
Availability,/* downarrow ↓ DOWNWARDS ARROW */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:3,down,downarrow,3,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,4,"['DOWN', 'down']","['DOWNWARDS', 'downarrow']"
Availability,/* downcaret ∨ LOGICAL OR */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:3,down,downcaret,3,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,2,['down'],['downcaret']
Availability,/* downsample when we reach this index */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c:3,down,downsample,3,graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,1,['down'],['downsample']
Availability,/* downscale */; /* Don't replace these by shifts; the sign may get clobbered */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c:3,down,downscale,3,graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c,1,['down'],['downscale']
Availability,/* downshoe ∪ UNION */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:3,down,downshoe,3,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,2,['down'],['downshoe']
Availability,/* downstile ⌊ LEFT FLOOR */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:3,down,downstile,3,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,2,['down'],['downstile']
Availability,/* downtack ⊤ DOWN TACK */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:3,down,downtack,3,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,4,"['DOWN', 'down']","['DOWN', 'downtack']"
Availability,"/* draft-tbray-http-legally-restricted-status-05,; 		 * Section 3 */; /* RFC2616 Section 10.5 - Server Error 5xx */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:103,Error,Error,103,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Error'],['Error']
Availability,/* else png_icc_check_header output an error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:39,error,error,39,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['error'],['error']
Availability,/* else png_icc_check_length output an error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:39,error,error,39,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['error'],['error']
Availability,/* else png_icc_check_tag_table output an error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:42,error,error,42,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['error'],['error']
Availability,/* else: ignore error and ommit SSL_CTX_free in case; 		 * callback_ret is 1 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:16,error,error,16,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* end collector dll part. */; /* loadiJIT_Funcs() : this function is called just in the beginning ; * and is responsible to load the functions from BistroJavaCollector.dll; * result:; * on success: the functions loads, iJIT_DLL_is_missing=0, return value = 1; * on failure: the functions are NULL, iJIT_DLL_is_missing=1, return value = 0; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c:266,failure,failure,266,interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,1,['failure'],['failure']
Availability,"/* end of virtual stack. */; /*; * The function for reporting virtual-machine related events to VTune.; * Note: when reporting iJVM_EVENT_TYPE_ENTER_NIDS, there is no need to fill ; * in the stack_id field in the iJIT_Method_NIDS structure, as VTune fills it.; * The return value in iJVM_EVENT_TYPE_ENTER_NIDS && ; * iJVM_EVENT_TYPE_LEAVE_NIDS events will be 0 in case of failure.; * in iJVM_EVENT_TYPE_METHOD_LOAD_FINISHED event ; * it will be -1 if EventSpecificData == 0 otherwise it will be 0.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c:372,failure,failure,372,interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,1,['failure'],['failure']
Availability,/* ensure null termination for errors */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkpixmap-win32.c:31,error,errors,31,graf2d/win32gdk/gdk/src/gdk/win32/gdkpixmap-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkpixmap-win32.c,1,['error'],['errors']
Availability,/* error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c:3,error,error,3,builtins/zlib/gzread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c,10,['error'],['error']
Availability,/* error callint poll */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,error,error,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* error code (number) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:3,error,error,3,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['error'],['error']
Availability,/* error code */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h:3,error,error,3,builtins/zlib/gzguts.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h,1,['error'],['error']
Availability,/* error code for last stream operation */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:3,error,error,3,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['error'],['error']
Availability,/* error codes and messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h:3,error,error,3,builtins/zstd/common/bitstream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h,1,['error'],['error']
Availability,/* error for below/next col */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:3,error,error,3,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,1,['error'],['error']
Availability,/* error for below/prev col */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:3,error,error,3,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,2,['error'],['error']
Availability,/* error for pixel below cur */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:3,error,error,3,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,2,['error'],['error']
Availability,/* error function */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephes.h:3,error,error,3,math/mathcore/src/SpecFuncCephes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephes.h,1,['error'],['error']
Availability,/* error heuristics */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c:3,error,error,3,interpreter/llvm-project/llvm/lib/Support/regcomp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c,2,['error'],['error']
Availability,/* error in compressed data */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:3,error,error,3,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['error'],['error']
Availability,/* error increments */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPolyUtils.c:3,error,error,3,graf2d/asimage/src/TASPolyUtils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPolyUtils.c,1,['error'],['error']
Availability,/* error message */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:3,error,error,3,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['error'],['error']
Availability,/* error message */; /* zlib inflate or deflate stream */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h:3,error,error,3,builtins/zlib/gzguts.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h,1,['error'],['error']
Availability,"/* error message output, or no error */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:3,error,error,3,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,2,['error'],['error']
Availability,"/* error, jan feb mar apr may jun jul aug sep oct nov dec */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.c:3,error,error,3,graf2d/win32gdk/gdk/src/glib/gdate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.c,1,['error'],['error']
Availability,/* error/overflow */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:3,error,error,3,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,/* error/quit error/quit */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:3,error,error,3,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,['error'],['error']
Availability,/* error/quit warn/discard data */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:3,error,error,3,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['error'],['error']
Availability,/* error/unspecified */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:3,error,error,3,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['error'],['error']
Availability,/* error: ignore it */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:3,error,error,3,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['error'],['error']
Availability,/* errorflag = 1; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c:3,error,errorflag,3,core/zip/src/Bits.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c,1,['error'],['errorflag']
Availability,/* exported to allow conversion of error code to string for compress() and; * uncompress(); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.c:35,error,error,35,builtins/zlib/zutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.c,2,['error'],['error']
Availability,/* failed to reach the specified tolerance */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:33,toler,tolerance,33,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['toler'],['tolerance']
Availability,/* fatal error: needed combine callback */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/tess.h:9,error,error,9,graf3d/eve7/glu/tess.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/tess.h,1,['error'],['error']
Availability,/* fetch error codes too */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:9,error,error,9,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['error'],['error']
Availability,/* filledtribulletdown ▼ BLACK DOWN-POINTING TRIANGLE */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:31,DOWN,DOWN-POINTING,31,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,2,['DOWN'],['DOWN-POINTING']
Availability,/* flag as permanent failure */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c:21,failure,failure,21,graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c,1,['failure'],['failure']
Availability,/* flags that mask set of ; 								 * channels to be extracted ; 								 * from the image */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h:14,mask,mask,14,graf2d/asimage/src/libAfterImage/imencdec.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h,1,['mask'],['mask']
Availability,"/* following error codes are __NOT STABLE__, they can be removed or changed in future versions */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd_errors.h:13,error,error,13,builtins/zstd/zstd_errors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd_errors.h,1,['error'],['error']
Availability,/* following error codes are not stable and may be removed or changed in a future version */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/error_private.c:13,error,error,13,builtins/zstd/common/error_private.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/error_private.c,1,['error'],['error']
Availability,"/* for an out of memory error, return literal string when requested */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:24,error,error,24,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['error'],['error']
Availability,"/* for safety if init fails */; /* Check for configuration errors.; * SIZEOF(ALIGN_TYPE) should be a power of 2; otherwise, it probably; * doesn't reflect any real hardware alignment requirement.; * The test is a little tricky: for X>0, X and X-1 have no one-bits; * in common if and only if X is a power of 2, ie has only one one-bit.; * Some compilers may give an ""unreachable code"" warning here; ignore it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:59,error,errors,59,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['error'],['errors']
Availability,/* force errors to be fatal */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmessages.c:9,error,errors,9,graf2d/win32gdk/gdk/src/glib/gmessages.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmessages.c,2,['error'],['errors']
Availability,/* form error * 3 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:8,error,error,8,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,4,['error'],['error']
Availability,/* form error * 5 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:8,error,error,8,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,4,['error'],['error']
Availability,/* form error * 7 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:8,error,error,8,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,3,['error'],['error']
Availability,"/* form error * 7 */; /* At this point cur contains the 7/16 error value to be propagated; 	 * to the next pixel on the current line, and all the errors for the; 	 * next line have been shifted over. We are therefore ready to move on.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:8,error,error,8,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,3,['error'],"['error', 'errors']"
Availability,"/* forward_body_data failed.; 		 * The error code has already been sent to the client,; 		 * and conn->status_code is already set. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:39,error,error,39,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* fpont 12/99 */; /* pont.net */; /* udpserver.c */; /* Converted to echo client/server with select() (timeout option).; See testTUDPSocket.C */; /* Compile with: gcc udpserver.c -o udpserver */; /* on Windows: cl -nologo -Z7 -MD -GR -EHsc udpserver.c */; /* 3/30/05 John Schultz */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/net/udpserver.c:70,echo,echo,70,tutorials/net/udpserver.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/net/udpserver.c,1,['echo'],['echo']
Availability,"/* fprintf( stderr, ""error at line %d, j = %d, CrntPrefix = %d\n"", __LINE__, j, CrntPrefix ); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c:21,error,error,21,graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c,1,['error'],['error']
Availability,"/* fread() returns 0 on error, so it is OK to store this in a size_t; * instead of an int, which is what fread() actually returns.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrio.c:24,error,error,24,graf2d/asimage/src/libAfterImage/libpng/pngrio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrio.c,2,['error'],['error']
Availability,"/* fstat doesn't deliver senseful values, but; * fcntl isn't available, so guess ...; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c:61,avail,available,61,graf2d/win32gdk/gdk/src/glib/giowin32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c,1,['avail'],['available']
Availability,/* function for printing errors and aborting */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngstruct.h:25,error,errors,25,graf2d/asimage/src/libAfterImage/libpng/pngstruct.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngstruct.h,1,['error'],['errors']
Availability,/* gcc and clang both don't like early returns in this loop.; * Instead break and check for an error at the end of the loop.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress_block.c:95,error,error,95,builtins/zstd/decompress/zstd_decompress_block.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress_block.c,1,['error'],['error']
Availability,/* gcc diagnostic pragmas available */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:26,avail,available,26,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['avail'],['available']
Availability,"/* gerror.h - Error reporting system; *; * Copyright 2000 Red Hat, Inc.; *; * The Gnome Library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public License as; * published by the Free Software Foundation; either version 2 of the; * License, or (at your option) any later version.; *; * The Gnome Library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with the Gnome Library; see the file COPYING.LIB. If not,; * write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gerror.h:14,Error,Error,14,graf2d/win32gdk/gdk/src/glib/gerror.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gerror.h,1,['Error'],['Error']
Availability,/* got a data error -- remain here until reset */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h:14,error,error,14,builtins/zlib/inflate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h,2,['error'],['error']
Availability,/* got an inflate() memory error -- remain here until reset */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h:27,error,error,27,builtins/zlib/inflate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h,2,['error'],['error']
Availability,"/* gspawn-win32.c - Process launching on Win32; *; * Copyright 2000 Red Hat, Inc.; *; * GLib is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public License as; * published by the Free Software Foundation; either version 2 of the; * License, or (at your option) any later version.; *; * GLib is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with GLib; see the file COPYING.LIB. If not, write; * to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Implementation details on Win32.; *; * - There is no way to set the no-inherit flag for; * a ""file descriptor"" in the MS C runtime. The flag is there,; * and the dospawn() function uses it, but unfortunately; * this flag can only be set when opening the file.; * - As there is no fork(), we cannot reliably change directory; * before starting the child process. (There might be several threads; * running, and the current directory is common for all threads.); *; * Thus, we must in most cases use a helper program to handle closing; * of (inherited) file descriptors and changing of directory. In fact,; * we do it all the time.; */; /* Define this to get some logging all the time */; /* #define G_SPAWN_WIN32_DEBUG */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:1133,reliab,reliably,1133,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,1,['reliab'],['reliably']
Availability,/* handle error breaks in while */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c:10,error,error,10,builtins/zlib/infback.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c,4,['error'],['error']
Availability,/* has an error been seen? */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c:10,error,error,10,interpreter/llvm-project/llvm/lib/Support/regcomp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c,1,['error'],['error']
Availability,"/* high level interface - division,; 								 * error diffusion as well ; 								 * as encoding */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h:48,error,error,48,graf2d/asimage/src/libAfterImage/imencdec.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h,1,['error'],['error']
Availability,/* identifier for error messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:18,error,error,18,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['error'],['error']
Availability,"/* if == ZSTD_CONTENTSIZE_UNKNOWN, it means this field is not available. 0 means ""empty"" */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:62,avail,available,62,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['avail'],['available']
Availability,"/* if an error occurred, close the connection */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:9,error,error,9,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* if error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c:6,error,error,6,graf3d/eve7/glu/sweep.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c,1,['error'],['error']
Availability,/* if error do nothing */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c:6,error,error,6,graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,3,['error'],['error']
Availability,/* if error do nothing */; /* Outer loop handles each block in the MCU */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c:6,error,error,6,graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,1,['error'],['error']
Availability,/* if something is still in source then we have an error number */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/NdbEndfIO.cxx:51,error,error,51,test/periodic/NdbEndfIO.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/NdbEndfIO.cxx,1,['error'],['error']
Availability,"/* if strict is not set, then app warnings and errors are treated as; * warnings in release builds, but not in unstable builds; this can be; * changed with '--relaxed'.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:47,error,errors,47,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['error'],['errors']
Availability,/* if the mask is constant and selects 8 bits or less we can use; the Power8 Bit permute instruction. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h:10,mask,mask,10,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h,1,['mask'],['mask']
Availability,"/* if toFlush==0, nothing is available to flush.; * However, jobID is expected to still be active:; * if jobID was already completed and fully flushed,; * ZSTDMT_flushProduced() should have already moved onto next job.; * Therefore, some input has not yet been consumed. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:29,avail,available,29,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['avail'],['available']
Availability,/* ignore error on read only file */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:10,error,error,10,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,5,['error'],['error']
Availability,"/* ignore error on read only file */; /* No need to continue processing files once we have a; 					 * match, since nothing will reset it back; 					 * to 0.; 					 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:10,error,error,10,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* in case we return an error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c:24,error,error,24,builtins/zlib/infback.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c,4,['error'],['error']
Availability,/* inflate (decompress) the codes in a deflated (compressed) block.; Return an error code or zero if it all goes ok. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:79,error,error,79,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['error'],['error']
Availability,"/* inflate.c -- zlib decompression; * Copyright (C) 1995-2005 Mark Adler; * For conditions of distribution and use, see copyright notice in zlib.h; */; /*; * Change history:; *; * 1.2.beta0 24 Nov 2002; * - First version -- complete rewrite of inflate to simplify code, avoid; * creation of window when not needed, minimize use of window when it is; * needed, make inffast.c even faster, implement gzip decoding, and to; * improve code readability and style over the previous zlib inflate code; *; * 1.2.beta1 25 Nov 2002; * - Use pointers for available input and output checking in inffast.c; * - Remove input and output counters in inffast.c; * - Change inffast.c entry and loop from avail_in >= 7 to >= 6; * - Remove unnecessary second byte pull from length extra in inffast.c; * - Unroll direct copy to three copies per loop in inffast.c; *; * 1.2.beta2 4 Dec 2002; * - Change external routine names to reduce potential conflicts; * - Correct filename to inffixed.h for fixed tables in inflate.c; * - Make hbuf[] unsigned char to match parameter type in inflate.c; * - Change strm->next_out[-state->offset] to *(strm->next_out - state->offset); * to avoid negation problem on Alphas (64 bit) in inflate.c; *; * 1.2.beta3 22 Dec 2002; * - Add comments on state->bits assertion in inffast.c; * - Add comments on op field in inftrees.h; * - Fix bug in reuse of allocated window after inflateReset(); * - Remove bit fields--back to byte structure for speed; * - Remove distance extra == 0 check in inflate_fast()--only helps for lengths; * - Change post-increments to pre-increments in inflate_fast(), PPC biased?; * - Add compile time option, POSTINC, to use post-increments instead (Intel?); * - Make MATCH copy in inflate() much faster for when inflate_fast() not used; * - Use local copies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c:544,avail,available,544,graf2d/asimage/src/libAfterImage/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c,1,['avail'],['available']
Availability,"/* inflate.c -- zlib decompression; * Copyright (C) 1995-2012 Mark Adler; * For conditions of distribution and use, see copyright notice in zlib.h; */; /*; * Change history:; *; * 1.2.beta0 24 Nov 2002; * - First version -- complete rewrite of inflate to simplify code, avoid; * creation of window when not needed, minimize use of window when it is; * needed, make inffast.c even faster, implement gzip decoding, and to; * improve code readability and style over the previous zlib inflate code; *; * 1.2.beta1 25 Nov 2002; * - Use pointers for available input and output checking in inffast.c; * - Remove input and output counters in inffast.c; * - Change inffast.c entry and loop from avail_in >= 7 to >= 6; * - Remove unnecessary second byte pull from length extra in inffast.c; * - Unroll direct copy to three copies per loop in inffast.c; *; * 1.2.beta2 4 Dec 2002; * - Change external routine names to reduce potential conflicts; * - Correct filename to inffixed.h for fixed tables in inflate.c; * - Make hbuf[] unsigned char to match parameter type in inflate.c; * - Change strm->next_out[-state->offset] to *(strm->next_out - state->offset); * to avoid negation problem on Alphas (64 bit) in inflate.c; *; * 1.2.beta3 22 Dec 2002; * - Add comments on state->bits assertion in inffast.c; * - Add comments on op field in inftrees.h; * - Fix bug in reuse of allocated window after inflateReset(); * - Remove bit fields--back to byte structure for speed; * - Remove distance extra == 0 check in inflate_fast()--only helps for lengths; * - Change post-increments to pre-increments in inflate_fast(), PPC biased?; * - Add compile time option, POSTINC, to use post-increments instead (Intel?); * - Make MATCH copy in inflate() much faster for when inflate_fast() not used; * - Use local copies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:544,avail,available,544,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,1,['avail'],['available']
Availability,"/* inflateReset failed, store the error message */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:34,error,error,34,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['error'],['error']
Availability,/* init failure */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c:8,failure,failure,8,builtins/lz4/lz4hc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c,2,['failure'],['failure']
Availability,"/* input domain error, e.g sqrt(-1) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:16,error,error,16,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['error'],['error']
Availability,/* internal RGB error information */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkcc.h:16,error,error,16,graf2d/win32gdk/gdk/src/gdk/gdkcc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkcc.h,1,['error'],['error']
Availability,/* internal error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:12,error,error,12,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,2,['error'],['error']
Availability,/* internal libpng error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:19,error,error,19,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,"/* just skip it, record the first error */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c:34,error,error,34,graf2d/asimage/src/libAfterImage/libpng/pngset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c,1,['error'],['error']
Availability,/* keep downward source compatibility */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gscanner.h:8,down,downward,8,graf2d/win32gdk/gdk/src/glib/gscanner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gscanner.h,1,['down'],['downward']
Availability,/* keep earliest error condition */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c:17,error,error,17,interpreter/llvm-project/llvm/lib/Support/regcomp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c,1,['error'],['error']
Availability,"/* last error message, NULL if no error */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:8,error,error,8,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,4,['error'],['error']
Availability,/* libpng is broken; this should be a warning but if it happens we; * want error reports so for the moment it is an error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:75,error,error,75,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,2,['error'],['error']
Availability,"/* linked list of glyphsets, each; 							 * representing continuos range of; 							 * available codes - used for ASCII ; 							 * codes */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h:88,avail,available,88,graf2d/asimage/src/libAfterImage/asfont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h,1,['avail'],['available']
Availability,/* make a table to force an error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.c:28,error,error,28,builtins/zlib/inftrees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.c,2,['error'],['error']
Availability,/* make sure the connection is cleaned up on SSL failure */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:49,failure,failure,49,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['failure'],['failure']
Availability,/* mark all tables to be written */; /* (Re)initialize error mgr and destination modules */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapistd.c:55,error,error,55,graf2d/asimage/src/libAfterImage/libjpeg/jcapistd.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapistd.c,1,['error'],['error']
Availability,/* mask */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/inc/X11/extensions/shape.h:3,mask,mask,3,graf2d/x11/inc/X11/extensions/shape.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/inc/X11/extensions/shape.h,1,['mask'],['mask']
Availability,/* mask 32bit value to filter out higher 24 bits; * if combined with BitShift - bitshift is done ; 												* prior to masking */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asstorage.h:3,mask,mask,3,graf2d/asimage/src/libAfterImage/asstorage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asstorage.h,2,['mask'],"['mask', 'masking']"
Availability,/* mask flag and opcode */; /* Variables used for connection monitoring */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,mask,mask,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['mask'],['mask']
Availability,/* mask for bit lengths table */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:3,mask,mask,3,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['mask'],['mask']
Availability,/* mask for comparing low */; /* check available table space */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.c:3,mask,mask,3,builtins/zlib/inftrees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.c,4,"['avail', 'mask']","['available', 'mask']"
Availability,/* mask for first level of distance codes */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inffast.c:3,mask,mask,3,builtins/zlib/inffast.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inffast.c,2,['mask'],['mask']
Availability,/* mask for first level of length codes */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inffast.c:3,mask,mask,3,builtins/zlib/inffast.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inffast.c,2,['mask'],['mask']
Availability,/* mask for low root bits */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.c:3,mask,mask,3,builtins/zlib/inftrees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.c,2,['mask'],['mask']
Availability,/* mask for pixel */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifdecode.c:3,mask,mask,3,graf2d/win32gdk/src/gifdecode.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifdecode.c,2,['mask'],['mask']
Availability,/* mask for pixel code */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifdecode.c:3,mask,mask,3,graf2d/win32gdk/src/gifdecode.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifdecode.c,2,['mask'],['mask']
Availability,/* mask for the above */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:3,mask,mask,3,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['mask'],['mask']
Availability,/* mask for wrapping around counters */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:3,mask,mask,3,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,1,['mask'],['mask']
Availability,/* mask off any extra bits in code */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:3,mask,mask,3,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,3,['mask'],['mask']
Availability,/* mask shader object numbers */; /* for image map list */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:3,mask,mask,3,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['mask'],['mask']
Availability,/* mask values */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/xwrap.h:3,mask,mask,3,graf2d/asimage/src/libAfterImage/xwrap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/xwrap.h,1,['mask'],['mask']
Availability,/* masks for bl and bd bits */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:3,mask,masks,3,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['mask'],['masks']
Availability,/* masks for objc_image_info.flags */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/MachODump.cpp:3,mask,masks,3,interpreter/llvm-project/llvm/tools/llvm-objdump/MachODump.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/MachODump.cpp,1,['mask'],['masks']
Availability,"/* max msg_level that will be displayed */; /* For recoverable corrupt-data errors, we emit a warning message,; * but keep going unless emit_message chooses to abort. emit_message; * should count warnings in num_warnings. The surrounding application; * can check for bad data by seeing if num_warnings is nonzero at the; * end of processing.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:51,recover,recoverable,51,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,2,"['error', 'recover']","['errors', 'recoverable']"
Availability,/* maximum compressed size */; /* Error Management */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:34,Error,Error,34,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['Error'],['Error']
Availability,/* may be used below in case compilation problems occur.; * Please submit a bug report if usage of any of the following generates errors on; * your compiler . Thanks!!! */; /* Some usefull debugging macros : */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asim_afterbase.h:130,error,errors,130,graf2d/asimage/src/libAfterImage/asim_afterbase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asim_afterbase.h,1,['error'],['errors']
Availability,"/* may be useful as a flag for ""no error"" */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:35,error,error,35,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,1,['error'],['error']
Availability,"/* may be useful as a flag for ""no error"" */; /* Initialize message table pointers */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:35,error,error,35,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,1,['error'],['error']
Availability,/* memory management functions can be customized by user project.; * Below functions must exist somewhere in the Project; * and be available at link time */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:131,avail,available,131,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['avail'],['available']
Availability,"/* mg_fopen will open a file either in memory or on the disk.; * The input parameter path is a string in UTF-8 encoding.; * The input parameter mode is MG_FOPEN_MODE_*; * On success, fp will be set in the output struct mg_file.; * All status members will also be set.; * The function returns 1 on success, 0 on error. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:311,error,error,311,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* mg_response_header_* functions can be used from server callbacks; * to prepare HTTP server response headers. Using this function will; * allow a callback to work with HTTP/1.x and HTTP/2.; */; /* Initialize a new HTTP response; * Parameters:; * conn: Current connection handle.; * status: HTTP status code (e.g., 200 for ""OK"").; * Return:; * 0: ok; * -1: parameter error; * -2: invalid connection type; * -3: invalid connection status; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:368,error,error,368,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['error'],['error']
Availability,"/* min distance to colormap entry i */; /* Compute true coordinates of update box's upper corner and center.; * Actually we compute the coordinates of the center of the upper-corner; * histogram cell, which are the upper bounds of the volume we care about.; * Note that since "">>"" rounds down, the ""center"" values may be closer to; * min than to max; hence comparisons to them must be ""<="", not ""<"".; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:288,down,down,288,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['down'],['down']
Availability,/* move all the pointers down */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/include.c:25,down,down,25,misc/rmkdepend/include.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/include.c,1,['down'],['down']
Availability,/* move one leaf down the tree */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c:17,down,down,17,builtins/zlib/trees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c,4,['down'],['down']
Availability,"/* must be DHP, EXP, JPGn, or RESn */; /* For now, we treat the reserved markers as fatal errors since they are; * likely to be used to signal incompatible JPEG Part 3 extensions.; * Once the JPEG 3 version-number marker is well defined, this code; * ought to change!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:90,error,errors,90,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['error'],['errors']
Availability,/* never an error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:12,error,error,12,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['error'],['error']
Availability,"/* new block : re-use previous statistics, scaled down */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c:50,down,down,50,builtins/zstd/compress/zstd_opt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c,1,['down'],['down']
Availability,/* next available space in codes[] */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h:8,avail,available,8,builtins/zlib/inflate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h,2,['avail'],['available']
Availability,/* next available space in table */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.c:8,avail,available,8,builtins/zlib/inftrees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.c,2,['avail'],['available']
Availability,/* no available blocks found - need to allocate a new block */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asstorage.c:6,avail,available,6,graf2d/asimage/src/libAfterImage/asstorage.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asstorage.c,1,['avail'],['available']
Availability,"/* no compression, or too long after compression, or compress error; -> write non-compressed entry */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:62,error,error,62,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,2,['error'],['error']
Availability,/* no context available */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:14,avail,available,14,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['avail'],['available']
Availability,/* no error diffusion whatsoever: */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.c:6,error,error,6,graf2d/asimage/src/libAfterImage/imencdec.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.c,1,['error'],['error']
Availability,/* no error message yet */; /* interpret mode */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:6,error,error,6,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['error'],['error']
Availability,/* no output data available */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:18,avail,available,18,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['avail'],['available']
Availability,/* no quanitzation - no error diffusion */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.c:24,error,error,24,graf2d/asimage/src/libAfterImage/imencdec.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.c,1,['error'],['error']
Availability,"/* no symbols, but wait for decoding to report error */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.c:47,error,error,47,builtins/zlib/inftrees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.c,2,['error'],['error']
Availability,/* node to move down */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c:16,down,down,16,builtins/zlib/trees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c,3,['down'],['down']
Availability,/* not a error condition */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asstorage.c:9,error,error,9,graf2d/asimage/src/libAfterImage/asstorage.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asstorage.c,1,['error'],['error']
Availability,/* not enough space available to write a bitstream */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/fse_compress.c:20,avail,available,20,builtins/zstd/compress/fse_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/fse_compress.c,1,['avail'],['available']
Availability,"/* not padded */; /* The ICC specification does not exclude zero length tags, therefore the; * start might actually be anywhere if there is no data, but this would be; * a clear abuse of the intent of the standard so the start is checked for; * being in range. All defined tag types have an 8 byte header - a 4 byte; * type signature then 0.; */; /* This is a hard error; potentially it can cause read outside the; * profile.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:365,error,error,365,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['error'],['error']
Availability,/* note that we shift values by 8 to keep quanitzation error in */; /* lower 1 byte for subsequent dithering 	:					 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h:55,error,error,55,graf2d/asimage/src/libAfterImage/asimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h,1,['error'],['error']
Availability,/* num_passes may not be available below if interlace support is not; * provided by libpng for both read and write.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:25,avail,available,25,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['avail'],['available']
Availability,/* number of bytes available at next_in */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:19,avail,available,19,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,2,['avail'],['available']
Availability,"/* number of corrupt-data warnings */; /* These fields point to the table(s) of error message strings.; * An application can change the table pointer to switch to a different; * message list (typically, to change the language in which errors are; * reported). Some applications may wish to add additional error codes; * that will be handled by the JPEG library error mechanism; the second; * table pointer is used for this purpose.; *; * First table includes all errors generated by JPEG library itself.; * Error code 0 is reserved for a ""no such error string"" message.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:80,error,error,80,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,7,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,/* number of prefix codes available */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.c:26,avail,available,26,builtins/zlib/inftrees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.c,2,['avail'],['available']
Availability,/* opentribulletdown ▽ WHITE DOWN-POINTING TRIANGLE */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:29,DOWN,DOWN-POINTING,29,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,2,['DOWN'],['DOWN-POINTING']
Availability,"/* other fatal failure, error->message; * should explain; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.h:15,failure,failure,15,graf2d/win32gdk/gdk/src/glib/gspawn.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.h,2,"['error', 'failure']","['error', 'failure']"
Availability,/* parameter error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:13,error,error,13,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['error'],['error']
Availability,/* path or fd for error messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h:18,error,error,18,builtins/zlib/gzguts.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h,1,['error'],['error']
Availability,/* place to point scanner in event of error */; /*; * macros for use with parse structure; * BEWARE: these know that the parse structure is named `p' !!!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c:38,error,error,38,interpreter/llvm-project/llvm/lib/Support/regcomp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c,1,['error'],['error']
Availability,/* placeholder to lazily install and forward do '(l/r)meth' if available */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:63,avail,available,63,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,1,['avail'],['available']
Availability,/* placeholder to lazily install and forward to 'ometh' if available */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:59,avail,available,59,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,1,['avail'],['available']
Availability,/* plane mask */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/xwrap.h:9,mask,mask,9,graf2d/asimage/src/libAfterImage/xwrap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/xwrap.h,1,['mask'],['mask']
Availability,/* pledges that last 64KB decompressed data will remain available unmodified. This optimization skips storage operations in tmp buffers. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.h:56,avail,available,56,builtins/lz4/lz4frame.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.h,1,['avail'],['available']
Availability,"/* png_handle_sPLT doesn't do this, so this is an app error */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c:54,error,error,54,graf2d/asimage/src/libAfterImage/libpng/pngset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c,1,['error'],['error']
Availability,"/* png_inflate now returns zlib error codes including Z_OK and Z_STREAM_END to; * allow the caller to do multiple calls if required. If the 'finish' flag is; * set Z_FINISH will be passed to the final inflate() call and Z_STREAM_END must; * be returned or there has been a problem, otherwise Z_SYNC_FLUSH is used and; * Z_OK or Z_STREAM_END will be returned on success.; *; * The input and output sizes are updated to the actual amounts of data consumed; * or written, not the amount available (as in a z_stream). The data pointers; * are not changed, so the next input is (data+input_size) and the next; * available output is (output+output_size).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:32,error,error,32,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,3,"['avail', 'error']","['available', 'error']"
Availability,"/* pngconf.h - machine-configurable file for libpng; *; * libpng version 1.6.40; *; * Copyright (c) 2018-2022 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2016,2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; *; * Any machine specific code is near the front of this file, so if you; * are configuring libpng for a machine, you may want to read the section; * starting here down to where it starts to typedef png_color, png_text,; * and png_info.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h:600,down,down,600,graf2d/asimage/src/libAfterImage/libpng/pngconf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h,1,['down'],['down']
Availability,"/* pngerror.c - stub functions for i/o and memory allocation; *; * Copyright (c) 2018 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2017 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; *; * This file provides a location for all error handling. Users who; * need special error handling are expected to write replacement functions; * and use png_set_error_fn() to use those functions. See the instructions; * at each function.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:450,error,error,450,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,2,['error'],['error']
Availability,/* pointer to error array (in FAR storage!) */; /* Private subobject */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:14,error,error,14,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,2,['error'],['error']
Availability,"/* portably return maximum value for an int (when limits.h presumed not; available) -- we need to do this to cover cases where 2's complement not; used, since C standard permits 1's complement and sign-bit representations,; otherwise we could just use ((unsigned)-1) >> 1 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:73,avail,available,73,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['avail'],['available']
Availability,/* precompute masks for speed */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:14,mask,masks,14,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['mask'],['masks']
Availability,"/* preferred floating type */; /*; * Each IDCT routine is responsible for range-limiting its results and; * converting them to unsigned form (0..MAXJSAMPLE). The raw outputs could; * be quite far out of range if the input data is corrupt, so a bulletproof; * range-limiting step is required. We use a mask-and-table-lookup method; * to do the combined operations quickly. See the comments with; * prepare_range_limit_table (in jdmaster.c) for more info.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdct.h:301,mask,mask-and-table-lookup,301,graf2d/asimage/src/libAfterImage/libjpeg/jdct.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdct.h,1,['mask'],['mask-and-table-lookup']
Availability,"/* prefix_length should now be at the trailing '\0' of the translated; * keyword, but it may already be over the end. None of this arithmetic; * can overflow because chunks are at most 2^31 bytes long, but on 16-bit; * systems the available allocation may overflow.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:231,avail,available,231,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['avail'],['available']
Availability,/* prevent recursive close if error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:30,error,error,30,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,2,['error'],['error']
Availability,/* profile mask */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/src/glewinfo.c:11,mask,mask,11,builtins/glew/src/glewinfo.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/src/glewinfo.c,1,['mask'],['mask']
Availability,"/* provides error code string (useful for debugging) */; /*-*****************************************; * FSE advanced functions; ******************************************/; /*! FSE_compress2() :; Same as FSE_compress(), but allows the selection of 'maxSymbolValue' and 'tableLog'; Both parameters can be defined as '0' to mean : use default value; @return : size of compressed data; Special values : if return == 0, srcData is not compressible => Nothing is stored within cSrc !!!; if return == 1, srcData is a single byte symbol * srcSize times. Use RLE compression.; if FSE_isError(return), it's an error code.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:12,error,error,12,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,2,['error'],['error']
Availability,/* pthread cond not available */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:20,avail,available,20,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['avail'],['available']
Availability,/* pthread mutex not available */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:21,avail,available,21,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['avail'],['available']
Availability,"/* pthread_t may be any data type, so a simple cast to unsigned long; 		 * can rise a warning/error, depending on the platform.; 		 * Here memcpy is used as an anything-to-anything cast. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:94,error,error,94,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* public fields */; /* Downsampling input buffer. This buffer holds color-converted data; * until we have enough to do a downsample step.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c:24,Down,Downsampling,24,graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,2,"['Down', 'down']","['Downsampling', 'downsample']"
Availability,"/* public fields */; /* Downsampling method pointers, one per component */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c:24,Down,Downsampling,24,graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,1,['Down'],['Downsampling']
Availability,/* read error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:8,error,error,8,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* recover only the easy case */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c:3,recover,recover,3,interpreter/llvm-project/llvm/lib/Support/regcomp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c,1,['recover'],['recover']
Availability,"/* renderer, writeBuffer, readBuffer, deltaTime, maskActive */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:49,mask,maskActive,49,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['mask'],['maskActive']
Availability,/* reply PING messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:9,PING,PING,9,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['PING'],['PING']
Availability,/* report errors */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:10,error,errors,10,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,2,['error'],['errors']
Availability,/* reserve one object for image mask */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:32,mask,mask,32,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['mask'],['mask']
Availability,/* restrict the global mask to levels that are known to glib */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmessages.c:23,mask,mask,23,graf2d/win32gdk/gdk/src/glib/gmessages.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmessages.c,1,['mask'],['mask']
Availability,"/* result of BIT_reloadDStream() */; /* 1,2,4,8 would be better for bitmap combinations, but slows down performance a bit ... :( */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h:99,down,down,99,builtins/zstd/common/bitstream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h,1,['down'],['down']
Availability,"/* ret is:; * negative: An error occurred; png_chunk_error will be called.; * zero: The chunk was not handled, the chunk will be discarded; * unless png_set_keep_unknown_chunks has been used to set; * a 'keep' behavior for this particular chunk, in which; * case that will be used. A critical chunk will cause an; * error at this point unless it is to be saved.; * positive: The chunk was handled, libpng will ignore/discard it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:27,error,error,27,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,2,['error'],['error']
Availability,/* return error fractions */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c:10,error,error,10,graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c,1,['error'],['error']
Availability,/* return error information */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:10,error,error,10,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['error'],['error']
Availability,/* returns dict header size; returns a ZSTD error code on failure */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:44,error,error,44,builtins/zstd/zdict.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h,2,"['error', 'failure']","['error', 'failure']"
Availability,"/* reverse mapping of slot address into index in array */; /* slots may be placed in array pointing into different areas of the memory ; 	 * block, since we will need to implement some sort of garbadge collection and ; 	 * defragmentation mechanism - we need to be able to process them in orderly 	; 	 * fashion. ; 	 * So finally : ; 	 * 1) slot's index does not specify where in the memory slot ; 	 * is located, it is only used to address slot from outside.; 	 * 2) Using slots memory address and its size we can go through the chain of slots; 	 * and perform all the maintenance tasks as long as we have reverse mapping ; 	 * of addresses into indexes.; 	 * ; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asstorage.h:570,mainten,maintenance,570,graf2d/asimage/src/libAfterImage/asstorage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asstorage.h,1,['mainten'],['maintenance']
Availability,/* round off error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:13,error,error,13,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,2,['error'],['error']
Availability,/* row groups available to postprocessor */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c:14,avail,available,14,graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,1,['avail'],['available']
Availability,"/* sRGB conversion tables; these are machine generated with the code in; * contrib/tools/makesRGB.c. The actual sRGB transfer curve defined in the; * specification (see the article at https://en.wikipedia.org/wiki/SRGB); * is used, not the gamma=1/2.2 approximation use elsewhere in libpng.; * The sRGB to linear table is exact (to the nearest 16-bit linear fraction).; * The inverse (linear to sRGB) table has accuracies as follows:; *; * For all possible (255*65535+1) input values:; *; * error: -0.515566 - 0.625971, 79441 (0.475369%) of readings inexact; *; * For the input values corresponding to the 65536 16-bit values:; *; * error: -0.513727 - 0.607759, 308 (0.469978%) of readings inexact; *; * In all cases the inexact readings are only off by one.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:491,error,error,491,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,2,['error'],['error']
Availability,/* save starting available input and output */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:17,avail,available,17,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,1,['avail'],['available']
Availability,/* save the path name for error messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:26,error,error,26,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['error'],['error']
Availability,/* scaling down */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.c:11,down,down,11,graf2d/asimage/src/libAfterImage/transform.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.c,2,['down'],['down']
Availability,/* scan downward */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c:8,down,downward,8,builtins/zstd/compress/zstd_opt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c,1,['down'],['downward']
Availability,/* search available input */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:10,avail,available,10,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,2,['avail'],['available']
Availability,"/* semi-opaque gzip file descriptor */; /*; ZEXTERN gzFile ZEXPORT gzopen OF((const char *path, const char *mode));. Opens a gzip (.gz) file for reading or writing. The mode parameter is as; in fopen (""rb"" or ""wb"") but can also include a compression level (""wb9"") or; a strategy: 'f' for filtered data as in ""wb6f"", 'h' for Huffman-only; compression as in ""wb1h"", 'R' for run-length encoding as in ""wb1R"", or 'F'; for fixed code compression as in ""wb9F"". (See the description of; deflateInit2 for more information about the strategy parameter.) 'T' will; request transparent writing or appending with no compression and not using; the gzip format. ""a"" can be used instead of ""w"" to request that the gzip stream that will; be written be appended to the file. ""+"" will result in an error, since; reading and writing to the same gzip file is not supported. The addition of; ""x"" when writing will create the file exclusively, which fails if the file; already exists. On systems that support it, the addition of ""e"" when; reading or writing will set the flag to close the file on an execve() call. These functions, as well as gzip, will read and decode a sequence of gzip; streams in a file. The append function of gzopen() can be used to create; such a file. (Also see gzflush() for another way to do this.) When; appending, gzopen does not test whether the file begins with a gzip stream,; nor does it look for the end of the gzip streams to begin appending. gzopen; will simply append a gzip stream to the existing file. gzopen can be used to read a file which is not in gzip format; in this; case gzread will directly read from the file without decompression. When; reading, this will be detected automatically by looking for the magic two-; byte gzip header. gzopen returns NULL if the file could not be opened, if there was; insufficient memory to allocate the gzFile state, or if an invalid mode was; specified (an 'r', 'w', or 'a' was not provided, or '+' was provided).; errno can be checked to de",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:780,error,error,780,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['error'],['error']
Availability,/* sendfile is only available for Linux */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:20,avail,available,20,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['avail'],['available']
Availability,"/* set an error, if not yet set */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:10,error,error,10,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,"/* set error code, and if no message, then done */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:7,error,error,7,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['error'],['error']
Availability,/* set error flag in the case of bad integrand behaviour at; a point of the integration range */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:7,error,error,7,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,2,['error'],['error']
Availability,"/* sf_sent<0 means error, thus fall back to the classic way */; /* This is always the case, if sf_file is not a ""normal"" file,; 			 * e.g., for sending data from the output of a CGI process. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:19,error,error,19,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['error'],['error']
Availability,/* should fall down to case below */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterbase.c:15,down,down,15,graf2d/asimage/src/libAfterImage/afterbase.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterbase.c,1,['down'],['down']
Availability,"/* significant bits can be in the range 1 to 7 for a meaningful result, if; * the number of significant bits is 0 then no shift is done (this is an; * error condition which is silently ignored.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:151,error,error,151,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['error'],['error']
Availability,/* significant bits in each available channel */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngstruct.h:28,avail,available,28,graf2d/asimage/src/libAfterImage/libpng/pngstruct.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngstruct.h,1,['avail'],['available']
Availability,/* simply scale it down to a thumbnail size */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c:19,down,down,19,graf2d/asimage/src/libAfterImage/import.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c,1,['down'],['down']
Availability,"/* since an int is returned, make sure len fits in one, otherwise return; with an error (this avoids the flaw in the interface) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c:82,error,error,82,builtins/zlib/gzread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c,2,['error'],['error']
Availability,/* single-symbol decoding */; /**; * Packs 4 HUF_DEltX1 structs into a U64. This is used to lay down 4 entries at; * a time.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/huf_decompress.c:96,down,down,96,builtins/zstd/decompress/huf_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/huf_decompress.c,1,['down'],['down']
Availability,/* socket error - check errno */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:10,error,error,10,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['error'],['error']
Availability,"/* state is presumed correctly sized, aka >= sizeof(LZ4_streamHC_t); * @return : 0 on success, !=0 if error */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c:102,error,error,102,builtins/lz4/lz4hc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c,1,['error'],['error']
Availability,"/* struct huft *tl, *td; literal/length and distance decoder tables */; /* int bl, bd; number of bits decoded by tl[] and td[] */; /* inflate (decompress) the codes in a deflated (compressed) block.; Return an error code or zero if it all goes ok. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:210,error,error,210,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['error'],['error']
Availability,/* table for clamping the applied error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:34,error,error,34,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['error'],['error']
Availability,/* tell libpng to strip 16 bit/color files down to 8 bits/color */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c:43,down,down,43,graf2d/asimage/src/libAfterImage/import.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c,1,['down'],['down']
Availability,/* tells if a return value is an error code */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:33,error,error,33,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['error'],['error']
Availability,"/* text, sPLT or unknown chunks */; /* Magic to create a struct when there is no struct to call the user supplied; * memory allocators. Because error handling has not been set up the memory; * handlers can't safely call png_error, but this is an obscure and undocumented; * restriction so libpng has to assume that the 'free' handler, at least, might; * call png_error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:144,error,error,144,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['error'],['error']
Availability,/* the MORE here is an error heuristic */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c:23,error,error,23,interpreter/llvm-project/llvm/lib/Support/regcomp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c,1,['error'],['error']
Availability,/* the cardinality field optimization should ignore the mask */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/ntuple_bulk.cxx:56,mask,mask,56,tree/ntuple/v7/test/ntuple_bulk.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/ntuple_bulk.cxx,1,['mask'],['mask']
Availability,/* the following is likely just redundant */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:32,redundant,redundant,32,core/clingutils/src/TClingUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx,1,['redundant'],['redundant']
Availability,"/* the previous line is a patch to compensate for the fact that IBM */; /* machines return a null on a malloc of zero bytes (unlike SGI), */; /* so we have to put in this defense to guard against a memory */; /* fault four lines down. from fossum@austin.ibm.com. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/priorityq.c:212,fault,fault,212,graf3d/eve7/glu/priorityq.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/priorityq.c,2,"['down', 'fault']","['down', 'fault']"
Availability,"/* these will do the same, but will use OpenGL API where available */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h:57,avail,available,57,graf2d/asimage/src/libAfterImage/ximage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h,1,['avail'],['available']
Availability,"/* this function loads the collector dll (BistroJavaCollector) ; * and the relevant functions.; * on success: all functions load, iJIT_DLL_is_missing = 0, return value = 1; * on failure: all functions are NULL, iJIT_DLL_is_missing = 1, return value = 0; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c:178,failure,failure,178,interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,1,['failure'],['failure']
Availability,/* to force error if no data was found */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:12,error,error,12,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['error'],['error']
Availability,/* tolerance for merging features */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/tess.h:3,toler,tolerance,3,graf3d/eve7/glu/tess.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/tess.h,1,['toler'],['tolerance']
Availability,/* tolerance should be in range [0..1] */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/tess.c:3,toler,tolerance,3,graf3d/eve7/glu/tess.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/tess.c,1,['toler'],['tolerance']
Availability,/* topt ┬ BOX DRAWINGS LIGHT DOWN AND HORIZONTAL */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:29,DOWN,DOWN,29,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,2,['DOWN'],['DOWN']
Availability,/* total amount of available input data */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngstruct.h:19,avail,available,19,graf2d/asimage/src/libAfterImage/libpng/pngstruct.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngstruct.h,1,['avail'],['available']
Availability,"/* trees.c -- output deflated data using Huffman coding; * Copyright (C) 1995-2005 Jean-loup Gailly; * For conditions of distribution and use, see copyright notice in zlib.h; */; /*; * ALGORITHM; *; * The ""deflation"" process uses several Huffman trees. The more; * common source values are represented by shorter bit sequences.; *; * Each code tree is stored in a compressed form which is itself; * a Huffman encoding of the lengths of all the code strings (in; * ascending order by source values). The actual code strings are; * reconstructed from the lengths in the inflate process, as described; * in the deflate specification.; *; * REFERENCES; *; * Deutsch, L.P.,""'Deflate' Compressed Data Format Specification"".; * Available in ftp.uu.net:/pub/archiving/zip/doc/deflate-1.1.doc; *; * Storer, James A.; * Data Compression: Methods and Theory, pp. 49-50.; * Computer Science Press, 1988. ISBN 0-7167-8156-5.; *; * Sedgewick, R.; * Algorithms, p290.; * Addison-Wesley, 1983. ISBN 0-201-06672-6.; */; /* @(#) $Id$ */; /* #define GEN_TREES_H */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/trees.c:721,Avail,Available,721,graf2d/asimage/src/libAfterImage/zlib/trees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/trees.c,1,['Avail'],['Available']
Availability,"/* trees.c -- output deflated data using Huffman coding; * Copyright (C) 1995-2012 Jean-loup Gailly; * detect_data_type() function provided freely by Cosmin Truta, 2006; * For conditions of distribution and use, see copyright notice in zlib.h; */; /*; * ALGORITHM; *; * The ""deflation"" process uses several Huffman trees. The more; * common source values are represented by shorter bit sequences.; *; * Each code tree is stored in a compressed form which is itself; * a Huffman encoding of the lengths of all the code strings (in; * ascending order by source values). The actual code strings are; * reconstructed from the lengths in the inflate process, as described; * in the deflate specification.; *; * REFERENCES; *; * Deutsch, L.P.,""'Deflate' Compressed Data Format Specification"".; * Available in ftp.uu.net:/pub/archiving/zip/doc/deflate-1.1.doc; *; * Storer, James A.; * Data Compression: Methods and Theory, pp. 49-50.; * Computer Science Press, 1988. ISBN 0-7167-8156-5.; *; * Sedgewick, R.; * Algorithms, p290.; * Addison-Wesley, 1983. ISBN 0-201-06672-6.; */; /* @(#) $Id$ */; /* #define GEN_TREES_H */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c:790,Avail,Available,790,builtins/zlib/trees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c,2,['Avail'],['Available']
Availability,/* true if seek request pending */; /* error information */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h:39,error,error,39,builtins/zlib/gzguts.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h,1,['error'],['error']
Availability,/* try discarding trailer for keep-alive */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:35,alive,alive,35,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['alive'],['alive']
Availability,"/* type for top-level pointer */; /* Declarations for Floyd-Steinberg dithering.; *; * Errors are accumulated into the array fserrors[], at a resolution of; * 1/16th of a pixel count. The error at a given pixel is propagated; * to its not-yet-processed neighbors using the standard F-S fractions,; *		...	(here)	7/16; *		3/16	5/16	1/16; * We work left-to-right on even rows, right-to-left on odd rows.; *; * We can get away with a single array (holding one row's worth of errors); * by using it to store the current row's errors at pixel columns not yet; * processed, but the next row's errors at columns already processed. We; * need only a few extra variables to hold the errors immediately around the; * current column. (If we are lucky, those variables are in registers, but; * even if not, they're probably cheaper to access than array elements are.); *; * The fserrors[] array has (#columns + 2) entries; the extra entry at; * each end saves us from special-casing the first and last pixels.; * Each entry is three values long, one value for each color component.; *; * Note: on a wide image, we might not have enough room in a PC's near data; * segment to hold the error array; so it is allocated with alloc_large.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:87,Error,Errors,87,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,7,"['Error', 'error']","['Errors', 'error', 'errors']"
Availability,"/* typedef'd to LZ4F_dctx in lz4frame.h */; /*! LZ4F_createDecompressionContext() :; * Create a decompressionContext object, which will track all decompression operations.; * Provides a pointer to a fully allocated and initialized LZ4F_decompressionContext object.; * Object can later be released using LZ4F_freeDecompressionContext().; * @return : if != 0, there was an error during context creation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:371,error,error,371,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['error'],['error']
Availability,/* update available output */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c:10,avail,available,10,builtins/zlib/gzread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c,1,['avail'],['available']
Availability,/* upleftcorner ┌ BOX DRAWINGS LIGHT DOWN AND RIGHT */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:37,DOWN,DOWN,37,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,2,['DOWN'],['DOWN']
Availability,/* uprightcorner ┐ BOX DRAWINGS LIGHT DOWN AND LEFT */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:38,DOWN,DOWN,38,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,2,['DOWN'],['DOWN']
Availability,/* used[i] is only -1 if the pixel at that location hasn't; * been allocated yet. This is a sanity check required for proper; * color allocation by the progressive image loader.; * When colors[i] == 0 it indicates the slot is available for; * allocation.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c:226,avail,available,226,graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c,1,['avail'],['available']
Availability,/* user specified an invalid tolerance */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:29,toler,tolerance,29,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['toler'],['tolerance']
Availability,/* user supplied struct for error functions */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngstruct.h:28,error,error,28,graf2d/asimage/src/libAfterImage/libpng/pngstruct.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngstruct.h,1,['error'],['error']
Availability,"/* void createHistograms () */; /* { */; /* std::cout << ""is hist ROC existing?"" << std::endl; */; /* if (m_histROC) */; /* { */; /* std::cout << ""--> yes"" << std::endl; */; /* fMonitoring->ProcessEvents (); */; /* return; */; /* } */; /* std::cout << ""create histograms"" << std::endl; */; /* TCanvas* canvas = fMonitoring->GetCanvas (); */; /* if (canvas) */; /* { */; /* std::cout << ""canvas divide"" << std::endl; */; /* canvas->cd (); */; /* canvas->Divide (2,2); */; /* } */; /* if (!m_histROC) */; /* { */; /* m_histROC = new TH2F (""ROC"",""ROC"", 1000, 0, 1.0, 1000, 0, 1.0); m_histROC->SetDirectory (0); */; /* m_histROC->SetLineColor (kBlue); */; /* } */; /* if (!m_histSignificance) */; /* { */; /* m_histSignificance = new TH2F (""Significance"", ""Significance"", 1000, 0,1.0, 5, 0.0, 2.0); */; /* m_histSignificance->SetDirectory (0); */; /* m_histSignificance->SetBit (TH1::kCanRebin); */; /* m_histROC->SetLineColor (kRed); */; /* } */; /* if (!m_histError) */; /* { */; /* m_histError = new TH1F (""Error"", ""Error"", 100, 0, 100); */; /* m_histError->SetDirectory (0); */; /* m_histError->SetBit (TH1::kCanRebin); */; /* m_histROC->SetLineColor (kGreen); */; /* } */; /* if (!m_histOutputSignal) */; /* { */; /* m_histOutputSignal = new TH1F (""Signal"", ""Signal"", 100, 0, 1.0); */; /* m_histOutputSignal->SetDirectory (0); */; /* m_histOutputSignal->SetBit (TH1::kCanRebin); */; /* } */; /* if (!m_histOutputBackground) */; /* { */; /* m_histOutputBackground = new TH1F (""Background"", ""Background"", 100, 0, 1.0); */; /* m_histOutputBackground->SetDirectory (0); */; /* m_histOutputBackground->SetBit (TH1::kCanRebin); */; /* } */; /* fMonitoring->ProcessEvents (); */; /* } */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:1006,Error,Error,1006,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,2,['Error'],['Error']
Availability,/* we better disable errors as some of this data will belong to memory audit : */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterbase.c:21,error,errors,21,graf2d/asimage/src/libAfterImage/afterbase.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterbase.c,1,['error'],['errors']
Availability,/* we carry half of the quantization error onto the following pixel : */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.c:37,error,error,37,graf2d/asimage/src/libAfterImage/imencdec.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.c,1,['error'],['error']
Availability,/* we carry half of the quantization error onto the following pixel and store it in dst: */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.c:37,error,error,37,graf2d/asimage/src/libAfterImage/imencdec.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.c,1,['error'],['error']
Availability,/* we carry half of the quantization error onto the surrounding pixels : */; /* X 7/16 */; /* 3/16 5/16 1/16 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.c:37,error,error,37,graf2d/asimage/src/libAfterImage/imencdec.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.c,1,['error'],['error']
Availability,"/* we make calculations in 24bit per chan, then convert it back to 16 and; 		 * carry over half of the quantization error onto the next pixel */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.c:116,error,error,116,graf2d/asimage/src/libAfterImage/transform.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.c,1,['error'],['error']
Availability,/* we need to allocate new usable list of colors based on available bpp */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.c:58,avail,available,58,graf2d/asimage/src/libAfterImage/asvisual.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.c,1,['avail'],['available']
Availability,/* we want to do error diffusion here since in other places it only works; 						* in horisontal direction : */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.c:17,error,error,17,graf2d/asimage/src/libAfterImage/transform.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.c,1,['error'],['error']
Availability,"/* we want to open the input file before doing anything else,; 	 * so that the setjmp() error recovery below can assume the file is open.; 	 * VERY IMPORTANT: use ""b"" option to fopen() if you are on a machine that; 	 * requires it in order to read binary files.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c:88,error,error,88,graf2d/asimage/src/libAfterImage/import.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c,2,"['error', 'recover']","['error', 'recovery']"
Availability,/* we want to swap foreground and background colors here;; XGetGCValues() is only available in R4+ */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/Rotated.cxx:82,avail,available,82,graf2d/x11/src/Rotated.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/Rotated.cxx,1,['avail'],['available']
Availability,"/* when workspace is continuously too large; * during at least this number of times,; * context's memory usage is considered wasteful,; * because it's sized to handle a worst case scenario which rarely happens.; * In which case, resize it down to free some memory */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_internal.h:239,down,down,239,builtins/zstd/common/zstd_internal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_internal.h,1,['down'],['down']
Availability,"/* while in < last, enough input available */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inffast.c:33,avail,available,33,graf2d/asimage/src/libAfterImage/zlib/inffast.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inffast.c,1,['avail'],['available']
Availability,"/* while out < end, enough space available */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inffast.c:33,avail,available,33,builtins/zlib/inffast.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inffast.c,2,['avail'],['available']
Availability,/* work on interval with largest error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:33,error,error,33,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['error'],['error']
Availability,/* zstd versions <= 1.4.0 mistakenly report error when; * sequences section body size is less than 3 bytes.; * Fixed by https://github.com/facebook/zstd/pull/1664.; * This can happen when the previous sequences section block is compressed; * with rle mode and the current block's sequences section is compressed; * with repeat mode where sequences section body size can be 1 byte.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_superblock.c:44,error,error,44,builtins/zstd/compress/zstd_compress_superblock.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_superblock.c,1,['error'],['error']
Availability,/*! Backpropagates the error. Must only be called directly at the corresponding; * call to Forward(...). */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:23,error,error,23,tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,4,['error'],['error']
Availability,"/*! Checks condition `e` and reports a fatal error if it's false.; * \warning; * - this check is NOT stripped in release mode, so it should not be used for hot paths.; * For those cases, prefer a regular `assert()`;; * - depending on `gErrorIgnoreLevel`, this might not terminate the program, \see ::Fatal.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:45,error,error,45,core/foundation/inc/TError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h,1,['error'],['error']
Availability,"/*! Color code error. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/Utility.h:15,error,error,15,tmva/tmva/test/DNN/Utility.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/Utility.h,1,['error'],['error']
Availability,"/*! Compute the maximum, element-wise relative error of the matrices; * X and Y normalized by the element of Y. Protected against division; * by zero. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/Utility.h:47,error,error,47,tmva/tmva/test/DNN/Utility.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/Utility.h,1,['error'],['error']
Availability,"/*! FSE_buildCTable():; Builds `ct`, which must be already allocated, using FSE_createCTable().; @return : 0, or an errorCode, which can be tested using FSE_isError() */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:116,error,errorCode,116,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['error'],['errorCode']
Availability,"/*! FSE_buildDTable():; Builds 'dt', which must be already allocated, using FSE_createDTable().; return : 0, or an errorCode, which can be tested using FSE_isError() */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:115,error,errorCode,115,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['error'],['errorCode']
Availability,"/*! FSE_compress_usingCTable():; Compress `src` using `ct` into `dst` which must be already allocated.; @return : size of compressed data (<= `dstCapacity`),; or 0 if compressed data could not fit into `dst`,; or an errorCode, which can be tested using FSE_isError() */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:216,error,errorCode,216,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['error'],['errorCode']
Availability,"/*! FSE_decompress():; Decompress FSE data from buffer 'cSrc', of size 'cSrcSize',; into already allocated destination buffer 'dst', of size 'dstCapacity'.; @return : size of regenerated data (<= maxDstSize),; or an error code, which can be tested using FSE_isError() . ** Important ** : FSE_decompress() does not decompress non-compressible nor RLE data !!!; Why ? : making this distinction requires a header.; Header management is intentionally delegated to the user layer, which can better manage special cases.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:216,error,error,216,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['error'],['error']
Availability,"/*! FSE_decompress_usingDTable():; Decompress compressed source `cSrc` of size `cSrcSize` using `dt`; into `dst` which must be already allocated.; @return : size of regenerated data (necessarily <= `dstCapacity`),; or an errorCode, which can be tested using FSE_isError() */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:221,error,errorCode,221,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['error'],['errorCode']
Availability,"/*! FSE_normalizeCount():; normalize counts so that sum(count[]) == Power_of_2 (2^tableLog); 'normalizedCounter' is a table of short, of minimum size (maxSymbolValue+1).; useLowProbCount is a boolean parameter which trades off compressed size for; faster header decoding. When it is set to 1, the compressed data will be slightly; smaller. And when it is set to 0, FSE_readNCount() and FSE_buildDTable() will be; faster. If you are compressing a small amount of data (< 2 KB) then useLowProbCount=0; is a good default, since header deserialization makes a big speed difference.; Otherwise, useLowProbCount=1 is a good default, since the speed difference is small.; @return : tableLog,; or an errorCode, which can be tested using FSE_isError() */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:692,error,errorCode,692,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['error'],['errorCode']
Availability,"/*! FSE_writeNCount():; Compactly save 'normalizedCounter' into 'buffer'.; @return : size of the compressed table,; or an errorCode, which can be tested using FSE_isError(). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:122,error,errorCode,122,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['error'],['errorCode']
Availability,"/*! Generate a random net, perform forward and backward propagation and check; * the bias gradients using numerical differentiation. Returns the maximum; * relative gradient error and also prints it to stdout. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestBackpropagation.h:174,error,error,174,tmva/tmva/test/DNN/TestBackpropagation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestBackpropagation.h,2,['error'],['error']
Availability,"/*! Generate a random net, perform forward and backward propagation and check; * the weight gradients using numerical differentiation. Returns the maximum; * relative gradient error and also prints it to stdout. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestBackpropagation.h:176,error,error,176,tmva/tmva/test/DNN/TestBackpropagation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestBackpropagation.h,4,['error'],['error']
Availability,"/*! Generate a random, linear net, perform forward and backward propagation with; * L1 regularization and check the weight gradients using numerical; * differentiation. Returns the maximum relative gradient error and; * also prints it to stdout. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestBackpropagation.h:207,error,error,207,tmva/tmva/test/DNN/TestBackpropagation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestBackpropagation.h,2,['error'],['error']
Availability,"/*! Generate a random, linear net, perform forward and backward propagation with; * L2 regularization and check the weight gradients using numerical; * differentiation. Returns the maximum relative gradient error and; * also prints it to stdout. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestBackpropagation.h:207,error,error,207,tmva/tmva/test/DNN/TestBackpropagation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestBackpropagation.h,2,['error'],['error']
Availability,"/*! HIST_count_simple() :; * Same as HIST_countFast(), this function is unsafe,; * and will segfault if any value within `src` is `> *maxSymbolValuePtr`.; * It is also a bit slower for large inputs.; * However, it does not need any additional memory (not even on stack).; * @return : count of the most frequent symbol.; * Note this function doesn't produce any error (i.e. it must succeed).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/hist.h:361,error,error,361,builtins/zstd/compress/hist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/hist.h,1,['error'],['error']
Availability,"/*! HUF_readStats() :; * Read compact Huffman tree, saved by HUF_writeCTable().; * `huffWeight` is destination buffer.; * @return : size read from `src` , or an error Code .; * Note : Needed by HUF_readCTable() and HUF_readDTableXn() . */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h:161,error,error,161,builtins/zstd/common/huf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h,1,['error'],['error']
Availability,"/*! HUF_readStats() :; Read compact Huffman tree, saved by HUF_writeCTable().; `huffWeight` is destination buffer.; `rankStats` is assumed to be a table of at least HUF_TABLELOG_MAX U32.; @return : size read from `src` , or an error Code .; Note : Needed by HUF_readCTable() and HUF_readDTableX?() .; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/entropy_common.c:227,error,error,227,builtins/zstd/common/entropy_common.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/entropy_common.c,1,['error'],['error']
Availability,"/*! LZ4F_compressBegin() :; * init streaming compression and writes frame header into dstBuffer.; * dstBuffer must be >= LZ4F_HEADER_SIZE_MAX bytes.; * preferencesPtr can be NULL, in which case default parameters are selected.; * @return : number of bytes written into dstBuffer for the header; * or an error code (can be tested using LZ4F_isError()); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:303,error,error,303,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['error'],['error']
Availability,/*! LZ4F_compressBegin_usingCDict() :; * init streaming compression and writes frame header into dstBuffer.; * dstBuffer must be >= LZ4F_HEADER_SIZE_MAX bytes.; * @return : number of bytes written into dstBuffer for the header; * or an error code (can be tested using LZ4F_isError()); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:236,error,error,236,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['error'],['error']
Availability,"/*! LZ4F_compressEnd() :; * When you want to properly finish the compressed frame, just call LZ4F_compressEnd().; * It will flush whatever data remained within compressionContext (like LZ4_flush()); * but also properly finalize the frame, with an endMark and an (optional) checksum.; * LZ4F_compressOptions_t structure is optional : you can provide NULL as argument.; * @return: the number of bytes written into dstBuffer (necessarily >= 4 (endMark size)); * or an error code if it fails (can be tested using LZ4F_isError()); * The context can then be used again to compress a new frame, starting with LZ4F_compressBegin().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:465,error,error,465,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['error'],['error']
Availability,"/*! LZ4F_compressFrame() :; * Compress an entire srcBuffer into a valid LZ4 frame, in a single step.; * dstBuffer MUST be >= LZ4F_compressFrameBound(srcSize, preferencesPtr).; * The LZ4F_preferences_t structure is optional : you can provide NULL as argument. All preferences will be set to default.; * @return : number of bytes written into dstBuffer.; * or an error code if it fails (can be tested using LZ4F_isError()); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:361,error,error,361,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['error'],['error']
Availability,"/*! LZ4F_compressFrame_usingCDict() :; * Compress srcBuffer using a dictionary, in a single step.; * cdict can be NULL, in which case, no dictionary is used.; * dstBuffer MUST be >= LZ4F_compressFrameBound(srcSize, preferencesPtr).; * The LZ4F_preferences_t structure is optional : you may provide NULL as argument,; * however, it's the only way to provide a dictID, so it's not recommended.; * @return : number of bytes written into dstBuffer,; * or an error code if it fails (can be tested using LZ4F_isError()); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:454,error,error,454,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['error'],['error']
Availability,"/*! LZ4F_compressUpdate() :; * LZ4F_compressUpdate() can be called repetitively to compress as much data as necessary.; * dstBuffer MUST be >= LZ4F_compressBound(srcSize, preferencesPtr).; * LZ4F_compressOptions_t structure is optional : you can provide NULL as argument.; * @return : the number of bytes written into dstBuffer. It can be zero, meaning input data was just buffered.; * or an error code if it fails (which can be tested using LZ4F_isError()); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:392,error,error,392,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['error'],['error']
Availability,"/*! LZ4F_decodeHeader() :; * input : `src` points at the **beginning of the frame**; * output : set internal values of dctx, such as; * dctx->frameInfo and dctx->dStage.; * Also allocates internal buffers.; * @return : nb Bytes read from src (necessarily <= srcSize); * or an error code (testable with LZ4F_isError()); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:276,error,error,276,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['error'],['error']
Availability,"/*! LZ4F_decompress() :; * Call this function repetitively to regenerate compressed data in srcBuffer.; * The function will attempt to decode up to *srcSizePtr bytes from srcBuffer; * into dstBuffer of capacity *dstSizePtr.; *; * The number of bytes regenerated into dstBuffer will be provided within *dstSizePtr (necessarily <= original value).; *; * The number of bytes effectively read from srcBuffer will be provided within *srcSizePtr (necessarily <= original value).; * If number of bytes read is < number of bytes provided, then decompression operation is not complete.; * Remaining data will have to be presented again in a subsequent invocation.; *; * The function result is an hint of the better srcSize to use for next call to LZ4F_decompress.; * Schematically, it's the size of the current (or remaining) compressed block + header of next block.; * Respecting the hint provides a small boost to performance, since it allows less buffer shuffling.; * Note that this is just a hint, and it's always possible to any srcSize value.; * When a frame is fully decoded, @return will be 0.; * If decompression failed, @return is an error code which can be tested using LZ4F_isError().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:1135,error,error,1135,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['error'],['error']
Availability,"/*! LZ4F_flush() :; * When compressed data must be sent immediately, without waiting for a block to be filled,; * invoke LZ4_flush(), which will immediately compress any remaining data stored within LZ4F_cctx.; * The result of the function is the number of bytes written into dstBuffer.; * It can be zero, this means there was no data left within LZ4F_cctx.; * The function outputs an error code if it fails (can be tested using LZ4F_isError()); * LZ4F_compressOptions_t* is optional. NULL is a valid argument.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:385,error,error,385,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['error'],['error']
Availability,"/*! LZ4F_getFrameInfo() :; * This function extracts frame parameters (max blockSize, frame checksum, etc.).; * Usage is optional. Objective is to provide relevant information for allocation purposes.; * This function works in 2 situations :; * - At the beginning of a new frame, in which case it will decode this information from `srcBuffer`, and start the decoding process.; * Amount of input data provided must be large enough to successfully decode the frame header.; * A header size is variable, but is guaranteed to be <= LZ4F_HEADER_SIZE_MAX bytes. It's possible to provide more input data than this minimum.; * - After decoding has been started. In which case, no input is read, frame parameters are extracted from dctx.; * The number of bytes consumed from srcBuffer will be updated within *srcSizePtr (necessarily <= original value).; * Decompression must resume from (srcBuffer + *srcSizePtr).; * @return : an hint about how many srcSize bytes LZ4F_decompress() expects for next call,; * or an error code which can be tested using LZ4F_isError(); * note 1 : in case of error, dctx is not modified. Decoding operations can resume from where they stopped.; * note 2 : frame parameters are *copied into* an already allocated LZ4F_frameInfo_t structure.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:1004,error,error,1004,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,2,['error'],['error']
Availability,"/*! LZ4F_headerSize() :; * @return : size of frame header; * or an error code, which can be tested using LZ4F_isError(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:67,error,error,67,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['error'],['error']
Availability,"/*! LZ4_compress_fast_continue() :; * Compress 'src' content using data from previously compressed blocks, for better compression ratio.; * 'dst' buffer must be already allocated.; * If dstCapacity >= LZ4_compressBound(srcSize), compression is guaranteed to succeed, and runs faster.; *; * @return : size of compressed block; * or 0 if there is an error (typically, cannot fit into 'dst').; *; * Note 1 : Each invocation to LZ4_compress_fast_continue() generates a new block.; * Each block has precise boundaries.; * Each block must be decompressed separately, calling LZ4_decompress_*() with relevant metadata.; * It's not possible to append blocks together and expect a single invocation of LZ4_decompress_*() to decompress them together.; *; * Note 2 : The previous 64KB of source data is __assumed__ to remain present, unmodified, at same address in memory !; *; * Note 3 : When input is structured as a double-buffer, each buffer can have any size, including < 64 KB.; * Make sure that buffers are separated, by at least one byte.; * This construction ensures that each block only depends on previous block.; *; * Note 4 : If input buffer is a ring-buffer, it can have any size, including < 64 KB.; *; * Note 5 : After an error, the stream status is undefined (invalid), it can only be reset or freed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:348,error,error,348,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,2,['error'],['error']
Availability,"/*! LZ4_decoderRingBufferSize() : v1.8.2+; * Note : in a ring buffer scenario (optional),; * blocks are presumed decompressed next to each other; * up to the moment there is not enough remaining space for next block (remainingSize < maxBlockSize),; * at which stage it resumes from beginning of ring buffer.; * When setting such a ring buffer for streaming decompression,; * provides the minimum size of this ring buffer; * to be compatible with any source respecting maxBlockSize condition.; * @return : minimum ring buffer size,; * or 0 if there is an error (invalid maxBlockSize).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:554,error,error,554,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['error'],['error']
Availability,"/*! LZ4_decoderRingBufferSize() :; * when setting a ring buffer for streaming decompression (optional scenario),; * provides the minimum size of this ring buffer; * to be compatible with any source respecting maxBlockSize condition.; * Note : in a ring buffer scenario,; * blocks are presumed decompressed next to each other.; * When not enough space remains for next block (remainingSize < maxBlockSize),; * decoding resumes from beginning of ring buffer.; * @return : minimum ring buffer size,; * or 0 if there is an error (invalid maxBlockSize).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:519,error,error,519,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['error'],['error']
Availability,"/*! LZ4_decompress_*_continue() :; * These decoding functions allow decompression of consecutive blocks in ""streaming"" mode.; * A block is an unsplittable entity, it must be presented entirely to a decompression function.; * Decompression functions only accepts one block at a time.; * The last 64KB of previously decoded data *must* remain available and unmodified at the memory position where they were decoded.; * If less than 64KB of data has been decoded, all the data must be present.; *; * Special : if decompression side sets a ring buffer, it must respect one of the following conditions :; * - Decompression buffer size is _at least_ LZ4_decoderRingBufferSize(maxBlockSize).; * maxBlockSize is the maximum size of any single block. It can have any value > 16 bytes.; * In which case, encoding and decoding buffers do not need to be synchronized.; * Actually, data can be produced by any source compliant with LZ4 format specification, and respecting maxBlockSize.; * - Synchronized mode :; * Decompression buffer size is _exactly_ the same as compression buffer size,; * and follows exactly same update rule (block boundaries at same positions),; * and decoding function is provided with exact decompressed size of each block (exception for last block of the stream),; * _then_ decoding & encoding ring buffer can have any size, including small ones ( < 64 KB).; * - Decompression buffer is larger than encoding buffer, by a minimum of maxBlockSize more bytes.; * In which case, encoding and decoding buffers do not need to be synchronized,; * and encoding ring buffer can have any size, including small ones ( < 64 KB).; *; * Whenever these conditions are not possible,; * save the last 64KB of decoded data into a safe buffer where it can't be modified during decompression,; * then indicate where this data is saved using LZ4_setStreamDecode(), before decompressing next block.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:341,avail,available,341,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['avail'],['available']
Availability,"/*! LZ4_decompress_safe() :; * compressedSize : is the exact complete size of the compressed block.; * dstCapacity : is the size of destination buffer (which must be already allocated), presumed an upper bound of decompressed size.; * @return : the number of bytes decompressed into destination buffer (necessarily <= dstCapacity); * If destination buffer is not large enough, decoding will stop and output an error code (negative value).; * If the source stream is detected malformed, the function will stop decoding and return a negative result.; * Note 1 : This function is protected against malicious data packets :; * it will never writes outside 'dst' buffer, nor read outside 'source' buffer,; * even if the compressed block is maliciously modified to order the decoder to do these actions.; * In such case, the decoder stops immediately, and considers the compressed block malformed.; * Note 2 : compressedSize and dstCapacity must be provided to the function, the compressed block does not contain them.; * The implementation is free to send / store / derive this information in whichever way is most beneficial.; * If there is a need for a different format which bundles together both compressed data and its metadata, consider looking at lz4frame.h instead.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:410,error,error,410,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['error'],['error']
Availability,"/*! LZ4_decompress_safe_partial() :; * Decompress an LZ4 compressed block, of size 'srcSize' at position 'src',; * into destination buffer 'dst' of size 'dstCapacity'.; * Up to 'targetOutputSize' bytes will be decoded.; * The function stops decoding on reaching this objective.; * This can be useful to boost performance; * whenever only the beginning of a block is required.; *; * @return : the number of bytes decoded in `dst` (necessarily <= targetOutputSize); * If source stream is detected malformed, function returns a negative result.; *; * Note 1 : @return can be < targetOutputSize, if compressed block contains less data.; *; * Note 2 : targetOutputSize must be <= dstCapacity; *; * Note 3 : this function effectively stops decoding on reaching targetOutputSize,; * so dstCapacity is kind of redundant.; * This is because in older versions of this function,; * decoding operation would still write complete sequences.; * Therefore, there was no guarantee that it would stop writing at exactly targetOutputSize,; * it could write more bytes, though only up to dstCapacity.; * Some ""margin"" used to be required for this operation to work properly.; * Thankfully, this is no longer necessary.; * The function nonetheless keeps the same signature, in an effort to preserve API compatibility.; *; * Note 4 : If srcSize is the exact size of the block,; * then targetOutputSize can be any value,; * including larger than the block's decompressed size.; * The function will, at most, generate block's decompressed size.; *; * Note 5 : If srcSize is _larger_ than block's compressed size,; * then targetOutputSize **MUST** be <= block's decompressed size.; * Otherwise, *silent corruption will occur*.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:802,redundant,redundant,802,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['redundant'],['redundant']
Availability,"/*! LZ4_loadDict() :; * Use this function to reference a static dictionary into LZ4_stream_t.; * The dictionary must remain available during compression.; * LZ4_loadDict() triggers a reset, so any previous data will be forgotten.; * The same dictionary will have to be loaded on decompression side for successful decoding.; * Dictionary are useful for better compression of small data (KB range).; * While LZ4 accept any input as dictionary,; * results are generally better when using Zstandard's Dictionary Builder.; * Loading a size of 0 is allowed, and is the same as reset.; * @return : loaded dictionary size, in bytes (necessarily <= 64 KB); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:124,avail,available,124,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['avail'],['available']
Availability,"/*! LZ4_resetStream_fast() : v1.9.0+; * Use this to prepare an LZ4_stream_t for a new chain of dependent blocks; * (e.g., LZ4_compress_fast_continue()).; *; * An LZ4_stream_t must be initialized once before usage.; * This is automatically done when created by LZ4_createStream().; * However, should the LZ4_stream_t be simply declared on stack (for example),; * it's necessary to initialize it first, using LZ4_initStream().; *; * After init, start any new stream with LZ4_resetStream_fast().; * A same LZ4_stream_t can be re-used multiple times consecutively; * and compress multiple streams,; * provided that it starts each new stream with LZ4_resetStream_fast().; *; * LZ4_resetStream_fast() is much faster than LZ4_initStream(),; * but is not compatible with memory regions containing garbage data.; *; * Note: it's only useful to call LZ4_resetStream_fast(); * in the context of streaming compression.; * The *extState* functions perform their own resets.; * Invoking LZ4_resetStream_fast() before is redundant, and even counterproductive.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1006,redundant,redundant,1006,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['redundant'],['redundant']
Availability,"/*! LZ4_saveDict() :; * If last 64KB data cannot be guaranteed to remain available at its current memory location,; * save it into a safer place (char* safeBuffer).; * This is schematically equivalent to a memcpy() followed by LZ4_loadDict(),; * but is much faster, because LZ4_saveDict() doesn't need to rebuild tables.; * @return : saved dictionary size in bytes (necessarily <= maxDictSize), or 0 if error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:73,avail,available,73,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,2,"['avail', 'error']","['available', 'error']"
Availability,"/*! LZ4_setStreamDecode() :; * An LZ4_streamDecode_t context can be allocated once and re-used multiple times.; * Use this function to start decompression of a new stream of blocks.; * A dictionary can optionally be set. Use NULL or size 0 for a reset order.; * Dictionary is presumed stable : it must remain accessible and unmodified during next decompression.; * @return : 1 if OK, 0 if error; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:389,error,error,389,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['error'],['error']
Availability,"/*! LZ4_setStreamDecode() :; * Use this function to instruct where to find the dictionary.; * This function is not necessary if previous data is still available where it was decoded.; * Loading a size of 0 is allowed (same effect as no dictionary).; * @return : 1 if OK, 0 if error; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:151,avail,available,151,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,2,"['avail', 'error']","['available', 'error']"
Availability,"/*! Obsolete LZ4_decompress_fast variants (since v1.9.0) :; * These functions used to be faster than LZ4_decompress_safe(),; * but this is no longer the case. They are now slower.; * This is because LZ4_decompress_fast() doesn't know the input size,; * and therefore must progress more cautiously into the input buffer to not read beyond the end of block.; * On top of that `LZ4_decompress_fast()` is not protected vs malformed or malicious inputs, making it a security liability.; * As a consequence, LZ4_decompress_fast() is strongly discouraged, and deprecated.; *; * The last remaining LZ4_decompress_fast() specificity is that; * it can decompress a block without knowing its compressed size.; * Such functionality can be achieved in a more secure manner; * by employing LZ4_decompress_safe_partial().; *; * Parameters:; * originalSize : is the uncompressed size to regenerate.; * `dst` must be already allocated, its size must be >= 'originalSize' bytes.; * @return : number of bytes read from source buffer (== compressed size).; * The function expects to finish at block's end exactly.; * If the source stream is detected malformed, the function stops decoding and returns a negative result.; * note : LZ4_decompress_fast*() requires originalSize. Thanks to this information, it never writes past the output buffer.; * However, since it doesn't know its 'src' size, it may read an unknown amount of input, past input buffer bounds.; * Also, since match offsets are not validated, match reads from 'src' may underflow too.; * These issues never happen if input (compressed) data is correct.; * But they may happen if input data is invalid (error or intentional tampering).; * As a consequence, use these functions in trusted environments with trusted data **only**.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1647,error,error,1647,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['error'],['error']
Availability,"/*! POOL_resize() :; * Expands or shrinks pool's number of threads.; * This is more efficient than releasing + creating a new context,; * since it tries to preserve and re-use existing threads.; * `numThreads` must be at least 1.; * @return : 0 when resize was successful,; * !0 (typically 1) if there is an error.; * note : only numThreads can be resized, queueSize remains unchanged.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.h:308,error,error,308,builtins/zstd/common/pool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.h,1,['error'],['error']
Availability,"/*! POOL_tryAdd() :; * Add the job `function(opaque)` to thread pool _if_ a worker is available.; * Returns immediately even if not (does not block).; * @return : 1 if successful, 0 if not.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.h:86,avail,available,86,builtins/zstd/common/pool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.h,1,['avail'],['available']
Availability,/*! Propagate the input batch X through the net and evaluate the; * error function for the resulting activations of the output; * layer */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Net.h:68,error,error,68,tmva/tmva/inc/TMVA/DNN/Net.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Net.h,1,['error'],['error']
Availability,"/*! Test derivatives of all activation functions and return the maximum relative; * error. Prints the result for each function to the stdout. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestDerivatives.h:84,error,error,84,tmva/tmva/test/DNN/TestDerivatives.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestDerivatives.h,1,['error'],['error']
Availability,"/*! Test gradients of all loss function for the given architecture type and; * return the maximum relative error. Prints results for each function to; * standard out. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestDerivatives.h:107,error,error,107,tmva/tmva/test/DNN/TestDerivatives.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestDerivatives.h,1,['error'],['error']
Availability,"/*! ZDICT_finalizeDictionary():; * Given a custom content as a basis for dictionary, and a set of samples,; * finalize dictionary by adding headers and statistics according to the zstd; * dictionary format.; *; * Samples must be stored concatenated in a flat buffer `samplesBuffer`,; * supplied with an array of sizes `samplesSizes`, providing the size of each; * sample in order. The samples are used to construct the statistics, so they; * should be representative of what you will compress with this dictionary.; *; * The compression level can be set in `parameters`. You should pass the; * compression level you expect to use in production. The statistics for each; * compression level differ, so tuning the dictionary for the compression level; * can help quite a bit.; *; * You can set an explicit dictionary ID in `parameters`, or allow us to pick; * a random dictionary ID for you, but we can't guarantee no collisions.; *; * The dstDictBuffer and the dictContent may overlap, and the content will be; * appended to the end of the header. If the header + the content doesn't fit in; * maxDictSize the beginning of the content is truncated to make room, since it; * is presumed that the most profitable content is at the end of the dictionary,; * since that is the cheapest to reference.; *; * `dictContentSize` must be >= ZDICT_CONTENTSIZE_MIN bytes.; * `maxDictSize` must be >= max(dictContentSize, ZSTD_DICTSIZE_MIN).; *; * @return: size of dictionary stored into `dstDictBuffer` (<= `maxDictSize`),; * or an error code, which can be tested by ZDICT_isError().; * Note: ZDICT_finalizeDictionary() will push notifications into stderr if; * instructed to, using notificationLevel>0.; * NOTE: This function currently may fail in several edge cases including:; * * Not enough samples; * * Samples are uncompressible; * * Samples are all exactly the same; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:1519,error,error,1519,builtins/zstd/zdict.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h,1,['error'],['error']
Availability,"/*! ZDICT_optimizeTrainFromBuffer_cover():; * The same requirements as above hold for all the parameters except `parameters`.; * This function tries many parameter combinations and picks the best parameters.; * `*parameters` is filled with the best parameters found,; * dictionary constructed with those parameters is stored in `dictBuffer`.; *; * All of the parameters d, k, steps are optional.; * If d is non-zero then we don't check multiple values of d, otherwise we check d = {6, 8}.; * if steps is zero it defaults to its default value.; * If k is non-zero then we don't check multiple values of k, otherwise we check steps values in [50, 2000].; *; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * On success `*parameters` contains the parameters selected.; * See ZDICT_trainFromBuffer() for details on failure modes.; * Note: ZDICT_optimizeTrainFromBuffer_cover() requires about 8 bytes of memory for each input byte and additionally another 5 bytes of memory for each byte of memory for each thread.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:746,error,error,746,builtins/zstd/zdict.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h,2,"['error', 'failure']","['error', 'failure']"
Availability,"/*! ZDICT_optimizeTrainFromBuffer_fastCover():; * The same requirements as above hold for all the parameters except `parameters`.; * This function tries many parameter combinations (specifically, k and d combinations); * and picks the best parameters. `*parameters` is filled with the best parameters found,; * dictionary constructed with those parameters is stored in `dictBuffer`.; * All of the parameters d, k, steps, f, and accel are optional.; * If d is non-zero then we don't check multiple values of d, otherwise we check d = {6, 8}.; * if steps is zero it defaults to its default value.; * If k is non-zero then we don't check multiple values of k, otherwise we check steps values in [50, 2000].; * If f is zero, default value of 20 is used.; * If accel is zero, default value of 1 is used.; *; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * On success `*parameters` contains the parameters selected.; * See ZDICT_trainFromBuffer() for details on failure modes.; * Note: ZDICT_optimizeTrainFromBuffer_fastCover() requires about 6 * 2^f bytes of memory for each thread.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:893,error,error,893,builtins/zstd/zdict.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h,2,"['error', 'failure']","['error', 'failure']"
Availability,"/*! ZDICT_trainFromBuffer():; * Train a dictionary from an array of samples.; * Redirect towards ZDICT_optimizeTrainFromBuffer_fastCover() single-threaded, with d=8, steps=4,; * f=20, and accel=1.; * Samples must be stored concatenated in a single flat buffer `samplesBuffer`,; * supplied with an array of sizes `samplesSizes`, providing the size of each sample, in order.; * The resulting dictionary will be saved into `dictBuffer`.; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * Note: Dictionary training will fail if there are not enough samples to construct a; * dictionary, or if most of the samples are too small (< 8 bytes being the lower limit).; * If dictionary training fails, you should use zstd without a dictionary, as the dictionary; * would've been ineffective anyways. If you believe your samples would benefit from a dictionary; * please open an issue with details, and we can look into it.; * Note: ZDICT_trainFromBuffer()'s memory usage is about 6 MB.; * Tips: In general, a reasonable dictionary has a size of ~ 100 KB.; * It's possible to select smaller or larger size, just by specifying `dictBufferCapacity`.; * In general, it's recommended to provide a few thousands samples, though this can vary a lot.; * It's recommended that total size of all samples be about ~x100 times the target size of dictionary.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:525,error,error,525,builtins/zstd/zdict.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h,1,['error'],['error']
Availability,"/*! ZDICT_trainFromBuffer_cover():; * Train a dictionary from an array of samples using the COVER algorithm.; * Samples must be stored concatenated in a single flat buffer `samplesBuffer`,; * supplied with an array of sizes `samplesSizes`, providing the size of each sample, in order.; * The resulting dictionary will be saved into `dictBuffer`.; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * See ZDICT_trainFromBuffer() for details on failure modes.; * Note: ZDICT_trainFromBuffer_cover() requires about 9 bytes of memory for each input byte.; * Tips: In general, a reasonable dictionary has a size of ~ 100 KB.; * It's possible to select smaller or larger size, just by specifying `dictBufferCapacity`.; * In general, it's recommended to provide a few thousands samples, though this can vary a lot.; * It's recommended that total size of all samples be about ~x100 times the target size of dictionary.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:437,error,error,437,builtins/zstd/zdict.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h,2,"['error', 'failure']","['error', 'failure']"
Availability,"/*! ZDICT_trainFromBuffer_fastCover():; * Train a dictionary from an array of samples using a modified version of COVER algorithm.; * Samples must be stored concatenated in a single flat buffer `samplesBuffer`,; * supplied with an array of sizes `samplesSizes`, providing the size of each sample, in order.; * d and k are required.; * All other parameters are optional, will use default values if not provided; * The resulting dictionary will be saved into `dictBuffer`.; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * See ZDICT_trainFromBuffer() for details on failure modes.; * Note: ZDICT_trainFromBuffer_fastCover() requires 6 * 2^f bytes of memory.; * Tips: In general, a reasonable dictionary has a size of ~ 100 KB.; * It's possible to select smaller or larger size, just by specifying `dictBufferCapacity`.; * In general, it's recommended to provide a few thousands samples, though this can vary a lot.; * It's recommended that total size of all samples be about ~x100 times the target size of dictionary.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:562,error,error,562,builtins/zstd/zdict.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h,2,"['error', 'failure']","['error', 'failure']"
Availability,"/*! ZDICT_trainFromBuffer_legacy():; * Train a dictionary from an array of samples.; * Samples must be stored concatenated in a single flat buffer `samplesBuffer`,; * supplied with an array of sizes `samplesSizes`, providing the size of each sample, in order.; * The resulting dictionary will be saved into `dictBuffer`.; * `parameters` is optional and can be provided with values set to 0 to mean ""default"".; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * See ZDICT_trainFromBuffer() for details on failure modes.; * Tips: In general, a reasonable dictionary has a size of ~ 100 KB.; * It's possible to select smaller or larger size, just by specifying `dictBufferCapacity`.; * In general, it's recommended to provide a few thousands samples, though this can vary a lot.; * It's recommended that total size of all samples be about ~x100 times the target size of dictionary.; * Note: ZDICT_trainFromBuffer_legacy() will send notifications into stderr if instructed to, using notificationLevel>0.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:500,error,error,500,builtins/zstd/zdict.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h,2,"['error', 'failure']","['error', 'failure']"
Availability,"/*! ZDICT_trainFromBuffer_unsafe_legacy() :; * Warning : `samplesBuffer` must be followed by noisy guard band.; * @return : size of dictionary, or an error code which can be tested with ZDICT_isError(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/zdict.c:150,error,error,150,builtins/zstd/dictBuilder/zdict.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/zdict.c,1,['error'],['error']
Availability,/*! ZSTDMT_compressStream_generic() :; * Combines ZSTDMT_compressStream() with optional ZSTDMT_flushStream() or ZSTDMT_endStream(); * depending on flush directive.; * @return : minimum amount of data still to be flushed; * 0 if fully flushed; * or an error code; * note : needs to be init using any ZSTD_initCStream*() variant */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.h:251,error,error,251,builtins/zstd/compress/zstdmt_compress.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.h,1,['error'],['error']
Availability,"/*! ZSTDMT_flushProduced() :; * flush whatever data has been produced but not yet flushed in current job.; * move to next job if current one is fully flushed.; * `output` : `pos` will be updated with amount of data flushed .; * `blockToFlush` : if >0, the function will block and wait if there is no data available to flush .; * @return : amount of data remaining within internal buffer, 0 if no more, 1 if unknown but > 0, or an error code */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:305,avail,available,305,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,2,"['avail', 'error']","['available', 'error']"
Availability,"/*! ZSTDMT_initCStream_internal() :; * Private use only. Init streaming operation.; * expects params to be valid.; * must receive dict, or cdict, or none, but not both.; * @return : 0, or an error code */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.h:191,error,error,191,builtins/zstd/compress/zstdmt_compress.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.h,1,['error'],['error']
Availability,"/*! ZSTD_CCtxParams_getParameter() :; * Similar to ZSTD_CCtx_getParameter.; * Get the requested value of one compression parameter, selected by enum ZSTD_cParameter.; * @result : 0, or an error code (which can be tested with ZSTD_isError()).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:188,error,error,188,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/*! ZSTD_CCtxParams_setParameter() :; * Similar to ZSTD_CCtx_setParameter.; * Set one compression parameter, selected by enum ZSTD_cParameter.; * Parameters must be applied to a ZSTD_CCtx using; * ZSTD_CCtx_setParametersUsingCCtxParams().; * @result : a code representing success or failure (which can be tested with; * ZSTD_isError()).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:283,failure,failure,283,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['failure'],['failure']
Availability,"/*! ZSTD_CCtx_getParameter() :; * Get the requested compression parameter value, selected by enum ZSTD_cParameter,; * and store it into int* value.; * @return : 0, or an error code (which can be tested with ZSTD_isError()).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:170,error,error,170,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/*! ZSTD_CCtx_refCDict() :; * Reference a prepared dictionary, to be used for all next compressed frames.; * Note that compression parameters are enforced from within CDict,; * and supersede any compression parameter previously set within CCtx.; * The parameters ignored are labled as ""superseded-by-cdict"" in the ZSTD_cParameter enum docs.; * The ignored parameters will be used again if the CCtx is returned to no-dictionary mode.; * The dictionary will remain valid for future compressed frames using same CCtx.; * @result : 0, or an error code (which can be tested with ZSTD_isError()).; * Special : Referencing a NULL CDict means ""return to no-dictionary mode"".; * Note 1 : Currently, only one dictionary can be managed.; * Referencing a new dictionary effectively ""discards"" any previous one.; * Note 2 : CDict is just referenced, its lifetime must outlive its usage within CCtx. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:537,error,error,537,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/*! ZSTD_CCtx_refPrefix() :; * Reference a prefix (single-usage dictionary) for next compressed frame.; * A prefix is **only used once**. Tables are discarded at end of frame (ZSTD_e_end).; * Decompression will need same prefix to properly regenerate data.; * Compressing with a prefix is similar in outcome as performing a diff and compressing it,; * but performs much faster, especially during decompression (compression speed is tunable with compression level).; * @result : 0, or an error code (which can be tested with ZSTD_isError()).; * Special: Adding any prefix (including NULL) invalidates any previous prefix or dictionary; * Note 1 : Prefix buffer is referenced. It **must** outlive compression.; * Its content must remain unmodified during compression.; * Note 2 : If the intention is to diff some large src data blob with some prior version of itself,; * ensure that the window size is large enough to contain the entire source.; * See ZSTD_c_windowLog.; * Note 3 : Referencing a prefix involves building tables, which are dependent on compression parameters.; * It's a CPU consuming operation, with non-negligible impact on latency.; * If there is a need to use the same prefix multiple times, consider loadDictionary instead.; * Note 4 : By default, the prefix is interpreted as raw content (ZSTD_dct_rawContent).; * Use experimental ZSTD_CCtx_refPrefix_advanced() to alter dictionary interpretation. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:487,error,error,487,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/*! ZSTD_CCtx_reset() :; * There are 2 different things that can be reset, independently or jointly :; * - The session : will stop compressing current frame, and make CCtx ready to start a new one.; * Useful after an error, or to interrupt any ongoing compression.; * Any internal data not yet flushed is cancelled.; * Compression parameters and dictionary remain unchanged.; * They will be used to compress next frame.; * Resetting session never fails.; * - The parameters : changes all parameters back to ""default"".; * This removes any reference to any dictionary too.; * Parameters can only be changed between 2 sessions (i.e. no compression is currently ongoing); * otherwise the reset fails, and function returns an error value (which can be tested using ZSTD_isError()); * - Both : similar to resetting the session, followed by resetting parameters.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:217,error,error,217,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,2,['error'],['error']
Availability,"/*! ZSTD_CCtx_setParameter() :; * Set one compression parameter, selected by enum ZSTD_cParameter.; * All parameters have valid bounds. Bounds can be queried using ZSTD_cParam_getBounds().; * Providing a value beyond bound will either clamp it, or trigger an error (depending on parameter).; * Setting a parameter is generally only possible during frame initialization (before starting compression).; * Exception : when using multi-threading mode (nbWorkers >= 1),; * the following parameters can be updated _during_ compression (within same frame):; * => compressionLevel, hashLog, chainLog, searchLog, minMatch, targetLength and strategy.; * new parameters will be active for next job only (after a flush()).; * @return : an error code (which can be tested using ZSTD_isError()).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:259,error,error,259,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,2,['error'],['error']
Availability,"/*! ZSTD_CCtx_setPledgedSrcSize() :; * Total input data size to be compressed as a single frame.; * Value will be written in frame header, unless if explicitly forbidden using ZSTD_c_contentSizeFlag.; * This value will also be controlled at end of frame, and trigger an error if not respected.; * @result : 0, or an error code (which can be tested with ZSTD_isError()).; * Note 1 : pledgedSrcSize==0 actually means zero, aka an empty frame.; * In order to mean ""unknown content size"", pass constant ZSTD_CONTENTSIZE_UNKNOWN.; * ZSTD_CONTENTSIZE_UNKNOWN is default value for any new frame.; * Note 2 : pledgedSrcSize is only valid once, for the next frame.; * It's discarded at the end of the frame, and replaced by ZSTD_CONTENTSIZE_UNKNOWN.; * Note 3 : Whenever all input data is provided and consumed in a single round,; * for example with ZSTD_compress2(),; * or invoking immediately ZSTD_compressStream2(,,,ZSTD_e_end),; * this value is automatically overridden by srcSize instead.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:270,error,error,270,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,2,['error'],['error']
Availability,"/*! ZSTD_DCtx_getParameter() :; * Get the requested decompression parameter value, selected by enum ZSTD_dParameter,; * and store it into int* value.; * @return : 0, or an error code (which can be tested with ZSTD_isError()).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:172,error,error,172,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/*! ZSTD_DCtx_loadDictionary() :; * Create an internal DDict from dict buffer,; * to be used to decompress next frames.; * The dictionary remains valid for all future frames, until explicitly invalidated.; * @result : 0, or an error code (which can be tested with ZSTD_isError()).; * Special : Adding a NULL (or 0-size) dictionary invalidates any previous dictionary,; * meaning ""return to no-dictionary mode"".; * Note 1 : Loading a dictionary involves building tables,; * which has a non-negligible impact on CPU usage and latency.; * It's recommended to ""load once, use many times"", to amortize the cost; * Note 2 :`dict` content will be copied internally, so `dict` can be released after loading.; * Use ZSTD_DCtx_loadDictionary_byReference() to reference dictionary content instead.; * Note 3 : Use ZSTD_DCtx_loadDictionary_advanced() to take control of; * how dictionary content is loaded and interpreted.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:227,error,error,227,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/*! ZSTD_DCtx_refDDict() :; * Reference a prepared dictionary, to be used to decompress next frames.; * The dictionary remains active for decompression of future frames using same DCtx.; * @result : 0, or an error code (which can be tested with ZSTD_isError()).; * Note 1 : Currently, only one dictionary can be managed.; * Referencing a new dictionary effectively ""discards"" any previous one.; * Special: referencing a NULL DDict means ""return to no-dictionary mode"".; * Note 2 : DDict is just referenced, its lifetime must outlive its usage from DCtx.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:208,error,error,208,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/*! ZSTD_DCtx_refPrefix() :; * Reference a prefix (single-usage dictionary) to decompress next frame.; * This is the reverse operation of ZSTD_CCtx_refPrefix(),; * and must use the same prefix as the one used during compression.; * Prefix is **only used once**. Reference is discarded at end of frame.; * End of frame is reached when ZSTD_decompressStream() returns 0.; * @result : 0, or an error code (which can be tested with ZSTD_isError()).; * Note 1 : Adding any prefix (including NULL) invalidates any previously set prefix or dictionary; * Note 2 : Prefix buffer is referenced. It **must** outlive decompression.; * Prefix buffer must remain unmodified up to the end of frame,; * reached when ZSTD_decompressStream() returns 0.; * Note 3 : By default, the prefix is treated as raw content (ZSTD_dct_rawContent).; * Use ZSTD_CCtx_refPrefix_advanced() to alter dictMode (Experimental section); * Note 4 : Referencing a raw content prefix has almost no cpu nor memory cost.; * A full dictionary is more costly, as it requires building tables.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:391,error,error,391,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/*! ZSTD_DCtx_reset() :; * Return a DCtx to clean state.; * Session and parameters can be reset jointly or separately.; * Parameters can only be reset when no active frame is being decompressed.; * @return : 0, or an error code, which can be tested with ZSTD_isError(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:217,error,error,217,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/*! ZSTD_DCtx_setFormat() :; * Instruct the decoder context about what kind of data to decode next.; * This instruction is mandatory to decode data without a fully-formed header,; * such ZSTD_f_zstd1_magicless for example.; * @return : 0, or an error code (which can be tested using ZSTD_isError()). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:245,error,error,245,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/*! ZSTD_DCtx_setMaxWindowSize() :; * Refuses allocating internal buffers for frames requiring a window size larger than provided limit.; * This protects a decoder context from reserving too much memory for itself (potential attack scenario).; * This parameter is only useful in streaming mode, since no internal buffer is allocated in single-pass mode.; * By default, a decompression context accepts all window sizes <= (1 << ZSTD_WINDOWLOG_LIMIT_DEFAULT); * @return : 0, or an error code (which can be tested using ZSTD_isError()).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:479,error,error,479,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/*! ZSTD_DCtx_setParameter() :; * Set one compression parameter, selected by enum ZSTD_dParameter.; * All parameters have valid bounds. Bounds can be queried using ZSTD_dParam_getBounds().; * Providing a value beyond bound will either clamp it, or trigger an error (depending on parameter).; * Setting a parameter is only possible during frame initialization (before starting decompression).; * @return : 0, or an error code (which can be tested using ZSTD_isError()).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:259,error,error,259,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,2,['error'],['error']
Availability,"/*! ZSTD_buildSeqTable() :; * @return : nb bytes read from src,; * or an error code if it fails */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress_block.c:73,error,error,73,builtins/zstd/decompress/zstd_decompress_block.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress_block.c,1,['error'],['error']
Availability,"/*! ZSTD_cParam_getBounds() :; * All parameters must belong to an interval with lower and upper bounds,; * otherwise they will either trigger an error or be automatically clamped.; * @return : a structure, ZSTD_bounds, which contains; * - an error status field, which must be tested using ZSTD_isError(); * - lower and upper bounds, both inclusive; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:145,error,error,145,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,2,['error'],['error']
Availability,"/*! ZSTD_checkCParams() :; * Ensure param values remain within authorized range.; * @return 0 on success, or an error code (can be checked with ZSTD_isError()) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:112,error,error,112,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/*! ZSTD_compress2() :; * Behave the same as ZSTD_compressCCtx(), but compression parameters are set using the advanced API.; * ZSTD_compress2() always starts a new frame.; * Should cctx hold data from a previously unfinished frame, everything about it is forgotten.; * - Compression parameters are pushed into CCtx before starting compression, using ZSTD_CCtx_set*(); * - The function is always blocking, returns when compression is completed.; * Hint : compression runs faster if `dstCapacity` >= `ZSTD_compressBound(srcSize)`.; * @return : compressed size written into `dst` (<= `dstCapacity),; * or an error code if it fails (which can be tested using ZSTD_isError()).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:606,error,error,606,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/*! ZSTD_compressBegin_advanced() :; * @return : 0, or an error code */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:58,error,error,58,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['error'],['error']
Availability,"/*! ZSTD_compressBegin_internal() :; * @return : 0, or an error code */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:58,error,error,58,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['error'],['error']
Availability,"/*! ZSTD_compressStream2() :; * Behaves about the same as ZSTD_compressStream, with additional control on end directive.; * - Compression parameters are pushed into CCtx before starting compression, using ZSTD_CCtx_set*(); * - Compression parameters cannot be changed once compression is started (save a list of exceptions in multi-threading mode); * - output->pos must be <= dstCapacity, input->pos must be <= srcSize; * - output->pos and input->pos will be updated. They are guaranteed to remain below their respective limit.; * - endOp must be a valid directive; * - When nbWorkers==0 (default), function is blocking : it completes its job before returning to caller.; * - When nbWorkers>=1, function is non-blocking : it copies a portion of input, distributes jobs to internal worker threads, flush to output whatever is available,; * and then immediately returns, just indicating that there is some data remaining to be flushed.; * The function nonetheless guarantees forward progress : it will return only after it reads or write at least 1+ byte.; * - Exception : if the first call requests a ZSTD_e_end directive and provides enough dstCapacity, the function delegates to ZSTD_compress2() which is always blocking.; * - @return provides a minimum amount of data remaining to be flushed from internal buffers; * or an error code, which can be tested using ZSTD_isError().; * if @return != 0, flush is not fully completed, there is still some data left within internal buffers.; * This is useful for ZSTD_e_flush, since in this case more flushes are necessary to empty all buffers.; * For ZSTD_e_end, @return == 0 when internal buffers are fully flushed and frame is completed.; * - after a ZSTD_e_end directive, if internal buffer is not fully flushed (@return != 0),; * only ZSTD_e_end or ZSTD_e_flush operations are allowed.; * Before starting a new compression job, or changing compression parameters,; * it is required to fully flush internal buffers.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:825,avail,available,825,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,2,"['avail', 'error']","['available', 'error']"
Availability,"/*! ZSTD_compress_frameChunk() :; * Compress a chunk of data into one or multiple blocks.; * All blocks will be terminated, all input will be consumed.; * Function will issue an error if there is not enough `dstCapacity` to hold the compressed content.; * Frame is supposed already started (header already produced); * @return : compressed size, or an error code; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:178,error,error,178,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,2,['error'],['error']
Availability,"/*! ZSTD_compress_usingCDict_advanced() :; * Note : this function is now REDUNDANT.; * It can be replaced by ZSTD_compress2(), in combination with ZSTD_CCtx_loadDictionary() and other parameter setters.; * This prototype will be marked as deprecated and generate compilation warning in some future version */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:73,REDUNDANT,REDUNDANT,73,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['REDUNDANT'],['REDUNDANT']
Availability,"/*! ZSTD_copyCCtx() :; * Duplicate an existing context `srcCCtx` into another one `dstCCtx`.; * Only works during stage ZSTDcs_init (i.e. after creation, but before first call to ZSTD_compressContinue()).; * pledgedSrcSize==0 means ""unknown"".; * @return : 0, or an error code */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:265,error,error,265,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['error'],['error']
Availability,"/*! ZSTD_copyCCtx_internal() :; * Duplicate an existing context `srcCCtx` into another one `dstCCtx`.; * Only works during stage ZSTDcs_init (i.e. after creation, but before first call to ZSTD_compressContinue()).; * The ""context"", in this case, refers to the hash and chain tables,; * entropy tables, and dictionary references.; * `windowLog` value is enforced if != 0, otherwise value is copied from srcCCtx.; * @return : 0, or an error code */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:433,error,error,433,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['error'],['error']
Availability,"/*! ZSTD_dParam_getBounds() :; * All parameters must belong to an interval with lower and upper bounds,; * otherwise they will either trigger an error or be automatically clamped.; * @return : a structure, ZSTD_bounds, which contains; * - an error status field, which must be tested using ZSTD_isError(); * - both lower and upper bounds, inclusive; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:145,error,error,145,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,2,['error'],['error']
Availability,"/*! ZSTD_decompress() :; * `compressedSize` : must be the _exact_ size of some number of compressed and/or skippable frames.; * `dstCapacity` is an upper bound of originalSize to regenerate.; * If user cannot imply a maximum upper bound, it's better to use streaming mode to decompress data.; * @return : the number of bytes decompressed into `dst` (<= `dstCapacity`),; * or an errorCode if it fails (which can be tested using ZSTD_isError()). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:378,error,errorCode,378,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['errorCode']
Availability,"/*! ZSTD_findFrameCompressedSize() :; * `src` should point to the start of a ZSTD frame or skippable frame.; * `srcSize` must be >= first frame size; * @return : the compressed size of the first frame starting at `src`,; * suitable to pass as `srcSize` to `ZSTD_decompress` or similar,; * or an error code if input is invalid */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:295,error,error,295,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/*! ZSTD_getDecompressedSize() :; * NOTE: This function is now obsolete, in favor of ZSTD_getFrameContentSize().; * Both functions work the same way, but ZSTD_getDecompressedSize() blends; * ""empty"", ""unknown"" and ""error"" results to the same return value (0),; * while ZSTD_getFrameContentSize() gives them separate return values.; * @return : decompressed size of `src` frame content _if known and not empty_, 0 otherwise. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:215,error,error,215,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/*! ZSTD_getDictID_fromFrame() :; * Provides the dictID required to decompress frame stored within `src`.; * If @return == 0, the dictID could not be decoded.; * This could for one of the following reasons :; * - The frame does not require a dictionary (most common case).; * - The frame was built with dictID intentionally removed.; * Needed dictionary is a hidden information.; * Note : this use case also happens when using a non-conformant dictionary.; * - `srcSize` is too small, and as a result, frame header could not be decoded.; * Note : possible if `srcSize < ZSTD_FRAMEHEADERSIZE_MAX`.; * - This is not a Zstandard frame.; * When identifying the exact failure cause, it's possible to use; * ZSTD_getFrameHeader(), which will provide a more precise error code. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c:663,failure,failure,663,builtins/zstd/decompress/zstd_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c,2,"['error', 'failure']","['error', 'failure']"
Availability,"/*! ZSTD_getDictID_fromFrame() :; * Provides the dictID required to decompressed the frame stored within `src`.; * If @return == 0, the dictID could not be decoded.; * This could for one of the following reasons :; * - The frame does not require a dictionary to be decoded (most common case).; * - The frame was built with dictID intentionally removed. Whatever dictionary is necessary is a hidden information.; * Note : this use case also happens when using a non-conformant dictionary.; * - `srcSize` is too small, and as a result, the frame header could not be decoded (only possible if `srcSize < ZSTD_FRAMEHEADERSIZE_MAX`).; * - This is not a Zstandard frame.; * When identifying the exact failure cause, it's possible to use ZSTD_getFrameHeader(), which will provide a more precise error code. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:695,failure,failure,695,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,2,"['error', 'failure']","['error', 'failure']"
Availability,/*! ZSTD_getErrorName() :; * provides error code string from function result (useful for debugging) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_common.c:38,error,error,38,builtins/zstd/common/zstd_common.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_common.c,1,['error'],['error']
Availability,/*! ZSTD_getErrorString() :; * provides error code string from enum */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_common.c:40,error,error,40,builtins/zstd/common/zstd_common.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_common.c,1,['error'],['error']
Availability,"/*! ZSTD_getFrameContentSize() : requires v1.3.0+; * `src` should point to the start of a ZSTD encoded frame.; * `srcSize` must be at least as large as the frame header.; * hint : any size >= `ZSTD_frameHeaderSize_max` is large enough.; * @return : - decompressed size of `src` frame content, if known; * - ZSTD_CONTENTSIZE_UNKNOWN if the size cannot be determined; * - ZSTD_CONTENTSIZE_ERROR if an error occurred (e.g. invalid magic number, srcSize too small); * note 1 : a 0 return value means the frame is valid but ""empty"".; * note 2 : decompressed size is an optional field, it may not be present, typically in streaming mode.; * When `return==ZSTD_CONTENTSIZE_UNKNOWN`, data to decompress could be any size.; * In which case, it's necessary to use streaming mode to decompress data.; * Optionally, application can rely on some implicit limit,; * as ZSTD_decompress() only needs an upper bound of decompressed size.; * (For example, data could be necessarily cut into blocks <= 16 KB).; * note 3 : decompressed size is always present when compression is completed using single-pass functions,; * such as ZSTD_compress(), ZSTD_compressCCtx() ZSTD_compress_usingDict() or ZSTD_compress_usingCDict().; * note 4 : decompressed size can be very large (64-bits value),; * potentially larger than what local system can handle as a single memory segment.; * In which case, it's necessary to use streaming mode to decompress data.; * note 5 : If source is untrusted, decompressed size could be wrong or intentionally modified.; * Always ensure return value fits within application's authorized limits.; * Each application can set its own limits.; * note 6 : This function replaces ZSTD_getDecompressedSize() */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:399,error,error,399,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/*! ZSTD_getFrameHeader() :; * decode Frame Header, or requires larger `srcSize`.; * @return : 0, `zfhPtr` is correctly filled,; * >0, `srcSize` is too small, value is wanted `srcSize` amount,; * or an error code, which can be tested using ZSTD_isError() */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:202,error,error,202,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/*! ZSTD_initStaticCDict_advanced() :; * Generate a digested dictionary in provided memory area.; * workspace: The memory area to emplace the dictionary into.; * Provided pointer must 8-bytes aligned.; * It must outlive dictionary usage.; * workspaceSize: Use ZSTD_estimateCDictSize(); * to determine how large workspace must be.; * cParams : use ZSTD_getCParams() to transform a compression level; * into its relevants cParams.; * @return : pointer to ZSTD_CDict*, or NULL if error (size too small); * Note : there is no corresponding ""free"" function.; * Since workspace was allocated externally, it must be freed externally.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:477,error,error,477,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['error'],['error']
Availability,/*! ZSTD_isError() :; * tells if a return value is an error code; * symbol is required for external callers */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_common.c:54,error,error,54,builtins/zstd/common/zstd_common.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_common.c,1,['error'],['error']
Availability,"/*! ZSTD_loadDictionaryContent() :; * @return : 0, or an error code; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:57,error,error,57,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['error'],['error']
Availability,"/*! ZSTD_resetCStream() :; * This function is deprecated, and is equivalent to:; * ZSTD_CCtx_reset(zcs, ZSTD_reset_session_only);; * ZSTD_CCtx_setPledgedSrcSize(zcs, pledgedSrcSize);; *; * start a new frame, using same parameters from previous frame.; * This is typically useful to skip dictionary loading stage, since it will re-use it in-place.; * Note that zcs must be init at least once before using ZSTD_resetCStream().; * If pledgedSrcSize is not known at reset time, use macro ZSTD_CONTENTSIZE_UNKNOWN.; * If pledgedSrcSize > 0, its value must be correct, as it will be written in header, and controlled at the end.; * For the time being, pledgedSrcSize==0 is interpreted as ""srcSize unknown"" for compatibility with older programs,; * but it will change to mean ""empty"" in future version, so use macro ZSTD_CONTENTSIZE_UNKNOWN instead.; * @return : 0, or an error code (which can be tested using ZSTD_isError()); * Note : this prototype will be marked as deprecated and generate compilation warnings on reaching v1.5.x; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:865,error,error,865,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,/*! ZSTD_writeEpilogue() :; * Ends a frame.; * @return : nb of bytes written into dst (or an error code) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:93,error,error,93,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['error'],['error']
Availability,/*! \brief computes the error of the DNN; *; *; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:24,error,error,24,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['error'],['error']
Availability,/*! \brief error functions to be chosen from; *; *; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:11,error,error,11,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['error'],['error']
Availability,"/*! \class TMVA::IPruneTool; \ingroup TMVA; IPruneTool - a helper interface class to prune a decision tree. Any tool which implements the interface should provide two modes for tree pruning:. 1. automatically find the ""best"" prune strength by minimizing the error rate on a test sample; if SetAutomatic() is called, or if automatic = kTRUE argument is set in CalculatePruningInfo(); In this case, the PruningInfo object returned contains the error rate of the optimally pruned; tree, the optimal prune strength, and the sequence of nodes to prune to obtain the optimal; pruned tree from the original DecisionTree. 2. a user-provided pruning strength parameter is used to prune the tree, in which case the returned; PruningInfo object has QualityIndex = -1, PruneStrength = user prune strength, and PruneSequence; is the list of nodes to prune; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/IPruneTool.h:258,error,error,258,tmva/tmva/inc/TMVA/IPruneTool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/IPruneTool.h,2,['error'],['error']
Availability,"/*! \class TMVA::IPythonInteractive; \ingroup TMVA. This class is needed by JsMVA, and it's a helper class for tracking errors during; the training in Jupyter notebook. It’s only initialized in Jupyter notebook context.; In initialization we specify some title, and a TGraph will be created for every title.; We can add new data points easily to all TGraphs. These graphs are added to a; TMultiGraph, and during an interactive training we get this TMultiGraph object; and plot it with JsROOT.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBase.h:120,error,errors,120,tmva/tmva/inc/TMVA/MethodBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBase.h,1,['error'],['errors']
Availability,"/*!; * /brief processes a node from the export trie, and its children.; *; * To my knowledge there is no documentation of the encoded format of this data; * other than in the heads of the Apple linker engineers. To that end hopefully; * this comment and the implementation below can serve to light the way for; * anyone crazy enough to come down this path in the future.; *; * This function reads and preserves the trie structure of the export trie. To; * my knowledge there is no code anywhere else that reads the data and preserves; * the Trie. LD64 (sources available at opensource.apple.com) has a similar; * implementation that parses the export trie into a vector. That code as well; * as LLVM's libObject MachO implementation were the basis for this.; *; * The export trie is an encoded trie. The node serialization is a bit awkward.; * The below pseudo-code is the best description I've come up with for it.; *; * struct SerializedNode {; * ULEB128 TerminalSize;; * struct TerminalData { <-- This is only present if TerminalSize > 0; * ULEB128 Flags;; * ULEB128 Address; <-- Present if (! Flags & REEXPORT ); * ULEB128 Other; <-- Present if ( Flags & REEXPORT ||; * Flags & STUB_AND_RESOLVER ); * char[] ImportName; <-- Present if ( Flags & REEXPORT ); * }; * uint8_t ChildrenCount;; * Pair<char[], ULEB128> ChildNameOffsetPair[ChildrenCount];; * SerializedNode Children[ChildrenCount]; * }; *; * Terminal nodes are nodes that represent actual exports. They can appear; * anywhere in the tree other than at the root; they do not need to be leaf; * nodes. When reading the data out of the trie this routine reads it in-order,; * but it puts the child names and offsets directly into the child nodes. This; * results in looping over the children twice during serialization and; * de-serialization, but it makes the YAML representation more human readable.; *; * Below is an example of the graph from a ""Hello World"" executable:; *; * -------; * | '' |; * -------; * |; * -------; * | '_' |; * --",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/obj2yaml/macho2yaml.cpp:341,down,down,341,interpreter/llvm-project/llvm/tools/obj2yaml/macho2yaml.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/obj2yaml/macho2yaml.cpp,2,"['avail', 'down']","['available', 'down']"
Availability,"/*!; * Alternative for ZSTD_compressStream2(zcs, output, input, ZSTD_e_continue).; * NOTE: The return value is different. ZSTD_compressStream() returns a hint for; * the next read size (if non-zero and not an error). ZSTD_compressStream2(); * returns the minimum nb of bytes left to flush (if non-zero and not an error).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:209,error,error,209,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,2,['error'],['error']
Availability,"/*!; * NO_FORWARD_PROGRESS_MAX :; * maximum allowed nb of calls to ZSTD_decompressStream(); * without any forward progress; * (defined as: no byte read from input, and no byte flushed to output); * before triggering an error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c:219,error,error,219,builtins/zstd/decompress/zstd_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c,1,['error'],['error']
Availability,"/*!; Tutorial :; ----------; (Note : these functions only decompress FSE-compressed blocks.; If block is uncompressed, use memcpy() instead; If block is a single repeated byte, use memset() instead ). The first step is to obtain the normalized frequencies of symbols.; This can be performed by FSE_readNCount() if it was saved using FSE_writeNCount().; 'normalizedCounter' must be already allocated, and have at least 'maxSymbolValuePtr[0]+1' cells of signed short.; In practice, that means it's necessary to know 'maxSymbolValue' beforehand,; or size the table to handle worst case situations (typically 256).; FSE_readNCount() will provide 'tableLog' and 'maxSymbolValue'.; The result of FSE_readNCount() is the number of bytes read from 'rBuffer'.; Note that 'rBufferSize' must be at least 4 bytes, even if useful information is less than that.; If there is an error, the function will return an error code, which can be tested using FSE_isError(). The next step is to build the decompression tables 'FSE_DTable' from 'normalizedCounter'.; This is performed by the function FSE_buildDTable().; The space required by 'FSE_DTable' must be already allocated using FSE_createDTable().; If there is an error, the function will return an error code, which can be tested using FSE_isError(). `FSE_DTable` can then be used to decompress `cSrc`, with FSE_decompress_usingDTable().; `cSrcSize` must be strictly correct, otherwise decompression will fail.; FSE_decompress_usingDTable() result will tell how many bytes were regenerated (<=`dstCapacity`).; If there is an error, the function will return an error code, which can be tested using FSE_isError(). (ex: dst buffer too small); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:864,error,error,864,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,6,['error'],['error']
Availability,"/*!; Tutorial :; ----------; The first step is to count all symbols. FSE_count() does this job very fast.; Result will be saved into 'count', a table of unsigned int, which must be already allocated, and have 'maxSymbolValuePtr[0]+1' cells.; 'src' is a table of bytes of size 'srcSize'. All values within 'src' MUST be <= maxSymbolValuePtr[0]; maxSymbolValuePtr[0] will be updated, with its real value (necessarily <= original value); FSE_count() will return the number of occurrence of the most frequent symbol.; This can be used to know if there is a single symbol within 'src', and to quickly evaluate its compressibility.; If there is an error, the function will return an ErrorCode (which can be tested using FSE_isError()). The next step is to normalize the frequencies.; FSE_normalizeCount() will ensure that sum of frequencies is == 2 ^'tableLog'.; It also guarantees a minimum of 1 to any Symbol with frequency >= 1.; You can use 'tableLog'==0 to mean ""use default tableLog value"".; If you are unsure of which tableLog value to use, you can ask FSE_optimalTableLog(),; which will provide the optimal valid tableLog given sourceSize, maxSymbolValue, and a user-defined maximum (0 means ""default""). The result of FSE_normalizeCount() will be saved into a table,; called 'normalizedCounter', which is a table of signed short.; 'normalizedCounter' must be already allocated, and have at least 'maxSymbolValue+1' cells.; The return value is tableLog if everything proceeded as expected.; It is 0 if there is a single symbol within distribution.; If there is an error (ex: invalid tableLog value), the function will return an ErrorCode (which can be tested using FSE_isError()). 'normalizedCounter' can be saved in a compact manner to a memory area using FSE_writeNCount().; 'buffer' must be already allocated.; For guaranteed success, buffer size must be at least FSE_headerBound().; The result of the function is the number of bytes written into 'buffer'.; If there is an error, the function will",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:642,error,error,642,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,2,"['Error', 'error']","['ErrorCode', 'error']"
Availability,"/*!< maximum compression level available */; /***************************************; * Explicit context; ***************************************/; /*= Compression context; * When compressing many times,; * it is recommended to allocate a context just once,; * and re-use it for each successive compression operation.; * This will make workload friendlier for system's memory.; * Note : re-using context is just a speed / resource optimization.; * It doesn't change the compression ratio, which remains identical.; * Note 2 : In multi-threaded environments,; * use one different context per thread for parallel execution.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:31,avail,available,31,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['avail'],['available']
Availability,/*!< provides readable string from an error code */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:38,error,error,38,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,/*!< tells if a `size_t` function result is an error code */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:47,error,error,47,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,/*!< vector of parameter errors */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/rtools/inc/Math/RMinimizer.h:25,error,errors,25,math/rtools/inc/Math/RMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/rtools/inc/Math/RMinimizer.h,1,['error'],['errors']
Availability,/** ////////////////////////////////////////////////////////////////////////////////////////////; * \class HistogramUncertaintyBase; * \ingroup HistFactory; * Base class to store the up and down variations for histogram uncertainties.; * Use the derived classes for actual models.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:190,down,down,190,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,1,['down'],['down']
Availability,"/** @brief constructor (forks!); *; * Creates a bidirectional communications channel between this process; * and a child the constructor forks. On return from the constructor,; * isParent() and isChild() can be used to tell the parent end from the; * child end of the pipe. In the child, all other open BidirMMapPipes; * are closed.; *; * @param useExceptions read()/write() error reporting also done using; * exceptions; * @param useSocketpair use a socketpair instead of a pair or pipes; *; * Normally, exceptions are thrown for all serious I/O errors (apart; * from end of file). Setting useExceptions to false will force the; * read() and write() methods to only report serious I/O errors using; * flags.; *; * When useSocketpair is true, use a pair of Unix domain sockets; * created using socketpair instead a pair of pipes. The advantage is; * that only one pair of file descriptors is needed instead of two; * pairs which are needed for the pipe pair. Performance should very; * similar on most platforms, especially if mmap works, since only; * very little data is sent through the pipe(s)/socketpair.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:375,error,error,375,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,3,['error'],"['error', 'errors']"
Availability,"/** @brief evaluate Faddeeva function for complex argument (fast version); *; * @author Manuel Schiller <manuel.schiller@nikhef.nl>; * @date 2013-02-21; *; * Calculate the value of the Faddeeva function @f$w(z) = \exp(-z^2); * \mathrm{erfc}(-i z)@f$.; *; * This is the ""fast"" version of the faddeeva routine above. Fast means that; * is takes roughly half the amount of CPU of the slow version of the; * routine, but is a little less accurate.; *; * To be fast, chose @f$t_m=8@f$ and @f$N=11@f$ which should give accuracies; * around 1e-7.; *; * In the square -8 <= Re(z) <= 8, -8 <= Im(z) <= 8, the routine is accurate; * to better than 4e-7 relative, the average relative error is better than; * 5e-9. On a modern x86_64 machine, the routine is roughly five times as; * fast than the old CERNLIB implementation, or about 30% faster than the; * interpolation/lookup table based fast method used previously in RooFit,; * and offers better accuracy than the latter (the relative error is roughly; * a factor 280 smaller than the old interpolation/table lookup routine).; *; * For large @f$|z|@f$, the familiar continued fraction approximation; *; * @f[ w(z)=\frac{-iz/\sqrt{\pi}}{-z^2+\frac{1/2}{1+\frac{2/2}{-z^2 +; * \frac{3/2}{1+\ldots}}}} @f]; *; * is used, truncated at the ellipsis (""..."") in the formula; for @f$|z| >; * 8@f$, @f$Im(z)>0@f$ it will give full float precision at a smaller; * computational cost than the method described above. (For @f$|z|>8@f$,; * @f$Im(z)<0@f$, the symmetry property @f$w(x-iy)=2e^{-(x+iy)^2-w(x+iy)}@f$; * is used.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMath.h:674,error,error,674,roofit/roofitcore/inc/RooMath.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMath.h,2,['error'],['error']
Availability,"/** @brief evaluate Faddeeva function for complex argument; *; * @author Manuel Schiller <manuel.schiller@nikhef.nl>; * @date 2013-02-21; *; * Calculate the value of the Faddeeva function @f$w(z) = \exp(-z^2); * \mathrm{erfc}(-i z)@f$.; *; * The method described in; *; * S.M. Abrarov, B.M. Quine: ""Efficient algorithmic implementation of; * Voigt/complex error function based on exponential series approximation""; * published in Applied Mathematics and Computation 218 (2011) 1894-1902; * doi:10.1016/j.amc.2011.06.072; *; * is used. At the heart of the method (equation (14) of the paper) is the; * following Fourier series based approximation:; *; * @f[ w(z) \approx \frac{i}{2\sqrt{\pi}}\left(; * \sum^N_{n=nullptr} a_n \tau_m\left(; * \frac{1-e^{i(n\pi+\tau_m z)}}{n\pi + \tau_m z} -; * \frac{1-e^{i(-n\pi+\tau_m z)}}{n\pi - \tau_m z}; * \right) - a_0 \frac{1-e^{i \tau_m z}}{z}; * \right) @f]; *; * The coefficients @f$a_b@f$ are given by:; *; * @f[ a_n=\frac{2\sqrt{\pi}}{\tau_m}; * \exp\left(-\frac{n^2\pi^2}{\tau_m^2}\right) @f]; *; * To achieve machine accuracy in double precision floating point arithmetic; * for most of the upper half of the complex plane, chose @f$t_m=12@f$ and; * @f$N=23@f$ as is done in the paper.; *; * There are two complications: For Im(z) negative, the exponent in the; * equation above becomes so large that the roundoff in the rest of the; * calculation is amplified enough that the result cannot be trusted.; * Therefore, for Im(z) < 0, the symmetry of the erfc function under the; * transformation z --> -z is used to avoid accuracy issues for Im(z) < 0 by; * formulating the problem such that the calculation can be done for Im(z) > 0; * where the accuracy of the method is fine, and some postprocessing then; * yields the desired final result.; *; * Second, the denominators in the equation above become singular at; * @f$z = n * pi / 12@f$ (for 0 <= n < 24). In a tiny disc around these; * points, Taylor expansions are used to overcome that difficulty.; *",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMath.h:356,error,error,356,roofit/roofitcore/inc/RooMath.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMath.h,1,['error'],['error']
Availability,/** @brief flush buffers with unwritten data; *; * This forces unwritten data to be written to the other end. The call; * will block until this has been done (or the attempt failed with an; * error).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:192,error,error,192,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['error'],['error']
Availability,"/** @brief logical failure (e.g. I/O on closed BidirMMapPipe); *; * @returns true in case of grave logical error (I/O on closed pipe,...); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:19,failure,failure,19,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,2,"['error', 'failure']","['error', 'failure']"
Availability,"/** @brief poll a set of pipes for events (ready to read from, ready to; * write to, error); *; * @param pipes set of pipes to check; * @param timeout timeout in milliseconds; * @returns positive number: number of pipes which have; * status changes, 0: timeout, or no pipes with; * status changed, -1 on error; *; * Timeout can be zero (check for specified events, and return), finite; * (wait at most timeout milliseconds before returning), or -1; * (infinite). The poll method returns when the timeout has elapsed,; * or if an event occurs on one of the pipes being polled, whichever; * happens earlier.; *; * Pipes is a vector of one or more PollEntries, which each list a pipe; * and events to poll for. If events is left empty (zero), all; * conditions are polled for, otherwise only the indicated ones. On; * return, the revents fields contain the events that occurred for each; * pipe; error Error, EndOfFile or Invalid events are always set,; * regardless of whether they were in the set of requested events.; *; * poll may block slightly longer than specified by timeout due to OS; * timer granularity and OS scheduling. Due to its implementation, the; * poll call can also return early if the remote end of the page sends; * a free page while polling (which is put on that pipe's freelist),; * while that pipe is polled for e.g Reading. The status of the pipe is; * indicated correctly in revents, and the caller can simply poll; * again. (The reason this is done this way is because it helps to; * replenish the pool of free pages and queue busy pages without; * blocking.); *; * Here's a piece of example code waiting on two pipes; if they become; * readable they are read:; * @code; * #include <unistd.h>; * #include <cstdlib>; * #include <string>; * #include <sstream>; * #include <iostream>; *; * #include ""BidirMMapPipe.h""; *; * // what to execute in the child; * int randomchild(BidirMMapPipe& pipe); * {; * ::srand48(::getpid());; * for (int i = 0; i < 5; ++i) {; * // sleep a random",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:85,error,error,85,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,4,"['Error', 'error']","['Error', 'error']"
Availability,"/** @brief read from pipe; *; * @param addr where to put read data; * @param sz size of data to read (in bytes); * @returns size of data read, or 0 in case of end-of-file; *; * read may block until data from other end is available. It will; * return 0 if the other end closed the pipe.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:221,avail,available,221,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['avail'],['available']
Availability,"/** @brief receive pages from other end (non-blocking); *; * @returns number of pages received; *; * like recvpages(), but does not block if nothing is available for; * reading; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:152,avail,available,152,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['avail'],['available']
Availability,"/** @brief return true if not serious error (fail/bad); *; * @returns true if stream is does not have serious error (fail/bad); *; * (if EOF, this is still true); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:38,error,error,38,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,2,['error'],['error']
Availability,/** @brief return true if serious error (fail/bad); *; * @returns true if stream has a serious error (fail/bad); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:34,error,error,34,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,2,['error'],['error']
Availability,"/** @brief status of stream is good; *; * @returns true if pipe is good (no errors, eof, ...); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:76,error,errors,76,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['error'],['errors']
Availability,/** @brief true on I/O error; *; * @returns true on I/O error; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:23,error,error,23,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,2,['error'],['error']
Availability,"/** @brief write to pipe; *; * @param addr where to get data to write from; * @param sz size of data to write (in bytes); * @returns size of data written, or 0 in case of end-of-file; *; * write may block until data can be written to other end (depends a; * bit on available buffer space). It will return 0 if the other end; * closed the pipe. The data is queued to be written on the next; * convenient occasion, or it can be forced out with flush().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:265,avail,available,265,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['avail'],['available']
Availability,"/** @defgroup MultiRoot Multidimensional ROOT finding; Classes for finding the roots of a multi-dimensional system.; @ingroup NumAlgo; */; /**; Class for Multidimensional root finding algorithms bassed on GSL. This class is used to solve a; non-linear system of equations:. f1(x1,....xn) = 0; f2(x1,....xn) = 0; ..................; fn(x1,....xn) = 0. See the GSL <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Multidimensional-Root_002dFinding.html""> online manual</A> for; information on the GSL MultiRoot finding algorithms. The available GSL algorithms require the derivatives of the supplied functions or not (they are; computed internally by GSL). In the first case the user needs to provide a list of multidimensional functions implementing the; gradient interface (ROOT::Math::IMultiGradFunction) while in the second case it is enough to supply a list of; functions impelmenting the ROOT::Math::IMultiGenFunction interface.; The available algorithms requiring derivatives (see also the GSL; <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Algorithms-using-Derivatives.html"">documentation</A> ); are the followings:; <ul>; <li><tt>ROOT::Math::GSLMultiRootFinder::kHybridSJ</tt> with name <i>""HybridSJ""</i>: modified Powell's hybrid; method as implemented in HYBRJ in MINPACK; <li><tt>ROOT::Math::GSLMultiRootFinder::kHybridJ</tt> with name <i>""HybridJ""</i>: unscaled version of the; previous algorithm</li>; <li><tt>ROOT::Math::GSLMultiRootFinder::kNewton</tt> with name <i>""Newton""</i>: Newton method </li>; <li><tt>ROOT::Math::GSLMultiRootFinder::kGNewton</tt> with name <i>""GNewton""</i>: modified Newton method </li>; </ul>; The algorithms without derivatives (see also the GSL; <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Algorithms-without-Derivatives.html"">documentation</A> ); are the followings:; <ul>; <li><tt>ROOT::Math::GSLMultiRootFinder::kHybridS</tt> with name <i>""HybridS""</i>: same as HybridSJ but using; finate difference approximation for the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMultiRootFinder.h:542,avail,available,542,math/mathmore/inc/Math/GSLMultiRootFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMultiRootFinder.h,2,['avail'],['available']
Availability,"/** @name --- Static methods ---; This methods don't require to use a Derivator object, and are designed to be used in; fast calculation. Error and status code cannot be retrieved in this case; */; /**; Computes the numerical derivative of a function f at a point x.; It uses Derivator::EvalCentral to compute the derivative using an; adaptive central difference algorithm with a step size h; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h:138,Error,Error,138,math/mathmore/inc/Math/Derivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h,1,['Error'],['Error']
Availability,"/** @name Special Functions from MathCore */; /**. Error function encountered in integrating the normal distribution. \f[ erf(x) = \frac{2}{\sqrt{\pi}} \int_{0}^{x} e^{-t^2} dt \f]. For detailed description see; <A HREF=""http://mathworld.wolfram.com/Erf.html"">; Mathworld</A>.; The implementation used is that of; <A HREF=""http://www.gnu.org/software/gsl/manual/gsl-ref_7.html#SEC102"">GSL</A>.; This function is provided only for convenience,; in case your standard C++ implementation does not support; it. If it does, please use these standard version!. @ingroup SpecFunc. */; // (26.x.21.1) error function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/SpecFuncMathCore.h:51,Error,Error,51,math/mathcore/inc/Math/SpecFuncMathCore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/SpecFuncMathCore.h,2,"['Error', 'error']","['Error', 'error']"
Availability,"/** @name Statepoint Specific Properties */; ///@{; /// If the type specified can be reliably distinguished, returns true for; /// pointers to GC managed locations and false for pointers to non-GC; /// managed locations. Note a GCStrategy can always return 'std::nullopt'; /// (i.e. an empty optional indicating it can't reliably distinguish.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GCStrategy.h:85,reliab,reliably,85,interpreter/llvm-project/llvm/include/llvm/IR/GCStrategy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GCStrategy.h,2,['reliab'],['reliably']
Availability,/** @summary Angle in degree for axis labels tilt when available space is not enough */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:55,avail,available,55,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['avail'],['available']
Availability,/** @summary Calculate efficiency error low */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:34,error,error,34,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['error'],['error']
Availability,/** @summary Calculate efficiency error low up */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:34,error,error,34,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['error'],['error']
Availability,"/** @summary Change item name; * @desc When available, used for svg:title property; * @private */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:44,avail,available,44,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['avail'],['available']
Availability,/** @summary Change mask */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:20,mask,mask,20,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['mask'],['mask']
Availability,/** @summary Draw TH2 histogram in error mode; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:35,error,error,35,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['error'],['error']
Availability,/** @summary Draw histogram as filled errors */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:38,error,errors,38,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['error'],['errors']
Availability,/** @summary Extract errors for TGraphMultiErrors */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:21,error,errors,21,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['error'],['errors']
Availability,"/** @summary Function to initiate SaveAs dialog from client side; * @desc Following arguments has to be specified:; * args.websocket - current available connection, used to send 'FILEDIALOG:' request; * args.filename - initial file name in the dialog; * args.title - title used for the dialog; * args.can_change_path - if it is allowed to change path; * args.working_path - initial working path in dialog like '/Home/storage'; * args.filters - array of supported extensions like ['C++ files (*.cxx *.cpp *.c)', 'Text files (*.txt)', 'Any files (*)' ]; * args.filter - selected extension like 'Any files'; * args.onOk - handler when file is selected and 'Ok' button is pressed; * args.onCancel - handler when 'Cancel' button is pressed; * args.onFailure - handler when any failure appears, dialog will be closed afterwards */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js:143,avail,available,143,ui5/browser/controller/FileDialog.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js,2,"['avail', 'failure']","['available', 'failure']"
Availability,/** @summary Generate mask for given bit; * @param {number} n bit number; * @return {Number} produced mask; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:22,mask,mask,22,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['mask'],['mask']
Availability,/** @summary Reformat text node if it includes greek or special symbols; * @desc Used in PDF generation where greek symbols are not available; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:132,avail,available,132,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['avail'],['available']
Availability,"/** @summary Return communication mode with the server; * @desc; * kOffline means no server there,; * kLessTraffic advise not to send commands if offline functionality available; * kNormal is standard functionality with RCanvas on server side */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:168,avail,available,168,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['avail'],['available']
Availability,/** @summary Returns size which availble for 3D drawing.; * @desc One uses frame sizes for the 3D drawing - like TH2/TH3 objects; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:32,avail,availble,32,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['avail'],['availble']
Availability,"/** @summary Send keep-alive message.; * @desc Only for internal use, only when used with web sockets; * @private */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/webwindow.mjs:23,alive,alive,23,js/modules/webwindow.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/webwindow.mjs,1,['alive'],['alive']
Availability,/** @summary Set callbacks receiver.; * @param {object} obj - object with receiver functions; * @param {function} obj.onWebsocketMsg - called when new data received from RWebWindow; * @param {function} obj.onWebsocketOpened - called when connection established; * @param {function} obj.onWebsocketClosed - called when connection closed; * @param {function} obj.onWebsocketError - called when get error via the connection */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/webwindow.mjs:396,error,error,396,js/modules/webwindow.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/webwindow.mjs,1,['error'],['error']
Availability,"/** @summary Submit asynchronous http request; * @desc Following requests kind can be specified:; * - 'bin' - abstract binary data, result as string; * - 'buf' - abstract binary data, result as ArrayBuffer (default); * - 'text' - returns req.responseText; * - 'object' - returns parse(req.responseText); * - 'multi' - returns correctly parsed multi.json request; * - 'xml' - returns req.responseXML; * - 'head' - returns request itself, uses 'HEAD' request method; * - 'post' - creates post request, submits req.send(post_data); * - 'postbuf' - creates post request, expects binary data as response; * @param {string} url - URL for the request; * @param {string} kind - kind of requested data; * @param {string} [post_data] - data submitted with post kind of request; * @return {Promise} Promise for requested data, result type depends from the kind; * @example; * import { httpRequest } from 'https://root.cern/js/latest/modules/core.mjs';; * httpRequest('https://root.cern/js/files/thstack.json.gz', 'object'); * .then(obj => console.log(`Get object of type ${obj._typename}`)); * .catch(err => console.error(err.message)); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:1105,error,error,1105,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['error'],['error']
Availability,/** @summary X size of the error marks for the histogram drawings */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:27,error,error,27,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['error'],['error']
Availability,/** @summary complementary error function; * @memberof Math */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:27,error,error,27,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['error'],['error']
Availability,/** @summary error function; * @memberof Math */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,error,error,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['error'],['error']
Availability,"/** @summary returns tooltip allowed flag; * @desc If available, checks in canvas painter; * @private */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:54,avail,available,54,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['avail'],['available']
Availability,/** @summary size in pixels of end error for E1 draw options */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:35,error,error,35,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['error'],['error']
Availability,"/** API class for the user interaction with the parameters;; serves as input to the minimizer as well as output from it;; users can interact: Fix/release parameters, set values and errors, etc.;; parameters can be accessed via their Parameter number (determined; internally by Minuit and followed the order how the parameters are created); or via their user-specified Name (10 character string).; Minuit has also an internal parameter number which is used during the minimization; (the fix parameter are skipped). The parameter number used in this class is the external; one. The class ROOT::Minuit2::MnUserTransformation is used to keep the; internal <-> external transformation; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnUserParameters.h:181,error,errors,181,math/minuit2/inc/Minuit2/MnUserParameters.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnUserParameters.h,1,['error'],['errors']
Availability,/** Basic constructor of GaussLegendreIntegrator.; \@param num Number of desired points to calculate the integration.; \@param eps Desired relative error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussLegendreIntegrator.h:148,error,error,148,math/mathcore/inc/Math/GaussLegendreIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussLegendreIntegrator.h,1,['error'],['error']
Availability,"/** Check two matrices for equality, taking floating point arithmetic errors into account. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h:70,error,errors,70,tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,2,['error'],['errors']
Availability,"/** Check two matrices for equality, taking floating point arithmetic errors into account. */; //static bool AlmostEquals(const Matrix_t &A, const Matrix_t &B, double epsilon = 0.1);; /** Add the constant \p beta to all the elements of matrix \p A and write the; * result into \p A.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h:70,error,errors,70,tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h,1,['error'],['errors']
Availability,"/** Compute the average element-wise absolute error of the matrices; * X and Y.; */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/Utility.h:46,error,error,46,tmva/tmva/test/DNN/Utility.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/Utility.h,1,['error'],['error']
Availability,"/** Compute the relative error of x and y. If their difference is too small,; * compute the absolute error instead. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/Utility.h:25,error,error,25,tmva/tmva/test/DNN/Utility.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/Utility.h,2,['error'],['error']
Availability,"/** Default Constructor.; If the tolerance are not given, use default values specified in ROOT::Math::IntegratorOneDimOptions; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:33,toler,tolerance,33,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,1,['toler'],['tolerance']
Availability,"/** Downsample the matrix A and check whether the downsampled version; * is equal to B, and if the winning indices are equal to the matrix ind. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNet.h:4,Down,Downsample,4,tmva/tmva/test/DNN/CNN/TestConvNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNet.h,2,"['Down', 'down']","['Downsample', 'downsampled']"
Availability,/** Emits an asm or object file for the given module to the filename. This; wraps several c++ only classes (among them a file stream). Returns any; error in ErrorMessage. Use LLVMDisposeMessage to dispose the message. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h:148,error,error,148,interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h,2,"['Error', 'error']","['ErrorMessage', 'error']"
Availability,/** Find minimum position iterating until convergence specified by the absolute and relative tolerance or; the maximum number of iteration is reached.; Return true if iterations converged successfully; \@param maxIter maximum number of iterations.; \@param absTol desired absolute error in the minimum position (default 1.E-8); \@param absTol desired relative error in the minimum position (default = 1.E-10); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BrentMinimizer1D.h:93,toler,tolerance,93,math/mathcore/inc/Math/BrentMinimizer1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BrentMinimizer1D.h,3,"['error', 'toler']","['error', 'tolerance']"
Availability,/** Finds the target corresponding to the given triple and stores it in \p T.; Returns 0 on success. Optionally returns any error in ErrorMessage.; Use LLVMDisposeMessage to dispose the message. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h:124,error,error,124,interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h,2,"['Error', 'error']","['ErrorMessage', 'error']"
Availability,"/** Generic Constructor of multi dimensional Integrator passing a function. By default uses the adaptive integration method. @param f integration function (multi-dim interface); @param type integration type (adaptive, MC methods, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param ncall number of function calls (apply only to MC integration methods); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h:269,Error,Error,269,math/mathcore/inc/Math/IntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h,2,['Error'],['Error']
Availability,"/** HUF_decompress() :; * Decompress HUF data from buffer 'cSrc', of size 'cSrcSize',; * into already allocated buffer 'dst', of minimum size 'dstSize'.; * `originalSize` : **must** be the ***exact*** size of original (uncompressed) data.; * Note : in contrast with FSE, HUF_decompress can regenerate; * RLE (cSrcSize==1) and uncompressed (cSrcSize==dstSize) data,; * because it knows size to regenerate (originalSize).; * @return : size of regenerated data (== originalSize),; * or an error code, which can be tested using HUF_isError(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h:486,error,error,486,builtins/zstd/common/huf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h,1,['error'],['error']
Availability,/** Increases the minimization step counter by the test error evaluation; * period and uses the current internal value of the test error to; * determine if the minimization has converged. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h:56,error,error,56,tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,4,['error'],['error']
Availability,/** Increases the minimization step counter by the test error evaluation; * period and uses the provided test error value to determine if the; * minimization has converged. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h:56,error,error,56,tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,4,['error'],['error']
Availability,"/** LLVMInitializeAllAsmParsers - The main program should call this function if; it wants all asm parsers that LLVM is configured to support, to make them; available via the TargetRegistry. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h:156,avail,available,156,interpreter/llvm-project/llvm/include/llvm-c/Target.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h,1,['avail'],['available']
Availability,"/** LLVMInitializeAllAsmPrinters - The main program should call this function if; it wants all asm printers that LLVM is configured to support, to make them; available via the TargetRegistry. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h:158,avail,available,158,interpreter/llvm-project/llvm/include/llvm-c/Target.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h,1,['avail'],['available']
Availability,"/** LLVMInitializeAllDisassemblers - The main program should call this function; if it wants all disassemblers that LLVM is configured to support, to make; them available via the TargetRegistry. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h:161,avail,available,161,interpreter/llvm-project/llvm/include/llvm-c/Target.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h,1,['avail'],['available']
Availability,/** LLVMInitializeAllTargetInfos - The main program should call this function if; it wants access to all available targets that LLVM is configured to; support. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h:105,avail,available,105,interpreter/llvm-project/llvm/include/llvm-c/Target.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h,1,['avail'],['available']
Availability,/** LLVMInitializeAllTargetMCs - The main program should call this function if; it wants access to all available target MC that LLVM is configured to; support. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h:103,avail,available,103,interpreter/llvm-project/llvm/include/llvm-c/Target.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h,1,['avail'],['available']
Availability,/** LLVMInitializeAllTargets - The main program should call this function if it; wants to link in all available targets that LLVM is configured to; support. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h:102,avail,available,102,interpreter/llvm-project/llvm/include/llvm-c/Target.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h,1,['avail'],['available']
Availability,/** MinimumError keeps the inv. 2nd derivative (inv. Hessian) used for; calculating the Parameter step size (-V*g) and for the covariance Update; (ErrorUpdator). The covariance matrix is equal to twice the inv. Hessian.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MinimumError.h:147,Error,ErrorUpdator,147,math/minuit2/inc/Minuit2/MinimumError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MinimumError.h,1,['Error'],['ErrorUpdator']
Availability,/** OpenMP error directive.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:11,error,error,11,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['error'],['error']
Availability,/** OpenMP masked directive.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:11,mask,masked,11,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['mask'],['masked']
Availability,/** OpenMP masked taskloop directive.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:11,mask,masked,11,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['mask'],['masked']
Availability,/** OpenMP masked taskloop simd directive.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:11,mask,masked,11,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['mask'],['masked']
Availability,/** OpenMP parallel masked directive.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:20,mask,masked,20,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['mask'],['masked']
Availability,/** OpenMP parallel masked taskloop directive.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:20,mask,masked,20,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['mask'],['masked']
Availability,/** OpenMP parallel masked taskloop simd directive.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:20,mask,masked,20,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['mask'],['masked']
Availability,"/** Reads a module from the specified path, returning via the OutMP parameter; a module provider which performs lazy deserialization. Returns 0 on success.; Optionally returns a human-readable error message via OutMessage.; This is deprecated. Use LLVMGetBitcodeModuleInContext2. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/BitReader.h:193,error,error,193,interpreter/llvm-project/llvm/include/llvm-c/BitReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/BitReader.h,1,['error'],['error']
Availability,/** Represents an @available(...) check.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:19,avail,available,19,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['avail'],['available']
Availability,/** Return the estimate of the absolute Error of the last Integral calculation. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:40,Error,Error,40,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,1,['Error'],['Error']
Availability,"/** Returns 0 in case of success, non-zero in case of a failure. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/c-index-test/c-index-test.c:56,failure,failure,56,interpreter/llvm-project/clang/tools/c-index-test/c-index-test.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/c-index-test/c-index-test.c,1,['failure'],['failure']
Availability,"/** Returns the X value corresponding to the function value fy for (xmin<x<xmax).; Method:; First, the grid search is used to bracket the maximum; with the step size = (xmax-xmin)/fNpx. This way, the step size; can be controlled via the SetNpx() function. If the function is; unimodal or if its extrema are far apart, setting the fNpx to; a small value speeds the algorithm up many times.; Then, Brent's method is applied on the bracketed interval. \@param maxIter maximum number of iterations.; \@param absTol desired absolute error in the minimum position.; \@param absTol desired relative error in the minimum position.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BrentRootFinder.h:528,error,error,528,math/mathcore/inc/Math/BrentRootFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BrentRootFinder.h,2,['error'],['error']
Availability,/** Returns the estimate of the absolute Error of the last derivative calculation. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RichardsonDerivator.h:41,Error,Error,41,math/mathcore/inc/Math/RichardsonDerivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RichardsonDerivator.h,1,['Error'],['Error']
Availability,/** Set the desired relative Error. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussLegendreIntegrator.h:29,Error,Error,29,math/mathcore/inc/Math/GaussLegendreIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussLegendreIntegrator.h,1,['Error'],['Error']
Availability,"/** Test the data loader by loading identical input and output data, running it; * through an identity neural network and computing the mean squared error,; * should obviously be zero. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestDataLoader.h:149,error,error,149,tmva/tmva/test/DNN/TestDataLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestDataLoader.h,2,['error'],['error']
Availability,/** This method is implemented only by the GSLRootFinder; and GSLRootFinderDeriv classes and will return an error if it's not one of them. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IRootFinderMethod.h:108,error,error,108,math/mathcore/inc/Math/IRootFinderMethod.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IRootFinderMethod.h,1,['error'],['error']
Availability,/** This value indicates that no linkage information is available; * for a provided CXCursor. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:56,avail,available,56,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['avail'],['available']
Availability,/** This value indicates that no visibility information is available; * for a provided CXCursor. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:59,avail,available,59,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['avail'],['available']
Availability,/** Train a linear neural network on a randomly generated linear mapping; * from an 32-dimensional input space to a 1-dimensional output space.; * Returns the error of the response of the network to the input containing; * only ones to the 1x32 matrix used to generate the training data.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestOptimization.h:159,error,error,159,tmva/tmva/test/DNN/TestOptimization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestOptimization.h,1,['error'],['error']
Availability,/** Train a linear neural network on a randomly generated linear mapping; * from an 8-dimensional input space to a 1-dimensional output space.; * Returns the error of the response of the network to the input containing; * only ones to the 1x8 matrix used to generate the training data.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMinimization.h:158,error,error,158,tmva/tmva/test/DNN/TestMinimization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMinimization.h,1,['error'],['error']
Availability,/** Train a linear neural network on data from two randomly generated linear mappings; * from a 8-dimensional input space to a 1-dimensional output space. Set weights; * corresponding to the second mapping to zero so that the neural network is forced to; * learn the first mapping.; * Returns the error of the response of the network to the input containing; * only ones to the 1x8 matrix used to generate the training data.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMinimization.h:297,error,error,297,tmva/tmva/test/DNN/TestMinimization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMinimization.h,1,['error'],['error']
Availability,/** ZSTD_adjustCParams_internal() :; * optimize `cPar` for a specified input (`srcSize` and `dictSize`).; * mostly downsize to reduce memory consumption and initialization latency.; * `srcSize` can be ZSTD_CONTENTSIZE_UNKNOWN when not known.; * `mode` is the mode for parameter adjustment. See docs for `ZSTD_cParamMode_e`.; * note : `srcSize==0` means 0!; * condition : cPar is presumed validated (can be checked using ZSTD_checkCParams()). */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:115,down,downsize,115,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['down'],['downsize']
Availability,/** ZSTD_buildSuperBlockEntropy() :; * Builds entropy for the super-block.; * @return : 0 on success or error code */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_superblock.c:104,error,error,104,builtins/zstd/compress/zstd_compress_superblock.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_superblock.c,1,['error'],['error']
Availability,"/** ZSTD_buildSuperBlockEntropy_literal() :; * Builds entropy for the super-block literals.; * Stores literals block type (raw, rle, compressed, repeat) and; * huffman description table to hufMetadata.; * @return : size of huffman description table or error code */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_superblock.c:252,error,error,252,builtins/zstd/compress/zstd_compress_superblock.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_superblock.c,1,['error'],['error']
Availability,/** ZSTD_buildSuperBlockEntropy_sequences() :; * Builds entropy for the super-block sequences.; * Stores symbol compression modes and fse table to fseMetadata.; * @return : size of fse tables or error code */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_superblock.c:195,error,error,195,builtins/zstd/compress/zstd_compress_superblock.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_superblock.c,1,['error'],['error']
Availability,"/** ZSTD_checkCParams() :; control CParam values remain within authorized range.; @return : 0, or an error code if one value is beyond authorized range */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:101,error,error,101,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['error'],['error']
Availability,"/** ZSTD_compressSubBlock_literal() :; * Compresses literals section for a sub-block.; * When we have to write the Huffman table we will sometimes choose a header; * size larger than necessary. This is because we have to pick the header size; * before we know the table size + compressed size, so we have a bound on the; * table size. If we guessed incorrectly, we fall back to uncompressed literals.; *; * We write the header when writeEntropy=1 and set entropyWrriten=1 when we succeeded; * in writing the header, otherwise it is set to 0.; *; * hufMetadata->hType has literals block type info.; * If it is set_basic, all sub-blocks literals section will be Raw_Literals_Block.; * If it is set_rle, all sub-blocks literals section will be RLE_Literals_Block.; * If it is set_compressed, first sub-block's literals section will be Compressed_Literals_Block; * If it is set_compressed, first sub-block's literals section will be Treeless_Literals_Block; * and the following sub-blocks' literals sections will be Treeless_Literals_Block.; * @return : compressed size of literals section of a sub-block; * Or 0 if it unable to compress.; * Or error code */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_superblock.c:1141,error,error,1141,builtins/zstd/compress/zstd_compress_superblock.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_superblock.c,1,['error'],['error']
Availability,"/** ZSTD_compressSubBlock_sequences() :; * Compresses sequences section for a sub-block.; * fseMetadata->llType, fseMetadata->ofType, and fseMetadata->mlType have; * symbol compression modes for the super-block.; * The first successfully compressed block will have these in its header.; * We set entropyWritten=1 when we succeed in compressing the sequences.; * The following sub-blocks will always have repeat mode.; * @return : compressed size of sequences section of a sub-block; * Or 0 if it is unable to compress; * Or error code. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_superblock.c:524,error,error,524,builtins/zstd/compress/zstd_compress_superblock.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_superblock.c,1,['error'],['error']
Availability,"/** ZSTD_compress_insertDictionary() :; * @return : dictID, or an error code */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:66,error,error,66,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['error'],['error']
Availability,"/** ZSTD_decodeFrameHeader() :; * `headerSize` must be the size provided by ZSTD_frameHeaderSize().; * @return : 0 if success, or an error code, which can be tested using ZSTD_isError() */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c:133,error,error,133,builtins/zstd/decompress/zstd_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c,1,['error'],['error']
Availability,"/** ZSTD_decompressContinue() :; * srcSize : must be the exact nb of bytes expected (see ZSTD_nextSrcSizeToDecompress()); * @return : nb of bytes generated into `dst` (necessarily <= `dstCapacity); * or an error code, which can be tested using ZSTD_isError() */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c:206,error,error,206,builtins/zstd/decompress/zstd_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c,1,['error'],['error']
Availability,/** ZSTD_dictAndWindowLog() :; * Returns an adjusted window log that is large enough to fit the source and the dictionary.; * The zstd format says that the entire dictionary is valid if one byte of the dictionary; * is within the window. So the hashLog and chainLog should be large enough to reference both; * the dictionary and the window. So we must use this adjusted dictAndWindowLog when downsizing; * the hashLog and windowLog.; * NOTE: srcSize must not be ZSTD_CONTENTSIZE_UNKNOWN.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:392,down,downsizing,392,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['down'],['downsizing']
Availability,"/** ZSTD_frameHeaderSize() :; * srcSize must be >= ZSTD_frameHeaderSize_prefix.; * @return : size of the Frame Header,; * or an error code (if srcSize is too small) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c:128,error,error,128,builtins/zstd/decompress/zstd_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c,1,['error'],['error']
Availability,"/** ZSTD_frameHeaderSize_internal() :; * srcSize must be large enough to reach header size fields.; * note : only works for formats ZSTD_f_zstd1 and ZSTD_f_zstd1_magicless.; * @return : size of the Frame Header; * or an error code, which can be tested with ZSTD_isError() */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c:220,error,error,220,builtins/zstd/decompress/zstd_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c,1,['error'],['error']
Availability,"/** ZSTD_getFrameContentSize() :; * compatible with legacy mode; * @return : decompressed size of the single frame pointed to be `src` if known, otherwise; * - ZSTD_CONTENTSIZE_UNKNOWN if the size cannot be determined; * - ZSTD_CONTENTSIZE_ERROR if an error occurred (e.g. invalid magic number, srcSize too small) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c:252,error,error,252,builtins/zstd/decompress/zstd_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c,1,['error'],['error']
Availability,"/** ZSTD_getFrameHeader() :; * decode Frame Header, or require larger `srcSize`.; * note : this function does not consume input, it only reads it.; * @return : 0, `zfhPtr` is correctly filled,; * >0, `srcSize` is too small, value is wanted `srcSize` amount,; * or an error code, which can be tested using ZSTD_isError() */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c:267,error,error,267,builtins/zstd/decompress/zstd_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c,1,['error'],['error']
Availability,"/** ZSTD_getFrameHeader_advanced() :; * decode Frame Header, or require larger `srcSize`.; * note : only works for formats ZSTD_f_zstd1 and ZSTD_f_zstd1_magicless; * @return : 0, `zfhPtr` is correctly filled,; * >0, `srcSize` is too small, value is wanted `srcSize` amount,; * or an error code, which can be tested using ZSTD_isError() */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c:283,error,error,283,builtins/zstd/decompress/zstd_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c,1,['error'],['error']
Availability,"/** \class AdaptiveIntegratorMultiDim; \ingroup Integration. Class for adaptive quadrature integration in multi-dimensions using rectangular regions.; Algorithm from A.C. Genz, A.A. Malik, An adaptive algorithm for numerical integration over; an N-dimensional rectangular region, J. Comput. Appl. Math. 6 (1980) 295-302. Converted/adapted by R.Brun to C++ from Fortran CERNLIB routine RADMUL (D120); The new code features many changes compared to the Fortran version. Control parameters are:. - \f$ minpts \f$: Minimum number of function evaluations requested. Must not exceed maxpts.; if minpts < 1 minpts is set to \f$ 2^n +2n(n+1) +1 \f$ where n is the function dimension; - \f$ maxpts \f$: Maximum number of function evaluations to be allowed.; \f$ maxpts >= 2^n +2n(n+1) +1 \f$; if \f$ maxpts<minpts \f$, \f$ maxpts \f$ is set to \f$ 10minpts \f$; - \f$ epstol \f$, \f$ epsrel \f$ : Specified relative and absolute accuracy. The integral will stop if the relative error is less than relative tolerance OR the; absolute error is less than the absolute tolerance. The class computes in addition to the integral of the function in the desired interval:. - an estimation of the relative accuracy of the result.; - number of function evaluations performed.; - status code:; 0. Normal exit. . At least minpts and at most maxpts calls to the function were performed.; 1. maxpts is too small for the specified accuracy eps.; The result and relerr contain the values obtainable for the; specified value of maxpts.; 2. size is too small for the specified number MAXPTS of function evaluations.; 3. n<2 or n>15. ### Method:. An integration rule of degree seven is used together with a certain; strategy of subdivision.; For a more detailed description of the method see References. ### Notes:. 1..Multi-dimensional integration is time-consuming. For each rectangular; subregion, the routine requires function evaluations.; Careful programming of the integrand might result in substantial saving; of time.; 2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:969,error,error,969,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,4,"['error', 'toler']","['error', 'tolerance']"
Availability,"/** \class IntervalCalculator; \ingroup Roostats. IntervalCalculator is an interface class for a tools which produce RooStats; ConfIntervals. The interface currently assumes that any interval calculator can; be configured by specifying:. - a model,; - a data set,; - a set of parameters of interest,; - a set of nuisance parameters (eg. parameters on which the model depends, but are not of interest), and; - a confidence level or size of the test (eg. rate of Type I error). The interface allows one to pass the model, data, and parameters via a workspace; and then specify them with names. The interface will be extended so that one does; not need to use a workspace. After configuring the calculator, one only needs to ask GetInterval, which will; return a ConfInterval pointer. The concrete implementations of this interface should deal with the details of; how the nuisance parameters are dealt with (eg. integration vs. profiling) and; which test-statistic is used (perhaps this should be added to the interface). The motivation for this interface is that we hope to be able to specify the; problem in a common way for several concrete calculators. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/IntervalCalculator.h:468,error,error,468,roofit/roostats/inc/RooStats/IntervalCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/IntervalCalculator.h,1,['error'],['error']
Availability,"/** \class Messenger; *; * \brief Manages ZeroMQ sockets and wraps send and receive calls; *; * This class is used for all interprocess communication between the master,; * queue and worker processes. It sets up ZeroMQ sockets between all processes; * over IPC socket files stored in /tmp on the filesystem.; *; * Several sockets are used for communication between different places for; * different purposes:; * - Master and queue processes each have a PUSH-PULL socket pair to directly; * send/receive data between only the master and queue processes. This is; * currently used mainly for sending tasks to the queue from master. The; * socket from queue back to master is used only to test connections and may; * be removed in the future.; * - The queue process also has a PUSH-PULL socket pair with each worker; * process. These are used by the workers to obtain tasks from the queue.; * - The master has a PUB socket that the workers subscribe to with SUB; * sockets. These are used to update state. Note that to ensure robust; * reception of all messages on the SUB socket, it's important to send over; * state in as little messages as possible. For instance, it's best to send; * arrays over in a single big message instead of sending over each element; * separately. This also improves performance, since each message has some; * fixed overhead.; * - Each worker has a PUSH socket connected to a PULL socket on master that; * is used to send back task results from workers to master in; * 'JobManager::retrieve()'.; *; * @param process_manager ProcessManager instance which manages the master,; * queue and worker processes that we want to set up; * communication for in this Messenger.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:1023,robust,robust,1023,roofit/multiprocess/src/Messenger.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx,1,['robust'],['robust']
Availability,"/** \class PiecewiseInterpolation; * \ingroup HistFactory; * The PiecewiseInterpolation is a class that can morph distributions into each other, which; * is useful to estimate systematic uncertainties. Given a nominal distribution and one or; * more altered or distorted ones, it computes a new shape depending on the value of the nuisance; * parameters \f$ \alpha_i \f$:; * \f[; * A = \sum_i \mathrm{Interpolate}(\mathrm{low}_i, \mathrm{nominal}, \mathrm{high}_i, \alpha_i).; * \f]; * If an \f$ \alpha_i \f$ is zero, the distribution is identical to the nominal distribution, at; * \f$ \pm 1 \f$ it is identical to the up/down distribution for that specific \f$ i \f$.; *; * The class supports several interpolation methods, which can be selected for each parameter separately; * using setInterpCode(). The default interpolation code is 4. This performs; * - \f$ |\alpha | > 1 \f$: Linear extrapolation.; * - \f$ |\alpha | < 1 \f$: Polynomial interpolation. A sixth-order polynomial is used. Its coefficients; * are chosen such that function, first, and second derivative at \f$ \alpha \pm 1 \f$ match the values; * that the extrapolation procedure uses.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:623,down,down,623,roofit/histfactory/src/PiecewiseInterpolation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx,1,['down'],['down']
Availability,"/** \class REvePathMarkT; \ingroup REve; Special-point on track:. - kDaughter : daughter creation; fP is momentum of the daughter, it is subtracted from; momentum of the track; - kReference : position/momentum reference; - kDecay : decay point, fP not used; - kCluster2D : measurement with large error in one direction (like strip detectors):; - fP - normal to detector plane,; - fE - large error direction, must be normalized.; - Track is propagated to plane and correction in fE direction is discarded.; - kLineSegment : line segment with vertex fV and vector fE; - fV - first point of line segment; - fP - normal to detector plane,; - fE - vector from fV to the second vertex of line segment; */; ////////////////////////////////////////////////////////////////////////////////; /// Return the name of path-mark type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REvePathMark.cxx:296,error,error,296,graf3d/eve7/src/REvePathMark.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REvePathMark.cxx,2,['error'],['error']
Availability,/** \class StatError; * \ingroup HistFactory; * Statistical error of Monte Carlo predictions.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:60,error,error,60,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,1,['error'],['error']
Availability,/** \class StatErrorConfig; * \ingroup HistFactory; * Configuration to automatically assign nuisance parameters for the statistical; * error of the Monte Carlo simulations.; * The default is to assign a Poisson uncertainty to a bin when its statistical uncertainty; * is larger than 5% of the bin content.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:135,error,error,135,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,1,['error'],['error']
Availability,"/** \class TAxis3D; \ingroup g3d. The 3D axis painter class. This class provide up to 3 axes to any 3D ROOT plot and ""ZOOM"" service.; ExecuteEvent() method does provide zooming and moving a projection; 3D object within TPad client area. With Zoom mode on the user can access; TAxis3D context menu and set /change the attributes of axes all together; or separately. To add the 3D rulers to any 3D view one has to create; an instance of this class and Draw it. ~~~ {.cpp}; TAxis3D rulers;; rulers.Draw();; ~~~. One can use a static method to create ruler and attach it to the current gPad. ~~~ {.cpp}; TAxis3D::ToggleRulers(); // Brings the 3D axes up; TAxis3D::ToggleRulers(); // next calls remove the rulers from the TPad etc; ~~~. To activate Zoomer one may call. ~~~ {.cpp}; TAxis3D::ToggleZoom();; ~~~. each time one needs move or zoom the image. Then the user can:. - move:; \image html g3d_axis3d_01.png; - zoom:; \image html g3d_axis3d_02.png. its 3D view with <left-mouse button> press / move.; The ""Zoom"" deactivates itself just the user release the <left-mouse button>. To change attributes of the rulers attached to the current Pad, one may; query its pointer first:. ~~~ {.cpp}; TAxis3D *axis = TAxis3D::GetPadAxis(); // Ask axis pointer; if (axis) {; TAxis3D::ToggleRulers() // To pop axes down; axis->SetLabelColor(kBlue); // Paint the axes labels with blue color; axis->SetAxisColor(kRed); // Paint the axes itself with blue color; TAxis3D::ToggleRulers() // To pop axes up; }; ~~~. The attributes of the created axes are affected by the current style; (see TStyle class ) and Set... methods of this class. For example:; ~~~ {.cpp}; gStyle->SetAxisColor(kYellow,""X"");; gStyle->SetAxisColor(kYellow,""Y"");; gStyle->SetAxisColor(kYellow,""Z"");. gStyle->SetLabelColor(kYellow,""X"");; gStyle->SetLabelColor(kYellow,""Y"");; gStyle->SetLabelColor(kYellow,""Z"");. TAxis3D::ToggleRulers();; TAxis3D::ToggleRulers();; ~~~. will draw all axes and labels with yellow color.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TAxis3D.cxx:1302,down,down,1302,graf3d/g3d/src/TAxis3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TAxis3D.cxx,1,['down'],['down']
Availability,"/** \class TClassTree; \ingroup gpad. Draw inheritance tree and their relations for a list of classes. The following options are supported; - Direct inheritance (default); - Multiple inheritance; - Composition; - References by data members and member functions; - References from Code. The list of classes is specified:; - either in the TClassTree constructor as a second argument; - or the parameter to TClassTree::Draw. Note that the ClassTree viewer can also be started from the canvas; pull down menu ""Classes"". In the list of classes, class names are separated by a "":""; wildcarding is supported.; The following formats are supported, eg in TClassTree::Draw; 1. `Draw(""ClassA"")`; - Draw inheritance tree for ClassA; - Show all classes referenced by ClassA; 2. `Draw(""*ClassB"")`; - Draw inheritance tree for ClassB; and all the classes deriving from ClassB; 3. `Draw("">ClassC"")`; - Draw inheritance tree for ClassC; - Show classes referencing ClassC; 4. `Draw(""ClassD<"")`; - Draw inheritance tree for ClassD; - Show classes referenced by ClassD; - Show all classes referencing ClassD; 5. `Draw(""Cla*"")`; - Draw inheritance tree for all classes with name starting with ""Cla""; - Show classes referenced by these classes; 6. `Draw(""ClassA:ClassB<"")`; - Draw inheritance tree for ClassA; - Show all classes referenced by ClassA; - Draw inheritance tree for ClassB; - Show classes referenced by ClassB; - Show all classes referencing ClassB. Example: `Draw(""TTree<"")`; - Draw inheritance tree for the Root class TTree; - Show all classes referenced by TTree; - Show all classes using TTree. By default, only direct inheritance is drawn.; Use TClassTree::ShowLinks(option) to show additional references; - option = ""H"" to show links to embedded classes; - option = ""M"" to show multiple inheritance; - option = ""R"" to show pointers to other classes from data members; - option = ""C"" to show classes used by the code(implementation) of a class. The following picture is produced directly by:; ~~~ {.cpp}; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx:495,down,down,495,graf2d/gpad/src/TClassTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx,1,['down'],['down']
Availability,"/** \class TEveCompositeFrame; \ingroup TEve; Abstract base-class for frame-slots that encompass EVE-windows; (sub-classes of TEveWindow). The EVE-frame classes are managed by their embedded EVE-windows and; mostly serve as an interface to particular ROOT widgets; (sub-classes of TGCompositeFrame) they are embedded into. This base-class, a sub-class of a vertical composite-frame, creates; also the title-bar which can be used to interact with the embedded; window. Optionally, the title-bar can be replaced with a mini-bar; (a 4-pixel thin bar at the top). By clicking on the mini-bar, the; title-bar is restored. Sub-classes provide for specific behaviour and expectations of; individual ROOT GUI container frames. POSSIBLE EXTENSIONS. No frame is drawn around this composite-frame - frame style could be; available as a (static) member. Menus of embedded windows could also be managed - hidden or transposed; to a top-level menubar.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveWindow.cxx:810,avail,available,810,graf3d/eve/src/TEveWindow.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveWindow.cxx,1,['avail'],['available']
Availability,"/** \class TEvePathMarkT; \ingroup TEve; Special-point on track:. - kDaughter : daughter creation; fP is momentum of the daughter, it is subtracted from; momentum of the track; - kReference : position/momentum reference; - kDecay : decay point, fP not used; - kCluster2D : measurement with large error in one direction (like strip detectors):; - fP - normal to detector plane,; - fE - large error direction, must be normalized.; - Track is propagated to plane and correction in fE direction is discarded.; - kLineSegment : line segment with vertex fV and vector fE; - fV - first point of line segment; - fP - normal to detector plane,; - fE - vector from fV to the second vertex of line segment; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEvePathMark.cxx:296,error,error,296,graf3d/eve/src/TEvePathMark.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEvePathMark.cxx,2,['error'],['error']
Availability,"/** \class TF1Convolution; \ingroup Functions; \brief Class wrapping convolution of two functions. Class wrapping convolution of two functions: evaluation of \f$\int f(x)g(x-t)dx\f$. The convolution is performed by default using FFTW if it is available .; One can pass optionally the range of the convolution (by default the first function range is used).; Note that when using Discrete Fourier Transform (as FFTW), it is a circular transform, so the functions should be; approximately zero at the end of the range. If they are significantly different than zero on one side (e.g. the left side); a spill over will occur on the other side (e.g right side).; If no function range is given by default the function1 range + 10% is used; One should use also a not too small number of points for the DFT (a minimum of 1000). By default 10000 points are used.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1Convolution.cxx:243,avail,available,243,hist/hist/src/TF1Convolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1Convolution.cxx,1,['avail'],['available']
Availability,"/** \class TFormula TFormula.h ""inc/TFormula.h""; \ingroup Hist; The Formula class. This is a new version of the TFormula class based on Cling.; This class is not 100% backward compatible with the old TFormula class, which is still available in ROOT as; `ROOT::v5::TFormula`. Some of the TFormula member functions available in version 5, such as; `Analyze` and `AnalyzeFunction` are not available in the new TFormula.; On the other hand formula expressions which were valid in version 5 are still valid in TFormula version 6. This class has been implemented during Google Summer of Code 2013 by Maciej Zimnoch. ### Example of valid expressions:. - `sin(x)/x`; - `[0]*sin(x) + [1]*exp(-[2]*x)`; - `x + y**2`; - `x^2 + y^2`; - `[0]*pow([1],4)`; - `2*pi*sqrt(x/y)`; - `gaus(0)*expo(3) + ypol3(5)*x`; - `gausn(0)*expo(3) + ypol3(5)*x`; - `gaus(x, [0..2]) + expo(y, [3..4])`. In the last examples above:. - `gaus(0)` is a substitute for `[0]*exp(-0.5*((x-[1])/[2])**2)`; and (0) means start numbering parameters at 0; - `gausn(0)` is a substitute for `[0]*exp(-0.5*((x-[1])/[2])**2)/(sqrt(2*pi)*[2]))`; and (0) means start numbering parameters at 0; - `expo(3)` is a substitute for `exp([3]+[4]*x)`; - `pol3(5)` is a substitute for `par[5]+par[6]*x+par[7]*x**2+par[8]*x**3`; (`PolN` stands for Polynomial of degree N); - `gaus(x, [0..2])` is a more explicit way of writing `gaus(0)`; - `expo(y, [3..4])` is a substitute for `exp([3]+[4]*y)`. See below the [full list of predefined functions](\ref FormulaFuncs) which can be used as shortcuts in; TFormula. `TMath` functions can be part of the expression, eg:. - `TMath::Landau(x)*sin(x)`; - `TMath::Erf(x)`. Formula may contain constants, eg:. - `sqrt2`; - `e`; - `pi`; - `ln10`; - `infinity`. and more. Formulas may also contain other user-defined ROOT functions defined with a; TFormula, eg, where `f1` is defined on one x-dimension and 2 parameters:. - `f1(x, [omega], [phi])`; - `f1([0..1])`; - `f1([1], [0])`; - `f1(y)`. To replace only parameter names",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:231,avail,available,231,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,3,['avail'],['available']
Availability,"/** \class TGFontDialog; \ingroup guiwidgets. Font selection dialog, allowing to select one in the list of available fonts in the system. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFontDialog.cxx:107,avail,available,107,gui/gui/src/TGFontDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFontDialog.cxx,1,['avail'],['available']
Availability,/** \class TGLManipSet; \ingroup opengl. Combine all available manipulators in a collection. At first I wanted to merge them back into TGLManip (to have a; single class) but then it seemed somehow messy.; Maybe next time.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLManipSet.cxx:53,avail,available,53,graf3d/gl/src/TGLManipSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLManipSet.cxx,1,['avail'],['available']
Availability,"/** \class TGLOrthoCamera; \ingroup opengl; Orthographic projection camera. Currently limited to three types; defined at construction time - kXOY, kXOZ, kZOY - where this refers; to the viewport plane axis - e.g. kXOY has X axis horizontal, Y; vertical - i.e. looking down Z axis with Y vertical. The plane types restriction could easily be removed to supported; arbitrary ortho projections along any axis/orientation with free; rotations about them.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLOrthoCamera.cxx:268,down,down,268,graf3d/gl/src/TGLOrthoCamera.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLOrthoCamera.cxx,1,['down'],['down']
Availability,"/** \class TGLUtil; \ingroup opengl; Wrapper class for various misc static functions - error checking, draw helpers etc.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:87,error,error,87,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['error'],['error']
Availability,"/** \class TGLViewerBase; \ingroup opengl; Base class for GL viewers. Provides a basic scene management and a; small set of control variables (camera, LOD, style, clip) that are; used by the scene classes. Renering wrappers are available but; minimal. There is no concept of GL-context here ... we just draw; into whatever is set from outside. Development notes:. Each viewer automatically creates a TGLRnrCtx and passes it down; all render functions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerBase.cxx:228,avail,available,228,graf3d/gl/src/TGLViewerBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerBase.cxx,2,"['avail', 'down']","['available', 'down']"
Availability,"/** \class TGMatrixLayout; \ingroup guiwidgets. This layout managers does not make use of TGLayoutHints. It arranges frames in a matrix-like way.; This manager provides :; - a column number (0 means unlimited); - a row number (0 means unlimited); - horizontal & vertical separators. Notes : If both column and row are fixed values, any remaining; frames outside the count won't be managed.; Unlimited rows means the frame can expand downward; (the default behaviour in most UI).; Both unlimited rows and columns is undefined (read: will; crash the algorithm ;-).; With fixed dimensions, frames are always arranged in rows.; That is: 1st frame is at position (0,0), next one is at; row(0), column(1) and so on...; When specifying one dimension as unlimited (i.e. row=0 or; column=0) the frames are arranged according to the direction; of the fixed dimension. This layout manager does not make; use of TGLayoutHints.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGLayout.h:433,down,downward,433,gui/gui/inc/TGLayout.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGLayout.h,1,['down'],['downward']
Availability,"/** \class TGTable; \ingroup guiwidgets. Create an array to hold a bunch of numbers. TGTable implements a table widget to display data in rows and; columns. The data is supplied by a TVirtualTableInterface. The table is a TGCanvas to make use of already available viewport; functionality and drawing optimizations. The top left cell in a table has coordinates (0,0). A TObjArray is used internally to ensure little overhead and fast; acces to cells. If the data source has more rows than the default 50 rows of cells in; memory, buttons at the bottom of the table can be used to load the; next or previous chunk of data. At the top of the table, a frame is visible that shows the coordinates; of the top left cell currently in memmory in row,column. The amount of; rows and columns is also shown in rows x columns. These values can be; edited to move to a different area of the data source or to resize the; table. Tab will switch between the enties, return will move to the; currently entered range and resize the table if needed. Clicking the; goto button has the same effect. A TGTable is created by first creating an appropriate; TVirtualTableInterface from the data that needs visualization and; then creating the TGTable using this interface. A simple macro to use a TGTable with a TGSimpleTableInterface:. ~~~; {; Int_t i = 0, j = 0;; UInt_t nrows = 6, ncolumns = 5;; Double_t** data = new Double_t*[nrows];; for (i = 0; i < nrows; i++) {; data[i] = new Double_t[ncolumns];; for (j = 0; j < ncolumns; j++) {; data[i][j] = 10 * i + j;; }; }. // Create a main frame to contain the table; TGMainFrame* mainframe = new TGMainFrame(0, 400, 200);; mainframe->SetCleanup(kDeepCleanup) ;. // Create an interface; TGSimpleTableInterface *iface = new TGSimpleTableInterface(data, 6, 5);. // Create the table; TGTable *table = new TGTable(mainframe, 999, iface);. // Add the table to the main frame; mainframe->AddFrame(table, new TGLayoutHints(kLHintsExpandX | kLHintsExpandY));. //Update data; data[5][1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx:254,avail,available,254,gui/gui/src/TGTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx,1,['avail'],['available']
Availability,"/** \class TGeoExtension; \ingroup Geometry_classes. ABC for user objects attached to TGeoVolume or TGeoNode.; Provides interface for getting a reference (grab) and; releasing the extension object (release), allowing for; derived classes to implement reference counted sharing.; The user who should attach extensions to logical volumes; or nodes BEFORE applying misalignment information so that; these will be available to all copies.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx:410,avail,available,410,geom/geom/src/TGeoExtension.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx,1,['avail'],['available']
Availability,"/** \class TGeoHMatrix; \ingroup Geometry_classes. Matrix class used for computing global transformations; Should NOT be used for node definition. An instance of this class; is generally used to pile-up local transformations starting from; the top level physical node, down to the current node.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:269,down,down,269,geom/geom/src/TGeoMatrix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx,1,['down'],['down']
Availability,"/** \class TGraph2DAsymmErrors; \ingroup Graphs; Graph 2D class with errors. A TGraph2DAsymmErrors is a TGraph2D with asymmetric errors. It behaves like a TGraph2D and has; the same drawing options. The **""ERR""** drawing option allows to display the error bars. The; following example shows how to use it:. Begin_Macro(source); {; auto c = new TCanvas(""c"",""TGraph2DAsymmErrors example"",0,0,600,600);; Double_t P = 6.;; Int_t np = 200;. Double_t *rx=0, *ry=0, *rz=0;; Double_t *exl=0, *exh=0, *eyl=0, *eyh=0, *ezl=0, *ezh=0;. rx = new Double_t[np];; ry = new Double_t[np];; rz = new Double_t[np];; exl = new Double_t[np];; exh = new Double_t[np];; eyl = new Double_t[np];; eyh = new Double_t[np];; ezl = new Double_t[np];; ezh = new Double_t[np];. auto r = new TRandom();. for (Int_t N=0; N<np;N++) {; rx[N] = 2*P*(r->Rndm(N))-P;; ry[N] = 2*P*(r->Rndm(N))-P;; rz[N] = rx[N]*rx[N]-ry[N]*ry[N];; rx[N] = 10.+rx[N];; ry[N] = 10.+ry[N];; rz[N] = 40.+rz[N];; exl[N] = r->Rndm(N);; exh[N] = r->Rndm(N);; eyl[N] = r->Rndm(N);; eyh[N] = r->Rndm(N);; ezl[N] = 10*r->Rndm(N);; ezh[N] = 10*r->Rndm(N);; }. auto g = new TGraph2DAsymmErrors(np, rx, ry, rz, exl, exh, eyl, eyh, ezl, ezh);; g->SetTitle(""TGraph2D with asymmetric error bars: option \""ERR\"""");; g->SetFillColor(29);; g->SetMarkerSize(0.8);; g->SetMarkerStyle(20);; g->SetMarkerColor(kRed);; g->SetLineColor(kBlue-3);; g->SetLineWidth(2);; gPad->SetLogy(1);; g->Draw(""err p0"");; }; End_Macro; */; ////////////////////////////////////////////////////////////////////////////////; /// TGraph2DAsymmErrors default constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx:69,error,errors,69,hist/hist/src/TGraph2DAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx,4,['error'],"['error', 'errors']"
Availability,"/** \class TGraph2DErrors; \ingroup Graphs; Graph 2D class with errors. A TGraph2DErrors is a TGraph2D with errors. It behaves like a TGraph2D and has; the same drawing options. The **""ERR""** drawing option allows to display the error bars. The; following example shows how to use it:. Begin_Macro(source); {; auto c = new TCanvas(""c"",""TGraph2DErrors example"",0,0,600,600);; Double_t P = 6.;; Int_t np = 200;. Double_t *rx=0, *ry=0, *rz=0;; Double_t *ex=0, *ey=0, *ez=0;. rx = new Double_t[np];; ry = new Double_t[np];; rz = new Double_t[np];; ex = new Double_t[np];; ey = new Double_t[np];; ez = new Double_t[np];. auto r = new TRandom();. for (Int_t N=0; N<np;N++) {; rx[N] = 2*P*(r->Rndm(N))-P;; ry[N] = 2*P*(r->Rndm(N))-P;; rz[N] = rx[N]*rx[N]-ry[N]*ry[N];; rx[N] = 10.+rx[N];; ry[N] = 10.+ry[N];; rz[N] = 40.+rz[N];; ex[N] = r->Rndm(N);; ey[N] = r->Rndm(N);; ez[N] = 10*r->Rndm(N);; }. auto g = new TGraph2DErrors(np, rx, ry, rz, ex, ey, ez);; g->SetTitle(""TGraph2D with error bars: option \""ERR\"""");; g->SetFillColor(29);; g->SetMarkerSize(0.8);; g->SetMarkerStyle(20);; g->SetMarkerColor(kRed);; g->SetLineColor(kBlue-3);; g->SetLineWidth(2);; gPad->SetLogy(1);; g->Draw(""err p0"");; }; End_Macro; */; ////////////////////////////////////////////////////////////////////////////////; /// TGraph2DErrors default constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DErrors.cxx:64,error,errors,64,hist/hist/src/TGraph2DErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DErrors.cxx,4,['error'],"['error', 'errors']"
Availability,"/** \class TGraphAsymmErrors; \ingroup Graphs; TGraph with asymmetric error bars. The TGraphAsymmErrors painting is performed thanks to the TGraphPainter; class. All details about the various painting options are given in this class. The picture below gives an example:. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""A Simple Graph with asymmetric error bars"",200,10,700,500);; c1->SetFillColor(42);; c1->SetGrid();; c1->GetFrame()->SetFillColor(21);; c1->GetFrame()->SetBorderSize(12);; const Int_t n = 10;; Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; auto gr = new TGraphAsymmErrors(n,x,y,exl,exh,eyl,eyh);; gr->SetTitle(""TGraphAsymmErrors Example"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; End_Macro; */; ////////////////////////////////////////////////////////////////////////////////; /// TGraphAsymmErrors default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:70,error,error,70,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,2,['error'],['error']
Availability,"/** \class TGraphDelaunay2D; \ingroup Graphs; TGraphDelaunay2D generates a Delaunay triangulation of a TGraph2D.; The algorithm used for finding the triangles is based on [CDT](https://github.com/artem-ogre/CDT),; a C++ library for generating constraint or conforming Delaunay triangulations. The ROOT::Math::Delaunay2D class provides a wrapper for using; the **CDT** library. This implementation provides large improvements in terms of computational performances; compared to the legacy one available in TGraphDelaunay, and it is by default; used in TGraph2D. The old, legacy implementation can be still used when calling; `TGraph2D::GetHistogram` and `TGraph2D::Draw` with the `old` option. Definition of Delaunay triangulation (After B. Delaunay):; For a set S of points in the Euclidean plane, the unique triangulation DT(S); of S such that no point in S is inside the circumcircle of any triangle in; DT(S). DT(S) is the dual of the Voronoi diagram of S. If n is the number of; points in S, the Voronoi diagram of S is the partitioning of the plane; containing S points into n convex polygons such that each polygon contains; exactly one point and every point in a given polygon is closer to its; central point than to any other. A Voronoi diagram is sometimes also known; as a Dirichlet tessellation. \image html tgraph2d_delaunay.png. [This applet](http://www.cs.cornell.edu/Info/People/chew/Delaunay.html); gives a nice practical view of Delaunay triangulation and Voronoi diagram.; */; /// TGraphDelaunay2D normal constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphDelaunay2D.cxx:492,avail,available,492,hist/hist/src/TGraphDelaunay2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphDelaunay2D.cxx,1,['avail'],['available']
Availability,"/** \class TGraphMultiErrors; \ingroup Graphs; TGraph with asymmetric error bars and multiple y error dimensions. The TGraphMultiErrors painting is performed thanks to the TGraphPainter; class. All details about the various painting options are given in this class. The picture below gives an example:. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"", ""A Simple Graph with multiple y-errors"", 200, 10, 700, 500);; c1->SetGrid();; c1->GetFrame()->SetBorderSize(12);; const Int_t np = 5;; Double_t x[np] = {0, 1, 2, 3, 4};; Double_t y[np] = {0, 2, 4, 1, 3};; Double_t exl[np] = {0.3, 0.3, 0.3, 0.3, 0.3};; Double_t exh[np] = {0.3, 0.3, 0.3, 0.3, 0.3};; Double_t eylstat[np] = {1, 0.5, 1, 0.5, 1};; Double_t eyhstat[np] = {0.5, 1, 0.5, 1, 2};; Double_t eylsys[np] = {0.5, 0.4, 0.8, 0.3, 1.2};; Double_t eyhsys[np] = {0.6, 0.7, 0.6, 0.4, 0.8};; auto gme = new TGraphMultiErrors(""gme"", ""TGraphMultiErrors Example"", np, x, y, exl, exh, eylstat, eyhstat);; gme->AddYError(np, eylsys, eyhsys);; gme->SetMarkerStyle(20);; gme->SetLineColor(kRed);; gme->GetAttLine(0)->SetLineColor(kRed);; gme->GetAttLine(1)->SetLineColor(kBlue);; gme->GetAttFill(1)->SetFillStyle(0);; gme->Draw(""APS ; Z ; 5 s=0.5"");; }; End_Macro; */; ////////////////////////////////////////////////////////////////////////////////; /// TGraphMultiErrors default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:70,error,error,70,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,3,['error'],"['error', 'errors']"
Availability,"/** \class TGraphQQ; \ingroup BasicGraphics. This class allows to draw quantile-quantile plots. Plots can be drawn for 2 datasets or for a dataset and a theoretical; distribution function. ## 2 datasets:; Quantile-quantile plots are used to determine whether 2 samples come from; the same distribution.; A qq-plot draws the quantiles of one dataset against the quantile of the; the other. The quantiles of the dataset with fewer entries are on Y axis,; with more entries - on X axis.; A straight line, going through 0.25 and 0.75 quantiles is also plotted; for reference. It represents a robust linear fit, not sensitive to the; extremes of the datasets.; If the datasets come from the same distribution, points of the plot should; fall approximately on the 45 degrees line. If they have the same; distribution function, but location or scale different parameters,; they should still fall on the straight line, but not the 45 degrees one.; The greater their departure from the straight line, the more evidence there; is, that the datasets come from different distributions.; The advantage of qq-plot is that it not only shows that the underlying; distributions are different, but, unlike the analytical methods, it also; gives information on the nature of this difference: heavier tails,; different location/scale, different shape, etc. Some examples of qqplots of 2 datasets:. \image html graf_graphqq1.png. ## 1 dataset:; Quantile-quantile plots are used to determine if the dataset comes from the; specified theoretical distribution, such as normal.; A qq-plot draws quantiles of the dataset against quantiles of the specified; theoretical distribution.; (NOTE, that density, not CDF should be specified); A straight line, going through 0.25 and 0.75 quantiles can also be plotted; for reference. It represents a robust linear fit, not sensitive to the; extremes of the dataset.; As in the 2 datasets case, departures from straight line indicate departures; from the specified distribution. ""The co",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGraphQQ.cxx:588,robust,robust,588,graf2d/graf/src/TGraphQQ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGraphQQ.cxx,1,['robust'],['robust']
Availability,"/** \class THnSparseArrayChunk; THnSparseArrayChunk is used internally by THnSparse.; THnSparse stores its (dynamic size) array of bin coordinates and their; contents (and possibly errors) in a TObjArray of THnSparseArrayChunk. Each; of the chunks holds an array of THnSparseCompactBinCoord and the content; (a TArray*), which is created outside (by the templated derived classes of; THnSparse) and passed in at construction time.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx:181,error,errors,181,hist/hist/src/THnSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx,1,['error'],['errors']
Availability,"/** \class TMathText; \ingroup BasicGraphics. To draw TeX Mathematical Formula. TMathText's purpose is to write mathematical equations, exactly as TeX would; do it. The syntax is the same as the TeX's one. The following example demonstrate how to use TMathText:. Begin_Macro(source); ../../../tutorials/graphics/tmathtext.C; End_Macro. The list of all available symbols is given in the following example:. Begin_Macro; ../../../tutorials/graphics/tmathtext2.C; End_Macro. #### Limitation:; TMathText rendering is not implemented for the PDF output.; PostScript output should be used instead.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TMathText.cxx:352,avail,available,352,graf2d/graf/src/TMathText.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TMathText.cxx,1,['avail'],['available']
Availability,/** \class TObjectRefSpy; \class TObjectSpy; \ingroup Base. Monitors objects for deletion and reflects the deletion by reverting; the internal pointer to zero. When this pointer is zero we know the; object has been deleted. This avoids the unsafe TestBit(kNotDeleted); hack. The spied object must have the kMustCleanup bit set otherwise; you will get an error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx:354,error,error,354,core/gui/src/TObjectSpy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx,1,['error'],['error']
Availability,"/** \class TParallelCoordVar. TParallelCoord axes. Class containing a variable for the TParallelCoord. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The; axes can be dragged to change their position. A zoom is also available. The; logarithm scale is also available by right clicking on the axis.; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:567,avail,available,567,tree/treeviewer/src/TParallelCoordVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx,2,['avail'],['available']
Availability,"/** \class TPaveStats; \ingroup BasicGraphics. The histogram statistics painter class. To draw histogram statistics and fit parameters. - [Statistics Display](\ref PS01); - [Fit Statistics](\ref PS02); - [Statistics box editing](\ref PS03). \anchor PS01; ## Statistics Display. The type of information shown in the histogram statistics box can be selected; with:; ~~~ {.cpp}; gStyle->SetOptStat(mode);; ~~~. The ""`mode`"" has up to nine digits that can be set to on (1 or 2), off (0).; ~~~ {.cpp}; mode = ksiourmen (default = 000001111); k = 1; kurtosis printed; k = 2; kurtosis and kurtosis error printed; s = 1; skewness printed; s = 2; skewness and skewness error printed; i = 1; integral of bins printed; o = 1; number of overflows printed; u = 1; number of underflows printed; r = 1; rms printed; r = 2; rms and rms error printed; m = 1; mean value printed; m = 2; mean and mean error values printed; e = 1; number of entries printed; n = 1; name of histogram is printed; ~~~. For example:; ~~~ {.cpp}; gStyle->SetOptStat(11);; ~~~; displays only the name of histogram and the number of entries, whereas:; ~~~ {.cpp}; gStyle->SetOptStat(1101);; ~~~; displays the name of histogram, mean value and RMS. <b>WARNING 1:</b> never do:; ~~~ {.cpp}; gStyle->SetOptStat(0001111);; ~~~; but instead do:; ~~~ {.cpp}; gStyle->SetOptStat(1111);; ~~~; because `0001111` will be taken as an octal number!. <b>WARNING 2:</b> for backward compatibility with older versions; ~~~ {.cpp}; gStyle->SetOptStat(1);; ~~~; is taken as:; ~~~ {.cpp}; gStyle->SetOptStat(1111); ~~~; To print only the name of the histogram do:; ~~~ {.cpp}; gStyle->SetOptStat(1000000001);; ~~~. <b>NOTE</b> that in case of 2D histograms, when selecting only underflow; (10000) or overflow (100000), the statistics box will show all combinations; of underflow/overflows and not just one single number. The parameter mode can be any combination of the letters `kKsSiourRmMen`; ~~~ {.cpp}; k : kurtosis printed; K : kurtosis and kurtosis error ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPaveStats.cxx:591,error,error,591,graf2d/graf/src/TPaveStats.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPaveStats.cxx,4,['error'],['error']
Availability,"/** \class TProfile2D; \ingroup Histograms; Profile2D histograms are used to display the mean; value of Z and its error for each cell in X,Y.; Profile2D histograms are in many cases an; elegant replacement of three-dimensional histograms : the inter-relation of three; measured quantities X, Y and Z can always be visualized by a three-dimensional; histogram or scatter-plot; its representation on the line-printer is not particularly; satisfactory, except for sparse data. If Z is an unknown (but single-valued); approximate function of X,Y this function is displayed by a profile2D histogram with; much better precision than by a scatter-plot. The following formulae show the cumulated contents (capital letters) and the values; displayed by the printing or plotting routines (small letters) of the elements for cell i, j.; \f[; \begin{align}; H(i,j) &= \sum w \cdot Z \\; E(i,j) &= \sum w \cdot Z^2 \\; W(i,j) &= \sum w \\; h(i,j) &= \frac{H(i,j)}{W(i,j)} \\; s(i,j) &= \sqrt{E(i,j)/W(i,j)- h(i,j)^2} \\; e(i,j) &= \frac{s(i,j)}{\sqrt{W(i,j)}}; \end{align}; \f]; The bin content is always the mean of the Z values, but errors change depending on options:; \f[; \begin{align}; \text{GetBinContent}(i,j) &= h(i,j) \\; \text{GetBinError}(i,j) &=; \begin{cases}; e(i,j) &\text{if option="""" (default). Error of the mean of all z values.} \\; s(i,j) &\text{if option=""s"". Standard deviation of z values.} \\; \begin{cases} e(j) &\text{if } h(i,j) \ne 0 \\ 1/\sqrt{12 N} &\text{if } h(i,j)=0 \end{cases} &\text{if option=""i"". This is useful for storing integers such as ADC counts.} \\; 1/\sqrt{W(i,j)} &\text{if option=""g"". Error of a weighted mean when combining measurements with variances of } w. \\; \end{cases}; \end{align}; \f]. In the special case where s(I,J) is zero (eg, case of 1 entry only in one cell); the bin error e(I,J) is computed from the average of the s(I,J) for all cells; if the static function TProfile2D::Approximate has been called.; This simple/crude approximation was suggeste",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:114,error,error,114,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,1,['error'],['error']
Availability,"/** \class TProfile; \ingroup Histograms; Profile Histogram.; Profile histograms are used to display the mean; value of Y and its error for each bin in X. The displayed error is by default the; standard error on the mean (i.e. the standard deviation divided by the sqrt(n) ).; Profile histograms are in many cases an; elegant replacement of two-dimensional histograms. The inter-relation of two; measured quantities X and Y can always be visualized by a two-dimensional; histogram or scatter plot, but if Y is an unknown (but single-valued); approximate function of X, this function is displayed by a profile histogram with; much better precision than by a scatter plot. The following formulae show the cumulated contents (capital letters) and the values; displayed by the printing or plotting routines (small letters) of the elements for bin j.; \f[; \begin{align}; H(j) &= \sum w \cdot Y \\; E(j) &= \sum w \cdot Y^2 \\; W(j) &= \sum w & &\text{if weights different from 1, the number of bin effective entries is used} \\; h(j) &= H(j) / W(j) & &\text{mean of Y,} \\; s(j) &= \sqrt{E(j)/W(j)- h(j)^2} & &\text{standard deviation of Y} \\; e(j) &= s(j)/\sqrt{W(j)} & &\text{standard error on the mean} \\; \end{align}; \f]; The bin content is always the mean of the Y values, but errors change depending on options:; \f[; \begin{align}; \text{GetBinContent}(j) &= h(j) \\; \text{GetBinError}(j) &=; \begin{cases}; e(j) &\text{if option="""" (default). Error of the mean of all y values.} \\; s(j) &\text{if option=""s"". Standard deviation of all y values.} \\; \begin{cases} e(j) &\text{if } h(j) \ne 0 \\ 1/\sqrt{12 N} &\text{if } h(j)=0 \end{cases} &\text{if option=""i"". This is useful for storing integers such as ADC counts.} \\; 1/\sqrt{W(j)} &\text{if option=""g"". Error of a weighted mean for combining measurements with variances of } w. \\; \end{cases}; \end{align}; \f]; In the special case where s(j) is zero (eg, case of 1 entry only in one bin); the bin error e(j) is computed from the avera",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:130,error,error,130,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,3,['error'],['error']
Availability,"/** \class TSPlot. \legacy{TSPlot}. A common method used in High Energy Physics to perform measurements is; the maximum Likelihood method, exploiting discriminating variables to; disentangle signal from background. The crucial point for such an; analysis to be reliable is to use an exhaustive list of sources of; events combined with an accurate description of all the Probability; Density Functions (PDF). To assess the validity of the fit, a convincing quality check; is to explore further the data sample by examining the distributions of; control variables. A control variable can be obtained for instance by; removing one of the discriminating variables before performing again; the maximum Likelihood fit: this removed variable is a control; variable. The expected distribution of this control variable, for; signal, is to be compared to the one extracted, for signal, from the; data sample. In order to be able to do so, one must be able to unfold; from the distribution of the whole data sample. The TSPlot method allows to reconstruct the distributions for; the control variable, independently for each of the various sources of; events, without making use of any <em>a priori</em> knowledge on <u>this</u>; variable. The aim is thus to use the knowledge available for the; discriminating variables to infer the behaviour of the individual; sources of events with respect to the control variable. TSPlot is optimal if the control variable is uncorrelated with the discriminating variables. A detail description of the formalism itself, called \f$\hbox{$_s$}{\cal P}lot\f$, is given; in [[1](https://arxiv.org/abs/physics/0402083)]. ### The method. The \f$\hbox{$_s$}{\cal P}lot\f$ technique is developed in the above context of a; maximum Likelihood method making use of discriminating variables. One considers a data sample in which are merged several species; of events. These species represent various signal components and; background components which all together account for the data s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:261,reliab,reliable,261,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['reliab'],['reliable']
Availability,"/** \class TSpider; Spider class. A spider view is a handy way to visualize a set of data stored in a TTree.; It draws as many polar axes as selected data members. For each of them, it draws; on the axis the position of the present event between the min and max of the; data member. Two modes are available:. - The spider view: With each points on the axes is drawn a polyline.; - The segment view: For each data member is drawn an arc segment with the; radius corresponding to the event. The spider plot is available from the treeviewer called by; ""atree->StartViewer()"", or simply by calling its constructor and defining the; variables to display. Begin_Macro(source); {; TCanvas *c1 = new TCanvas(""c1"",""TSpider example"",200,10,700,700);; TFile *f = new TFile(""$(ROOTSYS)/tutorials/hsimple.root"");; if (!f || f->IsZombie()) {; printf(""Please run <ROOT location>/tutorials/hsimple.C before."");; return;; }; TNtuple* ntuple = (TNtuple*)f->Get(""ntuple"");; TString varexp = ""px:py:pz:random:sin(px):log(px/py):log(pz)"";; TString selectStr = ""px>0 && py>0 && pz>0"";; TString options = ""average"";; TSpider *spider = new TSpider(ntuple,varexp.Data(),selectStr.Data(),options.Data());; spider->Draw();; c1->ToggleEditor();; c1->Selected(c1,spider,1);; return c1;; }; End_Macro; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:297,avail,available,297,tree/treeviewer/src/TSpider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx,2,['avail'],['available']
Availability,"/** \class TTreeFormula; Used to pass a selection expression to the Tree drawing routine. See TTree::Draw. A TreeFormula can contain any arithmetic expression including; standard operators and mathematical functions separated by operators.; Examples of valid expression:; ~~~{.cpp}; ""x<y && sqrt(z)>3.2""; ~~~; TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; - TFormLeafInfo; - TFormLeafInfoDirect; - TFormLeafInfoNumerical; - TFormLeafInfoClones; - TFormLeafInfoCollection; - TFormLeafInfoPointer; - TFormLeafInfoMethod; - TFormLeafInfoMultiVarDim; - TFormLeafInfoMultiVarDimDirect; - TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. - AddOffset(Int_t offset, TStreamerElement* element); - GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; - GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; - GetMultiplicity() : Returns info on the variability of the number of elements; - GetNdata(TLeaf* leaf) : Returns the number of elements; - GetNdata() : Used by GetNdata(TLeaf* leaf); - GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; - GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; - GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; - IsString(); - ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; - Update() : react to the possible loading of a shared library.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:723,avail,available,723,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,1,['avail'],['available']
Availability,/** constructor of GSL Integrator. In the case of Adaptive integration the Gauss-Krond rule of 31 points is used. @param type type of integration. The possible types are defined in the Integration::Type enumeration; @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:247,Error,Error,247,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,2,['Error'],['Error']
Availability,/** constructor of GSL Integrator. In the case of Adaptive integration the Gauss-Krond rule of 31 points is used; This is used by the plug-in manager (need a char * instead of enumerations). @param type type of integration. The possible types are defined in the Integration::Type enumeration; @param rule Gauss-Kronrod rule (from 1 to 6); @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:370,Error,Error,370,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,2,['Error'],['Error']
Availability,/** constructor of GSL MCIntegrator. VEGAS MC is set as default integration type. @param type type of integration using a char * (required by plug-in manager); @param absTol desired absolute Error; @param relTol desired relative Error; @param calls maximum number of function calls; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h:191,Error,Error,191,math/mathmore/inc/Math/GSLMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h,2,['Error'],['Error']
Availability,/** constructors using external data */; /**; constructor from external data for 1D with errors on coordinate and value; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:89,error,errors,89,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,2,['error'],['errors']
Availability,/** mark reply as 404 error - page/request not exists or refused */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/inc/THttpCallArg.h:22,error,error,22,net/http/inc/THttpCallArg.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/inc/THttpCallArg.h,1,['error'],['error']
Availability,"/** non-static methods for retrieving options */; /// absolute tolerance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h:63,toler,tolerance,63,math/mathcore/inc/Math/IntegratorOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h,1,['toler'],['tolerance']
Availability,"/** non-static methods for setting options */; /// set the abs tolerance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h:63,toler,tolerance,63,math/mathcore/inc/Math/IntegratorOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h,1,['toler'],['tolerance']
Availability,"/** return covariance matrices element for variables ivar,jvar; if the variable is fixed the return value is zero; The ordering of the variables is the same as in the parameter and errors vectors; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx:181,error,errors,181,math/mathcore/src/Minimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx,2,['error'],['errors']
Availability,/** return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h:134,error,errors,134,math/fumili/inc/TFumiliMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h,4,['error'],['errors']
Availability,"/*** \class TDLGradientDescent; *; * Generic implementation of gradient descent minimization for the; * deep learning neural nets.; *; * The TDLGradientDescent class implements an architecture, input data and; * deep learning neural network type independent implementation of the gradient; * descent minimization algorithm.; *; * This is provided by the Step(...), StepMomentum(...) and; * StepNesterov(...) functions that perform a single minimization step.; *; * The main training characteristics are defined by the provided learning rate,; * the test interval, and the convergence steps required for convergence. The; * test interval defines how often the error on the validation set is computed,; * and the values with which the step counter is increased each time the; * HasConverged() member function is called. A convergence step is defined as; * a step in which the test error is NOT less than 0.999 times the current; * minimal test error that has been reached. If between two subsequent calls; * to HasConverged(Double_t) the test error has not been sufficiently reduced; * it is assumed that a number of convergence steps equal to the test interval; * has been performed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h:659,error,error,659,tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,4,['error'],['error']
Availability,"/******* Streaming *******/; /*; * Streaming functions generate the xxHash value from an incrememtal input.; * This method is slower than single-call functions, due to state management.; * For small inputs, prefer `XXH32()` and `XXH64()`, which are better optimized.; *; * An XXH state must first be allocated using `XXH*_createState()`.; *; * Start a new hash by initializing the state with a seed using `XXH*_reset()`.; *; * Then, feed the hash state by calling `XXH*_update()` as many times as necessary.; *; * The function returns an error code, with 0 meaning OK, and any other value; * meaning there is an error.; *; * Finally, a hash value can be produced anytime, by using `XXH*_digest()`.; * This function returns the nn-bits hash as an int or long long.; *; * It's still possible to continue inserting input into the hash state after a; * digest, and generate new hash values later on by invoking `XXH*_digest()`.; *; * When done, release the state using `XXH*_freeState()`.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:538,error,error,538,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,2,['error'],['error']
Availability,"/******* Streaming *******/; /*; * Streaming requires state maintenance.; * This operation costs memory and CPU.; * As a consequence, streaming is slower than one-shot hashing.; * For better performance, prefer one-shot functions whenever applicable.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:60,mainten,maintenance,60,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['mainten'],['maintenance']
Availability,"/******* Streaming *******/; /*; * Streaming requires state maintenance.; * This operation costs memory and CPU.; * As a consequence, streaming is slower than one-shot hashing.; * For better performance, prefer one-shot functions whenever applicable.; *; * XXH3_128bits uses the same XXH3_state_t as XXH3_64bits().; * Use already declared XXH3_createState() and XXH3_freeState().; *; * All reset and streaming functions have same meaning as their 64-bit counterpart.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:60,mainten,maintenance,60,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['mainten'],['maintenance']
Availability,"/************ TEMPLATE FUNCTIONS' IMPLEMENTATIONS *******************/; //////////////////////////////////////////////////////////////////////////; /// Send a message with a code and an object to socket s.; /// The number of bytes sent is returned, as per TSocket::SendRaw.; /// This standalone function can be used to send a code and possibly; /// an object on a given socket. This function does not check whether the; /// socket connection is in a valid state. MPRecv() must be used to; /// retrieve the contents of the message.\n; /// **Note:** only objects the headers of which have been parsed by; /// cling can be sent using MPSend(). User-defined types can be made available to; /// cling via a call like `gSystem->ProcessLine(""#include \""header.h\"""")`.; /// Pointer types cannot be sent via MPSend() (with the exception of const char*).; /// \param s a pointer to a valid TSocket. No validity checks are performed\n; /// \param code the code to be sent; /// \param obj the object to be sent; /// \return the number of bytes sent, as per TSocket::SendRaw",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:672,avail,available,672,core/multiproc/inc/MPSendRecv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h,1,['avail'],['available']
Availability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::DecisionTree *; * *; * *; * Description: *; * Implementation of a Decision Tree *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Doug Schouten <dschoute@sfu.ca> - Simon Fraser U., Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; * *; **********************************************************************************/; /*! \class TMVA::ExpectedErrorPruneTool; \ingroup TMVA. A helper class to prune a decision tree using the expected error (C4.5) method. Uses an upper limit on the error made by the classification done by each node.; If the \f$ \frac{S}{S+B} \f$ of the node is \f$ f \f$, then according to the; training sample, the error rate (fraction of misclassified events by this; node) is \f$ (1-f) \f$. Now \f$ f \f$ has a statistical error according to the; binomial distribution hence the error on \f$ f \f$ can be estimated (same error; as the binomial error for efficiency calculations; \f$ (\sigma = \sqrt{\frac{(eff(1-eff)}{nEvts}}) \f$. This tool prunes branches from a tree if the expected error of a node is less; than that of the sum of the error in its descendants. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx:1081,error,error,1081,tmva/tmva/src/ExpectedErrorPruneTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx,9,['error'],['error']
Availability,"/*******************************************************************************; * Advanced dictionary and prefix API; *; * This API allows dictionaries to be used with ZSTD_compress2(),; * ZSTD_compressStream2(), and ZSTD_decompress(). Dictionaries are sticky, and; * only reset with the context is reset with ZSTD_reset_parameters or; * ZSTD_reset_session_and_parameters. Prefixes are single-use.; ******************************************************************************/; /*! ZSTD_CCtx_loadDictionary() :; * Create an internal CDict from `dict` buffer.; * Decompression will have to use same dictionary.; * @result : 0, or an error code (which can be tested with ZSTD_isError()).; * Special: Loading a NULL (or 0-size) dictionary invalidates previous dictionary,; * meaning ""return to no-dictionary mode"".; * Note 1 : Dictionary is sticky, it will be used for all future compressed frames.; * To return to ""no-dictionary"" situation, load a NULL dictionary (or reset parameters).; * Note 2 : Loading a dictionary involves building tables.; * It's also a CPU consuming operation, with non-negligible impact on latency.; * Tables are dependent on compression parameters, and for this reason,; * compression parameters can no longer be changed after loading a dictionary.; * Note 3 :`dict` content will be copied internally.; * Use experimental ZSTD_CCtx_loadDictionary_byReference() to reference content instead.; * In such a case, dictionary buffer must outlive its users.; * Note 4 : Use ZSTD_CCtx_loadDictionary_advanced(); * to precisely select how dictionary content must be interpreted. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:636,error,error,636,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/******************************************************************************/; /* Logic for testing clang code completion. */; /******************************************************************************/; /* Parse file:line:column from the input string. Returns 0 on success, non-zero; on failure. If successful, the pointer *filename will contain newly-allocated; memory (that will be owned by the caller) to store the file name. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/c-index-test/c-index-test.c:296,failure,failure,296,interpreter/llvm-project/clang/tools/c-index-test/c-index-test.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/c-index-test/c-index-test.c,1,['failure'],['failure']
Availability,/******************************************************************************; Set up an X window and our colormap. We rely on X's own error handling and; reporting for most bad X calls because X buffers requests.; ******************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:137,error,error,137,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['error'],['error']
Availability,"/*****************************************************************************; * ""Gif-Lib"" - Yet another gif library.				 *; *									 *; * Written by: Gershon Elber			IBM PC Ver 0.1,	Jun. 1989 *; ******************************************************************************; * Handle error reporting for the GIF library.				 *; ******************************************************************************; * History:								 *; * 17 Jun 89 - Version 1.0 by Gershon Elber.				 *; *****************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_err.c:288,error,error,288,graf2d/asimage/src/libAfterImage/libungif/gif_err.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_err.c,1,['error'],['error']
Availability,/*****************************************************************************; * Print the last GIF error to stderr.					 *; *****************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_err.c:101,error,error,101,graf2d/asimage/src/libAfterImage/libungif/gif_err.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_err.c,1,['error'],['error']
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAdaptiveGaussKronrodIntegrator1D.cxx; \class RooAdaptiveGaussKronrodIntegrator1D; \ingroup Roofitcore. Implements the Gauss-Kronrod integration algorithm. An adaptive Gaussian quadrature method for numerical integration in; which error is estimated based on evaluation at special points; known as the ""Kronrod points"". By suitably picking these points,; abscissas from previous iterations can be reused as part of the new; set of points, whereas usual Gaussian quadrature would require; recomputation of all abscissas at each iteration. This class automatically handles (-inf,+inf) integrals by dividing; the integration in three regions (-inf,-1), (-1,1), (1,inf) and; calculating the 1st and 3rd term using a \f$ x \rightarrow 1/x \f$ coordinate; transformation. This class embeds the adaptive Gauss-Kronrod integrator from the; GNU Scientific Library version 1.5 and applies a chosen rule ( 10-,; 21-, 31-, 41, 51- or 61-point). The integration domain is; subdivided and recursively integrated until the required precision; is reached. For integrands with integrable singularities the Wynn epsilon rule; can be selected to speed up the convergence of these integrals.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:939,error,error,939,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['error'],['error']
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooEllipse.cxx; \class RooEllipse; \ingroup Roofitcore. Two-dimensional ellipse that can be used to represent an error contour.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEllipse.cxx:819,error,error,819,roofit/roofitcore/src/RooEllipse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEllipse.cxx,1,['error'],['error']
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooErrorVar.cxx; \class RooErrorVar; \ingroup Roofitcore. Auxiliary class that represents the error; of a RooRealVar as a separate object. The main reason of; existence of this class is to facilitate the reuse of existing; techniques to perform calculations that involve a RooRealVars; error, such as calculating the pull value.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx:800,error,error,800,roofit/roofitcore/src/RooErrorVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx,2,['error'],['error']
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGaussKronrodIntegrator1D.cxx; \class RooGaussKronrodIntegrator1D; \ingroup Roofitcore. Implements the Gauss-Kronrod integration algorithm. An Gaussian quadrature method for numerical integration in which; error is estimation based on evaluation at special points known as; ""Kronrod points."" By suitably picking these points, abscissas from; previous iterations can be reused as part of the new set of points,; whereas usual Gaussian quadrature would require recomputation of; all abscissas at each iteration. This class automatically handles (-inf,+inf) integrals by dividing; the integration in three regions (-inf,-1), (-1,1), (1,inf) and; calculating the 1st and 3rd term using a x -> 1/x coordinate; transformation. This class embeds the Gauss-Kronrod integrator from the GNU; Scientific Library version 1.5 and applies the 10-, 21-, 43- and; 87-point rule in succession until the required target precision is; reached; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx:914,error,error,914,roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx,1,['error'],['error']
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooHist.cxx; \class RooHist; \ingroup Roofitcore. Graphical representation of binned data based on the; TGraphAsymmErrors class. Error bars are calculated using either Poisson; or Binomial statistics. A RooHist is used to represent histograms in; a RooPlot.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:835,Error,Error,835,roofit/roofitcore/src/RooHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx,1,['Error'],['Error']
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooHistError.cxx; \class RooHistError; \ingroup Roofitcore. Singleton class used to calculate the error bars; for each bin of a RooHist object. Errors are calculated by integrating; a specified area of a Poisson or Binomail error distribution.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx:804,error,error,804,roofit/roofitcore/src/RooHistError.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx,3,"['Error', 'error']","['Errors', 'error']"
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. ###",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:909,ERROR,ERROR,909,roofit/roofitcore/src/RooMsgService.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx,1,['ERROR'],['ERROR']
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNormSetCache.cxx; \class RooNormSetCache; \ingroup Roofitcore. Class RooNormSet cache manage the bookkeeping of multiple instances; of sets of integration and normalization observables that effectively; have the same definition. In complex function expression many; RooArgSets with the same contents may be passed to an object that; caches intermediate results dependent on the normalization/integration set; To avoid unnecessary cache faulting, This class tracks all instances; with the same contents and reports to the owner if the present nset/iset; is truly different from the current reference. Class RooNormSet only; evaluates each RooArgSet pointer once, it therefore assumes that; RooArgSets with normalization and/or integration sets are not changes; during their lifetime.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:1145,fault,faulting,1145,roofit/roofitcore/src/RooNormSetCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx,1,['fault'],['faulting']
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooPullVar.cxx; \class RooPullVar; \ingroup Roofitcore. Represents the pull of a measurement w.r.t. the true value; using the measurement and its error. Both the true value and; the measured value (with error) are taken from two user-supplied; RooRealVars. If the measured parameter has an asymmetric error, the proper; side of that error will be used:; \f[; \mathrm{Pull}_x = \frac{x_\mathrm{meas}-x_\mathrm{true}}{\Delta_x}; \f]; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx:852,error,error,852,roofit/roofitcore/src/RooPullVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx,4,['error'],['error']
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealMPFE.cxx; \class RooRealMPFE; \ingroup Roofitcore. Multi-processor front-end for parallel calculation; of RooAbsReal objects. Each RooRealMPFE forks a process that calculates; the value of the proxies RooAbsReal object. The (re)calculation of; the proxied object is started asynchronously with the calculate() option.; A subsequent call to getVal() will return the calculated value when available; If the calculation is still in progress when getVal() is called it blocks; the calling process until the calculation is done. The forked calculation process; is terminated when the front-end object is deleted; Simple use demonstration. ~~~{.cpp}; RooAbsReal* slowFunc ;. double val = slowFunc->getVal() // Evaluate slowFunc in current process. RooRealMPFE mpfe(""mpfe"",""frontend to slowFunc"",*slowFunc) ;; mpfe.calculate() ; // Start calculation of slow-func in remote process; // .. do other stuff here ..; double val = mpfe.getVal() // Wait for remote calculation to finish and retrieve value; ~~~. For general multiprocessing in ROOT, please refer to the TProcessExecutor class. **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:1100,avail,available,1100,roofit/roofitcore/src/RooRealMPFE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx,1,['avail'],['available']
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealVar.cxx; \class RooRealVar; \ingroup Roofitcore. Variable that can be changed from the outside.; For example by the user or a fitter. It can be written into datasets, can hold a (possibly asymmetric) error, and; can have several ranges. These can be accessed with names, to e.g. limit fits; or integrals to sub ranges. The range without any name is used as default range.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:913,error,error,913,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['error'],['error']
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooArgList; /// RooArgList is a container object that can hold multiple RooAbsArg objects.; /// The container has list semantics which means that:; ///; /// - Contained objects are ordered, The iterator; /// follows the object insertion order.; ///; /// - Objects can be retrieved by name and index; ///; /// - Multiple objects with the same name are allowed; ///; /// Ownership of contents.; ///; /// Unowned objects are inserted with the add() method. Owned objects; /// are added with addOwned() or addClone(). A RooArgSet either owns all; /// of it contents, or none, which is determined by the first `<add>`; /// call. Once an ownership status is selected, inappropriate `<add>` calls; /// will return error status. Clearing the list via removeAll() resets the; /// ownership status. Arguments supplied in the constructor are always added; /// as unowned elements.; ///; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgList.cxx:1493,error,error,1493,roofit/roofitcore/src/RooArgList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgList.cxx,1,['error'],['error']
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooFitResult; /// RooFitResult is a container class to hold the input and output; /// of a PDF fit to a dataset. It contains:; ///; /// * Values of all constant parameters; /// * Initial and final values of floating parameters with error; /// * Correlation matrix and global correlation coefficients; /// * NLL and EDM at minimum; ///; /// No references to the fitted PDF and dataset are stored; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:1018,error,error,1018,roofit/roofitcore/src/RooFitResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx,1,['error'],['error']
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooXYChi2Var; /// RooXYChi2Var implements a simple chi^2 calculation from an unbinned; /// dataset with values x,y with errors on y (and optionally on x) and a function.; /// The function can be either a RooAbsReal, or an extended RooAbsPdf where; /// the function value is calculated as the probability density times the; /// expected number of events.; /// The chi^2 is calculated as; /// ```; ///; /// / (Data[y]-) - func \+2; /// Sum[point] | ------------------ |; /// \ Data[ErrY] /; /// ```; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:906,error,errors,906,roofit/roofitcore/src/RooXYChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx,1,['error'],['errors']
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * AL, Alfio Lazzaro, INFN Milan, alfio.lazzaro@mi.infn.it *; * PB, Patrick Bos, NL eScience Center, p.bos@esciencecenter.nl *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMinimizer.cxx; \class RooMinimizer; \ingroup Roofitcore. Wrapper class around ROOT::Math::Minimizer that; provides a seamless interface between the minimizer functionality; and the native RooFit interface.; By default the Minimizer is Minuit 2.; RooMinimizer can minimize any RooAbsReal function with respect to; its parameters. Usual choices for minimization are the object returned by; RooAbsPdf::createNLL() or RooAbsReal::createChi2().; RooMinimizer has methods corresponding to MINUIT functions like; hesse(), migrad(), minos() etc. In each of these function calls; the state of the MINUIT engine is synchronized with the state; of the RooFit variables: any change in variables, change; in the constant status etc is forwarded to MINUIT prior to; execution of the MINUIT call. Afterwards the RooFit objects; are resynchronized with the output state of MINUIT: changes; parameter values, errors are propagated.; Various methods are available to control verbosity, profiling,; automatic PDF optimization.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:1602,error,errors,1602,roofit/roofitcore/src/RooMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx,2,"['avail', 'error']","['available', 'errors']"
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * TS, Thomas Schietinger, SLAC, schieti@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooVoigtian; \ingroup Roofit. RooVoigtian is an efficient implementation of the convolution of a; Breit-Wigner with a Gaussian, making use of the complex error function.; RooFitCore provides two algorithms for the evaluation of the complex error; function (the default CERNlib C335 algorithm, and a faster, look-up-table; based method). By default, RooVoigtian employs the default (CERNlib); algorithm. Select the faster algorithm either in the constructor, or with; the selectFastAlgorithm() method. \note The ""width"" parameter that determines the Breit-Wigner shape; represents the **full width at half maximum (FWHM)** of the; Breit-Wigner (often referred to as \f$\Gamma\f$ or \f$2\gamma\f$).; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooVoigtian.cxx:798,error,error,798,roofit/roofit/src/RooVoigtian.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooVoigtian.cxx,2,['error'],['error']
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooUnblindCPAsymVar; \ingroup Roofit. Implementation of BlindTools' CP asymmetry blinding method; A RooUnblindCPAsymVar object is a real valued function; object, constructed from a blind value holder and a; set of unblinding parameters. When supplied to a PDF; in lieu of a regular parameter, the blind value holder; supplied to the unblinded objects will in a fit be minimized; to blind value corresponding to the actual minimum of the; parameter. The transformation is chosen such that the; the error on the blind parameters is identical to that; of the unblind parameter; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUnblindCPAsymVar.cxx:1201,error,error,1201,roofit/roofit/src/RooUnblindCPAsymVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUnblindCPAsymVar.cxx,1,['error'],['error']
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooUnblindOffset; \ingroup Roofit. Implementation of BlindTools' offset blinding method; A RooUnblindOffset object is a real valued function; object, constructed from a blind value holder and a; set of unblinding parameters. When supplied to a PDF; in lieu of a regular parameter, the blind value holder; supplied to the unblinded objects will in a fit be minimized; to blind value corresponding to the actual minimum of the; parameter. The transformation is chosen such that the; the error on the blind parameters is identical to that; of the unblind parameter; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUnblindOffset.cxx:1189,error,error,1189,roofit/roofit/src/RooUnblindOffset.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUnblindOffset.cxx,1,['error'],['error']
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooUnblindPrecision; \ingroup Roofit. Implementation of BlindTools' precision blinding method; A RooUnblindPrecision object is a real valued function; object, constructed from a blind value holder and a; set of unblinding parameters. When supplied to a PDF; in lieu of a regular parameter, the blind value holder; supplied to the unblinded objects will in a fit be minimized; to blind value corresponding to the actual minimum of the; parameter. The transformation is chosen such that the; the error on the blind parameters is identical to that; of the unblind parameter; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUnblindPrecision.cxx:1198,error,error,1198,roofit/roofit/src/RooUnblindPrecision.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUnblindPrecision.cxx,1,['error'],['error']
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooUnblindUniform; \ingroup Roofit. Implementation of BlindTools' offset blinding method.; A RooUnblindUniform object is a real-valued function; object, constructed from a parameter to be blinded and a; set of config parameters to change the blinding method.; When supplied to a PDF in lieu of the regular parameter,; a transformation will be applied such that the likelihood is computed with the actual; value of the parameter, but RooFit (, the user, MINUIT) see only; the transformed (blinded) value. The transformation is chosen such that; the error of the blind parameter is identical to that; of the original parameter.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUnblindUniform.cxx:1252,error,error,1252,roofit/roofit/src/RooUnblindUniform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUnblindUniform.cxx,1,['error'],['error']
Availability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id: RooNonCentralChiSquare *; * Authors: *; * Kyle Cranmer; * *; *****************************************************************************/; /** \class RooNonCentralChiSquare; \ingroup Roofit. The PDF of the Non-Central Chi Square distribution for n degrees of freedom.; It is the asymptotic distribution of the profile likelihood ratio test q_mu; when a different mu' is true. It is Wald's generalization of Wilks' Theorem. See:. Asymptotic formulae for likelihood-based tests of new physics. By Glen Cowan, Kyle Cranmer, Eilam Gross, Ofer Vitells; http://arXiv.org/abs/arXiv:1007.1727. [Wikipedia](http://en.wikipedia.org/wiki/Noncentral_chi-square_distribution#Approximation). It requires MathMore to evaluate for non-integer degrees of freedom, k. When the Mathmore library is available we can use the MathMore libraries implemented using GSL.; It makes use of the modified Bessel function of the first kind (for k > 2). For k < 2 it uses; the hypergeometric function 0F1.; When is not available we use explicit summation of normal chi-squared distributions; The usage of the sum can be forced by calling SetForceSum(true);. This implementation could be improved. BOOST has a nice implementation:. http://live.boost.org/doc/libs/1_42_0/libs/math/doc/sf_and_dist/html/math_toolkit/dist/dist_ref/dists/nc_chi_squared_dist.html. http://wesnoth.repositoryhosting.com/trac/wesnoth_wesnoth/browser/trunk/include/boost/math/distributions/non_central_chi_squared.hpp?rev=6; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooNonCentralChiSquare.cxx:932,avail,available,932,roofit/roofitmore/src/RooNonCentralChiSquare.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooNonCentralChiSquare.cxx,2,['avail'],['available']
Availability,/*****************************************************************************; * Return the last GIF error (0 if none) and reset the error.		 *; *****************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_err.c:102,error,error,102,graf2d/asimage/src/libAfterImage/libungif/gif_err.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_err.c,2,['error'],['error']
Availability,"/***********************************************************************; * *; * Name: R__unzip Date: 20.01.95 *; * Author: E.Chernyaev (IHEP/Protvino) Revised: *; * *; * Function: In memory ZIP decompression. Can be issued from FORTRAN. *; * Written for DELPHI collaboration (CERN) *; * *; * Input: scrsize - size of input buffer *; * src - input buffer *; * tgtsize - size of target buffer *; * *; * Output: tgt - target buffer (decompressed) *; * irep - size of decompressed data *; * 0 - if error *; * *; ***********************************************************************/; // N.B. (Brian) - I have kept the original note out of complete awe of the; // age of the original code...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx:495,error,error,495,core/zip/src/RZip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx,1,['error'],['error']
Availability,"/********************************************************************; * Advanced streaming functions; * Warning : most of these functions are now redundant with the Advanced API.; * Once Advanced API reaches ""stable"" status,; * redundant functions will be deprecated, and then at some point removed.; ********************************************************************/; /*===== Advanced Streaming compression functions =====*/; /*! ZSTD_initCStream_srcSize() :; * This function is deprecated, and equivalent to:; * ZSTD_CCtx_reset(zcs, ZSTD_reset_session_only);; * ZSTD_CCtx_refCDict(zcs, NULL); // clear the dictionary (if any); * ZSTD_CCtx_setParameter(zcs, ZSTD_c_compressionLevel, compressionLevel);; * ZSTD_CCtx_setPledgedSrcSize(zcs, pledgedSrcSize);; *; * pledgedSrcSize must be correct. If it is not known at init time, use; * ZSTD_CONTENTSIZE_UNKNOWN. Note that, for compatibility with older programs,; * ""0"" also disables frame content size field. It may be enabled in the future.; * Note : this prototype will be marked as deprecated and generate compilation warnings on reaching v1.5.x; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:147,redundant,redundant,147,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,2,['redundant'],['redundant']
Availability,/***************************************************************; * *; * Name: GIFdecode Date: 06.10.92 *; * *; * Function: Decode image from GIF array *; * *; * Input: GIFarr[] - compressed image in GIF format *; * *; * Output: PIXarr[] - image (byte per pixel) *; * Width - image width *; * Height - image height *; * Ncols - number of colors *; * R[] - red components *; * G[] - green components *; * B[] - blue components *; * return - 0 - if O.K. *; * 1 - if error *; * *; ***************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifdecode.c:464,error,error,464,graf2d/win32gdk/src/gifdecode.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifdecode.c,2,['error'],['error']
Availability,/***************************************************************; * *; * Name: GIFinfo Date: 03.10.94 *; * *; * Function: Get information on GIF image *; * *; * Input: GIFarr[] - compressed image in GIF format *; * *; * Output: Width - image width *; * Height - image height *; * Ncols - number of colors *; * return - 0 - if O.K. *; * 1 - if error *; * *; ***************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifdecode.c:343,error,error,343,graf2d/win32gdk/src/gifdecode.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifdecode.c,2,['error'],['error']
Availability,"/*************************************************************; * gdk_error_trap_pop:; * Pop an error trap added with gdk_error_push(); * arguments:; * ; * results:; * 0, if no error occured, otherwise the error code.; *************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdk.c:96,error,error,96,graf2d/win32gdk/gdk/src/gdk/gdk.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdk.c,3,['error'],['error']
Availability,"/*************************************************************; * gdk_error_trap_push:; * Push an error trap. X errors will be trapped until; * the corresponding gdk_error_pop(), which will return; * the error code, if any.; * arguments:; * ; * results:; *************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdk.c:98,error,error,98,graf2d/win32gdk/gdk/src/gdk/gdk.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdk.c,3,['error'],"['error', 'errors']"
Availability,"/***************************************; * Advanced compression API; ***************************************/; /* API design :; * Parameters are pushed one by one into an existing context,; * using ZSTD_CCtx_set*() functions.; * Pushed parameters are sticky : they are valid for next compressed frame, and any subsequent frame.; * ""sticky"" parameters are applicable to `ZSTD_compress2()` and `ZSTD_compressStream*()` !; * __They do not apply to ""simple"" one-shot variants such as ZSTD_compressCCtx()__ .; *; * It's possible to reset all parameters to ""default"" using ZSTD_CCtx_reset().; *; * This API supercedes all other ""advanced"" API entry points in the experimental section.; * In the future, we expect to remove from experimental API entry points which are redundant with this API.; */; /* Compression strategies, listed from fastest to strongest */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:763,redundant,redundant,763,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['redundant'],['redundant']
Availability,"/***************************************; * Simple API; ***************************************/; /*! ZSTD_compress() :; * Compresses `src` content as a single zstd compressed frame into already allocated `dst`.; * Hint : compression runs faster if `dstCapacity` >= `ZSTD_compressBound(srcSize)`.; * @return : compressed size written into `dst` (<= `dstCapacity),; * or an error code if it fails (which can be tested using ZSTD_isError()). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:373,error,error,373,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,/*************/; /****d* libAfterImage/ASText3DType; * NAME; * ASText3DType - Available types of 3D text to be drawn.; * SOURCE; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h:78,Avail,Available,78,graf2d/asimage/src/libAfterImage/asfont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h,1,['Avail'],['Available']
Availability,"/********/; /****d* libAfterImage/asimage/quality; * FUNCTION; * Defines level of output quality/speed ratio; * NAME; * ASIMAGE_QUALITY_POOR there will be no dithering and interpolation used ; * while transforming ; * NAME; * ASIMAGE_QUALITY_FAST there will be no dithering and used while ; * transforming but interpolation will be used.; * NAME; * ASIMAGE_QUALITY_GOOD simplified dithering is performed in addition to ; * interpolation.; * NAME; * ASIMAGE_QUALITY_TOP full dithering and interpolation.; * NAME; * ASIMAGE_QUALITY_DEFAULT requests current default setting - typically; * same as ASIMAGE_QUALITY_GOOD.; * NAME; * MAX_GRADIENT_DITHER_LINES defines number of lines to use for dithering,; * while rendering gradients, in order to create smooth effect. Higher ; * number will slow things down, but will create better gradients.; * SOURCE; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h:798,down,down,798,graf2d/asimage/src/libAfterImage/imencdec.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h,1,['down'],['down']
Availability,"/********/; /****d* libAfterImage/asimage/tint; * FUNCTION; * We use 32 bit ARGB values to define how tinting should be done.; * The formula for tinting particular channel data goes like that:; * tinted_data = (image_data * tint)/128; * So if tint channel value is greater then 127 - same channel will be; * brighter in destination image; if it is lower then 127 - same channel; * will be darker in destination image. Tint channel value of 127; * ( or 0x7F hex ) does not change anything.; * Alpha channel is tinted as well, allowing for creation of; * semitransparent images. Calculations are performed in 24.8 format -; * with 8 bit precision. Result is saturated to avoid overflow, and; * precision is carried over to next pixel ( error diffusion ), when con; * verting 24.8 to 8 bit format.; * NAME; * TINT_NONE special value that disables tinting; * NAME; * TINT_LEAVE_SAME also disables tinting.; * SOURCE; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h:734,error,error,734,graf2d/asimage/src/libAfterImage/asimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h,1,['error'],['error']
Availability,"/*******/; /****s* libAfterImage/asimage/ASImageOutput; * NAME; * ASImageOutput describes the output state of the transformation result.; * It is used to transparently write results into ASImage or XImage with; * different levels of quality.; * DESCRIPTION; * libAfterImage allows for transformation result to be stored in both; * ASImage ( useful for long term storage and subsequent processing ); * and XImage ( useful for transfer of the result onto the X Server).; * At the same time there are 4 different quality levels of output; * implemented. They differ in the way special technics, like error; * diffusion and interpolation are applyed, and allow for fine grained; * selection of quality/speed ratio. ASIMAGE_QUALITY_GOOD should be good; * enough for most applications.; * The following additional output features are implemented :; * 1) Filling of the missing channels with supplied values.; * 2) Error diffusion to improve quality while converting from internal; * 	 24.8 format to 8 bit format.; * 3) Tiling of the output. If tiling_step is greater then 0, then each; * 	 scanlines will be copied into lines found tiling_step one from; * 	 another, upto the edge of the image.; * 4) Reverse order of output. Output image will be mirrored along y; * 	 axis if bottom_to_top is set to True.; * NOTES; * The output_image_scanline method should be called for each scanline; * to be stored. Convenience functions listed below should be used to; * safely alter state of the output instead of direct manipulation of; * the data members. (makes you pity you don't write in C++ doesn't it ?); *; * Also There is a trick in the way how output_image_scanline handles; * empty scanlines while writing ASImage. If back_color of empty scanline; * matches back_color of ASImageOutput - then particular line is erased!; * If back_colors are same - then particular line of ASImage gets filled; * with the back_color of ASScanline. First approach is usefull when; * resulting image will be used in subseque",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h:597,error,error,597,graf2d/asimage/src/libAfterImage/imencdec.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h,2,"['Error', 'error']","['Error', 'error']"
Availability,"/****f* libAfterImage/asfont/draw_text(); * NAME; * draw_text(); * NAME; * draw_fancy_text(); * NAME; * get_text_size(); * NAME; * get_fancy_text_size();; * SYNOPSIS; * ASImage *draw_text( const char *text,; * ASFont *font, ASText3DType type,; * int compression );; * ASImage *draw_fancy_text( const void *text,; * 						 struct ASFont *font, ASTextAttributes *attr,; *							 int compression, ; *							 int length );; * Bool get_text_size( const char *text,; * ASFont *font, ASText3DType type,; * unsigned int *width, unsigned int *height );; * Bool get_fancy_text_size( const void *text,; *	 		 struct ASFont *font, ASTextAttributes *attr,; * 		 unsigned int *width, unsigned int *height,; *							 int length,; *							 int *x_positions ); ; *; * INPUTS; * text 		- actuall text to render; * font 		- pointer to ASFont to render text with; * type - one of the few available types of 3D text.; * compression - compression level to attempt on resulting ASImage.; * width - pointer to value to be set to text width.; * height - pointer to value to be set to text height.; * RETURN VALUE; * Pointer to new ASImage containing rendered text on success.; * NULL on failure.; * DESCRIPTION; * draw_text() creates new ASImage of the size big enough to contain; * entire text. It then renders the text using supplied font as an alpha; * channel of ASImage.; * get_text_size() can be used to determine the size of the text about; * to be drawn, so that appropriate drawable can be prepared.; *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h:868,avail,available,868,graf2d/asimage/src/libAfterImage/asfont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h,2,"['avail', 'failure']","['available', 'failure']"
Availability,"/****f* libAfterImage/asfont/open_freetype_font(); * NAME; * open_freetype_font(); * SYNOPSIS; * ASFont *open_freetype_font( ASFontManager *fontman,; * const char *font_string,; * int face_no,; * int size, Bool verbose);; * INPUTS; * fontman - pointer to previously created ASFontManager. Needed for; * connection to FreeType library, as well as path to; * search fonts in.; * font_string - filename of the file containing font's data.; * face_no - number of face within the font file; * size - font size in points. Applicable only to scalable fonts,; * such as TrueType.; * verbose - if True, extensive error messages will be printed if; * problems encountered.; * RETURN VALUE; * pointer to Opened ASFont structure, containing all the glyphs of the; * font, as well as other relevant info. On failure returns NULL.; * DESCRIPTION; * open_freetype_font() will attempt to find font file in any of the; * directories specified in ASFontManager's font_path. If it fails to do; * so - then it will check if filename has alldigit extentions. It will; * then try to interpret that extention as a face number, and try and; * find the file with extention stripped off.; * If file was found function will atempt to read it using FreeType; * library. If requested face is not available in the font - face 0 will; * be used.; * On success all the font's glyphs will be rendered and cached, and; * needed font geometry info collected.; * When FreeType Library is not available that function does nothing.; *********/; /****f* libAfterImage/asfont/open_X11_font(); * NAME; * open_X11_font(); * SYNOPSIS; * ASFont *open_X11_font( ASFontManager *fontman,; * const char *font_string);; * INPUTS; * fontman - pointer to previously created ASFontManager. Needed for; * connection X Server.; * font_string - name of the font as recognized by Xlib.; * RETURN VALUE; * pointer to Opened ASFont structure, containing all the glyphs of the; * font, as well as other relevant info. On failure returns NULL.; * DESCRIPTION; *",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h:604,error,error,604,graf2d/asimage/src/libAfterImage/asfont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h,2,"['error', 'failure']","['error', 'failure']"
Availability,"/****f* libAfterImage/asimage/asimage_add_line(); * NAME; * asimage_add_line(); * SYNOPSIS; * size_t asimage_add_line ( ASImage * im, ColorPart color,; * CARD32 * data, unsigned int y);; * INPUTS; * im - pointer to valid ASImage structure; * color - color channel's number; * data - raw channel data of 32 bits per pixel - only lowest 8 bits; * gets encoded.; * y - image row starting with 0; * RETURN VALUE; * asimage_add_line() return size of the encoded channel scanline in; * bytes. On failure it will return 0.; * DESCRIPTION; * Encodes raw data of the single channel into ASImage channel scanline.; * based on compression level selected for this ASImage all or part of; * the scanline will be RLE encoded.; *********/; /****f* libAfterImage/asimage/asimage_add_line_mono(); * NAME; * asimage_add_line_mono(); * SYNOPSIS; * size_t asimage_add_line_mono ( ASImage * im, ColorPart color,; * CARD8 value, unsigned int y);; * INPUTS; * im				- pointer to valid ASImage structure; * color			- color channel's number; * value			- value for the channel; * y 				- image row starting with 0; * RETURN VALUE; * asimage_add_line_mono() return size of the encoded channel scanline; * in bytes. On failure it will return 0.; * DESCRIPTION; * encodes ASImage channel scanline to have same color components; * value in every pixel. Useful for vertical gradients for example.; *********/; /****f* libAfterImage/asimage/get_asimage_chanmask(); * NAME; * get_asimage_chanmask(); * SYNOPSIS; * ASFlagType get_asimage_chanmask( ASImage *im);; * INPUTS; * im - valid ASImage object.; * DESCRIPTION; * goes throu all the scanlines of the ASImage and toggles bits ; * representing those components that have at least some data.; *********/; /****f* libAfterImage/asimage/move_asimage_channel(); * NAME; * move_asimage_channel(); * SYNOPSIS; * void move_asimage_channel( ASImage *dst, int channel_dst,; * ASImage *src, int channel_src );; * INPUTS; * dst - ASImage which will have its channel substituted;; * channel_ds",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h:490,failure,failure,490,graf2d/asimage/src/libAfterImage/asimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h,1,['failure'],['failure']
Availability,"/****f* libAfterImage/asimage/asimage_init(); * NAME ; * asimage_init() frees datamembers of the supplied ASImage structure, and; * 	initializes it to all 0.; * SYNOPSIS; * void asimage_init (ASImage * im, Bool free_resources);; * INPUTS; * im - pointer to valid ASImage structure; * free_resources - if True will make function attempt to free; * all non-NULL pointers.; *********/; /****f* libAfterImage/asimage/flush_asimage_cache(); * NAME; * flush_asimage_cache() destroys XImage and mask XImage kept from previous ; * conversions to/from X Pixmap.; * SYNOPSIS; * void flush_asimage_cache (ASImage * im );; * INPUTS; * im - pointer to valid ASImage structure; *********/; /****f* libAfterImage/asimage/asimage_start(); * NAME; * asimage_start() Allocates memory needed to store scanline of the image ; * of supplied size. Assigns all the data members valid values. Makes sure ; * that ASImage structure is ready to store image data.; * SYNOPSIS; * void asimage_start (ASImage * im, unsigned int width,; * unsigned int height,; * unsigned int compression);; * INPUTS; * im - pointer to valid ASImage structure; * width - width of the image; * height - height of the image; * compression - level of compression to perform on image data.; * compression has to be in range of 0-100 with 100; * signifying highest level of compression.; * NOTES; * In order to resize ASImage structure after asimage_start() has been; * called, asimage_init() must be invoked to free all the memory, and; * then asimage_start() has to be called with new dimensions.; *********/; /****f* libAfterImage/asimage/create_asimage(); * NAME; * create_asimage() Performs memory allocation for the new ASImage ; * structure, as well as initialization of allocated structure based on ; * supplied parameters.; * SYNOPSIS; * ASImage *create_asimage( unsigned int width,; * unsigned int height,; * unsigned int compression);; * INPUTS; * width - desired image width; * height - desired image height; * compression - compression leve",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h:488,mask,mask,488,graf2d/asimage/src/libAfterImage/asimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h,1,['mask'],['mask']
Availability,"/****f* libAfterImage/asimage/create_image_layers(); * NAME ; * create_image_layers() - allocate and initialize set of ASImageLayer's.; * SYNOPSIS; * ASImageLayer *create_image_layers( int count );; * INPUTS; * count - number of ASImageLayer structures in allocated array.; * RETURN VALUE; * Pointer to newly allocated and initialized array of ASImageLayer; * structures on Success. NULL in case of any kind of error - that; * should never happen.; * DESCRIPTION; * Performs memory allocation for the new array of ASImageLayer; * structures, as well as initialization of allocated structure to; * sensible defaults - merge_func will be set to alphablend_scanlines.; *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h:411,error,error,411,graf2d/asimage/src/libAfterImage/asimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h,1,['error'],['error']
Availability,"/****f* libAfterImage/asimage/start_image_output(); * NAME; * start_image_output() - initializes output structure; * SYNOPSIS; * ASImageOutput *start_image_output ( struct ASVisual *asv,; * ASImage *im,; * ASAltImFormats format,; * int shift, int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * im - destination ASImage; * format - indicates that output should be written into alternative; * format, such as supplied XImage, ARGB32 array etc.; * shift - precision of scanline data. Supported values are 0 - no; * precision, and 8 - 24.8 precision. Value of that argument; * defines by how much scanline data is shifted rightwards.; * quality - what algorithms should be used while writing data out, i.e.; * full error diffusion, fast error diffusion, no error; * diffusion.; * DESCRIPTION; * start_image_output() creates and initializes new ASImageOutput; * structure based on supplied parameters. Created structure can be; * subsequently used to write scanlines into destination image.; * It is effectively hiding differences of XImage and ASImage and other; * available output formats.; * outpt_image_scanline() method of the structure can be used to write; * out single scanline. Each written scanlines moves internal pointer to; * the next image line, and possibly writes several scanlines at once if; * tiling_step member is not 0.; **********/; /****f* libAfterImage/asimage/set_image_output_back_color(); * NAME; * set_image_output_back_color() - changes background color of output; * SYNOPSIS; * void set_image_output_back_color ( ASImageOutput *imout,; * ARGB32 back_color );; * INPUTS; * imout		- ASImageOutput structure, previously created with; * 			 start_image_output();; * back_color	- new background color value in ARGB format. This color; * 			 will be used to fill empty parts of outgoing scanlines.; *********/; /****f* libAfterImage/asimage/toggle_image_output_direction(); * NAME; * toggle_image_output_direction() - reverses vertical direction of output; * S",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h:733,error,error,733,graf2d/asimage/src/libAfterImage/imencdec.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h,3,['error'],['error']
Availability,"/****f* libAfterImage/asimage2ximage(); * NAME; * asimage2ximage(); * SYNOPSIS; * XImage *asimage2ximage (struct ASVisual *asv, ASImage *im);; * INPUTS; * asv 		- pointer to valid ASVisual structure; * im 		- source ASImage; * RETURN VALUE; * On success returns newly created and encoded XImage of the same; * colordepth as the supplied ASVisual. NULL on failure.; * DESCRIPTION; * asimage2ximage() creates new XImage of the exact same size as; * supplied ASImage, and depth of supplied ASVisual. REd, Green and; * Blue channels of ASImage then gets decoded, and encoded into XImage.; * Missing scanlines get filled with black color.; * NOTES; * Returned pointer to XImage will also be stored in im->alt.ximage,; * and It will be destroyed when XImage is destroyed, or reused in any; * subsequent calls to asimage2ximage(). If any other behaviour is; * desired - make sure you set im->alt.ximage to NULL, to dissociate; * XImage object from ASImage.; * SEE ALSO; * create_visual_ximage(); *********/; /****f* libAfterImage/asimage2alpha_ximage(); * NAME; * asimage2alpha_ximage(); * SYNOPSIS; * XImage *asimage2alpha_ximage (struct ASVisual *asv, ; * ASImage *im, Bool bitmap);; * INPUTS; * asv 		- pointer to valid ASVisual structure; * im 		- source ASImage; * bitmap - if True resulting XImage will have depth of 1 bit -; * traditional X mask; otherwise it will have depth of 8; * (usefull for XFree86 RENDER extension); * RETURN VALUE; * On success returns newly created and encoded XImage of the depth 1 or 8.; * NULL on failure.; * DESCRIPTION; * asimage2alpha_ximage() creates new XImage of the exact same size as; * supplied ASImage, and depth 1 or 8. Alpha channels of ASImage then gets; * decoded, and encoded into XImage. In case requested depth is 1 then; * alpha channel is interpreted like so: 127 or greater is encoded as 1,; * otherwise as 0.; * Missing scanlines get filled with 1s as they signify absence of mask.; * NOTES; * Returned pointer to XImage will also be stored in im->alt",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h:355,failure,failure,355,graf2d/asimage/src/libAfterImage/ximage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h,1,['failure'],['failure']
Availability,"/****f* libAfterImage/blend_scanlines_name2func(); * NAME; * blend_scanlines_name2func(); * NAME; * list_scanline_merging(); * SYNOPSIS; * merge_scanlines_func blend_scanlines_name2func( const char *name );; * void list_scanline_merging(FILE* stream, const char *format);; * INPUTS; * name - string, identifying scanline merging function.; * RETURN VALUE; * returns pointer to the scanline merging function on succes.; * NULL on failure.; * DESCRIPTION; * blend_scanlines_name2func() will strip leading whitespaces off of; * the supplied name, and then will attempt to match it against the list; * of names of merging functions. It will then return pointer to the; * function with matching name.; * list_scanline_merging() simply prints out description of implemented; * blending/merging methods onto the supplied stream, in supplied format.; * Format must include 2 string specs, like so : ""%s - %s"" where first; * one will be substituted to short method name, and second - description; ****************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/blender.h:429,failure,failure,429,graf2d/asimage/src/libAfterImage/blender.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/blender.h,1,['failure'],['failure']
Availability,"/****f* libAfterImage/create_visual_window(); * NAME; * create_visual_window(); * SYNOPSIS; * Window create_visual_window( ASVisual *asv, Window parent,; * int x, int y,; * unsigned int width, unsigned int height,; * unsigned int border_width,; * unsigned int wclass,; * unsigned long mask,; * XSetWindowAttributes *attributes );; * INPUTS; * asv - pointer to the valid ASVisual structure.; * parent - Window ID of the parent the window.; * x, y - initial position of the new window.; * width, height - initial size of the new window.; * border_width - initial border width of the new window.; * wclass - Window class - InputOnly or InputOutput.; * mask - defines what attributes are set.; * attributes - different window attributes.; * RETURN VALUE; * ID of the newly created window on success. None on failure.; * DESCRIPTION; * create_visual_window() will do sanity checks on passed parameters,; * it will then add mandatory attributes if needed, and attempt to; * create window for the specified ASVisual.; *********/; /****f* libAfterImage/create_visual_gc(); * NAME; * create_visual_gc(); * SYNOPSIS; * GC create_visual_gc( ASVisual *asv, Window root,; * unsigned long mask, XGCValues *gcvalues );; * INPUTS; * asv - pointer to the valid ASVisual structure.; * root - Window ID of the root window of destination screen; * mask, gcvalues - values for creation of new GC - see XCreateGC() for; * details.; * RETURN VALUE; * New GC created for regular window on success. NULL on failure.; * DESCRIPTION; * create_visual_gc() will create temporary window for the ASVisual; * specific depth and Visual and it will then create GC for such window.; * Obtained GC should be good to be used for manipulation of windows and; * Pixmaps created for the same ASVisual.; *********/; /****f* libAfterImage/create_visual_pixmap(); * NAME; * create_visual_pixmap(); * SYNOPSIS; * Pixmap create_visual_pixmap( ASVisual *asv, Window root,; * unsigned int width, unsigned int height,; * unsigned int depth );; * INP",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h:285,mask,mask,285,graf2d/asimage/src/libAfterImage/asvisual.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h,3,"['failure', 'mask']","['failure', 'mask']"
Availability,"/****f* libAfterImage/export/ASImage2file(); * NAME; * ASImage2file(); * SYNOPSIS; * Bool ASImage2file( ASImage *im, const char *dir, const char *file,; 					 ASImageFileTypes type, ASImageExportParams *params );; * INPUTS; * im			- Image to write out.; * dir - directory name to write file into (optional,; * could be NULL); * file - file name with or without directory name.; * type - output file format. ( see ASImageFileTypes ); * params - pointer to ASImageExportParams union's member for the; * above type, with additional export parameters, such as; * quality, compression, etc. If NULL then all defaults; * will be used.; * RETURN VALUE; * True on success. False - failure.; * DESCRIPTION; * ASImage2file will construct filename out of dir and file components; * and then will call specific filter to write out file in requested; * format.; * NOTES; * Some formats support compression, others support lossy compression,; * yet others allows you to limit number of colors and colordepth.; * Each specific filter will try to interpret those parameters in its; * own way.; * EXAMPLE; * asmerge.c: ASMerge.3; *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/export.h:673,failure,failure,673,graf2d/asimage/src/libAfterImage/export.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/export.h,1,['failure'],['failure']
Availability,"/****f* libAfterImage/import/file2ASImage(); * NAME; * file2ASImage() - load ASImage from file.; * SYNOPSIS; * ASImage *file2ASImage( const char *file, ASFlagType what,; * double gamma,; * unsigned int compression, ... );; * INPUTS; * file - file name with or without directory name; * what - reserved for future use; * gamma - gamma value to be used to correct image; * compression - compression level of the resulting ASImage; * ... - NULL terminated list of strings, representing; * arbitrary number of directories to be searched each.; * RETURN VALUE; * Pointer to ASImage structure holding image data on success.; * NULL on failure; * DESCRIPTION; * file2ASImage will attempt to interpret filename in the following way:; * 1)It will try to find file using unmodified filename in all the; * provided search paths.; * 2)It will attempt to append .gz and then .Z to the filename and; * find such file in all the provided search paths.; * 3)If filename ends with extension consisting of digits only - it will; * attempt to find file with this extension stripped off. On success; * this extension will be used to load subimage from the file with that; * number. Subimages are supported only for XCF, GIF, BMP, ICO and CUR; * files.; * After the file is found file2ASImage() attempts to detect file format,; * and if it is known it will load it into new ASImage structure.; * EXAMPLE; * asview.c: ASView.2; *********/; /****f* libAfterImage/import/get_asimage(); * NAME; * get_asimage() - increment reference counter if file is already loaded,; * or load image from file.; * SYNOPSIS; * ASImage *get_asimage( ASImageManager* imageman, const char *file,; * ASFlagType what, unsigned int compression );; * INPUTS; * imageman - pointer to valid ASVisual structure.; * file - root window ID for the destination screen.; * what - full image file's name with path.; * compression -; * RETURN VALUE; * Pointer to ASImage structure holding image data on success.; * NULL on failure; * DESCRIPTION; * get_asimag",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.h:629,failure,failure,629,graf2d/asimage/src/libAfterImage/import.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.h,1,['failure'],['failure']
Availability,"/****f* libAfterImage/import/file2pixmap(); * NAME; * file2pixmap() - convinience function to load file into X Pixmap.; * SYNOPSIS; * Pixmap file2pixmap( struct ASVisual *asv, Window root,; * const char *realfilename,; * Pixmap *mask_out);; * INPUTS; * asv - pointer to valid ASVisual structure.; * root - root window ID for the destination screen.; * realfilename - full image file's name with path.; * RETURN VALUE; * Pixmap ID of the X Pixmap filled with loaded image. If mask_out is; * not NULL it will point to image mask Pixmap ID if there is an alpha; * channel in image, None otherwise.; * On failure None will be returned.; * DESCRIPTION; * file2pixmap() will attempt to open specified file and autodetect its; * format. If format is known it will load it into ASImage first, and; * then convert it into X Pixmap. In case image has alpha channel -; * mask Pixmap will be produced if mask_out is not NULL.; *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.h:522,mask,mask,522,graf2d/asimage/src/libAfterImage/import.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.h,3,"['failure', 'mask']","['failure', 'mask']"
Availability,"/****f* libAfterImage/query_screen_visual(); * NAME; * query_screen_visual_id(); * NAME; * query_screen_visual(); * SYNOPSIS; * Bool query_screen_visual_id( ASVisual *asv, Display *dpy, int screen,; * Window root, int default_depth,; *							 VisualID visual_id, Colormap cmap );; * Bool query_screen_visual( ASVisual *asv, Display *dpy, int screen,; * Window root, int default_depth );; * INPUTS; * asv 		- preallocated ASVisual structure.; * dpy 		- valid pointer to opened X display.; * screen 	- screen number on which to query visuals.; * root 	- root window on that screen.; * default_depth- default colordepth of the screen.; * visual_id - optional ID of prefered Visual.; * cmap - optional colormap to be used.; * RETURN VALUE; * True on success, False on failure; * ASVisual structure pointed by asv will have the following data; * members set on success :; * dpy, visual_info, colormap, own_colormap, black_pixel, white_pixel.; * DESCRIPTION; * query_screen_visual_id() will go though prioritized list of possible; * Visuals and attempt to match those to what is available on the; * specified screen. If all items from list fail, then it goes about; * querying default visual.; * query_screen_visual is identical to query_screen_visual_id with; * visual_id and cmap set to 0.; * Once X Visual has been identified, we create X colormap and allocate; * white and black pixels from it.; *********/; /****f* libAfterImage/setup_truecolor_visual(); * NAME; * setup_truecolor_visual(); * SYNOPSIS; * Bool setup_truecolor_visual( ASVisual *asv );; * INPUTS; * asv 		- preallocated ASVisual structure.; * RETURN VALUE; * True on success, False if visual is not TrueColor.; * DESCRIPTION; * setup_truecolor_visual() checks if Visual is indeed TrueColor and if; * so it goes about querying color masks, deducing real XImage; * colordepth, and whether we work in BGR mode. It then goes about; * setting up correct hooks to X IO functions.; *********/; /****f* libAfterImage/setup_pseudo_visual(); * NAM",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h:764,failure,failure,764,graf2d/asimage/src/libAfterImage/asvisual.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h,1,['failure'],['failure']
Availability,"/****f* libAfterImage/transform/colorize_asimage_vector(); * NAME; * colorize_asimage_vector() creates ASImage from double precision indexed ; * image data - usefull for scientific visualisation.; * SYNOPSIS; * Bool colorize_asimage_vector( ASVisual *asv, ASImage *im,; * 		 	 ASVectorPalette *palette,; * ASAltImFormats out_format,; * int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * im - ASImage to update.; * palette - palette to be used in conversion of double precision; * values into colors.; * out_format 	 - optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * quality - output quality; * RETURN VALUE; * True on success, False on failure.; * DESCRIPTION; * This function will try to convert double precision indexed image data; * into actuall color image using palette. Original data should be ; * attached to ASImage using vector member. Operation is relatively fast ; * and allows representation of scientific data as color image with ; * dynamically changing palette.; *********/; /****f* libAfterImage/transform/create_asimage_from_vector(); * NAME; * create_asimage_from_vector() - convinience function allowing to ; * create new ASImage, set its vector data and colorize it using ; * palette - all in one step.; * SYNOPSIS; * ASImage *create_asimage_from_vector( ASVisual *asv, double *vector,; * unsigned int width,; * unsigned int height,; * ASVectorPalette *palette,; * ASAltImFormats out_format,; * unsigned int compression,; * int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * vector - data to be attached to new ASImage and used to generate; * RGB image; * width, height - size of the new image.; * palette - palette to be used in conversion of double precision; * values into colors.; * out_format 	 - optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out- compression level of resulting image",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:725,failure,failure,725,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['failure'],['failure']
Availability,"/****f* libAfterImage/visual2visual_prop(); * NAME; * visual2visual_prop(); * SYNOPSIS; * Bool visual2visual_prop( ASVisual *asv, size_t *size,; * unsigned long *version, unsigned long **data );; * INPUTS; * asv 	- valid ASVisual structure.; * RETURN VALUE; * size - size of the encoded memory block.; * version - version of the encoding; * data - actual encoded memory block; * True on success, False on failure; * DESCRIPTION; * This function will encode ASVisual structure into memory block of; * 32 bit values, suitable for storing in X property.; *********/; /****f* libAfterImage/visual_prop2visual(); * NAME; * visual_prop2visual(); * SYNOPSIS; * Bool visual_prop2visual( ASVisual *asv, Display *dpy, int screen,; * size_t size,; * unsigned long version, unsigned long *data );; * INPUTS; * asv - valid ASVisual structure.; * dpy - valid pointer to open X display.; * screen - screen number.; * size - encoded memory block's size.; * version - version of encoding.; * data - actual encoded memory block.; * RETURN VALUE; * True on success, False on failure; * DESCRIPTION; * visual_prop2visual() will read ASVisual data from the memory block; * encoded by visual2visual_prop(). It could be used to read data from; * X property and convert it into usable information - such as colormap,; * visual info, etc.; * Note: setup_truecolor_visual() or setup_pseudo_visual() has to be; * invoked in order to complete ASVisual setup.; *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h:405,failure,failure,405,graf2d/asimage/src/libAfterImage/asvisual.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h,2,['failure'],['failure']
Availability,"/****h* libAfterImage/ascmap.h; * NAME; * ascmap - Defines main structures and function for image quantization.; * DESCRIPTION; * Image quantization is needed primarily in order to be able to export; * images into file, with colormap format, such as GIF and XPM.; * libAfterImage attempts to allocate colorcells to the most used colors,; * and then approximate remaining colors with the closest colorcell.; *; * Since quality of quantization is in reverse proportion to the number; * of colors in original image, libAfterImage allows to set arbitrary; * level of downsampling of the color spectrum in the range of 8 bit per; * channel to 1 bit per channel. Downsampling is performed by simple; * dropping of less significant bits off of color values.; *; * In order to be able to determine closeness of colors, 3-channel RGB; * values are converted into flat 24bit (or less if downsampling is used); * index. That is done by intermixing bits from different channels, like; * so : R8G8B8R7G7B7...R1G1B1. That flat index is used to arrange colors; * in ascending order, and later on to be able to find closest mapped; * color. Simple hashing technique is used to speed up the; * sorting/searching, as it allows to limit linked lists traversals.; *; * SEE ALSO; * Structures :; * ASColormapEntry; * ASColormap; *; * Functions :; * colormap_asimage(), destroy_colormap(); *; * Other libAfterImage modules :; * ascmap.h asfont.h asimage.h asvisual.h blender.h export.h; * import.h transform.h ximage.h; * AUTHOR; * Sasha Vasko <sasha at aftercode dot net>; *******/; /***********************************************************************************/; /* reduced colormap building code : */; /***********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ascmap.h:563,down,downsampling,563,graf2d/asimage/src/libAfterImage/ascmap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ascmap.h,3,"['Down', 'down']","['Downsampling', 'downsampling']"
Availability,"/****h* libAfterImage/asfont.h; * NAME; * asfont; * DESCRIPTION; * Text drawing functionality.; * Text is drawn as an ASImage with only alpha channel. Since alpha; * channel is 8 bit widths that allows for 256 shades to be used in; * rendered glyphs. That in turn allows for smoothing and antialiasing; * of the drawn text. Such an approcah allows for easy manipulation of; * the drawn text, such as changing color, making it transparent,; * texturizing, rotation, etc.; *; * libAfterImage supports two types of fonts :; * Fonts that could be rendered using standard Xlib functionality, and; * fonts rendered by FreeType 2 library. That may include TrueType; * fonts. When fonts are obtained via Xlib special processing is; * performed in order to smooth its shape and leverage 256 shades; * palette available.; *; * Any font being used is has to be opened first. At that time its; * properties are analysed and glyphs are cached in clients memory.; * Special RLE compression method is used for font glyphs, significantly; * reducing memory utilization without any effect on performance.; *; * Font management and drawing functionality has been designed with; * internatiolization in mind, althou support for locales is not; * complete yet.; * SEE ALSO; * Structures :; * ASFontManager; * ASFont; * ASGlyph; * ASGlyphRange; *; * Functions :; * create_font_manager(), destroy_font_manager(),; * open_freetype_font(), open_X11_font(), get_asfont(),; * destroy_font(), print_asfont(), print_asglyph(),; * draw_text(),; * get_asfont_glyph_spacing(), set_asfont_glyph_spacing(); *; * Other libAfterImage modules :; * ascmap.h asfont.h asimage.h asvisual.h blender.h export.h; * import.h transform.h ximage.h; * AUTHOR; * Sasha Vasko <sasha at aftercode dot net>; ******************/; /****d* libAfterImage/MAX_GLYPHS_PER_FONT; * NAME; * MAX_GLYPHS_PER_FONT - Max value of glyphs per font allowed. ; * We need that so we can detect and avoid broken fonts somehow.; * SOURCE; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h:800,avail,available,800,graf2d/asimage/src/libAfterImage/asfont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h,1,['avail'],['available']
Availability,"/****h* libAfterImage/libAfterImage; * NAME; * libAfterImage - generic imaging library originally designed for; * AfterStep X Window Manager.; *; * PURPOSE; * libAfterImage is the imaging library implemented for AfterStep; * X Window Manager. It has been generalized to be suitable for any; * application in need of robust graphics engine.; *; * It provides facilities for loading images from files of different; * formats, compressed in memory storage of images, scaling,; * tinting/shading, flipping and superimposition of arbitrary number of; * images over each other. In addition it allows for linear gradients; * drawing, and antialiased/smoothed text drawing using both FreeType; * library and X Window fonts.; *; * Primary goals of this library are to achieve exceptional quality of; * images and text, making code fast and small at the same time.; * Additional steps are taken to compensate for screen colordepth; * limitation, and different error diffusion algorithms are used to; * provide for smooth images even in low colordepth modes.; *; * HISTORY; * libAfterImage has been implemented as an attempt to address several; * issues. First one, and most important is that X Window System; * completely lacks any tools for image manipulation, except for very; * rudimentary operations. With Introduction of Render extentions in; * XFree86 4.0 that situation is changing, but still is far from; * perfect. There need is therefore to implement client side image; * manipulation. That inturn creates a problem of image data transfer; * between Server and client.; *; * To avoid that full-time image storage on the client side is needed.; * Which is memory extensive. So there appears to be a need for some; * in-memory compression.; *; * On the other side there is an image quality issue. Its easy to write; * a scaling function by simply dropping out or duplicating pixels,; * but quality is awfull. What is needed is very fast; * averaging/interpolation code. That brings us to the issue of 8 ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h:316,robust,robust,316,graf2d/asimage/src/libAfterImage/afterimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h,2,"['error', 'robust']","['error', 'robust']"
Availability,"/****h* libAfterImage/transform.h; * NAME; * transform; * SYNOPSIS; * Defines transformations that could be performed on ASImage.; * DESCRIPTION; *; * Transformations can be performed with different degree of quality.; * Internal engine uses 24.8 bits per channel per pixel. As the result; * there are no precision loss, while performing complex calculations.; * Error diffusion algorithms could be used to transform it back into 8; * bit without quality loss.; *; * Any Transformation could be performed with the result written directly; * into XImage, so that it could be displayed faster.; *; * Complex interpolation algorithms are used to perform scaling; * operations, thus yielding very good quality. All the transformations; * are performed in integer math, with the result of greater speeds.; * Optional MMX inline assembly has been incorporated into some; * procedures, and allows to achieve considerably better performance on; * compatible CPUs.; *; * SEE ALSO; * Transformations :; * scale_asimage(), tile_asimage(), merge_layers(), ; * 			make_gradient(), flip_asimage(), mirror_asimage(), ; * 			pad_asimage(), blur_asimage_gauss(), fill_asimage(), ; * 			adjust_asimage_hsv(); *; * Other libAfterImage modules :; * ascmap.h asfont.h asimage.h asvisual.h blender.h export.h; * import.h transform.h ximage.h; * AUTHOR; * Sasha Vasko <sasha at aftercode dot net>; *******/; /****f* libAfterImage/transform/scale_asimage(); * NAME; * scale_asimage() - scales source ASImage into new image of requested ; * dimensions. ; * SYNOPSIS; * ASImage *scale_asimage( struct ASVisual *asv,; * ASImage *src,; * unsigned int to_width,; * unsigned int to_height,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality );; * INPUTS; * asv 		- pointer to valid ASVisual structure; * src 		- source ASImage; * to_width 	- desired width of the resulting image; * to_height	- desired height of the resulting image; * out_format 	- optionally describes alternative ASImage format that; * sh",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:363,Error,Error,363,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['Error'],['Error']
Availability,"/****h* libAfterImage/ximage.h; * NAME; * ximage - Defines conversion to and from XImages and Pixmaps.; * DESCRIPTION; * ximage2asimage()	- convert XImage structure into ASImage; * pixmap2asimage()	- convert X11 pixmap into ASImage; * asimage2ximage()	- convert ASImage into XImage; * asimage2mask_ximage() - convert alpha channel of ASImage into XImage; * asimage2pixmap()	- convert ASImage into Pixmap ( possibly using; * 					 precreated XImage ); * asimage2mask() 	- convert alpha channel of ASImage into 1 bit; * 				 	 mask Pixmap.; * SEE ALSO; * Other libAfterImage modules :; * ascmap.h asfont.h asimage.h asvisual.h blender.h export.h; * import.h transform.h ximage.h; * AUTHOR; * Sasha Vasko <sasha at aftercode dot net>; *******/; /****f* libAfterImage/picture_ximage2asimage(); * NAME; * picture_ximage2asimage(); * SYNOPSIS; * ASImage *picture_ximage2asimage ( struct ASVisual *asv,; * XImage * xim, XImage *alpha_xim,; * unsigned int compression );; * INPUTS; * asv - pointer to valid ASVisual structure; * xim - source XImage; * alpha_xim - source XImage for Alpha channel; * compression - degree of compression of resulting ASImage.; * RETURN VALUE; * pointer to newly allocated ASImage, containing encoded data, on; * success. NULL on failure.; * DESCRIPTION; * picture_ximage2asimage will attempt to create new ASImage with the same; * dimensions as supplied XImage. If both XImages are supplied - they must; * have same dimentions. XImage will be decoded based on; * supplied ASVisual, and resulting scanlines will be encoded into; * ASImage.; *********/; /****f* libAfterImage/ximage2asimage(); * NAME; * ximage2asimage() - same as picture_ximage2asimage with alpha_ximage ; * set to NULL. Supplied for compatibility with older versions and for ; * convinience.; * SYNOPSIS; * ASImage *ximage2asimage ( struct ASVisual *asv, XImage * xim,; * unsigned int compression );; * INPUTS; * asv 		 - pointer to valid ASVisual structure; * xim 		 - source XImage; * compression - degree of ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h:525,mask,mask,525,graf2d/asimage/src/libAfterImage/ximage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h,1,['mask'],['mask']
Availability,"/****s* libAfterImage/ASVisual; * NAME; * ASVisual - an abstraction layer on top of X Server Visual.; * DESCRIPTION; * This structure has been introduced in order to compensate for the; * fact that X may have so many different types of Visuals. It provides; * shortcuts to most Visual data, compensated for differences in Visuals.; * For PseudoColor visual it also contains preallocated set of colors.; * This colormap allows us to write XImages very fast and without; * exhausting available X colors. This colormap consist of 8, 64, or 4096; * colors and constitutes fraction of colors available in particular; * colordepth. This colors are allocated to be evenly spread around RGB; * spectrum. Thus when converting from internal presentation - all we; * need to do is to discard unused bits, and use rest of them bits as; * an index in our colormap. Opposite conversion is much trickier and we; * engage into nasty business of having hash table mapping pixel values; * into colors, or straight table doing same in lower colordepths.; * Idea is that we do all internal processing in 32bit colordepth, and; * ASVisual provides us with means to convert it to actual X display; * format. Respectively ASVisual has methods to write out XImage lines; * and read XImage lines.; * ASVisual creation is a tricky process. Basically first we have to go; * through the list of available Visuals and choose the best suitable.; * Then based on the type of this Visual we have to setup our data; * members and method hooks. Several functions provided for that :; * query_screen_visual() - will lookup best suitable visual; * setup_truecolor_visual() - will setup hooks if visual is TrueColor; * setup_pseudo_visual()	 - will setup hooks and data if Visual is; * PseudoColor.; * setup_as_colormap() - will preallocate colors for PseudoColor.; * Alternative to the above is :; * create_asvisual() - it encapsulates all of the above; * functionality, and returns completely set; * up ASVisual object.; * Since Visual ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h:482,avail,available,482,graf2d/asimage/src/libAfterImage/asvisual.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h,2,['avail'],['available']
Availability,/**. Accessor to the Error updator of the builder. @return The FumiliErrorUpdator used by the FumiliBuilder. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliBuilder.h:21,Error,Error,21,math/minuit2/inc/Minuit2/FumiliBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliBuilder.h,1,['Error'],['Error']
Availability,"/**. Complementary error function. \f[ erfc(x) = 1 - erf(x) = \frac{2}{\sqrt{\pi}} \int_{x}^{\infty} e^{-t^2} dt \f]. For detailed description see <A HREF=""http://mathworld.wolfram.com/Erfc.html""> Mathworld</A>.; The implementation used is that of <A HREF=""http://www.netlib.org/cephes"">Cephes</A> from S. Moshier. @ingroup SpecFunc. */; // (26.x.21.2) complementary error function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/SpecFuncMathCore.h:19,error,error,19,math/mathcore/inc/Math/SpecFuncMathCore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/SpecFuncMathCore.h,2,['error'],['error']
Availability,"/**. Error definition of the function. MINUIT defines Parameter errors as the; change in Parameter Value required to change the function Value by up. Normally,; for chisquared fits it is 1, and for negative log likelihood, its Value is 0.5.; If the user wants instead the 2-sigma errors for chisquared fits, it becomes 4,; as Chi2(x+n*sigma) = Chi2(x) + n*n. Comment a little bit better with links!!!!!!!!!!!!!!!!!. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNBase.h:5,Error,Error,5,math/minuit2/inc/Minuit2/FCNBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNBase.h,3,"['Error', 'error']","['Error', 'errors']"
Availability,"/**. Error definition of the function. MINUIT defines Parameter errors as the; change in Parameter Value required to change the function Value by up. Normally,; for chisquared fits it is 1, and for negative log likelihood, its Value is 0.5.; If the user wants instead the 2-sigma errors for chisquared fits, it becomes 4,; as Chi2(x+n*sigma) = Chi2(x) + n*n. \todo Comment a little bit better with links!!!!!!!!!!!!!!!!! Idem for ErrorDef(). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNBase.h:5,Error,Error,5,math/minuit2/inc/Minuit2/FCNBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNBase.h,4,"['Error', 'error']","['Error', 'ErrorDef', 'errors']"
Availability,"/**. Extension of the FCNBase for the Fumili method. Fumili applies only to; minimization problems used for fitting. The method is based on a; linearization of the model function negleting second derivatives.; User needs to provide the model function. The figure-of-merit describing; the difference between the model function and the actual measurements in; the case of chi-square is the sum of the squares of the figures-of-merit; calculated for each measurement point, which is implemented by the; operator() member function. The user still has to implement the calculation; of the individual figures-of-merit (which in the majority of the cases; will be the (measured Value - the Value predicted by the model)/standard deviation; implemented by the FumiliStandardChi2FCN;; however this form can become more complicated (see for an example Numerical Recipes'; section on ""Straight-Line Data with Errors in Both Coordinates"")). @author Andras Zsenei and Lorenzo Moneta, Creation date: 24 Aug 2004. @see <A HREF=""http://www.cern.ch/winkler/minuit/tutorial/mntutorial.pdf"">MINUIT Tutorial</A> on function minimization,; section 5. @see FumiliStandardChi2FCN. @ingroup Minuit. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliChi2FCN.h:898,Error,Errors,898,math/minuit2/inc/Minuit2/FumiliChi2FCN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliChi2FCN.h,1,['Error'],['Errors']
Availability,"/**. In the case of the Fumili algorithm the Error matrix (or the Hessian; matrix containing the (approximate) second derivatives) is calculated; using a linearization of the model function negleting second; derivatives. (In some sense the Name Updator is a little bit misleading; as the Error matrix is not calculated by iteratively updating, like; in Davidon's or other similar variable metric methods, but by; recalculating each time). @author Andras Zsenei and Lorenzo Moneta, Creation date: 28 Sep 2004. @see <A HREF=""http://www.cern.ch/winkler/minuit/tutorial/mntutorial.pdf"">MINUIT Tutorial</A> on function minimization,; section 5. @see DavidonErrorUpdator. @ingroup Minuit. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliErrorUpdator.h:45,Error,Error,45,math/minuit2/inc/Minuit2/FumiliErrorUpdator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliErrorUpdator.h,2,['Error'],['Error']
Availability,/**. Member function that calculates the Error matrix (or the Hessian; matrix containing the (approximate) second derivatives) using a; linearization of the model function negleting second derivatives. @param fMinimumState used to calculate the change in the covariance; matrix between the two iterations. @param fMinimumParameters the parameters at the present iteration. @param fGradientCalculator the Gradient calculator used to retrieved the Parameter transformation. @param lambda the Marquard lambda factor. \todo Some nice latex mathematical formuli... */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliErrorUpdator.h:41,Error,Error,41,math/minuit2/inc/Minuit2/FumiliErrorUpdator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliErrorUpdator.h,1,['Error'],['Error']
Availability,"/**. Member function which is only present due to the design already in place; of the software. As all classes calculating the Error matrix are supposed; inherit from the MinimumErrorUpdator they must inherit this method. In some; methods calculating the aforementioned matrix some of these parameters are; not needed and other parameters are necessary... Hopefully, a more elegant; solution will be found in the future. \todo How to get rid of this dummy method which is only due to the inheritance. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliErrorUpdator.h:127,Error,Error,127,math/minuit2/inc/Minuit2/FumiliErrorUpdator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliErrorUpdator.h,1,['Error'],['Error']
Availability,"/**. \defgroup Minuit Minuit2 Minimization Library. New Object-oriented implementation of the MINUIT minimization package.; More information is available at the home page of the \ref Minuit2Page ""Minuit2"" minimization package"". \ingroup Math; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNBase.h:144,avail,available,144,math/minuit2/inc/Minuit2/FCNBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNBase.h,1,['avail'],['available']
Availability,/**; 			 * Callback for custom error reporting.; 			 * @type {?Function}; 			 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:31,error,error,31,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['error'],['error']
Availability,/**; 			 * Enables error checking and reporting when shader programs are being compiled; 			 * @type {boolean}; 			 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:19,error,error,19,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['error'],['error']
Availability,"/**; 	 * This is a two-pass Gaussian blur for a cubemap. Normally this is done; 	 * vertically and horizontally, but this breaks down on a cube. Here we apply; 	 * the blur latitudinally (around the poles), and then longitudinally (towards; 	 * the poles) to approximate the orthogonally-separable blur. It is least; 	 * accurate at the poles, but still does a decent job.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:129,down,down,129,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['down'],['down']
Availability,/**; * @brief Called by Parser::workhorse() after finishing the parse.; * @param numargs the number of non-option arguments remaining; * @param args pointer to the first remaining non-option argument (if numargs > 0).; *; * @return; * @c false iff a fatal error has occurred.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:256,error,error,256,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['error'],['error']
Availability,/**; * @brief Called by Parser::workhorse() for each Option that has been successfully; * parsed (including unknown; * options if they have a Descriptor whose Descriptor::check_arg does not return; * @ref ARG_ILLEGAL.; *; * Returns @c false iff a fatal error has occured and the parse should be aborted.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:253,error,error,253,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['error'],['error']
Availability,"/**; * @brief Checks argument vectors for validity and parses them into data; * structures that are easier to work with.; *; * @par Example:; * @code; * int main(int argc, char* argv[]); * {; * argc-=(argc>0); argv+=(argc>0); // skip program name argv[0] if present; * option::Stats stats(usage, argc, argv);; * option::Option options[stats.options_max], buffer[stats.buffer_max];; * option::Parser parse(usage, argc, argv, options, buffer);; *; * if (parse.error()); * return 1;; *; * if (options[HELP]); * ...; * @endcode; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:458,error,error,458,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['error'],['error']
Availability,"/**; * @brief Configure a RooRealVar based on information from a JSONNode.; *; * This function configures the provided RooRealVar 'v' based on the information provided in the JSONNode 'p'.; * The JSONNode 'p' contains information about various properties of the RooRealVar, such as its value, error, number of; * bins, etc. The function reads these properties from the JSONNode and sets the corresponding properties of the; * RooRealVar accordingly.; *; * @param domains The reference to the RooFit::JSONIO::Detail::Domains containing domain information for variables (not; * used in this function).; * @param p The JSONNode containing information about the properties of the RooRealVar 'v'.; * @param v The reference to the RooRealVar to be configured.; * @return void; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:293,error,error,293,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,1,['error'],['error']
Availability,"/**; * @brief Functions for checking the validity of option arguments.; *; * @copydetails CheckArg; *; * The following example code; * can serve as starting place for writing your own more complex CheckArg functions:; * @code; * struct Arg: public option::Arg; * {; * static void printError(const char* msg1, const option::Option& opt, const char* msg2); * {; * fprintf(stderr, ""ERROR: %s"", msg1);; * fwrite(opt.name, opt.namelen, 1, stderr);; * fprintf(stderr, ""%s"", msg2);; * }; *; * static option::ArgStatus Unknown(const option::Option& option, bool msg); * {; * if (msg) printError(""Unknown option '"", option, ""'\n"");; * return option::ARG_ILLEGAL;; * }; *; * static option::ArgStatus Required(const option::Option& option, bool msg); * {; * if (option.arg != 0); * return option::ARG_OK;; *; * if (msg) printError(""Option '"", option, ""' requires an argument\n"");; * return option::ARG_ILLEGAL;; * }; *; * static option::ArgStatus NonEmpty(const option::Option& option, bool msg); * {; * if (option.arg != 0 && option.arg[0] != 0); * return option::ARG_OK;; *; * if (msg) printError(""Option '"", option, ""' requires a non-empty argument\n"");; * return option::ARG_ILLEGAL;; * }; *; * static option::ArgStatus Numeric(const option::Option& option, bool msg); * {; * char* endptr = 0;; * if (option.arg != 0 && strtol(option.arg, &endptr, 10)){};; * if (endptr != option.arg && *endptr == 0); * return option::ARG_OK;; *; * if (msg) printError(""Option '"", option, ""' requires a numeric argument\n"");; * return option::ARG_ILLEGAL;; * }; * };; * @endcode; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:379,ERROR,ERROR,379,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['ERROR'],['ERROR']
Availability,"/**; * @brief Returns @c true if an unrecoverable error occurred while parsing options.; *; * An illegal argument to an option (i.e. CheckArg returns @ref ARG_ILLEGAL) is an; * unrecoverable error that aborts the parse. Unknown options are only an error if; * their CheckArg function returns @ref ARG_ILLEGAL. Otherwise they are collected.; * In that case if you want to exit the program if either an illegal argument; * or an unknown option has been passed, use code like this; *; * @code; * if (parser.error() || options[UNKNOWN]); * exit(1);; * @endcode; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:50,error,error,50,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,4,['error'],['error']
Availability,"/**; * @brief Signature of functions that check if an argument is valid for a certain type of option.; *; * Every Option has such a function assigned in its Descriptor.; * @code; * Descriptor usage[] = { {UNKNOWN, 0, """", """", Arg::None, """"}, ... };; * @endcode; *; * A CheckArg function has the following signature:; * @code ArgStatus CheckArg(const Option& option, bool msg); @endcode; *; * It is used to check if a potential argument would be acceptable for the option.; * It will even be called if there is no argument. In that case @c option.arg will be @c NULL.; *; * If @c msg is @c true and the function determines that an argument is not acceptable and; * that this is a fatal error, it should output a message to the user before; * returning @ref ARG_ILLEGAL. If @c msg is @c false the function should remain silent (or you; * will get duplicate messages).; *; * See @ref ArgStatus for the meaning of the return values.; *; * While you can provide your own functions,; * often the following pre-defined checks (which never return @ref ARG_ILLEGAL) will suffice:; *; * @li @c Arg::None @copybrief Arg::None; * @li @c Arg::Optional @copybrief Arg::Optional; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:684,error,error,684,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['error'],['error']
Availability,"/**; * @brief The long option name (without the leading @c -- ).; *; * If this Descriptor should not have a long option name, use the empty; * string """". NULL is not permitted here!; *; * While @ref shortopt allows multiple short option characters, each; * Descriptor can have only a single long option name. If you have multiple; * long option names referring to the same option use separate Descriptors; * that have the same @ref index and @ref type. You may repeat; * short option characters in such an alias Descriptor but there's no need to.; *; * @par Dummy Descriptors:; * You can use dummy Descriptors with an; * empty string for both @ref shortopt and @ref longopt to add text to; * the usage that is not related to a specific option. See @ref help.; * The first dummy Descriptor will be used for unknown options (see below).; *; * @par Unknown Option Descriptor:; * The first dummy Descriptor in the list of Descriptors,; * whose @ref shortopt and @ref longopt are both the empty string, will be used; * as the Descriptor for unknown options. An unknown option is a string in; * the argument vector that is not a lone minus @c '-' but starts with a minus; * character and does not match any Descriptor's @ref shortopt or @ref longopt. @n; * Note that the dummy descriptor's @ref check_arg function @e will be called and; * its return value will be evaluated as usual. I.e. if it returns @ref ARG_ILLEGAL; * the parsing will be aborted with <code>Parser::error()==true</code>. @n; * if @c check_arg does not return @ref ARG_ILLEGAL the descriptor's; * @ref index @e will be used to pick the linked list into which; * to put the unknown option. @n; * If there is no dummy descriptor, unknown options will be dropped silently.; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:1464,error,error,1464,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['error'],['error']
Availability,/**; * @brief Writes an error message to the RooFit message service and throws a runtime_error.; *; * @param s The error message to be logged and thrown.; * @return void; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:24,error,error,24,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,2,['error'],['error']
Availability,"/**; * @defgroup LLVMCBitReader Bit Reader; * @ingroup LLVMC; *; * @{; */; /* Builds a module from the bitcode in the specified memory buffer, returning a; reference to the module via the OutModule parameter. Returns 0 on success.; Optionally returns a human-readable error message via OutMessage. This is deprecated. Use LLVMParseBitcode2. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/BitReader.h:268,error,error,268,interpreter/llvm-project/llvm/include/llvm-c/BitReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/BitReader.h,1,['error'],['error']
Availability,/**; * @defgroup LLVMCCoreIRReader IR Reader; * @ingroup LLVMCCore; *; * @{; */; /**; * Read LLVM IR from a memory buffer and convert it into an in-memory Module; * object. Returns 0 on success.; * Optionally returns a human-readable description of any errors that; * occurred during parsing IR. OutMessage must be disposed with; * LLVMDisposeMessage.; *; * @see llvm::ParseIR(); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/IRReader.h:253,error,errors,253,interpreter/llvm-project/llvm/include/llvm-c/IRReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/IRReader.h,1,['error'],['errors']
Availability,"/**; * @defgroup LLVMCCoreValueGeneral General APIs; *; * Functions in this section work on all LLVMValueRef instances,; * regardless of their sub-type. They correspond to functions available; * on llvm::Value.; *; * @{; */; /**; * Obtain the type of a value.; *; * @see llvm::Value::getType(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:182,avail,available,182,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['avail'],['available']
Availability,/**; * @defgroup LLVMCError Error Handling; * @ingroup LLVMC; *; * @{; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h:28,Error,Error,28,interpreter/llvm-project/llvm/include/llvm-c/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h,1,['Error'],['Error']
Availability,/**; * @internal; * @brief This is the core function that does all the parsing.; * @retval false iff an unrecoverable error occurred.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:118,error,error,118,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['error'],['error']
Availability,"/**; * @}; */; /**; * @defgroup LLVMCCoreType Types; *; * Types represent the type of a value.; *; * Types are associated with a context instance. The context internally; * deduplicates types so there is only 1 instance of a specific type; * alive at a time. In other words, a unique type is shared among all; * consumers within a context.; *; * A Type in the C API corresponds to llvm::Type.; *; * Types have the following hierarchy:; *; * types:; * integer type; * real type; * function type; * sequence types:; * array type; * pointer type; * vector type; * void type; * label type; * opaque type; *; * @{; */; /**; * Obtain the enumerated type of a Type instance.; *; * @see llvm::Type:getTypeID(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:242,alive,alive,242,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['alive'],['alive']
Availability,"/**; * @}; */; /**; * @}; */; /**; * @defgroup LLVMCCoreValues Values; *; * The bulk of LLVM's object model consists of values, which comprise a very; * rich type hierarchy.; *; * LLVMValueRef essentially represents llvm::Value. There is a rich; * hierarchy of classes within this type. Depending on the instance; * obtained, not all APIs are available.; *; * Callers can determine the type of an LLVMValueRef by calling the; * LLVMIsA* family of functions (e.g. LLVMIsAArgument()). These; * functions are defined by a macro, so it isn't obvious which are; * available by looking at the Doxygen source code. Instead, look at the; * source definition of LLVM_FOR_EACH_VALUE_SUBCLASS and note the list; * of value names given. These value names also correspond to classes in; * the llvm::Value hierarchy.; *; * @{; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:343,avail,available,343,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,2,['avail'],['available']
Availability,"/**; * @}; */; /**; * \defgroup CINDEX_CURSOR_SOURCE Mapping between cursors and source code; *; * Cursors represent a location within the Abstract Syntax Tree (AST). These; * routines help map between cursors and the physical locations where the; * described entities occur in the source code. The mapping is provided in; * both directions, so one can map from source code to the AST and back.; *; * @{; */; /**; * Map a source location to the cursor that describes the entity at that; * location in the source code.; *; * clang_getCursor() maps an arbitrary source location within a translation; * unit down to the most specific cursor that describes the entity at that; * location. For example, given an expression \c x + y, invoking; * clang_getCursor() with a source location pointing to ""x"" will return the; * cursor for ""x""; similarly for ""y"". If the cursor points anywhere between; * ""x"" or ""y"" (e.g., on the + or the whitespace around it), clang_getCursor(); * will return a cursor referring to the ""+"" expression.; *; * \returns a cursor representing the entity at the given source location, or; * a NULL cursor if no such entity can be found.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:605,down,down,605,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['down'],['down']
Availability,"/**; * A PDF Tiling pattern.; *; * Only available in ""advanced"" API mode.; *; * @param {Array.<Number>} boundingBox The bounding box at which one pattern cell gets clipped.; * @param {Number} xStep Horizontal spacing between pattern cells.; * @param {Number} yStep Vertical spacing between pattern cells.; * @param {API.GState=} gState An additional graphics state that gets applied to the pattern (optional).; * @param {Matrix=} matrix A matrix that describes the transformation between the pattern coordinate system; * and the use coordinate system (optional).; * @constructor; * @extends API.Pattern; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:40,avail,available,40,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['avail'],['available']
Availability,"/**; * A custom generator function. This can be used to create a custom generator; * object using LLVMOrcCreateCustomCAPIDefinitionGenerator. The resulting; * object can be attached to a JITDylib, via LLVMOrcJITDylibAddGenerator, to; * receive callbacks when lookups fail to match existing definitions.; *; * GeneratorObj will contain the address of the custom generator object.; *; * Ctx will contain the context object passed to; * LLVMOrcCreateCustomCAPIDefinitionGenerator.; *; * LookupState will contain a pointer to an LLVMOrcLookupStateRef object. This; * can optionally be modified to make the definition generation process; * asynchronous: If the LookupStateRef value is copied, and the original; * LLVMOrcLookupStateRef set to null, the lookup will be suspended. Once the; * asynchronous definition process has been completed clients must call; * LLVMOrcLookupStateContinueLookup to continue the lookup (this should be; * done unconditionally, even if errors have occurred in the mean time, to; * free the lookup state memory and notify the query object of the failures).; * If LookupState is captured this function must return LLVMErrorSuccess.; *; * The Kind argument can be inspected to determine the lookup kind (e.g.; * as-if-during-static-link, or as-if-during-dlsym).; *; * The JD argument specifies which JITDylib the definitions should be generated; * into.; *; * The JDLookupFlags argument can be inspected to determine whether the original; * lookup included non-exported symbols.; *; * Finally, the LookupSet argument contains the set of symbols that could not; * be found in JD already (the set of generation candidates).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:962,error,errors,962,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,2,"['error', 'failure']","['errors', 'failures']"
Availability,"/**; * A function for applying transformations to an object file buffer.; *; * Implementations of this type are responsible for managing the lifetime; * of the memory buffer pointed to by ObjInOut: If the LLVMMemoryBufferRef; * value is overwritten then the function is responsible for disposing of the; * incoming buffer. If the buffer is simply accessed/mutated in-place then; * ownership returns to the caller and the function does not need to do any; * lifetime management.; *; * The transform is allowed to return an error, in which case the ObjInOut; * buffer should be disposed of and set to null.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:522,error,error,522,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['error'],['error']
Availability,"/**; * A generic error code, no further details are available.; *; * Errors of this kind can get their own specific error codes in future; * libclang versions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h:17,error,error,17,interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h,4,"['Error', 'avail', 'error']","['Errors', 'available', 'error']"
Availability,"/**; * A map of available font-faces, as passed in the options of; * .html(). If set a limited implementation of the font style matching; * algorithm defined by https://www.w3.org/TR/css-fonts-3/#font-matching-algorithm; * will be used. If not set it will fallback to previous behavior.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:16,avail,available,16,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['avail'],['available']
Availability,"/**; * A pattern describing a shading pattern.; *; * Only available in ""advanced"" API mode.; *; * @param {String} type One of ""axial"" or ""radial""; * @param {Array<Number>} coords Either [x1, y1, x2, y2] for ""axial"" type describing the two interpolation points; * or [x1, y1, r, x2, y2, r2] for ""radial"" describing inner and the outer circle.; * @param {Array<Object>} colors An array of objects with the fields ""offset"" and ""color"". ""offset"" describes; * the offset in parameter space [0, 1]. ""color"" is an array of length 3 describing RGB values in [0, 255].; * @param {GState=} gState An additional graphics state that gets applied to the pattern (optional).; * @param {Matrix=} matrix A matrix that describes the transformation between the pattern coordinate system; * and the use coordinate system (optional).; * @constructor; * @extends API.Pattern; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:58,avail,available,58,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['avail'],['available']
Availability,"/**; * A pinned array of specific type that allocated on the host with `cudaMallocHost` and freed with `cudaFreeHost`.; * The memory is ""pinned"", i.e. page-locked and accessible to the device for fast copying.; * \see The documentation of `cudaMallocHost` on <a; * href=""https://developer.download.nvidia.com/compute/DevZone/docs/html/C/doc/html/group__CUDART__HIGHLEVEL_ge439496de696b166ba457dab5dd4f356.html"">developer.download.nvidia.com</a>.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h:289,down,download,289,roofit/batchcompute/src/CudaInterface.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h,2,['down'],['download']
Availability,/**; * A positive double constant expression. HUGE_VAL evaluates; * to +infinity. Used as an error value returned by the built-in; * math functions.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c-base.h:93,error,error,93,interpreter/llvm-project/clang/lib/Headers/opencl-c-base.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c-base.h,1,['error'],['error']
Availability,/**; * A positive float constant expression. HUGE_VALF evaluates; * to +infinity. Used as an error value returned by the built-in; * math functions.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c-base.h:93,error,error,93,interpreter/llvm-project/clang/lib/Headers/opencl-c-base.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c-base.h,1,['error'],['error']
Availability,"/**; * A reference to a set of overloaded functions or function templates; * that has not yet been resolved to a specific function or function template.; *; * An overloaded declaration reference cursor occurs in C++ templates where; * a dependent name refers to a function. For example:; *; * \code; * template<typename T> void swap(T&, T&);; *; * struct X { ... };; * void swap(X&, X&);; *; * template<typename T>; * void reverse(T* first, T* last) {; * while (first < last - 1) {; * swap(*first, *--last);; * ++first;; * }; * }; *; * struct Y { };; * void swap(Y&, Y&);; * \endcode; *; * Here, the identifier ""swap"" is associated with an overloaded declaration; * reference. In the template definition, ""swap"" refers to either of the two; * ""swap"" functions declared above, so both results will be available. At; * instantiation time, ""swap"" may also refer to other functions found via; * argument-dependent lookup (e.g., the ""swap"" function at the end of the; * example).; *; * The functions \c clang_getNumOverloadedDecls() and; * \c clang_getOverloadedDecl() can be used to retrieve the definitions; * referenced by this cursor.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:800,avail,available,800,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['avail'],['available']
Availability,"/**; * A string that describes the platform for which this structure; * provides availability information.; *; * Possible values are ""ios"" or ""macos"".; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:81,avail,availability,81,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['avail'],['availability']
Availability,"/**; * Add a module to a ThinLTO code generator. Identifier has to be unique among; * all the modules in a code generator. The data buffer stays owned by the; * client, and is expected to be available for the entire lifetime of the; * thinlto_code_gen_t it is added to.; *; * On failure, returns NULL (check lto_get_error_message() for details).; *; *; * \since LTO_API_VERSION=18; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:191,avail,available,191,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,2,"['avail', 'failure']","['available', 'failure']"
Availability,/**; * Add an object module to the set of modules for which code will be generated.; * Returns true on error (check lto_get_error_message() for details).; *; * \c cg and \c mod must both be in the same context. See \a; * lto_codegen_create_in_local_context() and \a; * lto_module_create_in_codegen_context().; *; * \since prior to LTO_API_VERSION=3; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:103,error,error,103,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['error'],['error']
Availability,"/**; * Adds a new {@link API.ShadingPattern} for later use. Only available in ""advanced"" API mode.; * @param {String} key; * @param {Pattern} pattern; * @function; * @returns {jsPDF}; * @memberof jsPDF#; * @name addPattern; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:65,avail,available,65,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['avail'],['available']
Availability,"/**; * Adds a requirement that another module flag be present and have a; * specified value after linking is performed. The value must be a metadata; * pair, where the first element of the pair is the ID of the module flag; * to be restricted, and the second element of the pair is the value the; * module flag should be restricted to. This behavior can be used to; * restrict the allowable results (via triggering of an error) of linking; * IDs with the **Override** behavior.; *; * @see Module::ModFlagBehavior::Require; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:421,error,error,421,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['error'],['error']
Availability,"/**; * Adds text to page. Supports adding multiline text when 'text' argument is an Array of Strings.; *; * @function; * @instance; * @param {String|Array} text String or array of strings to be added to the page. Each line is shifted one line down per font, spacing settings declared before this call.; * @param {number} x Coordinate (in units declared at inception of PDF document) against left edge of the page.; * @param {number} y Coordinate (in units declared at inception of PDF document) against upper edge of the page.; * @param {Object} [options] - Collection of settings signaling how the text must be encoded.; * @param {string} [options.align=left] - The alignment of the text, possible values: left, center, right, justify.; * @param {string} [options.baseline=alphabetic] - Sets text baseline used when drawing the text, possible values: alphabetic, ideographic, bottom, top, middle, hanging; * @param {number|Matrix} [options.angle=0] - Rotate the text clockwise or counterclockwise. Expects the angle in degree.; * @param {number} [options.rotationDirection=1] - Direction of the rotation. 0 = clockwise, 1 = counterclockwise.; * @param {number} [options.charSpace=0] - The space between each letter.; * @param {number} [options.horizontalScale=1] - Horizontal scale of the text as a factor of the regular size.; * @param {number} [options.lineHeightFactor=1.15] - The lineheight of each line.; * @param {Object} [options.flags] - Flags for to8bitStream.; * @param {boolean} [options.flags.noBOM=true] - Don't add BOM to Unicode-text.; * @param {boolean} [options.flags.autoencode=true] - Autoencode the Text.; * @param {number} [options.maxWidth=0] - Split the text by given width, 0 = no split.; * @param {string} [options.renderingMode=fill] - Set how the text should be rendered, possible values: fill, stroke, fillThenStroke, invisible, fillAndAddForClipping, strokeAndAddPathForClipping, fillThenStrokeAndAddToPathForClipping, addToPathForClipping.; * @param {boolean} [options.i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:243,down,down,243,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['down'],['down']
Availability,/**; * An AST deserialization error has occurred.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h:30,error,error,30,interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h,1,['error'],['error']
Availability,"/**; * An opaque lookup state object. Instances of this type can be captured to; * suspend a lookup while a custom generator function attempts to produce a; * definition.; *; * If a client captures a lookup state object then they must eventually call; * LLVMOrcLookupStateContinueLookup to restart the lookup. This is required; * in order to release memory allocated for the lookup state, even if errors; * have occurred while the lookup was suspended (if these errors have made the; * lookup impossible to complete then it will issue its own error before; * destruction).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:397,error,errors,397,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,3,['error'],"['error', 'errors']"
Availability,"/**; * Attach a custom error reporter function to the ExecutionSession.; *; * The error reporter will be called to deliver failure notices that can not be; * directly reported to a caller. For example, failure to resolve symbols in; * the JIT linker is typically reported via the error reporter (callers; * requesting definitions from the JIT will typically be delivered a; * FailureToMaterialize error instead).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:23,error,error,23,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,7,"['Failure', 'error', 'failure']","['FailureToMaterialize', 'error', 'failure']"
Availability,"/**; * Attempt to claim responsibility for new definitions. This method can be; * used to claim responsibility for symbols that are added to a; * materialization unit during the compilation process (e.g. literal pool; * symbols). Symbol linkage rules are the same as for symbols that are; * defined up front: duplicate strong definitions will result in errors.; * Duplicate weak definitions will be discarded (in which case they will; * not be added to this responsibility instance).; *; * This method can be used by materialization units that want to add; * additional symbols at materialization time (e.g. stubs, compile; * callbacks, metadata); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:353,error,errors,353,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['error'],['errors']
Availability,"/**; * Auxiliar class to bypass the (provisional) lack of vectorization in TFormula::EvalPar.; *; * WrappedMultiTF1Templ::DoParameterDerivation calls TFormula::EvalPar in the case of a general linear function; * built with TFormula using ++; as EvalPar is not vectorized, in order to generalize DoParameterDerivative with; * a general type T, we use this auxiliar class to branch the code in compile time with the double; * specialization (that can call EvalPar) and the general implementation (that throws an error in the case of; * general linear function).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Math/WrappedMultiTF1.h:510,error,error,510,hist/hist/inc/Math/WrappedMultiTF1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Math/WrappedMultiTF1.h,1,['error'],['error']
Availability,"/**; * Base class for errors. Contains error description and source location: file,; * function, line; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/Triangulation.h:22,error,errors,22,math/mathcore/src/CDT/Triangulation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/Triangulation.h,2,['error'],"['error', 'errors']"
Availability,"/**; * Begins a new tiling pattern. All subsequent render calls are drawn to this pattern until {@link API.endTilingPattern}; * gets called. Only available in ""advanced"" API mode.; * @param {API.Pattern} pattern; * @memberof jsPDF#; * @name beginTilingPattern; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:146,avail,available,146,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['avail'],['available']
Availability,"/**; * Breaks down a 4-byte number into its individual bytes, with the least significant bit first; *; * @name lsbFirstWord; * @function; * @param {number} data 32-bit number; * @returns {Array}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:14,down,down,14,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['down'],['down']
Availability,"/**; * Callback type for ExecutionSession lookups.; *; * If Err is LLVMErrorSuccess then Result will contain a pointer to a; * list of ( SymbolStringPtr, JITEvaluatedSymbol ) pairs of length NumPairs.; *; * If Err is a failure value then Result and Ctx are undefined and should; * not be accessed. The Callback is responsible for handling the error; * value (e.g. by calling LLVMGetErrorMessage + LLVMDisposeErrorMessage).; *; * The caller retains ownership of the Result array and will release all; * contained symbol names. Clients are responsible for retaining any symbol; * names that they wish to hold after the function returns.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:219,failure,failure,219,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,2,"['error', 'failure']","['error', 'failure']"
Availability,"/**; * Called when a thread finishes executing, both on error or success.; * Decrements liveJobs and signals any waiting threads if liveJobs == 0.; * If this dictionary is the best so far save it and its parameters.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c:56,error,error,56,builtins/zstd/dictBuilder/cover.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c,2,['error'],['error']
Availability,"/**; * Common function used to match vmrgew and vmrgow shuffles; *; * The indexOffset determines whether to look for even or odd words in; * the shuffle mask. This is based on the of the endianness of the target; * machine.; * - Little Endian:; * - Use offset of 0 to check for odd elements; * - Use offset of 4 to check for even elements; * - Big Endian:; * - Use offset of 0 to check for even elements; * - Use offset of 4 to check for odd elements; * A detailed description of the vector element ordering for little endian and; * big endian can be found at; * http://www.ibm.com/developerworks/library/l-ibm-xl-c-cpp-compiler/index.html; * Targeting your applications - what little endian and big endian IBM XL C/C++; * compiler differences mean to you; *; * The mask to the shuffle vector instruction specifies the indices of the; * elements from the two input vectors to place in the result. The elements are; * numbered in array-access order, starting with the first vector. These vectors; * are always of type v16i8, thus each vector will contain 16 elements of size; * 8. More info on the shuffle vector can be found in the; * http://llvm.org/docs/LangRef.html#shufflevector-instruction; * Language Reference.; *; * The RHSStartValue indicates whether the same input vectors are used (unary); * or two different input vectors are used, based on the following:; * - If the instruction uses the same vector for both inputs, the range of the; * indices will be 0 to 15. In this case, the RHSStart value passed should; * be 0.; * - If the instruction has two different vectors then the range of the; * indices will be 0 to 31. In this case, the RHSStart value passed should; * be 16 (indices 0-15 specify elements in the first vector while indices 16; * to 31 specify elements in the second vector).; *; * \param[in] N The shuffle vector SD Node to analyze; * \param[in] IndexOffset Specifies whether to look for even or odd elements; * \param[in] RHSStartValue Specifies the starting index for th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:153,mask,mask,153,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,2,['mask'],['mask']
Availability,/**; * Compute a base 10 logarithm over an implementationdefined; * range. The maximum error is implementationdefined.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:87,error,error,87,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['error'],['error']
Availability,/**; * Compute a base 2 logarithm over an implementationdefined; * range. The maximum error is implementationdefined.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:86,error,error,86,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['error'],['error']
Availability,/**; * Compute cosine over an implementation-defined range.; * The maximum error is implementation-defined.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:75,error,error,75,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['error'],['error']
Availability,/**; * Compute inverse square root over an implementationdefined; * range. The maximum error is implementationdefined.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:87,error,error,87,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['error'],['error']
Availability,/**; * Compute natural logarithm over an implementationdefined; * range. The maximum error is implementation; * defined.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:85,error,error,85,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['error'],['error']
Availability,/**; * Compute reciprocal over an implementation-defined; * range. The maximum error is implementation-defined.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:79,error,error,79,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['error'],['error']
Availability,/**; * Compute sine over an implementation-defined range.; * The maximum error is implementation-defined.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:73,error,error,73,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['error'],['error']
Availability,/**; * Compute square root over an implementation-defined; * range. The maximum error is implementation-defined.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:80,error,error,80,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['error'],['error']
Availability,/**; * Compute tangent over an implementation-defined range.; * The maximum error is implementation-defined.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:76,error,error,76,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['error'],['error']
Availability,/**; * Compute the base- 10 exponential of x over an; * implementation-defined range. The maximum error is; * implementation-defined.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:98,error,error,98,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['error'],['error']
Availability,/**; * Compute the base- 2 exponential of x over an; * implementation-defined range. The maximum error is; * implementation-defined.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:97,error,error,97,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['error'],['error']
Availability,/**; * Compute the base- e exponential of x over an; * implementation-defined range. The maximum error is; * implementation-defined.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:97,error,error,97,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['error'],['error']
Availability,/**; * Compute x / y over an implementation-defined range.; * The maximum error is implementation-defined.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:74,error,error,74,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['error'],['error']
Availability,"/**; * Compute x to the power y, where x is >= 0. The range of; * x and y are implementation-defined. The maximum error; * is implementation-defined.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:114,error,error,114,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['error'],['error']
Availability,/**; * Construct a FTBitmapGlyph.; *; * @param g The glyph index NOT the char code.; * @return An FTBitmapGlyph or <code>null</code> on failure.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTGLBitmapFont.h:136,failure,failure,136,graf3d/ftgl/inc/FTGLBitmapFont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTGLBitmapFont.h,1,['failure'],['failure']
Availability,/**; * Construct a FTOutlineGlyph.; *; * @param g The glyph index NOT the char code.; * @return An FTOutlineGlyph or <code>null</code> on failure.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTGLOutlineFont.h:138,failure,failure,138,graf3d/ftgl/inc/FTGLOutlineFont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTGLOutlineFont.h,1,['failure'],['failure']
Availability,/**; * Construct a FTPixmapGlyph.; *; * @param g The glyph index NOT the char code.; * @return An FTPixmapGlyph or <code>null</code> on failure.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTGLPixmapFont.h:136,failure,failure,136,graf3d/ftgl/inc/FTGLPixmapFont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTGLPixmapFont.h,1,['failure'],['failure']
Availability,/**; * Construct a FTPolyGlyph.; *; * @param g The glyph index NOT the char code.; * @return An FTPolyGlyph or <code>null</code> on failure.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTGLPolygonFont.h:132,failure,failure,132,graf3d/ftgl/inc/FTGLPolygonFont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTGLPolygonFont.h,1,['failure'],['failure']
Availability,/**; * Construct a FTPolyGlyph.; *; * @param glyphIndex The glyph index NOT the char code.; * @return An FTExtrdGlyph or <code>null</code> on failure.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTGLExtrdFont.h:142,failure,failure,142,graf3d/ftgl/inc/FTGLExtrdFont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTGLExtrdFont.h,1,['failure'],['failure']
Availability,/**; * Construct a FTTextureGlyph.; *; * @param glyphIndex The glyph index NOT the char code.; * @return An FTTextureGlyph or <code>null</code> on failure.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTGLTextureFont.h:147,failure,failure,147,graf3d/ftgl/inc/FTGLTextureFont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTGLTextureFont.h,1,['failure'],['failure']
Availability,/**; * Construct a glyph of the correct type.; *; * Clients must overide the function and return their specialised; * FTGlyph.; *; * @param g The glyph index NOT the char code.; * @return An FT****Glyph or <code>null</code> on failure.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFont.h:227,failure,failure,227,graf3d/ftgl/inc/FTFont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFont.h,1,['failure'],['failure']
Availability,/**; * Constructor. Sets the Error to Invalid_Outline if the glyph isn't an outline.; *; * @param glyph The Freetype glyph to be processed; * @param depth The distance along the z axis to extrude the glyph; * @param useDisplayList Enable or disable the use of Display Lists for this glyph; * <code>true</code> turns ON display lists.; * <code>false</code> turns OFF display lists.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTExtrdGlyph.h:29,Error,Error,29,graf3d/ftgl/inc/FTExtrdGlyph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTExtrdGlyph.h,1,['Error'],['Error']
Availability,/**; * Constructor. Sets the Error to Invalid_Outline if the glyphs isn't an outline.; *; * @param glyph The Freetype glyph to be processed; * @param useDisplayList Enable or disable the use of Display Lists for this glyph; * <code>true</code> turns ON display lists.; * <code>false</code> turns OFF display lists.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTOutlineGlyph.h:29,Error,Error,29,graf3d/ftgl/inc/FTOutlineGlyph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTOutlineGlyph.h,2,['Error'],['Error']
Availability,"/**; * Constructs the burrows-wheeler transformed string of a given string.; * @param T [0..n-1] The input string.; * @param U [0..n-1] The output string. (can be T); * @param A [0..n-1] The temporary array. (can be NULL); * @param n The length of the given string.; * @param num_indexes The length of secondary indexes array. (can be NULL); * @param indexes The secondary indexes array. (can be NULL); * @param openMP enables OpenMP optimization.; * @return The primary index if no error occurred, -1 or -2 otherwise.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/divsufsort.h:483,error,error,483,builtins/zstd/dictBuilder/divsufsort.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/divsufsort.h,1,['error'],['error']
Availability,"/**; * Contains the compressed frame size and an upper-bound for the decompressed frame size.; * Note: before using `compressedSize`, check for errors using ZSTD_isError().; * similarly, before using `decompressedBound`, check for errors using:; * `decompressedBound != ZSTD_CONTENTSIZE_ERROR`; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_internal.h:144,error,errors,144,builtins/zstd/common/zstd_internal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_internal.h,2,['error'],['errors']
Availability,"/**; * Convert an UTF8 StringRef to UTF8, UTF16, or UTF32 depending on; * WideCharWidth. The converted data is written to ResultPtr, which needs to; * point to at least WideCharWidth * (Source.Size() + 1) bytes. On success,; * ResultPtr will point one after the end of the copied string. On failure,; * ResultPtr will not be changed, and ErrorPtr will be set to the location of; * the first character which could not be converted.; * \return true on success.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h:291,failure,failure,291,interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,2,"['Error', 'failure']","['ErrorPtr', 'failure']"
Availability,/**; * Create a ThreadSafeContext containing a new LLVMContext.; *; * Ownership of the underlying ThreadSafeContext data is shared: Clients; * can and should dispose of their ThreadSafeContext as soon as they no longer; * need to refer to it directly. Other references (e.g. from ThreadSafeModules); * will keep the data alive as long as it is needed.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:321,alive,alive,321,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['alive'],['alive']
Availability,"/**; * Create a binary file from the given memory buffer.; *; * The exact type of the binary file will be inferred automatically, and the; * appropriate implementation selected. The context may be NULL except if; * the resulting file is an LLVM IR file.; *; * The memory buffer is not consumed by this function. It is the responsibilty; * of the caller to free it with \c LLVMDisposeMemoryBuffer.; *; * If NULL is returned, the \p ErrorMessage parameter is populated with the; * error's description. It is then the caller's responsibility to free this; * message by calling \c LLVMDisposeMessage.; *; * @see llvm::object::createBinary; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Object.h:431,Error,ErrorMessage,431,interpreter/llvm-project/llvm/include/llvm-c/Object.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Object.h,2,"['Error', 'error']","['ErrorMessage', 'error']"
Availability,"/**; * Create a simple custom MCJIT memory manager. This memory manager can; * intercept allocations in a module-oblivious way. This will return NULL; * if any of the passed functions are NULL.; *; * @param Opaque An opaque client object to pass back to the callbacks.; * @param AllocateCodeSection Allocate a block of memory for executable code.; * @param AllocateDataSection Allocate a block of memory for data.; * @param FinalizeMemory Set page permissions and flush cache. Return 0 on; * success, 1 on error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/ExecutionEngine.h:506,error,error,506,interpreter/llvm-project/llvm/include/llvm-c/ExecutionEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/ExecutionEngine.h,1,['error'],['error']
Availability,"/**; * Create a translation unit from an AST file (\c -emit-ast).; *; * \param[out] out_TU A non-NULL pointer to store the created; * \c CXTranslationUnit.; *; * \returns Zero on success, otherwise returns an error code.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:209,error,error,209,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['error'],['error']
Availability,"/**; * Create an LLJIT instance from an LLJITBuilder.; *; * This operation takes ownership of the Builder argument: clients should not; * dispose of the builder after calling this function (even if the function; * returns an error). If a null Builder argument is provided then a; * default-constructed LLJITBuilder will be used.; *; * On success the resulting LLJIT instance is uniquely owned by the client and; * automatically manages the memory of all JIT'd code and all modules that are; * transferred to it (e.g. via LLVMOrcLLJITAddLLVMIRModule). Disposing of the; * LLJIT instance will free all memory managed by the JIT, including JIT'd code; * and not-yet compiled modules.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/LLJIT.h:225,error,error,225,interpreter/llvm-project/llvm/include/llvm-c/LLJIT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/LLJIT.h,1,['error'],['error']
Availability,"/**; * Create an MCJIT execution engine for a module, with the given options. It is; * the responsibility of the caller to ensure that all fields in Options up to; * the given SizeOfOptions are initialized. It is correct to pass a smaller; * value of SizeOfOptions that omits some fields. The canonical way of using; * this is:; *; * LLVMMCJITCompilerOptions options;; * LLVMInitializeMCJITCompilerOptions(&options, sizeof(options));; * ... fill in those options you care about; * LLVMCreateMCJITCompilerForModule(&jit, mod, &options, sizeof(options),; * &error);; *; * Note that this is also correct, though possibly suboptimal:; *; * LLVMCreateMCJITCompilerForModule(&jit, mod, 0, 0, &error);; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/ExecutionEngine.h:556,error,error,556,interpreter/llvm-project/llvm/include/llvm-c/ExecutionEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/ExecutionEngine.h,2,['error'],['error']
Availability,/**; * Current error code. Zero means no error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFace.h:15,error,error,15,graf3d/ftgl/inc/FTFace.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFace.h,10,['error'],['error']
Availability,/**; * Current error code.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTCharmap.h:15,error,error,15,graf3d/ftgl/inc/FTCharmap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTCharmap.h,1,['error'],['error']
Availability,/**; * DEPRECATED: Enabled chained precompiled preambles in C++.; *; * Note: this is a *temporary* option that is available only while; * we are testing C++ precompiled preamble support. It is deprecated.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:114,avail,available,114,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['avail'],['available']
Availability,"/**; * Describes the availability of a given entity on a particular platform, e.g.,; * a particular class might only be available on Mac OS 10.7 or newer.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:21,avail,availability,21,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,['avail'],"['availability', 'available']"
Availability,"/**; * Describes the availability of a particular entity, which indicates; * whether the use of this entity will result in a warning or error due to; * it being deprecated or unavailable.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:21,avail,availability,21,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,"['avail', 'error']","['availability', 'error']"
Availability,/**; * Describes the kind of error that occurred (if any) in a call to; * \c clang_loadDiagnostics.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h:29,error,error,29,interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,1,['error'],['error']
Availability,/**; * Describes the kind of error that occurred (if any) in a call to; * \c clang_saveTranslationUnit().; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:29,error,error,29,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['error'],['error']
Availability,"/**; * Deserialize a set of diagnostics from a Clang diagnostics bitcode; * file.; *; * \param file The name of the file to deserialize.; * \param error A pointer to a enum value recording if there was a problem; * deserializing the diagnostics.; * \param errorString A pointer to a CXString for recording the error string; * if the file was not successfully loaded.; *; * \returns A loaded CXDiagnosticSet if successful, and NULL otherwise. These; * diagnostics should be released using clang_disposeDiagnosticSet().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h:147,error,error,147,interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,3,['error'],"['error', 'errorString']"
Availability,/**; * Determine if the specified shuffle mask is suitable for the vmrgew or; * vmrgow instructions.; *; * \param[in] N The shuffle vector SD Node to analyze; * \param[in] CheckEven Check for an even merge (true) or an odd merge (false); * \param[in] ShuffleKind Identify the type of merge:; * - 0 = big-endian merge with two different inputs;; * - 1 = either-endian merge with two identical inputs;; * - 2 = little-endian merge with two different inputs (inputs are swapped for; * little-endian merges).; * \param[in] DAG The current SelectionDAG; * \return true iff this shuffle mask; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:42,mask,mask,42,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,2,['mask'],['mask']
Availability,/**; * Determine the availability of the entity that this code-completion; * string refers to.; *; * \param completion_string The completion string to query.; *; * \returns The availability of the completion string.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:21,avail,availability,21,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,['avail'],['availability']
Availability,"/**; * Determine the availability of the entity that this cursor refers to,; * taking the current target platform into account.; *; * \param cursor The cursor to query.; *; * \returns The availability of the cursor.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:21,avail,availability,21,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,['avail'],['availability']
Availability,"/**; * Determine the availability of the entity that this cursor refers to; * on any platforms for which availability information is known.; *; * \param cursor The cursor to query.; *; * \param always_deprecated If non-NULL, will be set to indicate whether the; * entity is deprecated on all platforms.; *; * \param deprecated_message If non-NULL, will be set to the message text; * provided along with the unconditional deprecation of this entity. The client; * is responsible for deallocating this string.; *; * \param always_unavailable If non-NULL, will be set to indicate whether the; * entity is unavailable on all platforms.; *; * \param unavailable_message If non-NULL, will be set to the message text; * provided along with the unconditional unavailability of this entity. The; * client is responsible for deallocating this string.; *; * \param availability If non-NULL, an array of CXPlatformAvailability instances; * that will be populated with platform availability information, up to either; * the number of platforms for which availability information is available (as; * returned by this function) or \c availability_size, whichever is smaller.; *; * \param availability_size The number of elements available in the; * \c availability array.; *; * \returns The number of platforms (N) for which availability information is; * available (which is unrelated to \c availability_size).; *; * Note that the client is responsible for calling; * \c clang_disposeCXPlatformAvailability to free each of the; * platform-availability structures returned. There are; * \c min(N, availability_size) such structures.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:21,avail,availability,21,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,11,['avail'],"['availability', 'available']"
Availability,"/**; * Diagnostic handler type.; * \p severity defines the severity.; * \p diag is the actual diagnostic.; * The diagnostic is not prefixed by any of severity keyword, e.g., 'error: '.; * \p ctxt is used to pass the context set with the diagnostic handler.; *; * \since LTO_API_VERSION=7; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:175,error,error,175,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['error'],['error']
Availability,/**; * Dispose of a JITDylib::DefinitionGenerator. This should only be called if; * ownership has not been passed to a JITDylib (e.g. because some error; * prevented the client from calling LLVMOrcJITDylibAddGenerator).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:147,error,error,147,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['error'],['error']
Availability,/**; * Dispose of a ThreadSafeModule. This should only be called if ownership has; * not been passed to LLJIT (e.g. because some error prevented the client from; * adding this to the JIT).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:129,error,error,129,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['error'],['error']
Availability,/**; * Dispose of an LLVMOrcLLJITBuilderRef. This should only be called if ownership; * has not been passed to LLVMOrcCreateLLJIT (e.g. because some error prevented; * that function from being called).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/LLJIT.h:149,error,error,149,interpreter/llvm-project/llvm/include/llvm-c/LLJIT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/LLJIT.h,1,['error'],['error']
Availability,/**; * Dispose of the given error message.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h:28,error,error,28,interpreter/llvm-project/llvm/include/llvm-c/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h,1,['error'],['error']
Availability,"/**; * Dispose of the given error without handling it. This operation consumes the; * error, and the given LLVMErrorRef value is not usable once this call returns.; * Note: This method *only* needs to be called if the error is not being passed; * to some other consuming operation, e.g. LLVMGetErrorMessage.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h:28,error,error,28,interpreter/llvm-project/llvm/include/llvm-c/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h,3,['error'],['error']
Availability,"/**; * Do not stop processing when fatal errors are encountered.; *; * When fatal errors are encountered while parsing a translation unit,; * semantic analysis is typically stopped early when compiling code. A common; * source for fatal errors are unresolvable include files. For the; * purposes of an IDE, this is undesirable behavior and as much information; * as possible should be reported. Use this flag to enable this behavior.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:41,error,errors,41,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,3,['error'],['errors']
Availability,"/**; * Emits an error if two values disagree, otherwise the resulting value is; * that of the operands.; *; * @see Module::ModFlagBehavior::Error; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:16,error,error,16,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,2,"['Error', 'error']","['Error', 'error']"
Availability,"/**; * Enable/disable crash recovery.; *; * \param isEnabled Flag to indicate if crash recovery is enabled. A non-zero; * value enables crash recovery, while 0 disables it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:28,recover,recovery,28,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,3,['recover'],['recovery']
Availability,"/**; * Ends a tiling pattern and sets the render target to the one active before {@link API.beginTilingPattern} has been called.; *; * Only available in ""advanced"" API mode.; *; * @param {string} key A unique key that is used to reference this pattern at later use.; * @param {API.Pattern} pattern The pattern to end.; * @memberof jsPDF#; * @name endTilingPattern; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:140,avail,available,140,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['avail'],['available']
Availability,/**; * Error codes for Compilation Database; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXCompilationDatabase.h:7,Error,Error,7,interpreter/llvm-project/clang/include/clang-c/CXCompilationDatabase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXCompilationDatabase.h,1,['Error'],['Error']
Availability,"/**; * Error codes returned by libclang routines.; *; * Zero (\c CXError_Success) is the only error code indicating success. Other; * error codes, including not yet assigned non-zero values, indicate errors.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h:7,Error,Error,7,interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h,4,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,/**; * Error function for COVER_selectDict function. Checks if the return; * value is an error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.h:7,Error,Error,7,builtins/zstd/dictBuilder/cover.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.h,2,"['Error', 'error']","['Error', 'error']"
Availability,/**; * Error function for COVER_selectDict function. Returns a struct where; * return.totalCompressedSize is a ZSTD error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.h:7,Error,Error,7,builtins/zstd/dictBuilder/cover.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.h,2,"['Error', 'error']","['Error', 'error']"
Availability,/**; * Error reporter function.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:7,Error,Error,7,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['Error'],['Error']
Availability,/**; * Error thrown when duplicate vertex is detected during vertex insertion; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/Triangulation.h:7,Error,Error,7,math/mathcore/src/CDT/Triangulation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/Triangulation.h,1,['Error'],['Error']
Availability,"/**; * Error thrown when intersecting constraint edges are detected, but; * triangulation is not configured to attempt to resolve them; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/Triangulation.h:7,Error,Error,7,math/mathcore/src/CDT/Triangulation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/Triangulation.h,1,['Error'],['Error']
Availability,/**; * Error thrown when triangulation modification is attempted after it was; * finalized; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/Triangulation.h:7,Error,Error,7,math/mathcore/src/CDT/Triangulation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/Triangulation.h,1,['Error'],['Error']
Availability,/**; * Error type identifier.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h:7,Error,Error,7,interpreter/llvm-project/llvm/include/llvm-c/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h,1,['Error'],['Error']
Availability,/**; * FTFont is the public interface for the FTGL library.; *; * Specific font classes are derived from this class. It uses the helper; * classes FTFace and FTSize to access the Freetype library. This class; * is abstract and deriving classes must implement the protected; * <code>MakeGlyph</code> function to create glyphs of the; * appropriate type.; *; * It is good practice after using these functions to test the error; * code returned. <code>FT_Error Error()</code>. Check the freetype file fterrdef.h; * for error definitions.; *; * @see FTFace; * @see FTSize; * @see FTGlyphContainer; * @see FTGlyph; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFont.h:419,error,error,419,graf3d/ftgl/inc/FTFont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFont.h,3,"['Error', 'error']","['Error', 'error']"
Availability,"/**; * FTLibrary class is the global accessor for the Freetype library.; *; * This class encapsulates the Freetype Library. This is a singleton class; * and ensures that only one FT_Library is in existence at any one time.; * All constructors are private therefore clients cannot create or; * instantiate this class themselves and must access it's methods via the; * static <code>FTLibrary::Instance()</code> function.; *; * Just because this class returns a valid <code>FTLibrary</code> object; * doesn't mean that the Freetype Library has been successfully initialised.; * Clients should check for errors. You can initialse the library AND check; * for errors using the following code...; * <code>err = FTLibrary::Instance().Error();</code>; *; * @see ""Freetype 2 Documentation""; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTLibrary.h:600,error,errors,600,graf3d/ftgl/inc/FTLibrary.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTLibrary.h,3,"['Error', 'error']","['Error', 'errors']"
Availability,/**; * Find minimum position iterating until convergence specified by the absolute and relative tolerance or; * the maximum number of iteration is reached; * Return true if iterations converged successfully; * \@param maxIter maximum number of iteration; * \@param absTol desired absolute error in the minimum position; * \@param absTol desired relative error in the minimum position; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IMinimizer1D.h:96,toler,tolerance,96,math/mathcore/inc/Math/IMinimizer1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IMinimizer1D.h,3,"['error', 'toler']","['error', 'tolerance']"
Availability,"/**; * Find register[s] that can be used in function prologue and epilogue; *; * Find register[s] that can be use as scratch register[s] in function; * prologue and epilogue to save various registers (Link Register, Base; * Pointer, etc.). Prefer R0/R12, if available. Otherwise choose whatever; * register[s] are available.; *; * This method will return true if it is able to find enough unique scratch; * registers (1 or 2 depending on the requirement). If it is unable to find; * enough available registers in the block, it will return false and set; * any passed output parameter that corresponds to a required unique register; * to PPC::NoRegister.; *; * \param[in] MBB The machine basic block to find an available register for; * \param[in] UseAtEnd Specify whether the scratch register will be used at; * the end of the basic block (i.e., will the scratch; * register kill a register defined in the basic block); * \param[in] TwoUniqueRegsRequired Specify whether this basic block will; * require two unique scratch registers.; * \param[out] SR1 The scratch register to use; * \param[out] SR2 The second scratch register. If this pointer is not null; * the function will attempt to set it to an available; * register regardless of whether there is a hard requirement; * for two unique scratch registers.; * \return true if the required number of registers was found.; * false if the required number of scratch register weren't available.; * If either output parameter refers to a required scratch register; * that isn't available, it will be set to an invalid value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h:258,avail,available,258,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h,7,['avail'],['available']
Availability,/**; * GL ERROR returned by the glu tesselator; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTVectoriser.h:10,ERROR,ERROR,10,graf3d/ftgl/inc/FTVectoriser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTVectoriser.h,1,['ERROR'],['ERROR']
Availability,"/**; * Generally behaves like Nullable, except when used in a block parameter that; * was imported into a swift async method. There, swift will assume that the; * parameter can get null even if no error occurred. _Nullable parameters are; * assumed to only get null on error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:197,error,error,197,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,['error'],['error']
Availability,"/**; * Generates code for all added modules into one native object file.; * This calls lto_codegen_optimize then lto_codegen_compile_optimized (instead; * of returning a generated mach-o/ELF buffer, it writes to a file).; *; * The name of the file is written to name. Returns true on error.; *; * \since LTO_API_VERSION=5; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:284,error,error,284,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['error'],['error']
Availability,"/**; * Generates code for all added modules into one native object file.; * This calls lto_codegen_optimize then lto_codegen_compile_optimized.; *; * On success returns a pointer to a generated mach-o/ELF buffer and; * length set to the buffer size. The buffer is owned by the; * lto_code_gen_t and will be freed when lto_codegen_dispose(); * is called, or lto_codegen_compile() is called again.; * On failure, returns NULL (check lto_get_error_message() for details).; *; * \since prior to LTO_API_VERSION=3; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:402,failure,failure,402,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['failure'],['failure']
Availability,"/**; * Generates code for the optimized merged module into one native object file.; * It will not run any IR optimizations on the merged module.; *; * On success returns a pointer to a generated mach-o/ELF buffer and length set; * to the buffer size. The buffer is owned by the lto_code_gen_t and will be; * freed when lto_codegen_dispose() is called, or; * lto_codegen_compile_optimized() is called again. On failure, returns NULL; * (check lto_get_error_message() for details).; *; * \since LTO_API_VERSION=12; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:410,failure,failure,410,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['failure'],['failure']
Availability,"/**; * Get a LLVMOrcCreateStaticLibrarySearchGeneratorForPath that will reflect; * static library symbols into the JITDylib. On success the resulting; * generator is owned by the client. Ownership is typically transferred by; * adding the instance to a JITDylib using LLVMOrcJITDylibAddGenerator,; *; * Call with the optional TargetTriple argument will succeed if the file at; * the given path is a static library or a MachO universal binary containing a; * static library that is compatible with the given triple. Otherwise it will; * return an error.; *; * THIS API IS EXPERIMENTAL AND LIKELY TO CHANGE IN THE NEAR FUTURE!; * ; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:546,error,error,546,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['error'],['error']
Availability,/**; * Get the GL ERROR returned by the glu tesselator; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTVectoriser.h:18,ERROR,ERROR,18,graf3d/ftgl/inc/FTVectoriser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTVectoriser.h,1,['ERROR'],['ERROR']
Availability,/**; * Get the mask value at position Elt in the mask of a ShuffleVector; * instruction.; *; * \Returns the result of \c LLVMGetUndefMaskElem() if the mask value is; * poison at that position.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:15,mask,mask,15,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,3,['mask'],['mask']
Availability,/**; * Get the next argument in \p Remark from the position of \p It.; *; * Returns `NULL` if there are no more arguments available.; *; * The lifetime of the returned value is bound to the lifetime of \p Remark.; *; * \since REMARKS_API_VERSION=0; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Remarks.h:122,avail,available,122,interpreter/llvm-project/llvm/include/llvm-c/Remarks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Remarks.h,1,['avail'],['available']
Availability,/**; * Get the normalized target triple as a string.; *; * Returns the empty string in case of any error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:99,error,error,99,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['error'],['error']
Availability,/**; * Get the number of elements in the mask of a ShuffleVector instruction.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:41,mask,mask,41,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['mask'],['mask']
Availability,/**; * Get the pointer width of the target in bits.; *; * Returns -1 in case of error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:80,error,error,80,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['error'],['error']
Availability,"/**; * Given a cursor that references something else, return the source range; * covering that reference.; *; * \param C A cursor pointing to a member reference, a declaration reference, or; * an operator call.; * \param NameFlags A bitset with three independent flags:; * CXNameRange_WantQualifier, CXNameRange_WantTemplateArgs, and; * CXNameRange_WantSinglePiece.; * \param PieceIndex For contiguous names or when passing the flag; * CXNameRange_WantSinglePiece, only one piece with index 0 is; * available. When the CXNameRange_WantSinglePiece flag is not passed for a; * non-contiguous names, this index can be used to retrieve the individual; * pieces of the name. See also CXNameRange_WantSinglePiece.; *; * \returns The piece of the name pointed to by the given cursor. If there is no; * name, or if the PieceIndex is out-of-range, a null-cursor will be returned.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:499,avail,available,499,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['avail'],['available']
Availability,"/**; * If VecCore is not defined, there is no vectorization available and the SIMD vector; * size will always be one. Then, as every number is a multiple of SIMD vector size, the; * padding will always be zero.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitData.h:60,avail,available,60,math/mathcore/inc/Fit/FitData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitData.h,1,['avail'],['available']
Availability,"/**; * If set, the combo box shall include an editable text box as well as a drop-down list; if clear, it shall include only a drop-down list. This flag shall be used only if the Combo flag is set.; *; * @name AcroFormChoiceField#edit; * @default false; * @type {boolean}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:82,down,down,82,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['down'],['down']
Availability,"/**; * If set, the field is intended for entering a secure password that should not be echoed visibly to the screen. Characters typed from the keyboard shall instead be echoed in some unreadable form, such as asterisks or bullet characters.; * NOTE To protect password confidentiality, readers should never store the value of the text field in the PDF file if this flag is set.; *; * @name AcroFormTextField#password; * @type {boolean}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:87,echo,echoed,87,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['echo'],['echoed']
Availability,"/**; * If targeting mach-o on darwin, this function gets the CPU type and subtype; * that will end up being encoded in the mach-o header. These are the values; * that can be found in mach/machine.h.; *; * \p out_cputype and \p out_cpusubtype must be non-NULL.; *; * Returns true on error (check lto_get_error_message() for details).; *; * \since LTO_API_VERSION=27; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:282,error,error,282,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['error'],['error']
Availability,"/**; * If the provided expression evaluates to an error code, returns that error code.; *; * In debug modes, prints additional information.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_internal.h:50,error,error,50,builtins/zstd/common/zstd_internal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_internal.h,2,['error'],['error']
Availability,"/**; * Index the given source file and the translation unit corresponding; * to that file via callbacks implemented through #IndexerCallbacks.; *; * \param client_data pointer data supplied by the client, which will; * be passed to the invoked callbacks.; *; * \param index_callbacks Pointer to indexing callbacks that the client; * implements.; *; * \param index_callbacks_size Size of #IndexerCallbacks structure that gets; * passed in index_callbacks.; *; * \param index_options A bitmask of options that affects how indexing is; * performed. This should be a bitwise OR of the CXIndexOpt_XXX flags.; *; * \param[out] out_TU pointer to store a \c CXTranslationUnit that can be; * reused after indexing is finished. Set to \c NULL if you do not require it.; *; * \returns 0 on success or if there were errors from which the compiler could; * recover. If there is a failure from which there is no recovery, returns; * a non-zero \c CXErrorCode.; *; * The rest of the parameters are the same as #clang_parseTranslationUnit.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:804,error,errors,804,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,4,"['error', 'failure', 'recover']","['errors', 'failure', 'recover', 'recovery']"
Availability,"/**; * Index the given translation unit via callbacks implemented through; * #IndexerCallbacks.; *; * The order of callback invocations is not guaranteed to be the same as; * when indexing a source file. The high level order will be:; *; * -Preprocessor callbacks invocations; * -Declaration/reference callbacks invocations; * -Diagnostic callback invocations; *; * The parameters are the same as #clang_indexSourceFile.; *; * \returns If there is a failure from which there is no recovery, returns; * non-zero, otherwise returns 0.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:450,failure,failure,450,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,"['failure', 'recover']","['failure', 'recovery']"
Availability,/**; * Indicates that an unknown error occurred while attempting to save; * the file.; *; * This error typically indicates that file I/O failed when attempting to; * write the file.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:33,error,error,33,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,['error'],['error']
Availability,/**; * Indicates that an unknown error occurred while attempting to; * deserialize diagnostics.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h:33,error,error,33,interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,1,['error'],['error']
Availability,/**; * Indicates that errors during translation prevented this attempt; * to save the translation unit.; *; * Errors that prevent the translation unit from being saved can be; * extracted using \c clang_getNumDiagnostics() and \c clang_getDiagnostic().; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:22,error,errors,22,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,"['Error', 'error']","['Errors', 'errors']"
Availability,/**; * Indicates that no error occurred while saving a translation unit.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:25,error,error,25,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['error'],['error']
Availability,/**; * Indicates that no error occurred.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h:25,error,error,25,interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,1,['error'],['error']
Availability,"/**; * Initialises the Freetype library; *; * Even though this function indicates success via the return value,; * clients can't see this so must check the error codes. This function; * is only ever called by the default c_stor; *; * @return <code>true</code> if the Freetype library was; * successfully initialised, <code>false</code>; * otherwise.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTLibrary.h:156,error,error,156,graf3d/ftgl/inc/FTLibrary.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTLibrary.h,1,['error'],['error']
Availability,/**; * Initializes a map of the given size.; * Returns 1 on success and 0 on failure.; * The map must be destroyed with COVER_map_destroy().; * The map is only guaranteed to be large enough to hold size elements.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c:77,failure,failure,77,builtins/zstd/dictBuilder/cover.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c,1,['failure'],['failure']
Availability,"/**; * Install a fatal error handler. By default, if LLVM detects a fatal error, it; * will call exit(1). This may not be appropriate in many contexts. For example,; * doing exit(1) will bypass many crash reporting/tracing system tools. This; * function allows you to install a callback that will be invoked prior to the; * call to exit(1).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/ErrorHandling.h:23,error,error,23,interpreter/llvm-project/llvm/include/llvm-c/ErrorHandling.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/ErrorHandling.h,2,['error'],['error']
Availability,/**; * Installs error handler that prints error message to stderr and calls abort().; * Replaces currently installed error handler (if any).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h:16,error,error,16,interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h,3,['error'],['error']
Availability,"/**; * Instantiates a ThinLTO code generator.; * Returns NULL on error (check lto_get_error_message() for details).; *; *; * The ThinLTOCodeGenerator is not intended to be reuse for multiple; * compilation: the model is that the client adds modules to the generator and; * ask to perform the ThinLTO optimizations / codegen, and finally destroys the; * codegenerator.; *; * \since LTO_API_VERSION=18; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:65,error,error,65,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['error'],['error']
Availability,/**; * Instantiates a code generator.; * Returns NULL on error (check lto_get_error_message() for details).; *; * All modules added using \a lto_codegen_add_module() must have been created; * in the same context as the codegen.; *; * \since prior to LTO_API_VERSION=3; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:57,error,error,57,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['error'],['error']
Availability,"/**; * List the possible error codes for \c clang_Type_getSizeOf,; * \c clang_Type_getAlignOf, \c clang_Type_getOffsetOf and; * \c clang_Cursor_getOffsetOf.; *; * A value of this enumeration type can be returned if the target type is not; * a valid argument to sizeof, alignof or offsetof.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:25,error,error,25,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['error'],['error']
Availability,/**; * Loads an object file from disk. The seek point of fd is not preserved.; * Returns NULL on error (check lto_get_error_message() for details).; *; * \since LTO_API_VERSION=5; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:97,error,error,97,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,2,['error'],['error']
Availability,/**; * Loads an object file from disk.; * Returns NULL on error (check lto_get_error_message() for details).; *; * \since prior to LTO_API_VERSION=3; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:58,error,error,58,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['error'],['error']
Availability,/**; * Loads an object file from memory with an extra path argument.; * Returns NULL on error (check lto_get_error_message() for details).; *; * \since LTO_API_VERSION=9; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:88,error,error,88,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['error'],['error']
Availability,/**; * Loads an object file from memory.; * Returns NULL on error (check lto_get_error_message() for details).; *; * \since prior to LTO_API_VERSION=3; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:60,error,error,60,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['error'],['error']
Availability,"/**; * Loads an object file in its own context.; *; * Loads an object file in its own LLVMContext. This function call is; * thread-safe. However, modules created this way should not be merged into an; * lto_code_gen_t using \a lto_codegen_add_module().; *; * Returns NULL on error (check lto_get_error_message() for details).; *; * \since LTO_API_VERSION=11; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:275,error,error,275,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['error'],['error']
Availability,/**; * Loads an object file in the codegen context.; *; * Loads an object file into the same context as \c cg. The module is safe to; * add using \a lto_codegen_add_module().; *; * Returns NULL on error (check lto_get_error_message() for details).; *; * \since LTO_API_VERSION=11; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:197,error,error,197,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['error'],['error']
Availability,"/**; * Look up symbols in an execution session.; *; * This is a wrapper around the general ExecutionSession::lookup function.; *; * The SearchOrder argument contains a list of (JITDylibs, JITDylibSearchFlags); * pairs that describe the search order. The JITDylibs will be searched in the; * given order to try to find the symbols in the Symbols argument.; *; * The Symbols argument should contain a null-terminated array of; * (SymbolStringPtr, SymbolLookupFlags) pairs describing the symbols to be; * searched for. This function takes ownership of the elements of the Symbols; * array. The Name fields of the Symbols elements are taken to have been; * retained by the client for this function. The client should *not* release the; * Name fields, but are still responsible for destroying the array itself.; *; * The HandleResult function will be called once all searched for symbols have; * been found, or an error occurs. The HandleResult function will be passed an; * LLVMErrorRef indicating success or failure, and (on success) a; * null-terminated LLVMOrcCSymbolMapPairs array containing the function result,; * and the Ctx value passed to the lookup function.; *; * The client is fully responsible for managing the lifetime of the Ctx object.; * A common idiom is to allocate the context prior to the lookup and deallocate; * it in the handler.; *; * THIS API IS EXPERIMENTAL AND LIKELY TO CHANGE IN THE NEAR FUTURE!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:909,error,error,909,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,2,"['error', 'failure']","['error', 'failure']"
Availability,/**; * Macro for inlining non-template functions when in header-only mode to; * avoid multiple declaration errors.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/CDTUtils.h:107,error,errors,107,math/mathcore/src/CDT/CDTUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/CDTUtils.h,1,['error'],['errors']
Availability,"/**; * Map an absolute virtual file path to an absolute real one.; * The virtual path must be canonicalized (not contain "".""/"".."").; * \returns 0 for success, non-zero to indicate an error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/BuildSystem.h:183,error,error,183,interpreter/llvm-project/clang/include/clang-c/BuildSystem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/BuildSystem.h,1,['error'],['error']
Availability,/**; * NVIDIA FXAA by Timothy Lottes; * https://developer.download.nvidia.com/assets/gamedev/files/sdk/11/FXAA_WhitePaper.pdf; * - WebGL port by @supereggbert; * http://www.glge.org/demos/fxaa/; * Further improved by Daniel Sturk; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/FXAAShader.js:58,down,download,58,ui5/eve7/lib/FXAAShader.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/FXAAShader.js,1,['down'],['download']
Availability,"/**; * Namespace for dispatching RooFit computations to various backends.; *; * This namespace contains an interface for providing high-performance computation functions for use in; * RooAbsReal::doEval(), see RooBatchComputeInterface.; *; * Furthermore, several implementations of this interface can be created, which reside in RooBatchCompute::RF_ARCH,; * where RF_ARCH may be replaced by the architecture that this implementation targets, e.g. SSE, AVX, etc.; *; * Using the pointer RooBatchCompute::dispatch, a computation request can be dispatched to the fastest backend that is; * available on a specific platform.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h:587,avail,available,587,roofit/batchcompute/res/RooBatchCompute.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h,1,['avail'],['available']
Availability,/**; * No error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h:10,error,error,10,interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h,1,['error'],['error']
Availability,/**; * Notifies the target JITDylib (and any pending queries on that JITDylib); * that all symbols covered by this MaterializationResponsibility instance; * have been emitted.; *; * This method will return an error if any symbols being resolved have been; * moved to the error state due to the failure of a dependency. If this; * method returns an error then clients should log it and call; * LLVMOrcMaterializationResponsibilityFailMaterialization.; * If no dependencies have been registered for the symbols covered by this; * MaterializationResponsibility then this method is guaranteed to return; * LLVMErrorSuccess.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:209,error,error,209,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,4,"['error', 'failure']","['error', 'failure']"
Availability,"/**; * Notifies the target JITDylib that the given symbols have been resolved.; * This will update the given symbols' addresses in the JITDylib, and notify; * any pending queries on the given symbols of their resolution. The given; * symbols must be ones covered by this MaterializationResponsibility; * instance. Individual calls to this method may resolve a subset of the; * symbols, but all symbols must have been resolved prior to calling emit.; *; * This method will return an error if any symbols being resolved have been; * moved to the error state due to the failure of a dependency. If this; * method returns an error then clients should log it and call; * LLVMOrcMaterializationResponsibilityFailMaterialization. If no dependencies; * have been registered for the symbols covered by this; * MaterializationResponsibility then this method is guaranteed to return; * LLVMErrorSuccess.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:482,error,error,482,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,4,"['error', 'failure']","['error', 'failure']"
Availability,"/**; * Notify all not-yet-emitted covered by this MaterializationResponsibility; * instance that an error has occurred.; * This will remove all symbols covered by this MaterializationResponsibility; * from the target JITDylib, and send an error to any queries waiting on; * these symbols.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:100,error,error,100,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,2,['error'],['error']
Availability,/**; * Null comment. No AST node is constructed at the requested location; * because there is no text or a syntax error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Documentation.h:114,error,error,114,interpreter/llvm-project/clang/include/clang-c/Documentation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Documentation.h,1,['error'],['error']
Availability,"/**; * Obtain a constant for a floating point value parsed from a string.; *; * A similar API, LLVMConstRealOfStringAndSize is also available. It; * should be used if the input string's length is known.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:132,avail,available,132,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['avail'],['available']
Availability,"/**; * Obtain a constant value for an integer parsed from a string.; *; * A similar API, LLVMConstIntOfStringAndSize is also available. If the; * string's length is available, it is preferred to call that function; * instead.; *; * @see llvm::ConstantInt::get(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:125,avail,available,125,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,2,['avail'],['available']
Availability,/**; * Obtain the next use of a value.; *; * This effectively advances the iterator. It returns NULL if you are on; * the final use and no more are available.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:148,avail,available,148,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['avail'],['available']
Availability,/**; * Opaque reference to an error instance. Null serves as the 'success' value.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h:30,error,error,30,interpreter/llvm-project/llvm/include/llvm-c/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h,1,['error'],['error']
Availability,/**; * Open and read a font file. Sets Error flag.; *; * @param fontFilePath font file path.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFont.h:39,Error,Error,39,graf3d/ftgl/inc/FTFont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFont.h,7,['Error'],['Error']
Availability,/**; * Open and read a font from a buffer in memory. Sets Error flag.; * The buffer is owned by the client and is NOT copied by FTGL. The; * pointer must be valid while using FTGL.; *; * @param pBufferBytes the in-memory buffer; * @param bufferSizeInBytes the length of the buffer in bytes; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFont.h:58,Error,Error,58,graf3d/ftgl/inc/FTFont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFont.h,1,['Error'],['Error']
Availability,/**; * Open and read a font from a buffer in memory. Sets Error flag.; *; * @param pBufferBytes the in-memory buffer; * @param bufferSizeInBytes the length of the buffer in bytes; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTGLBitmapFont.h:58,Error,Error,58,graf3d/ftgl/inc/FTGLBitmapFont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTGLBitmapFont.h,6,['Error'],['Error']
Availability,/**; * Opens and reads a face file. Error is set.; *; * @param fontFilePath font file path.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFace.h:36,Error,Error,36,graf3d/ftgl/inc/FTFace.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFace.h,1,['Error'],['Error']
Availability,"/**; * Parses options immediately, making them available as early as possible. For; * example during executing codegen::InitTargetOptionsFromCodeGenFlags. Since; * parsing shud only happen once, only one of lto_codegen_debug_options or; * lto_set_debug_options should be called.; *; * This function takes one or more options separated by spaces.; * Warning: passing file paths through this function may confuse the argument; * parser if the paths contain spaces.; *; * \since LTO_API_VERSION=28; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:47,avail,available,47,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['avail'],['available']
Availability,/**; * Prepare a context for dictionary building.; * The context is only dependent on the parameter `d` and can used multiple; * times.; * Returns 0 on success or error code on error.; * The context must be destroyed with `COVER_ctx_destroy()`.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c:163,error,error,163,builtins/zstd/dictBuilder/cover.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c,2,['error'],['error']
Availability,/**; * Prepare a context for dictionary building.; * The context is only dependent on the parameter `d` and can used multiple; * times.; * Returns 0 on success or error code on error.; * The context must be destroyed with `FASTCOVER_ctx_destroy()`.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/fastcover.c:163,error,error,163,builtins/zstd/dictBuilder/fastcover.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/fastcover.c,2,['error'],['error']
Availability,"/**; * Print a representation of a module to a file. The ErrorMessage needs to be; * disposed with LLVMDisposeMessage. Returns 0 on success, 1 otherwise.; *; * @see Module::print(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:57,Error,ErrorMessage,57,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['Error'],['ErrorMessage']
Availability,"/**; * Process all the modules that were added to the code generator in parallel.; *; * Client can access the resulting object files using getProducedBinaries(),; * unless setGeneratedObjectsDirectory() has been called, in which case; * results are available through getProducedBinaryFiles().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h:249,avail,available,249,interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h,1,['avail'],['available']
Availability,"/**; * Provides a shared context for creating translation units.; *; * Call this function instead of clang_createIndex() if you need to configure; * the additional options in CXIndexOptions.; *; * \returns The created index or null in case of error, such as an unsupported; * value of options->Size.; *; * For example:; * \code; * CXIndex createIndex(const char *ApplicationTemporaryPath) {; * const int ExcludeDeclarationsFromPCH = 1;; * const int DisplayDiagnostics = 1;; * CXIndex Idx;; * #if CINDEX_VERSION_MINOR >= 64; * CXIndexOptions Opts;; * memset(&Opts, 0, sizeof(Opts));; * Opts.Size = sizeof(CXIndexOptions);; * Opts.ThreadBackgroundPriorityForIndexing = 1;; * Opts.ExcludeDeclarationsFromPCH = ExcludeDeclarationsFromPCH;; * Opts.DisplayDiagnostics = DisplayDiagnostics;; * Opts.PreambleStoragePath = ApplicationTemporaryPath;; * Idx = clang_createIndexWithOptions(&Opts);; * if (Idx); * return Idx;; * fprintf(stderr,; * ""clang_createIndexWithOptions() failed. ""; * ""CINDEX_VERSION_MINOR = %d, sizeof(CXIndexOptions) = %u\n"",; * CINDEX_VERSION_MINOR, Opts.Size);; * #else; * (void)ApplicationTemporaryPath;; * #endif; * Idx = clang_createIndex(ExcludeDeclarationsFromPCH, DisplayDiagnostics);; * clang_CXIndex_setGlobalOptions(; * Idx, clang_CXIndex_getGlobalOptions(Idx) |; * CXGlobalOpt_ThreadBackgroundPriorityForIndexing);; * return Idx;; * }; * \endcode; *; * \sa clang_createIndex(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:243,error,error,243,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['error'],['error']
Availability,"/**; * Provides a shared context for creating translation units.; *; * It provides two options:; *; * - excludeDeclarationsFromPCH: When non-zero, allows enumeration of ""local""; * declarations (when loading any new translation units). A ""local"" declaration; * is one that belongs in the translation unit itself and not in a precompiled; * header that was used by the translation unit. If zero, all declarations; * will be enumerated.; *; * Here is an example:; *; * \code; * // excludeDeclsFromPCH = 1, displayDiagnostics=1; * Idx = clang_createIndex(1, 1);; *; * // IndexTest.pch was produced with the following command:; * // ""clang -x c IndexTest.h -emit-ast -o IndexTest.pch""; * TU = clang_createTranslationUnit(Idx, ""IndexTest.pch"");; *; * // This will load all the symbols from 'IndexTest.pch'; * clang_visitChildren(clang_getTranslationUnitCursor(TU),; * TranslationUnitVisitor, 0);; * clang_disposeTranslationUnit(TU);; *; * // This will load all the symbols from 'IndexTest.c', excluding symbols; * // from 'IndexTest.pch'.; * char *args[] = { ""-Xclang"", ""-include-pch=IndexTest.pch"" };; * TU = clang_createTranslationUnitFromSourceFile(Idx, ""IndexTest.c"", 2, args,; * 0, 0);; * clang_visitChildren(clang_getTranslationUnitCursor(TU),; * TranslationUnitVisitor, 0);; * clang_disposeTranslationUnit(TU);; * \endcode; *; * This process of creating the 'pch', loading it separately, and using it (via; * -include-pch) allows 'excludeDeclsFromPCH' to remove redundant callbacks; * (which gives the indexer the same performance benefit as the compiler).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:1463,redundant,redundant,1463,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['redundant'],['redundant']
Availability,/**; * Queries for errors.; *; * @return The current error code. Zero means no error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTCharmap.h:19,error,errors,19,graf3d/ftgl/inc/FTCharmap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTCharmap.h,3,['error'],"['error', 'errors']"
Availability,/**; * Queries for errors.; *; * @return The current error code.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFace.h:19,error,errors,19,graf3d/ftgl/inc/FTFace.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFace.h,6,['error'],"['error', 'errors']"
Availability,/**; * Queries the Font for errors.; *; * @return The current error code.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFont.h:28,error,errors,28,graf3d/ftgl/inc/FTFont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFont.h,4,['error'],"['error', 'errors']"
Availability,/**; * Queries the library for errors.; *; * @return The current error code.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTLibrary.h:31,error,errors,31,graf3d/ftgl/inc/FTLibrary.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTLibrary.h,2,['error'],"['error', 'errors']"
Availability,/**; * Read face data from an in-memory buffer. Error is set.; *; * @param pBufferBytes the in-memory buffer; * @param bufferSizeInBytes the length of the buffer in bytes; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFace.h:48,Error,Error,48,graf3d/ftgl/inc/FTFace.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFace.h,1,['Error'],['Error']
Availability,/**; * Record a gluTesselation error; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTVectoriser.h:31,error,error,31,graf3d/ftgl/inc/FTVectoriser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTVectoriser.h,1,['error'],['error']
Availability,/**; * Remove a basic block from a function.; *; * This deletes the basic block from its containing function but keep; * the basic block alive.; *; * @see llvm::BasicBlock::removeFromParent(); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:137,alive,alive,137,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['alive'],['alive']
Availability,/**; * Remove a global indirect function from its parent module.; *; * This unlinks the global indirect function from its containing module but; * keeps it alive.; *; * @see llvm::GlobalIFunc::removeFromParent(); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:156,alive,alive,156,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['alive'],['alive']
Availability,/**; * Remove an instruction.; *; * The instruction specified is removed from its containing building; * block but is kept alive.; *; * @see llvm::Instruction::removeFromParent(); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:123,alive,alive,123,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['alive'],['alive']
Availability,"/**; * Removes currently installed error handler (if any).; * If no error handler is intalled, the default strategy is to print error; * message to stderr and call exit(1).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h:35,error,error,35,interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h,3,['error'],['error']
Availability,"/**; * Reparse the source files that produced this translation unit.; *; * This routine can be used to re-parse the source files that originally; * created the given translation unit, for example because those source files; * have changed (either on disk or as passed via \p unsaved_files). The; * source code will be reparsed with the same command-line options as it; * was originally parsed.; *; * Reparsing a translation unit invalidates all cursors and source locations; * that refer into that translation unit. This makes reparsing a translation; * unit semantically equivalent to destroying the translation unit and then; * creating a new translation unit with the same command-line arguments.; * However, it may be more efficient to reparse a translation; * unit using this routine.; *; * \param TU The translation unit whose contents will be re-parsed. The; * translation unit must originally have been built with; * \c clang_createTranslationUnitFromSourceFile().; *; * \param num_unsaved_files The number of unsaved file entries in \p; * unsaved_files.; *; * \param unsaved_files The files that have not yet been saved to disk; * but may be required for parsing, including the contents of; * those files. The contents and name of these files (as specified by; * CXUnsavedFile) are copied when necessary, so the client only needs to; * guarantee their validity until the call to this function returns.; *; * \param options A bitset of options composed of the flags in CXReparse_Flags.; * The function \c clang_defaultReparseOptions() produces a default set of; * options recommended for most uses, based on the translation unit.; *; * \returns 0 if the sources could be reparsed. A non-zero error code will be; * returned if reparsing was impossible, such that the translation unit is; * invalid. In such cases, the only valid call for \c TU is; * \c clang_disposeTranslationUnit(TU). The error codes returned by this; * routine are described by the \c CXErrorCode enum.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:1700,error,error,1700,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,['error'],['error']
Availability,"/**; * Represents an invalid type (e.g., where no type is available).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:58,avail,available,58,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['avail'],['available']
Availability,/**; * Reset the fatal error handler. This resets LLVM's fatal error handling; * behavior to the default.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/ErrorHandling.h:23,error,error,23,interpreter/llvm-project/llvm/include/llvm-c/ErrorHandling.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/ErrorHandling.h,2,['error'],['error']
Availability,/**; * Retrieve a remapping.; *; * \param filePaths pointer to an array of file paths containing remapping info.; *; * \param numFiles number of file paths.; *; * \returns the requested remapping. This remapping must be freed; * via a call to \c clang_remap_dispose(). Can return NULL if an error occurred.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:291,error,error,291,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['error'],['error']
Availability,/**; * Retrieve a remapping.; *; * \param path the path that contains metadata about remappings.; *; * \returns the requested remapping. This remapping must be freed; * via a call to \c clang_remap_dispose(). Can return NULL if an error occurred.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:231,error,error,231,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['error'],['error']
Availability,"/**; * Retrieve the annotation associated with the given completion string.; *; * \param completion_string the completion string to query.; *; * \param annotation_number the 0-based index of the annotation of the; * completion string.; *; * \returns annotation string associated with the completion at index; * \c annotation_number, or a NULL string if that annotation is not available.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:376,avail,available,376,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['avail'],['available']
Availability,"/**; * Retrieve the exception specification type associated with a function type.; * This is a value of type CXCursor_ExceptionSpecificationKind.; *; * If a non-function type is passed in, an error code of -1 is returned.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:192,error,error,192,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['error'],['error']
Availability,"/**; * Retrieve the unique ID for the given \c file.; *; * \param file the file to get the ID for.; * \param outID stores the returned CXFileUniqueID.; * \returns If there was a failure getting the unique ID, returns non-zero,; * otherwise returns 0.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXFile.h:178,failure,failure,178,interpreter/llvm-project/clang/include/clang-c/CXFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXFile.h,1,['failure'],['failure']
Availability,"/**; * Return an unique id given the name of a enum attribute,; * or 0 if no attribute by that name exists.; *; * See http://llvm.org/docs/LangRef.html#parameter-attributes; * and http://llvm.org/docs/LangRef.html#function-attributes; * for the list of available attributes.; *; * NB: Attribute names and/or id are subject to change without; * going through the C API deprecation cycle.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:253,avail,available,253,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['avail'],['available']
Availability,"/**; * Return the ""in memory"" binaries produced by the code generator. This is; * filled after run() unless setGeneratedObjectsDirectory() has been; * called, in which case results are available through; * getProducedBinaryFiles().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h:185,avail,available,185,interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h,1,['avail'],['available']
Availability,"/**; * Return the ""on-disk"" binaries produced by the code generator. This is; * filled after run() when setGeneratedObjectsDirectory() has been; * called, in which case results are available through getProducedBinaries().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h:181,avail,available,181,interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h,1,['avail'],['available']
Availability,"/**; * Return the specified error if the condition evaluates to true.; *; * In debug modes, prints additional information.; * In order to do that (particularly, printing the conditional that failed),; * this can't just wrap RETURN_ERROR().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_internal.h:28,error,error,28,builtins/zstd/common/zstd_internal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_internal.h,1,['error'],['error']
Availability,/**; * Returns `1` if the parser encountered an error while parsing the buffer.; *; * \since REMARKS_API_VERSION=0; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Remarks.h:48,error,error,48,interpreter/llvm-project/llvm/include/llvm-c/Remarks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Remarks.h,1,['error'],['error']
Availability,"/**; * Returns a null-terminated string containing an error message.; *; * In case of no error, the result is `NULL`.; *; * The memory of the string is bound to the lifetime of \p Parser. If; * LLVMRemarkParserDispose() is called, the memory of the string will be; * released.; *; * \since REMARKS_API_VERSION=0; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Remarks.h:54,error,error,54,interpreter/llvm-project/llvm/include/llvm-c/Remarks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Remarks.h,2,['error'],['error']
Availability,/**; * Returns a reference to the ith object file produced by the ThinLTO; * CodeGenerator.; *; * Client should use \p thinlto_module_get_num_objects() to get the number of; * available objects.; *; * \since LTO_API_VERSION=18; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:176,avail,available,176,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['avail'],['available']
Availability,"/**; * Returns a vector in the same direction as p but with a; * length of 1. fast_normalize is computed as:; * p * half_rsqrt (p.x^2 + p.y^2 + ... ); * The result shall be within 8192 ulps error from the; * infinitely precise result of; * if (all(p == 0.0f)); * result = p;; * else; * result = p / sqrt (p.x^2 + p.y^2 + ...);; * with the following exceptions:; * 1) If the sum of squares is greater than FLT_MAX; * then the value of the floating-point values in the; * result vector are undefined.; * 2) If the sum of squares is less than FLT_MIN then; * the implementation may return back p.; * 3) If the device is in ""denorms are flushed to zero""; * mode, individual operand elements with magnitude; * less than sqrt(FLT_MIN) may be flushed to zero; * before proceeding with the calculation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:190,error,error,190,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['error'],['error']
Availability,"/**; * Returns an object - a tree of fontName to fontStyle relationships available to; * active PDF document.; *; * @public; * @function; * @instance; * @returns {Object} Like {'times':['normal', 'italic', ... ], 'arial':['normal', 'bold', ... ], ... }; * @memberof jsPDF#; * @name getFontList; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:73,avail,available,73,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['avail'],['available']
Availability,/**; * Returns the cost in bits of encoding the distribution in count using ctable.; * Returns an error if ctable cannot represent all the symbols in count.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_sequences.c:98,error,error,98,builtins/zstd/compress/zstd_compress_sequences.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_sequences.c,1,['error'],['error']
Availability,/**; * Returns the cost in bytes of encoding the normalized count header.; * Returns an error if any of the helper functions return an error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_sequences.c:88,error,error,88,builtins/zstd/compress/zstd_compress_sequences.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_sequences.c,2,['error'],['error']
Availability,"/**; * Returns the given string's error message. This operation consumes the error,; * and the given LLVMErrorRef value is not usable once this call returns.; * The caller is responsible for disposing of the string by calling; * LLVMDisposeErrorMessage.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h:34,error,error,34,interpreter/llvm-project/llvm/include/llvm-c/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h,2,['error'],['error']
Availability,/**; * Returns the last error string or NULL if last operation was successful.; *; * \since prior to LTO_API_VERSION=3; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:24,error,error,24,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['error'],['error']
Availability,"/**; * Returns the next remark in the file.; *; * The value pointed to by the return value needs to be disposed using a call to; * LLVMRemarkEntryDispose().; *; * All the entries in the returned value that are of LLVMRemarkStringRef type; * will become invalidated once a call to LLVMRemarkParserDispose is made.; *; * If the parser reaches the end of the buffer, the return value will be `NULL`.; *; * In the case of an error, the return value will be `NULL`, and:; *; * 1) LLVMRemarkParserHasError() will return `1`.; *; * 2) LLVMRemarkParserGetErrorMessage() will return a descriptive error; * message.; *; * An error may occur if:; *; * 1) An argument is invalid.; *; * 2) There is a parsing error. This can occur on things like malformed YAML.; *; * 3) There is a Remark semantic error. This can occur on well-formed files with; * missing or extra fields.; *; * Here is a quick example of the usage:; *; * ```; * LLVMRemarkParserRef Parser = LLVMRemarkParserCreateYAML(Buf, Size);; * LLVMRemarkEntryRef Remark = NULL;; * while ((Remark = LLVMRemarkParserGetNext(Parser))) {; * // use Remark; * LLVMRemarkEntryDispose(Remark); // Release memory.; * }; * bool HasError = LLVMRemarkParserHasError(Parser);; * LLVMRemarkParserDispose(Parser);; * ```; *; * \since REMARKS_API_VERSION=0; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Remarks.h:421,error,error,421,interpreter/llvm-project/llvm/include/llvm-c/Remarks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Remarks.h,5,['error'],['error']
Availability,/**; * Returns the path to the ith object file produced by the ThinLTO; * CodeGenerator.; *; * Client should use \p thinlto_module_get_num_object_files() to get the number; * of available objects.; *; * \since LTO_API_VERSION=21; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:178,avail,available,178,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['avail'],['available']
Availability,"/**; * Returns the type id for the given error instance, which must be a failure; * value (i.e. non-null).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h:41,error,error,41,interpreter/llvm-project/llvm/include/llvm-c/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h,2,"['error', 'failure']","['error', 'failure']"
Availability,"/**; * Reverses the adjustment applied to cparams when enabling dedicated dict; * search. This is used to recover the params set to be used in the working; * context. (Otherwise, those tables would also grow.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:106,recover,recover,106,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['recover'],['recover']
Availability,/**; * Runs optimization for the merged module. Returns true on error.; *; * \since LTO_API_VERSION=12; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:64,error,error,64,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['error'],['error']
Availability,"/**; * Same as \c clang_createTranslationUnit2, but returns; * the \c CXTranslationUnit instead of an error code. In case of an error this; * routine returns a \c NULL \c CXTranslationUnit, without further detailed; * error codes.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:102,error,error,102,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,3,['error'],['error']
Availability,"/**; * Same as \c clang_parseTranslationUnit2, but returns; * the \c CXTranslationUnit instead of an error code. In case of an error this; * routine returns a \c NULL \c CXTranslationUnit, without further detailed; * error codes.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:101,error,error,101,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,3,['error'],['error']
Availability,"/**; * Saves a translation unit into a serialized representation of; * that translation unit on disk.; *; * Any translation unit that was parsed without error can be saved; * into a file. The translation unit can then be deserialized into a; * new \c CXTranslationUnit with \c clang_createTranslationUnit() or,; * if it is an incomplete translation unit that corresponds to a; * header, used as a precompiled header when parsing other translation; * units.; *; * \param TU The translation unit to save.; *; * \param FileName The file to which the translation unit will be saved.; *; * \param options A bitmask of options that affects how the translation unit; * is saved. This should be a bitwise OR of the; * CXSaveTranslationUnit_XXX flags.; *; * \returns A value that will match one of the enumerators of the CXSaveError; * enumeration. Zero (CXSaveError_None) indicates that the translation unit was; * saved successfully, while a non-zero value indicates that a problem occurred.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:153,error,error,153,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['error'],['error']
Availability,"/**; * Set the case sensitivity for the \c CXVirtualFileOverlay object.; * The \c CXVirtualFileOverlay object is case-sensitive by default, this; * option can be used to override the default.; * \returns 0 for success, non-zero to indicate an error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/BuildSystem.h:243,error,error,243,interpreter/llvm-project/clang/include/clang-c/BuildSystem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/BuildSystem.h,1,['error'],['error']
Availability,"/**; * Set the path to a directory where to save generated object files. This; * path can be used by a linker to request on-disk files instead of in-memory; * buffers. When set, results are available through; * thinlto_module_get_object_file() instead of thinlto_module_get_object().; *; * \since LTO_API_VERSION=21; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:190,avail,available,190,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['avail'],['available']
Availability,"/**; * Set whether the given context discards all value names.; *; * If true, only the names of GlobalValue objects will be available in the IR.; * This can be used to save memory and runtime, especially in release mode.; *; * @see LLVMContext::setDiscardValueNames(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:124,avail,available,124,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['avail'],['available']
Availability,/**; * Sets if debug info should be generated.; * Returns true on error (check lto_get_error_message() for details).; *; * \since prior to LTO_API_VERSION=3; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:66,error,error,66,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['error'],['error']
Availability,/**; * Sets the char size for the current face.; *; * This doesn't guarantee that the size was set correctly. Clients; * should check errors.; *; * @param face Parent face for this size object; * @param point_size the face size in points (1/72 inch); * @param x_resolution the horizontal resolution of the target device.; * @param y_resolution the vertical resolution of the target device.; * @return <code>true</code> if the size has been set. Clients should check Error() for more information if this function returns false(); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTSize.h:134,error,errors,134,graf3d/ftgl/inc/FTSize.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTSize.h,2,"['Error', 'error']","['Error', 'errors']"
Availability,/**; * Sets the char size for the current face.; *; * This doesn't guarantee that the size was set correctly. Clients; * should check errors.; *; * @param size the face size in points (1/72 inch); * @param res the resolution of the target device.; * @return <code>FTSize</code> object; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFace.h:134,error,errors,134,graf3d/ftgl/inc/FTFace.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFace.h,1,['error'],['errors']
Availability,"/**; * Sets the framework module name that the module.modulemap describes.; * \returns 0 for success, non-zero to indicate an error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/BuildSystem.h:126,error,error,126,interpreter/llvm-project/clang/include/clang-c/BuildSystem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/BuildSystem.h,1,['error'],['error']
Availability,"/**; * Sets the maximum cache size that can be persistent across build, in terms of; * percentage of the available space on the disk. Set to 100 to indicate; * no limit, 50 to indicate that the cache size will not be left over half the; * available space. A value over 100 will be reduced to 100, a value of 0 will; * be ignored. An unspecified default value will be applied.; *; * The formula looks like:; * AvailableSpace = FreeSpace + ExistingCacheSize; * NewCacheSize = AvailableSpace * P/100; *; * \since LTO_API_VERSION=18; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:105,avail,available,105,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,4,"['Avail', 'avail']","['AvailableSpace', 'available']"
Availability,"/**; * Sets the maximum cache size that can be persistent across build, in terms; * of percentage of the available space on the disk. Set to 100 to indicate; * no limit, 50 to indicate that the cache size will not be left over; * half the available space. A value over 100 will be reduced to 100, and a; * value of 0 will be ignored.; *; *; * The formula looks like:; * AvailableSpace = FreeSpace + ExistingCacheSize; * NewCacheSize = AvailableSpace * P/100; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h:105,avail,available,105,interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h,4,"['Avail', 'avail']","['AvailableSpace', 'available']"
Availability,/**; * Sets the maximum size of the cache directory (in bytes). A value over the; * amount of available space on the disk will be reduced to the amount of; * available space. An unspecified default value will be applied. A value of 0; * will be ignored.; *; * \since LTO_API_VERSION=22; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:94,avail,available,94,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,2,['avail'],['available']
Availability,/**; * Sets the path to a directory to use as a storage for temporary bitcode files.; * The intention is to make the bitcode files available for debugging at various; * stage of the pipeline.; *; * \since LTO_API_VERSION=18; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:131,avail,available,131,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['avail'],['available']
Availability,"/**; * Sets the umbrella header name that the module.modulemap describes.; * \returns 0 for success, non-zero to indicate an error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/BuildSystem.h:125,error,error,125,interpreter/llvm-project/clang/include/clang-c/BuildSystem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/BuildSystem.h,1,['error'],['error']
Availability,/**; * Sets which PIC code model to generate.; * Returns true on error (check lto_get_error_message() for details).; *; * \since LTO_API_VERSION=18; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:65,error,error,65,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['error'],['error']
Availability,/**; * Sets which PIC code model to generated.; * Returns true on error (check lto_get_error_message() for details).; *; * \since prior to LTO_API_VERSION=3; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:66,error,error,66,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['error'],['error']
Availability,"/**; * Solve `f(x) = 0` numerically.; * @param f Function whose root should be found.; * @param min Minimum allowed value of `x`.; * @param max Maximum allowed value of `x`.; * @param maxIter Maximum number of iterations, passed to Solve(int,double,double); * @param absTol Absolute tolerance, as in Solve(int,double,double); * @param relTol Relative tolerance, passed to Solve(int,double,double); * @return true if a root was found. Retrieve the result using Root().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RootFinder.h:283,toler,tolerance,283,math/mathcore/inc/Math/RootFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RootFinder.h,2,['toler'],['tolerance']
Availability,"/**; * Solve `f(x) = 0`, given a derivative `d`.; * @param f Function whose root should be found.; * @param d Derivative of the function.; * @param start Starting point for iteration.; * @param maxIter Maximum number of iterations, passed to Solve(int,double,double); * @param absTol Absolute tolerance, as in Solve(int,double,double); * @param relTol Relative tolerance, passed to Solve(int,double,double); * @return true if a root was found. Retrieve the result using Root().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RootFinder.h:293,toler,tolerance,293,math/mathcore/inc/Math/RootFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RootFinder.h,2,['toler'],['tolerance']
Availability,"/**; * Splits a given string into an array of strings. Uses 'size' value; * (in measurement units declared as default for the jsPDF instance); * and the font's ""widths"" and ""Kerning"" tables, where available, to; * determine display length of a given string for a given font.; *; * We use character's 100% of unit size (height) as width when Width; * table or other default width is not available.; *; * @name splitTextToSize; * @public; * @function; * @param {string} text Unencoded, regular JavaScript (Unicode, UTF-16 / UCS-2) string.; * @param {number} size Nominal number, measured in units default to this instance of jsPDF.; * @param {Object} options Optional flags needed for chopper to do the right thing.; * @returns {Array} array Array with strings chopped to size.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:197,avail,available,197,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['avail'],['available']
Availability,"/**; * The entity is available, but has been deprecated (and its use is; * not recommended).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:21,avail,available,21,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['avail'],['available']
Availability,"/**; * The entity is available, but not accessible; any use of it will be; * an error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:21,avail,available,21,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,"['avail', 'error']","['available', 'error']"
Availability,/**; * The entity is available.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:21,avail,available,21,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['avail'],['available']
Availability,/**; * The entity is not available; any use of it will be an error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:25,avail,available,25,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,"['avail', 'error']","['available', 'error']"
Availability,"/**; * The minimum workspace size for the `workSpace` used in; * HUF_readDTableX1_wksp() and HUF_readDTableX2_wksp().; *; * The space used depends on HUF_TABLELOG_MAX, ranging from ~1500 bytes when; * HUF_TABLE_LOG_MAX=12 to ~1850 bytes when HUF_TABLE_LOG_MAX=15.; * Buffer overflow errors may potentially occur if code modifications result in; * a required workspace size greater than that specified in the following; * macro.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h:283,error,errors,283,builtins/zstd/common/huf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h,1,['error'],['errors']
Availability,/**; * The toDataURL() method is just a stub to throw an error if accidently called.; *; * @name toDataURL; * @function; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:57,error,error,57,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['error'],['error']
Availability,/**; * The version number in which this entity was deprecated (but is; * still available).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:79,avail,available,79,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['avail'],['available']
Availability,"/**; * The version number in which this entity was obsoleted, and therefore; * is no longer available.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:92,avail,available,92,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['avail'],['available']
Availability,"/**; * This class generates a Prefiltered, Mipmapped Radiance Environment Map; * (PMREM) from a cubeMap environment texture. This allows different levels of; * blur to be quickly accessed based on material roughness. It is packed into a; * special CubeUV format that allows us to perform custom interpolation so that; * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap; * chain, it only goes down to the LOD_MIN level (above), and then creates extra; * even more filtered 'mips' at the same LOD_MIN resolution, associated with; * higher roughness levels. In this way we maintain resolution to smoothly; * interpolate diffuse lighting while limiting sampling computation.; *; * Paper: Fast, Accurate Image-Based Lighting; * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:418,down,down,418,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['down'],['down']
Availability,/**; * This diagnostic indicates that the code is ill-formed such; * that future parser recovery is unlikely to produce useful; * results.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h:88,recover,recovery,88,interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,1,['recover'],['recovery']
Availability,/**; * Traverses the translation unit to create a \c CXAPISet.; *; * \param tu is the \c CXTranslationUnit to build the \c CXAPISet for.; *; * \param out_api is a pointer to the output of this function. It is needs to be; * disposed of by calling clang_disposeAPISet.; *; * \returns Error code indicating success or failure of the APISet creation.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Documentation.h:283,Error,Error,283,interpreter/llvm-project/clang/include/clang-c/Documentation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Documentation.h,2,"['Error', 'failure']","['Error', 'failure']"
Availability,"/**; * Unconditionally return the specified error.; *; * In debug modes, prints additional information.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_internal.h:44,error,error,44,builtins/zstd/common/zstd_internal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_internal.h,1,['error'],['error']
Availability,"/**; * Used to indicate that non-errors from included files should be ignored.; *; * If set, clang_getDiagnosticSetFromTU() will not report e.g. warnings from; * included files anymore. This speeds up clang_getDiagnosticSetFromTU() for; * the case where these warnings are not of interest, as for an IDE for; * example, which typically shows only the diagnostics in the main file.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:33,error,errors,33,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['error'],['errors']
Availability,"/**; * Uses the specified value, regardless of the behavior or value of the; * other module. If both modules specify **Override**, but the values; * differ, an error will be emitted.; *; * @see Module::ModFlagBehavior::Override; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:160,error,error,160,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['error'],['error']
Availability,"/**; * Write out the \c CXModuleMapDescriptor object to a char buffer.; *; * \param options is reserved, always pass 0.; * \param out_buffer_ptr pointer to receive the buffer pointer, which should be; * disposed using \c clang_free().; * \param out_buffer_size pointer to receive the buffer size.; * \returns 0 for success, non-zero to indicate an error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/BuildSystem.h:348,error,error,348,interpreter/llvm-project/clang/include/clang-c/BuildSystem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/BuildSystem.h,1,['error'],['error']
Availability,"/**; * Write out the \c CXVirtualFileOverlay object to a char buffer.; *; * \param options is reserved, always pass 0.; * \param out_buffer_ptr pointer to receive the buffer pointer, which should be; * disposed using \c clang_free().; * \param out_buffer_size pointer to receive the buffer size.; * \returns 0 for success, non-zero to indicate an error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/BuildSystem.h:347,error,error,347,interpreter/llvm-project/clang/include/clang-c/BuildSystem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/BuildSystem.h,1,['error'],['error']
Availability,/**; * Writes a new object file at the specified path that contains the; * merged contents of all modules added so far.; * Returns true on error (check lto_get_error_message() for details).; *; * \since LTO_API_VERSION=5; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:139,error,error,139,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['error'],['error']
Availability,"/**; * ZSTD_ldm_blockCompress():; *; * Compresses a block using the predefined sequences, along with a secondary; * block compressor. The literals section of every sequence is passed to the; * secondary block compressor, and those sequences are interspersed with the; * predefined sequences. Returns the length of the last literals.; * Updates `rawSeqStore.pos` to indicate how many sequences have been consumed.; * `rawSeqStore.seq` may also be updated to split the last sequence between two; * blocks.; * @return The length of the last literals.; *; * NOTE: The source must be at most the maximum block size, but the predefined; * sequences can be any size, and may be longer than the block. In the case that; * they are longer than the block, the last sequences may need to be split into; * two. We handle that case correctly, and update `rawSeqStore` appropriately.; * NOTE: This function does not return any errors.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_ldm.h:913,error,errors,913,builtins/zstd/compress/zstd_ldm.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_ldm.h,1,['error'],['errors']
Availability,"/**; * ZSTD_ldm_generateSequences():; *; * Generates the sequences using the long distance match finder.; * Generates long range matching sequences in `sequences`, which parse a prefix; * of the source. `sequences` must be large enough to store every sequence,; * which can be checked with `ZSTD_ldm_getMaxNbSeq()`.; * @returns 0 or an error code.; *; * NOTE: The user must have called ZSTD_window_update() for all of the input; * they have, even if they pass it to ZSTD_ldm_generateSequences() in chunks.; * NOTE: This function returns an error if it runs out of space to store; * sequences.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_ldm.h:336,error,error,336,builtins/zstd/compress/zstd_ldm.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_ldm.h,2,['error'],['error']
Availability,"/**; * \brief Configure constrained gamma parameters for fitting.; *; * This function configures constrained gamma parameters for fitting. If a; * given relative sigma is less than or equal to zero or below a threshold, the; * gamma parameter is set to be constant. The function also sets reasonable; * ranges for the gamma parameter and provides a reasonable starting point for; * pre-fit errors.; *; * @param gammas The gamma parameters to be configured.; * @param sigmaRel The relative sigma values to be used for configuring the; * limits and errors.; * @param minSigma The minimum relative sigma threshold. If a relative sigma is; * below this threshold, the gamma parameter is set to be; * constant.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx:390,error,errors,390,roofit/histfactory/src/HistFactoryImpl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx,2,['error'],['errors']
Availability,"/**; * \brief Namespace for new RooFit test statistic calculation.; *; * RooFit::TestStatistics contains a major refactoring of the RooAbsTestStatistic-RooAbsOptTestStatistic-RooNLLVar; * inheritance tree into:; * 1. statistics-based classes on the one hand;; * 2. calculation/evaluation/optimization based classes on the other hand.; *; * The likelihood is the central unit on the statistics side. The RooAbsL class is implemented for four kinds of; * likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like; * global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute; * their components in parallelizable chunks that can be used by the calculator classes as they see fit.; *; * On top of the likelihood classes, we also provide for convenience a likelihood builder buildLikelihood, as a free; * function in the namespace. This function analyzes the pdf and automatically constructs the proper likelihood, built; * up from the available RooAbsL subclasses.; *; * The calculator ""Wrapper"" classes are abstract interfaces. These can be implemented for different kinds of algorithms,; * or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based; * multi-processing implementation based on RooFit::MultiProcess. Other possible implementations could use the GPU or; * external tools like TensorFlow.; *; * The coupling of all these classes to RooMinimizer is made via the MinuitFcnGrad class, which owns the Wrappers that; * calculate the likelihood components.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:1044,avail,available,1044,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,1,['avail'],['available']
Availability,"/**; * \brief Poll the sockets with ppoll; *; * By polling with ppoll instead of poll, one can pass along a signal mask to; * handle POSIX signals properly. See the zmq_ppoll documentation for examples; * of when this is useful: http://api.zeromq.org/; *; * \param[in] timeo Timeout in milliseconds. 0 means return immediately. -1 means wait for an event indefinitely.; * \param[in] sigmask A non-nullptr pointer to a signal mask must be constructed and passed to 'sigmask'. See the man page; * of sigprocmask(2) for more details on this. \return A vector of pairs of index and flags; index is the index of the; * registered fd or socket and flags are 0 (no events), ZMQ_POLLIN or ZMQ_POLLOUT.; *; * \note This function can throw (from inside ZMQ::ppoll), so wrap in try-catch!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitZMQ/src/ZeroMQPoller.cpp:115,mask,mask,115,roofit/roofitZMQ/src/ZeroMQPoller.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitZMQ/src/ZeroMQPoller.cpp,2,['mask'],['mask']
Availability,"/**; * \brief Split the dataset into subsets based on the channels of a RooSimultaneous.; *; * Returns a list of sub-datasets, which each dataset named after the; * applicable state name of the RooSimultaneous index category. The index; * category itself is no longer present in the sub-datasets. The sub-datasets; * only contain variables that the pdf for the corresponding channel depends; * on.; *; * \param simPdf The simultaneous pdf used for splitting the dataset.; * \param createEmptyDataSets Flag indicating whether to create empty datasets; * for missing categories (`false` by default).; *; * \return An owning pointer to a TList of subsets of the dataset.; * Returns `nullptr` if an error occurs.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:695,error,error,695,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['error'],['error']
Availability,"/**; * \class ROOT::TIOFeatures; * \ingroup tree; *; * `TIOFeatures` provides the end-user with the ability to change the IO behavior; * of data written via a `TTree`. This class allows access to experimental and non-default; * features.; *; * When one of these features are activated, forward compatibility breaks may occur.; * That is, older versions of ROOT may not be able to read files written by this version; * of ROOT that have enabled these non-default features.; *; * To utilize `TIOFeatures`, create the object, set the desired feature flags, then attach; * it to a `TTree`. All subsequently created branches (and their baskets) will be serialized; * using those particular features.; *; * Example usage:; * ~~~{.cpp}; * ROOT::TIOFeatures features;; * features.Set(ROOT::Experimental::EIOFeatures::kGenerateOffsetMap);; * ttree_ref.SetIOFeatures(features);; * ~~~; *; * The method `TTree::SetIOFeatures` creates a copy of the feature set; subsequent changes; * to the `TIOFeatures` object do not propagate to the `TTree`.; */; ////////////////////////////////////////////////////////////////////////////; /// \brief Clear a specific IO feature from this set.; /// \param[in] input_bits The specific feature to disable.; ///; /// Removes a feature from the `TIOFeatures` object; emits an Error message if; /// the IO feature is not supported by this version of ROOT.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TIOFeatures.cxx:1298,Error,Error,1298,tree/tree/src/TIOFeatures.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TIOFeatures.cxx,1,['Error'],['Error']
Availability,"/**; * \class RooBatchComputeInterface; * \ingroup roofit_dev_docs_batchcompute; * \brief The interface which should be implemented to provide optimised computation functions for implementations of; * RooAbsReal::doEval().; *; * The class RooBatchComputeInterface provides the mechanism for external modules (like RooFit) to call; * functions from the library. The power lies in the virtual functions that can resolve to different; * implementations for the functionality; for example, calling a function through dispatchCuda; * will resolve to efficient CUDA implementations.; *; * This interface contains the signatures of the compute functions of every PDF that has an optimised implementation; * available. These are the functions that perform the actual computations in batches.; *; * Several implementations of this interface may be provided, e.g. SSE, AVX, AVX2 etc. At run time, the fastest; * implementation of this interface is selected, and using a virtual call, the computation is dispatched to the best; * backend.; *; * \see RooBatchCompute::dispatch, RooBatchComputeClass, RF_ARCH; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h:700,avail,available,700,roofit/batchcompute/res/RooBatchCompute.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h,1,['avail'],['available']
Availability,"/**; * g_async_queue_length:; * @queue: a #GAsyncQueue.; * ; * Returns the length of the queue, negative values mean waiting; * threads, positive values mean available entries in the; * @queue. Actually this function returns the number of data items in; * the queue minus the number of waiting threads. Thus a return value; * of 0 could mean 'n' entries in the queue and 'n' thread waiting.; * That can happen due to locking of the queue or due to; * scheduling. ; *; * Return value: the length of the @queue.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gasyncqueue.c:158,avail,available,158,graf2d/win32gdk/gdk/src/glib/gasyncqueue.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gasyncqueue.c,1,['avail'],['available']
Availability,"/**; * g_async_queue_length_unlocked:; * @queue: a #GAsyncQueue.; * ; * Returns the length of the queue, negative values mean waiting; * threads, positive values mean available entries in the; * @queue. Actually this function returns the number of data items in; * the queue minus the number of waiting threads. Thus a return value; * of 0 could mean 'n' entries in the queue and 'n' thread waiting.; * That can happen due to locking of the queue or due to; * scheduling. This function must be called while holding the @queue's; * lock.; *; * Return value: the length of the @queue.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gasyncqueue.c:167,avail,available,167,graf2d/win32gdk/gdk/src/glib/gasyncqueue.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gasyncqueue.c,1,['avail'],['available']
Availability,/**; * g_async_queue_pop:; * @queue: a #GAsyncQueue.; * ; * Pop data from the @queue. This function blocks until data become; * available.; *; * Return value: data from the queue.; **/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gasyncqueue.c:128,avail,available,128,graf2d/win32gdk/gdk/src/glib/gasyncqueue.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gasyncqueue.c,1,['avail'],['available']
Availability,/**; * g_async_queue_pop_unlocked:; * @queue: a #GAsyncQueue.; * ; * Pop data from the @queue. This function blocks until data become; * available. This function must be called while holding the @queue's; * lock.; *; * Return value: data from the queue.; **/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gasyncqueue.c:137,avail,available,137,graf2d/win32gdk/gdk/src/glib/gasyncqueue.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gasyncqueue.c,1,['avail'],['available']
Availability,"/**; * g_async_queue_try_pop:; * @queue: a #GAsyncQueue.; * ; * Try to pop data from the @queue. If no data is available, #NULL is; * returned.; *; * Return value: data from the queue or #NULL, when no data is; * available immediately.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gasyncqueue.c:111,avail,available,111,graf2d/win32gdk/gdk/src/glib/gasyncqueue.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gasyncqueue.c,2,['avail'],['available']
Availability,"/**; * g_async_queue_try_pop_unlocked:; * @queue: a #GAsyncQueue.; * ; * Try to pop data from the @queue. If no data is available, #NULL is; * returned. This function must be called while holding the @queue's; * lock.; *; * Return value: data from the queue or #NULL, when no data is; * available immediately.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gasyncqueue.c:120,avail,available,120,graf2d/win32gdk/gdk/src/glib/gasyncqueue.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gasyncqueue.c,2,['avail'],['available']
Availability,"/**; * g_convert:; * @str: the string to convert; * @len: the length of the string; * @to_codeset: name of character set into which to convert @str; * @from_codeset: character set of @str.; * @bytes_read: location to store the number of bytes in the; * input string that were successfully converted, or %NULL.; * Even if the conversion was succesful, this may be ; * less than len if there were partial characters; * at the end of the input. If the error; * G_CONVERT_ERROR_ILLEGAL_SEQUENCE occurs, the value; * stored will the byte fofset after the last valid; * input sequence.; * @bytes_written: the stored in the output buffer (not including the; * terminating nul.; * @error: location to store the error occuring, or %NULL to ignore; * errors. Any of the errors in #GConvertError may occur.; *; * Convert a string from one character set to another.; *; * Return value: If the conversion was successful, a newly allocated; * NUL-terminated string, which must be freed with; * g_free. Otherwise %NULL and @error will be set.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c:449,error,error,449,graf2d/win32gdk/gdk/src/glib/gconvert.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c,6,['error'],"['error', 'errors']"
Availability,"/**; * g_convert_with_fallback:; * @str: the string to convert; * @len: the length of the string; * @to_codeset: name of character set into which to convert @str; * @from_codeset: character set of @str.; * @fallback: UTF-8 string to use in place of character not; * present in the target encoding. (This must be; * in the target encoding), if %NULL, characters; * not in the target encoding will be represented; * as Unicode escapes \x{XXXX} or \x{XXXXXX}.; * @bytes_read: location to store the number of bytes in the; * input string that were successfully converted, or %NULL.; * Even if the conversion was succesful, this may be ; * less than len if there were partial characters; * at the end of the input.; * @bytes_written: the stored in the output buffer (not including the; * terminating nul.; * @error: location to store the error occuring, or %NULL to ignore; * errors. Any of the errors in #GConvertError may occur.; *; * Convert a string from one character set to another, possibly; * including fallback sequences for characters not representable; * in the output. Note that it is not guaranteed that the specification; * for the fallback sequences in @fallback will be honored. Some; * systems may do a approximate conversion from @from_codeset; * to @to_codeset in their iconv() functions, in which case GLib; * will simply return that approximate conversion.; *; * Return value: If the conversion was successful, a newly allocated; * NUL-terminated string, which must be freed with; * g_free. Otherwise %NULL and @error will be set.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c:804,error,error,804,graf2d/win32gdk/gdk/src/glib/gconvert.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c,5,['error'],"['error', 'errors']"
Availability,"/**; * g_convert_with_iconv:; * @str: the string to convert; * @len: the length of the string; * @converter: conversion descriptor from g_iconv_open(); * @bytes_read: location to store the number of bytes in the; * input string that were successfully converted, or %NULL.; * Even if the conversion was succesful, this may be ; * less than len if there were partial characters; * at the end of the input. If the error; * G_CONVERT_ERROR_ILLEGAL_SEQUENCE occurs, the value; * stored will the byte fofset after the last valid; * input sequence.; * @bytes_written: the stored in the output buffer (not including the; * terminating nul.; * @error: location to store the error occuring, or %NULL to ignore; * errors. Any of the errors in #GConvertError may occur.; *; * Convert a string from one character set to another.; *; * Return value: If the conversion was successful, a newly allocated; * NUL-terminated string, which must be freed with; * g_free. Otherwise %NULL and @error will be set.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c:411,error,error,411,graf2d/win32gdk/gdk/src/glib/gconvert.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c,6,['error'],"['error', 'errors']"
Availability,/**; * g_error_copy:; * @error: a #GError; * ; * Makes a copy of @error.; * ; * Return value: a new #GError; **/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gerror.c:25,error,error,25,graf2d/win32gdk/gdk/src/glib/gerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gerror.c,2,['error'],['error']
Availability,/**; * g_error_free:; * @error: a #GError; *; * Frees a #GError and associated resources.; * ; **/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gerror.c:25,error,error,25,graf2d/win32gdk/gdk/src/glib/gerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gerror.c,1,['error'],['error']
Availability,"/**; * g_error_matches:; * @error: a #GError; * @domain: an error domain; * @code: an error code; * ; * Returns TRUE if @error matches @domain and @code, FALSE; * otherwise.; * ; * Return value: whether @error has @domain and @code; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gerror.c:28,error,error,28,graf2d/win32gdk/gdk/src/glib/gerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gerror.c,5,['error'],['error']
Availability,"/**; * g_error_new:; * @domain: error domain ; * @code: error code; * @format: printf()-style format for error message; * @Varargs: parameters for message format; * ; * Creates a new #GError with the given @domain and @code,; * and a message formatted with @format.; * ; * Return value: a new #GError; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gerror.c:32,error,error,32,graf2d/win32gdk/gdk/src/glib/gerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gerror.c,3,['error'],['error']
Availability,"/**; * g_error_new_literal:; * @domain: error domain; * @code: error code; * @message: error message; * ; * Creates a new #GError; unlike g_error_new(), @message is not; * a printf()-style format string. Use this function if @message; * contains text you don't have control over, that could include; * printf() escape sequences.; * ; * Return value: a new #GError; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gerror.c:40,error,error,40,graf2d/win32gdk/gdk/src/glib/gerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gerror.c,3,['error'],['error']
Availability,"/**; * g_file_get_contents:; * @filename: a file to read contents from; * @contents: location to store an allocated string; * @length: location to store length in bytes of the contents; * @error: return location for a #GError; * ; * Reads an entire file into allocated memory, with good error; * checking. If @error is set, FALSE is returned, and @contents is set; * to NULL. If TRUE is returned, @error will not be set, and @contents; * will be set to the file contents. The string stored in @contents; * will be nul-terminated, so for text files you can pass NULL for the; * @length argument. The error domain is #G_FILE_ERROR. Possible; * error codes are those in the #GFileError enumeration.; *; * FIXME currently crashes if the file is too big to fit in memory;; * should probably use g_try_malloc() when we have that function.; * ; * Return value: TRUE on success, FALSE if error is set; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.c:189,error,error,189,graf2d/win32gdk/gdk/src/glib/gfileutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.c,7,['error'],['error']
Availability,"/**; * g_file_open_tmp:; * @tmpl: Template for file name, as in g_mkstemp, basename only; * @name_used: location to store actual name used; * @error: return location for a #GError; *; * Opens a file for writing in the preferred directory for temporary; * files (as returned by g_get_tmp_dir()). ; *; * @tmpl should be a string ending with six 'X' characters, as the; * parameter to g_mkstemp() (or mkstemp()). However, unlike these; * functions, the template should only be a basename, no directory; * components are allowed. If template is NULL, a default template is; * used.; *; * Note that in contrast to g_mkstemp() (and mkstemp()) @tmpl is not; * modified, and might thus be a read-only literal string.; *; * The actual name used is returned in @name_used if non-NULL. This; * string should be freed with g_free when not needed any longer.; *; * Return value: A file handle (as from open()) to the file; * opened for reading and writing. The file is opened in binary mode; * on platforms where there is a difference. The file handle should be; * closed with close(). In case of errors, -1 is returned and; * @error will be set.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.c:143,error,error,143,graf2d/win32gdk/gdk/src/glib/gfileutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.c,3,['error'],"['error', 'errors']"
Availability,"/**; * g_file_test:; * @filename: a filename to test; * @test: bitfield of #GFileTest flags; * ; * Returns TRUE if any of the tests in the bitfield @test are; * TRUE. For example, (G_FILE_TEST_EXISTS | G_FILE_TEST_IS_DIR); * will return TRUE if the file exists; the check whether it's; * a directory doesn't matter since the existence test is TRUE.; * With the current set of available tests, there's no point; * passing in more than one test at a time.; *; * Return value: whether a test was TRUE; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.c:376,avail,available,376,graf2d/win32gdk/gdk/src/glib/gfileutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.c,1,['avail'],['available']
Availability,"/**; * g_filename_from_uri:; * @uri: a uri describing a filename (escaped, encoded in UTF-8); * @hostname: Location to store hostname for the URI, or %NULL.; * If there is no hostname in the URI, %NULL will be; * stored in this location.; * @error: location to store the error occuring, or %NULL to ignore; * errors. Any of the errors in #GConvertError may occur.; * ; * Converts an escaped UTF-8 encoded URI to a local filename in the; * encoding used for filenames. ; * ; * Return value: a newly allocated string holding the resulting; * filename, or %NULL on an error.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c:242,error,error,242,graf2d/win32gdk/gdk/src/glib/gconvert.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c,5,['error'],"['error', 'errors']"
Availability,"/**; * g_filename_from_utf8:; * @utf8string: a UTF-8 encoded string ; * @len: the length of the string, or -1 if the string is; * NULL-terminated.; * @bytes_read: location to store the number of bytes in the; * input string that were successfully converted, or %NULL.; * Even if the conversion was succesful, this may be ; * less than len if there were partial characters; * at the end of the input. If the error; * G_CONVERT_ERROR_ILLEGAL_SEQUENCE occurs, the value; * stored will the byte fofset after the last valid; * input sequence.; * @bytes_written: the stored in the output buffer (not including the; * terminating nul.; * @error: location to store the error occuring, or %NULL to ignore; * errors. Any of the errors in #GConvertError may occur.; * ; * Converts a string from UTF-8 to the encoding used for filenames.; * ; * Return value: The converted string, or %NULL on an error.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c:407,error,error,407,graf2d/win32gdk/gdk/src/glib/gconvert.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c,6,['error'],"['error', 'errors']"
Availability,"/**; * g_filename_to_uri:; * @filename: an absolute filename specified in the encoding; * used for filenames by the operating system.; * @hostname: A UTF-8 encoded hostname, or %NULL for none.; * @error: location to store the error occuring, or %NULL to ignore; * errors. Any of the errors in #GConvertError may occur.; * ; * Converts an absolute filename to an escaped UTF-8 encoded URI.; * ; * Return value: a newly allocated string holding the resulting; * URI, or %NULL on an error.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c:197,error,error,197,graf2d/win32gdk/gdk/src/glib/gconvert.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c,5,['error'],"['error', 'errors']"
Availability,"/**; * g_filename_to_utf8:; * @opsysstring: a string in the encoding for filenames; * @len: the length of the string, or -1 if the string is; * NULL-terminated.; * @bytes_read: location to store the number of bytes in the; * input string that were successfully converted, or %NULL.; * Even if the conversion was succesful, this may be ; * less than len if there were partial characters; * at the end of the input. If the error; * G_CONVERT_ERROR_ILLEGAL_SEQUENCE occurs, the value; * stored will the byte fofset after the last valid; * input sequence.; * @bytes_written: the stored in the output buffer (not including the; * terminating nul.; * @error: location to store the error occuring, or %NULL to ignore; * errors. Any of the errors in #GConvertError may occur.; * ; * Converts a string which is in the encoding used for filenames; * into a UTF-8 string.; * ; * Return value: The converted string, or %NULL on an error.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c:421,error,error,421,graf2d/win32gdk/gdk/src/glib/gconvert.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c,6,['error'],"['error', 'errors']"
Availability,"/**; * g_iconv:; * @converter: conversion descriptor from g_iconv_open(); * @inbuf: bytes to convert; * @inbytes_left: inout parameter, bytes remaining to convert in @inbuf; * @outbuf: converted output bytes; * @outbytes_left: inout parameter, bytes available to fill in @outbuf; * ; * Same as the standard UNIX routine iconv(), but; * may be implemented via libiconv on UNIX flavors that lack; * a native implementation.; *; * GLib provides g_convert() and g_locale_to_utf8() which are likely; * more convenient than the raw iconv wrappers.; * ; * Return value: count of non-reversible conversions, or -1 on error; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c:250,avail,available,250,graf2d/win32gdk/gdk/src/glib/gconvert.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c,2,"['avail', 'error']","['available', 'error']"
Availability,"/**; * g_iconv_close:; * @converter: a conversion descriptor from g_iconv_open(); *; * Same as the standard UNIX routine iconv_close(), but; * may be implemented via libiconv on UNIX flavors that lack; * a native implementation. Should be called to clean up; * the conversion descriptor from iconv_open() when; * you are done converting things.; *; * GLib provides g_convert() and g_locale_to_utf8() which are likely; * more convenient than the raw iconv wrappers.; * ; * Return value: -1 on error, 0 on success; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c:492,error,error,492,graf2d/win32gdk/gdk/src/glib/gconvert.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c,1,['error'],['error']
Availability,"/**; * g_io_channel_error_from_errno:; * @en: An errno error number, e.g. EINVAL; *; * Return value: A #GIOChannelError error number, e.g. %G_IO_CHANNEL_ERROR_INVAL; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:55,error,error,55,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,2,['error'],['error']
Availability,"/**; * g_io_channel_flush:; * @channel: a #GIOChannel; * @error: location to store an error of type #GIOChannelError; *; * Flush the write buffer for the GIOChannel.; *; * Return value: the status of the operation: One of; * G_IO_CHANNEL_NORMAL, G_IO_CHANNEL_AGAIN, or; * G_IO_CHANNEL_ERROR.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:58,error,error,58,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,2,['error'],['error']
Availability,/**; * g_io_channel_read_chars:; * @channel: a #GIOChannel; * @buf: a buffer to read data into; * @count: the size of the buffer. Note that the buffer may; * not be complelely filled even if there is data; * in the buffer if the remaining data is not a; * complete character.; * @bytes_read: The number of bytes read. This may be zero even on; * success if count < 6 and the channel's encoding is non-%NULL.; * This indicates that the next UTF-8 character is too wide for; * the buffer.; * @error: A location to return an error of type #GConvertError; * or #GIOChannelError.; *; * Replacement for g_io_channel_read() with the new API.; *; * Return value:; **/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:491,error,error,491,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,2,['error'],['error']
Availability,"/**; * g_io_channel_read_line:; * @channel: a #GIOChannel; * @str_return: The line read from the #GIOChannel, not including the; * line terminator. This data should be freed with g_free(); * when no longer needed. This; * is a null terminated string. If a @length of zero is; * returned, this will be %NULL instead.; * @length: location to store length of the read data, or %NULL; * @terminator_pos: location to store position of line terminator, or %NULL; * @error: A location to return an error of type #GConvertError; * or #GIOChannelError; *; * Read a line, including the terminating character(s),; * from a #GIOChannel into a newly allocated string.; * @length will contain allocated memory if the return; * is %G_IO_STATUS_NORMAL.; *; * Return value: a newly allocated string. Free this string; * with g_free() when you are done with it.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:460,error,error,460,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,2,['error'],['error']
Availability,"/**; * g_io_channel_read_line_string:; * @channel: a #GIOChannel; * @buffer: a #GString into which the line will be written.; * If @buffer already contains data, the old data will; * be overwritten.; * @terminator_pos: location to store position of line terminator, or %NULL; * @error: a location to store an error of type #GConvertError; * or #GIOChannelError; *; * Read a line from a #GIOChannel, using a #GString as a buffer.; *; * Return value:; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:279,error,error,279,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,2,['error'],['error']
Availability,"/**; * g_io_channel_read_to_end:; * @channel: a #GIOChannel; * @str_return: Location to store a pointer to a string holding; * the remaining data in the #GIOChannel. This data should; * be freed with g_free() when no longer needed. This; * data is terminated by an extra null, but there may be other; * nulls in the intervening data.; * @length: Location to store length of the data; * @error: A location to return an error of type #GConvertError; * or #GIOChannelError; *; * Read all the remaining data from the file.; *; * Return value: %G_IO_STATUS_NORMAL on success. This function never; * returns %G_IO_STATUS_EOF.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:387,error,error,387,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,2,['error'],['error']
Availability,/**; * g_io_channel_read_unichar:; * @channel: a #GIOChannel; * @thechar: a location to return a character; * @error: A location to return an error of type #GConvertError; * or #GIOChannelError; *; * This function cannot be called on a channel with %NULL encoding.; *; * Return value: a #GIOStatus; **/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:111,error,error,111,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,2,['error'],['error']
Availability,/**; * g_io_channel_seek_position:; * @channel: a #GIOChannel; * @offset: The offset in bytes from the position specified by @type; * @type: a #GSeekType. The type %G_SEEK_CUR is only allowed in those; * cases where a call to g_io_channel_set_encoding (); * is allowed. See the documentation for; * g_io_channel_set_encoding () for details.; * @error: A location to return an error of type #GIOChannelError; *; * Replacement for g_io_channel_seek() with the new API.; *; * Return value:; **/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:345,error,error,345,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,2,['error'],['error']
Availability,"/**; * g_io_channel_set_encoding:; * @channel: a #GIOChannel; * @encoding: the encoding type; * @error: location to store an error of type #GConvertError.; *; * Set the encoding for the input/output of the channel. The internal; * encoding is always UTF-8. The default encoding for the; * external file is UTF-8.; *; * The encoding %NULL is safe to use with binary data.; *; * The encoding can only be set under the following conditions:; *; * 1. The channel was just created, and has not been written to; * or read from yet.; *; * 2. The channel is write-only.; *; * 3. The channel is a file, and the file pointer was just; * repositioned by a call to g_io_channel_seek_position().; * (This flushes all the internal buffers.); *; * 4. The current encoding is %NULL or UTF-8.; *; * 5. One of the (new API) read functions has just returned G_IO_STATUS_EOF; * (or, in the case of g_io_channel_read_to_end (), G_IO_STATUS_NORMAL).; *; * 6. One of the functions g_io_channel_read_chars () or g_io_channel_read_unichar (); * has returned G_IO_STATUS_AGAIN or G_IO_STATUS_ERROR. This may be; * useful in the case of G_CONVERT_ERROR_ILLEGAL_SEQUENCE.; * Returning one of these statuses from g_io_channel_read_line (),; * g_io_channel_read_line_string (), or g_io_channel_read_to_end (); * does _not_ guarantee that the encoding can be changed.; *; * Channels which do not meet the above conditions cannot call; * g_io_channel_seek_position () with an offset of %G_SEEK_CUR,; * and if they are ""seekable"" cannot; * call g_io_channel_write_chars () after calling one; * of the API ""read"" functions.; *; * Return Value: %G_IO_STATUS_NORMAL if the encoding was succesfully set.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:97,error,error,97,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,2,['error'],['error']
Availability,/**; * g_io_channel_set_flags:; * @channel: a #GIOChannel; * @flags: the flags to set on the channel; * @error: A location to return an error of type #GIOChannelError; *; * Return value:; **/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:105,error,error,105,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,2,['error'],['error']
Availability,"/**; * g_io_channel_write_chars:; * @channel: a #GIOChannel; * @buf: a buffer to write data from; * @count: the size of the buffer. If -1, the buffer; * is taken to be a nul terminated string.; * @bytes_written: The number of bytes written. This can be nonzero; * even if the return value is not %G_IO_STATUS_NORMAL.; * If the return value is %G_IO_STATUS_NORMAL and the; * channel is blocking, this will always be equal; * to @count if @count >= 0.; * @error: A location to return an error of type #GConvertError; * or #GIOChannelError; *; * Replacement for g_io_channel_write() with the new API.; *; * On seekable channels with encodings other than %NULL or UTF-8, generic; * mixing of reading and writing is not allowed. A call to g_io_channel_write_chars (); * may only be made on a channel from which data has been read in the; * cases described in the documentation for g_io_channel_set_encoding ().; *; * Return value:; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:454,error,error,454,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,2,['error'],['error']
Availability,/**; * g_io_channel_write_unichar:; * @channel: a #GIOChannel; * @thechar: a character; * @error: A location to return an error of type #GConvertError; * or #GIOChannelError; *; * This function cannot be called on a channel with %NULL encoding.; *; * Return value: a #GIOStatus; **/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:91,error,error,91,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,2,['error'],['error']
Availability,"/**; * g_locale_from_utf8:; * @utf8string: a UTF-8 encoded string ; * @len: the length of the string, or -1 if the string is; * NULL-terminated.; * @bytes_read: location to store the number of bytes in the; * input string that were successfully converted, or %NULL.; * Even if the conversion was succesful, this may be ; * less than len if there were partial characters; * at the end of the input. If the error; * G_CONVERT_ERROR_ILLEGAL_SEQUENCE occurs, the value; * stored will the byte fofset after the last valid; * input sequence.; * @bytes_written: the stored in the output buffer (not including the; * terminating nul.; * @error: location to store the error occuring, or %NULL to ignore; * errors. Any of the errors in #GConvertError may occur.; * ; * Converts a string from UTF-8 to the encoding used for strings by; * the C runtime (usually the same as that used by the operating; * system) in the current locale.; * ; * Return value: The converted string, or %NULL on an error.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c:405,error,error,405,graf2d/win32gdk/gdk/src/glib/gconvert.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c,6,['error'],"['error', 'errors']"
Availability,"/**; * g_locale_to_utf8:; * @opsysstring: a string in the encoding of the current locale; * @len: the length of the string, or -1 if the string is; * NULL-terminated.; * @bytes_read: location to store the number of bytes in the; * input string that were successfully converted, or %NULL.; * Even if the conversion was succesful, this may be ; * less than len if there were partial characters; * at the end of the input. If the error; * G_CONVERT_ERROR_ILLEGAL_SEQUENCE occurs, the value; * stored will the byte fofset after the last valid; * input sequence.; * @bytes_written: the stored in the output buffer (not including the; * terminating nul.; * @error: location to store the error occuring, or %NULL to ignore; * errors. Any of the errors in #GConvertError may occur.; * ; * Converts a string which is in the encoding used for strings by; * the C runtime (usually the same as that used by the operating; * system) in the current locale into a UTF-8 string.; * ; * Return value: The converted string, or %NULL on an error.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c:427,error,error,427,graf2d/win32gdk/gdk/src/glib/gconvert.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c,6,['error'],"['error', 'errors']"
Availability,"/**; * g_markup_parse_context_end_parse:; * @context: a #GMarkupParseContext; * @error: return location for a #GError; * ; * Signals to the #GMarkupParseContext that all data has been; * fed into the parse context with g_markup_parse_context_parse().; * This function reports an error if the document isn't complete,; * for example if elements are still open.; * ; * Return value: %TRUE on success, %FALSE if an error was set; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.c:81,error,error,81,graf2d/win32gdk/gdk/src/glib/gmarkup.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.c,3,['error'],['error']
Availability,"/**; * g_markup_parse_context_get_position:; * @context: a #GMarkupParseContext; * @line_number: return location for a line number, or %NULL; * @char_number: return location for a char-on-line number, or %NULL; *; * Retrieves the current line number and the number of the character on; * that line. Intended for use in error messages; there are no strict; * semantics for what constitutes the ""current"" line number other than; * ""the best number we could come up with for error messages.""; * ; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.c:319,error,error,319,graf2d/win32gdk/gdk/src/glib/gmarkup.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.c,2,['error'],['error']
Availability,"/**; * g_markup_parse_context_new:; * @parser: a #GMarkupParser; * @flags: one or more #GMarkupParseFlags; * @user_data: user data to pass to #GMarkupParser functions; * @user_data_dnotify: user data destroy notifier called when the parse context is freed; * ; * Creates a new parse context. A parse context is used to parse; * marked-up documents. You can feed any number of documents into; * a context, as long as no errors occur; once an error occurs,; * the parse context can't continue to parse text (you have to free it; * and create a new parse context).; * ; * Return value: a new #GMarkupParseContext; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.c:419,error,errors,419,graf2d/win32gdk/gdk/src/glib/gmarkup.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.c,2,['error'],"['error', 'errors']"
Availability,"/**; * g_markup_parse_context_parse:; * @context: a #GMarkupParseContext; * @text: chunk of text to parse; * @text_len: length of @text in bytes; * @error: return location for a #GError; * ; * Feed some data to the #GMarkupParseContext. The data need not; * be valid UTF-8; an error will be signaled if it's invalid.; * The data need not be an entire document; you can feed a document; * into the parser incrementally, via multiple calls to this function.; * Typically, as you receive data from a network connection or file,; * you feed each received chunk of data into this function, aborting; * the process if an error occurs. Once an error is reported, no further; * data may be fed to the #GMarkupParseContext; all errors are fatal.; * ; * Return value: %FALSE if an error occurred, %TRUE on success; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.c:149,error,error,149,graf2d/win32gdk/gdk/src/glib/gmarkup.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.c,6,['error'],"['error', 'errors']"
Availability,"/**; * g_propagate_error:; * @dest: error return location; * @src: error to move into the return location; * ; * If @dest is NULL, free @src; otherwise,; * moves @src into *@dest. *@dest must be NULL.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gerror.c:36,error,error,36,graf2d/win32gdk/gdk/src/glib/gerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gerror.c,2,['error'],['error']
Availability,"/**; * g_set_error:; * @err: a return location for a #GError, or NULL; * @domain: error domain; * @code: error code ; * @format: printf()-style format; * @Varargs: args for @format ; * ; * Does nothing if @err is NULL; if @err is non-NULL, then *@err must; * be NULL. A new #GError is created and assigned to *@err.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gerror.c:82,error,error,82,graf2d/win32gdk/gdk/src/glib/gerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gerror.c,2,['error'],['error']
Availability,"/**; * g_shell_parse_argv:; * @command_line: command line to parse; * @argcp: return location for number of args; * @argvp: return location for array of args; * @error: return location for error; * ; * Parses a command line into an argument vector, in much the same way; * the shell would, but without many of the expansions the shell would; * perform (variable expansion, globs, operators, filename expansion,; * etc. are not supported). The results are defined to be the same as; * those you would get from a UNIX98 /bin/sh, as long as the input; * contains none of the unsupported shell expansions. If the input; * does contain such expansions, they are passed through; * literally. Possible errors are those from the #G_SHELL_ERROR; * domain.; * ; * Return value: TRUE on success, FALSE if error set; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gshell.c:162,error,error,162,graf2d/win32gdk/gdk/src/glib/gshell.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gshell.c,4,['error'],"['error', 'errors']"
Availability,"/**; * g_shell_unquote:; * @quoted_string: shell-quoted string; * @error: error return location or NULL; * ; * Unquotes a string as the shell (/bin/sh) would. Only handles; * quotes; if a string contains file globs, arithmetic operators,; * variables, backticks, redirections, or other special-to-the-shell; * features, the result will be different from the result a real shell; * would produce (the variables, backticks, etc. will be passed; * through literally instead of being expanded). This function is; * guaranteed to succeed if applied to the result of; * g_shell_quote(). If it fails, it returns NULL and sets the; * error. The @quoted_string need not actually contain quoted or; * escaped text; g_shell_unquote() simply goes through the string and; * unquotes/unescapes anything that the shell would. Both single and; * double quotes are handled, as are escapes including escaped; * newlines. The return value must be freed with g_free(). Possible; * errors are in the #G_SHELL_ERROR domain.; * ; * Shell quoting rules are a bit strange. Single quotes preserve the; * literal string exactly. escape sequences are not allowed; not even; * \' - if you want a ' in the quoted text, you have to do something; * like 'foo'\''bar'. Double quotes allow $, `, "", \, and newline to; * be escaped with backslash. Otherwise double quotes preserve things; * literally.; *; * Return value: an unquoted string; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gshell.c:67,error,error,67,graf2d/win32gdk/gdk/src/glib/gshell.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gshell.c,4,['error'],"['error', 'errors']"
Availability,"/**; * g_spawn_async:; * @working_directory: child's current working directory, or NULL to inherit parent's; * @argv: child's argument vector; * @envp: child's environment, or NULL to inherit parent's; * @flags: flags from #GSpawnFlags; * @child_setup: function to run in the child just before exec(); * @user_data: user data for @child_setup; * @child_pid: return location for child process ID, or NULL; * @error: return location for error; * ; * See g_spawn_async_with_pipes() for a full description; this function; * simply calls the g_spawn_async_with_pipes() without any pipes.; * ; * Return value: TRUE on success, FALSE if error is set; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:408,error,error,408,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,6,['error'],['error']
Availability,"/**; * g_spawn_async_with_pipes:; * @working_directory: child's current working directory, or NULL to inherit parent's; * @argv: child's argument vector; * @envp: child's environment, or NULL to inherit parent's; * @flags: flags from #GSpawnFlags; * @child_setup: function to run in the child just before exec(); * @user_data: user data for @child_setup; * @child_pid: return location for child process ID, or NULL; * @standard_input: return location for file descriptor to write to child's stdin, or NULL; * @standard_output: return location for file descriptor to read child's stdout, or NULL; * @standard_error: return location for file descriptor to read child's stderr, or NULL; * @error: return location for error; *; * Executes a child program asynchronously (your program will not; * block waiting for the child to exit). The child program is; * specified by the only argument that must be provided, @argv. @argv; * should be a NULL-terminated array of strings, to be passed as the; * argument vector for the child. The first string in @argv is of; * course the name of the program to execute. By default, the name of; * the program must be a full path; the PATH shell variable will only; * be searched if you pass the %G_SPAWN_SEARCH_PATH flag.; *; * @envp is a NULL-terminated array of strings, where each string; * has the form <literal>KEY=VALUE</literal>. This will become; * the child's environment. If @envp is NULL, the child inherits its; * parent's environment.; *; * @flags should be the bitwise OR of any flags you want to affect the; * function's behavior. The %G_SPAWN_DO_NOT_REAP_CHILD means that the; * child will not be automatically reaped; you must call waitpid() or; * handle SIGCHLD yourself, or the child will become a zombie.; * %G_SPAWN_LEAVE_DESCRIPTORS_OPEN means that the parent's open file; * descriptors will be inherited by the child; otherwise all; * descriptors except stdin/stdout/stderr will be closed before; * calling exec() in the child. %G_SPAWN_SEARCH_PA",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:687,error,error,687,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,4,['error'],['error']
Availability,"/**; * g_spawn_command_line_async:; * @command_line: a command line; * @error: return location for errors; * ; * A simple version of g_spawn_async() that parses a command line with; * g_shell_parse_argv() and passes it to g_spawn_async(). Runs a; * command line in the background. Unlike g_spawn_async(), the; * %G_SPAWN_SEARCH_PATH flag is enabled, other flags are not. Note; * that %G_SPAWN_SEARCH_PATH can have security implications, so; * consider using g_spawn_async() directly if appropriate. Possible; * errors are those from g_shell_parse_argv() and g_spawn_async().; * ; * Return value: TRUE on success, FALSE if error is set.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:72,error,error,72,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,8,['error'],"['error', 'errors']"
Availability,"/**; * g_spawn_command_line_sync:; * @command_line: a command line ; * @standard_output: return location for child output; * @standard_error: return location for child errors; * @exit_status: return location for child exit status; * @error: return location for errors; *; * A simple version of g_spawn_sync() with little-used parameters; * removed, taking a command line instead of an argument vector. See; * g_spawn_sync() for full details. @command_line will be parsed by; * g_shell_parse_argv(). Unlike g_spawn_sync(), the %G_SPAWN_SEARCH_PATH flag; * is enabled. Note that %G_SPAWN_SEARCH_PATH can have security; * implications, so consider using g_spawn_sync() directly if; * appropriate. Possible errors are those from g_spawn_sync() and those; * from g_shell_parse_argv().; * ; * Return value: TRUE on success, FALSE if an error was set; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:168,error,errors,168,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,10,['error'],"['error', 'errors']"
Availability,"/**; * g_spawn_sync:; * @working_directory: child's current working directory, or NULL to inherit parent's; * @argv: child's argument vector; * @envp: child's environment, or NULL to inherit parent's; * @flags: flags from #GSpawnFlags; * @child_setup: function to run in the child just before exec(); * @user_data: user data for @child_setup; * @standard_output: return location for child output ; * @standard_error: return location for child error messages; * @exit_status: child exit status, as returned by waitpid(); * @error: return location for error; *; * Executes a child synchronously (waits for the child to exit before returning).; * All output from the child is stored in @standard_output and @standard_error,; * if those parameters are non-NULL. If @exit_status is non-NULL, the exit status; * of the child is stored there as it would be by waitpid(); standard UNIX; * macros such as WIFEXITED() and WEXITSTATUS() must be used to evaluate the; * exit status. If an error occurs, no data is returned in @standard_output,; * @standard_error, or @exit_status.; * ; * This function calls g_spawn_async_with_pipes() internally; see that function; * for full details on the other parameters.; * ; * Return value: TRUE on success, FALSE if an error was set.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:443,error,error,443,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,10,['error'],['error']
Availability,"/**; * g_thread_pool_free:; * @pool: a #GThreadPool; * @immediate: should @pool shut down immediately?; * @wait: should the function wait for all tasks to be finished?; *; * Frees all resources allocated for @pool.; *; * If @immediate is #TRUE, no new task is processed for; * @pool. Otherwise @pool is not freed before the last task is; * processed. Note however, that no thread of this pool is; * interrupted, while processing a task. Instead at least all still; * running threads can finish their tasks before the @pool is freed.; *; * If @wait is #TRUE, the functions does not return before all tasks; * to be processed (dependent on @immediate, whether all or only the; * currently running) are ready. Otherwise the function returns immediately.; *; * After calling this function @pool must not be used anymore. ; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthreadpool.c:85,down,down,85,graf2d/win32gdk/gdk/src/glib/gthreadpool.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthreadpool.c,1,['down'],['down']
Availability,"/**; * g_thread_pool_new: ; * @func: a function to execute in the threads of the new thread pool; * @user_data: user data that is handed over to @func every time it ; * is called; * @max_threads: the maximal number of threads to execute concurrently in ; * the new thread pool, -1 means no limit; * @exclusive: should this thread pool be exclusive?; * @error: return location for error; *; * This function creates a new thread pool.; *; * Whenever you call g_thread_pool_push(), either a new thread is; * created or an unused one is reused. At most @max_threads threads; * are running concurrently for this thread pool. @max_threads = -1; * allows unlimited threads to be created for this thread pool. The; * newly created or reused thread now executes the function @func with; * the two arguments. The first one is the parameter to; * g_thread_pool_push() and the second one is @user_data.; *; * The parameter @exclusive determines, whether the thread pool owns; * all threads exclusive or whether the threads are shared; * globally. If @exclusive is @TRUE, @max_threads threads are started; * immediately and they will run exclusively for this thread pool until; * it is destroyed by g_thread_pool_free(). If @exclusive is @FALSE,; * threads are created, when needed and shared between all; * non-exclusive thread pools. This implies that @max_threads may not; * be -1 for exclusive thread pools.; *; * @error can be NULL to ignore errors, or non-NULL to report; * errors. An error can only occur, when @exclusive is set to @TRUE and; * not all @max_threads threads could be created.; *; * Return value: the new #GThreadPool; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthreadpool.c:353,error,error,353,graf2d/win32gdk/gdk/src/glib/gthreadpool.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthreadpool.c,6,['error'],"['error', 'errors']"
Availability,"/**; * g_thread_pool_push:; * @pool: a #GThreadPool; * @data: a new task for @pool; * @error: return location for error; * ; * Inserts @data into the list of tasks to be executed by @pool. When; * the number of currently running threads is lower than the maximal; * allowed number of threads, a new thread is started (or reused) with; * the properties given to g_thread_pool_new (). Otherwise @data stays; * in the queue until a thread in this pool finishes its previous task; * and processes @data. ; *; * @error can be NULL to ignore errors, or non-NULL to report; * errors. An error can only occur, when a new thread couldn't be; * created. In that case @data is simply appended to the queue of work; * to do. ; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthreadpool.c:87,error,error,87,graf2d/win32gdk/gdk/src/glib/gthreadpool.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthreadpool.c,6,['error'],"['error', 'errors']"
Availability,"/**; * g_thread_pool_set_max_threads:; * @pool: a #GThreadPool; * @max_threads: a new maximal number of threads for @pool; * @error: return location for error; * ; * Sets the maximal allowed number of threads for @pool. A value of -1; * means, that the maximal number of threads is unlimited.; *; * Setting @max_threads to 0 means stopping all work for @pool. It is; * effectively frozen until @max_threads is set to a non-zero value; * again.; * ; * A thread is never terminated while calling @func, as supplied by; * g_thread_pool_new (). Instead the maximal number of threads only; * has effect for the allocation of new threads in g_thread_pool_push; * (). A new thread is allocated, whenever the number of currently; * running threads in @pool is smaller than the maximal number.; *; * @error can be NULL to ignore errors, or non-NULL to report; * errors. An error can only occur, when a new thread couldn't be; * created. ; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthreadpool.c:126,error,error,126,graf2d/win32gdk/gdk/src/glib/gthreadpool.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthreadpool.c,6,['error'],"['error', 'errors']"
Availability,"/**; * g_ucs4_to_utf16:; * @str: a UCS-4 encoded string; * @len: the maximum length of @str to use. If @len < 0, then; * the string is terminated with a 0 character.; * @items_read: location to store number of bytes read, or %NULL.; * If an error occurs then the index of the invalid input; * is stored here.; * @items_written: location to store number of words written, or %NULL.; * The value stored here does not include the trailing; * 0 word.; * @error: location to store the error occuring, or %NULL to ignore; * errors. Any of the errors in #GConvertError other than; * %G_CONVERT_ERROR_NO_CONVERSION may occur.; *; * Convert a string from UCS-4 to UTF-16. A 0 word will be; * added to the result after the converted text.; * ; * Return value: a pointer to a newly allocated UTF-16 string.; * This value must be freed with g_free(). If an; * error occurs, %NULL will be returned and; * @error set.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutf8.c:241,error,error,241,graf2d/win32gdk/gdk/src/glib/gutf8.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutf8.c,7,['error'],"['error', 'errors']"
Availability,"/**; * g_ucs4_to_utf8:; * @str: a UCS-4 encoded string; * @len: the maximum length of @str to use. If @len < 0, then; * the string is terminated with a 0 character.; * @items_read: location to store number of characters read read, or %NULL.; * @items_written: location to store number of bytes written or %NULL.; * The value here stored does not include the trailing 0; * byte. ; * @error: location to store the error occuring, or %NULL to ignore; * errors. Any of the errors in #GConvertError other than; * %G_CONVERT_ERROR_NO_CONVERSION may occur.; *; * Convert a string from a 32-bit fixed width representation as UCS-4.; * to UTF-8. The result will be terminated with a 0 byte.; * ; * Return value: a pointer to a newly allocated UTF-8 string.; * This value must be freed with g_free(). If an; * error occurs, %NULL will be returned and; * @error set.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutf8.c:383,error,error,383,graf2d/win32gdk/gdk/src/glib/gutf8.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutf8.c,6,['error'],"['error', 'errors']"
Availability,"/**; * g_utf16_to_ucs4:; * @str: a UTF-16 encoded string; * @len: the maximum length of @str to use. If @len < 0, then; * the string is terminated with a 0 character.; * @items_read: location to store number of words read, or %NULL.; * If %NULL, then %G_CONVERT_ERROR_PARTIAL_INPUT will be; * returned in case @str contains a trailing partial; * character. If an error occurs then the index of the; * invalid input is stored here.; * @items_written: location to store number of characters written, or %NULL.; * The value stored here does not include the trailing; * 0 character.; * @error: location to store the error occuring, or %NULL to ignore; * errors. Any of the errors in #GConvertError other than; * %G_CONVERT_ERROR_NO_CONVERSION may occur.; *; * Convert a string from UTF-16 to UCS-4. The result will be; * terminated with a 0 character.; * ; * Return value: a pointer to a newly allocated UCS-4 string.; * This value must be freed with g_free(). If an; * error occurs, %NULL will be returned and; * @error set.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutf8.c:363,error,error,363,graf2d/win32gdk/gdk/src/glib/gutf8.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutf8.c,7,['error'],"['error', 'errors']"
Availability,"/**; * g_utf16_to_utf8:; * @str: a UTF-16 encoded string; * @len: the maximum length of @str to use. If @len < 0, then; * the string is terminated with a 0 character.; * @items_read: location to store number of words read, or %NULL.; * If %NULL, then %G_CONVERT_ERROR_PARTIAL_INPUT will be; * returned in case @str contains a trailing partial; * character. If an error occurs then the index of the; * invalid input is stored here.; * @items_written: location to store number of bytes written, or %NULL.; * The value stored here does not include the trailing; * 0 byte.; * @error: location to store the error occuring, or %NULL to ignore; * errors. Any of the errors in #GConvertError other than; * %G_CONVERT_ERROR_NO_CONVERSION may occur.; *; * Convert a string from UTF-16 to UTF-8. The result will be; * terminated with a 0 byte.; * ; * Return value: a pointer to a newly allocated UTF-8 string.; * This value must be freed with g_free(). If an; * error occurs, %NULL will be returned and; * @error set.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutf8.c:363,error,error,363,graf2d/win32gdk/gdk/src/glib/gutf8.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutf8.c,7,['error'],"['error', 'errors']"
Availability,"/**; * g_utf8_to_ucs4:; * @str: a UTF-8 encoded string; * @len: the maximum length of @str to use. If @len < 0, then; * the string is nul-terminated.; * @items_read: location to store number of bytes read, or %NULL.; * If %NULL, then %G_CONVERT_ERROR_PARTIAL_INPUT will be; * returned in case @str contains a trailing partial; * character. If an error occurs then the index of the; * invalid input is stored here.; * @items_written: location to store number of characters written or %NULL.; * The value here stored does not include the trailing 0; * character. ; * @error: location to store the error occuring, or %NULL to ignore; * errors. Any of the errors in #GConvertError other than; * %G_CONVERT_ERROR_NO_CONVERSION may occur.; *; * Convert a string from UTF-8 to a 32-bit fixed width; * representation as UCS-4. A trailing 0 will be added to the; * string after the converted text.; * ; * Return value: a pointer to a newly allocated UCS-4 string.; * This value must be freed with g_free(). If an; * error occurs, %NULL will be returned and; * @error set.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutf8.c:346,error,error,346,graf2d/win32gdk/gdk/src/glib/gutf8.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutf8.c,7,['error'],"['error', 'errors']"
Availability,"/**; * g_utf8_to_ucs4_fast:; * @str: a UTF-8 encoded string; * @len: the maximum length of @str to use. If @len < 0, then; * the string is nul-terminated.; * @items_written: location to store the number of characters in the; * result, or %NULL.; *; * Convert a string from UTF-8 to a 32-bit fixed width; * representation as UCS-4, assuming valid UTF-8 input.; * This function is roughly twice as fast as g_utf8_to_ucs4(); * but does no error checking on the input.; * ; * Return value: a pointer to a newly allocated UCS-4 string.; * This value must be freed with g_free().; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutf8.c:436,error,error,436,graf2d/win32gdk/gdk/src/glib/gutf8.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutf8.c,1,['error'],['error']
Availability,"/**; * g_utf8_to_utf16:; * @str: a UTF-8 encoded string; * @len: the maximum length of @str to use. If @len < 0, then; * the string is nul-terminated.; ; * @items_read: location to store number of bytes read, or %NULL.; * If %NULL, then %G_CONVERT_ERROR_PARTIAL_INPUT will be; * returned in case @str contains a trailing partial; * character. If an error occurs then the index of the; * invalid input is stored here.; * @items_written: location to store number of words written, or %NULL.; * The value stored here does not include the trailing; * 0 word.; * @error: location to store the error occuring, or %NULL to ignore; * errors. Any of the errors in #GConvertError other than; * %G_CONVERT_ERROR_NO_CONVERSION may occur.; *; * Convert a string from UTF-8 to UTF-16. A 0 word will be; * added to the result after the converted text.; * ; * Return value: a pointer to a newly allocated UTF-16 string.; * This value must be freed with g_free(). If an; * error occurs, %NULL will be returned and; * @error set.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutf8.c:349,error,error,349,graf2d/win32gdk/gdk/src/glib/gutf8.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutf8.c,7,['error'],"['error', 'errors']"
Availability,"/**; * g_win32_error_message:; * @error: error code; *; * Translate a Win32 error code (as returned by GetLastError()) into; * the corresponding message. The message is either language neutral,; * or in the thread's language, or the user's language, the system's; * langauge, or US English (see docs for FormatMessage). The returned; * string should be deallocated with g_free().; *; * Returns: allocated error message; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gwin32.c:34,error,error,34,graf2d/win32gdk/gdk/src/glib/gwin32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gwin32.c,4,['error'],['error']
Availability,"/**; @defgroup FitMain User Fitting classes. Main Classes used for fitting a given data set; @ingroup Fit; */; //___________________________________________________________________________________; /**; Fitter class, entry point for performing all type of fits.; Fits are performed using the generic ROOT::Fit::Fitter::Fit method.; The inputs are the data points and a model function (using a ROOT::Math::IParamFunction); The result of the fit is returned and kept internally in the ROOT::Fit::FitResult class.; The configuration of the fit (parameters, options, etc...) are specified in the; ROOT::Math::FitConfig class.; After fitting the config of the fit will be modified to have the new values the resulting; parameter of the fit with step sizes equal to the errors. FitConfig can be preserved with; initial parameters by calling FitConfig.SetUpdateAfterFit(false);. @ingroup FitMain; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:764,error,errors,764,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['error'],['errors']
Availability,/**; Abstract RLogHandler base class. ROOT logs everything from info to error; to entities of this class.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:72,error,error,72,core/foundation/inc/ROOT/RLogger.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx,1,['error'],['error']
Availability,"/**; Buffer-less streaming decompression (synchronous mode). A ZSTD_DCtx object is required to track streaming operations.; Use ZSTD_createDCtx() / ZSTD_freeDCtx() to manage it.; A ZSTD_DCtx object can be re-used multiple times. First typical operation is to retrieve frame parameters, using ZSTD_getFrameHeader().; Frame header is extracted from the beginning of compressed frame, so providing only the frame's beginning is enough.; Data fragment must be large enough to ensure successful decoding.; `ZSTD_frameHeaderSize_max` bytes is guaranteed to always be large enough.; @result : 0 : successful decoding, the `ZSTD_frameHeader` structure is correctly filled.; >0 : `srcSize` is too small, please provide at least @result bytes on next attempt.; errorCode, which can be tested using ZSTD_isError(). It fills a ZSTD_frameHeader structure with important information to correctly decode the frame,; such as the dictionary ID, content size, or maximum back-reference distance (`windowSize`).; Note that these values could be wrong, either because of data corruption, or because a 3rd party deliberately spoofs false information.; As a consequence, check that values remain within valid application range.; For example, do not allocate memory blindly, check that `windowSize` is within expectation.; Each application can set its own limits, depending on local restrictions.; For extended interoperability, it is recommended to support `windowSize` of at least 8 MB. ZSTD_decompressContinue() needs previous data blocks during decompression, up to `windowSize` bytes.; ZSTD_decompressContinue() is very sensitive to contiguity,; if 2 blocks don't follow each other, make sure that either the compressor breaks contiguity at the same place,; or that previous contiguous segment is large enough to properly handle maximum back-reference distance.; There are multiple ways to guarantee this condition. The most memory efficient way is to use a round buffer of sufficient size.; Sufficient size is determin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:751,error,errorCode,751,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['errorCode']
Availability,/**; Build (find) function minimum using the Variable Metric method (MIGRAD); Two possible error updators can be chosen; - Davidon : this is the standard formula used in Migrad; - BFGS this is the new formula based on BFGS algorithm; (see Broyden–Fletcher–Goldfarb–Shanno algorithm; https://en.wikipedia.org/wiki/Broyden–Fletcher–Goldfarb–Shanno_algorithm ); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/VariableMetricBuilder.h:91,error,error,91,math/minuit2/inc/Minuit2/VariableMetricBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/VariableMetricBuilder.h,1,['error'],['error']
Availability,/**; Calculate eta given rho and zeta.; This formula is faster than the standard calculation (below) from log(tan(theta/2); but one has to be careful when rho is much smaller than z (large eta values); Formula is eta = log( zs + sqrt(zs^2 + 1) ) where zs = z/rho. For large value of z_scaled (tan(theta) ) one can approximate the sqrt via a Taylor expansion; We do the approximation of the sqrt if the numerical error is of the same order of second term of; the sqrt.expansion:; eps > 1/zs^4 => zs > 1/(eps^0.25). When rho == 0 we use etaMax (see definition in etaMax.h). */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/eta.h:412,error,error,412,math/genvector/inc/Math/GenVector/eta.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/eta.h,1,['error'],['error']
Availability,/**; Compute the roots iterating until the estimate of the Root is within the required tolerance returning; the iteration Status; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RootFinder.h:87,toler,tolerance,87,math/mathcore/inc/Math/RootFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RootFinder.h,1,['toler'],['tolerance']
Availability,"/**; Construct given optionally tolerance (absolute and relative), maximum number of function evaluation (maxpts) and; size of the working array.; The integration will stop when the absolute error is less than the absolute tolerance OR when the relative error is less; than the relative tolerance. The absolute tolerance by default is not used (it is equal to zero).; The size of working array represents the number of sub-division used for calculating the integral.; Higher the dimension, larger sizes are required for getting the same accuracy.; The size must be larger than; \f$ (2n + 3) (1 + maxpts/(2^n + 2n(n + 1) + 1))/2) \f$.; For smaller value passed, the minimum allowed will be used; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:32,toler,tolerance,32,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,6,"['error', 'toler']","['error', 'tolerance']"
Availability,"/**; Construct with a reference to the integrand function and given optionally; tolerance (absolute and relative), maximum number of function evaluation (maxpts) and; size of the working array.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:80,toler,tolerance,80,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,1,['toler'],['tolerance']
Availability,"/**; Constructor of one dimensional Integrator passing a function interface. @param f integration function (1D interface). It is copied inside; @param type integration type (adaptive, non-adaptive, etc..); @param absTol desired absolute tolerance. The algorithm will stop when either the absolute OR the relative tolerance are satisfied.; @param relTol desired relative tolerance; @param size maximum number of sub-intervals; @param rule Gauss-Kronrod integration rule (only for GSL ADAPTIVE type). NOTE: When no values are passed, the values used are taken from the default defined in ROOT::Math::IntegratorOneDimOptions; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:237,toler,tolerance,237,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,3,['toler'],['tolerance']
Availability,/**; Dummy Structure which flags an error to avoid assignment from expression based on a; general matrix to a symmetric matrix; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/HelperOps.h:36,error,error,36,math/smatrix/inc/Math/HelperOps.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/HelperOps.h,1,['error'],['error']
Availability,"/**; Enumeration defining the types of interpolation methods availables.; Passed as argument to instantiate mathlib::Interpolator objects.; The types available are (more information is available in the; <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Interpolation-Types.html"">GSL manual</A>):; <ul>; <li>LINEAR interpolation;; <li>POLYNOMIAL interpolation, to be used for small number of points since introduces large oscillations;; <li>CSPLINE cubic spline with natural boundary conditions;; <li>CSPLINE_PERIODIC cubic spline with periodic boundary conditions;; <li>AKIMA, Akima spline with natural boundary conditions ( requires a minimum of 5 points);; <li>AKIMA_PERIODIC, Akima spline with periodic boundaries ( requires a minimum of 5 points);; </ul>. @ingroup Interpolation; */; // enumerations for the type of interpolations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/InterpolationTypes.h:61,avail,availables,61,math/mathmore/inc/Math/InterpolationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/InterpolationTypes.h,3,['avail'],"['available', 'availables']"
Availability,"/**; Enumeration with One Dimensional Minimizer Algorithms.; The algorithms are implemented using GSL, see the; <A HREF=""http://www.gnu.org/software/gsl/manual/gsl-ref_33.html#SEC447"">GSL manual</A>. The algorithms available are:; <ul>; <li><em>Golden Section Algorithm</em>, simplest method of bracketing the minimum of a function; <li><em>Brent Algorithm</em>, which combines a parabolic interpolation with the golden section algorithm; </ul>; @ingroup Min1D; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMinimizer1D.h:215,avail,available,215,math/mathmore/inc/Math/GSLMinimizer1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMinimizer1D.h,1,['avail'],['available']
Availability,/**; Equality operator. Check equality for each element; To do: use T tolerance; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Transform3D.h:70,toler,tolerance,70,math/genvector/inc/Math/GenVector/Transform3D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Transform3D.h,1,['toler'],['tolerance']
Availability,/**; Evaluate the series at a given point x estimating both the series result and its absolute error.; The error estimate is made from the first neglected term in the series.; A pair containing result and error is returned; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/ChebyshevApprox.h:95,error,error,95,math/mathmore/inc/Math/ChebyshevApprox.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/ChebyshevApprox.h,3,['error'],['error']
Availability,/**; Fill the passed array with the covariance matrix elements; if the variable is fixed or const the value is zero.; The array will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx:212,error,errors,212,math/mathcore/src/Minimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx,4,['error'],['errors']
Availability,/**; Find minimum position iterating until convergence specified by the absolute and relative tolerance or; the maximum number of iteration is reached; Return true is result is successful; \@param maxIter maximum number of iteration; \@param absTol desired absolute error in the minimum position; \@param absTol desired relative error in the minimum position; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMinimizer1D.h:94,toler,tolerance,94,math/mathmore/inc/Math/GSLMinimizer1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMinimizer1D.h,3,"['error', 'toler']","['error', 'tolerance']"
Availability,/**; Find the root starting from the point X;; Use the number of iteration and tolerance if given otherwise use; default parameter values which can be defined by; the static method SetDefault...; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMultiRootFinder.h:79,toler,tolerance,79,math/mathmore/inc/Math/GSLMultiRootFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMultiRootFinder.h,1,['toler'],['tolerance']
Availability,"/**; Finds a minimum of a function, if the function is unimodal between xmin and xmax; This method uses a combination of golden section search and parabolic interpolation; Details about convergence and properties of this algorithm can be; found in the book by R.P.Brent ""Algorithms for Minimization Without Derivatives""; or in the ""Numerical Recipes"", chapter 10.2; convergence is reached using tolerance = 2 *( epsrel * abs(x) + epsabs). type: 0-returns MinimumX; 1-returns Minimum; 2-returns MaximumX; 3-returns Maximum; 4-returns X corresponding to fy. if ok=true the method has converged.; Maxiter returns the actual number of iteration performed. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BrentMethods.h:395,toler,tolerance,395,math/mathcore/inc/Math/BrentMethods.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BrentMethods.h,1,['toler'],['tolerance']
Availability,"/**; Generate an integer number between [0,max-1] (including 0 and max-1); if max is larger than available range of algorithm; an error message is printed and zero is returned; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLRndmEngines.h:97,avail,available,97,math/mathmore/inc/Math/GSLRndmEngines.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLRndmEngines.h,2,"['avail', 'error']","['available', 'error']"
Availability,"/**; Generate an integer number between [0,max_generator-1] (including 0 and max-1); if max is larger than available range of algorithm; an error message is printed and zero is returned; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLRndmEngines.h:107,avail,available,107,math/mathmore/inc/Math/GSLRndmEngines.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLRndmEngines.h,2,"['avail', 'error']","['available', 'error']"
Availability,"/**; Get errors on the point (coordinate errors and asymmetric value errors) for the; given fit point.; It must be called only when the coordinate errors and asymmetric errors are stored; otherwise it will produce an assert.; */; // not threadsafe, to be replaced with never constructs!; // for example: just return std::array or std::vector, there's; // is going to be only minor overhead in c++11.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:9,error,errors,9,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,5,['error'],['errors']
Availability,/**; Inequality operator. Check equality for each element; To do: use T tolerance; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Transform3D.h:72,toler,tolerance,72,math/genvector/inc/Math/GenVector/Transform3D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Transform3D.h,1,['toler'],['tolerance']
Availability,"/**; Initialize method for continuous multi-dimensional distribution.; User must provide a distribution object (which is copied inside) and a string for a method.; For the list of available method for multivariate cont. distribution see the; <A href=""http://statmath.wu-wien.ac.at/unuran/doc/unuran.html#Methods_005ffor_005fCVEC"">UnuRan doc</A>; A re-initialization is needed whenever distribution parameters have been changed. The default method used for multi-dimensional distributions is ""vnrou""; Note that some of the multi-dimensional continuous distribution methods like ""hitro"" are based on Markov-CHain sampler and; they are much faster for sampling but require more time to converge. Furthermore, since they are Markov-Chain methods their; generated sample values are correlated and cannot be used as i.i.d., one can instead use the obtained sample distribution.; (see also the ROOT issue: #10222 ). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h:180,avail,available,180,math/unuran/inc/TUnuran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h,1,['avail'],['available']
Availability,"/**; Initialize method for continuous one-dimensional discrete distribution.; User must provide a distribution object (which is copied inside) and a string for a method.; For the list of available method for 1D discrete distribution see the; <A href=""http://statmath.wu-wien.ac.at/unuran/doc/unuran.html#Methods_005ffor_005fDISCR"">UnuRan doc</A>; A re-initialization is needed whenever distribution parameters have been changed. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h:187,avail,available,187,math/unuran/inc/TUnuran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h,1,['avail'],['available']
Availability,"/**; Initialize method for continuous one-dimensional distribution.; User must provide a distribution object (which is copied inside) and a string for a method.; For the list of available method for 1D cont. distribution see the; <A href=""http://statmath.wu-wien.ac.at/unuran/doc/unuran.html#Methods_005ffor_005fCONT"">UnuRan doc</A>.; A re-initialization is needed whenever distribution parameters have been changed.; Note that the method string can contain in addition to the method name all the specific method; parameters specified using the UNURAN method string API.; For example a valid string can be `""method=arou; max_segments=1000; max_sqhratio = 0.9""`; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h:178,avail,available,178,math/unuran/inc/TUnuran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h,1,['avail'],['available']
Availability,"/**; Inversion of a symmetric positive defined Matrix using Choleski decomposition.; ( this method changes the current matrix).; Return true if inversion is successful.; The method used is based on Choleski decomposition; A compile error is given if the matrix is not of type symmetric and a run-time failure if the; matrix is not positive defined.; For solving a linear system, it is possible to use also the function; ROOT::Math::SolveChol(matrix, vector) which will be faster than performing the inversion; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h:232,error,error,232,math/smatrix/inc/Math/SMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h,2,"['error', 'failure']","['error', 'failure']"
Availability,/**; Invert of a symmetric positive defined Matrix using Choleski decomposition.; A compile error is given if the matrix is not of type symmetric and a run-time failure if the; matrix is not positive defined.; In case the inversion fails the current matrix is returned.; \param ifail . ifail will be set to 0 when inversion is successful.; See ROOT::Math::SMatrix::InvertChol for the inversion algorithm; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h:92,error,error,92,math/smatrix/inc/Math/SMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h,2,"['error', 'failure']","['error', 'failure']"
Availability,/**; Keep track of emitted errors and warnings.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:27,error,errors,27,core/foundation/inc/ROOT/RLogger.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx,1,['error'],['errors']
Availability,/**; MINOS status code of last Minos run; `status & 1 > 0` : invalid lower error; `status & 2 > 0` : invalid upper error; `status & 4 > 0` : invalid because maximum number of function calls exceeded; `status & 8 > 0` : a new minimum has been found; `status & 16 > 0` : error is truncated because parameter is at lower/upper limit; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h:75,error,error,75,math/minuit2/inc/Minuit2/Minuit2Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h,3,['error'],['error']
Availability,"/**; MinimTransformVariable class; Contains meta information of the variables such as bounds, fix flags and; deals with transformation of the variable; The class does not contain the values and the step size (error) of the variable; This is an internal class used by the MinimTransformFunction class. @ingroup MultiMin; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformVariable.h:209,error,error,209,math/mathcore/inc/Math/MinimTransformVariable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformVariable.h,1,['error'],['error']
Availability,"/**; Minimize the function; @param maxfcn : max number of function calls (if = 0) default is used which is set to; 200 + 100 * npar + 5 * npar**2; @param tolerance : value used for terminating iteration procedure.; For example, MIGRAD will stop iterating when edm (expected distance from minimum) will be:; edm < tolerance * 10**-3; Default value of tolerance used is 0.1; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnApplication.h:154,toler,tolerance,154,math/minuit2/inc/Minuit2/MnApplication.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnApplication.h,3,['toler'],['tolerance']
Availability,"/**; Object to count the number of warnings and errors emitted by a section of code,; after construction of this type.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:48,error,errors,48,core/foundation/inc/ROOT/RLogger.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx,1,['error'],['errors']
Availability,/**; Perform a minimizer iteration and; if an unexpected problem occurs then an error code will be returned; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMinimizer1D.h:80,error,error,80,math/mathmore/inc/Math/GSLMinimizer1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMinimizer1D.h,1,['error'],['error']
Availability,/**; Pre-processor macro to report messages; which can be configured to use ROOT error or; simply an std::iostream in case of stan-alone builds; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Error.h:81,error,error,81,math/mathcore/inc/Math/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Error.h,1,['error'],['error']
Availability,"/**; Preallocate a data set with given size, dimension and error type.; If the data set already exists, `newPoints` are appended to the existing data set.; (i.e., if the data exists Initialize() is equivalent to a `resize( NPoints() + maxpoints)`).; Initialize() and Append() are equivalent.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:59,error,error,59,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,1,['error'],['error']
Availability,"/**; Retrieve the errors on the point (coordinate and value) for the given fit point; It must be called only when the coordinate errors are stored otherwise it will produce an; assert.; */; // not threadsafe, to be replaced with never constructs!; // for example: just return std::array or std::vector, there's; // is going to be only minor overhead in c++11.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:18,error,errors,18,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,2,['error'],['errors']
Availability,/**; Return a pointer to the error (or the inverse error) on the value for a given point; depending on the type of data.; - If the data contains only value error (e.g. from histograms) returns a pointer to; the inverse of the errors.; - If the data contains errors in coordinates and value (e.g from TGraphErrors) returns a; pointer to the corresponding value error (NOT the inverse).; - If the data contains asymmetric errors return a pointer to the average error (NOT the inverse):; 0.5(eu + el).; - If the data does not contain errors return a nullptr.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:29,error,error,29,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,9,['error'],"['error', 'errors']"
Availability,"/**; Return a pointer to the errors in the coordinates for the given fit point; */; // not threadsafe, to be replaced with never constructs!; // for example: just return std::array or std::vector, there's; // is going to be only minor overhead in c++11.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:29,error,errors,29,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,1,['error'],['errors']
Availability,/**; Return the inverse of error on the value for the given fit point; useful when error in the coordinates are not stored and then this is used directly this as the weight in; the least square function; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:27,error,error,27,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,2,['error'],['error']
Availability,"/**; Return the status of the last estimate of the Root; = 0 OK, not zero failure; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RootFinder.h:74,failure,failure,74,math/mathcore/inc/Math/RootFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RootFinder.h,1,['failure'],['failure']
Availability,"/**; Returns the first derivative of the function at point x,; computed by Richardson's extrapolation method (use 2 derivative estimates; to compute a third, more accurate estimation); first, derivatives with steps h and h/2 are computed by central difference formulas; \f[; D(h) = \frac{f(x+h) - f(x-h)}{2h}; \f]; the final estimate; \f[; D = \frac{4D(h/2) - D(h)}{3}; \f]; ""Numerical Methods for Scientists and Engineers"", H.M.Antia, 2nd edition"". the argument eps may be specified to control the step size (precision).; the step size is taken as eps*(xmax-xmin).; the default value (0.001) should be good enough for the vast majority; of functions. Give a smaller value if your function has many changes; of the second derivative in the function range. Getting the error via TF1::DerivativeError:; (total error = roundoff error + interpolation error); the estimate of the roundoff error is taken as follows:; \f[; err = k\sqrt{f(x)^{2} + x^{2}deriv^{2}}\sqrt{\sum ai^{2}},; \f]; where k is the double precision, ai are coefficients used in; central difference formulas; interpolation error is decreased by making the step size h smaller.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RichardsonDerivator.h:768,error,error,768,math/mathcore/inc/Math/RichardsonDerivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RichardsonDerivator.h,6,['error'],['error']
Availability,"/**; Returns the second derivative of the function at point x,; computed by Richardson's extrapolation method (use 2 derivative estimates; to compute a third, more accurate estimation); first, derivatives with steps h and h/2 are computed by central difference formulas; \f[; D(h) = \frac{f(x+h) - 2f(x) + f(x-h)}{h^{2}}; \f]; the final estimate; \f[; D = \frac{4D(h/2) - D(h)}{3}; \f]; ""Numerical Methods for Scientists and Engineers"", H.M.Antia, 2nd edition"". the argument eps may be specified to control the step size (precision).; the step size is taken as eps*(xmax-xmin).; the default value (0.001) should be good enough for the vast majority; of functions. Give a smaller value if your function has many changes; of the second derivative in the function range. Getting the error via TF1::DerivativeError:; (total error = roundoff error + interpolation error); the estimate of the roundoff error is taken as follows:; \f[; err = k\sqrt{f(x)^{2} + x^{2}deriv^{2}}\sqrt{\sum ai^{2}},; \f]; where k is the double precision, ai are coefficients used in; central difference formulas; interpolation error is decreased by making the step size h smaller.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RichardsonDerivator.h:780,error,error,780,math/mathcore/inc/Math/RichardsonDerivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RichardsonDerivator.h,6,['error'],['error']
Availability,"/**; Returns the third derivative of the function at point x,; computed by Richardson's extrapolation method (use 2 derivative estimates; to compute a third, more accurate estimation); first, derivatives with steps h and h/2 are computed by central difference formulas; \f[; D(h) = \frac{f(x+2h) - 2f(x+h) + 2f(x-h) - f(x-2h)}{2h^{3}}; \f]; the final estimate; \f[; D = \frac{4D(h/2) - D(h)}{3}; \f]; ""Numerical Methods for Scientists and Engineers"", H.M.Antia, 2nd edition"". the argument eps may be specified to control the step size (precision).; the step size is taken as eps*(xmax-xmin).; the default value (0.001) should be good enough for the vast majority; of functions. Give a smaller value if your function has many changes; of the second derivative in the function range. Getting the error via TF1::DerivativeError:; (total error = roundoff error + interpolation error); the estimate of the roundoff error is taken as follows:; \f[; err = k\sqrt{f(x)^{2} + x^{2}deriv^{2}}\sqrt{\sum ai^{2}},; \f]; where k is the double precision, ai are coefficients used in; central difference formulas; interpolation error is decreased by making the step size h smaller.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RichardsonDerivator.h:794,error,error,794,math/mathcore/inc/Math/RichardsonDerivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RichardsonDerivator.h,6,['error'],['error']
Availability,"/**; Set identity transformation (identity rotation , zero translation); vectorised version that sets using a mask; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Transform3D.h:110,mask,mask,110,math/genvector/inc/Math/GenVector/Transform3D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Transform3D.h,1,['mask'],['mask']
Availability,"/**; Some datatypes of ROOT or c++ can be wrapped in to a TRObject,; this method lets you unwrap those datatypes encapsulate into this TRObject.; \note If the current TRObject is not a valid object it will return and empty object and it will print an error message; \return template return with the require datatype; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h:251,error,error,251,bindings/r/inc/TRObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h,1,['error'],['error']
Availability,"/**; Template Constructor of one dimensional Integrator passing a generic function object. @param f integration function (any C++ callable object implementing operator()(double x); @param type integration type (adaptive, non-adaptive, etc..); @param absTol desired absolute tolerance. The algorithm will stop when either the absolute OR the relative tolerance are satisfied.; @param relTol desired relative tolerance; @param size maximum number of sub-intervals; @param rule Gauss-Kronrod integration rule (only for GSL ADAPTIVE type). NOTE: When no values are passed, the values used are taken from the default defined in ROOT::Math::IntegratorOneDimOptions. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:274,toler,tolerance,274,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,3,['toler'],['tolerance']
Availability,"/**; True if fit successful, otherwise false.; A fit is considered successful if the minimizer succeeded in finding the; minimum. It could happen that subsequent operations like error analysis (e.g. Minos); failed. In that case the status can be still true if the original minimization algorithm; succeeded in finding the minimum.; One can query in that case the minimizer return status using Status().; It is responsibility to the Minimizer class to tag a found minimum as valid or not; and to produce also a status code.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h:178,error,error,178,math/mathcore/inc/Fit/FitResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h,1,['error'],['error']
Availability,/**; \brief Perform a vector read/write operation on different objects.; \param map A `MultiObjectRWOperation_t` that describes read/write operations to perform.; \param cid The `daos_oclass_id_t` used to qualify OIDs.; \param fn Either `&RDaosObject::Fetch` (read) or `&RDaosObject::Update` (write).; \return 0 if the operation succeeded; a negative DAOS error number otherwise.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RDaos.hxx:356,error,error,356,tree/ntuple/v7/inc/ROOT/RDaos.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RDaos.hxx,1,['error'],['error']
Availability,/**; \brief Read data from a single object attribute key to the given buffer.; \param buffer The address of a buffer that has capacity for at least `length` bytes.; \param length Length of the buffer.; \param oid A 128-bit DAOS object identifier.; \param dkey The distribution key used for this operation.; \param akey The attribute key used for this operation.; \param cid An object class ID.; \return 0 if the operation succeeded; a negative DAOS error number otherwise.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RDaos.hxx:449,error,error,449,tree/ntuple/v7/inc/ROOT/RDaos.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RDaos.hxx,1,['error'],['error']
Availability,/**; \brief Write the given buffer to a single object attribute key.; \param buffer The address of the source buffer.; \param length Length of the buffer.; \param oid A 128-bit DAOS object identifier.; \param dkey The distribution key used for this operation.; \param akey The attribute key used for this operation.; \param cid An object class ID.; \return 0 if the operation succeeded; a negative DAOS error number otherwise.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RDaos.hxx:403,error,error,403,tree/ntuple/v7/inc/ROOT/RDaos.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RDaos.hxx,1,['error'],['error']
Availability,"/**; \class TFilePrefetch; \ingroup IO. The prefetching mechanism uses two classes (TFilePrefetch and; TFPBlock) to prefetch in advance a block of tree entries. There is; a thread which takes care of actually transferring the blocks and; making them available to the main requesting thread. Therefore,; the time spent by the main thread waiting for the data before; processing considerably decreases. Besides the prefetching; mechanisms there is also a local caching option which can be; enabled by the user. Both capabilities are disabled by default; and must be explicitly enabled by the user.; */; ////////////////////////////////////////////////////////////////////////////////; /// Constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFilePrefetch.cxx:250,avail,available,250,io/io/src/TFilePrefetch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFilePrefetch.cxx,1,['avail'],['available']
Availability,/**; add interface to set dynamically a new error definition; Re-implement this function if needed.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNBase.h:44,error,error,44,math/minuit2/inc/Minuit2/FCNBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNBase.h,1,['error'],['error']
Availability,/**; add multi-dim coordinate data with both error in coordinates and value; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:45,error,error,45,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,4,['error'],['error']
Availability,/**; add multi-dim coordinate data with only error in value; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:45,error,error,45,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,1,['error'],['error']
Availability,/**; add multi-dim coordinate data with only error in value; The class stores internally the inverse of the error in this case; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/BinData.cxx:45,error,error,45,math/mathcore/src/BinData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/BinData.cxx,2,['error'],['error']
Availability,/**; add one dim data with error in the coordinate (x) and asymmetric errors in the value (y); in this case store the y errors and not the inverse; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:27,error,error,27,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,6,['error'],"['error', 'errors']"
Availability,/**; add one dim data with error in the coordinate (x); in this case store the value (y) error and not the inverse; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:27,error,error,27,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,4,['error'],['error']
Availability,/**; add one dim data with no error in the coordinate (x); in this case store the inverse of the error in the value (y); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:30,error,error,30,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,4,['error'],['error']
Availability,/**; apply correction in the error matrix for the weights for likelihood fits; This method can be called only after a fit. The; passed function (loglw2) is a log-likelihood function implemented using the; sum of weight squared; When using FitConfig.SetWeightCorrection() this correction is applied; automatically when doing a likelihood fit (binned or unbinned); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:29,error,error,29,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['error'],['error']
Availability,/**; class to change GSL Error handler to use ROOT one.; It is used only when building the dictionary (G__DICTIONARY is defined); and not in the stand-alone version of the library.; In that case the default GSL error handler is used; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLError.cxx:25,Error,Error,25,math/mathmore/src/GSLError.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLError.cxx,2,"['Error', 'error']","['Error', 'error']"
Availability,/**; compute the total sum of the error square; (sum of weight square in case of a weighted data set); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:34,error,error,34,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,1,['error'],['error']
Availability,/**; constructor from external data for 2D with errors on coordinate and value; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:48,error,errors,48,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,2,['error'],['errors']
Availability,/**; constructor from external data for 3D with errors on coordinate and value; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:48,error,errors,48,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,2,['error'],['errors']
Availability,/**; constructor from options and range; default is 1D and value errors; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:65,error,errors,65,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,1,['error'],['errors']
Availability,/**; constructor from options and range; efault is 1D and value errors; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/BinData.cxx:64,error,errors,64,math/mathcore/src/BinData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/BinData.cxx,1,['error'],['errors']
Availability,"/**; declarations for functions which are not implemented by some compilers; */; /// log(1+x) with error cancelation when x is small",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Math.h:99,error,error,99,math/mathcore/inc/Math/Math.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Math.h,1,['error'],['error']
Availability,"/**; evaluate the series at a given point x to the given order n,; estimating both the series result and its absolute error.; The error estimate is made from the first neglected term in the series.; A pair containing result and error is returned; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/ChebyshevApprox.h:118,error,error,118,math/mathmore/inc/Math/ChebyshevApprox.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/ChebyshevApprox.h,3,['error'],['error']
Availability,"/**; find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum; The contour will be find for value of the function = Min + ErrorUp();; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx:161,Error,ErrorUp,161,math/mathcore/src/Minimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx,1,['Error'],['ErrorUp']
Availability,"/**; find the contour points (xi,xj) of the function for parameter i and j around the minimum; The contour will be find for value of the function = Min + ErrorUp();; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h:154,Error,ErrorUp,154,math/minuit/inc/TMinuitMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h,2,['Error'],['ErrorUp']
Availability,/**; flag to check if resulting errors are be normalized according to chi2/ndf; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h:32,error,errors,32,math/mathcore/inc/Fit/FitConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h,1,['error'],['errors']
Availability,/**; flag to control if data provides asymmetric errors on the value; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:49,error,errors,49,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,1,['error'],['errors']
Availability,/**; flag to control if data provides error on the coordinates; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:38,error,error,38,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,1,['error'],['error']
Availability,/**; generic constructor for GSL Integrator. @param type type of integration. The possible types are defined in the Integration::Type enumeration; @param rule Gauss-Kronrod rule. It is used only for ADAPTIVE::Integration types. The possible rules are defined in the Integration::GKRule enumeration; @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:330,Error,Error,330,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,2,['Error'],['Error']
Availability,"/**; get the minos error for parameter i, return false if Minos failed; A minimizaiton must be performed befre, return false if no minimization has been done; In case of Minos failed the status error is updated as following; status += 10 * minosStatus.; The Minos status of last Minos run can also be retrieved by calling MinosStatus(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h:19,error,error,19,math/minuit2/inc/Minuit2/Minuit2Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h,2,['error'],['error']
Availability,/**; method returning the data i-th contribution to the fit objective function; For example the residual for the least square functions or the pdf element for the; likelihood functions.; Estimating also the gradient of the data element if the passed pointer is not null; and the Hessian. The flag fullHessian is set when one needs to compute the full Hessian (not the approximated one); and should be used when the full second derivatives of the model functions are available; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/FitMethodFunction.h:466,avail,available,466,math/mathcore/inc/Math/FitMethodFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/FitMethodFunction.h,1,['avail'],['available']
Availability,"/**; method to perform the minimization.; Return false in case the minimization did not converge. In this case a; status code different than zero is set; (retrieved by the derived method Minimizer::Status() )"". status = 1 : Covariance was made pos defined; status = 2 : Hesse is invalid; status = 3 : Edm is above max; status = 4 : Reached call limit; status = 5 : Any other failure; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h:375,failure,failure,375,math/minuit2/inc/Minuit2/Minuit2Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h,1,['failure'],['failure']
Availability,"/**; minos error for variable i, return false if Minos failed or not supported; and the lower and upper errors are returned in errLow and errUp; An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx:11,error,error,11,math/mathcore/src/Minimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx,3,['error'],"['error', 'errors']"
Availability,/**; perform a full calculation of the Hessian matrix for error calculation; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx:58,error,error,58,math/mathcore/src/Minimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx,2,['error'],['error']
Availability,/**; perform a full calculation of the Hessian matrix for error calculation; If a valid minimum exists the calculation is done on the minimum point otherwise is performed; in the current set values of parameters; Status code of minimizer is updated according to the following convention (in case Hesse failed); status += 100*hesseStatus where hesse status is:; status = 1 : hesse failed; status = 2 : matrix inversion failed; status = 3 : matrix is not pos defined; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h:58,error,error,58,math/minuit2/inc/Minuit2/Minuit2Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h,1,['error'],['error']
Availability,/**; perform an error analysis on the result using MINOS; To be called only after fitting and when a minimizer supporting MINOS is used; otherwise an error (false) is returned.; The result will be appended in the fit result class; Optionally a vector of parameter indices can be passed for selecting; the parameters to analyse using FitConfig::SetMinosErrors; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:16,error,error,16,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,2,['error'],['error']
Availability,/**; perform an error analysis on the result using the Hessian; Errors are obtained from the inverse of the Hessian matrix; To be called only after fitting and when a minimizer supporting the Hessian calculations is used; otherwise an error (false) is returned.; A new FitResult with the Hessian result will be produced; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:16,error,error,16,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,3,"['Error', 'error']","['Errors', 'error']"
Availability,"/**; preallocate a data set with given size , dimension and error type (to get the full point size); If the data set already exists and it is having the compatible point size space for the new points; is created in the data sets, while if not compatible the old data are erased and new space of; new size is allocated.; (i.e if exists initialize is equivalent to a resize( NPoints() + maxpoints); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/BinData.cxx:60,error,error,60,math/mathcore/src/BinData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/BinData.cxx,1,['error'],['error']
Availability,"/**; retrieve in a single call a pointer to the coordinate data, value and inverse error for; the given fit point.; To be used only when type is kValueError or kNoError. In the last case the value 1 is returned; for the error.; */; // not threadsafe, to be replaced with never constructs!; // for example: just return std::array or std::vector, there's; // is going to be only minor overhead in c++11.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:83,error,error,83,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,2,['error'],['error']
Availability,/**; retrieve the errortype; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:18,error,errortype,18,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,1,['error'],['errortype']
Availability,/**; return covariance matrix elements; if the variable is fixed or const the value is zero; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h:141,error,errors,141,math/minuit2/inc/Minuit2/Minuit2Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h,1,['error'],['errors']
Availability,"/**; return diagonal elements of a matrix as a Vector.; It works only for squared matrices D1 == D2, otherwise it will produce a compile error; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h:137,error,error,137,math/smatrix/inc/Math/SMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h,1,['error'],['error']
Availability,/**; return the Error Status of the last Integral calculation; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:16,Error,Error,16,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,5,['Error'],['Error']
Availability,/**; return the error status of the last derivative calculation; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h:16,error,error,16,math/mathmore/inc/Math/Derivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h,1,['error'],['error']
Availability,/**; return the error status of the last integral calculation; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLDerivator.h:16,error,error,16,math/mathmore/src/GSLDerivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLDerivator.h,1,['error'],['error']
Availability,/**; return the estimate of the absolute Error of the last Integral calculation; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:41,Error,Error,41,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,5,['Error'],['Error']
Availability,/**; return the estimate of the absolute error of the last derivative calculation; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h:41,error,error,41,math/mathmore/inc/Math/Derivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h,2,['error'],['error']
Availability,"/**; return the lower Triangular block of the matrices (including the diagonal) as; a vector of sizes N = D1 * (D1 + 1)/2.; It works only for square matrices with D1==D2, otherwise it will produce a compile error; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h:207,error,error,207,math/smatrix/inc/Math/SMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h,1,['error'],['error']
Availability,/**; return the status of the covariance matrix; status = -1 : not available (inversion failed or Hesse failed); status = 0 : available but not positive defined; status = 1 : covariance only approximate; status = 2 : full matrix but forced pos def; status = 3 : full accurate matrix. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h:67,avail,available,67,math/minuit2/inc/Minuit2/Minuit2Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h,2,['avail'],['available']
Availability,"/**; return the upper Triangular block of the matrices (including the diagonal) as; a vector of sizes N = D1 * (D1 + 1)/2.; It works only for square matrices with D1==D2, otherwise it will produce a compile error; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h:207,error,error,207,math/smatrix/inc/Math/SMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h,1,['error'],['error']
Availability,/**; return true if the data set is weighted; We cannot compute ourselves because sometimes errors are filled with 1; instead of zero (as in ROOT::Fit::FillData ); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:92,error,errors,92,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,1,['error'],['errors']
Availability,/**; returns a single coordinate error component of a point.; This function is threadsafe in contrast to Coords(...); and can easily get vectorized by the compiler in loops; running over the ipoint-index.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:33,error,error,33,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,2,['error'],['error']
Availability,/**; scan function minimum for variable i. Variable and function must be set before using Scan; Return false if an error or if minimizer does not support this functionality; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx:115,error,error,115,math/mathcore/src/Minimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx,1,['error'],['error']
Availability,/**; set parameters for PLAIN method; */; //void SetParameters(const PlainParameters &p);; /**; returns the error sigma from the last iteration of the Vegas algorithm; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h:108,error,error,108,math/mathmore/inc/Math/GSLMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h,1,['error'],['error']
Availability,/**; set stream for log and error (not yet implemented); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h:28,error,error,28,math/unuran/inc/TUnuran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h,1,['error'],['error']
Availability,/**; set the desired absolute Error; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:30,Error,Error,30,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,5,['Error'],['Error']
Availability,/**; set the desired relative Error; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h:30,Error,Error,30,math/mathcore/inc/Math/VirtualIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h,1,['Error'],['Error']
Availability,"/**; set the function to be minimize the initial minimizer parameters,; step size and tolerance in the line search; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiMinimizer.h:86,toler,tolerance,86,math/mathmore/src/GSLMultiMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiMinimizer.h,1,['toler'],['tolerance']
Availability,/**; set the option to normalize the error on the result according to chi2/ndf; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h:37,error,error,37,math/mathcore/inc/Fit/FitConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h,1,['error'],['error']
Availability,"/**; static method to create the corresponding Minimizer given the string; Supported Minimizers types are:; Minuit (TMinuit), Minuit2, GSLMultiMin, GSLMultiFit, GSLSimAn, Linear, Fumili, Genetic; If no name is given use default values defined in ROOT::Math::MinimizerOptions; See also there for the possible options and algorithms available; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Factory.h:331,avail,available,331,math/mathcore/inc/Math/Factory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Factory.h,1,['avail'],['available']
Availability,"/**< 1: generate a 32-bits checksum using XXH64 algorithm at end of frame, for error detection */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:79,error,error,79,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,/**< considers RLE and uncompressed as errors */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h:39,error,errors,39,builtins/zstd/common/huf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h,2,['error'],['errors']
Availability,/**< extracts dictID; @return zero if error (not a valid dictionary) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:38,error,error,38,builtins/zstd/zdict.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h,1,['error'],['error']
Availability,/**< maximum compressed size (worst case) */; /* Error Management */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h:49,Error,Error,49,builtins/zstd/common/huf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h,1,['Error'],['Error']
Availability,"/**< provides error code string (useful for debugging) */; /* *** Advanced function *** */; /** HUF_compress2() :; * Same as HUF_compress(), but offers control over `maxSymbolValue` and `tableLog`.; * `maxSymbolValue` must be <= HUF_SYMBOLVALUE_MAX .; * `tableLog` must be `<= HUF_TABLELOG_MAX` . */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h:14,error,error,14,builtins/zstd/common/huf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h,1,['error'],['error']
Availability,"/**< recommended size for output buffer. Guarantee to successfully flush at least one complete compressed block. */; /* *****************************************************************************; * This following is a legacy streaming API.; * It can be replaced by ZSTD_CCtx_reset() and ZSTD_compressStream2().; * It is redundant, but remains fully supported.; * Advanced parameters and dictionary compression can only be used through the; * new API.; ******************************************************************************/; /*!; * Equivalent to:; *; * ZSTD_CCtx_reset(zcs, ZSTD_reset_session_only);; * ZSTD_CCtx_refCDict(zcs, NULL); // clear the dictionary (if any); * ZSTD_CCtx_setParameter(zcs, ZSTD_c_compressionLevel, compressionLevel);; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:323,redundant,redundant,323,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['redundant'],['redundant']
Availability,/**< tells if a return value is an error code */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h:35,error,error,35,builtins/zstd/common/huf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h,1,['error'],['error']
Availability,/**< tells if a return value is an error code */; /* --- advanced histogram functions --- */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/hist.h:35,error,error,35,builtins/zstd/compress/hist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/hist.h,1,['error'],['error']
Availability,"/**<; Let's now decompose FSE_decompress_usingDTable() into its unitary components.; You will decode FSE-encoded symbols from the bitStream,; and also any other bitFields you put in, **in reverse order**. You will need a few variables to track your bitStream. They are :. BIT_DStream_t DStream; // Stream context; FSE_DState_t DState; // State context. Multiple ones are possible; FSE_DTable* DTablePtr; // Decoding table, provided by FSE_buildDTable(). The first thing to do is to init the bitStream.; errorCode = BIT_initDStream(&DStream, srcBuffer, srcSize);. You should then retrieve your initial state(s); (in reverse flushing order if you have several ones) :; errorCode = FSE_initDState(&DState, &DStream, DTablePtr);. You can then decode your data, symbol after symbol.; For information the maximum number of bits read by FSE_decodeSymbol() is 'tableLog'.; Keep in mind that symbols are decoded in reverse order, like a LIFO stack (last in, first out).; unsigned char symbol = FSE_decodeSymbol(&DState, &DStream);. You can retrieve any bitfield you eventually stored into the bitStream (in reverse order); Note : maximum allowed nbBits is 25, for 32-bits compatibility; size_t bitField = BIT_readBits(&DStream, nbBits);. All above operations only read from local register (which size depends on size_t).; Refueling the register from memory is manually performed by the reload method.; endSignal = FSE_reloadDStream(&DStream);. BIT_reloadDStream() result tells if there is still some more data to read from DStream.; BIT_DStream_unfinished : there is still some data left into the DStream.; BIT_DStream_endOfBuffer : Dstream reached end of buffer. Its container may no longer be completely filled.; BIT_DStream_completed : Dstream reached its exact end, corresponding in general to decompression completed.; BIT_DStream_tooFar : Dstream went too far. Decompression result is corrupted. When reaching end of buffer (BIT_DStream_endOfBuffer), progress slowly, notably if you decode multiple symbo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:503,error,errorCode,503,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,2,['error'],['errorCode']
Availability,"/**<; These functions are inner components of FSE_compress_usingCTable().; They allow the creation of custom streams, mixing multiple tables and bit sources. A key property to keep in mind is that encoding and decoding are done **in reverse direction**.; So the first symbol you will encode is the last you will decode, like a LIFO stack. You will need a few variables to track your CStream. They are :. FSE_CTable ct; // Provided by FSE_buildCTable(); BIT_CStream_t bitStream; // bitStream tracking structure; FSE_CState_t state; // State tracking structure (can have several). The first thing to do is to init bitStream and state.; size_t errorCode = BIT_initCStream(&bitStream, dstBuffer, maxDstSize);; FSE_initCState(&state, ct);. Note that BIT_initCStream() can produce an error code, so its result should be tested, using FSE_isError();; You can then encode your input data, byte after byte.; FSE_encodeSymbol() outputs a maximum of 'tableLog' bits at a time.; Remember decoding will be done in reverse direction.; FSE_encodeByte(&bitStream, &state, symbol);. At any time, you can also add any bit sequence.; Note : maximum allowed nbBits is 25, for compatibility with 32-bits decoders; BIT_addBits(&bitStream, bitField, nbBits);. The above methods don't commit data to memory, they just store it into local register, for speed.; Local register size is 64-bits on 64-bits systems, 32-bits on 32-bits systems (size_t).; Writing data to memory is a manual operation, performed by the flushBits function.; BIT_flushBits(&bitStream);. Your last FSE encoding operation shall be to flush your last state value(s).; FSE_flushState(&bitStream, &state);. Finally, you must close the bitStream.; The function returns the size of CStream in bytes.; If data couldn't fit into dstBuffer, it will return a 0 ( == not compressible); If there is an error, it returns an errorCode (which can be tested using FSE_isError()).; size_t size = BIT_closeCStream(&bitStream);; */; /* ***********************************",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:641,error,errorCode,641,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,2,['error'],"['error', 'errorCode']"
Availability,/*+test-under-mask*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetTransformInfo.cpp:14,mask,mask,14,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetTransformInfo.cpp,1,['mask'],['mask']
Availability,"/*, deltaTime, maskActive */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:15,mask,maskActive,15,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,6,['mask'],['maskActive']
Availability,"/*, writeBuffer, readBuffer, deltaTime, maskActive */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:40,mask,maskActive,40,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['mask'],['maskActive']
Availability,"/*- Prototypes -*/; /**; * Constructs the suffix array of a given string.; * @param T [0..n-1] The input string.; * @param SA [0..n-1] The output array of suffixes.; * @param n The length of the given string.; * @param openMP enables OpenMP optimization.; * @return 0 if no error occurred, -1 or -2 otherwise.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/divsufsort.h:274,error,error,274,builtins/zstd/dictBuilder/divsufsort.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/divsufsort.h,1,['error'],['error']
Availability,"/*-***************************************************************************; * Streaming decompression - HowTo; *; * A ZSTD_DStream object is required to track streaming operations.; * Use ZSTD_createDStream() and ZSTD_freeDStream() to create/release resources.; * ZSTD_DStream objects can be re-used multiple times.; *; * Use ZSTD_initDStream() to start a new decompression operation.; * @return : recommended first input size; * Alternatively, use advanced API to set specific properties.; *; * Use ZSTD_decompressStream() repetitively to consume your input.; * The function will update both `pos` fields.; * If `input.pos < input.size`, some input has not been consumed.; * It's up to the caller to present again remaining data.; * The function tries to flush all data decoded immediately, respecting output buffer size.; * If `output.pos < output.size`, decoder has flushed everything it could.; * But if `output.pos == output.size`, there might be some data left within internal buffers.,; * In which case, call ZSTD_decompressStream() again to flush whatever remains in the buffer.; * Note : with no additional input provided, amount of data flushed is necessarily <= ZSTD_BLOCKSIZE_MAX.; * @return : 0 when a frame is completely decoded and fully flushed,; * or an error code, which can be tested using ZSTD_isError(),; * or any other value > 0, which means there is still some decoding or flushing to do to complete current frame :; * the return value is a suggested next input size (just a hint for better latency); * that will never request more than the remaining frame size.; * *******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:1275,error,error,1275,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"/*-**************************************************************; * bitStream encoding; ****************************************************************/; /*! BIT_initCStream() :; * `dstCapacity` must be > sizeof(size_t); * @return : 0 if success,; * otherwise an error code (can be tested using ERR_isError()) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h:265,error,error,265,builtins/zstd/common/bitstream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h,1,['error'],['error']
Availability,"/*-********************************************************; * bitStream decoding; **********************************************************/; /*! BIT_initDStream() :; * Initialize a BIT_DStream_t.; * `bitD` : a pointer to an already allocated BIT_DStream_t structure.; * `srcSize` must be the *exact* size of the bitStream, in bytes.; * @return : size of stream (== srcSize), or an errorCode if a problem is detected; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h:384,error,errorCode,384,builtins/zstd/common/bitstream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h,1,['error'],['errorCode']
Availability,"/*-*********************************************; * Error codes list; *-*********************************************; * Error codes _values_ are pinned down since v1.3.1 only.; * Therefore, don't rely on values if you may link to any version < v1.3.1.; *; * Only values < 100 are considered stable.; *; * note 1 : this API shall be used with static linking only.; * dynamic linking is not yet officially supported.; * note 2 : Prefer relying on the enum than on its value whenever possible; * This is the only supported way to use the error list < v1.3.1; * note 3 : ZSTD_isError() is always correct, whatever the library version.; **********************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd_errors.h:52,Error,Error,52,builtins/zstd/zstd_errors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd_errors.h,4,"['Error', 'down', 'error']","['Error', 'down', 'error']"
Availability,"/*-*****************************************; * FSE detailed API; ******************************************/; /*!; FSE_compress() does the following:; 1. count symbol occurrence from source[] into table count[] (see hist.h); 2. normalize counters so that sum(count[]) == Power_of_2 (2^tableLog); 3. save normalized counters to memory buffer using writeNCount(); 4. build encoding table 'CTable' from normalized counters; 5. encode the data stream using encoding table 'CTable'. FSE_decompress() does the following:; 1. read normalized counters with readNCount(); 2. build decoding table 'DTable' from normalized counters; 3. decode the data stream using decoding table 'DTable'. The following API allows targeting specific sub-functions for advanced tasks.; For example, it's possible to compress several blocks using the same 'CTable',; or to save and provide normalized distribution using external method.; */; /* *** COMPRESSION *** */; /*! FSE_optimalTableLog():; dynamically downsize 'tableLog' when conditions are met.; It saves CPU time, by using smaller tables, while preserving or even improving compression ratio.; @return : recommended tableLog (necessarily <= 'maxTableLog') */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:981,down,downsize,981,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['down'],['downsize']
Availability,/*-****************************************; * Error Strings; ******************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/error_private.h:47,Error,Error,47,builtins/zstd/common/error_private.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/error_private.h,1,['Error'],['Error']
Availability,/*-****************************************; * Error codes handling; ******************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/error_private.h:47,Error,Error,47,builtins/zstd/common/error_private.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/error_private.h,1,['Error'],['Error']
Availability,/*-****************************************; * ZSTD Error Management; ******************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_common.c:52,Error,Error,52,builtins/zstd/common/zstd_common.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_common.c,1,['Error'],['Error']
Availability,/*-************************************; * Error management; **************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:43,Error,Error,43,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['Error'],['Error']
Availability,"/*-*********************************; * Advanced compression functions; ***********************************/; /*! LZ4F_createCompressionContext() :; * The first thing to do is to create a compressionContext object, which will be used in all compression operations.; * This is achieved using LZ4F_createCompressionContext(), which takes as argument a version and an LZ4F_preferences_t structure.; * The version provided MUST be LZ4F_VERSION. It is intended to track potential incompatible differences between different binaries.; * The function will provide a pointer to an allocated LZ4F_compressionContext_t object.; * If the result LZ4F_errorCode_t is not OK_NoError, there was an error during context creation.; * Object can release its memory using LZ4F_freeCompressionContext();; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:683,error,error,683,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['error'],['error']
Availability,"/*---- unlikely / likely expressions -----------------------------------------*/; // These are meant to use in cases like:; // if (R__unlikely(expression)) { ... }; // in performance-critical sections. R__unlikely / R__likely provide hints to; // the compiler code generation to heavily optimize one side of a conditional,; // causing the other branch to have a heavy performance cost.; //; // It is best to use this for conditionals that test for rare error cases or; // backward compatibility code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RConfig.hxx:453,error,error,453,core/foundation/inc/ROOT/RConfig.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RConfig.hxx,1,['error'],['error']
Availability,"/*---------------------------------------------------------------------------*/; /* complementary error function */; /* For small x, erfc(x) = 1 - erf(x); otherwise rational */; /* approximations are computed. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephes.cxx:98,error,error,98,math/mathcore/src/SpecFuncCephes.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephes.cxx,1,['error'],['error']
Availability,"/*---------------------------------------------------------------------------*/; /* error function */; /* For 0 <= |x| < 1, erf(x) = x * P4(x**2)/Q5(x**2); otherwise */; /* erf(x) = 1 - erfc(x). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephes.cxx:84,error,error,84,math/mathcore/src/SpecFuncCephes.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephes.cxx,1,['error'],['error']
Availability,"/*---------------------------------------------------------------------------*/; /* implementation of the incomplete beta function */; /**; * DESCRIPTION:; *; * Returns incomplete beta integral of the arguments, evaluated; * from zero to x. The function is defined as; *; * x; * - -; * | (a+b) | | a-1 b-1; * ----------- | t (1-t) dt.; * - - | |; * | (a) | (b) -; * 0; *; * The domain of definition is 0 <= x <= 1. In this; * implementation a and b are restricted to positive values.; * The integral from x to 1 may be obtained by the symmetry; * relation; *; * 1 - incbet( a, b, x ) = incbet( b, a, 1-x ).; *; * The integral is evaluated by a continued fraction expansion; * or, when b*x is small, by a power series.; *; * ACCURACY:; *; * Tested at uniformly distributed random points (a,b,x) with a and b; * in ""domain"" and x between 0 and 1.; * Relative error; * arithmetic domain # trials peak rms; * IEEE 0,5 10000 6.9e-15 4.5e-16; * IEEE 0,85 250000 2.2e-13 1.7e-14; * IEEE 0,1000 30000 5.3e-12 6.3e-13; * IEEE 0,10000 250000 9.3e-11 7.1e-12; * IEEE 0,100000 10000 8.7e-10 4.8e-11; * Outputs smaller than the IEEE gradual underflow threshold; * were excluded from these statistics.; *; * ERROR MESSAGES:; * message condition value returned; * incbet domain x<0, x>1 0.0; * incbet underflow 0.0; *; * Cephes Math Library, Release 2.8: June, 2000; * Copyright 1984, 1995, 2000 by Stephen L. Moshier; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephes.cxx:857,error,error,857,math/mathcore/src/SpecFuncCephes.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephes.cxx,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,/*---------------------------------------------------------------------------*/; /*---------------------------------------------------------------------------*/; /* for evaluation of error function */; /*---------------------------------------------------------------------------*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephes.cxx:183,error,error,183,math/mathcore/src/SpecFuncCephes.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephes.cxx,1,['error'],['error']
Availability,"/*. if (fParent && !fParent->mk()) {; throw std::runtime_error(""mk failure"");; }. if (fComp) return *this;. if (o.InheritsFrom(""RooAbsArg"")) {; fComp = acquire(std::shared_ptr<TObject>(const_cast<TObject*>(&o),[](TObject* o){}));; std::dynamic_pointer_cast<RooAbsArg>(fComp)->setStringAttribute(""alias"",GetName());; }. if (fComp && fParent) {; fParent->incorporate(fComp);; }. return *this;; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooNode.cxx:67,failure,failure,67,roofit/xroofit/src/xRooNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooNode.cxx,1,['failure'],['failure']
Availability,"/*; # ext. || Name || type || Value || Error +/-. 0 || p0 || free || 32.04 || 9.611; 1 || p1 || free || 98.11 || 29.43; 2 || p2 || free || 39.15 || 11.75; 3 || p3 || free || 362.4 || 108.7; 4 || p4 || free || 0.06707 || 0.02012; 5 || p5 || free || 1.006 || 0.3019. upar.Add(0, ""p0"", 32.04, 9.611);; upar.Add(1, ""p1"", 98.11, 29.43);; upar.Add(2, ""p2"", 39.15, 11.75);; upar.Add(3, ""p3"", 362.4, 108.7);; upar.Add(4, ""p4"", 0.06707, 0.02012);; upar.Add(5, ""p5"", 1.006, 0.3019);; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/ReneTest.cxx:39,Error,Error,39,math/minuit2/test/MnSim/ReneTest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/ReneTest.cxx,1,['Error'],['Error']
Availability,"/*; * 64-bit optimized (albeit more confusing) version.; *; * Uses some properties of addition and multiplication to remove the mask:; *; * Let:; * a = input_hi.lo = (input_hi & 0x00000000FFFFFFFF); * b = input_hi.hi = (input_hi & 0xFFFFFFFF00000000); * c = XXH_PRIME32_2; *; * a + (b * c); * Inverse Property: x + y - x == y; * a + (b * (1 + c - 1)); * Distributive Property: x * (y + z) == (x * y) + (x * z); * a + (b * 1) + (b * (c - 1)); * Identity Property: x * 1 == x; * a + b + (b * (c - 1)); *; * Substitute a, b, and c:; * input_hi.hi + input_hi.lo + ((xxh_u64)input_hi.lo * (XXH_PRIME32_2 - 1)); *; * Since input_hi.hi + input_hi.lo == input_hi, we get this:; * input_hi + ((xxh_u64)input_hi.lo * (XXH_PRIME32_2 - 1)); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:128,mask,mask,128,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['mask'],['mask']
Availability,"/*; * Actual output of an error or trace message.; * Applications may override this method to send JPEG messages somewhere; * other than stderr.; *; * On Windows, printing to stderr is generally completely useless,; * so we provide optional code to produce an error-dialog popup.; * Most Windows applications will still prefer to override this routine,; * but if they don't, it'll do something at least marginally useful.; *; * NOTE: to use the library in an environment that doesn't support the; * C stdio library, you may have to delete the call to fprintf() entirely,; * not just not use this routine.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:26,error,error,26,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,2,['error'],"['error', 'error-dialog']"
Availability,/*; * Allocate workspace for Floyd-Steinberg errors.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:45,error,errors,45,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,1,['error'],['errors']
Availability,"/*; * An additional method that can be provided by data source modules is the; * resync_to_restart method for error recovery in the presence of RST markers.; * For the moment, this source module just uses the default resync method; * provided by the JPEG library. That method assumes that no backtracking; * is possible.; */; /*; * Terminate source --- called by jpeg_finish_decompress; * after all data has been read. Often a no-op.; *; * NB: *not* called by jpeg_abort or jpeg_destroy; surrounding; * application must deal with any cleanup that should happen even; * for error exit.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c:110,error,error,110,graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,3,"['error', 'recover']","['error', 'recovery']"
Availability,"/*; * Backing store (temporary file) management.; * Since jpeg_mem_available always promised the moon,; * this should never be called and we can just error out.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c:150,error,error,150,graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c,1,['error'],['error']
Availability,"/*; * Calculates a 64->128-bit long multiply.; *; * Uses __uint128_t and _umul128 if available, otherwise uses a scalar version.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:85,avail,available,85,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['avail'],['available']
Availability,"/*; * Check the upper and lower edge of ""regUp"", to make sure that the; * eUp->Org is above eLo, or eLo->Org is below eUp (depending on which; * origin is leftmost).; *; * The main purpose is to splice right-going edges with the same; * dest vertex and nearly identical slopes (ie. we can't distinguish; * the slopes numerically). However the splicing can also help us; * to recover from numerical errors. For example, suppose at one; * point we checked eUp and eLo, and decided that eUp->Org is barely; * above eLo. Then later, we split eLo into two edges (eg. from; * a splice operation like this one). This can change the result of; * our test so that now eUp->Org is incident to eLo, or barely below it.; * We must correct this condition to maintain the dictionary invariants.; *; * One possibility is to check these edges for intersection again; * (ie. CheckForIntersect). This is what we do if possible. However; * CheckForIntersect requires that tess->event lies between eUp and eLo,; * so that it has something to fall back on when the intersection; * calculation gives us an unusable answer. So, for those cases where; * we can't check for intersection, this routine fixes the problem; * by just splicing the offending vertex into the other edge.; * This is a guaranteed solution, no matter how degenerate things get.; * Basically this is a combinatorial solution to a numerical problem.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c:375,recover,recover,375,graf3d/eve7/glu/sweep.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c,2,"['error', 'recover']","['errors', 'recover']"
Availability,"/*; * Copyright (C) 1999-2002, 2006 Free Software Foundation, Inc.; * This file is part of the GNU LIBICONV Library.; *; * The GNU LIBICONV Library is free software; you can redistribute it; * and/or modify it under the terms of the GNU Library General Public; * License as published by the Free Software Foundation; either version 2; * of the License, or (at your option) any later version.; *; * The GNU LIBICONV Library is distributed in the hope that it will be; * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Library General Public License for more details.; *; * You should have received a copy of the GNU Library General Public; * License along with the GNU LIBICONV Library; see the file COPYING.LIB.; * If not, write to the Free Software Foundation, Inc., 51 Franklin Street,; * Fifth Floor, Boston, MA 02110-1301, USA.; */; /*; * BIG5-HKSCS:1999; */; /*; * BIG5-HKSCS:1999 can be downloaded from; * http://www.info.gov.hk/digital21/eng/hkscs/download.html; * http://www.info.gov.hk/digital21/eng/hkscs/index.html; *; * It extends BIG5 (without the rows 0xC6..0xC7) through the ranges; *; * 0x{88..8D}{40..7E,A1..FE} 641 characters; * 0x{8E..A0}{40..7E,A1..FE} 2898 characters; * 0x{C6..C8}{40..7E,A1..FE} 359 characters; * 0xF9{D6..FE} 41 characters; * 0x{FA..FE}{40..7E,A1..FE} 763 characters; *; * Note that some HKSCS characters are not contained in Unicode 3.2; * and are therefore best represented as sequences of Unicode characters:; * 0x8862 U+00CA U+0304 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND MACRON; * 0x8864 U+00CA U+030C LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND CARON; * 0x88A3 U+00EA U+0304 LATIN SMALL LETTER E WITH CIRCUMFLEX AND MACRON; * 0x88A5 U+00EA U+030C LATIN SMALL LETTER E WITH CIRCUMFLEX AND CARON; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/big5hkscs1999.h:987,down,downloaded,987,graf2d/win32gdk/gdk/src/iconv/big5hkscs1999.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/big5hkscs1999.h,2,['down'],"['download', 'downloaded']"
Availability,"/*; * Copyright (C) 1999-2002, 2006 Free Software Foundation, Inc.; * This file is part of the GNU LIBICONV Library.; *; * The GNU LIBICONV Library is free software; you can redistribute it; * and/or modify it under the terms of the GNU Library General Public; * License as published by the Free Software Foundation; either version 2; * of the License, or (at your option) any later version.; *; * The GNU LIBICONV Library is distributed in the hope that it will be; * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Library General Public License for more details.; *; * You should have received a copy of the GNU Library General Public; * License along with the GNU LIBICONV Library; see the file COPYING.LIB.; * If not, write to the Free Software Foundation, Inc., 51 Franklin Street,; * Fifth Floor, Boston, MA 02110-1301, USA.; */; /*; * BIG5-HKSCS:2001; */; /*; * BIG5-HKSCS:2001 can be downloaded from; * http://www.info.gov.hk/digital21/eng/hkscs/download.html; * http://www.info.gov.hk/digital21/eng/hkscs/index.html; *; * It extends BIG5-HKSCS:1999 through 116 characters.; *; * It extends BIG5 (without the rows 0xC6..0xC7) through the ranges; *; * 0x{88..8D}{40..7E,A1..FE} 757 characters; * 0x{8E..A0}{40..7E,A1..FE} 2898 characters; * 0x{C6..C8}{40..7E,A1..FE} 359 characters; * 0xF9{D6..FE} 41 characters; * 0x{FA..FE}{40..7E,A1..FE} 763 characters; *; * Note that some HKSCS characters are not contained in Unicode 3.2; * and are therefore best represented as sequences of Unicode characters:; * 0x8862 U+00CA U+0304 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND MACRON; * 0x8864 U+00CA U+030C LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND CARON; * 0x88A3 U+00EA U+0304 LATIN SMALL LETTER E WITH CIRCUMFLEX AND MACRON; * 0x88A5 U+00EA U+030C LATIN SMALL LETTER E WITH CIRCUMFLEX AND CARON; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/big5hkscs2001.h:987,down,downloaded,987,graf2d/win32gdk/gdk/src/iconv/big5hkscs2001.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/big5hkscs2001.h,2,['down'],"['download', 'downloaded']"
Availability,"/*; * Copyright (C) 1999-2002, 2006 Free Software Foundation, Inc.; * This file is part of the GNU LIBICONV Library.; *; * The GNU LIBICONV Library is free software; you can redistribute it; * and/or modify it under the terms of the GNU Library General Public; * License as published by the Free Software Foundation; either version 2; * of the License, or (at your option) any later version.; *; * The GNU LIBICONV Library is distributed in the hope that it will be; * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Library General Public License for more details.; *; * You should have received a copy of the GNU Library General Public; * License along with the GNU LIBICONV Library; see the file COPYING.LIB.; * If not, write to the Free Software Foundation, Inc., 51 Franklin Street,; * Fifth Floor, Boston, MA 02110-1301, USA.; */; /*; * BIG5-HKSCS:2004; */; /*; * BIG5-HKSCS:2004 can be downloaded from; * http://www.info.gov.hk/digital21/eng/hkscs/download.html; * http://www.info.gov.hk/digital21/eng/hkscs/index.html; *; * It extends BIG5-HKSCS:2001 through 123 characters.; *; * It extends BIG5 (without the rows 0xC6..0xC7) through the ranges; *; * 0x{87..8D}{40..7E,A1..FE} 880 characters; * 0x{8E..A0}{40..7E,A1..FE} 2898 characters; * 0x{C6..C8}{40..7E,A1..FE} 359 characters; * 0xF9{D6..FE} 41 characters; * 0x{FA..FE}{40..7E,A1..FE} 763 characters; *; * Note that some HKSCS characters are not contained in Unicode 3.2; * and are therefore best represented as sequences of Unicode characters:; * 0x8862 U+00CA U+0304 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND MACRON; * 0x8864 U+00CA U+030C LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND CARON; * 0x88A3 U+00EA U+0304 LATIN SMALL LETTER E WITH CIRCUMFLEX AND MACRON; * 0x88A5 U+00EA U+030C LATIN SMALL LETTER E WITH CIRCUMFLEX AND CARON; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/big5hkscs2004.h:987,down,downloaded,987,graf2d/win32gdk/gdk/src/iconv/big5hkscs2004.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/big5hkscs2004.h,2,['down'],"['download', 'downloaded']"
Availability,"/*; * Copyright (c) 2016-2020, Yann Collet, Facebook, Inc.; * All rights reserved.; *; * This source code is licensed under both the BSD-style license (found in the; * LICENSE file in the root directory of this source tree) and the GPLv2 (found; * in the COPYING file in the root directory of this source tree).; * You may select, at your option, one of the above-listed licenses.; */; /* The purpose of this file is to have a single list of error strings embedded in binary */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/error_private.c:442,error,error,442,builtins/zstd/common/error_private.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/error_private.c,1,['error'],['error']
Availability,/*; * Create the wrapped-around downsampling input buffer needed for context mode.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c:32,down,downsampling,32,graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,1,['down'],['downsampling']
Availability,"/*; * Decide whether to emit a trace or warning message.; * msg_level is one of:; * -1: recoverable corrupt-data warning, may want to abort.; * 0: important advisory messages (always display to user).; * 1: first level of tracing detail.; * 2,3,...: successively more detailed tracing messages.; * An application might override this method if it wanted to abort on warnings; * or change the policy about which messages to display.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:88,recover,recoverable,88,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,1,['recover'],['recoverable']
Availability,"/*; * Decompression startup: read start of JPEG datastream to see what's there.; * Need only initialize JPEG object and supply a data source before calling.; *; * This routine will read as far as the first SOS marker (ie, actual start of; * compressed data), and will save all tables and parameters in the JPEG; * object. It will also initialize the decompression parameters to default; * values, and finally return JPEG_HEADER_OK. On return, the application may; * adjust the decompression parameters and then call jpeg_start_decompress.; * (Or, if the application only wanted to determine the image parameters,; * the data need not be decompressed. In that case, call jpeg_abort or; * jpeg_destroy to release any temporary space.); * If an abbreviated (tables only) datastream is presented, the routine will; * return JPEG_HEADER_TABLES_ONLY upon reaching EOI. The application may then; * re-use the JPEG object to read the abbreviated image datastream(s).; * It is unnecessary (but OK) to call jpeg_abort in this case.; * The JPEG_SUSPENDED return code only occurs if the data source module; * requests suspension of the decompressor. In this case the application; * should load more source data and then re-call jpeg_read_header to resume; * processing.; * If a non-suspending data source is used and require_image is TRUE, then the; * return code need not be inspected since only JPEG_HEADER_OK is possible.; *; * This routine is now just a front end to jpeg_consume_input, with some; * extra error checking.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c:1498,error,error,1498,graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c,1,['error'],['error']
Availability,"/*; * Delete any degenerate faces with only two edges. WalkDirtyRegions(); * will catch almost all of these, but it won't catch degenerate faces; * produced by splice operations on already-processed edges.; * The two places this can happen are in FinishLeftRegions(), when; * we splice in a ""temporary"" edge produced by ConnectRightVertex(),; * and in CheckForLeftSplice(), where we splice already-processed; * edges to ensure that our dictionary invariants are not violated; * by numerical errors.; *; * In both these cases it is *very* dangerous to delete the offending; * edge at the time, since one of the routines further up the stack; * will sometimes be keeping a pointer to that edge.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c:491,error,errors,491,graf3d/eve7/glu/sweep.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c,1,['error'],['errors']
Availability,"/*; * Destruction of a JPEG object.; *; * Everything gets deallocated except the master jpeg_compress_struct itself; * and the error manager struct. Both of these are supplied by the application; * and must be freed, if necessary, by the application. (Often they are on; * the stack and so don't need to be freed anyway.); * Closing a data source or destination, if necessary, is the application's; * responsibility.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcomapi.c:127,error,error,127,graf2d/asimage/src/libAfterImage/libjpeg/jcomapi.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcomapi.c,1,['error'],['error']
Availability,/*; * Do downsampling for a whole row group (all components).; *; * In this version we simply downsample each component independently.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c:9,down,downsampling,9,graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,2,['down'],"['downsample', 'downsampling']"
Availability,"/*; * Downcast + upcast is usually better than masking on older compilers like; * GCC 4.2 (especially 32-bit ones), all without affecting newer compilers.; *; * The other method, (x & 0xFFFFFFFF) * (y & 0xFFFFFFFF), will AND both operands; * and perform a full 64x64 multiply -- entirely redundant on 32-bit.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:6,Down,Downcast,6,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,3,"['Down', 'mask', 'redundant']","['Downcast', 'masking', 'redundant']"
Availability,"/*; * Downsample pixel values of a single component.; * One row group is processed per call.; * This version handles arbitrary integral sampling ratios, without smoothing.; * Note that this version is not actually used for customary sampling ratios.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c:6,Down,Downsample,6,graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,1,['Down'],['Downsample']
Availability,"/*; * Downsample pixel values of a single component.; * This version handles the common case of 2:1 horizontal and 1:1 vertical,; * without smoothing.; *; * A note about the ""bias"" calculations: when rounding fractional values to; * integer, we do not want to always round 0.5 up to the next integer.; * If we did that, we'd introduce a noticeable bias towards larger values.; * Instead, this code is arranged so that 0.5 will be rounded up or down at; * alternate pixel locations (a simple ordered dither pattern).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c:6,Down,Downsample,6,graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,2,"['Down', 'down']","['Downsample', 'down']"
Availability,"/*; * Downsample pixel values of a single component.; * This version handles the special case of a full-size component,; * with smoothing. One row of context is required.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c:6,Down,Downsample,6,graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,1,['Down'],['Downsample']
Availability,"/*; * Downsample pixel values of a single component.; * This version handles the special case of a full-size component,; * without smoothing.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c:6,Down,Downsample,6,graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,1,['Down'],['Downsample']
Availability,"/*; * Downsample pixel values of a single component.; * This version handles the standard case of 2:1 horizontal and 2:1 vertical,; * with smoothing. One row of context is required.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c:6,Down,Downsample,6,graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,1,['Down'],['Downsample']
Availability,"/*; * Downsample pixel values of a single component.; * This version handles the standard case of 2:1 horizontal and 2:1 vertical,; * without smoothing.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c:6,Down,Downsample,6,graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,1,['Down'],['Downsample']
Availability,"/*; * Error exit handler: must not return to caller.; *; * Applications may override this if they want to get control back after; * an error. Typically one would longjmp somewhere instead of exiting.; * The setjmp buffer can be made a private field within an expanded error; * handler object. Note that the info needed to generate an error message; * is stored in the error object, so you can generate the message now or; * later, at your convenience.; * You should make sure that the JPEG object is cleaned up (with jpeg_abort; * or jpeg_destroy) at some point.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:6,Error,Error,6,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,5,"['Error', 'error']","['Error', 'error']"
Availability,/*; * Fill in the standard error-handling methods in a jpeg_error_mgr object.; * Typical call is:; *	struct jpeg_compress_struct cinfo;; *	struct jpeg_error_mgr err;; *; *	cinfo.err = jpeg_std_error(&err);; * after which the application may override some of the methods.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:27,error,error-handling,27,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,1,['error'],['error-handling']
Availability,"/*; * Fill the input buffer --- called whenever buffer is emptied.; *; * In typical applications, this should read fresh data into the buffer; * (ignoring the current state of next_input_byte & bytes_in_buffer),; * reset the pointer & count to the start of the buffer, and return TRUE; * indicating that the buffer has been reloaded. It is not necessary to; * fill the buffer entirely, only to obtain at least one more byte.; *; * There is no such thing as an EOF return. If the end of the file has been; * reached, the routine has a choice of ERREXIT() or inserting fake data into; * the buffer. In most cases, generating a warning message and inserting a; * fake EOI marker is the best course of action --- this will allow the; * decompressor to output however much of the image is there. However,; * the resulting error message is misleading if the real problem is an empty; * input file, so we handle that case specially.; *; * In applications that need to be able to suspend compression due to input; * not being available yet, a FALSE return indicates that no more data can be; * obtained right now, but more may be forthcoming later. In this situation,; * the decompressor will return to its caller (with an indication of the; * number of scanlines it has read, if any). The application should resume; * decompression after it has loaded more data into the input buffer. Note; * that there are substantial restrictions on the use of suspension --- see; * the documentation.; *; * When suspending, the decompressor will back up to a convenient restart point; * (typically the start of the current MCU). next_input_byte & bytes_in_buffer; * indicate where the restart point will be if the current call returns FALSE.; * Data beyond this point must be rescanned after resumption, so move it to; * the front of the buffer rather than discarding it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c:817,error,error,817,graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,2,"['avail', 'error']","['available', 'error']"
Availability,"/*; * For a Mach-O universal binary file, retrieves the object file corresponding; * to the given architecture if it is present as a slice.; *; * If NULL is returned, the \p ErrorMessage parameter is populated with the; * error's description. It is then the caller's responsibility to free this; * message by calling \c LLVMDisposeMessage.; *; * It is the responsiblity of the caller to free the returned object file by; * calling \c LLVMDisposeBinary.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Object.h:174,Error,ErrorMessage,174,interpreter/llvm-project/llvm/include/llvm-c/Object.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Object.h,2,"['Error', 'error']","['ErrorMessage', 'error']"
Availability,"/*; * For the simple (no-context-row) case, we just need to buffer one; * row group's worth of pixels for the downsampling step. At the bottom of; * the image, we pad to a full row group by replicating the last pixel row.; * The downsampler's last output row is then replicated if needed to pad; * out to a full iMCU row.; *; * When providing context rows, we must buffer three row groups' worth of; * pixels. Three row groups are physically allocated, but the row pointer; * arrays are made five row groups high, with the extra pointers above and; * below ""wrapping around"" to point to the last and first real row groups.; * This allows the downsampler to access the proper context rows.; * At the top and bottom of the image, we create dummy context rows by; * copying the first or last real pixel row. This copying could be avoided; * by pointer hacking as is done in jdmainct.c, but it doesn't seem worth the; * trouble on the compression side.; */; /* Private buffer controller object */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c:110,down,downsampling,110,graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,3,['down'],"['downsampler', 'downsampling']"
Availability,"/*; * Format a message string for the most recent JPEG error or message.; * The message is stored into buffer, which should be at least JMSG_LENGTH_MAX; * characters. Note that no '\n' character is added to the string.; * Few applications should need to override this method.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:55,error,error,55,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,1,['error'],['error']
Availability,"/*; * If an action is to be taken if `secretLen` condition is not respected,; * it should be done here.; * For now, it's a contract pre-condition.; * Adding a check and a branch here would cost performance at every hash.; * Also, note that function signature doesn't offer room to return an error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:291,error,error,291,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['error'],['error']
Availability,"/*; * In case of error, free allocated memory; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/X3DBuffer.c:17,error,error,17,graf3d/g3d/src/X3DBuffer.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/X3DBuffer.c,1,['error'],['error']
Availability,"/*; * Initial opening of a backing-store object. This must fill in the; * read/write/close pointers in the object. The read/write routines; * may take an error exit if the specified maximum file size is exceeded.; * (If jpeg_mem_available always returns a large value, this routine can; * just take an error exit.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h:154,error,error,154,graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,2,['error'],['error']
Availability,/*; * Initialization of a JPEG compression object.; * The error manager must already be set up (in case memory manager fails).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c:58,error,error,58,graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c,1,['error'],['error']
Availability,/*; * Initialization of a JPEG decompression object.; * The error manager must already be set up (in case memory manager fails).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c:60,error,error,60,graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c,1,['error'],['error']
Availability,/*; * Initialize for a downsampling pass.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c:23,down,downsampling,23,graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,1,['down'],['downsampling']
Availability,"/*; * Initialize the error-limiting transfer function (lookup table).; * The raw F-S error computation can potentially compute error values of up to; * +- MAXJSAMPLE. But we want the maximum correction applied to a pixel to be; * much less, otherwise obviously wrong pixels will be created. (Typical; * effects include weird fringes at color-area boundaries, isolated bright; * pixels in a dark area, etc.) The standard advice for avoiding this problem; * is to ensure that the ""corners"" of the color cube are allocated as output; * colors; then repeated errors in the same direction cannot cause cascading; * error buildup. However, that only prevents the error from getting; * completely out of hand; Aaron Giles reports that error limiting improves; * the results even with corner colors allocated.; * A simple clamping of the error values to about +- MAXJSAMPLE/8 works pretty; * well, but the smoother transfer function used below is even better. Thanks; * to Aaron Giles for this idea.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:21,error,error-limiting,21,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,8,['error'],"['error', 'error-limiting', 'errors']"
Availability,/*; * Inserts something like this into PDF; * BT; * /F1 16 Tf % Font name + size; * 16 TL % How many units down for next line in multiline text; * 0 g % color; * 28.35 813.54 Td % position; * (line one) Tj; * T* (line two) Tj; * T* (line three) Tj; * ET; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:107,down,down,107,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['down'],['down']
Availability,"/*; * Maximum number of components (color channels) allowed in JPEG image.; * To meet the letter of the JPEG spec, set this to 255. However, darn; * few applications need more than 4 channels (maybe 5 for CMYK + alpha; * mask). We recommend 10 as a reasonable compromise; use 4 if you are; * really short on memory. (Each allowed component costs a hundred or so; * bytes of storage, whether actually used in an image or not.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h:221,mask,mask,221,graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h,1,['mask'],['mask']
Availability,"/*; * Memory manager initialization.; * When this is called, only the error manager pointer is valid in cinfo!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:70,error,error,70,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['error'],['error']
Availability,"/*; * NEON's setup for vmlal_u32 is a little more complicated than it is on; * SSE2, AVX2, and VSX.; *; * While PMULUDQ and VMULEUW both perform a mask, VMLAL.U32 performs an upcast.; *; * To do the same operation, the 128-bit 'Q' register needs to be split into; * two 64-bit 'D' registers, performing this operation::; *; * [ a | b ]; * | '---------. .--------' |; * | x |; * | .---------' '--------. |; * [ a & 0xFFFFFFFF | b & 0xFFFFFFFF ],[ a >> 32 | b >> 32 ]; *; * Due to significant changes in aarch64, the fastest method for aarch64 is; * completely different than the fastest method for ARMv7-A.; *; * ARMv7-A treats D registers as unions overlaying Q registers, so modifying; * D11 will modify the high half of Q5. This is similar to how modifying AH; * will only affect bits 8-15 of AX on x86.; *; * VZIP takes two registers, and puts even lanes in one register and odd lanes; * in the other.; *; * On ARMv7-A, this strangely modifies both parameters in place instead of; * taking the usual 3-operand form.; *; * Therefore, if we want to do this, we can simply use a D-form VZIP.32 on the; * lower and upper halves of the Q register to end up with the high and low; * halves where we want - all in one instruction.; *; * vzip.32 d10, d11 @ d10 = { d10[0], d11[0] }; d11 = { d10[1], d11[1] }; *; * Unfortunately we need inline assembly for this: Instructions modifying two; * registers at once is not possible in GCC or Clang's IR, and they have to; * create a copy.; *; * aarch64 requires a different approach.; *; * In order to make it easier to write a decent compiler for aarch64, many; * quirks were removed, such as conditional execution.; *; * NEON was also affected by this.; *; * aarch64 cannot access the high bits of a Q-form register, and writes to a; * D-form register zero the high bits, similar to how writes to W-form scalar; * registers (or DWORD registers on x86_64) work.; *; * The formerly free vget_high intrinsics now require a vext (with a few; * exceptions); *; * Ad",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:147,mask,mask,147,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['mask'],['mask']
Availability,/*; * No error occurred; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXCompilationDatabase.h:9,error,error,9,interpreter/llvm-project/clang/include/clang-c/CXCompilationDatabase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXCompilationDatabase.h,1,['error'],['error']
Availability,"/*; * Note: Alternative: #undef all symbols (it's a pretty large list).; * Without #error: it compiles, but functions are actually not inlined.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:84,error,error,84,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['error'],['error']
Availability,"/*; * Once the bits are split out into bytes of UTF-8, this is a mask OR-ed; * into the first byte, depending on how many bytes follow. There are; * as many entries in this table as there are UTF-8 sequence types.; * (I.e., one byte sequence, two byte... etc.). Remember that sequencs; * for *legal* UTF-8 will be 4 or fewer bytes total.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp:65,mask,mask,65,interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp,1,['mask'],['mask']
Availability,/*; * Operators only available in version 0.11; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/inc/X11/extensions/render.h:21,avail,available,21,graf2d/x11/inc/X11/extensions/render.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/inc/X11/extensions/render.h,1,['avail'],['available']
Availability,/*; * Operators only available in version 0.2; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/inc/X11/extensions/render.h:21,avail,available,21,graf2d/x11/inc/X11/extensions/render.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/inc/X11/extensions/render.h,1,['avail'],['available']
Availability,"/*; * Policy-making subroutines for create_colormap and create_colorindex.; * These routines determine the colormap to be used. The rest of the module; * only assumes that the colormap is orthogonal.; *; * * select_ncolors decides how to divvy up the available colors; * among the components.; * * output_value defines the set of representative values for a component.; * * largest_input_value defines the mapping from input values to; * representative values for a component.; * Note that the latter two routines may impose different policies for; * different components, though this is not currently done.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:251,avail,available,251,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,1,['avail'],['available']
Availability,"/*; * Portable scalar method. Optimized for 32-bit and 64-bit ALUs.; *; * This is a fast and simple grade school multiply, which is shown below; * with base 10 arithmetic instead of base 0x100000000.; *; * 9 3 // D2 lhs = 93; * x 7 5 // D2 rhs = 75; * ----------; * 1 5 // D2 lo_lo = (93 % 10) * (75 % 10) = 15; * 4 5 | // D2 hi_lo = (93 / 10) * (75 % 10) = 45; * 2 1 | // D2 lo_hi = (93 % 10) * (75 / 10) = 21; * + 6 3 | | // D2 hi_hi = (93 / 10) * (75 / 10) = 63; * ---------; * 2 7 | // D2 cross = (15 / 10) + (45 % 10) + 21 = 27; * + 6 7 | | // D2 upper = (27 / 10) + (45 / 10) + 63 = 67; * ---------; * 6 9 7 5 // D4 res = (27 * 10) + (15 % 10) + (67 * 100) = 6975; *; * The reasons for adding the products like this are:; * 1. It avoids manual carry tracking. Just like how; * (9 * 9) + 9 + 9 = 99, the same applies with this for UINT64_MAX.; * This avoids a lot of complexity.; *; * 2. It hints for, and on Clang, compiles to, the powerful UMAAL; * instruction available in ARM's Digital Signal Processing extension; * in 32-bit ARMv6 and later, which is shown below:; *; * void UMAAL(xxh_u32 *RdLo, xxh_u32 *RdHi, xxh_u32 Rn, xxh_u32 Rm); * {; * xxh_u64 product = (xxh_u64)*RdLo * (xxh_u64)*RdHi + Rn + Rm;; * *RdLo = (xxh_u32)(product & 0xFFFFFFFF);; * *RdHi = (xxh_u32)(product >> 32);; * }; *; * This instruction was designed for efficient long multiplication, and; * allows this to be calculated in only 4 instructions at speeds; * comparable to some 64-bit ALUs.; *; * 3. It isn't terrible on other platforms. Usually this will be a couple; * of 32-bit ADD/ADCs.; */; /* First calculate all of the cross products. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:968,avail,available,968,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['avail'],['available']
Availability,"/*; * Potentially obnoxious hack:; *; * Back CrntSlot down past all contiguous {0, 0, 0} slots at the end; * of table 1. This is very useful if your display is limited to; * 16 colors.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gifalloc.c:54,down,down,54,graf2d/asimage/src/libAfterImage/libungif/gifalloc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gifalloc.c,1,['down'],['down']
Availability,"/*; * Prepare for output to a memory buffer.; * The caller may supply an own initial buffer with appropriate size.; * Otherwise, or when the actual data output exceeds the given size,; * the library adapts the buffer size as necessary.; * The standard library functions malloc/free are used for allocating; * larger memory, so the buffer is available to the application after; * finishing compression, and then the application is responsible for; * freeing the requested memory.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c:341,avail,available,341,graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c,1,['avail'],['available']
Availability,"/*; * Process some data in the simple no-context case.; *; * Preprocessor output data is counted in ""row groups"". A row group; * is defined to be v_samp_factor sample rows of each component.; * Downsampling will produce this much data from each max_v_samp_factor; * input rows.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c:194,Down,Downsampling,194,graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,1,['Down'],['Downsampling']
Availability,"/*; * Project: xRooFit; * Author:; * Will Buttinger, RAL 2022; *; * Copyright (c) 2022, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /** \class ROOT::Experimental::XRooFit::xRooBrowser; \ingroup xroofit. \image html RooBrowser.png width=50%. \brief A version of the TBrowser that can be used to interact with RooFit models and datasets. Also available under the ROOT::Experimental::RooBrowser alias. To get started with the xRooBrowser, open any ROOT file containing a workspace; and then create an instance of the xRooBrowser just like; creating an instance of a `TBrowser`. A window will be displayed with a navigable; tree structure on the left that lets you explore the content of the workspaces; present in the loaded file. Note that additional files, <b>including json workspace files</b>,; can be loaded through the `Browser --> Open` menu in the top left corner. The context menu for each node (access by right clicking on the node) in the tree structure can be used to get more; information about the node. In particular, the `Draw` command can be selected on many of the nodes that are part of a; statistical model, which will visualize that part of the model in the browser window. A number of options are available; for the `Draw` command, including (some options can be combined):. - ""e"" : calculate and visualize propagated model uncertainty; - ""auxratio"" : Draw a ratio auxiliary plot below the main plot; - ""auxsignif"" : Draw a significance auxiliary plot below the main plot; - ""pull"" : show panel of current parameter values, which can be dragged in order to change the values and visualize the; effect on the model (very experimental feature). Once a node has been drawn, the styling of subsequent draws can be controlled through `TStyle` objects; that will now appear in the `objects` folder in the workspace. A model can be",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooBrowser.cxx:499,avail,available,499,roofit/xroofit/src/xRooBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooBrowser.cxx,1,['avail'],['available']
Availability,"/*; * Read a restart marker, which is expected to appear next in the datastream;; * if the marker is not there, take appropriate recovery action.; * Returns FALSE if suspension is required.; *; * This is called by the entropy decoder after it has read an appropriate; * number of MCUs. cinfo->unread_marker may be nonzero if the entropy decoder; * has already read a marker from the data source. Under normal conditions; * cinfo->unread_marker will be reset to 0 before returning; if not reset,; * it holds a marker which the decoder will be unable to read past.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:129,recover,recovery,129,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['recover'],['recovery']
Availability,"/*; * Read some scanlines of data from the JPEG decompressor.; *; * The return value will be the number of lines actually read.; * This may be less than the number requested in several cases,; * including bottom of image, data source suspension, and operating; * modes that emit multiple scanlines at a time.; *; * Note: we warn about excess calls to jpeg_read_scanlines() since; * this likely signals an application programmer error. However,; * an oversize buffer (max_lines > scanlines remaining) is not an error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapistd.c:428,error,error,428,graf2d/asimage/src/libAfterImage/libjpeg/jdapistd.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapistd.c,2,['error'],['error']
Availability,"/*; * Reset error state variables at start of a new image.; * This is called during compression startup to reset trace/error; * processing to default state, without losing any application-specific; * method pointers. An application might possibly want to override; * this method if it has additional error processing state.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:12,error,error,12,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,3,['error'],['error']
Availability,"/*; * Several decompression processes need to range-limit values to the range; * 0..MAXJSAMPLE; the input value may fall somewhat outside this range; * due to noise introduced by quantization, roundoff error, etc. These; * processes are inner loops and need to be as fast as possible. On most; * machines, particularly CPUs with pipelines or instruction prefetch,; * a (subscript-check-less) C table lookup; *		x = sample_range_limit[x];; * is faster than explicit tests; *		if (x < 0) x = 0;; *		else if (x > MAXJSAMPLE) x = MAXJSAMPLE;; * These processes all use a common table prepared by the routine below.; *; * For most steps we can mathematically guarantee that the initial value; * of x is within MAXJSAMPLE+1 of the legal range, so a table running from; * -(MAXJSAMPLE+1) to 2*MAXJSAMPLE+1 is sufficient. But for the initial; * limiting step (just after the IDCT), a wildly out-of-range value is ; * possible if the input data is corrupt. To avoid any chance of indexing; * off the end of memory and getting a bad-pointer trap, we perform the; * post-IDCT limiting thus:; *		x = range_limit[x & MASK];; * where MASK is 2 bits wider than legal sample data, ie 10 bits for 8-bit; * samples. Under normal circumstances this is more than enough range and; * a correct output will be generated; with bogus input data the mask will; * cause wraparound, and we will safely generate a bogus-but-in-range output.; * For the post-IDCT step, we want to convert the data from signed to unsigned; * representation by adding CENTERJSAMPLE at the same time that we limit it.; * So the post-IDCT limiting table ends up looking like this:; * CENTERJSAMPLE,CENTERJSAMPLE+1,...,MAXJSAMPLE,; * MAXJSAMPLE (repeat 2*(MAXJSAMPLE+1)-CENTERJSAMPLE times),; * 0 (repeat 2*(MAXJSAMPLE+1)-CENTERJSAMPLE times),; * 0,1,...,CENTERJSAMPLE-1; * Negative inputs select values from the upper half of the table after; * masking.; *; * We can save some space by overlapping the start of the post-IDCT table; * with the simpler ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c:202,error,error,202,graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,1,['error'],['error']
Availability,/*; * Simple error-printing.; *; * Note that gBitsVerbose defaults to 0 and is a compilation-time change one; * must do to get an error message back.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c:13,error,error-printing,13,core/zip/src/Bits.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c,2,['error'],"['error', 'error-printing']"
Availability,/*; * Strip the file name down to what we want to see in the Makefile.; * It will have objprefix and objsuffix around it.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/main.c:26,down,down,26,misc/rmkdepend/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/main.c,1,['down'],['down']
Availability,"/*; * Structure for [] character-set representation. Character sets are; * done as bit vectors, grouped 8 to a byte vector for compactness.; * The individual set therefore has both a pointer to the byte vector; * and a mask to pick out the relevant bit of each byte. A hash code; * simplifies testing whether two sets could be identical.; *; * This will get trickier for multicharacter collating elements. As; * preliminary hooks for dealing with such things, we also carry along; * a string of multi-character elements, and decide the size of the; * vectors at run time.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regex2.h:219,mask,mask,219,interpreter/llvm-project/llvm/lib/Support/regex2.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regex2.h,1,['mask'],['mask']
Availability,/*; * Terminate destination --- called by jpeg_finish_compress; * after all data has been written. Usually needs to flush buffer.; *; * NB: *not* called by jpeg_abort or jpeg_destroy; surrounding; * application must deal with any cleanup that should happen even; * for error exit.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c:269,error,error,269,graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c,1,['error'],['error']
Availability,"/*; * The poop on this scaling stuff is as follows:; *; * Each 1-D DCT step produces outputs which are a factor of sqrt(N); * larger than the true DCT outputs. The final outputs are therefore; * a factor of N larger than desired; since N=8 this can be cured by; * a simple right shift at the end of the algorithm. The advantage of; * this arrangement is that we save two multiplications per 1-D DCT,; * because the y0 and y4 outputs need not be divided by sqrt(N).; * In the IJG code, this factor of 8 is removed by the quantization step; * (in jcdctmgr.c), NOT in this module.; *; * We have to do addition and subtraction of the integer inputs, which; * is no problem, and multiplication by fractional constants, which is; * a problem to do in integer arithmetic. We multiply all the constants; * by CONST_SCALE and convert them to integer constants (thus retaining; * CONST_BITS bits of precision in the constants). After doing a; * multiplication we have to divide the product by CONST_SCALE, with proper; * rounding, to produce the correct output. This division can be done; * cheaply as a right shift of CONST_BITS bits. We postpone shifting; * as long as possible so that partial sums can be added together with; * full fractional precision.; *; * The outputs of the first pass are scaled up by PASS1_BITS bits so that; * they are represented to better-than-integral precision. These outputs; * require BITS_IN_JSAMPLE + PASS1_BITS + 3 bits; this fits in a 16-bit word; * with the recommended scaling. (For 12-bit sample data, the intermediate; * array is INT32 anyway.); *; * To avoid overflow of the 32-bit intermediate results in pass 2, we must; * have BITS_IN_JSAMPLE + CONST_BITS + PASS1_BITS <= 26. Error analysis; * shows that the values given below are the most effective.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c:1712,Error,Error,1712,graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,1,['Error'],['Error']
Availability,"/*; * The poop on this scaling stuff is as follows:; *; * Each 1-D IDCT step produces outputs which are a factor of sqrt(N); * larger than the true IDCT outputs. The final outputs are therefore; * a factor of N larger than desired; since N=8 this can be cured by; * a simple right shift at the end of the algorithm. The advantage of; * this arrangement is that we save two multiplications per 1-D IDCT,; * because the y0 and y4 inputs need not be divided by sqrt(N).; *; * We have to do addition and subtraction of the integer inputs, which; * is no problem, and multiplication by fractional constants, which is; * a problem to do in integer arithmetic. We multiply all the constants; * by CONST_SCALE and convert them to integer constants (thus retaining; * CONST_BITS bits of precision in the constants). After doing a; * multiplication we have to divide the product by CONST_SCALE, with proper; * rounding, to produce the correct output. This division can be done; * cheaply as a right shift of CONST_BITS bits. We postpone shifting; * as long as possible so that partial sums can be added together with; * full fractional precision.; *; * The outputs of the first pass are scaled up by PASS1_BITS bits so that; * they are represented to better-than-integral precision. These outputs; * require BITS_IN_JSAMPLE + PASS1_BITS + 3 bits; this fits in a 16-bit word; * with the recommended scaling. (To scale up 12-bit sample data further, an; * intermediate INT32 array would be needed.); *; * To avoid overflow of the 32-bit intermediate results in pass 2, we must; * have BITS_IN_JSAMPLE + CONST_BITS + PASS1_BITS <= 26. Error analysis; * shows that the values given below are the most effective.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c:1622,Error,Error,1622,graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c,1,['Error'],['Error']
Availability,/*; * The result is a two-bit code such that a value more than 1 indicates; * a failure in the API just called:; *; * 0 - no warning or error; * 1 - warning; * 2 - error; * 3 - error preceded by warning; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:80,failure,failure,80,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,4,"['error', 'failure']","['error', 'failure']"
Availability,/*; * The tolerance for the curve test is put to 0.4 instead of 0.2 to take into; * account the small variations in the values of the likelihood which can occur; * in presence of a different treatment of floating point numbers.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/res/RooUnitTest.h:10,toler,tolerance,10,roofit/roofitcore/res/RooUnitTest.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/res/RooUnitTest.h,1,['toler'],['tolerance']
Availability,"/*; * These are the data structures needed to scan; * convert regions. Two different scan conversion; * methods are available -- the even-odd method, and; * the winding number method.; * The even-odd rule states that a point is inside; * the polygon if a ray drawn from that point in any; * direction will pass through an odd number of; * path segments.; * By the winding number rule, a point is decided; * to be inside the polygon if a ray drawn from that; * point in any direction passes through a different; * number of clockwise and counter-clockwise path; * segments.; *; * These data structures are adapted somewhat from; * the algorithm in (Foley/Van Dam) for scan converting; * polygons.; * The basic algorithm is to start at the top (smallest y); * of the polygon, stepping down to the bottom of; * the polygon by incrementing the y coordinate. We; * keep a list of edges which the current scanline crosses,; * sorted by x. This list is called the Active Edge Table (AET); * As we change the y-coordinate, we update each entry in; * in the active edge table to reflect the edges new xcoord.; * This list must be sorted at each scanline in case; * two edges intersect.; * We also keep a data structure known as the Edge Table (ET),; * which keeps track of all the edges which the current; * scanline has not yet reached. The ET is basically a; * list of ScanLineList structures containing a list of; * edges which are entered at a given scanline. There is one; * ScanLineList per scanline at which an edge is entered.; * When we enter a new edge, we move it from the ET to the AET.; *; * From the AET, we can implement the even-odd rule as in; * (Foley/Van Dam).; * The winding number rule is a little trickier. We also; * keep the EdgeTableEntries in the AET linked by the; * nextWETE (winding EdgeTableEntry) link. This allows; * the edges to be linked just as before for updating; * purposes, but only uses the edges linked by the nextWETE; * link as edges representing spans of the polygon",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPolyUtils.c:116,avail,available,116,graf2d/asimage/src/TASPolyUtils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPolyUtils.c,2,"['avail', 'down']","['available', 'down']"
Availability,"/*; * These routines take care of any system-dependent initialization and; * cleanup required. jpeg_mem_init will be called before anything is; * allocated (and, therefore, nothing in cinfo is of use except the error; * manager pointer). It should return a suitable default value for; * max_memory_to_use; this may subsequently be overridden by the surrounding; * application. (Note that max_memory_to_use is only important if; * jpeg_mem_available chooses to consult it ... no one else will.); * jpeg_mem_term may assume that all requested memory has been freed and that; * all opened backing-store objects have been closed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h:211,error,error,211,graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,1,['error'],['error']
Availability,"/*; * This API consists of small unitary functions, which must be inlined for best performance.; * Since link-time-optimization is not available for all compilers,; * these functions are defined into a .h to be included.; */; /*-****************************************; * Dependencies; ******************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h:135,avail,available,135,builtins/zstd/common/bitstream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h,1,['avail'],['available']
Availability,"/*; * This code is derived from (original license follows):; *; * This is an OpenSSL-compatible implementation of the RSA Data Security, Inc.; * MD5 Message-Digest Algorithm (RFC 1321).; *; * Homepage:; * http://openwall.info/wiki/people/solar/software/public-domain-source-code/md5; *; * Author:; * Alexander Peslyak, better known as Solar Designer <solar at openwall.com>; *; * This software was written by Alexander Peslyak in 2001. No copyright is; * claimed, and the software is hereby placed in the public domain.; * In case this attempt to disclaim copyright and place the software in the; * public domain is deemed null and void, then the software is; * Copyright (c) 2001 Alexander Peslyak and it is hereby released to the; * general public under the following terms:; *; * Redistribution and use in source and binary forms, with or without; * modification, are permitted.; *; * There's ABSOLUTELY NO WARRANTY, express or implied.; *; * (This is a heavily cut-down ""BSD license"".); *; * This differs from Colin Plumb's older public domain implementation in that; * no exactly 32-bit integer data type is required (any 32-bit or wider; * unsigned integer data type will do), there's no compile-time endianness; * configuration, and the function prototypes match OpenSSL's. No code from; * Colin Plumb's implementation has been reused; this comment merely compares; * the properties of the two independent implementations.; *; * The primary goals of this implementation are portability and ease of use.; * It is meant to be fast, but not as fast as possible. Some known; * optimizations are not included to reduce source code size and avoid; * compile-time configuration.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/MD5.cpp:969,down,down,969,interpreter/llvm-project/llvm/lib/Support/MD5.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/MD5.cpp,1,['down'],['down']
Availability,"/*; * This file contains a few macros to help track; * the edge of a filled object. The object is assumed; * to be filled in scanline order, and thus the; * algorithm used is an extension of Bresenham's line; * drawing algorithm which assumes that y is always the; * major axis.; * Since these pieces of code are the same for any filled shape,; * it is more convenient to gather the library in one; * place, but since these pieces of code are also in; * the inner loops of output primitives, procedure call; * overhead is out of the question.; * See the author for a derivation if needed.; */; /*; * In scan converting polygons, we want to choose those pixels; * which are inside the polygon. Thus, we add .5 to the starting; * x coordinate for both left and right edges. Now we choose the; * first pixel which is inside the pgon for the left edge and the; * first pixel which is outside the pgon for the right edge.; * Draw the left pixel, but not the right.; *; * How to add .5 to the starting x coordinate:; * If the edge is moving to the right, then subtract dy from the; * error term from the general form of the algorithm.; * If the edge is moving to the left, then add dy to the error term.; *; * The reason for the difference between edges moving to the left; * and edges moving to the right is simple: If an edge is moving; * to the right, then we want the algorithm to flip immediately.; * If it is moving to the left, then we don't want it to flip until; * we traverse an entire pixel.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPolyUtils.c:1078,error,error,1078,graf2d/asimage/src/TASPolyUtils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPolyUtils.c,2,['error'],['error']
Availability,"/*; * This is the default resync_to_restart method for data source managers; * to use if they don't have any better approach. Some data source managers; * may be able to back up, or may have additional knowledge about the data; * which permits a more intelligent recovery strategy; such managers would; * presumably supply their own resync method.; *; * read_restart_marker calls resync_to_restart if it finds a marker other than; * the restart marker it was expecting. (This code is *not* used unless; * a nonzero restart interval has been declared.) cinfo->unread_marker is; * the marker code actually found (might be anything, except 0 or FF).; * The desired restart marker number (0..7) is passed as a parameter.; * This routine is supposed to apply whatever error recovery strategy seems; * appropriate in order to position the input stream to the next data segment.; * Note that cinfo->unread_marker is treated as a marker appearing before; * the current data-source input point; usually it should be reset to zero; * before returning.; * Returns FALSE if suspension is required.; *; * This implementation is substantially constrained by wanting to treat the; * input as a data stream; this means we can't back up. Therefore, we have; * only the following actions to work with:; * 1. Simply discard the marker and let the entropy decoder resume at next; * byte of file.; * 2. Read forward until we find another marker, discarding intervening; * data. (In theory we could look ahead within the current bufferload,; * without having to discard data if we don't find the desired marker.; * This idea is not implemented here, in part because it makes behavior; * dependent on buffer size and chance buffer-boundary positions.); * 3. Leave the marker unread (by failing to zero cinfo->unread_marker).; * This will cause the entropy decoder to process an empty data segment,; * inserting dummy zeroes, and then we will reprocess the marker.; *; * #2 is appropriate if we think the desired marker lies ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:263,recover,recovery,263,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,3,"['error', 'recover']","['error', 'recovery']"
Availability,"/*; * This part deals with the special case where a unit wants to inline xxHash,; * but ""xxhash.h"" has previously been included without XXH_INLINE_ALL, such; * as part of some previously included *.h header file.; * Without further action, the new include would just be ignored,; * and functions would effectively _not_ be inlined (silent failure).; * The following macros solve this situation by prefixing all inlined names,; * avoiding naming collision with previous inclusions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:339,failure,failure,339,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['failure'],['failure']
Availability,/*; * This routine allows you to quickly take the shapes of all the child windows; * of a window and use their shapes as the shape mask for this window - useful; * for container windows that dont want to look like a big box; * ; * - Raster; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkwindow.h:131,mask,mask,131,graf2d/win32gdk/gdk/src/gdk/gdkwindow.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkwindow.h,1,['mask'],['mask']
Availability,"/*; * This routine computes the total memory space available for allocation.; * Here we always say, ""we got all you want bud!""; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c:51,avail,available,51,graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c,1,['avail'],['available']
Availability,"/*; * This routine computes the total space still available for allocation by; * jpeg_get_large. If more space than this is needed, backing store will be; * used. NOTE: any memory already allocated must not be counted.; *; * There is a minimum space requirement, corresponding to the minimum; * feasible buffer sizes; jmemmgr.c will request that much space even if; * jpeg_mem_available returns zero. The maximum space needed, enough to hold; * all working storage in memory, is also passed in case it is useful.; * Finally, the total space already allocated is passed. If no better; * method is available, cinfo->mem->max_memory_to_use - already_allocated; * is often a suitable calculation.; *; * It is OK for jpeg_mem_available to underestimate the space available; * (that'll just lead to more backing-store access than is really necessary).; * However, an overestimate will lead to failure. Hence it's wise to subtract; * a slop factor from the true available space. 5% should be enough.; *; * On machines with lots of virtual memory, any large constant may be returned.; * Conversely, zero may be returned to always use the minimum amount of memory.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h:50,avail,available,50,graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,5,"['avail', 'failure']","['available', 'failure']"
Availability,"/*; * This test reproduces a particular issue happening in analysis logic; * including both systematic variations and filters, with the order; *; * 1. Some call to Vary; * 2. Filter depending on the first Vary; * 3. Another Vary that depends on the Filter; *; * The logic that reproduces the problem is shown in the above function; * `dataframe_cloning_vary_with_filters_analysis`. In particular, the; * lambda used in the Vary call (3) calls ROOT::VecOps::Take(vec, 4),; * thus only works if `vec` has at least size `4`.; *; * In a previous implementation of cloning `RVariedAction`, the cloned action; * was connected to the wrong upstream filter (in fact, it was using a varied; * filter from the original action as if it was the nominal filter). This would; * then pass to the lambda used in the downstream Vary call (3) a vector; * `jet_pt` from which only 3 entries pass `jet_pt_mask`, eventually producing; * an error when reaching the `Take(jet_pt[jet_pt_mask], 4)` call.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/dataframe_cloning.cxx:800,down,downstream,800,tree/dataframe/test/dataframe_cloning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/dataframe_cloning.cxx,2,"['down', 'error']","['downstream', 'error']"
Availability,"/*; * UGLY HACK:; * This inline assembly hack forces acc into a normal register. This is the; * only thing that prevents GCC and Clang from autovectorizing the XXH32; * loop (pragmas and attributes don't work for some resason) without globally; * disabling SSE4.1.; *; * The reason we want to avoid vectorization is because despite working on; * 4 integers at a time, there are multiple factors slowing XXH32 down on; * SSE4:; * - There's a ridiculous amount of lag from pmulld (10 cycles of latency on; * newer chips!) making it slightly slower to multiply four integers at; * once compared to four integers independently. Even when pmulld was; * fastest, Sandy/Ivy Bridge, it is still not worth it to go into SSE; * just to multiply unless doing a long operation.; *; * - Four instructions are required to rotate,; * movqda tmp, v // not required with VEX encoding; * pslld tmp, 13 // tmp <<= 13; * psrld v, 19 // x >>= 19; * por v, tmp // x |= tmp; * compared to one for scalar:; * roll v, 13 // reliably fast across the board; * shldl v, v, 13 // Sandy Bridge and later prefer this for some reason; *; * - Instruction level parallelism is actually more beneficial here because; * the SIMD actually serializes this operation: While v1 is rotating, v2; * can load data, while v3 can multiply. SSE forces them to operate; * together.; *; * How this hack works:; * __asm__("""" // Declare an assembly block but don't declare any instructions; * : // However, as an Input/Output Operand,; * ""+r"" // constrain a read/write operand (+) as a general purpose register (r).; * (acc) // and set acc as the operand; * );; *; * Because of the 'r', the compiler has promised that seed will be in a; * general purpose register and the '+' says that it will be 'read/write',; * so it has to assume it has changed. It is like volatile without all the; * loads and stores.; *; * Since the argument has to be in a normal register (not an SSE register),; * each time XXH32_round is called, it is impossible to vectorize",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:409,down,down,409,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['down'],['down']
Availability,"/*; * VDT headers for RooFit. Since RooFit cannot directly depend on VDT (it might not be available),; * this layer can be used to switch between different implementations.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooVDTHeaders.h:90,avail,available,90,roofit/batchcompute/src/RooVDTHeaders.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooVDTHeaders.h,1,['avail'],['available']
Availability,"/*; * We are given a vertex with one or more left-going edges. All affected; * edges should be in the edge dictionary. Starting at regFirst->eUp,; * we walk down deleting all regions where both edges have the same; * origin vOrg. At the same time we copy the ""inside"" flag from the; * active region to the face, since at this point each face will belong; * to at most one region (this was not necessarily true until this point; * in the sweep). The walk stops at the region above regLast; if regLast; * is NULL we walk as far as possible.	At the same time we relink the; * mesh if necessary, so that the ordering of edges around vOrg is the; * same as in the dictionary.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c:157,down,down,157,graf3d/eve7/glu/sweep.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c,1,['down'],['down']
Availability,"/*; * We need the NULL macro and size_t typedef.; * On an ANSI-conforming system it is sufficient to include <stddef.h>.; * Otherwise, we get them from <stdlib.h> or <stdio.h>; we may have to; * pull in <sys/types.h> as well.; * Note that the core JPEG library does not require <stdio.h>;; * only the default error handler and data source/destination modules do.; * But we must pull it in because of the references to FILE in jpeglib.h.; * You can remove those references if you want to compile without <stdio.h>.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jinclude.h:309,error,error,309,graf2d/asimage/src/libAfterImage/libjpeg/jinclude.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jinclude.h,1,['error'],['error']
Availability,"/*; * Write frame header.; * This consists of DQT and SOFn markers, and a conditional pseudo SOS marker.; * Note that we do not emit the SOF until we have emitted the DQT(s).; * This avoids compatibility problems with incorrect implementations that; * try to error-check the quant table numbers as soon as they see the SOF.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c:259,error,error-check,259,graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c,1,['error'],['error-check']
Availability,"/*; * Write some scanlines of data to the JPEG compressor.; *; * The return value will be the number of lines actually written.; * This should be less than the supplied num_lines only in case that; * the data destination module has requested suspension of the compressor,; * or if more than image_height scanlines are passed in.; *; * Note: we warn about excess calls to jpeg_write_scanlines() since; * this likely signals an application programmer error. However,; * excess scanlines passed in the last valid call are *silently* ignored,; * so that the application need not adjust num_lines for end-of-image; * when using a multiple-scanline buffer.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapistd.c:449,error,error,449,graf2d/asimage/src/libAfterImage/libjpeg/jcapistd.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapistd.c,1,['error'],['error']
Availability,"/*; * \brief Build a likelihood from a pdf + dataset, optionally with a subsidiary likelihood component.; *; * This function analyzes the pdf and automatically constructs the proper likelihood, built up from the available; * RooAbsL subclasses. In essence, this can give 8 conceptually different combinations, based on three questions:; * 1. Is it a simultaneous pdf?; * 2. Is the pdf binned?; * 3. Does the pdf have subsidiary terms?; * If questions 1 and 3 are answered negatively, this function will either return a RooBinnedL or RooUnbinnedL. In all; * other cases it returns a RooSumL, which will contain RooBinnedL and/or RooUnbinnedL component(s) and possibly a; * RooSubsidiaryL component with constraint terms.; *; * \return A unique pointer to a RooSubsidiaryL that contains all terms in; * the pdf that can be calculated separately from the other components in the full likelihood.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:212,avail,available,212,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,1,['avail'],['available']
Availability,"/*; * a single color is specified as 100% transparent (0),; * so we set trns to use a /Mask with that index; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:87,Mask,Mask,87,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Mask'],['Mask']
Availability,"/*; * int xxx_mbtowc (conv_t conv, ucs4_t *pwc, unsigned char const *s, int n); * converts the byte sequence starting at s to a wide character. Up to n bytes; * are available at s. n is >= 1.; * Result is number of bytes consumed (if a wide character was read),; * or -1 if invalid, or -2 if n too small, or -2-(number of bytes consumed); * if only a shift sequence was read.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/converters.h:165,avail,available,165,graf2d/win32gdk/gdk/src/iconv/converters.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/converters.h,1,['avail'],['available']
Availability,"/*; * jcmainct.c; *; * Copyright (C) 1994-1996, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains the main buffer controller for compression.; * The main buffer lies between the pre-processor and the JPEG; * compressor proper; it holds downsampled data in the JPEG colorspace.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmainct.c:367,down,downsampled,367,graf2d/asimage/src/libAfterImage/libjpeg/jcmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmainct.c,1,['down'],['downsampled']
Availability,"/*; * jcprepct.c; *; * Copyright (C) 1994-1996, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains the compression preprocessing controller.; * This controller manages the color conversion, downsampling,; * and edge expansion steps.; *; * Most of the complexity here is associated with buffering input rows; * as required by the downsampler. See the comments at the head of; * jcsample.c for the downsampler's needs.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c:320,down,downsampling,320,graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,3,['down'],"['downsampler', 'downsampling']"
Availability,"/*; * jcsample.c; *; * Copyright (C) 1991-1996, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains downsampling routines.; *; * Downsampling input data is counted in ""row groups"". A row group; * is defined to be max_v_samp_factor pixel rows of each component,; * from which the downsampler produces v_samp_factor sample rows.; * A single row group is processed in each call to the downsampler module.; *; * The downsampler is responsible for edge-expansion of its output data; * to fill an integral number of DCT blocks horizontally. The source buffer; * may be modified if it is helpful for this purpose (the source buffer is; * allocated wide enough to correspond to the desired output width).; * The caller (the prep controller) is responsible for vertical padding.; *; * The downsampler may request ""context rows"" by setting need_context_rows; * during startup. In this case, the input arrays will contain at least; * one row group's worth of pixels above and below the passed-in data;; * the caller will create dummy rows at image top and bottom by replicating; * the first or last real pixel row.; *; * An excellent reference for image resampling is; * Digital Image Warping, George Wolberg, 1990.; * Pub. by IEEE Computer Society Press, Los Alamitos, CA. ISBN 0-8186-8944-7.; *; * The downsampling algorithm used here is a simple average of the source; * pixels covered by the output pixel. The hi-falutin sampling literature; * refers to this as a ""box filter"". In general the characteristics of a box; * filter are not very good, but for the specific cases we normally use (1:1; * and 2:1 ratios) the box is equivalent to a ""triangle filter"" which is not; * nearly so bad. If you intend to use other sampling ratios, you'd be well; * advised to improve this code.; *; * A simple input-smoothing capability is provided. This is mainly intended; * for cleaning up ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c:229,down,downsampling,229,graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,6,"['Down', 'down']","['Downsampling', 'downsampler', 'downsampling']"
Availability,"/*; * jdmainct.c; *; * Copyright (C) 1994-1996, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains the main buffer controller for decompression.; * The main buffer lies between the JPEG decompressor proper and the; * post-processor; it holds downsampled data in the JPEG colorspace.; *; * Note that this code is bypassed in raw-data mode, since the application; * supplies the equivalent of the main buffer in that case.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c:372,down,downsampled,372,graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,1,['down'],['downsampled']
Availability,"/*; * jdmarker.c; *; * Copyright (C) 1991-1998, Thomas G. Lane.; * Modified 2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains routines to decode JPEG datastream markers.; * Most of the complexity arises from our desire to support input; * suspension: if not all of the data for a marker is available,; * we must exit back to the application. On resumption, we reprocess; * the marker.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:431,avail,available,431,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['avail'],['available']
Availability,"/*; * jerror.c; *; * Copyright (C) 1991-1998, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains simple error-reporting and trace-message routines.; * These are suitable for Unix-like systems and others where writing to; * stderr is the right thing to do. Many applications will want to replace; * some or all of these routines.; *; * If you define USE_WINDOWS_MESSAGEBOX in jconfig.h or in the makefile,; * you get a Windows-specific hack to display error messages in a dialog box.; * It ain't much, but it beats dropping error messages into the bit bucket,; * which is what happens to output to stderr under most Windows C compilers.; *; * These routines are used by both the compression and decompression code.; */; /* this is not a core library module, so it doesn't define JPEG_INTERNALS */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:234,error,error-reporting,234,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,3,['error'],"['error', 'error-reporting']"
Availability,"/*; * jerror.h; *; * Copyright (C) 1994-1997, Thomas G. Lane.; * Modified 1997-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file defines the error and message codes for the JPEG library.; * Edit this file to add new codes, or to translate the message strings to; * some other language.; * A set of error-reporting macros are defined too. Some applications using; * the JPEG library may wish to include this file to get the error codes; * and/or the macros.; */; /*; * To define the enum list of message codes, include this file without; * defining macro JMESSAGE. To create a message string table, include it; * again with a suitable JMESSAGE definition (see jerror.c for an example).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.h:273,error,error,273,graf2d/asimage/src/libAfterImage/libjpeg/jerror.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.h,3,['error'],"['error', 'error-reporting']"
Availability,"/*; * jfdctflt.c; *; * Copyright (C) 1994-1996, Thomas G. Lane.; * Modified 2003-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains a floating-point implementation of the; * forward DCT (Discrete Cosine Transform).; *; * This implementation should be more accurate than either of the integer; * DCT implementations. However, it may not give the same results on all; * machines because of differences in roundoff behavior. Speed will depend; * on the hardware's floating point capacity.; *; * A 2-D DCT can be done by 1-D DCT on each row followed by 1-D DCT; * on each column. Direct algorithms are also available, but they are; * much more complex and seem not to be any faster when reduced to code.; *; * This implementation is based on Arai, Agui, and Nakajima's algorithm for; * scaled DCT. Their original paper (Trans. IEICE E-71(11):1095) is in; * Japanese, but the algorithm is described in the Pennebaker & Mitchell; * JPEG textbook (see REFERENCES section in file README). The following code; * is based directly on figure 4-8 in P&M.; * While an 8-point DCT cannot be done in less than 11 multiplies, it is; * possible to arrange the computation so that many of the multiplies are; * simple scalings of the final outputs. These multiplies can then be; * folded into the multiplications or divisions by the JPEG quantization; * table entries. The AA&N method leaves only 5 multiplies and 29 adds; * to be done in the DCT itself.; * The primary disadvantage of this method is that with a fixed-point; * implementation, accuracy is lost due to imprecise representation of the; * scaled quantization values. However, that problem does not arise if; * we use floating point arithmetic.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctflt.c:743,avail,available,743,graf2d/asimage/src/libAfterImage/libjpeg/jfdctflt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctflt.c,1,['avail'],['available']
Availability,"/*; * jfdctfst.c; *; * Copyright (C) 1994-1996, Thomas G. Lane.; * Modified 2003-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains a fast, not so accurate integer implementation of the; * forward DCT (Discrete Cosine Transform).; *; * A 2-D DCT can be done by 1-D DCT on each row followed by 1-D DCT; * on each column. Direct algorithms are also available, but they are; * much more complex and seem not to be any faster when reduced to code.; *; * This implementation is based on Arai, Agui, and Nakajima's algorithm for; * scaled DCT. Their original paper (Trans. IEICE E-71(11):1095) is in; * Japanese, but the algorithm is described in the Pennebaker & Mitchell; * JPEG textbook (see REFERENCES section in file README). The following code; * is based directly on figure 4-8 in P&M.; * While an 8-point DCT cannot be done in less than 11 multiplies, it is; * possible to arrange the computation so that many of the multiplies are; * simple scalings of the final outputs. These multiplies can then be; * folded into the multiplications or divisions by the JPEG quantization; * table entries. The AA&N method leaves only 5 multiplies and 29 adds; * to be done in the DCT itself.; * The primary disadvantage of this method is that with fixed-point math,; * accuracy is lost due to imprecise representation of the scaled; * quantization values. The smaller the quantization table entry, the less; * precise the scaled value, so this implementation does worse with high-; * quality-setting files than with low-quality ones.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctfst.c:487,avail,available,487,graf2d/asimage/src/libAfterImage/libjpeg/jfdctfst.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctfst.c,1,['avail'],['available']
Availability,"/*; * jfdctint.c; *; * Copyright (C) 1991-1996, Thomas G. Lane.; * Modification developed 2003-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains a slow-but-accurate integer implementation of the; * forward DCT (Discrete Cosine Transform).; *; * A 2-D DCT can be done by 1-D DCT on each row followed by 1-D DCT; * on each column. Direct algorithms are also available, but they are; * much more complex and seem not to be any faster when reduced to code.; *; * This implementation is based on an algorithm described in; * C. Loeffler, A. Ligtenberg and G. Moschytz, ""Practical Fast 1-D DCT; * Algorithms with 11 Multiplications"", Proc. Int'l. Conf. on Acoustics,; * Speech, and Signal Processing 1989 (ICASSP '89), pp. 988-991.; * The primary algorithm described there uses 11 multiplies and 29 adds.; * We use their alternate method with 12 multiplies and 32 adds.; * The advantage of this method is that no data path contains more than one; * multiplication; this allows a very simple and accurate implementation in; * scaled fixed-point arithmetic, with a minimal number of shifts.; *; * We also provide FDCT routines with various input sample block sizes for; * direct resolution reduction or enlargement and for direct resolving the; * common 2x1 and 1x2 subsampling cases without additional resampling: NxN; * (N=1...16), 2NxN, and Nx2N (N=1...8) pixels for one 8x8 output DCT block.; *; * For N<8 we fill the remaining block coefficients with zero.; * For N>8 we apply a partial N-point FDCT on the input samples, computing; * just the lower 8 frequency coefficients and discarding the rest.; *; * We must scale the output coefficients of the N-point FDCT appropriately; * to the standard 8-point FDCT level by 8/N per 1-D pass. This scaling; * is folded into the constant multipliers (pass 2) and/or final/initial; * shifting.; *; * CAUTION: We rely on t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c:497,avail,available,497,graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,1,['avail'],['available']
Availability,"/*; * jidctflt.c; *; * Copyright (C) 1994-1998, Thomas G. Lane.; * Modified 2010 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains a floating-point implementation of the; * inverse DCT (Discrete Cosine Transform). In the IJG code, this routine; * must also perform dequantization of the input coefficients.; *; * This implementation should be more accurate than either of the integer; * IDCT implementations. However, it may not give the same results on all; * machines because of differences in roundoff behavior. Speed will depend; * on the hardware's floating point capacity.; *; * A 2-D IDCT can be done by 1-D IDCT on each column followed by 1-D IDCT; * on each row (or vice versa, but it's more convenient to emit a row at; * a time). Direct algorithms are also available, but they are much more; * complex and seem not to be any faster when reduced to code.; *; * This implementation is based on Arai, Agui, and Nakajima's algorithm for; * scaled DCT. Their original paper (Trans. IEICE E-71(11):1095) is in; * Japanese, but the algorithm is described in the Pennebaker & Mitchell; * JPEG textbook (see REFERENCES section in file README). The following code; * is based directly on figure 4-8 in P&M.; * While an 8-point DCT cannot be done in less than 11 multiplies, it is; * possible to arrange the computation so that many of the multiplies are; * simple scalings of the final outputs. These multiplies can then be; * folded into the multiplications or divisions by the JPEG quantization; * table entries. The AA&N method leaves only 5 multiplies and 29 adds; * to be done in the DCT itself.; * The primary disadvantage of this method is that with a fixed-point; * implementation, accuracy is lost due to imprecise representation of the; * scaled quantization values. However, that problem does not arise if; * we use floating point arithmetic.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctflt.c:904,avail,available,904,graf2d/asimage/src/libAfterImage/libjpeg/jidctflt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctflt.c,1,['avail'],['available']
Availability,"/*; * jidctfst.c; *; * Copyright (C) 1994-1998, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains a fast, not so accurate integer implementation of the; * inverse DCT (Discrete Cosine Transform). In the IJG code, this routine; * must also perform dequantization of the input coefficients.; *; * A 2-D IDCT can be done by 1-D IDCT on each column followed by 1-D IDCT; * on each row (or vice versa, but it's more convenient to emit a row at; * a time). Direct algorithms are also available, but they are much more; * complex and seem not to be any faster when reduced to code.; *; * This implementation is based on Arai, Agui, and Nakajima's algorithm for; * scaled DCT. Their original paper (Trans. IEICE E-71(11):1095) is in; * Japanese, but the algorithm is described in the Pennebaker & Mitchell; * JPEG textbook (see REFERENCES section in file README). The following code; * is based directly on figure 4-8 in P&M.; * While an 8-point DCT cannot be done in less than 11 multiplies, it is; * possible to arrange the computation so that many of the multiplies are; * simple scalings of the final outputs. These multiplies can then be; * folded into the multiplications or divisions by the JPEG quantization; * table entries. The AA&N method leaves only 5 multiplies and 29 adds; * to be done in the DCT itself.; * The primary disadvantage of this method is that with fixed-point math,; * accuracy is lost due to imprecise representation of the scaled; * quantization values. The smaller the quantization table entry, the less; * precise the scaled value, so this implementation does worse with high-; * quality-setting files than with low-quality ones.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctfst.c:609,avail,available,609,graf2d/asimage/src/libAfterImage/libjpeg/jidctfst.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctfst.c,1,['avail'],['available']
Availability,"/*; * jidctint.c; *; * Copyright (C) 1991-1998, Thomas G. Lane.; * Modification developed 2002-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains a slow-but-accurate integer implementation of the; * inverse DCT (Discrete Cosine Transform). In the IJG code, this routine; * must also perform dequantization of the input coefficients.; *; * A 2-D IDCT can be done by 1-D IDCT on each column followed by 1-D IDCT; * on each row (or vice versa, but it's more convenient to emit a row at; * a time). Direct algorithms are also available, but they are much more; * complex and seem not to be any faster when reduced to code.; *; * This implementation is based on an algorithm described in; * C. Loeffler, A. Ligtenberg and G. Moschytz, ""Practical Fast 1-D DCT; * Algorithms with 11 Multiplications"", Proc. Int'l. Conf. on Acoustics,; * Speech, and Signal Processing 1989 (ICASSP '89), pp. 988-991.; * The primary algorithm described there uses 11 multiplies and 29 adds.; * We use their alternate method with 12 multiplies and 32 adds.; * The advantage of this method is that no data path contains more than one; * multiplication; this allows a very simple and accurate implementation in; * scaled fixed-point arithmetic, with a minimal number of shifts.; *; * We also provide IDCT routines with various output sample block sizes for; * direct resolution reduction or enlargement and for direct resolving the; * common 2x1 and 1x2 subsampling cases without additional resampling: NxN; * (N=1...16), 2NxN, and Nx2N (N=1...8) pixels for one 8x8 input DCT block.; *; * For N<8 we simply take the corresponding low-frequency coefficients of; * the 8x8 input DCT block and apply an NxN point IDCT on the sub-block; * to yield the downscaled outputs.; * This can be seen as direct low-pass downsampling from the DCT domain; * point of view rather than the usual spatial dom",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c:662,avail,available,662,graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c,1,['avail'],['available']
Availability,"/*; * jmemmgr.c; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains the JPEG system-independent memory management; * routines. This code is usable across a wide variety of machines; most; * of the system dependencies have been isolated in a separate file.; * The major functions provided here are:; * * pool-based allocation and freeing of memory;; * * policy decisions about how to divide available memory among the; * virtual arrays;; * * control logic for swapping virtual arrays between main memory and; * backing storage.; * The separate system-dependent file provides the actual backing-storage; * access code, and it contains the policy decision about how much total; * main memory to use.; * This file is system-dependent in the sense that some of its functions; * are unnecessary in some systems. For example, if there is enough virtual; * memory so that backing storage will never be used, much of the virtual; * array control logic could be removed. (Of course, if you have that much; * memory then you shouldn't care about a little bit of unused code...); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:550,avail,available,550,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['avail'],['available']
Availability,"/*; * jpeglib.h; *; * Copyright (C) 1991-1998, Thomas G. Lane.; * Modified 2002-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file defines the application interface for the JPEG library.; * Most applications using the library need only include this file,; * and perhaps jerror.h if they want to know the exact error codes.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:441,error,error,441,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['error'],['error']
Availability,"/*; * jquant1.c; *; * Copyright (C) 1991-1996, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains 1-pass color quantization (color mapping) routines.; * These routines provide mapping to a fixed color map using equally spaced; * color values. Optional Floyd-Steinberg or ordered dithering is available.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:422,avail,available,422,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,1,['avail'],['available']
Availability,"/*; * mkstemp() implementation is from the GNU C library.; * Copyright (C) 1991,92,93,94,95,96,97,98,99 Free Software Foundation, Inc.; */; /**; * g_mkstemp:; * @tmpl: template filename; *; * Open a temporary file. See ""man mkstemp"" on most UNIX-like systems.; * This is a portability wrapper, which simply calls mkstemp() on systems; * that have it, and implements it in GLib otherwise.; *; * The parameter is a string that should match the rules for mktemp, i.e.; * end in ""XXXXXX"". The X string will be modified to form the name; * of a file that didn't exist.; *; * Return value: A file handle (as from open()) to the file; * opened for reading and writing. The file is opened in binary mode; * on platforms where there is a difference. The file handle should be; * closed with close(). In case of errors, -1 is returned.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.c:802,error,errors,802,graf2d/win32gdk/gdk/src/glib/gfileutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.c,1,['error'],['errors']
Availability,"/*; * parse structure, passed up and down to avoid global variables and; * other clumsinesses; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c:37,down,down,37,interpreter/llvm-project/llvm/lib/Support/regcomp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c,1,['down'],['down']
Availability,"/*; ** visualinfo.c; **; ** Copyright (C) Nate Robins, 1997; ** Michael Wimmer, 1999; ** Milan Ikits, 2002-2008; ** Nigel Stewart, 2008-2013; **; ** visualinfo is a small utility that displays all available visuals,; ** aka. pixelformats, in an OpenGL system along with renderer version; ** information. It shows a table of all the visuals that support OpenGL; ** along with their capabilities. The format of the table is similar to; ** that of glxinfo on Unix systems:; **; ** visual ~= pixel format descriptor; ** id = visual id (integer from 1 - max visuals); ** tp = type (wn: window, pb: pbuffer, wp: window & pbuffer, bm: bitmap); ** ac	 = acceleration (ge: generic, fu: full, no: none); ** fm	 = format (i: integer, f: float, c: color index); ** db	 = double buffer (y = yes); ** sw = swap method (x: exchange, c: copy, u: undefined); ** st	 = stereo (y = yes); ** sz = total # bits; ** r = # bits of red; ** g = # bits of green; ** b = # bits of blue; ** a = # bits of alpha; ** axbf = # aux buffers; ** dpth = # bits of depth; ** stcl = # bits of stencil; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/src/visualinfo.c:197,avail,available,197,builtins/glew/src/visualinfo.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/src/visualinfo.c,1,['avail'],['available']
Availability,"/*; *--------------------------------------------------------------; * find_window_for_pointer_event; *; * Find the window a pointer event (mouse up, down, move) should; * be reported to. If the return value != reported_window then; * the ref count of reported_window will be decremented and the; * ref count of the return value will be incremented.; *; * Arguments:; *; * ""reported_window"" is the gdk window the xevent was reported relative to; * ""xevent"" is the win32 message; *; * Results:; *; * Side effects:; *; *--------------------------------------------------------------; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:150,down,down,150,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,1,['down'],['down']
Availability,"/*; *--------------------------------------------------------------; * gdk_exit; *; * Restores the library to an un-itialized state and exits; * the program using the ""exit"" system call.; *; * Arguments:; * ""errorcode"" is the error value to pass to ""exit"".; *; * Results:; * Allocated structures are freed and the program exits; * cleanly.; *; * Side effects:; *; *--------------------------------------------------------------; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdk.c:208,error,errorcode,208,graf2d/win32gdk/gdk/src/gdk/gdk.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdk.c,2,['error'],"['error', 'errorcode']"
Availability,"/*; *--------------------------------------------------------------; * gdk_pointer_grab; *; * Grabs the pointer to a specific window; *; * Arguments:; * ""window"" is the window which will receive the grab; * ""owner_events"" specifies whether events will be reported as is,; * or relative to ""window""; * ""event_mask"" masks only interesting events; * ""confine_to"" limits the cursor movement to the specified window; * ""cursor"" changes the cursor for the duration of the grab; * ""time"" specifies the time; *; * Results:; *; * Side effects:; * requires a corresponding call to gdk_pointer_ungrab; *; *--------------------------------------------------------------; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:314,mask,masks,314,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,1,['mask'],['masks']
Availability,"/*; *; * Inverse of Normal distribution function; *; *; *; * SYNOPSIS:; *; * double x, y, ndtri();; *; * x = ndtri( y );; *; *; *; * DESCRIPTION:; *; * Returns the argument, x, for which the area under the; * Gaussian probability density function (integrated from; * minus infinity to x) is equal to y.; *; *; * For small arguments 0 < y < exp(-2), the program computes; * z = sqrt( -2.0 * log(y) ); then the approximation is; * x = z - log(z)/z - (1/z) P(1/z) / Q(1/z).; * There are two rational functions P/Q, one for 0 < y < exp(-32); * and the other for y up to exp(-2). For larger arguments,; * w = y - 0.5, and x/sqrt(2pi) = w + w**3 R(w**2)/S(w**2)).; *; *; * ACCURACY:; *; * Relative error:; * arithmetic domain # trials peak rms; * DEC 0.125, 1 5500 9.5e-17 2.1e-17; * DEC 6e-39, 0.135 3500 5.7e-17 1.3e-17; * IEEE 0.125, 1 20000 7.2e-16 1.3e-16; * IEEE 3e-308, 0.135 50000 4.6e-16 9.8e-17; *; *; * ERROR MESSAGES:; *; * message condition value returned; * ndtri domain x <= 0 -MAXNUM; * ndtri domain x >= 1 MAXNUM; *; */; /*; Cephes Math Library Release 2.8: June, 2000; Copyright 1984, 1987, 1989, 2000 by Stephen L. Moshier; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephesInv.cxx:692,error,error,692,math/mathcore/src/SpecFuncCephesInv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephesInv.cxx,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"/*; *; * Inverse of complemented incomplete gamma integral; *; *; *; * SYNOPSIS:; *; * double a, x, p, igami();; *; * x = igami( a, p );; *; * DESCRIPTION:; *; * Given p, the function finds x such that; *; * igamc( a, x ) = p.; *; * Starting with the approximate value; *; * 3; * x = a t; *; * where; *; * t = 1 - d - ndtri(p) sqrt(d); *; * and; *; * d = 1/9a,; *; * the routine performs up to 10 Newton iterations to find the; * root of igamc(a,x) - p = 0.; *; * ACCURACY:; *; * Tested at random a, p in the intervals indicated.; *; * a p Relative error:; * arithmetic domain domain # trials peak rms; * IEEE 0.5,100 0,0.5 100000 1.0e-14 1.7e-15; * IEEE 0.01,0.5 0,0.5 100000 9.0e-14 3.4e-15; * IEEE 0.5,10000 0,0.5 20000 2.3e-13 3.8e-14; */; /*; Cephes Math Library Release 2.8: June, 2000; Copyright 1984, 1987, 1995, 2000 by Stephen L. Moshier; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephesInv.cxx:549,error,error,549,math/mathcore/src/SpecFuncCephesInv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephesInv.cxx,1,['error'],['error']
Availability,"/*; *; * Inverse of incomplete beta integral; *; *; *; * SYNOPSIS:; *; * double a, b, x, y, incbi();; *; * x = incbi( a, b, y );; *; *; *; * DESCRIPTION:; *; * Given y, the function finds x such that; *; * incbet( a, b, x ) = y .; *; * The routine performs interval halving or Newton iterations to find the; * root of incbet(a,b,x) - y = 0.; *; *; * ACCURACY:; *; * Relative error:; * x a,b; * arithmetic domain domain # trials peak rms; * IEEE 0,1 .5,10000 50000 5.8e-12 1.3e-13; * IEEE 0,1 .25,100 100000 1.8e-13 3.9e-15; * IEEE 0,1 0,5 50000 1.1e-12 5.5e-15; * VAX 0,1 .5,100 25000 3.5e-14 1.1e-15; * With a and b constrained to half-integer or integer values:; * IEEE 0,1 .5,10000 50000 5.8e-12 1.1e-13; * IEEE 0,1 .5,100 100000 1.7e-14 7.9e-16; * With a = .5, b constrained to half-integer or integer values:; * IEEE 0,1 .5,10000 10000 8.3e-11 1.0e-11; */; /*; Cephes Math Library Release 2.8: June, 2000; Copyright 1984, 1996, 2000 by Stephen L. Moshier; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephesInv.cxx:375,error,error,375,math/mathcore/src/SpecFuncCephesInv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephesInv.cxx,1,['error'],['error']
Availability,"/*; *_continue() :; These decoding functions allow decompression of multiple blocks in ""streaming"" mode.; Previously decoded blocks must still be available at the memory position where they were decoded.; If it's not possible, save the relevant part of decoded data into a safe buffer,; and indicate where it stands using LZ4_setStreamDecode(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:146,avail,available,146,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['avail'],['available']
Availability,"/*; - llvm_regerror - the interface to error numbers; = extern size_t llvm_regerror(int, const llvm_regex_t *, char *, size_t);; */; /* ARGSUSED */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regerror.c:39,error,error,39,interpreter/llvm-project/llvm/lib/Support/regerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regerror.c,1,['error'],['error']
Availability,/*; - seterr - set an error condition; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c:22,error,error,22,interpreter/llvm-project/llvm/lib/Support/regcomp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c,1,['error'],['error']
Availability,"/*; // We really need to find a way to propagate/keep the opaque typedef; // that are available in TST to the aliased type. We would need; // to do something like:. QualType targetType = TST->getAliasedType();; QualType resubst = ReSubstTemplateArg(targetType,TST);; return GetPartiallyDesugaredTypeImpl(Ctx, resubst, TypeConfig,; fullyQualifyType,; fullyQualifyTmpltArg);. // But this is not quite right (ReSubstTemplateArg is from TMetaUtils); // as it does not resubst for. template <typename T> using myvector = std::vector<T>;; myvector<Double32_t> vd32d;. // and does not work at all for. template<class T> using ptr = T*;; ptr<Double32_t> p2;. // as the target is not a template.; */; // So for now just return move on with the least lose we can do",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp:86,avail,available,86,interpreter/cling/lib/Utils/AST.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp,1,['avail'],['available']
Availability,"/*; ////////////////////////////////////////////////////////////////////////////////; /// thread for processing windows messages (aka Main/Server thread). static DWORD WINAPI MessageProcessingLoop(void *p); {; MSG msg;; Int_t erret;; Bool_t endLoop = kFALSE;; TGWin32RefreshTimer *refersh = 0;. // force to create message queue; ::PeekMessage(&msg, NULL, WM_USER, WM_USER, PM_NOREMOVE);. // periodically we refresh windows; // Don't create refresh timer if the application has been created inside PVSS; if (gApplication) {; TString arg = gSystem->BaseName(gApplication->Argv(0));; if (!arg.Contains(""PVSS"")); refersh = new TGWin32RefreshTimer();; }. while (!endLoop) {; erret = ::GetMessage(&msg, NULL, NULL, NULL);; if (erret <= 0) endLoop = kTRUE;; endLoop = MessageProcessingFunc(&msg);; }. TGWin32::Instance()->CloseDisplay();; if (refersh); delete refersh;. // exit thread; if (erret == -1) {; erret = ::GetLastError();; Error(""MsgLoop"", ""Error in GetMessage"");; ::ExitThread(-1);; } else {; ::ExitThread(0);; }; return 0;; }; */; ////////////////////////////////////////////////////////////////////////////////; /// constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:926,Error,Error,926,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,2,['Error'],['Error']
Availability,"/*; All dynamically allocated data structures for this stream are freed.; This function discards any unprocessed input and does not flush any pending; output. deflateEnd returns Z_OK if success, Z_STREAM_ERROR if the; stream state was inconsistent, Z_DATA_ERROR if the stream was freed; prematurely (some input or output was discarded). In the error case, msg; may be set but then points to a static string (which must not be; deallocated).; */; /*; ZEXTERN int ZEXPORT inflateInit OF((z_streamp strm));. Initializes the internal stream state for decompression. The fields; next_in, avail_in, zalloc, zfree and opaque must be initialized before by; the caller. If next_in is not Z_NULL and avail_in is large enough (the; exact value depends on the compression method), inflateInit determines the; compression method from the zlib header and allocates all data structures; accordingly; otherwise the allocation will be deferred to the first call of; inflate. If zalloc and zfree are set to Z_NULL, inflateInit updates them to; use default allocation functions. inflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_VERSION_ERROR if the zlib library version is incompatible with the; version assumed by the caller, or Z_STREAM_ERROR if the parameters are; invalid, such as a null pointer to the structure. msg is set to null if; there is no error message. inflateInit does not perform any decompression; apart from possibly reading the zlib header if present: actual decompression; will be done by inflate(). (So next_in and avail_in may be modified, but; next_out and avail_out are unused and unchanged.) The current implementation; of inflateInit() does not process any header information -- that is deferred; until inflate() is called.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:344,error,error,344,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,2,['error'],['error']
Availability,"/*; All dynamically allocated data structures for this stream are freed.; This function discards any unprocessed input and does not flush any pending; output. inflateEnd returns Z_OK if success, Z_STREAM_ERROR if the stream state; was inconsistent. In the error case, msg may be set but then points to a; static string (which must not be deallocated).; */; /* Advanced functions */; /*; The following functions are needed only in some special applications.; */; /*; ZEXTERN int ZEXPORT deflateInit2 OF((z_streamp strm,; int level,; int method,; int windowBits,; int memLevel,; int strategy));. This is another version of deflateInit with more compression options. The; fields next_in, zalloc, zfree and opaque must be initialized before by the; caller. The method parameter is the compression method. It must be Z_DEFLATED in; this version of the library. The windowBits parameter is the base two logarithm of the window size; (the size of the history buffer). It should be in the range 8..15 for this; version of the library. Larger values of this parameter result in better; compression at the expense of memory usage. The default value is 15 if; deflateInit is used instead. windowBits can also be -8..-15 for raw deflate. In this case, -windowBits; determines the window size. deflate() will then generate raw deflate data; with no zlib header or trailer, and will not compute an adler32 check value. windowBits can also be greater than 15 for optional gzip encoding. Add; 16 to windowBits to write a simple gzip header and trailer around the; compressed data instead of a zlib wrapper. The gzip header will have no; file name, no extra data, no comment, no modification time (set to zero), no; header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but is; slow and",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:256,error,error,256,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['error'],['error']
Availability,"/*; All dynamically allocated data structures for this stream are freed.; This function discards any unprocessed input and does not flush any; pending output. deflateEnd returns Z_OK if success, Z_STREAM_ERROR if the; stream state was inconsistent, Z_DATA_ERROR if the stream was freed; prematurely (some input or output was discarded). In the error case,; msg may be set but then points to a static string (which must not be; deallocated).; */; /*; ZEXTERN int ZEXPORT inflateInit OF((z_streamp strm));. Initializes the internal stream state for decompression. The fields; next_in, avail_in, zalloc, zfree and opaque must be initialized before by; the caller. If next_in is not Z_NULL and avail_in is large enough (the exact; value depends on the compression method), inflateInit determines the; compression method from the zlib header and allocates all data structures; accordingly; otherwise the allocation will be deferred to the first call of; inflate. If zalloc and zfree are set to Z_NULL, inflateInit updates them to; use default allocation functions. inflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_VERSION_ERROR if the zlib library version is incompatible with the; version assumed by the caller. msg is set to null if there is no error; message. inflateInit does not perform any decompression apart from reading; the zlib header if present: this will be done by inflate(). (So next_in and; avail_in may be modified, but next_out and avail_out are unchanged.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:344,error,error,344,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,2,['error'],['error']
Availability,"/*; All dynamically allocated data structures for this stream are freed.; This function discards any unprocessed input and does not flush any; pending output. inflateEnd returns Z_OK if success, Z_STREAM_ERROR if the stream state; was inconsistent. In the error case, msg may be set but then points to a; static string (which must not be deallocated).; */; /* Advanced functions */; /*; The following functions are needed only in some special applications.; */; /*; ZEXTERN int ZEXPORT deflateInit2 OF((z_streamp strm,; int level,; int method,; int windowBits,; int memLevel,; int strategy));. This is another version of deflateInit with more compression options. The; fields next_in, zalloc, zfree and opaque must be initialized before by; the caller. The method parameter is the compression method. It must be Z_DEFLATED in; this version of the library. The windowBits parameter is the base two logarithm of the window size; (the size of the history buffer). It should be in the range 8..15 for this; version of the library. Larger values of this parameter result in better; compression at the expense of memory usage. The default value is 15 if; deflateInit is used instead. windowBits can also be -8..-15 for raw deflate. In this case, -windowBits; determines the window size. deflate() will then generate raw deflate data; with no zlib header or trailer, and will not compute an adler32 check value. windowBits can also be greater than 15 for optional gzip encoding. Add; 16 to windowBits to write a simple gzip header and trailer around the; compressed data instead of a zlib wrapper. The gzip header will have no; file name, no extra data, no comment, no modification time (set to zero),; no header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but; is slow and",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:256,error,error,256,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability,/*; Clears the error and end-of-file flags for file. This is analogous to the; clearerr() function in stdio. This is useful for continuing to read a gzip; file that is being written concurrently.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:15,error,error,15,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['error'],['error']
Availability,/*; Clears the error and end-of-file flags for file. This is analogous to the; clearerr() function in stdio. This is useful for continuing to read a gzip; file that is being written concurrently.; */; /* checksum functions */; /*; These functions are not related to compression but are exported; anyway because they might be useful in applications using the; compression library.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:15,error,error,15,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability,"/*; Converts, formats, and writes the args to the compressed file under; control of the format string, as in fprintf. gzprintf returns the number of; uncompressed bytes actually written (0 in case of error). The number of; uncompressed bytes written is limited to 4095. The caller should assure that; this limit is not exceeded. If it is exceeded, then gzprintf() will return; return an error (0) with nothing written. In this case, there may also be a; buffer overflow with unpredictable consequences, which is possible only if; zlib was compiled with the insecure functions sprintf() or vsprintf(); because the secure snprintf() or vsnprintf() functions were not available.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:200,error,error,200,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,3,"['avail', 'error']","['available', 'error']"
Availability,"/*; Converts, formats, and writes the arguments to the compressed file under; control of the format string, as in fprintf. gzprintf returns the number of; uncompressed bytes actually written, or 0 in case of error. The number of; uncompressed bytes written is limited to 8191, or one less than the buffer; size given to gzbuffer(). The caller should assure that this limit is not; exceeded. If it is exceeded, then gzprintf() will return an error (0) with; nothing written. In this case, there may also be a buffer overflow with; unpredictable consequences, which is possible only if zlib was compiled with; the insecure functions sprintf() or vsprintf() because the secure snprintf(); or vsnprintf() functions were not available. This can be determined using; zlibCompileFlags().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:208,error,error,208,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,3,"['avail', 'error']","['available', 'error']"
Availability,"/*; Decode literal, length, and distance codes and write out the resulting; literal and match bytes until either not enough input or output is; available, an end-of-block is encountered, or a data error is encountered.; When large enough input and output buffers are supplied to inflate(), for; example, a 16K input buffer and a 64K output buffer, more than 95% of the; inflate execution time is spent in this routine. Entry assumptions:. state->mode == LEN; strm->avail_in >= 6; strm->avail_out >= 258; start >= strm->avail_out; state->bits < 8. On return, state->mode is one of:. LEN -- ran out of enough output space or enough available input; TYPE -- reached end of block code, inflate() to interpret next block; BAD -- error in block data. Notes:. - The maximum input bits used by a length/distance pair is 15 bits for the; length code, 5 bits for the length extra, 15 bits for the distance code,; and 13 bits for the distance extra. This totals 48 bits, or six bytes.; Therefore if strm->avail_in >= 6, then there is enough input to avoid; checking for available input while decoding. - The maximum bytes that a single length/distance pair can output is 258; bytes, which is the maximum length that can be coded. inflate_fast(); requires strm->avail_out >= 258 for each loop to avoid checking for; output space.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inffast.c:144,avail,available,144,builtins/zlib/inffast.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inffast.c,10,"['avail', 'error']","['available', 'error']"
Availability,"/*; Dynamically update the compression level and compression strategy. The; interpretation of level and strategy is as in deflateInit2. This can be; used to switch between compression and straight copy of the input data, or; to switch to a different kind of input data requiring a different strategy.; If the compression level is changed, the input available so far is; compressed with the old level (and may be flushed); the new level will take; effect only at the next call of deflate(). Before the call of deflateParams, the stream state must be set as for; a call of deflate(), since the currently available input may have to be; compressed and flushed. In particular, strm->avail_out must be non-zero. deflateParams returns Z_OK if success, Z_STREAM_ERROR if the source; stream state was inconsistent or if a parameter was invalid, Z_BUF_ERROR if; strm->avail_out was zero.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:349,avail,available,349,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,2,['avail'],['available']
Availability,"/*; Dynamically update the compression level and compression strategy. The; interpretation of level and strategy is as in deflateInit2. This can be; used to switch between compression and straight copy of the input data, or; to switch to a different kind of input data requiring a different; strategy. If the compression level is changed, the input available so far; is compressed with the old level (and may be flushed); the new level will; take effect only at the next call of deflate(). Before the call of deflateParams, the stream state must be set as for; a call of deflate(), since the currently available input may have to; be compressed and flushed. In particular, strm->avail_out must be non-zero. deflateParams returns Z_OK if success, Z_STREAM_ERROR if the source; stream state was inconsistent or if a parameter was invalid, Z_BUF_ERROR; if strm->avail_out was zero.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:349,avail,available,349,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,2,['avail'],['available']
Availability,"/*; Error(""Compile"",; ""TFormula can only call interpreted and compiled function that returns a numerical type %s returns a %s\n"",; method->GetMethodName(), method->GetMethod()->GetReturnTypeName());; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx:4,Error,Error,4,hist/hist/src/TFormula_v5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx,1,['Error'],['Error']
Availability,"/*; Flushes all pending output if necessary, closes the compressed file and; deallocates the (de)compression state. Note that once file is closed, you; cannot call gzerror with file, since its structures have been deallocated.; gzclose must not be called more than once on the same file, just as free; must not be called more than once on the same allocation. gzclose will return Z_STREAM_ERROR if file is not valid, Z_ERRNO on a; file operation error, Z_MEM_ERROR if out of memory, Z_BUF_ERROR if the; last read ended in the middle of a gzip stream, or Z_OK on success.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:446,error,error,446,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['error'],['error']
Availability,"/*; Flushes all pending output if necessary, closes the compressed file; and deallocates all the (de)compression state. The return value is the zlib; error number (see function gzerror below).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:150,error,error,150,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability,"/*; Flushes all pending output into the compressed file. The parameter flush; is as in the deflate() function. The return value is the zlib error number; (see function gzerror below). gzflush is only permitted when writing. If the flush parameter is Z_FINISH, the remaining data is written and the; gzip stream is completed in the output. If gzwrite() is called again, a new; gzip stream will be started in the output. gzread() is able to read such; concatented gzip streams. gzflush should be called only when strictly necessary because it will; degrade compression if called too often.; */; /*; ZEXTERN z_off_t ZEXPORT gzseek OF((gzFile file,; z_off_t offset, int whence));. Sets the starting position for the next gzread or gzwrite on the given; compressed file. The offset represents a number of bytes in the; uncompressed data stream. The whence parameter is defined as in lseek(2);; the value SEEK_END is not supported. If the file is opened for reading, this function is emulated but can be; extremely slow. If the file is opened for writing, only forward seeks are; supported; gzseek then compresses a sequence of zeroes up to the new; starting position. gzseek returns the resulting offset location as measured in bytes from; the beginning of the uncompressed stream, or -1 in case of error, in; particular if the file is opened for writing and the new starting position; would be before the current position.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:140,error,error,140,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,2,['error'],['error']
Availability,/*; Flushes all pending output into the compressed file. The parameter; flush is as in the deflate() function. The return value is the zlib; error number (see function gzerror below). gzflush returns Z_OK if; the flush parameter is Z_FINISH and all output could be flushed.; gzflush should be called only when strictly necessary because it can; degrade compression.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:141,error,error,141,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability,"/*; Here's an illustration of what we're about to do. We have two blocks, this; and Src, and two segments of list. Each instruction is marked by a capital; while potential DPValue debug-info is marked out by ""-"" characters and a few; other special characters (+:=) where I want to highlight what's going on. Dest; |; this-block: A----A----A ====A----A----A----A---A---A; Src-block ++++B---B---B---B:::C; | |; First Last. The splice method is going to take all the instructions from First up to; (but not including) Last and insert them in _front_ of Dest, forming one; long list. All the DPValues attached to instructions _between_ First and; Last need no maintenence. However, we have to do special things with the; DPValues marked with the +:= characters. We only have three positions:; should the ""+"" DPValues be transferred, and if so to where? Do we move the; "":"" DPValues? Would they go in front of the ""="" DPValues, or should the ""=""; DPValues go before ""+"" DPValues?. We're told which way it should be by the bits carried in the iterators. The; ""Head"" bit indicates whether the specified position is supposed to be at the; front of the attached DPValues (true) or not (false). The Tail bit is true; on the other end of a range: is the range intended to include DPValues up to; the end (false) or not (true). FIXME: the tail bit doesn't need to be distinct from the head bit, we could; combine them. Here are some examples of different configurations:. Dest.Head = true, First.Head = true, Last.Tail = false. this-block: A----A----A++++B---B---B---B:::====A----A----A----A---A---A; | |; First Dest. Wheras if we didn't want to read from the Src list,. Dest.Head = true, First.Head = false, Last.Tail = false. this-block: A----A----AB---B---B---B:::====A----A----A----A---A---A; | |; First Dest. Or if we didn't want to insert at the head of Dest:. Dest.Head = false, First.Head = false, Last.Tail = false. this-block: A----A----A====B---B---B---B:::A----A----A----A---A---A; | |; First Dest. Te",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/BasicBlock.cpp:656,mainten,maintenence,656,interpreter/llvm-project/llvm/lib/IR/BasicBlock.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/BasicBlock.cpp,1,['mainten'],['maintenence']
Availability,"/*; If you use the zlib library in a product, an acknowledgment is welcome; in the documentation of your product. If for some reason you cannot; include such an acknowledgment, I would appreciate that you keep this; copyright string in the executable of your product.; */; /*; Build a set of tables to decode the provided canonical Huffman code.; The code lengths are lens[0..codes-1]. The result starts at *table,; whose indices are 0..2^bits-1. work is a writable array of at least; lens shorts, which is used as a work area. type is the type of code; to be generated, CODES, LENS, or DISTS. On return, zero is success,; -1 is an invalid code, and +1 means that ENOUGH isn't enough. table; on return points to the next available entry's address. bits is the; requested root table index bits, and on return it is the actual root; table index bits. It will differ if the request is greater than the; longest code or if it is less than the shortest code.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.c:721,avail,available,721,builtins/zlib/inftrees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.c,2,['avail'],['available']
Availability,"/*; In CallFunc we currently always (intentionally and somewhat necessarily); always fully specify member function template, however this can lead to; an ambiguity with a class template. For example in; roottest/cling/functionTemplate we get:. input_line_171:3:15: warning: lookup of 'set' in member access expression; is ambiguous; using member of 't'; ((t*)obj)->set<int>(*(int*)args[0]);; ^; roottest/cling/functionTemplate/t.h:19:9: note: lookup in the object type; 't' refers here; void set(T targ) {; ^; /usr/include/c++/4.4.5/bits/stl_set.h:87:11: note: lookup from the; current scope refers here; class set; ^; This is an intention warning implemented in clang, see; http://llvm.org/viewvc/llvm-project?view=revision&revision=105518. which 'should have been' an error:. C++ [basic.lookup.classref] requires this to be an error, but,; because it's hard to work around, Clang downgrades it to a warning as; an extension.</p>. // C++98 [basic.lookup.classref]p1:; // In a class member access expression (5.2.5), if the . or -> token is; // immediately followed by an identifier followed by a <, the identifier; // must be looked up to determine whether the < is the beginning of a; // template argument list (14.2) or a less-than operator. The identifier; // is first looked up in the class of the object expression. If the; // identifier is not found, it is then looked up in the context of the; // entire postfix-expression and shall name a class or function template. If; // the lookup in the class of the object expression finds a template, the; // name is also looked up in the context of the entire postfix-expression; // and; // -- if the name is not found, the name found in the class of the; // object expression is used, otherwise; // -- if the name is found in the context of the entire postfix-expression; // and does not name a class template, the name found in the class of the; // object expression is used, otherwise; // -- if the name found is a class template, it must refer to ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:770,error,error,770,interpreter/cling/lib/Interpreter/Interpreter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp,3,"['down', 'error']","['downgrades', 'error']"
Availability,"/*; Int_t base, position, last, result = 0;; TObject *op2;. if (!op) return -1;. if (!fSorted) {; Error(""BinarySearch"", ""array must first be sorted"");; return -1;; }. base = 0;; last = TMath::Min(fSize, upto-fLowerBound) - 1;. while (last >= base) {; //position = (base+last) / 2;; //op2 = fCont[position];; //if (op2 && (result = op->Compare(op2)) == 0); // return position + fLowerBound;; //if (!op2 || result < 0); // last = position-1;; //else; // base = position+1;; }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx:98,Error,Error,98,core/cont/src/TRefArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx,1,['Error'],['Error']
Availability,"/*; MinimumError DavidonErrorUpdator::Update(const MinimumState& s0,; const MinimumParameters& p1,; const FunctionGradient& g1) const {. const MnAlgebraicSymMatrix& v0 = s0.Error().InvHessian();; MnAlgebraicVector dx = p1.Vec() - s0.Vec();; MnAlgebraicVector dg = g1.Vec() - s0.Gradient().Vec();. double delgam = inner_product(dx, dg);; double gvg = similarity(dg, v0);. // std::cout<<""delgam= ""<<delgam<<"" gvg= ""<<gvg<<std::endl;; MnAlgebraicVector vg = v0*dg;; // MnAlgebraicSymMatrix vUpd(v0.Nrow());. // MnAlgebraicSymMatrix dd = ( 1./delgam )*outer_product(dx);; // dd *= ( 1./delgam );; // MnAlgebraicSymMatrix VggV = ( 1./gvg )*outer_product(vg);; // VggV *= ( 1./gvg );; // vUpd = dd - VggV;; // MnAlgebraicSymMatrix vUpd = ( 1./delgam )*outer_product(dx) - ( 1./gvg )*outer_product(vg);; MnAlgebraicSymMatrix vUpd = Outer_product(dx)/delgam - Outer_product(vg)/gvg;. if(delgam > gvg) {; // dx *= ( 1./delgam );; // vg *= ( 1./gvg );; // MnAlgebraicVector flnu = dx - vg;; // MnAlgebraicSymMatrix tmp = Outer_product(flnu);; // tmp *= gvg;; // vUpd = vUpd + tmp;; vUpd += gvg*outer_product(dx/delgam - vg/gvg);; }. //; // MnAlgebraicSymMatrix dd = Outer_product(dx);; // dd *= ( 1./delgam );; // MnAlgebraicSymMatrix VggV = Outer_product(vg);; // VggV *= ( 1./gvg );; // vUpd = dd - VggV;; //; //; // double phi = delgam/(delgam - gvg);. // MnAlgebraicSymMatrix vUpd(v0.Nrow());; // if(phi < 0) {; // // rank-2 Update; // MnAlgebraicSymMatrix dd = Outer_product(dx);; // dd *= ( 1./delgam );; // MnAlgebraicSymMatrix VggV = Outer_product(vg);; // VggV *= ( 1./gvg );; // vUpd = dd - VggV;; // }; // if(phi > 1) {; // // rank-1 Update; // MnAlgebraicVector tmp = dx - vg;; // vUpd = Outer_product(tmp);; // vUpd *= ( 1./(delgam - gvg) );; // }; //. //; // if(delgam > gvg) {; // // rank-1 Update; // MnAlgebraicVector tmp = dx - vg;; // vUpd = Outer_product(tmp);; // vUpd *= ( 1./(delgam - gvg) );; // } else {; // // rank-2 Update; // MnAlgebraicSymMatrix dd = Outer_product(dx);; // dd *= ( ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/DavidonErrorUpdator.cxx:173,Error,Error,173,math/minuit2/src/DavidonErrorUpdator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/DavidonErrorUpdator.cxx,1,['Error'],['Error']
Availability,"/*; Opens a gzip (.gz) file for reading or writing. The mode parameter; is as in fopen (""rb"" or ""wb"") but can also include a compression level; (""wb9"") or a strategy: 'f' for filtered data as in ""wb6f"", 'h' for; Huffman only compression as in ""wb1h"", or 'R' for run-length encoding; as in ""wb1R"". (See the description of deflateInit2 for more information; about the strategy parameter.). gzopen can be used to read a file which is not in gzip format; in this; case gzread will directly read from the file without decompression. gzopen returns NULL if the file could not be opened or if there was; insufficient memory to allocate the (de)compression state; errno; can be checked to distinguish the two cases (if errno is zero, the; zlib error is Z_MEM_ERROR). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:736,error,error,736,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability,"/*; Push one character back onto the stream to be read again later.; Only one character of push-back is allowed. gzungetc() returns the; character pushed, or -1 on failure. gzungetc() will fail if a; character has been pushed but not read yet, or if c is -1. The pushed; character will be discarded if the stream is repositioned with gzseek(); or gzrewind().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:164,failure,failure,164,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['failure'],['failure']
Availability,"/*; Push one character back onto the stream to be read as the first character; on the next read. At least one character of push-back is allowed.; gzungetc() returns the character pushed, or -1 on failure. gzungetc() will; fail if c is -1, and may fail if a character has been pushed but not read; yet. If gzungetc is used immediately after gzopen or gzdopen, at least the; output buffer size of pushed characters is allowed. (See gzbuffer above.); The pushed character will be discarded if the stream is repositioned with; gzseek() or gzrewind().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:196,failure,failure,196,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['failure'],['failure']
Availability,"/*; Reads bytes from the compressed file until len-1 characters are read, or a; newline character is read and transferred to buf, or an end-of-file; condition is encountered. If any characters are read or if len == 1, the; string is terminated with a null character. If no characters are read due; to an end-of-file or len < 1, then the buffer is left untouched. gzgets returns buf which is a null-terminated string, or it returns NULL; for end-of-file or in case of error. If there was an error, the contents at; buf are indeterminate.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:467,error,error,467,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,2,['error'],['error']
Availability,"/*; Reads bytes from the compressed file until len-1 characters are read, or; a newline character is read and transferred to buf, or an end-of-file; condition is encountered. The string is then terminated with a null; character.; gzgets returns buf, or Z_NULL in case of error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:271,error,error,271,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability,"/*; Reads one byte from the compressed file. gzgetc returns this byte or -1; in case of end of file or error. This is implemented as a macro for speed.; As such, it does not do all of the checking the other functions do. I.e.; it does not check to see if file is NULL, nor whether the structure file; points to has been clobbered or not.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:103,error,error,103,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['error'],['error']
Availability,/*; Reads one byte from the compressed file. gzgetc returns this byte; or -1 in case of end of file or error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:103,error,error,103,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability,"/*; Reads the given number of uncompressed bytes from the compressed file. If; the input file is not in gzip format, gzread copies the given number of; bytes into the buffer directly from the file. After reaching the end of a gzip stream in the input, gzread will continue; to read, looking for another gzip stream. Any number of gzip streams may be; concatenated in the input file, and will all be decompressed by gzread().; If something other than a gzip stream is encountered after a gzip stream,; that remaining trailing garbage is ignored (and no error is returned). gzread can be used to read a gzip file that is being concurrently written.; Upon reaching the end of the input, gzread will return with the available; data. If the error code returned by gzerror is Z_OK or Z_BUF_ERROR, then; gzclearerr can be used to clear the end of file indicator in order to permit; gzread to be tried again. Z_OK indicates that a gzip stream was completed; on the last gzread. Z_BUF_ERROR indicates that the input file ended in the; middle of a gzip stream. Note that gzread does not return -1 in the event; of an incomplete gzip stream. This error is deferred until gzclose(), which; will return Z_BUF_ERROR if the last gzread ended in the middle of a gzip; stream. Alternatively, gzerror can be used before gzclose to detect this; case. gzread returns the number of uncompressed bytes actually read, less than; len for end of file, or -1 for error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:552,error,error,552,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,5,"['avail', 'error']","['available', 'error']"
Availability,"/*; Reads the given number of uncompressed bytes from the compressed file.; If the input file was not in gzip format, gzread copies the given number; of bytes into the buffer.; gzread returns the number of uncompressed bytes actually read (0 for; end of file, -1 for error). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:267,error,error,267,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability,"/*; Return from inflate(), updating the total counts and the check value.; If there was no progress during the inflate() call, return a buffer; error. Call updatewindow() to create and/or update the window state.; Note: a memory error from inflate() is non-recoverable.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:144,error,error,144,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,6,"['error', 'recover']","['error', 'recoverable']"
Availability,"/*; Returns the error message for the last error which occurred on the given; compressed file. errnum is set to zlib error number. If an error occurred; in the file system and not in the compression library, errnum is set to; Z_ERRNO and the application may consult errno to get the exact error code. The application must not modify the returned string. Future calls to; this function may invalidate the previously returned string. If file is; closed, then the string previously returned by gzerror will no longer be; available. gzerror() should be used to distinguish errors from end-of-file for those; functions above that do not distinguish those cases in their return values.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:16,error,error,16,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,7,"['avail', 'error']","['available', 'error', 'errors']"
Availability,"/*; Returns the error message for the last error which occurred on the; given compressed file. errnum is set to zlib error number. If an; error occurred in the file system and not in the compression library,; errnum is set to Z_ERRNO and the application may consult errno; to get the exact error code.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:16,error,error,16,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,5,['error'],['error']
Availability,"/*; Rewinds the given file. This function is supported only for reading. gzrewind(file) is equivalent to (int)gzseek(file, 0L, SEEK_SET); */; /*; ZEXTERN z_off_t ZEXPORT gztell OF((gzFile file));. Returns the starting position for the next gzread or gzwrite on the given; compressed file. This position represents a number of bytes in the; uncompressed data stream, and is zero when starting, even if appending or; reading a gzip stream from the middle of a file using gzdopen(). gztell(file) is equivalent to gzseek(file, 0L, SEEK_CUR); */; /*; ZEXTERN z_off_t ZEXPORT gzoffset OF((gzFile file));. Returns the current offset in the file being read or written. This offset; includes the count of bytes that precede the gzip stream, for example when; appending or when using gzdopen() for reading. When reading, the offset; does not include as yet unused buffered input. This information can be used; for a progress indicator. On error, gzoffset() returns -1.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:929,error,error,929,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['error'],['error']
Availability,"/*; RooAbsPdf* constraintTerm = (RooAbsPdf*) constraints->find( constraintTermName.c_str() );; if( constraintTerm == nullptr ) {; std::cout << ""Error: Couldn't find constraint term: "" << constraintTermName; << "" for parameter: "" << gamma_stat->GetName(); << std::endl;; throw std::runtime_error(""Failed to find Gamma ConstraintTerm"");; return -1;; }; */; // Find the ""data"" of the poisson term; // This is the nominal value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryModelUtils.cxx:144,Error,Error,144,roofit/histfactory/src/HistFactoryModelUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryModelUtils.cxx,1,['Error'],['Error']
Availability,"/*; Set the internal buffer size used by this library's functions. The; default buffer size is 8192 bytes. This function must be called after; gzopen() or gzdopen(), and before any other calls that read or write the; file. The buffer memory allocation is always deferred to the first read or; write. Two buffers are allocated, either both of the specified size when; writing, or one of the specified size and the other twice that size when; reading. A larger buffer size of, for example, 64K or 128K bytes will; noticeably increase the speed of decompression (reading). The new buffer size also affects the maximum length for gzprintf(). gzbuffer() returns 0 on success, or -1 on failure, such as being called; too late.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:680,failure,failure,680,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['failure'],['failure']
Availability,"/*; Sets the starting position for the next gzread or gzwrite on the; given compressed file. The offset represents a number of bytes in the; uncompressed data stream. The whence parameter is defined as in lseek(2);; the value SEEK_END is not supported.; If the file is opened for reading, this function is emulated but can be; extremely slow. If the file is opened for writing, only forward seeks are; supported; gzseek then compresses a sequence of zeroes up to the new; starting position. gzseek returns the resulting offset location as measured in bytes from; the beginning of the uncompressed stream, or -1 in case of error, in; particular if the file is opened for writing and the new starting position; would be before the current position.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:622,error,error,622,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability,"/*; Skips invalid compressed data until a full flush point (see above the; description of deflate with Z_FULL_FLUSH) can be found, or until all; available input is skipped. No output is provided. inflateSync returns Z_OK if a full flush point has been found, Z_BUF_ERROR; if no more input was provided, Z_DATA_ERROR if no flush point has been found,; or Z_STREAM_ERROR if the stream structure was inconsistent. In the success; case, the application may save the current current value of total_in which; indicates where valid compressed data was found. In the error case, the; application may repeatedly call inflateSync, providing more input each time,; until success or end of the input data.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:145,avail,available,145,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,2,"['avail', 'error']","['available', 'error']"
Availability,"/*; Skips invalid compressed data until a possible full flush point (see above; for the description of deflate with Z_FULL_FLUSH) can be found, or until all; available input is skipped. No output is provided. inflateSync searches for a 00 00 FF FF pattern in the compressed data.; All full flush points have this pattern, but not all occurrences of this; pattern are full flush points. inflateSync returns Z_OK if a possible full flush point has been found,; Z_BUF_ERROR if no more input was provided, Z_DATA_ERROR if no flush point; has been found, or Z_STREAM_ERROR if the stream structure was inconsistent.; In the success case, the application may save the current current value of; total_in which indicates where valid compressed data was found. In the; error case, the application may repeatedly call inflateSync, providing more; input each time, until success or end of the input data.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:158,avail,available,158,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,2,"['avail', 'error']","['available', 'error']"
Availability,"/*; Some implementation details:. - The conditional `RLogBuilder` use prevents stream operators from being called if; verbosity is too low, i.e.:; ~~~; RLogScopedVerbosity silence(RLogLevel::kFatal);; R__LOG_DEBUG(7) << WillNotBeCalled();; ~~~; - To update counts of warnings / errors / fatal errors, those RLogEntries must; always be created, even if in the end their emission will be silenced. This; should be fine, performance-wise, as they should not happen frequently.; - Use `(condition) && RLogBuilder(...)` instead of `if (condition) RLogBuilder(...)`; to prevent ""ambiguous else"" in invocations such as `if (something) R__LOG_DEBUG()...`.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:278,error,errors,278,core/foundation/inc/ROOT/RLogger.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx,2,['error'],['errors']
Availability,"/*; SortTable; version 2; 7th April 2007; Stuart Langridge, http://www.kryogenix.org/code/browser/sorttable/. Instructions:; Download this file; Add <script src=""sorttable.js""></script> to your HTML; Add class=""sortable"" to any table you'd like to make sortable; Click on the headers to sort. Thanks to many, many people for contributions and suggestions.; Licenced as X11: http://www.kryogenix.org/code/browser/licence.html; This basically means: do what you want with it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build/share/scan-build/sorttable.js:125,Down,Download,125,interpreter/llvm-project/clang/tools/scan-build/share/scan-build/sorttable.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build/share/scan-build/sorttable.js,3,['Down'],['Download']
Availability,/*; State transitions between above modes -. (most modes can go to BAD or MEM on error -- not shown for clarity). Process header:; HEAD -> (gzip) or (zlib) or (raw); (gzip) -> FLAGS -> TIME -> OS -> EXLEN -> EXTRA -> NAME -> COMMENT ->; HCRC -> TYPE; (zlib) -> DICTID or TYPE; DICTID -> DICT -> TYPE; (raw) -> TYPEDO; Read deflate blocks:; TYPE -> TYPEDO -> STORED or TABLE or LEN_ or CHECK; STORED -> COPY_ -> COPY -> TYPE; TABLE -> LENLENS -> CODELENS -> LEN_; LEN_ -> LEN; Read deflate codes in fixed or dynamic block:; LEN -> LENEXT or LIT or TYPE; LENEXT -> DIST -> DISTEXT -> MATCH -> LEN; LIT -> LEN; Process trailer:; CHECK -> LENGTH -> DONE; */; /* state maintained between inflate() calls. Approximately 10K bytes. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h:81,error,error,81,builtins/zlib/inflate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h,1,['error'],['error']
Availability,"/*; TEST(ONNX, ConvTranspose3d); {; constexpr float TOLERANCE = DEFAULT_TOLERANCE;. // Preparing the standard all-ones input; std::vector<float> input(8);; std::iota(input.begin(), input.end(), 0.0f);; TMVA_SOFIE_ConvTranspose3d::Session s(""ConvTranspose3d_FromONNX.dat"");; std::vector<float> output(s.infer(input.data()));. // Checking output size; EXPECT_EQ(output.size(), sizeof(ConvTranspose3d_ExpectedOutput::output) / sizeof(float));. float *correct = ConvTranspose3d_ExpectedOutput::output;. // Checking every output value, one by one; for (size_t i = 0; i < output.size(); ++i) {; EXPECT_LE(std::abs(output[i] - correct[i]), TOLERANCE);; }; }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/test/TestCustomModelsFromONNX.cxx:52,TOLER,TOLERANCE,52,tmva/sofie/test/TestCustomModelsFromONNX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/test/TestCustomModelsFromONNX.cxx,2,['TOLER'],['TOLERANCE']
Availability,"/*; TEST(ROOT, Linear32); {; constexpr float TOLERANCE = DEFAULT_TOLERANCE;. // Preparing the standard all-ones input; std::vector<float> input(3200);; std::fill_n(input.data(), input.size(), 1.0f);; TMVA_SOFIE_Linear_32::Session s(""Linear_32_FromROOT.dat"");; std::vector<float> output = s.infer(input.data());. // Testing the actual and expected output sizes; EXPECT_EQ(output.size(), sizeof(Linear_32_ExpectedOutput::all_ones) / sizeof(float));. float *correct = Linear_32_ExpectedOutput::all_ones;. // Testing the actual and expected output values; for (size_t i = 0; i < output.size(); ++i) {; EXPECT_LE(std::abs(output[i] - correct[i]), TOLERANCE);; }; }. TEST(ROOT, Linear64); {; constexpr float TOLERANCE = DEFAULT_TOLERANCE;. // Preparing the standard all-ones input; std::vector<float> input(6400);; std::fill_n(input.data(), input.size(), 1.0f);; TMVA_SOFIE_Linear_64::Session s(""Linear_64_FromROOT.dat"");; std::vector<float> output = s.infer(input.data());. // Testing the actual and expected output values; EXPECT_EQ(output.size(), sizeof(Linear_64_ExpectedOutput::all_ones) / sizeof(float));. float *correct = Linear_64_ExpectedOutput::all_ones;. // Testing the actual and expected output values; for (size_t i = 0; i < output.size(); ++i) {; EXPECT_LE(std::abs(output[i] - correct[i]), TOLERANCE);; }; }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/test/TestCustomModelsFromROOT.cxx:45,TOLER,TOLERANCE,45,tmva/sofie/test/TestCustomModelsFromROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/test/TestCustomModelsFromROOT.cxx,4,['TOLER'],['TOLERANCE']
Availability,"/*; TH1* hSample = sample.GetHisto();; if( ! hSample ) {; std::cout << ""Error getting histogram for sample: ""; << sampName << std::endl;; throw -1;; }; sampleDir->cd();; hSample->Write();. sample.InputFile = OutputFileName;; sample.HistoName = hSample->GetName();; sample.HistoPath = sampleDirPath;; */; // Write the histograms associated with; // systematics; /* THIS IS WHAT I""M COMMENTING; sample.GetStatError().writeToFile( OutputFileName, sampleDirPath );. // Must write all systematics that contain internal histograms; // (This is not all systematics). for( unsigned int i = 0; i < sample.GetHistoSysList().size(); ++i ) {; sample.GetHistoSysList().at(i).writeToFile( OutputFileName, sampleDirPath );; }; for( unsigned int i = 0; i < sample.GetHistoFactorList().size(); ++i ) {; sample.GetHistoFactorList().at(i).writeToFile( OutputFileName, sampleDirPath );; }; for( unsigned int i = 0; i < sample.GetShapeSysList().size(); ++i ) {; sample.GetShapeSysList().at(i).writeToFile( OutputFileName, sampleDirPath );; }; END COMMENT */; /*; sample.statError.writeToFile( OutputFileName, sampleDirPath );. // Now, get the Stat config histograms; if( sample.statError.HistoName != """" ) {; TH1* hStatError = sample.statError.GetErrorHist();; if( ! hStatError ) {; std::cout << ""Error getting stat error histogram for sample: ""; << sampName << std::endl;; throw -1;; }; hStatError->Write();. sample.statError.InputFile = OutputFileName;; sample.statError.HistoName = hStatError->GetName();; sample.statError.HistoPath = sampleDirPath;. }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:72,Error,Error,72,roofit/histfactory/src/Measurement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx,3,"['Error', 'error']","['Error', 'error']"
Availability,"/*; TMessage msg(kPROOF_GETOUTPUTLIST);; TList* slaves = fActiveSlaves;; Broadcast(msg, slaves);; TMonitor mon;; TList* outputList = new TList();. TIter si(slaves);; TSlave *slave;; while ((slave = (TSlave*)si.Next()) != 0) {; PDB(kGlobal,4) Info(""GetOutputNames"",""Socket added to monitor: %p (%s)"",; slave->GetSocket(), slave->GetName());; mon.Add(slave->GetSocket());; }; mon.ActivateAll();; ((TProof*)gProof)->DeActivateAsyncInput();; ((TProof*)gProof)->fCurrentMonitor = &mon;. while (mon.GetActive() != 0) {; TSocket *sock = mon.Select();; if (!sock) {; Error(""GetOutputList"",""TMonitor::.Select failed!"");; break;; }; mon.DeActivate(sock);; TMessage *reply;; if (sock->Recv(reply) <= 0) {; MarkBad(slave, ""receive failed after kPROOF_GETOUTPUTLIST request"");; // Error(""GetOutputList"",""Recv failed! for slave-%d (%s)"",; // slave->GetOrdinal(), slave->GetName());; continue;; }; if (reply->What() != kPROOF_GETOUTPUTNAMES ) {; // Error(""GetOutputList"",""unexpected message %d from slawe-%d (%s)"", reply->What(),; // slave->GetOrdinal(), slave->GetName());; MarkBad(slave, ""wrong reply to kPROOF_GETOUTPUTLIST request"");; continue;; }; TList* l;. (*reply) >> l;; TIter next(l);; TNamed *n;; while ( (n = dynamic_cast<TNamed*> (next())) ) {; if (!outputList->FindObject(n->GetName())); outputList->Add(n);; }; delete reply;; }; ((TProof*)gProof)->fCurrentMonitor = 0;. return outputList;; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:559,Error,Error,559,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,3,['Error'],['Error']
Availability,/*; This function Gets the next tag from teh input file stream; file - the open input stream; out - we return the tag through that parameter; lineCount - we are counting the line numbers here in order to print error messages in case of an error; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:210,error,error,210,core/dictgen/src/XMLReader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx,2,['error'],['error']
Availability,"/*; This function returns two values, one in the lower 16 bits of the return; value, and the other in the remaining upper bits, obtained by shifting the; return value down 16 bits. If the upper value is -1 and the lower value is; zero, then inflate() is currently decoding information outside of a block.; If the upper value is -1 and the lower value is non-zero, then inflate is in; the middle of a stored block, with the lower value equaling the number of; bytes from the input remaining to copy. If the upper value is not -1, then; it is the number of bits back from the current bit position in the input of; the code (literal or length/distance pair) currently being processed. In; that case the lower value is the number of bytes already emitted for that; code. A code is being processed if inflate is waiting for more input to complete; decoding of the code, or if it has completed decoding but is waiting for; more output space to write the literal or match data. inflateMark() is used to mark locations in the input data for random; access, which may be at bit positions, and to note those cases where the; output of a code may span boundaries of random access blocks. The current; location in the input stream can be determined from avail_in and data_type; as noted in the description for the Z_BLOCK flush parameter for inflate. inflateMark returns the value noted above or -1 << 16 if the provided; source stream state was inconsistent.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:167,down,down,167,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['down'],['down']
Availability,"/*; ToDo list for expanding this check in the future, the list is not exhaustive.; There are also cases where calling super is suggested but not ""mandatory"".; In addition to be able to check the classes and methods below, architectural; improvements like being able to allow for the super-call to be done in a called; method would be good too. UIDocument subclasses; - finishedHandlingError:recovered: (is multi-arg); - finishedHandlingError:recovered: (is multi-arg). UIViewController subclasses; - loadView (should *never* call super); - transitionFromViewController:toViewController:; duration:options:animations:completion: (is multi-arg). UICollectionViewController subclasses; - loadView (take care because UIViewController subclasses should NOT call super; in loadView, but UICollectionViewController subclasses should). NSObject subclasses; - doesNotRecognizeSelector (it only has to call super if it doesn't throw). UIPopoverBackgroundView subclasses (some of those are class methods); - arrowDirection (should *never* call super); - arrowOffset (should *never* call super); - arrowBase (should *never* call super); - arrowHeight (should *never* call super); - contentViewInsets (should *never* call super). UITextSelectionRect subclasses (some of those are properties); - rect (should *never* call super); - range (should *never* call super); - writingDirection (should *never* call super); - isVertical (should *never* call super); - containsStart (should *never* call super); - containsEnd (should *never* call super); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCMissingSuperCallChecker.cpp:391,recover,recovered,391,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCMissingSuperCallChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCMissingSuperCallChecker.cpp,2,['recover'],['recovered']
Availability,"/*; Update a running Adler-32 checksum with the bytes buf[0..len-1] and; return the updated checksum. If buf is NULL, this function returns; the required initial value for the checksum.; An Adler-32 checksum is almost as reliable as a CRC32 but can be computed; much faster. Usage example:. uLong adler = adler32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; adler = adler32(adler, buffer, length);; }; if (adler != original_adler) error();; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:221,reliab,reliable,221,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,2,"['error', 'reliab']","['error', 'reliable']"
Availability,"/*; Update a running Adler-32 checksum with the bytes buf[0..len-1] and; return the updated checksum. If buf is Z_NULL, this function returns the; required initial value for the checksum. An Adler-32 checksum is almost as reliable as a CRC32 but can be computed; much faster. Usage example:. uLong adler = adler32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; adler = adler32(adler, buffer, length);; }; if (adler != original_adler) error();; */; /*; ZEXTERN uLong ZEXPORT adler32_combine OF((uLong adler1, uLong adler2,; z_off_t len2));. Combine two Adler-32 checksums into one. For two sequences of bytes, seq1; and seq2 with lengths len1 and len2, Adler-32 checksums were calculated for; each, adler1 and adler2. adler32_combine() returns the Adler-32 checksum of; seq1 and seq2 concatenated, requiring only adler1, adler2, and len2. Note; that the z_off_t type (like off_t) is a signed integer. If len2 is; negative, the result has no meaning or utility.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:222,reliab,reliable,222,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,2,"['error', 'reliab']","['error', 'reliable']"
Availability,"/*; Update a running CRC-32 with the bytes buf[0..len-1] and return the; updated CRC-32. If buf is NULL, this function returns the required initial; value for the for the crc. Pre- and post-conditioning (one's complement) is; performed within this function so it shouldn't be done by the application.; Usage example:. uLong crc = crc32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; crc = crc32(crc, buffer, length);; }; if (crc != original_crc) error();; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:462,error,error,462,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability,"/*; Update a running CRC-32 with the bytes buf[0..len-1] and return the; updated CRC-32. If buf is Z_NULL, this function returns the required; initial value for the crc. Pre- and post-conditioning (one's complement) is; performed within this function so it shouldn't be done by the application. Usage example:. uLong crc = crc32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; crc = crc32(crc, buffer, length);; }; if (crc != original_crc) error();; */; /*; ZEXTERN uLong ZEXPORT crc32_combine OF((uLong crc1, uLong crc2, z_off_t len2));. Combine two CRC-32 check values into one. For two sequences of bytes,; seq1 and seq2 with lengths len1 and len2, CRC-32 check values were; calculated for each, crc1 and crc2. crc32_combine() returns the CRC-32; check value of seq1 and seq2 concatenated, requiring only crc1, crc2, and; len2.; */; /* various hacks, don't look :) */; /* deflateInit and inflateInit are macros to allow checking the zlib version; * and the compiler's view of z_stream:; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:455,error,error,455,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['error'],['error']
Availability,"/*; Writes c, converted to an unsigned char, into the compressed file. gzputc; returns the value that was written, or -1 in case of error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:132,error,error,132,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['error'],['error']
Availability,"/*; Writes c, converted to an unsigned char, into the compressed file.; gzputc returns the value that was written, or -1 in case of error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:132,error,error,132,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability,"/*; Writes the given null-terminated string to the compressed file, excluding; the terminating null character. gzputs returns the number of characters written, or -1 in case of error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:177,error,error,177,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['error'],['error']
Availability,"/*; Writes the given null-terminated string to the compressed file, excluding; the terminating null character.; gzputs returns the number of characters written, or -1 in case of error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:178,error,error,178,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability,/*; Writes the given number of uncompressed bytes into the compressed file.; gzwrite returns the number of uncompressed bytes actually written; (0 in case of error).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:158,error,error,158,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability,/*; Writes the given number of uncompressed bytes into the compressed file.; gzwrite returns the number of uncompressed bytes written or 0 in case of; error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:151,error,error,151,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['error'],['error']
Availability,"/*; deflatePending() returns the number of bytes and bits of output that have; been generated, but not yet provided in the available output. The bytes not; provided would be due to the available output space having being consumed.; The number of bits of output not provided are between 0 and 7, where they; await more bits to join them in order to fill out a full byte. If pending; or bits are Z_NULL, then those values are not set. deflatePending returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:123,avail,available,123,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,2,['avail'],['available']
Availability,"/*; deflateSetHeader() provides gzip header information for when a gzip; stream is requested by deflateInit2(). deflateSetHeader() may be called; after deflateInit2() or deflateReset() and before the first call of; deflate(). The text, time, os, extra field, name, and comment information; in the provided gz_header structure are written to the gzip header (xflag is; ignored -- the extra flags are set according to the compression level). The; caller must assure that, if not Z_NULL, name and comment are terminated with; a zero byte, and that if extra is not Z_NULL, that extra_len bytes are; available there. If hcrc is true, a gzip header crc is included. Note that; the current versions of the command-line version of gzip (up through version; 1.3.x) do not support header crc's, and will report that it is a ""multi-part; gzip file"" and give up. If deflateSetHeader is not used, the default gzip header has text false,; the time set to zero, and os set to 255, with no extra, name, or comment; fields. The gzip header is returned to the default state by deflateReset(). deflateSetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateInit2 OF((z_streamp strm,; int windowBits));. This is another version of inflateInit with an extra parameter. The; fields next_in, avail_in, zalloc, zfree and opaque must be initialized; before by the caller. The windowBits parameter is the base two logarithm of the maximum window; size (the size of the history buffer). It should be in the range 8..15 for; this version of the library. The default value is 15 if inflateInit is used; instead. windowBits must be greater than or equal to the windowBits value; provided to deflateInit2() while compressing, or it must be equal to 15 if; deflateInit2() was not used. If a compressed stream with a larger window; size is given as input, inflate() will return with the error code; Z_DATA_ERROR instead of trying to allocate a larger wind",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:595,avail,available,595,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,2,['avail'],['available']
Availability,"/*; if (!TClassTable::GetDict("" TRecCmdEvent"")) {; Error(""TRecorderInactive::List"", "" TRecCmdEvent not in dictionary."");; return;; }*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx:51,Error,Error,51,gui/recorder/src/TRecorder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx,1,['Error'],['Error']
Availability,"/*; if (!TClassTable::GetDict(""TRecGuiEvent"")) {; Error(""TRecorderInactive::ListGui"",; ""TRecGuiEvent not in the dictionary."");; return;; }*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx:50,Error,Error,50,gui/recorder/src/TRecorder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx,1,['Error'],['Error']
Availability,"/*; if (GetAbsLast() == -1 || fSorted) return;; for (Int_t i = 0; i < fSize; i++); if (fUIDs[i]) {; if (!fUIDs[i]->IsSortable()) {; Error(""Sort"", ""objects in array are not sortable"");; return;; }; }. QSort(fUIDs, 0, TMath::Min(fSize, upto-fLowerBound));. fLast = -2;; fSorted = kTRUE;; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx:132,Error,Error,132,core/cont/src/TRefArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx,1,['Error'],['Error']
Availability,"/*; if( attrVal == """" ) {; cxcoutEHF << ""Error: Attribute 'NormalizeByTheory' in Sample has no value"" << std::endl;; throw hf_exc();; }; else if ( attrVal == ""True"" || attrVal == ""true"" ) sample.NormalizeByTheory = true;; else if ( attrVal == ""False"" || attrVal == ""false"" ) sample.NormalizeByTheory = false;; else {; cxcoutEHF << ""Error: Attribute 'NormalizeByTheory' in Sample has unknown value: "" << attrVal << std::endl;; std::cout << ""Value must be 'True' or 'False' "" << std::endl;; throw hf_exc();; }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:41,Error,Error,41,roofit/histfactory/src/ConfigParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx,2,['Error'],['Error']
Availability,"/*; inflate() uses a state machine to process as much input data and generate as; much output data as possible before returning. The state machine is; structured roughly as follows:. for (;;) switch (state) {; ...; case STATEn:; if (not enough input data or output space to make progress); return;; ... make progress ...; state = STATEm;; break;; ...; }. so when inflate() is called again, the same case is attempted again, and; if the appropriate resources are provided, the machine proceeds to the; next state. The NEEDBITS() macro is usually the way the state evaluates; whether it can proceed or should return. NEEDBITS() does the return if; the requested bits are not available. The typical use of the BITS macros; is:. NEEDBITS(n);; ... do something with BITS(n) ...; DROPBITS(n);. where NEEDBITS(n) either returns from inflate() if there isn't enough; input left to load n bits into the accumulator, or it continues. BITS(n); gives the low n bits in the accumulator. When done, DROPBITS(n) drops; the low n bits off the accumulator. INITBITS() clears the accumulator; and sets the number of available bits to zero. BYTEBITS() discards just; enough bits to put the accumulator on a byte boundary. After BYTEBITS(); and a NEEDBITS(8), then BITS(8) would return the next byte in the stream. NEEDBITS(n) uses PULLBYTE() to get an available byte of input, or to return; if there is no input available. The decoding of variable length codes uses; PULLBYTE() directly in order to pull just enough bytes to decode the next; code, and no more. Some states loop until they get enough input, making sure that enough; state information is maintained to continue the loop where it left off; if NEEDBITS() returns in the loop. For example, want, need, and keep; would all have to actually be part of the saved state in case NEEDBITS(); returns:. case STATEw:; while (want < need) {; NEEDBITS(n);; keep[want++] = BITS(n);; DROPBITS(n);; }; state = STATEx;; case STATEx:. As shown above, if the next state is a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:673,avail,available,673,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,2,['avail'],['available']
Availability,/*; let can_refresh = true;. for (let k=0;k<arr.length;++k) {; let moditem = arr[k];. this.geo.ClonedNodes.formatServerElement(moditem);. let item = this.geo_clones.nodes[moditem.id];. if (!item); return console.error('Fail to find item ' + moditem.id);. item.vis = moditem.vis;; item.matrix = moditem.matrix;. let dnode = this.originalCache ? this.originalCache[moditem.id] : null;. if (dnode) {; // here we can modify only node which was changed; dnode.title = moditem.name;; dnode.node_visible = moditem.vis != 0;; } else {; can_refresh = false;; }. if (!moditem.vis && this.geo_painter); this.geo_painter.removeDrawnNode(moditem.id);; }. if (can_refresh) {; this.model.refresh();; } else {; // rebuild complete tree for TreeBrowser; }; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:212,error,error,212,ui5/geom/controller/GeomViewer.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js,1,['error'],['error']
Availability,"/*; std::lock_guard<std::mutex> guard(fMutex);; if (tid >= fThreadSize) {; Error(""GetThreadData"", ""Thread id=%d bigger than maximum declared thread number %d. \nUse; TGeoManager::SetMaxThreads properly !!!"", tid, fThreadSize);; }; if (tid >= fThreadSize); {; fThreadData.resize(tid + 1);; fThreadSize = tid + 1;; }; if (fThreadData[tid] == 0); {; if (fThreadData[tid] == 0); fThreadData[tid] = new ThreadData_t;; }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx:75,Error,Error,75,geom/geom/src/TGeoBoolNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx,1,['Error'],['Error']
Availability,"/*; std::vector<TString>::const_iterator variter = varnames.begin();; std::cout << ""Available variables:"" << std::endl;; while(variter != varnames.end()){; std::cout << *variter << std::endl;; variter++;; }; ; std::vector<TString>::const_iterator classiter = classnames.begin();; std::cout << ""Available classes:"" << std::endl;; while(classiter != classnames.end()){; std::cout << *classiter << std::endl;; classiter++;; }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmvagui/src/variablesMultiClass.cxx:84,Avail,Available,84,tmva/tmvagui/src/variablesMultiClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmvagui/src/variablesMultiClass.cxx,2,['Avail'],['Available']
Availability,"/*; strm provides the memory allocation functions and window buffer on input,; and provides information on the unused input on return. For Z_DATA_ERROR; returns, strm will also provide an error message. in() and out() are the call-back input and output functions. When; inflateBack() needs more input, it calls in(). When inflateBack() has; filled the window with output, or when it completes with data in the; window, it calls out() to write out the data. The application must not; change the provided input until in() is called again or inflateBack(); returns. The application must not change the window/output buffer until; inflateBack() returns. in() and out() are called with a descriptor parameter provided in the; inflateBack() call. This parameter can be a structure that provides the; information required to do the read or write, as well as accumulated; information on the input and output such as totals and check values. in() should return zero on failure. out() should return non-zero on; failure. If either in() or out() fails, than inflateBack() returns a; Z_BUF_ERROR. strm->next_in can be checked for Z_NULL to see whether it; was in() or out() that caused in the error. Otherwise, inflateBack(); returns Z_STREAM_END on success, Z_DATA_ERROR for an deflate format; error, or Z_MEM_ERROR if it could not allocate memory for the state.; inflateBack() can also return Z_STREAM_ERROR if the input parameters; are not correct, i.e. strm is Z_NULL or the state was not initialized.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c:188,error,error,188,builtins/zlib/infback.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c,10,"['error', 'failure']","['error', 'failure']"
Availability,/*< Write log to stderr; 0 = none (default); 1 = errors; 2 = progression; 3 = details; 4 = debug; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:49,error,errors,49,builtins/zstd/zdict.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h,1,['error'],['errors']
Availability,/*=== Error Management ===*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/entropy_common.c:6,Error,Error,6,builtins/zstd/common/entropy_common.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/entropy_common.c,1,['Error'],['Error']
Availability,/*===-- Error handling ----------------------------------------------------===*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:8,Error,Error,8,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,2,['Error'],['Error']
Availability,"/*===-- clang-c/CXErrorCode.h - C Index Error Codes --------------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header provides the CXErrorCode enumerators. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h:40,Error,Error,40,interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h,1,['Error'],['Error']
Availability,"/*===-- clang-c/FatalErrorHandler.cpp - Fatal Error Handling ------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/FatalErrorHandler.cpp:46,Error,Error,46,interpreter/llvm-project/clang/tools/libclang/FatalErrorHandler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/FatalErrorHandler.cpp,1,['Error'],['Error']
Availability,"/*===-- clang-c/FatalErrorHandler.h - Fatal Error Handling --------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h:44,Error,Error,44,interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h,1,['Error'],['Error']
Availability,"/*===-- llvm-c/ErrorHandling.h - Error Handling C Interface -------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This file defines the C interface to LLVM's error handling mechanism. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/ErrorHandling.h:15,Error,ErrorHandling,15,interpreter/llvm-project/llvm/include/llvm-c/ErrorHandling.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/ErrorHandling.h,3,"['Error', 'error']","['Error', 'ErrorHandling', 'error']"
Availability,"/*===---- builtins.h - Standard header for extra builtins -----------------===*\; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; \*===----------------------------------------------------------------------===*/; /// Some legacy compilers have builtin definitions in a file named builtins.h.; /// This header file has been added to allow compatibility with code that was; /// written for those compilers. Code may have an include line for this file; /// and to avoid an error an empty file with this name is provided.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/builtins.h:628,error,error,628,interpreter/llvm-project/clang/lib/Headers/builtins.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/builtins.h,1,['error'],['error']
Availability,"/*===---- openmp_wrapper/math.h -------- OpenMP math.h intercept ------ c++ -===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */; // If we are in C++ mode and include <math.h> (not <cmath>) first, we still need; // to make sure <cmath> is read first. The problem otherwise is that we haven't; // seen the declarations of the math.h functions when the system math.h includes; // our cmath overlay. However, our cmath overlay, or better the underlying; // overlay, e.g. CUDA, uses the math.h functions. Since we haven't declared them; // yet we get errors. CUDA avoids this by eagerly declaring all math functions; // (in the __device__ space) but we cannot do this. Instead we break the; // dependence by forcing cmath to go first. While our cmath will in turn include; // this file, the cmath guards will prevent recursion.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/openmp_wrappers/math.h:790,error,errors,790,interpreter/llvm-project/clang/lib/Headers/openmp_wrappers/math.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/openmp_wrappers/math.h,1,['error'],['errors']
Availability,"/*===------- llvm-c/Error.h - llvm::Error class C Interface -------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This file defines the C interface to LLVM's Error class. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h:20,Error,Error,20,interpreter/llvm-project/llvm/include/llvm-c/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h,3,['Error'],['Error']
Availability,"/*===== Streaming decompression functions =====*/; /* This function is redundant with the advanced API and equivalent to:; *; * ZSTD_DCtx_reset(zds, ZSTD_reset_session_only);; * ZSTD_DCtx_refDDict(zds, NULL);; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:71,redundant,redundant,71,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['redundant'],['redundant']
Availability,/*@available*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp:3,avail,available,3,interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp,1,['avail'],['available']
Availability,/*AvailabilityArgsMatch*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/ObjCMT.cpp:2,Avail,AvailabilityArgsMatch,2,interpreter/llvm-project/clang/lib/ARCMigrate/ObjCMT.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/ObjCMT.cpp,1,['Avail'],['AvailabilityArgsMatch']
Availability,/*ErrorOnInvalidMessage=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:2,Error,ErrorOnInvalidMessage,2,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,2,['Error'],['ErrorOnInvalidMessage']
Availability,/*ErrorOnTagTypeMismatch =*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp:2,Error,ErrorOnTagTypeMismatch,2,interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,2,['Error'],['ErrorOnTagTypeMismatch']
Availability,/*ErrorOnTagTypeMismatch*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:2,Error,ErrorOnTagTypeMismatch,2,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['Error'],['ErrorOnTagTypeMismatch']
Availability,/*ErrorOnTagTypeMismatch=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp:2,Error,ErrorOnTagTypeMismatch,2,interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,1,['Error'],['ErrorOnTagTypeMismatch']
Availability,/*ErrorRecovery*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:2,Error,ErrorRecovery,2,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,2,['Error'],['ErrorRecovery']
Availability,/*ErrorType=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp:2,Error,ErrorType,2,interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp,1,['Error'],['ErrorType']
Availability,/*Mask*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:2,Mask,Mask,2,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,7,['Mask'],['Mask']
Availability,/*Mask=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp:2,Mask,Mask,2,interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp,2,['Mask'],['Mask']
Availability,/*MaskAgnostic*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp:2,Mask,MaskAgnostic,2,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp,1,['Mask'],['MaskAgnostic']
Availability,/*Masked*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ReplaceWithVeclib.cpp:2,Mask,Masked,2,interpreter/llvm-project/llvm/lib/CodeGen/ReplaceWithVeclib.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ReplaceWithVeclib.cpp,2,['Mask'],['Masked']
Availability,/*NB: Making this a delegating constructor led to linker errors with MSVC*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooArgList.h:57,error,errors,57,roofit/roofitcore/inc/RooArgList.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooArgList.h,2,['error'],['errors']
Availability,/*Recover*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:2,Recover,Recover,2,interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp,3,['Recover'],['Recover']
Availability,/*RecoverUncorrectedTypos=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp:2,Recover,RecoverUncorrectedTypos,2,interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp,9,['Recover'],['RecoverUncorrectedTypos']
Availability,/*RecoverableErrorHandler=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-gsymutil/llvm-gsymutil.cpp:2,Recover,RecoverableErrorHandler,2,interpreter/llvm-project/llvm/tools/llvm-gsymutil/llvm-gsymutil.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-gsymutil/llvm-gsymutil.cpp,1,['Recover'],['RecoverableErrorHandler']
Availability,/*Source='availability attribute'*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp:10,avail,availability,10,interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,1,['avail'],['availability']
Availability,"/*TEST(ONNX, Linear32RootFeature); {; constexpr float TOLERANCE = DEFAULT_TOLERANCE;. // Preparing the standard all-ones input; std::vector<float> input(3200);; std::fill_n(input.data(), input.size(), 1.0f);; TMVA_SOFIE_Linear32RootFeacture::Session s(""Linear_32_FromONNX.root"");; std::vector<float> output = s.infer(input.data());. // Checking output size; EXPECT_EQ(output.size(), sizeof(Linear_32_ExpectedOutput::all_ones) / sizeof(float));. float *correct = Linear_32_ExpectedOutput::all_ones;. // Checking every output value, one by one; for (size_t i = 0; i < output.size(); ++i) {; EXPECT_LE(std::abs(output[i] - correct[i]), TOLERANCE);; }; }*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/test/TestCustomModelsFromONNX.cxx:54,TOLER,TOLERANCE,54,tmva/sofie/test/TestCustomModelsFromONNX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/test/TestCustomModelsFromONNX.cxx,2,['TOLER'],['TOLERANCE']
Availability,"/*error = testIdentity<TCpu<Scalar_t>>();; std::cout << ""Identity: Maximum relative error = "" << error << std::endl;; maximumError = std::max(error, maximumError);*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestTensorDataLoaderCpu.cxx:2,error,error,2,tmva/tmva/test/DNN/TestTensorDataLoaderCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestTensorDataLoaderCpu.cxx,4,['error'],['error']
Availability,"/*error = testIdentity<TCuda<Scalar_t>>();; std::cout << ""Identity: Maximum relative error = "" << error << std::endl;; maximumError = std::max(error, maximumError);*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestTensorDataLoaderCudnn.cxx:2,error,error,2,tmva/tmva/test/DNN/TestTensorDataLoaderCudnn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestTensorDataLoaderCudnn.cxx,4,['error'],['error']
Availability,"/*error = testIdentity<TReference<Scalar_t>>();; std::cout << ""Identity: Maximum relative error = "" << error << std::endl;; maximumError = std::max(error, maximumError);*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestTensorDataLoader.cxx:2,error,error,2,tmva/tmva/test/DNN/TestTensorDataLoader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestTensorDataLoader.cxx,4,['error'],['error']
Availability,"/*error = testReciprocalElementWise<TCudnn<Double_t>>(1);; std::cout << ""Reciprocal ElementWise: ""; << ""Max. rel. error: "" << error << std::endl;; if (error > 1e-3); return 1;*/; /*error = testSquareElementWise<TCudnn<Double_t>>(1);; std::cout << ""Square ElementWise: ""; << ""Max. rel. error: "" << error << std::endl;; if (error > 1e-3); return 1;*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMatrixArithmeticCudnn.cxx:2,error,error,2,tmva/tmva/test/DNN/TestMatrixArithmeticCudnn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMatrixArithmeticCudnn.cxx,8,['error'],['error']
Availability,"/*error = testReciprocalElementWise<TCudnn<Real_t>>(1);; std::cout << ""Reciprocal ElementWise: ""; << ""Max. rel. error: "" << error << std::endl;; if (error > 1e-1); return 1;*/; /*error = testSquareElementWise<TCudnn<Real_t>>(1);; std::cout << ""Square ElementWise: ""; << ""Max. rel. error: "" << error << std::endl;; if (error > 1e-1); return 1;*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMatrixArithmeticCudnn.cxx:2,error,error,2,tmva/tmva/test/DNN/TestMatrixArithmeticCudnn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMatrixArithmeticCudnn.cxx,8,['error'],['error']
Availability,"/*error = testScaleAdd();; std::cout << ""Testing scale_add: max. rel. error = "";; std::cout << error << std::endl;*/; /*error = testHadamard();; std::cout << ""Testing hadamard: max. rel. error = "";; std::cout << error << std::endl;*/; /*error = testMultiply();; std::cout << ""Testing multiplication: max. rel. error = "";; std::cout << error << std::endl;*/; /*error = testAddRowWise();; std::cout << ""Testing add_row_wise: max. rel. error = "";; std::cout << error << std::endl;*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestCudnn.cxx:2,error,error,2,tmva/tmva/test/DNN/TestCudnn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestCudnn.cxx,12,['error'],['error']
Availability,"/*error = testSumColumns<TCudnn<Double_t>>(1);; std::cout << ""Column Sum: ""; << ""Max. rel. error: "" << error << std::endl;; if (error > 1e-3); return 1;*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMatrixArithmeticCudnn.cxx:2,error,error,2,tmva/tmva/test/DNN/TestMatrixArithmeticCudnn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMatrixArithmeticCudnn.cxx,4,['error'],['error']
Availability,"/*error = testSumColumns<TCudnn<Real_t>>(1);; std::cout << ""Column Sum: ""; << ""Max. rel. error: "" << error << std::endl;; if (error > 1e-1); return 1;*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMatrixArithmeticCudnn.cxx:2,error,error,2,tmva/tmva/test/DNN/TestMatrixArithmeticCudnn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMatrixArithmeticCudnn.cxx,4,['error'],['error']
Availability,/*error*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h:2,error,error,2,core/meta/inc/TMethodCall.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h,10,['error'],['error']
Availability,/*failure=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:2,failure,failure,2,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['failure'],['failure']
Availability,"/*for (size_t j = 0; j < n; j++) {; //std::cout << B(0,j) << "" / "" << j * m << std::endl;; error = std::abs(B(0,j) - m);; maximumError = std::max(error, maximumError);; }*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestCudnn.cxx:91,error,error,91,tmva/tmva/test/DNN/TestCudnn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestCudnn.cxx,2,['error'],['error']
Availability,"/*fprintf( stderr, ""checking out visual ID %d, class %d, depth = %d mask = %X,%X,%X\n"", list[k].visualid, list[k].class, list[k].depth, list[k].red_mask, list[k].green_mask, list[k].blue_mask 	);*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.c:68,mask,mask,68,graf2d/asimage/src/libAfterImage/asvisual.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.c,1,['mask'],['mask']
Availability,"/*fprintf( stderr, ""error at line %d, CrntCode = %d, Private->RunningCode - 2 = %d\n"", __LINE__, CrntCode, Private->RunningCode - 2 ); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c:20,error,error,20,graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c,1,['error'],['error']
Availability,"/*fprintf( stderr, ""scaling glyph down from %d to %d\n"", from_width, to_width );*/; /* LOCAL_DEBUG_OUT( ""smaller %d, bigger %d, eps %d"", smaller, bigger, eps ); */; /* now using Bresengham algoritm to fiill the scales :; 	 * since scaling is merely transformation; 	 * from 0:bigger space (x) to 0:smaller space(y)*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.c:34,down,down,34,graf2d/asimage/src/libAfterImage/asfont.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.c,1,['down'],['down']
Availability,"/*if(node->IsCollapsed()); {; //float r = (node->GetWidth() < node->GetHeight() ? 0.5 * node->GetWidth() : 0.5 * node->GetHeight());; //vol = gGeoManager->MakeTorus(node->GetName(),TStructNode::GetMedium(), 0.75*r, 0, r/4);. vol = gGeoManager->MakeBox(TString(node->GetName()) + ""up"",TStructNode::GetMedium(), 0.45*node->GetWidth(), 0.45*node->GetHeight(), (node->GetWidth() < node->GetHeight() ? 0.45 * node->GetWidth() : 0.45 * node->GetHeight()));; Double_t max = TMath::Max(0.22 * node->GetWidth(), 0.22 * node->GetHeight());; TGeoVolume* subvol = gGeoManager->MakeTrd2(node->GetName(), TStructNode::GetMedium(), 0, 0.45 * node->GetWidth(), 0, 0.45 * node->GetHeight(), max);; subvol->SetLineColor(GetColor(node));; subvol->SetNumber((Int_t)node);; TGeoTranslation* subtrans = new TGeoTranslation(""subtranslation"", 0, 0, -max);; vol->AddNodeOverlap(subvol, 1, subtrans);. subvol = gGeoManager->MakeTrd2(TString(node->GetName()) + ""down"", TStructNode::GetMedium(), 0.45 * node->GetWidth(), 0, 0.45 * node->GetHeight(), 0, max);; subvol->SetLineColor(GetColor(node));; subvol->SetNumber((Int_t)node);; subtrans = new TGeoTranslation(""subtranslation"", 0, 0, max);; vol->AddNodeOverlap(subvol, 1, subtrans);; }; else*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructViewerGUI.cxx:935,down,down,935,graf3d/gviz3d/src/TStructViewerGUI.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructViewerGUI.cxx,1,['down'],['down']
Availability,/*mask*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:2,mask,mask,2,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,4,['mask'],['mask']
Availability,"/*mask,fpsem*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp:2,mask,mask,2,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,1,['mask'],['mask']
Availability,/*tolerance*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveProjections.h:2,toler,tolerance,2,graf3d/eve/inc/TEveProjections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveProjections.h,2,['toler'],['tolerance']
Availability,"/*using Scalar_t = typename Architecture_t::Scalar_t;; using Net_t = TNet<Architecture_t>;; using TensorDataLoader_t = TTensorDataLoader<MatrixInput_t, Architecture_t>;. TMatrixT<Double_t> X(2000, 100), W(2000, 1);; randomMatrix(X);; randomMatrix(W);; MatrixInput_t input(X, X, W);; DataLoader_t loader(input, 2000, 20, 100, 100);. Net_t net(20, 100, ELossFunction::kMeanSquaredError);; net.AddLayer(100, EActivationFunction::kIdentity);; net.AddLayer(100, EActivationFunction::kIdentity);; net.Initialize(EInitialization::kIdentity);. Scalar_t maximumError = 0.0;; for (auto b : loader) {; auto inputMatrix = b.GetInput();; auto outputMatrix = b.GetOutput();; auto weightMatrix = b.GetWeights();; Scalar_t error = net.Loss(inputMatrix, outputMatrix, weightMatrix);; maximumError = std::max(error, maximumError);; }. return maximumError;*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestTensorDataLoader.h:707,error,error,707,tmva/tmva/test/DNN/TestTensorDataLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestTensorDataLoader.h,2,['error'],['error']
Availability,"// !_WIN32; // Generic POSIX implementation.; //; // This implementation relies on synchronous signals being delivered to the; // current thread. We use a thread local object to keep track of the active; // crash recovery context, and install signal handlers to invoke HandleCrash on; // the active object.; //; // This implementation does not attempt to chain signal handlers in any; // reliable fashion -- if we get a signal outside of a crash recovery context we; // simply disable crash recovery and raise the signal again.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CrashRecoveryContext.cpp:213,recover,recovery,213,interpreter/llvm-project/llvm/lib/Support/CrashRecoveryContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CrashRecoveryContext.cpp,4,"['recover', 'reliab']","['recovery', 'reliable']"
Availability,"// ""(a & mask) srl b)"" ---> ""BFE_U32 a, b, popcount(mask >> b)""; // Predicate: isMask(mask >> b)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelDAGToDAG.cpp:9,mask,mask,9,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelDAGToDAG.cpp,3,['mask'],['mask']
Availability,"// ""(a srl b) & mask"" ---> ""BFE_U32 a, b, popcount(mask)""; // Predicate: isMask(mask)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelDAGToDAG.cpp:16,mask,mask,16,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelDAGToDAG.cpp,3,['mask'],['mask']
Availability,"// "".err"" or "".error""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:15,error,error,15,interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,1,['error'],['error']
Availability,"// ""E"" Performs a better error evaluation, calling HESSE and MINOS",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Foption.h:25,error,error,25,hist/hist/inc/Foption.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Foption.h,1,['error'],['error']
Availability,"// ""EX0"" or ""T"" When fitting a TGraphErrors do not consider error in coordinates",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Foption.h:60,error,error,60,hist/hist/inc/Foption.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Foption.h,1,['error'],['error']
Availability,"// ""Effective variance"" method for projecting errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:46,error,errors,46,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['error'],['errors']
Availability,"// ""I"" was originally removed from a position where it was; // immediately in front of Pos. Any DPValues on that position then ""fell down""; // onto Pos. ""I"" has been re-inserted at the front of that wedge of DPValues,; // shuffle them around to represent the original positioning. To illustrate:; //; // Instructions: I1---I---I0; // DPValues: DDD DDD; //; // Instruction ""I"" removed,; //; // Instructions: I1------I0; // DPValues: DDDDDD; // ^Pos; //; // Instruction ""I"" re-inserted (now):; //; // Instructions: I1---I------I0; // DPValues: DDDDDD; // ^Pos; //; // After this method completes:; //; // Instructions: I1---I---I0; // DPValues: DDD DDD; // This happens if there were no DPValues on I0. Are there now DPValues there?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/BasicBlock.cpp:133,down,down,133,interpreter/llvm-project/llvm/lib/IR/BasicBlock.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/BasicBlock.cpp,1,['down'],['down']
Availability,"// ""Objective-C Class Properties"" is recently added for Objective-C. We; // upgrade ObjC bitcodes to contain a ""Objective-C Class Properties"" module; // flag of value 0, so we can correclty downgrade this flag when trying to; // link an ObjC bitcode without this module flag with an ObjC bitcode with; // this module flag.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:190,down,downgrade,190,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['down'],['downgrade']
Availability,"// ""P"" Use Pearson chi2 built with the expected error instead of the observed ones",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Foption.h:48,error,error,48,hist/hist/inc/Foption.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Foption.h,1,['error'],['error']
Availability,"// ""ROB"" or ""H"": For a TGraph use robust fitting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Foption.h:34,robust,robust,34,hist/hist/inc/Foption.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Foption.h,1,['robust'],['robust']
Availability,"// ""Tentative parsing"" functions, used for disambiguation. If a parsing error; // is encountered they will return TPResult::Error.; // Returning TPResult::True/False indicates that the ambiguity was; // resolved and tentative parsing may stop. TPResult::Ambiguous indicates; // that more tentative parsing is necessary for disambiguation.; // They all consume tokens, so backtracking should be used after calling them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Parse/Parser.h:72,error,error,72,interpreter/llvm-project/clang/include/clang/Parse/Parser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Parse/Parser.h,2,"['Error', 'error']","['Error', 'error']"
Availability,"// ""W"" Set all the weights to 1. Ignore error bars",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Foption.h:40,error,error,40,hist/hist/inc/Foption.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Foption.h,1,['error'],['error']
Availability,"// ""avx512.mask.loadu"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:11,mask,mask,11,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['mask'],['mask']
Availability,"// ""avx512.mask.loadu."" or ""avx512.mask.load.""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:11,mask,mask,11,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,2,['mask'],['mask']
Availability,"// ""avx512.mask.pcmpeq."" or ""avx512.mask.pcmpgt.""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:11,mask,mask,11,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,2,['mask'],['mask']
Availability,"// ""avx512.mask.storeu"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:11,mask,mask,11,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['mask'],['mask']
Availability,"// ""avx512.mask.storeu."" or ""avx512.mask.store.""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:11,mask,mask,11,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,2,['mask'],['mask']
Availability,"// ""echo""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp:4,echo,echo,4,interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,1,['echo'],['echo']
Availability,"// ""may be alive"" is set by lifetime start.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/StackLifetime.cpp:11,alive,alive,11,interpreter/llvm-project/llvm/lib/Analysis/StackLifetime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/StackLifetime.cpp,1,['alive'],['alive']
Availability,"// ""newValue"" indicates the ""newValue"" argument for a setter.; // There should only be one 'newValue', but it's only significant for; // subscript accessors, so don't error right away.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp:167,error,error,167,interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,1,['error'],['error']
Availability,"// #__include_macros has no effect on a user of a preprocessed source; // file; the only effect is on preprocessing.; //; // FIXME: That's not *quite* true: it causes the module in question to; // be loaded, which can affect downstream diagnostics.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/PrintPreprocessedOutput.cpp:225,down,downstream,225,interpreter/llvm-project/clang/lib/Frontend/PrintPreprocessedOutput.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/PrintPreprocessedOutput.cpp,1,['down'],['downstream']
Availability,// #error <message>,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:4,error,error,4,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['error'],['error']
Availability,"// #ifdef DEBUG; // std::cout << ""After MnPosdef - Error "" << s0.Error().InvHessian() << "" Gradient "" <<; // s0.Gradient().Vec() << "" step "" << step << std::endl;; // #endif",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/VariableMetricBuilder.cxx:51,Error,Error,51,math/minuit2/src/VariableMetricBuilder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/VariableMetricBuilder.cxx,2,['Error'],['Error']
Availability,"// $dst = srl (and $src, Mask), Shamt; // =>; // BSTRPICK $dst, $src, MaskIdx+MaskLen-1, Shamt; // when Mask is a shifted mask, and MaskIdx <= Shamt <= MaskIdx+MaskLen-1; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp:25,Mask,Mask,25,interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp,8,"['Mask', 'mask']","['Mask', 'MaskIdx', 'MaskLen-', 'mask']"
Availability,// 'Replace uses' doesn't work for stores. Erase the original masked store.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstCombineIntrinsic.cpp:62,mask,masked,62,interpreter/llvm-project/llvm/lib/Target/X86/X86InstCombineIntrinsic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstCombineIntrinsic.cpp,1,['mask'],['masked']
Availability,"// 'X - 1' sets the carry flag if X == 0.; // '0 - X' sets the carry flag if X != 0.; // Convert the carry flag to a -1/0 mask with sbb:; // select (X != 0), -1, Y --> 0 - X; or (sbb), Y; // select (X == 0), Y, -1 --> 0 - X; or (sbb), Y; // select (X != 0), Y, -1 --> X - 1; or (sbb), Y; // select (X == 0), -1, Y --> X - 1; or (sbb), Y",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:122,mask,mask,122,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,// 'availability' attribute.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Index/CommentToXML.cpp:4,avail,availability,4,interpreter/llvm-project/clang/lib/Index/CommentToXML.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Index/CommentToXML.cpp,1,['avail'],['availability']
Availability,// 'avx512.mask.*',MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:11,mask,mask,11,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['mask'],['mask']
Availability,// 'avx512.maskz.*',MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:11,mask,maskz,11,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['mask'],['maskz']
Availability,// 'error()',MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ReturnValueChecker.cpp:4,error,error,4,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ReturnValueChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ReturnValueChecker.cpp,1,['error'],['error']
Availability,"// 'template-id(' can be a valid expression but not a valid decl spec if; // the template-name is not declared, but we don't consider this to be a; // definitive disambiguation. In any other context, it's an error either; // way.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp:208,error,error,208,interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,1,['error'],['error']
Availability,"// ((%x << MaskedBits) a>> MaskedBits) != %x; // =>; // (add %x, (1 << (KeptBits-1))) u>= (1 << KeptBits)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:11,Mask,MaskedBits,11,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,2,['Mask'],['MaskedBits']
Availability,"// ((%x << MaskedBits) a>> MaskedBits) == %x; // =>; // (add %x, (1 << (KeptBits-1))) u< (1 << KeptBits)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:11,Mask,MaskedBits,11,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,2,['Mask'],['MaskedBits']
Availability,// ((-1 << MaskShAmt) l>> MaskShAmt),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp:11,Mask,MaskShAmt,11,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,2,['Mask'],['MaskShAmt']
Availability,// ((1 << MaskShAmt) - 1),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp:10,Mask,MaskShAmt,10,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,1,['Mask'],['MaskShAmt']
Availability,// ((X ^ B) & MaskC) | (B & ~MaskC) -> (X & MaskC) ^ B,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:14,Mask,MaskC,14,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,3,['Mask'],['MaskC']
Availability,// ((X | B) & MaskC) | (B & ~MaskC) -> (X & MaskC) | B,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:14,Mask,MaskC,14,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,3,['Mask'],['MaskC']
Availability,// (-1 l>> MaskShAmt),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp:11,Mask,MaskShAmt,11,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,1,['Mask'],['MaskShAmt']
Availability,"// (26.x.21.1) error function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncMathCore.cxx:15,error,error,15,math/mathcore/src/SpecFuncMathCore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncMathCore.cxx,1,['error'],['error']
Availability,"// (26.x.21.2) complementary error function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncMathCore.cxx:29,error,error,29,math/mathcore/src/SpecFuncMathCore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncMathCore.cxx,1,['error'],['error']
Availability,// (A & MaskC) | ((X ^ A) & ~MaskC) -> (X & ~MaskC) ^ A,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:8,Mask,MaskC,8,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,3,['Mask'],['MaskC']
Availability,// (A & MaskC) | ((X | A) & ~MaskC) -> (X & ~MaskC) | A,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:8,Mask,MaskC,8,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,3,['Mask'],['MaskC']
Availability,"// (Binop1 (Binop2 (logic_shift X, C), C1), (logic_shift Y, C)); // -> (logic_shift (Binop1 (Binop2 X, inv_logic_shift(C1, C)), Y), C); // (Binop1 (Binop2 (logic_shift X, Amt), Mask), (logic_shift Y, Amt)); // -> (BinOp (logic_shift (BinOp X, Y)), Mask)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineInternal.h:177,Mask,Mask,177,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineInternal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineInternal.h,2,['Mask'],['Mask']
Availability,"// (Binop1 (Binop2 (logic_shift X, C), C1), (logic_shift Y, C)); // IFF; // 1) the logic_shifts match; // 2) either both binops are binops and one is `and` or; // BinOp1 is `and`; // (logic_shift (inv_logic_shift C1, C), C) == C1 or; //; // -> (logic_shift (Binop1 (Binop2 X, inv_logic_shift(C1, C)), Y), C); //; // (Binop1 (Binop2 (logic_shift X, Amt), Mask), (logic_shift Y, Amt)); // IFF; // 1) the logic_shifts match; // 2) BinOp1 == BinOp2 (if BinOp == `add`, then also requires `shl`).; //; // -> (BinOp (logic_shift (BinOp X, Y)), Mask); //; // (Binop1 (Binop2 (arithmetic_shift X, Amt), Mask), (arithmetic_shift Y, Amt)); // IFF; // 1) Binop1 is bitwise logical operator `and`, `or` or `xor`; // 2) Binop2 is `not`; //; // -> (arithmetic_shift Binop1((not X), Y), Amt)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:354,Mask,Mask,354,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,3,['Mask'],['Mask']
Availability,"// (C++ 13.3.3.2p2): When comparing the basic forms of implicit; // conversion sequences (as defined in 13.3.3.1); // -- a standard conversion sequence (13.3.3.1.1) is a better; // conversion sequence than a user-defined conversion sequence or; // an ellipsis conversion sequence, and; // -- a user-defined conversion sequence (13.3.3.1.2) is a better; // conversion sequence than an ellipsis conversion sequence; // (13.3.3.1.3).; //; // C++0x [over.best.ics]p10:; // For the purpose of ranking implicit conversion sequences as; // described in 13.3.3.2, the ambiguous conversion sequence is; // treated as a user-defined sequence that is indistinguishable; // from any other user-defined conversion sequence.; // String literal to 'char *' conversion has been deprecated in C++03. It has; // been removed from C++11. We still accept this conversion, if it happens at; // the best viable function. Otherwise, this conversion is considered worse; // than ellipsis conversion. Consider this as an extension; this is not in the; // standard. For example:; //; // int &f(...); // #1; // void f(char*); // #2; // void g() { int &r = f(""foo""); }; //; // In C++03, we pick #2 as the best viable function.; // In C++11, we pick #1 as the best viable function, because ellipsis; // conversion is better than string-literal to char* conversion (since there; // is no such conversion in C++11). If there was no #1 at all or #1 couldn't; // convert arguments, #2 would be the best viable function in C++11.; // If the best viable function has this conversion, a warning will be issued; // in C++03, or an ExtWarn (+SFINAE failure) will be issued in C++11.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:1611,failure,failure,1611,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,1,['failure'],['failure']
Availability,// (Repeatedly) merging blocks into their predecessors can create redundant; // debug intrinsics.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:66,redundant,redundant,66,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['redundant'],['redundant']
Availability,// (Shadow & mask) >> scale,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemProfiler.cpp:13,mask,mask,13,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemProfiler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemProfiler.cpp,1,['mask'],['mask']
Availability,// (X & C) >u Mask --> (X & (C & (~Mask)) != 0; // (X & C) <u Pow2 --> (X & (C & ~(Pow2-1)) == 0,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:14,Mask,Mask,14,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,2,['Mask'],['Mask']
Availability,"// (X | C1) & C2 --> (X & C2^(C1&C2)) | (C1&C2); // NOTE: This reduces the number of bits set in the & mask, which; // can expose opportunities for store narrowing for scalars.; // NOTE: SimplifyDemandedBits should have already removed bits from C1; // that aren't set in C2. Meaning we can replace (C1&C2) with C1 in; // above, but this feels safer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:103,mask,mask,103,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,1,['mask'],['mask']
Availability,"// (and (lshr y, c2), mask)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/GISel/RISCVInstructionSelector.cpp:22,mask,mask,22,interpreter/llvm-project/llvm/lib/Target/RISCV/GISel/RISCVInstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/GISel/RISCVInstructionSelector.cpp,1,['mask'],['mask']
Availability,"// (and (shl x, c2), c1) will be matched to (srli (slli x, c2+c3), c3) if c1; // is a mask shifted by c2 bits with c3 leading zeros.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.cpp:86,mask,mask,86,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.cpp,1,['mask'],['mask']
Availability,"// (and (shl y, c2), mask)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/GISel/RISCVInstructionSelector.cpp:21,mask,mask,21,interpreter/llvm-project/llvm/lib/Target/RISCV/GISel/RISCVInstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/GISel/RISCVInstructionSelector.cpp,1,['mask'],['mask']
Availability,"// (and (srl (sexti32 Y), c2), c1) -> (srliw (sraiw Y, 31), c3 - 32); // if c1 is a mask with c3 leading zeros and c2 >= 32 and c3-c2==1.; //; // This pattern occurs when (i32 (srl (sra 31), c3 - 32)) is type; // legalized and goes through DAG combine.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp:84,mask,mask,84,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp,1,['mask'],['mask']
Availability,"// (conservatively) we can't peak past the ordering implied by this; // operation, but we can add this load to our set of available values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp:122,avail,available,122,interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,1,['avail'],['available']
Availability,// (for the rotate-and-mask instructions),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTargetTransformInfo.cpp:23,mask,mask,23,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTargetTransformInfo.cpp,1,['mask'],['mask']
Availability,"// (icmp ne (A & B), 0) & (icmp ne (A & D), 0) and; // (icmp ne (A & B), B) & (icmp ne (A & D), D); // -> (icmp ne (A & B), 0) or (icmp ne (A & D), 0); // Only valid if one of the masks is a superset of the other (check ""B&D"" is; // the same as either B or D).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:180,mask,masks,180,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,1,['mask'],['masks']
Availability,"// (icmp ne (A & B), B) & (icmp ne (A & D), D); // -> (icmp ne (A & B), A) or (icmp ne (A & D), A); // Only valid if one of the masks is a superset of the other (check ""B|D"" is; // the same as either B or D).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:128,mask,masks,128,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,1,['mask'],['masks']
Availability,"// (lshr (and y, mask), c2)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/GISel/RISCVInstructionSelector.cpp:17,mask,mask,17,interpreter/llvm-project/llvm/lib/Target/RISCV/GISel/RISCVInstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/GISel/RISCVInstructionSelector.cpp,1,['mask'],['mask']
Availability,"// (or (and X, C1), (and (or X, Y), C2)) -> (or (and X, C1|C2), (and Y, C2)); // TODO: Use SimplifyMultipleUseDemandedBits to peek through masks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:139,mask,masks,139,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,1,['mask'],['masks']
Availability,"// (shl (and y, mask), c2)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/GISel/RISCVInstructionSelector.cpp:16,mask,mask,16,interpreter/llvm-project/llvm/lib/Target/RISCV/GISel/RISCVInstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/GISel/RISCVInstructionSelector.cpp,1,['mask'],['mask']
Availability,// (~(-1 << maskNbits)),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp:12,mask,maskNbits,12,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,1,['mask'],['maskNbits']
Availability,"// *** Error checking for a composite index category ***; // Determine if any servers of the index category are in the projectedVars",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:7,Error,Error,7,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,1,['Error'],['Error']
Availability,"// *** Error checking for a fundamental index category ***; //cout << ""RooSim::plotOn: index is fundamental"" << endl ;; // Check that the provided projection dataset contains our index variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:7,Error,Error,7,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,1,['Error'],['Error']
Availability,"// *** Linear Method ***; //; // Make a one-sigma up- and down fluctation for each parameter and visualize; // a from a linearized calculation as follows; //; // error(x) = F(a) C_aa' F(a'); //; // Where F(a) = (f(x,a+da) - f(x,a-da))/2; // and C_aa' is the correlation matrix; // Strip out parameters with zero error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:58,down,down,58,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,3,"['down', 'error']","['down', 'error']"
Availability,// *** The code above must match HexagonInstrFormat*.td *** //; // Hexagon specific MO operand flag mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h:100,mask,mask,100,interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h,1,['mask'],['mask']
Availability,"// **************** THIS IS EXTREMELY UGLY: ****************; // POLLHUP is not set reliably on pipe/socket shutdown on all; // platforms, unfortunately, so we poll for readability here until; // the other end closes, too; //; // the read loop below ensures that the other end sees the POLLIN that; // is set on shutdown instead, and goes ahead to close its end; //; // if we don't do this, and close straight away, the other end; // will catch a SIGPIPE or similar, and we don't want that",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.cxx:84,reliab,reliably,84,roofit/roofitcore/src/BidirMMapPipe.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.cxx,1,['reliab'],['reliably']
Availability,"// ******************************************************************; // *** PART 3 *** Make adjustments for fit ranges, if specified *; // ******************************************************************; // TODO; // Jonas R.: The following code is commented out, because the functionality; // to mask out-of-range entries with `RooDataHist::cacheValidEntries` has; // been removed from the RooDataHist. If you want to implement ranged fits; // properly, please create a RooDataHist for the requested range with; // `RooDataHist::reduce`.; //// If dataset is binned, activate caching of bins that are invalid because they're outside the; //// updated range definition (WVE need to add virtual interface here); // RooDataHist *tmph = dynamic_cast<RooDataHist *>(data_.get());; // if (tmph) {; // tmph->cacheValidEntries();; //}; // This is deferred from part 2 - but must happen after part 3 - otherwise invalid bins cannot be properly marked in; // cacheValidEntries",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:301,mask,mask,301,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,1,['mask'],['mask']
Availability,"// *If* there is a truncation between an outer shift and a possibly-mask,; // then said truncation *must* be one-use, else we can't perform the fold.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp:68,mask,mask,68,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,1,['mask'],['mask']
Availability,// *SlotI overlaps LI. Collect mask bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp:31,mask,mask,31,interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,1,['mask'],['mask']
Availability,"// + load method cannot have availability attributes. It get called on; // startup, so it has to have the availability of the deployment target.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:29,avail,availability,29,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,2,['avail'],['availability']
Availability,"// - if T1 or T2 is ""pointer to noexcept function"" and the other type is; // ""pointer to function"", where the function types are otherwise the same,; // ""pointer to function"";; // - if T1 or T2 is ""pointer to member of C1 of type function"", the other; // type is ""pointer to member of C2 of type noexcept function"", and C1; // is reference-related to C2 or C2 is reference-related to C1, where; // the function types are otherwise the same, ""pointer to member of C2 of; // type function"" or ""pointer to member of C1 of type function"",; // respectively;; //; // We also support 'noreturn' here, so as a Clang extension we generalize the; // above to:; //; // - [Clang] If T1 and T2 are both of type ""pointer to function"" or; // ""pointer to member function"" and the pointee types can be unified; // by a function pointer conversion, that conversion is applied; // before checking the following rules.; //; // We've already unwrapped down to the function types, and we want to merge; // rather than just convert, so do this ourselves rather than calling; // IsFunctionConversion.; //; // FIXME: In order to match the standard wording as closely as possible, we; // currently only do this under a single level of pointers. Ideally, we would; // allow this in general, and set NeedConstBefore to the relevant depth on; // the side(s) where we changed anything. If we permit that, we should also; // consider this conversion when determining type similarity and model it as; // a qualification conversion.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:931,down,down,931,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['down'],['down']
Availability,"// -*-*-*-*-*Return value of error associated to bin number bin*-*-*-*-*; // if the sum of squares of weights has been defined (via Sumw2),; // this function returns the sqrt(sum of w2).; // otherwise it returns the sqrt(contents) for this bin.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:29,error,error,29,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['error'],['error']
Availability,"// -- If the branch's name is the same as the base class name,; // which happens when we are a child branch of a top-level; // branch whose name does not end in a dot and also has no; // internal dots, elide the branch name, and keep the branch; // hierarchy rooted at the ultimate parent, this keeps the base; // class part of the branch name from propagating downwards.; // FIXME: We are eliding the base class here, creating a break in the branch hierarchy.; // Note: We can use parent class (cltop) != branch class (elemClass) to detection elision.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:361,down,downwards,361,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['down'],['downwards']
Availability,"// -- LoadTree() has not yet been called, no current tree.; // FIXME: We need an error message here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:81,error,error,81,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['error'],['error']
Availability,"// -- We do not have a pointer to a varying-length array.; // Error(""WriteBufferAux"", ""The pointer to element %s::%s type %d (%s) is null\n"", GetName(), aElement->GetFullName(), compinfo[i]->fType, aElement->GetTypeName());; // ::ErrorHandler(kError, ""::WriteStreamerLoop"", Form(""The pointer to element %s::%s type %d (%s) is null\n"", config->fInfo->GetName(), config->fCompInfo->fElem->GetFullName(), config->fCompInfo->fType, config->fCompInfo->fElem->GetTypeName()));",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:62,Error,Error,62,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,2,['Error'],"['Error', 'ErrorHandler']"
Availability,"// -- We do not have a pointer to a varying-length array.; //Error(""WriteBufferAux"", ""The pointer to element %s::%s type %d (%s) is null\n"", GetName(), aElement->GetFullName(), compinfo[i]->fType, aElement->GetTypeName());; // ::ErrorHandler(kError, ""::WriteTextStreamerLoop"", Form(""The pointer to element %s::%s type %d (%s) is null\n"", config->fInfo->GetName(), config->fCompInfo->fElem->GetFullName(), config->fCompInfo->fType, config->fCompInfo->fElem->GetTypeName()));",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:61,Error,Error,61,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,2,['Error'],"['Error', 'ErrorHandler']"
Availability,"// --- Error Entry ---; // issue message and put the old one",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx:7,Error,Error,7,test/periodic/XSReactionDlg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx,1,['Error'],['Error']
Availability,"// --- read the available BDT weight files; // destroy all open cavases",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmvagui/src/BDT.cxx:16,avail,available,16,tmva/tmvagui/src/BDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmvagui/src/BDT.cxx,2,['avail'],['available']
Availability,// --------- ERROR HANDLING ---------,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/sancov/sancov.cpp:13,ERROR,ERROR,13,interpreter/llvm-project/llvm/tools/sancov/sancov.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/sancov/sancov.cpp,1,['ERROR'],['ERROR']
Availability,"// ----------------- Stmt traversal -----------------; //; // For stmts, we automate (in the DEF_TRAVERSE_STMT macro) iterating; // over the children defined in children() (every stmt defines these,; // though sometimes the range is empty). Each individual Traverse*; // method only needs to worry about children other than those. To see; // what children() does for a given class, see, e.g.,; // http://clang.llvm.org/doxygen/Stmt_8cpp_source.html; // This macro makes available a variable S, the passed-in stmt.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h:470,avail,available,470,interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h,1,['avail'],['available']
Availability,"// ----------------- Type traversal -----------------; // This macro makes available a variable T, the passed-in type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h:75,avail,available,75,interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h,1,['avail'],['available']
Availability,"// ----------------- TypeLoc traversal -----------------; // This macro makes available a variable TL, the passed-in TypeLoc.; // If requested, it calls WalkUpFrom* for the Type in the given TypeLoc,; // in addition to WalkUpFrom* for the TypeLoc itself, such that existing; // clients that override the WalkUpFrom*Type() and/or Visit*Type() methods; // continue to work.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h:78,avail,available,78,interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h,1,['avail'],['available']
Availability,"// -------------------------------------------------------------------; // standard algorithm:; // step 1: Estimate error on node using Laplace estimate; // NodeError = (N - n + k -1 ) / (N + k); // N: number of events; // k: number of event classes (2 for Signal, Background); // n: n event out of N belong to the class which has the majority in the node; // step 2: Approximate ""backed-up"" error assuming we did not prune; // (I'm never quite sure if they consider whole subtrees, or only 'next-to-leaf'; // nodes)...; // Subtree error = Sum_children ( P_i * NodeError_i); // P_i = probability of the node to make the decision, i.e. fraction of events in; // leaf node ( N_leaf / N_parent); // step 3:; // Minimum Error Pruning (MEP) according to Niblett/Bratko; //# of correctly classified events by this node:; //Double_t n=f*nEvts ;; //Double_t p_apriori = 0.5, m=100;; //errorRate = (nEvts - n + (1-p_apriori) * m ) / (nEvts + m);; // Pessimistic error Pruning (proposed by Quinlan (error estimat with continuity approximation); //# of correctly classified events by this node:; //Double_t n=f*nEvts ;; //errorRate = (nEvts - n + 0.5) / nEvts ;; //const Double Z=.65;; //# of correctly classified events by this node:; //Double_t n=f*nEvts ;; //errorRate = (f + Z*Z/(2*nEvts ) + Z*sqrt(f/nEvts - f*f/nEvts + Z*Z/4/nEvts /nEvts ) ) / (1 + Z*Z/nEvts );; //errorRate = (n + Z*Z/2 + Z*sqrt(n - n*n/nEvts + Z*Z/4) )/ (nEvts + Z*Z);; //errorRate = 1 - errorRate;; // -------------------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx:116,error,error,116,tmva/tmva/src/ExpectedErrorPruneTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx,12,"['Error', 'error']","['Error', 'error', 'errorRate']"
Availability,"// -----\/-------- homemade RTTI ---------------\/------------------------; ////////////////////////////////////////////////////////////////////////////////; ///[static utility function]/////////////////////////////; ///; /// returns empty string on failure.; /// otherwise returns something like this: ""TROOT*"".; /// fails for non-class types (ie, int, char, etc).; /// fails for pointers to functions.; ///; ////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:250,failure,failure,250,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,1,['failure'],['failure']
Availability,"// -0.1 - negative number -> error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:29,error,error,29,tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx,1,['error'],['error']
Availability,"// -1 - negative number -> error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:27,error,error,27,tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx,1,['error'],['error']
Availability,"// -1 sigma error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterPlot.cxx:12,error,error,12,roofit/roostats/src/HypoTestInverterPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterPlot.cxx,1,['error'],['error']
Availability,"// -1% - negative numnber -> error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:29,error,error,29,tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx,1,['error'],['error']
Availability,"// -2 -- -1 sigma error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterPlot.cxx:18,error,error,18,roofit/roostats/src/HypoTestInverterPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterPlot.cxx,1,['error'],['error']
Availability,"// -2 log lambda, goes like significance^2; // check if we should keep going based on rate of Type I error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BernsteinCorrection.cxx:101,error,error,101,roofit/roostats/src/BernsteinCorrection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BernsteinCorrection.cxx,1,['error'],['error']
Availability,"// -Werror/-Wno-error is a special case, not controlled by the option; // table. It also has the ""specifier"" form of -Werror=foo. GCC supports; // the deprecated -Werror-implicit-function-declaration which is used by; // a few projects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Warnings.cpp:16,error,error,16,interpreter/llvm-project/clang/lib/Basic/Warnings.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Warnings.cpp,1,['error'],['error']
Availability,// -Wfatal-errors is yet another special case.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Warnings.cpp:11,error,errors,11,interpreter/llvm-project/clang/lib/Basic/Warnings.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Warnings.cpp,1,['error'],['errors']
Availability,// -fsanitize-trap= overrides -fsanitize-recover=.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp:41,recover,recover,41,interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,1,['recover'],['recover']
Availability,"// ... and its error strings",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:15,error,error,15,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,2,['error'],['error']
Availability,"// ... unless we creating the branch in which case; // we have an internal error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:75,error,error,75,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['error'],['error']
Availability,"// ...with the major exception of templated-scope or; // dependent-scope friend declarations.; // TODO: we currently also suppress this check in dependent; // contexts because (1) the parameter depth will be off when; // matching friend templates and (2) we might actually be; // selecting a friend based on a dependent factor. But there; // are situations where these conditions don't apply and we; // can actually do this check immediately.; //; // Unless the scope is dependent, it's always an error if qualified; // redeclaration lookup found nothing at all. Diagnose that now;; // nothing will diagnose that error later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:497,error,error,497,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,2,['error'],['error']
Availability,"// .loop:; // ll.w destreg, (alignedaddr); // binop scratch, destreg, incr; // xor scratch, destreg, scratch; // and scratch, scratch, masktargetdata; // xor scratch, destreg, scratch; // sc.w scratch, scratch, (alignedaddr); // beqz scratch, loop",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchExpandAtomicPseudoInsts.cpp:135,mask,masktargetdata,135,interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchExpandAtomicPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchExpandAtomicPseudoInsts.cpp,1,['mask'],['masktargetdata']
Availability,"// .loop:; // lr.w destreg, (alignedaddr); // binop scratch, destreg, incr; // xor scratch, destreg, scratch; // and scratch, scratch, masktargetdata; // xor scratch, destreg, scratch; // sc.w scratch, scratch, (alignedaddr); // bnez scratch, loop",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVExpandAtomicPseudoInsts.cpp:135,mask,masktargetdata,135,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVExpandAtomicPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVExpandAtomicPseudoInsts.cpp,1,['mask'],['masktargetdata']
Availability,"// .loophead:; // ll.[w|d] dest, (addr); // and scratch, dest, mask; // bne scratch, cmpval, tail",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchExpandAtomicPseudoInsts.cpp:63,mask,mask,63,interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchExpandAtomicPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchExpandAtomicPseudoInsts.cpp,1,['mask'],['mask']
Availability,"// .loophead:; // lr.w dest, (addr); // and scratch, dest, mask; // bne scratch, cmpval, done",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVExpandAtomicPseudoInsts.cpp:59,mask,mask,59,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVExpandAtomicPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVExpandAtomicPseudoInsts.cpp,1,['mask'],['mask']
Availability,"// .loopifbody:; // xor scratch1, destreg, incr; // and scratch1, scratch1, mask; // xor scratch1, destreg, scratch1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchExpandAtomicPseudoInsts.cpp:76,mask,mask,76,interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchExpandAtomicPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchExpandAtomicPseudoInsts.cpp,2,['mask'],['mask']
Availability,"// .looptail:; // andn scratch, dest, mask; // or scratch, scratch, newval; // sc.[w|d] scratch, scratch, (addr); // beqz scratch, loophead; // b done",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchExpandAtomicPseudoInsts.cpp:38,mask,mask,38,interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchExpandAtomicPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchExpandAtomicPseudoInsts.cpp,1,['mask'],['mask']
Availability,"// .looptail:; // xor scratch, dest, newval; // and scratch, scratch, mask; // xor scratch, dest, scratch; // sc.w scratch, scratch, (adrr); // bnez scratch, loophead",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVExpandAtomicPseudoInsts.cpp:70,mask,mask,70,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVExpandAtomicPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVExpandAtomicPseudoInsts.cpp,1,['mask'],['mask']
Availability,"// .mask bitmask, frame_offset; // bitmask: One bit for each register used.; // frame_offset: Offset from Canonical Frame Address ($sp on entry) where; // first register is expected to be saved.; // Examples:; // .mask 0x80000000, -4; // .fmask 0x80000000, -4; //; // Parse the bitmask",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp:4,mask,mask,4,interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,2,['mask'],['mask']
Availability,"// // DEBUG std::cout<<""Is child: "";; // if (inClass){; // if (((tagKind == kClass)) || tagKind == kEndClass) // if this is the same tag as the parent; // // or it is a closing tag, the tag is not a child; // ;// DEBUG std::cout<<""No""<<std::endl;; // // else if tagKind is one of the following, it means that we have a missing </class> tag; // // because these tag kinds cannot be children for a parent <class> tag; // else if (tagKind == kClass || tagKind == kEnum || tagKind == kVariable || tagKind == kFunction ||; // tagKind == kEndSelection || tagKind == kExclusion || tagKind == kEndExclusion){; // ROOT::TMetaUtils::Error(0,""XML at line %s. Missing </class> tag\n"",lineNumCharp);; // out.ClearSelectionRules();; // return false;; // }; // // DEBUG else std::cout<<""Yes""<<std::endl;; // }; // // DEBUG else std::cout<<""No""<<std::endl;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:623,Error,Error,623,core/dictgen/src/XMLReader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx,1,['Error'],['Error']
Availability,"// // Returns true if load/store instruction \p Ldst can be sunk down; // // to instruction \p To; // bool canSinkLoadStoreTo(MachineInstr *Ldst, MachineInstr *To);; // Check if instructions \p Ldst and \p Add can be moved to become adjacent; // If they can return instruction which need not to move.; // If \p Uses is not null, fill it with instructions after \p Ldst which use; // \p Ldst's base register",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARC/ARCOptAddrMode.cpp:65,down,down,65,interpreter/llvm-project/llvm/lib/Target/ARC/ARCOptAddrMode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARC/ARCOptAddrMode.cpp,1,['down'],['down']
Availability,"// // automatic parameter range adjustment based on errors; // for(auto a : *floatPars) {; // RooRealVar *v = dynamic_cast<RooRealVar *>(a);; // if(v->getMin() > v->getVal() - 3.*v->getError()) {; // v->setMin(v->getVal() - 3.1*v->getError());; // }; // if(v->getMax() < v->getVal() + 3.*v->getError()) {; // v->setMax(v->getVal() + 3.1*v->getError());; // }; // // also make sure the range isn't too big (fits can struggle); // if(v->getMin() < v->getVal() - 10.*v->getError()) {; // v->setMin(v->getVal() - 9.9*v->getError());; // }; // if(v->getMax() > v->getVal() + 10.*v->getError()) {; // v->setMax(v->getVal() + 9.9*v->getError());; // }; // }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooFit.cxx:52,error,errors,52,roofit/xroofit/src/xRooFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooFit.cxx,1,['error'],['errors']
Availability,"// // compute the error ( to be improved ) this is just a simple truncation error; // fLastError = kC1*h2*0.5*(f1+f2); //compute the error; // compute the error ( from GSL deriv implementation)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/RichardsonDerivator.cxx:18,error,error,18,math/mathcore/src/RichardsonDerivator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/RichardsonDerivator.cxx,4,['error'],['error']
Availability,"// // create MINOS Error factory; // MnMinos Minos(fFCN, min);; // {; // // 3-sigma MINOS errors (minimal interface); // fFCN.SetErrorDef(9.);; // std::pair<double,double> e0 = Minos(0);; // std::pair<double,double> e1 = Minos(1);; // std::pair<double,double> e2 = Minos(2);; // // output; // std::cout<<""3-sigma Minos errors with limits: ""<<std::endl;; // std::cout.precision(16);; // std::cout<<""par0: ""<<min.UserState().Value(""mean"")<<"" ""<<e0.first<<"" ""<<e0.second<<std::endl;; // std::cout<<""par1: ""<<min.UserState().Value(1)<<"" ""<<e1.first<<"" ""<<e1.second<<std::endl;; // std::cout<<""par2: ""<<min.UserState().Value(""area"")<<"" ""<<e2.first<<"" ""<<e2.second<<std::endl;; // }; // }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/ParallelTest.cxx:19,Error,Error,19,math/minuit2/test/MnSim/ParallelTest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/ParallelTest.cxx,3,"['Error', 'error']","['Error', 'errors']"
Availability,"// // recalculate the gradient using the numerical gradient calculator; // Numerical2PGradientCalculator ngc(fcn, min.Seed().Trafo(), strategy);; // FunctionGradient ng = ngc( min.State().Parameters() );; // MinimumState tmp( min.State().Parameters(), min.State().Error(), ng, min.State().Edm(),; // min.State().NFcn() );",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/FumiliBuilder.cxx:264,Error,Error,264,math/minuit2/src/FumiliBuilder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/FumiliBuilder.cxx,1,['Error'],['Error']
Availability,"// //Returns the full parameter error vector; // TVectorD RMinimizer::RErrors() const {; // return fErrors;; // }; //Returns the ith jth component of the Hessian matrix",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/rtools/src/RMinimizer.cxx:32,error,error,32,math/rtools/src/RMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/rtools/src/RMinimizer.cxx,1,['error'],['error']
Availability,"// 0 - error, 1 - warning, 2 - info, 3 - debug",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:7,error,error,7,ui5/eve7/lib/GlViewerRCore.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js,1,['error'],['error']
Availability,"// 0 can be returned on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx:24,error,error,24,tree/tree/test/TBasket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx,3,['error'],['error']
Availability,"// 0% - no events -> error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:21,error,error,21,tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx,1,['error'],['error']
Availability,"// 0.0 - no events -> error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:22,error,error,22,tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx,1,['error'],['error']
Availability,"// 0th entry in vector is; // the 1st bin in TH1; // (we ignore underflow); // Error and bin content are interchanged because for some reason, the other functions; // use the bin content to convey the error ...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:79,Error,Error,79,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,2,"['Error', 'error']","['Error', 'error']"
Availability,"// 0x01000000 is available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:17,avail,available,17,core/meta/inc/TDictionary.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h,1,['avail'],['available']
Availability,"// 0x80000000 is available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:17,avail,available,17,core/meta/inc/TDictionary.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h,1,['avail'],['available']
Availability,// 0xff for any zero byte in the mask,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:33,mask,mask,33,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,1,['mask'],['mask']
Availability,"// 1) Do not fold bitcast shuffle for scalable type. First, shuffle cost for; // scalable type is unknown; Second, we cannot reason if the narrowed shuffle; // mask for scalable type is a splat or not.; // 2) Disallow non-vector casts.; // TODO: We could allow any shuffle.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp:160,mask,mask,160,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,1,['mask'],['mask']
Availability,"// 1) OptSize takes precedence over all other options, i.e. if this is set,; // don't look at hints or options, and don't request a scalar epilogue.; // (For PGSO, as shouldOptimizeForSize isn't currently accessible from; // LoopAccessInfo (due to code dependency and not being able to reliably get; // PSI/BFI from a loop analysis under NPM), we cannot suppress the collection; // of strides in LoopAccessInfo::analyzeLoop() and vectorize without; // versioning when the vectorization is forced, unlike hasOptSize. So revert; // back to the old way and vectorize with versioning when forced. See D81345.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:286,reliab,reliably,286,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['reliab'],['reliably']
Availability,"// 1) Set up a diagnostic handler to avoid errors being printed out to; // stderr.; // 2) Use the stream to print the error with the associated node.; // 3) The stream will use the source manager to print the error, which will; // call the diagnostic handler.; // 4) The diagnostic handler will stream the error directly into this object's; // Message member, which is used when logging is asked for.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Remarks/YAMLRemarkParser.cpp:43,error,errors,43,interpreter/llvm-project/llvm/lib/Remarks/YAMLRemarkParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Remarks/YAMLRemarkParser.cpp,4,['error'],"['error', 'errors']"
Availability,"// 1) or (and A, mask), val => ARMbfi A, val, mask; // iff (val & mask) == val; //; // 2) or (and A, mask), (and B, mask2) => ARMbfi A, (lsr B, amt), mask; // 2a) iff isBitFieldInvertedMask(mask) && isBitFieldInvertedMask(~mask2); // && mask == ~mask2; // 2b) iff isBitFieldInvertedMask(~mask) && isBitFieldInvertedMask(mask2); // && ~mask == mask2; // (i.e., copy a bitfield value into another bitfield of the same width)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:17,mask,mask,17,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,9,['mask'],['mask']
Availability,"// 1-dimensional histogram with error bars",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooHist.h:32,error,error,32,roofit/roofitcore/inc/RooHist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooHist.h,1,['error'],['error']
Availability,// 1-register shuffle with mask,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.h:27,mask,mask,27,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.h,1,['mask'],['mask']
Availability,"// 1-sigma MINOS errors (minimal interface)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/DemoGaussSim.cxx:17,error,errors,17,math/minuit2/test/MnSim/DemoGaussSim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/DemoGaussSim.cxx,1,['error'],['errors']
Availability,"// 1. Available operator<< to convert through an ostringstream",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:6,Avail,Available,6,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,1,['Avail'],['Available']
Availability,// 1. Mask includes the LSB -> Simply shift the top N bits off,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp:6,Mask,Mask,6,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp,1,['Mask'],['Mask']
Availability,// 1. The number of elements in the mask must be a power-of-2 and at least 2.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instructions.cpp:36,mask,mask,36,interpreter/llvm-project/llvm/lib/IR/Instructions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instructions.cpp,1,['mask'],['mask']
Availability,"// 10 bits. lower 5 bits are the lsb of the mask, high five bits are the; // msb of the mask.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp:44,mask,mask,44,interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp,2,['mask'],['mask']
Availability,"// 100 - uses all events in training set for validation -> error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:59,error,error,59,tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx,1,['error'],['error']
Availability,"// 100% - all events in training set -> error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:40,error,error,40,tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx,1,['error'],['error']
Availability,"// 101 - more events than in training set -> error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:45,error,error,45,tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx,1,['error'],['error']
Availability,"// 101% - more events than training set -> error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:43,error,error,43,tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx,1,['error'],['error']
Availability,"// 128 bit shifts can be accomplished via 3 instructions for SHL and; // SRL, but not for SRA because of the instructions available:; // VS{RL} and VS{RL}O.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:122,avail,available,122,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['avail'],['available']
Availability,"// 128 bit shifts can be accomplished via 3 instructions for SHL and; // SRL, but not for SRA because of the instructions available:; // VS{RL} and VS{RL}O. However due to direct move costs, it's not worth; // doing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:122,avail,available,122,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['avail'],['available']
Availability,"// 128 bytes of spill slots; // If there is a frame pointer, try using it.; // The FP is only available if there is no dynamic realignment. We; // don't know for sure yet whether we'll need that, so we guess based; // on whether there are any local variables that would trigger it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp:94,avail,available,94,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp,1,['avail'],['available']
Availability,"// 128 bytes of spill slots; // If there's a frame pointer and the addressing mode allows it, try using it.; // The FP is only available if there is no dynamic realignment. We; // don't know for sure yet whether we'll need that, so we guess based; // on whether there are any local variables that would trigger it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseRegisterInfo.cpp:127,avail,available,127,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseRegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseRegisterInfo.cpp,1,['avail'],['available']
Availability,"// 1D testing w profiles; // The error is not properly propagated when build with weights :S",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx:33,error,error,33,test/stressHistogram.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx,1,['error'],['error']
Availability,"// 1w; /// The maximum size for the cache directory, in terms of percentage of the; /// available space on the disk. Set to 100 to indicate no limit, 50 to; /// indicate that the cache size will not be left over half the available disk; /// space. A value over 100 will be reduced to 100. A value of 0 disables the; /// percentage size-based pruning.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CachePruning.h:88,avail,available,88,interpreter/llvm-project/llvm/include/llvm/Support/CachePruning.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CachePruning.h,2,['avail'],['available']
Availability,"// 2 is number of parameter we do the contour; // set required error definition in minimizer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx:63,error,error,63,hist/hist/src/TBackCompFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx,2,['error'],['error']
Availability,// 2 x (vrgather + cost of generating the mask constant) + cost of mask; // register for the second vrgather. We model this for an unknown; // (shuffle) mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.cpp:42,mask,mask,42,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.cpp,3,['mask'],['mask']
Availability,"// 2-2) Patterns : {zeros}{ones}{15-bit value}{zeros}; // {zeros}{15-bit value}{zeros}; // {zeros}{ones}{15-bit value}; // {ones}{15-bit value}{zeros}; // We can take advantage of LI's sign-extension semantics to generate leading; // ones, and then use RLDIC to mask off the ones in both sides after rotation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:262,mask,mask,262,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,2,['mask'],['mask']
Availability,"// 2-3) Pattern : {zeros}{15-bit value}{ones}; // Shift right the Imm by (48 - LZ) bits to construct a negtive 16 bits value,; // therefore we can take advantage of LI's sign-extension semantics, and then; // mask them off after rotation.; //; // +--LZ--||-15-bit-||--TO--+ +-------------|--16-bit--+; // |00000001bbbbbbbbb1111111| -> |00000000000001bbbbbbbbb1|; // +------------------------+ +------------------------+; // 63 0 63 0; // Imm (Imm >> (48 - LZ) & 0xffff); // +----sext-----|--16-bit--+ +clear-|-----------------+; // |11111111111111bbbbbbbbb1| -> |00000001bbbbbbbbb1111111|; // +------------------------+ +------------------------+; // 63 0 63 0; // LI8: sext many leading zeros RLDICL: rotate left (48 - LZ), clear left LZ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:209,mask,mask,209,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,2,['mask'],['mask']
Availability,"// 2-4) Patterns : {zeros}{ones}{15-bit value}{ones}; // {ones}{15-bit value}{ones}; // We can take advantage of LI's sign-extension semantics to generate leading; // ones, and then use RLDICL to mask off the ones in left sides (if required); // after rotation.; //; // +-LZ-FO||-15-bit-||--TO--+ +-------------|--16-bit--+; // |00011110bbbbbbbbb1111111| -> |000000000011110bbbbbbbbb|; // +------------------------+ +------------------------+; // 63 0 63 0; // Imm (Imm >> TO) & 0xffff; // +----sext-----|--16-bit--+ +LZ|---------------------+; // |111111111111110bbbbbbbbb| -> |00011110bbbbbbbbb1111111|; // +------------------------+ +------------------------+; // 63 0 63 0; // LI8: sext many leading zeros RLDICL: rotate left TO, clear left LZ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:196,mask,mask,196,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,2,['mask'],['mask']
Availability,"// 2-6) Patterns : {******}{49 zeros}{******}; // {******}{49 ones}{******}; // If the Imm contains 49 consecutive zeros/ones, it means that a total of 15; // bits remain on both sides. Rotate right the Imm to construct an int<16>; // value, use LI for int<16> value and then use RLDICL without mask to rotate; // it back.; //; // 1) findContiguousZerosAtLeast(Imm, 49); // +------|--zeros-|------+ +---ones--||---15 bit--+; // |bbbbbb0000000000aaaaaa| -> |0000000000aaaaaabbbbbb|; // +----------------------+ +----------------------+; // 63 0 63 0; //; // 2) findContiguousZerosAtLeast(~Imm, 49); // +------|--ones--|------+ +---ones--||---15 bit--+; // |bbbbbb1111111111aaaaaa| -> |1111111111aaaaaabbbbbb|; // +----------------------+ +----------------------+; // 63 0 63 0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:295,mask,mask,295,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,2,['mask'],['mask']
Availability,// 2-register shuffle with mask,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.h:27,mask,mask,27,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.h,1,['mask'],['mask']
Availability,"// 2-sigma MINOS errors (rich interface)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/DemoGaussSim.cxx:17,error,errors,17,math/minuit2/test/MnSim/DemoGaussSim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/DemoGaussSim.cxx,1,['error'],['errors']
Availability,"// 2. Downsample to ""downSampleRatio"" res; // clear stuff",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js:6,Down,Downsample,6,ui5/eve7/lib/OutlinePassEve.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js,2,"['Down', 'down']","['Downsample', 'downSampleRatio']"
Availability,// 2. Mask includes the MSB -> Simply shift the bottom N bits off,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp:6,Mask,Mask,6,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp,1,['Mask'],['Mask']
Availability,// 2. Mask off all other indicies except the required index within (1).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:6,Mask,Mask,6,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,1,['Mask'],['Mask']
Availability,// 2. The first element of the mask must be either a 0 or a 1.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instructions.cpp:31,mask,mask,31,interpreter/llvm-project/llvm/lib/IR/Instructions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instructions.cpp,1,['mask'],['mask']
Availability,"// 21-bit symbol relocation, last two bits masked to 0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Lanai/MCTargetDesc/LanaiFixupKinds.h:43,mask,masked,43,interpreter/llvm-project/llvm/lib/Target/Lanai/MCTargetDesc/LanaiFixupKinds.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Lanai/MCTargetDesc/LanaiFixupKinds.h,1,['mask'],['masked']
Availability,// 25-bit DSCR mask,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCPreEmitPeephole.cpp:15,mask,mask,15,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCPreEmitPeephole.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCPreEmitPeephole.cpp,1,['mask'],['mask']
Availability,"// 256-bit PACK(ARG0, ARG1) leaves us with ((LO0,LO1),(HI0,HI1)),; // so we need to shuffle to get ((LO0,HI0),(LO1,HI1)).; // Scale shuffle mask to avoid bitcasts and help ComputeNumSignBits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:140,mask,mask,140,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,// 29 is the bit position.; // 0b1110 =0xE bits are masked off and down shifted by 1 bit.; // Last bit is moved to bit position 13,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCCodeEmitter.cpp:52,mask,masked,52,interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCCodeEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCCodeEmitter.cpp,2,"['down', 'mask']","['down', 'masked']"
Availability,"// 3-1) Patterns : {zeros}{ones}{31-bit value}{zeros}; // {zeros}{31-bit value}{zeros}; // {zeros}{ones}{31-bit value}; // {ones}{31-bit value}{zeros}; // We can take advantage of LIS's sign-extension semantics to generate leading; // ones, add the remaining bits with ORI, and then use RLDIC to mask off the; // ones in both sides after rotation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:296,mask,mask,296,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,1,['mask'],['mask']
Availability,"// 3-2) Pattern : {zeros}{31-bit value}{ones}; // Shift right the Imm by (32 - LZ) bits to construct a negative 32 bits; // value, therefore we can take advantage of LIS's sign-extension semantics,; // add the remaining bits with ORI, and then mask them off after rotation.; // This is similar to Pattern 2-3, please refer to the diagram there.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:244,mask,mask,244,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,2,['mask'],['mask']
Availability,"// 3-3) Patterns : {zeros}{ones}{31-bit value}{ones}; // {ones}{31-bit value}{ones}; // We can take advantage of LIS's sign-extension semantics to generate leading; // ones, add the remaining bits with ORI, and then use RLDICL to mask off the; // ones in left sides (if required) after rotation.; // This is similar to Pattern 2-4, please refer to the diagram there.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:230,mask,mask,230,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,2,['mask'],['mask']
Availability,"// 3-4) Patterns : {******}{33 zeros}{******}; // {******}{33 ones}{******}; // If the Imm contains 33 consecutive zeros/ones, it means that a total of 31; // bits remain on both sides. Rotate right the Imm to construct an int<32>; // value, use LIS + ORI for int<32> value and then use RLDICL without mask to; // rotate it back.; // This is similar to Pattern 2-6, please refer to the diagram there.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:302,mask,mask,302,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,1,['mask'],['mask']
Availability,"// 3-5) Patterns : {******}{33 zeros}{******}; // {******}{33 ones}{******}; // If the Imm contains 33 consecutive zeros/ones, it means that a total of 31; // bits remain on both sides. Rotate right the Imm to construct an int<32>; // value, use LIS + ORI for int<32> value and then use RLDICL without mask to; // rotate it back.; // This is similar to Pattern 2-6, please refer to the diagram there.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCInstructionSelector.cpp:302,mask,mask,302,interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCInstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCInstructionSelector.cpp,1,['mask'],['mask']
Availability,"// 3-op Variable Permute (VPERMT2).; // Res = VPERMV3 V0, MaskV, V1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h:58,Mask,MaskV,58,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h,1,['Mask'],['MaskV']
Availability,"// 3-sigma MINOS errors (minimal interface)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/DemoGaussSim.cxx:17,error,errors,17,math/minuit2/test/MnSim/DemoGaussSim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/DemoGaussSim.cxx,1,['error'],['errors']
Availability,// 3. Mask off the required index within the target vector.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:6,Mask,Mask,6,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,1,['Mask'],['Mask']
Availability,// 3. The difference between the first 2 elements must be equal to the; // number of elements in the mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instructions.cpp:101,mask,mask,101,interpreter/llvm-project/llvm/lib/IR/Instructions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instructions.cpp,1,['mask'],['mask']
Availability,"// 31.7.2.18: ""The failure argument shall not be memory_order_release; // nor memory_order_acq_rel"". Fallback to monotonic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp:19,failure,failure,19,interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp,1,['failure'],['failure']
Availability,// 32 bit registers are always available and the stack is at least 64 bit; // aligned. On N64 64 bit registers are also available and the stack is; // 128 bit aligned.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsTargetMachine.cpp:31,avail,available,31,interpreter/llvm-project/llvm/lib/Target/Mips/MipsTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsTargetMachine.cpp,2,['avail'],['available']
Availability,// 32-bit SEH filters need to be careful about FP recovery. The end of the; // EH registration is passed in as the EBP physical register. We can; // recover that with llvm.frameaddress(1).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp:50,recover,recovery,50,interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp,2,['recover'],"['recover', 'recovery']"
Availability,"// 32bit linux: we have an error with ATLAS, see https://sft.its.cern.ch/jira/browse/ROOT-9893; // Disable unless explicitly enabled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressGeometry.cxx:27,error,error,27,test/stressGeometry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressGeometry.cxx,1,['error'],['error']
Availability,"// 4th pattern to match BSTRINS:; // R = or (and X, mask), (shl Y, shamt); // where mask = (2**shamt - 1); // =>; // R = BSTRINS X, Y, ValBits - 1, shamt; // where ValBits = 32 or 64",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp:52,mask,mask,52,interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp,2,['mask'],['mask']
Availability,"// 5 times error on the RMS; // Gaussian first",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testTStatistic.cxx:11,error,error,11,math/mathcore/test/testTStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testTStatistic.cxx,1,['error'],['error']
Availability,"// 5 times error on the mean",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testTStatistic.cxx:11,error,error,11,math/mathcore/test/testTStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testTStatistic.cxx,1,['error'],['error']
Availability,"// 5. clang-format is done, wait until it is fully shut down.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format-vs/ClangFormat/ClangFormatPackage.cs:56,down,down,56,interpreter/llvm-project/clang/tools/clang-format-vs/ClangFormat/ClangFormatPackage.cs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format-vs/ClangFormat/ClangFormatPackage.cs,1,['down'],['down']
Availability,// 512-bit mask uses 4 x i2 indices - if the msb is always set then only the; // upper subvector is used.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:11,mask,mask,11,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,"// 5th pattern to match BSTRINS:; // R = or (and X, mask), const; // where ~mask = (2**size - 1) << lsb, mask & const = 0; // =>; // R = BSTRINS X, (const >> lsb), msb, lsb; // where msb = lsb + size - 1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp:52,mask,mask,52,interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp,3,['mask'],['mask']
Availability,// 64-bit ISA is available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/LoongArchTargetParser.h:17,avail,available,17,interpreter/llvm-project/llvm/include/llvm/TargetParser/LoongArchTargetParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/LoongArchTargetParser.h,1,['avail'],['available']
Availability,"// 64-bit and is only available on the SALU, so split into 2 32-bit ops if; // there is a VGPR input.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp:22,avail,available,22,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp,1,['avail'],['available']
Availability,// 64-bit masks supported by nilf.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetTransformInfo.cpp:10,mask,masks,10,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetTransformInfo.cpp,1,['mask'],['masks']
Availability,// 64-bit masks supported by nilh.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetTransformInfo.cpp:10,mask,masks,10,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetTransformInfo.cpp,1,['mask'],['masks']
Availability,"// 64-bit select is only available for SALU.; // TODO: Split 96-bit into 64-bit and 32-bit, not 3x 32-bit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp:25,avail,available,25,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp,1,['avail'],['available']
Availability,// 64-bit should have been split up in RegBankSelect; // Try to use an and with a mask if it will save code size.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstructionSelector.cpp:82,mask,mask,82,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstructionSelector.cpp,1,['mask'],['mask']
Availability,"// 6th pattern.; // a = b | ((c & mask) << shamt), where all positions in b to be overwritten; // by the incoming bits are known to be zero.; // =>; // a = BSTRINS b, c, shamt + MaskLen - 1, shamt; //; // Note that the 1st pattern is a special situation of the 6th, i.e. the 6th; // pattern is more common than the 1st. So we put the 1st before the 6th in; // order to match as many nodes as possible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp:34,mask,mask,34,interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp,2,"['Mask', 'mask']","['MaskLen', 'mask']"
Availability,"// 7th pattern.; // a = b | ((c << shamt) & shifted_mask), where all positions in b to be; // overwritten by the incoming bits are known to be zero.; // =>; // a = BSTRINS b, c, MaskIdx + MaskLen - 1, MaskIdx; //; // Similarly, the 7th pattern is more common than the 2nd. So we put the 2nd; // before the 7th in order to match as many nodes as possible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp:178,Mask,MaskIdx,178,interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp,3,['Mask'],"['MaskIdx', 'MaskLen']"
Availability,"// 8th pattern.; // a = b | (c & shifted_mask), where all positions in b to be overwritten by; // the incoming bits are known to be zero.; // =>; // a = BSTRINS b, c >> MaskIdx, MaskIdx + MaskLen - 1, MaskIdx; //; // Similarly, the 8th pattern is more common than the 4th and 5th patterns. So; // we put it here in order to match as many nodes as possible or generate less; // instructions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp:169,Mask,MaskIdx,169,interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp,4,['Mask'],"['MaskIdx', 'MaskLen']"
Availability,"// 96-bit loads are only available for vector loads. We need to split this; // into a 64-bit part, and 32 (unless we can widen to a 128-bit load).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp:25,avail,available,25,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp,1,['avail'],['available']
Availability,"// ::foo::bar; // C++ scope specifier. Annotate and loop, or bail out on error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp:73,error,error,73,interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,1,['error'],['error']
Availability,"// <binop> binopres, oldval, incr2; // and newval, binopres, mask",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsExpandPseudo.cpp:61,mask,mask,61,interpreter/llvm-project/llvm/lib/Target/Mips/MipsExpandPseudo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsExpandPseudo.cpp,1,['mask'],['mask']
Availability,"// <nominal, error>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:13,error,error,13,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,1,['error'],['error']
Availability,"// <sysexits.h> does not exist on z/OS and Windows. The only value used in LLVM; // is EX_IOERR, which is used to signal a special error condition (broken pipe).; // Define the macro with its usual value from BSD systems, which is chosen to; // not clash with more standard exit codes like 1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ExitCodes.h:131,error,error,131,interpreter/llvm-project/llvm/include/llvm/Support/ExitCodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ExitCodes.h,1,['error'],['error']
Availability,"// = SO_Linker; /// This function will search through all previously loaded dynamic; /// libraries for the symbol \p symbolName. If it is found, the address of; /// that symbol is returned. If not, null is returned. Note that this will; /// search permanently loaded libraries (getPermanentLibrary()) as well; /// as explicitly registered symbols (AddSymbol()).; /// @throws std::string on error.; /// Search through libraries for address of a symbol",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DynamicLibrary.h:390,error,error,390,interpreter/llvm-project/llvm/include/llvm/Support/DynamicLibrary.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DynamicLibrary.h,1,['error'],['error']
Availability,"// === String encodings ===; //; // JSON strings are character sequences (not byte sequences like std::string).; // We need to know the encoding, and for simplicity only support UTF-8.; //; // - When parsing, invalid UTF-8 is a syntax error like any other; //; // - When creating Values from strings, callers must ensure they are UTF-8.; // with asserts on, invalid UTF-8 will crash the program; // with asserts off, we'll substitute the replacement character (U+FFFD); // Callers can use json::isUTF8() and json::fixUTF8() for validation.; //; // - When retrieving strings from Values (e.g. asString()), the result will; // always be valid UTF-8.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/JSON.h:235,error,error,235,interpreter/llvm-project/llvm/include/llvm/Support/JSON.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/JSON.h,1,['error'],['error']
Availability,"// ===> create sub branches for each data member of a TClonesArray; //check that the contained objects class name is part of the element title; //This name is mandatory when reading the Tree later on and; //the parent class with the pointer to the TClonesArray is not available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:268,avail,available,268,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['avail'],['available']
Availability,"// @(#)Root/meta:$Id$; // Author: Fons Rademakers 13/06/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMethodCall; Method or function calling interface. Objects of this class contain; the (CINT) environment to call a global function or a method for an; object of a specific class with the desired arguments. This class is; especially useful when a method has to be called more times for; different objects and/or with different arguments. If a function or; method needs to be called only once one better uses; TInterpreter::Execute(). A limitation is known with the present implementation: failures can ; occur if parameters involve temporary object construction.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:917,failure,failures,917,core/meta/src/TMethodCall.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx,1,['failure'],['failures']
Availability,"// @(#)root/asimage:$Id$; // Author: Reiner Rohlfs 24/03/2002; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun, Fons Rademakers and Reiner Rohlfs *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TASPaletteEditor; \ingroup asimage. This is a GUI window to edit a color palette.; It is called by a pull down menu item of TASImage.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPaletteEditor.cxx:552,down,down,552,graf2d/asimage/src/TASPaletteEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPaletteEditor.cxx,1,['down'],['down']
Availability,"// @(#)root/base:$Id$; // Author: Fons Rademakers 14/02/2002; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualMutex; \ingroup Base. This class implements a mutex interface. The actual work is done via; TMutex which is available as soon as the thread library is loaded. and. TLockGuard. This class provides mutex resource management in a guaranteed and; exception safe way. Use like this:; ~~~ {.cpp}; {; TLockGuard guard(mutex);; ... // do something; }; ~~~; when guard goes out of scope the mutex is unlocked in the TLockGuard; destructor. The exception mechanism takes care of calling the dtors; of local objects so it is exception safe.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualMutex.cxx:547,avail,available,547,core/base/src/TVirtualMutex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualMutex.cxx,1,['avail'],['available']
Availability,"// @(#)root/base:$Id$; // Author: Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; Error handling routines. This file defines a number of global error handling routines:; Warning(), Error(), SysError() and Fatal(). They all take a; location string (where the error happened) and a printf style format; string plus vararg's. In the end these functions call an; errorhandler function. Initially the MinimalErrorHandler, which is supposed; to be replaced by the proper DefaultErrorHandler(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:423,Error,Error,423,core/foundation/src/TError.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx,5,"['Error', 'error']","['Error', 'error', 'errorhandler']"
Availability,"// @(#)root/base:$Id$; // Author: Fons Rademakers 29/9/2001; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMD5; \ingroup Base. This code implements the MD5 message-digest algorithm.; The algorithm is due to Ron Rivest. This code was; written by Colin Plumb in 1993, no copyright is claimed.; This code is in the public domain; do with it what you wish. Equivalent code is available from RSA Data Security, Inc.; This code has been tested against that, and is equivalent,; except that you don't need to include two pages of legalese; with every copy. To compute the message digest of a chunk of bytes, create an; TMD5 object, call Update() as needed on buffers full of bytes, and; then call Final(), which will, optionally, fill a supplied 16-byte; array with the digest.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx:696,avail,available,696,core/base/src/TMD5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx,1,['avail'],['available']
Availability,"// @(#)root/base:$Id$; // Author: Nenad Buncic 08/02/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TContextMenu; \ingroup Base. This class provides an interface to context sensitive popup menus.; These menus pop up when the user hits the right mouse button, and; are destroyed when the menu pops downs. Context Menus are automatically generated by ROOT using the; following convention: if the string `// *MENU*` is found in the; comment field of a member function. This function will be added to; the list of items in the menu. The picture below shows a canvas with a pop-up menu. \image html base_hsummenu.png. The picture below shows a canvas with a pop-up menu and a dialog box. \image html base_hsumdialog.png; */; // silence warning about some cast operations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx:623,down,downs,623,core/gui/src/TContextMenu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx,1,['down'],['downs']
Availability,"// @(#)root/base:$Id$; // Author: Rene Brun 11/11/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMessageHandler. \ingroup Base; Handle messages that might be generated by the system.; By default a handler only keeps track of the different messages; generated for a specific class. By deriving from this class and; overriding Notify() one can implement custom message handling.; In Notify() one has access to the message id and the object; generating the message. One can install more than one message; handler per class. A message handler can be removed or again; added when needed. - All Root ""Warnings"" are logged as message 1001; - All Root ""Errors"" are logged as message 1002; - All Root ""SysErrors"" are logged as message 1003; - All Root ""Fatals"" are logged as message 1004; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMessageHandler.cxx:972,Error,Errors,972,core/base/src/TMessageHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMessageHandler.cxx,1,['Error'],['Errors']
Availability,"// @(#)root/base:$Id$; // Author: Rene Brun 26/12/94; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TObject; \ingroup Base. Mother of all ROOT objects. The TObject class provides default behaviour and protocol for all; objects in the ROOT system. It provides protocol for object I/O,; error handling, sorting, inspection, printing, drawing, etc.; Every object which inherits from TObject can be stored in the; ROOT collection classes. TObject's bits can be used as flags, bits 0 - 13 and 24-31 are; reserved as global bits while bits 14 - 23 can be used in different; class hierarchies (watch out for overlaps).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:608,error,error,608,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,1,['error'],['error']
Availability,"// @(#)root/base:$Id$; // Author: Valeriy Onuchin 04/27/2004; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TQCommand; \ingroup Base. The Command design pattern is based on the idea, that all editing; in an application is done by creating instances of command objects.; Command objects apply changes to the edited object and then are; stored on a command stack. Furthermore, each command knows how to; undo its changes to bring the edited object back to its previous; state. As long as the application only uses command objects to; change the state of the edited object, it is possible to undo; a sequence of commands by traversing the command stack downwards and; calling the ""undo"" method of each command in turn. It is also; possible to redo a sequence of commands by traversing the command; stack upwards and calling the ""redo"" method of each command. Examples:. 1. Create a new command; ~~~ {.cpp}; TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)""; ""SetFillColor(Color_t)"");; ~~~; - 1st parameter - the name of class; - 2nd parameter - object; - 3rd parameter - the name of do/redo method; - 4th parameter - the name of undo method; Since redo,undo methods are the same, undo name can be omitted, e.g.; ~~~ {.cpp}; TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)"");; ~~~; For objects derived from TObject class name can be omitted, e.g.; ~~~ {.cpp}; TQCommand *com = new TQCommand(hpx, ""SetFillColor(Color_t)"");; ~~~. 2. Setting undo, redo parameters.; ~~~ {.cpp}; Color_t old_color = hpx->GetFillColor();; Color_t new_color = 4; // blue color. com->SetRedoArgs(1, new_color);; com->SetUndoArgs(1, old_color);; ~~~; 1st argument - the nu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQCommand.cxx:973,down,downwards,973,core/base/src/TQCommand.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQCommand.cxx,1,['down'],['downwards']
Availability,// @(#)root/base:$Id$; // Author: Valery Fine 05/03/97; /** \class TVirtualGL. The TVirtualGL class is an abstract base class defining the; OpenGL interface protocol. All interactions with OpenGL should be; done via the global pointer gVirtualGL. If the OpenGL library is; available this pointer is pointing to an instance of the TGLKernel; class which provides the actual interface to OpenGL. Using this; scheme of ABC we can use OpenGL in other parts of the framework; without having to link with the OpenGL library in case we don't; use the classes using OpenGL.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualGL.cxx:273,avail,available,273,core/base/src/TVirtualGL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualGL.cxx,1,['avail'],['available']
Availability,"// @(#)root/base:$Id$; // Authors: Rene Brun 08/02/2007; /*************************************************************************; * Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** TMath Base functions; \ingroup Base. Define the functions Min, Max, Abs, Sign, Range for all types.; NB: These functions are unfortunately not available in a portable; way in std::. More functions are defined in TMath.h. TMathBase.h is designed to be; a stable file and used in place of TMath.h in the ROOT miniCore.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMathBase.cxx:562,avail,available,562,core/base/src/TMathBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMathBase.cxx,1,['avail'],['available']
Availability,"// @(#)root/build:$Id$; // Author: Axel Naumann 21/03/06; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ROOT wrapper around ROOT's mkdepend incarnation + wrapper script,; // known as depends.sh in earlier days.; // If the first(!) argument is '-R' it triggers a few special; // routines:; // * dependencies for .d files use $(wildcard ...), so gmake doesn't; // bail out if one of the dependencies doesn't exist.; // * output files starting with '/G__' and ending on "".d"" are assumed to; // be dictionaries. rmkdepend generates rules for these dictionaries ; // covering the .d file, and the .cxx file itself, ; // so the dictionaries get re-egenerated when an included header ; // file gets changed.; // * the detection / wildcarding of a dictionary file can be changed ; // by specifying -R=[tag]%[ext] as parameter to -R. The default is ; // ""-R=/G__%.d"".; // * remove output file if we encounter an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/mainroot.cxx:1218,error,error,1218,misc/rmkdepend/mainroot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/mainroot.cxx,1,['error'],['error']
Availability,"// @(#)root/fft:$Id$; // Author: Anna Kreshuk 07/4/2006; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /// \class TFFTComplexReal; ///; /// One of the interface classes to the FFTW package, can be used directly; /// or via the TVirtualFFT class. Only the basic interface of FFTW is implemented.; ///; /// Computes the inverse of the real-to-complex transforms (class TFFTRealComplex); /// taking complex input (storing the non-redundant half of a logically Hermitian array); /// to real output (see FFTW manual for more details); ///; /// How to use it:; /// 1. Create an instance of TFFTComplexReal - this will allocate input and output; /// arrays (unless an in-place transform is specified); /// 2. Run the Init() function with the desired flags and settings; /// 3. Set the data (via SetPoints(), SetPoint() or SetPointComplex() functions); /// 4. Run the Transform() function; /// 5. Get the output (via GetPoints(), GetPoint() or GetPointReal() functions); /// 6. Repeat steps 3)-5) as needed; ///; /// For a transform of the same size, but with different flags, rerun the Init(); /// function and continue with steps 3)-5); ///; /// NOTE:; /// 1. running Init() function will overwrite the input array! Don't set any data; /// before running the Init() function; /// 2. FFTW computes unnormalized transform, so doing a transform followed by; /// its inverse will lead to the original array scaled by the transform size; /// 3. In Complex to Real transform the input array is destroyed. It cannot then; /// be retrieved when using the Get's methods.; ///; /////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTComplexReal.cxx:821,redundant,redundant,821,math/fftw/src/TFFTComplexReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTComplexReal.cxx,1,['redundant'],['redundant']
Availability,"// @(#)root/fumili:$Id$; // Author: Stanislav Nesterov 07/05/2003; /** \class TFumili. ### FUMILI minimization package. FUMILI is based on ideas, proposed by I.N. Silin [See NIM A440, 2000 (p431)].; It was converted from FORTRAN to C by Sergey Yaschenko <s.yaschenko@fz-juelich.de>. FUMILI is used to minimize Chi-square function or to search maximum of; likelihood function. Experimentally measured values \f$F_i\f$ are fitted with theoretical; functions \f$f_i({\vec x}_i,\vec\theta\,\,)\f$, where \f${\vec x}_i\f$ are; coordinates, and \f$\vec\theta\f$ -- vector of parameters. For better convergence Chi-square function has to be the following form. \f[; {\chi^2\over2}={1\over2}\sum^n_{i=1}\left(f_i(\vec; x_i,\vec\theta\,\,)-F_i\over\sigma_i\right)^2 \tag{1}; \f]. where \f$\sigma_i\f$ are errors of measured function. The minimum condition is. \f[; {\partial\chi^2\over\partial\theta_i}=\sum^n_{j=1}{1\over\sigma^2_j}\cdot; {\partial f_j\over\partial\theta_i}\left[f_j(\vec; x_j,\vec\theta\,\,)-F_j\right]=0,\qquad i=1\ldots m\tag{2}; \f]. where m is the quantity of parameters. Expanding left part of (2) over parameter increments and; retaining only linear terms one gets. \f[; \left(\partial\chi^2\over\theta_i\right)_{\vec\theta={\vec\theta}^0}; +\sum_k\left(\partial^2\chi^2\over\partial\theta_i\partial\theta_k\right)_{; \vec\theta={\vec\theta}^0}\cdot(\theta_k-\theta_k^0); = 0\tag{3}; \f]. Here \f${\vec\theta}_0\f$ is some initial value of parameters. In general case:. \f[; {\partial^2\chi^2\over\partial\theta_i\partial\theta_k}=; \sum^n_{j=1}{1\over\sigma^2_j}{\partial f_j\over\theta_i}; {\partial f_j\over\theta_k} +; \sum^n_{j=1}{(f_j - F_j)\over\sigma^2_j}\cdot; {\partial^2f_j\over\partial\theta_i\partial\theta_k}\tag{4}; \f]. In FUMILI algorithm for second derivatives of Chi-square approximate; expression is used when last term in (4) is discarded. It is often; done, not always wittingly, and sometimes causes troubles, for example,; if user wants to limit parameters with",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:796,error,errors,796,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['error'],['errors']
Availability,"// @(#)root/g3d:$Id$; // Author: Ping Yeh 19/12/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/inc/THelix.h:33,Ping,Ping,33,graf3d/g3d/inc/THelix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/inc/THelix.h,1,['Ping'],['Ping']
Availability,"// @(#)root/g3d:$Id$; // Author: Ping Yeh 19/12/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class THelix; \ingroup g3d; THelix has two different constructors. If a particle with charge q passes through a point (x,y,z); with momentum (px,py,pz) with magnetic field B along an axis (nx,ny,nz),; this helix can be constructed like:. ~~~ {.cpp}; THelix p(x,y,z, px,py,pz, q*B, nx,ny,nz);; (nx,ny,nz) defaults to (0,0,1).; ~~~. A helix in its own frame can be defined with a pivotal point; (x0,y0,z0), the velocity at that point (vx0,vy0,vz0), and; an angular frequency w. Combining vx0 and vy0 to a transverse; velocity vt0 one can parametrize the helix as:. ~~~ {.cpp}; x(t) = x0 - vt0 / w * sin(-w * t + phi0); y(t) = y0 + vt0 / w * cos(-w * t + phi0); z(t) = z0 + vz0 * t; ~~~. The second constructor has 6 parameters,. Example:. ~~~ {.cpp}; THelix pl1(xyz, v, w, range, rtype, axis);; ~~~. where:. - xyz : array of initial position; - v : array of initial velocity; - w : angular frequency; - range: helix range; - rtype: kHelixZ specifies allowed drawing range in helix Z direction, i.e., along B field.; kLabZ specifies drawing range in lab frame.; kHelixX, kHelixY, kLabX, kLabY, kUnchanged ... etc can also be specified; - axis : helix axis. Example constructing a helix with several default values and drawing it:. Begin_Macro(source); {; TCanvas* helix_example_c1 = new TCanvas(""helix_example_c1"");; TView *view = TView::CreateView(1);; view->SetRange(-1,-1,-1,1,1,1);; THelix *helix = new THelix(0., 0., 0., 1., 0., 0.3, 10.);; helix->Draw();; }; End_Macro. This initializes a helix with its axis in Z direction (rtype=kHelixZ).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/THelix.cxx:33,Ping,Ping,33,graf3d/g3d/src/THelix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/THelix.cxx,1,['Ping'],['Ping']
Availability,"// @(#)root/ged:$Id$; // Author: Carsten Hof 16/08/04; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TH1Editor; \ingroup ged. Editor for changing TH1 histogram attributes, rebinning & fitting.; For all possible draw options (there are a few which are not implementable; in graphical user interface) see THistPainter::Paint. These changes can be made via the TH1Editor:; Style Tab:; 'Line' : change Line attributes (color, thickness); see TAttLineEditor; 'Fill' : change Fill attributes (color, pattern); see TAttFillEditor; 'Title' : TextEntry: set the title of the histogram; 'Histogram': change the draw options of the histogram; 'Plot' : Radiobutton: draw a 2D or 3D plot of the histogram; according to the Plot dimension there will be; different drawing possibilities (ComboBoxes/; CheckBoxes); 2d Plot:; 'Error' : ComboBox: add different error bars to the histogram; (no errors, simple, ..., see THistPainter::Paint; 'Add' : ComboBox: further things which can be added to the; histogram (None, simple/smooth line, fill area; 'Simple Drawing': CheckBox: draw a simple histogram without; errors (= ""HIST"" drawoption). In combination with; some other draw options an outer line is drawn on; top of the histogram; 'Show markers': CheckBox: draw a marker on to of each bin (=""P""; drawoption); 'Draw bar chart': CheckBox: draw a bar chart (=""B"" drawoption); change the Fill Color with Fill in the Style Tab; => will show Bar menue in the Style Tab; 'Bar option': CheckBox: draw a bar chart (=""BAR"" drawoption); => will show Bar menue in the Style Tab; 3d Plot:; 'Type' : ComboBox: set histogram type Lego-Plot or Surface; draw(Lego, Lego1.2, Surf, Surf1..5); see THistPainter::Pa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx:1133,Error,Error,1133,gui/ged/src/TH1Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx,3,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"// @(#)root/ged:$Id$; // Author: Ilka Antcheva 11/05/04; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TAxisEditor; \ingroup ged. Implements GUI for axis attributes.; axis color; ticks parameters: length, setting on both axis sides,; logarithmic or linear scale along the selected axis,; primary, secondary and tertiary axis divisions,; setting more logarithmic labels,; optimizing labels' position if available; axis title - a title can be added via the text entry field; and can be set to be centered or rotated via the corresponding; check buttons, the title color, offset, font can be set easily; axis labels - their color, size, offset can be set similarly,; in addition there is a check box for no exponent choice,; and another one for setting the same decimal part for all labels. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TAxisEditor.cxx:725,avail,available,725,gui/ged/src/TAxisEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TAxisEditor.cxx,1,['avail'],['available']
Availability,"// @(#)root/ged:$Id$; // Author: Ilka Antcheva; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TPaveStatsEditor; \ingroup ged. Implements GUI for editing attributes of TPaveStats objects.; all text attributes; The following statistics option settings can be set:; name, mean, RMS, overflow, underflow, integral of bins,; Fit parameters that can be set are: Values/Names, Probability,; Errors, Chisquare. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TPaveStatsEditor.cxx:707,Error,Errors,707,gui/ged/src/TPaveStatsEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TPaveStatsEditor.cxx,1,['Error'],['Errors']
Availability,"// @(#)root/ged:$Id$; // Author: Marek Biskup, Ilka Antcheva 22/07/03; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGedMarkerSelect; \ingroup ged. The TGedMarkerSelect widget is a button showing selected marker; and a little down arrow. When clicked on the arrow the; TGedMarkerPopup pops up. Selecting a marker in this widget will generate the event:; kC_MARKERSEL, kMAR_SELCHANGED, widget id, style. and the signal:; MarkerSelected(Style_t marker). */; /** \class TGedMarkerPopup; \ingroup ged. The TGedMarkerPopup is a popup containing buttons to; select marker style. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedMarkerSelect.cxx:550,down,down,550,gui/ged/src/TGedMarkerSelect.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedMarkerSelect.cxx,1,['down'],['down']
Availability,"// @(#)root/ged:$Id$; // Author: Marek Biskup, Ilka Antcheva 22/07/03; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGedPatternFrame,; \ingroup ged. The TGedPatternFrame is a small frame with border showing; a specific pattern (fill style. */; /** \class TGedPatternSelector,; \ingroup ged. The TGedPatternSelector is a composite frame with TGedPatternFrames; of all diferent styles. */; /** \class TGedPatternPopup; \ingroup ged. The TGedPatternPopup is a popup containing a TGedPatternSelector. */; /** \class TGedPatternSelect; \ingroup ged. is a button with pattern area with; a little down arrow. When clicked on the arrow the; TGedPatternPopup pops up. Selecting a pattern in this widget will generate the event:; kC_PATTERNSEL, kPAT_SELCHANGED, widget id, style. and the signal:; PatternSelected(Style_t pattern). */; /** \class TGedSelect; \ingroup ged. is button that shows popup window when clicked. */; /** \class TGedPopup; \ingroup ged. is a popup window. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedPatternSelect.cxx:914,down,down,914,gui/ged/src/TGedPatternSelect.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedPatternSelect.cxx,1,['down'],['down']
Availability,"// @(#)root/graf:$Id$; // Author: Sebastian Boser, Mathieu Demaret 02/02/06; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGraphPolar; \ingroup BasicGraphics. To draw a polar graph. TGraphPolar creates a polar graph (including error bars). A TGraphPolar is; a TGraphErrors represented in polar coordinates.; It uses the class TGraphPolargram to draw the polar axis. Example:. Begin_Macro(source); {; TCanvas * CPol = new TCanvas(""CPol"",""TGraphPolar Example"",500,500);. Double_t theta[8];; Double_t radius[8];; Double_t etheta[8];; Double_t eradius[8];. for (int i=0; i<8; i++) {; theta[i] = (i+1)*(TMath::Pi()/4.);; radius[i] = (i+1)*0.05;; etheta[i] = TMath::Pi()/8.;; eradius[i] = 0.05;; }. TGraphPolar * grP1 = new TGraphPolar(8, theta, radius, etheta, eradius);; grP1->SetTitle(""TGraphPolar Example"");. grP1->SetMarkerStyle(20);; grP1->SetMarkerSize(2.);; grP1->SetMarkerColor(4);; grP1->SetLineColor(2);; grP1->SetLineWidth(3);; grP1->Draw(""PE"");. // Update, otherwise GetPolargram returns 0; CPol->Update();; grP1->GetPolargram()->SetToRadian();. return CPol;; }; End_Macro; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGraphPolar.cxx:551,error,error,551,graf2d/graf/src/TGraphPolar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGraphPolar.cxx,1,['error'],['error']
Availability,"// @(#)root/gui:$Id$; // Author: Bertrand Bellenot + Fons Rademakers 22/08/02; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. This source is based on Xclass95, a Win95-looking GUI toolkit.; Copyright (C) 1996, 1997 David Barth, Ricky Ralston, Hector Peraza. Xclass95 is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. **************************************************************************/; /** \class TGColorFrame; \ingroup guiwidgets. A small frame with border showing a specific color. */; /** \class TG16ColorSelector; \ingroup guiwidgets. A composite frame with 16 TGColorFrames. */; /** \class TGColorPopup; \ingroup guiwidgets. A popup containing a TG16ColorSelector and a ""More..."" button which popups up a; TGColorDialog allowing custom color selection. */; /** \class TGColorSelect; \ingroup guiwidgets. Like a checkbutton but instead of the check mark there is color area with a little down; arrow. When clicked on the arrow the TGColorPopup pops up. Selecting a color in this widget will generate the event:; - kC_COLORSEL, kCOL_SELCHANGED, widget id, pixel. and the signal:. - ColorSelected(Pixel_t color). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorSelect.cxx:1476,down,down,1476,gui/gui/src/TGColorSelect.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorSelect.cxx,1,['down'],['down']
Availability,"// @(#)root/gui:$Id$; // Author: Bertrand Bellenot 26/09/2007; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TRootBrowser; \ingroup guiwidgets. This class creates a ROOT object browser, constituted by three main tabs. All tabs can 'swallow' frames, thanks to the new method:; ExecPlugin(const char *name = 0, const char *fname = 0,; const char *cmd = 0, Int_t pos = kRight,; Int_t subpos = -1); allowing to select plugins (can be a macro or a command); to be executed, and where to embed the frame created by; the plugin (tab and tab element). ### Examples:. #### create a new browser:; ```; TBrowser b;; ```. #### create a new TCanvas in a new top right tab element:; ```; b.ExecPlugin(""Canvas"", 0, ""new TCanvas()"");; ```; #### create a new top right tab element embedding the TGMainFrame created by the macro 'myMacro.C':; ```; b.ExecPlugin(""MyPlugin"", ""myMacro.C"");; ```. #### create a new bottom tab element embedding the TGMainFrame created by the macro 'myMacro.C':; ```; b.ExecPlugin(""MyPlugin"", ""myMacro.C"", 0, TRootBrowser::kBottom);; ```. this browser implementation can be selected via the env; `Browser.Name` in `.rootrc`, (TRootBrowser or TRootBrowserLite); the default being TRootBrowserLite; a list of options (plugins) for the new TRootBrowser is also; specified via the env 'Browser.Options' in .rootrc, the default; being: FECI. Here is the list of available options:; - F: File browser; - E: Text Editor; - H: HTML browser C: Canvas I: I/O redirection; - P: Proof; - G: GL viewer. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowser.cxx:1690,avail,available,1690,gui/gui/src/TRootBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowser.cxx,1,['avail'],['available']
Availability,"// @(#)root/gui:$Id$; // Author: Daniel Sigg 03/09/2001; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGNumberEntry; \ingroup guiwidgets. TGNumberEntry is a number entry input widget with up/down buttons.; TGNumberEntryField is a number entry input widget.; TGNumberFormat contains enum types to specify the numeric format. The number entry widget is based on TGTextEntry but allows only; numerical input. The widget support numerous formats including; integers, hex numbers, real numbers, fixed fraction reals and; time/date formats. The widget also allows to restrict input values; to non-negative or positive numbers and to specify explicit limits. The following styles are supported:; - kNESInteger: integer number; - kNESRealOne: real number with one digit (no exponent); - kNESRealTwo: real number with two digits (no exponent); - kNESRealThree: real number with three digits (no exponent); - kNESRealFour: real number with four digits (no exponent); - kNESReal: arbitrary real number; - kNESDegree: angle in degree:minutes:seconds format; - kNESMinSec: time in minutes:seconds format; - kNESMinSecCent: time in minutes:seconds.centiseconds format; - kNESHourMin: time in hour:minutes format; - kNESHourMinSec: time in hour:minutes:seconds format; - kNESDayMYear: date in day/month/year format; - kNESMDayYear: date in month/day/year format; - kNESHex: hex number. The following attributes can be specified:; - kNEAAnyNumber: any number is allowed; - kNEANonNegative: only non-negative numbers are allowed; - kNEAPositive: only positive numbers are allowed. Explicit limits can be specified individually:; - kNELNoLimits: no limits; - kNELLimitMin: lower limit only; - kN",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx:515,down,down,515,gui/gui/src/TGNumberEntry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx,1,['down'],['down']
Availability,"// @(#)root/gui:$Id$; // Author: Fons Rademakers 10/7/2000; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. This source is based on Xclass95, a Win95-looking GUI toolkit.; Copyright (C) 1996, 1997 David Barth, Ricky Ralston, Hector Peraza. Xclass95 is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. **************************************************************************/; /** \class TGTextEditDialogs; \ingroup guiwidgets. This file defines several dialogs that are used by the TGTextEdit; widget via its associated context popup menu.; The following dialogs are available: TGSearchDialog, TGGotoDialog; and TGPrintDialog. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditDialogs.cxx:1142,avail,available,1142,gui/gui/src/TGTextEditDialogs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditDialogs.cxx,1,['avail'],['available']
Availability,"// @(#)root/gui:$Id$; // Author: Fons Rademakers 12/02/98; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TRootContextMenu; \ingroup guiwidgets. This class provides an interface to context sensitive popup menus.; These menus pop up when the user hits the right mouse button, and; are destroyed when the menu pops downs.; The picture below shows a canvas with a pop-up menu. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootContextMenu.cxx:635,down,downs,635,gui/gui/src/TRootContextMenu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootContextMenu.cxx,1,['down'],['downs']
Availability,"// @(#)root/gui:$Id$; // Author: Fons Rademakers 13/01/98; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. This source is based on Xclass95, a Win95-looking GUI toolkit.; Copyright (C) 1996, 1997 David Barth, Ricky Ralston, Hector Peraza. Xclass95 is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. **************************************************************************/; /** \class TGComboBox; \ingroup guiwidgets. A combobox (also known as a drop down listbox) allows the selection; of one item out of a list of items. The selected item is visible in; a little window. To view the list of possible items one has to click; on a button on the right of the little window. This will drop down; a listbox. After selecting an item from the listbox the box will; disappear and the newly selected item will be shown in the little; window. The TGComboBox is user callable. \class TGComboBoxPopup; \ingroup guiwidgets. A service class of the combobox. Selecting an item in the combobox will generate the event:; - kC_COMMAND, kCM_COMBOBOX, combobox id, item id. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGComboBox.cxx:1027,down,down,1027,gui/gui/src/TGComboBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGComboBox.cxx,2,['down'],['down']
Availability,"// @(#)root/gui:$Id: TGSpeedo.cxx; // Author: Bertrand Bellenot 26/10/06; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGSpeedo; \ingroup guiwidgets. TGSpeedo is a widget looking like a speedometer, with a needle,; a counter and a small odometer window. Three thresholds are configurable, with their glowing color; A peak mark can be enabled, allowing to keep track of the highest; value displayed. The mark can be reset by right-clicking on the; widget. Two signals are available:; - OdoClicked(): when user click on the small odometer window; - LedClicked(): when user click on the small led near the counter. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGSpeedo.cxx:795,avail,available,795,gui/gui/src/TGSpeedo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGSpeedo.cxx,1,['avail'],['available']
Availability,"// @(#)root/hist:$Id$; /** \class RooStats::HybridPlot; \ingroup Roostats. This class provides the plots for the result of a study performed with the; HybridCalculatorOriginal class. Authors: D. Piparo, G. Schott - Universitaet Karlsruhe. An example plot is available here:; http://www-ekp.physik.uni-karlsruhe.de/~schott/roostats/hybridplot_example.png; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HybridPlot.cxx:258,avail,available,258,roofit/roostats/src/HybridPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HybridPlot.cxx,1,['avail'],['available']
Availability,"// @(#)root/hist:$Id$; // Author: Christian Holm Christensen 07/11/2000; /** \class TMultiDimFit; \ingroup Hist. Multidimensional Fits in ROOT.; ## Overview; A common problem encountered in different fields of applied science is; to find an expression for one physical quantity in terms of several; others, which are directly measurable. An example in high energy physics is the evaluation of the momentum of; a charged particle from the observation of its trajectory in a magnetic; field. The problem is to relate the momentum of the particle to the; observations, which may consists of positional measurements at; intervals along the particle trajectory. The exact functional relationship between the measured quantities; (e.g., the space-points) and the dependent quantity (e.g., the; momentum) is in general not known, but one possible way of solving the; problem, is to find an expression which reliably approximates the; dependence of the momentum on the observations. This explicit function of the observations can be obtained by a; <I>least squares</I> fitting procedure applied to a representative; sample of the data, for which the dependent quantity (e.g., momentum); and the independent observations are known. The function can then be; used to compute the quantity of interest for new observations of the; independent variables. This class <TT>TMultiDimFit</TT> implements such a procedure in; ROOT. It is largely based on the CERNLIB MUDIFI package [2].; Though the basic concepts are still sound, and; therefore kept, a few implementation details have changed, and this; class can take advantage of MINUIT [4] to improve the errors; of the fitting, thanks to the class TMinuit. In [5] and [6] H. Wind demonstrates the utility; of this procedure in the context of tracking, magnetic field; parameterisation, and so on. The outline of the method used in this; class is based on Winds discussion, and I refer these two excellents; text for more information. And example of usage is given i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:900,reliab,reliably,900,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['reliab'],['reliably']
Availability,"// @(#)root/hist:$Id$; // Author: Christophe.Delaere@cern.ch 21/08/2002; ///////////////////////////////////////////////////////////////////////////; //; // TLimit; //; // Class to compute 95% CL limits; //; // adapted from the mclimit code from Tom Junk (CLs method); // see http://root.cern/root/doc/TomJunk.pdf; // see http://cern.ch/thomasj/searchlimits/ecl.html; // see: Tom Junk,NIM A434, p. 435-443, 1999; //; // see also the following interesting references:; // Alex Read, ""Presentation of search results: the CLs technique""; // Journal of Physics G: Nucl. Part. Phys. 28 2693-2704 (2002).; // http://www.iop.org/EJ/abstract/0954-3899/28/10/313/; //; // A nice article is also available in the CERN yellow report with the proceeding; // of the 2000 CERN workshop on confidence intervals.; //; // Alex Read, ""Modified Frequentist Analysis of Search Results (The CLs Method)""; // CERN 2000-005 (30 May 2000); //; ///////////////////////////////////////////////////////////////////////////; /** \class TLimit; \legacy{TLimit, Consider switching to RooStats.}; \ingroup Hist; Algorithm to compute 95% CL limits using the Likelihood ratio semi-bayesian method. Implemented by C. Delaere from the mclimit code written by Tom Junk [HEP-EX/9902006].; See [http://cern.ch/thomasj/searchlimits/ecl.html](http://cern.ch/thomasj/searchlimits/ecl.html) for more details. It takes signal, background and data histograms wrapped in a; TLimitDataSource as input and runs a set of Monte Carlo experiments in; order to compute the limits. If needed, inputs are fluctuated according; to systematics. The output is a TConfidenceLevel. The class TLimitDataSource takes the signal, background and data histograms as well as different; systematics sources to form the TLimit input. The class TConfidenceLevel represents the final result of the TLimit algorithm. It is created just after the; time-consuming part and can be stored in a TFile for further processing.; It contains light methods to return CLs, CLb and ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TLimit.cxx:686,avail,available,686,hist/hist/src/TLimit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TLimit.cxx,1,['avail'],['available']
Availability,"// @(#)root/hist:$Id$; // Author: Frank Filthaut, Rene Brun 30/05/2007; /*************************************************************************; * Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TBinomialEfficiencyFitter; \ingroup Hist; \brief Binomial fitter for the division of two histograms. Use when you need to calculate a selection's efficiency from two histograms,; one containing all entries, and one containing the subset of these entries; that pass the selection, and when you have a parametrization available for; the efficiency as a function of the variable(s) under consideration. A very common problem when estimating efficiencies is that of error estimation:; when no other information is available than the total number of events N and; the selected number n, the best estimate for the selection efficiency p is n/N.; Standard binomial statistics dictates that the uncertainty (this presupposes; sufficiently high statistics that an approximation by a normal distribution is; reasonable) on p, given N, is; \f[; \sqrt{\frac{p(1-p)}{N}}; \f]; However, when p is estimated as n/N, fluctuations from the true p to its; estimate become important, especially for low numbers of events, and giving; rise to biased results. When fitting a parametrized efficiency, these problems can largely be overcome,; as a hypothesized true efficiency is available by construction. Even so, simply; using the corresponding uncertainty still presupposes that Gaussian errors; yields a reasonable approximation. When using, instead of binned efficiency; histograms, the original numerator and denominator histograms, a binned maximum; likelihood can be constructed as the product of bin-by-bin binomial probabilities; to select n out of N events. Assuming that",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBinomialEfficiencyFitter.cxx:757,avail,available,757,hist/hist/src/TBinomialEfficiencyFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBinomialEfficiencyFitter.cxx,3,"['avail', 'error']","['available', 'error']"
Availability,"// @(#)root/io:$Id$; // Author: Rene Brun 28/12/94; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \class TKey; \ingroup IO. Book space in a file, create I/O buffers, to fill them, (un)compress them. The TKey class includes functions to book space in a file, to create I/O; buffers, to fill these buffers, to compress/uncompress data buffers.; Before saving (making persistent) an object in a file, a key must; be created. The key structure contains all the information to; uniquely identify a persistent object in a file.; | Data Member | Explanation |; |-------------|-------------|; | fNbytes | Number of bytes for the compressed object and key. |; | fObjlen | Length of uncompressed object. |; | fDatime | Date/Time when the object was written. |; | fKeylen | Number of bytes for the key structure. |; | fCycle | Cycle number of the object. |; | fSeekKey | Address of the object on file (points to fNbytes). This is a redundant information used to cross-check the data base integrity. |; | fSeekPdir | Pointer to the directory supporting this object.|; | fClassName | Object class name. |; | fName | Name of the object. |; | fTitle | Title of the object. |. In the 16 highest bits of fSeekPdir is encoded a pid offset. This; offset is to be added to the pid index stored in the TRef object; and the referenced TObject. The TKey class is used by ROOT to:; - Write an object in the current directory; - Write a new ntuple buffer. The structure of a file is shown in TFile::TFile.; The structure of a directory is shown in TDirectoryFile::TDirectoryFile.; The TKey class is used by the TBasket class.; See also TTree.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TKey.cxx:1238,redundant,redundant,1238,io/io/src/TKey.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TKey.cxx,1,['redundant'],['redundant']
Availability,"// @(#)root/mathcore:$Id$; // Author: Jonas Hahnfeld 11/2020; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class ROOT::Math::RanluxppEngine; Implementation of the RANLUX++ generator. RANLUX++ is an LCG equivalent of RANLUX using 576 bit numbers. The idea of the generator (such as the initialization method) and the algorithm; for the modulo operation are described in; A. Sibidanov, *A revision of the subtract-with-borrow random numbergenerators*,; *Computer Physics Communications*, 221(2017), 299-303,; preprint https://arxiv.org/pdf/1705.03123.pdf. The code is loosely based on the Assembly implementation by A. Sibidanov; available at https://github.com/sibidanov/ranluxpp/. Compared to the original generator, this implementation contains a fix to ensure; that the modulo operation of the LCG always returns the smallest value congruent; to the modulus (based on notes by M. Lüscher). Also, the generator converts the; LCG state back to RANLUX numbers (implementation based on notes by M. Lüscher).; This avoids a bias in the generated numbers because the upper bits of the LCG; state, that is smaller than the modulus \f$ m = 2^{576} - 2^{240} + 1 \f$ (not; a power of 2!), have a higher probability of being 0 than 1. And finally, this; implementation draws 48 random bits for each generated floating point number; (instead of 52 bits as in the original generator) to maintain the theoretical; properties from understanding the original transition function of RANLUX as a; chaotic dynamical system.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/RanluxppEngineImpl.cxx:946,avail,available,946,math/mathcore/src/RanluxppEngineImpl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/RanluxppEngineImpl.cxx,1,['avail'],['available']
Availability,"// @(#)root/mathcore:$Id$; // Author: Rene Brun, Lorenzo Moneta 17/05/2006; /**. \class TRandom2. Random number generator class based on the maximally quidistributed combined; Tausworthe generator by L'Ecuyer. The period of the generator is 2**88 (about 10**26) and it uses only 3 words; for the state. For more information see:; P. L'Ecuyer, Mathematics of Computation, 65, 213 (1996); P. L'Ecuyer, Mathematics of Computation, 68, 225 (1999). The publications are available online at; [http://www.iro.umontreal.ca/~lecuyer/myftp/papers/tausme.ps]; [http://www.iro.umontreal.ca/~lecuyer/myftp/papers/tausme2.ps]. @ingroup Random. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom2.cxx:465,avail,available,465,math/mathcore/src/TRandom2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom2.cxx,1,['avail'],['available']
Availability,"// @(#)root/matrix:$Id$; // Authors: Fons Rademakers, Eddy Offermann Dec 2003; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TDecompBase; \ingroup Matrix. Decomposition Base class. This class forms the base for all the decompositions methods in the; linear algebra package .; It or its derived classes have installed the methods to solve; equations,invert matrices and calculate determinants while monitoring; the accuracy. Each derived class has always the following methods available:. #### Condition() :; In an iterative scheme the condition number for matrix inversion is; calculated . This number is of interest for estimating the accuracy; of x in the equation Ax=b; For example:; A is a (10x10) Hilbert matrix which looks deceivingly innocent; and simple, A(i,j) = 1/(i+j+1); b(i) = Sum_j A(i,j), so a sum of a row in A. the solution is x(i) = 1. i=0,.,9. However,; ~~~; TMatrixD m....; TVectorD b.....; TDecompLU lu(m); lu.SetTol(1.0e-12); lu.Solve(b); b.Print(); ~~~; gives,. ~~~; {1.000,1.000,1.000,1.000,0.998,1.000,0.993,1.001,0.996,1.000}; ~~~. Looking at the condition number, this is in line with expected the; accuracy . The condition number is 3.957e+12 . As a simple rule of; thumb, a condition number of 1.0e+n means that you lose up to n; digits of accuracy in a solution . Since doubles are stored with 15; digits, we can expect the accuracy to be as small as 3 digits . #### Det(Double_t &d1,Double_t &d2); The determinant is d1*TMath::Power(2.,d2); Expressing the determinant this way makes under/over-flow very; unlikely . #### Decompose(); Here the actually decomposition is performed . One can change the; matrix A after the decomposition constructor h",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx:799,avail,available,799,math/matrix/src/TDecompBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx,1,['avail'],['available']
Availability,"// @(#)root/matrix:$Id$; // Authors: Fons Rademakers, Eddy Offermann Dec 2003; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TDecompQRH; \ingroup Matrix. QR Decomposition class. Decompose a general (m x n) matrix A into A = fQ' fR H where. ~~~; fQ : (m x n) - internal Q' matrix (not orthoginal); fR : (n x n) - upper triangular matrix; H : HouseHolder matrix which is stored through; fUp: (n) - vector with Householder up's; fW : (n) - vector with Householder beta's; ~~~. If row/column index of A starts at (rowLwb,colLwb) then; the decomposed matrices start from :; ~~~; fQ' : (rowLwb,0); fR : (0,colLwb); and the decomposed vectors start from :; fUp : (0); fW : (0); ~~~. In order to get the QR dcomposition of A (i.e. A = QR ); The orthoginal matrix Q needs to be computed from the internal Q' and; the up's and beta's vector defining the Householder transformation. The orthogonal Q matrix is returned to the user by calling the; function TDecompQRH::GetOrthogonalMatrix(). Errors arise from formation of reflectors i.e. singularity .; Note it attempts to handle the cases where the nRow <= nCol .; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompQRH.cxx:1303,Error,Errors,1303,math/matrix/src/TDecompQRH.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompQRH.cxx,1,['Error'],['Errors']
Availability,"// @(#)root/matrix:$Id$; // Authors: Fons Rademakers, Eddy Offermann Nov 2003; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVectorT; \ingroup Matrix. TVectorT. Template class of Vectors in the linear algebra package. See the \ref Matrix page for the documentation of the linear algebra package. Unless otherwise specified, vector indices always start with 0,; spanning up to the specified limit-1. For (n) vectors where n <= kSizeMax (5 currently) storage space is; available on the stack, thus avoiding expensive allocation/; deallocation of heap space . However, this introduces of course; kSizeMax overhead for each vector object . If this is an issue; recompile with a new appropriate value (>=0) for kSizeMax. Another way to assign and store vector data is through Use; see for instance stressLinear.cxx file . Note that Constructors/assignments exists for all different matrix; views. For usage examples see `$ROOTSYS/test/stressLinear.cxx`. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TVectorT.cxx:791,avail,available,791,math/matrix/src/TVectorT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TVectorT.cxx,1,['avail'],['available']
Availability,"// @(#)root/net:$Id$; // Author: Fons Rademakers 28/08/2003; /*************************************************************************; * Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // NetErrors //; // //; // This file defines error strings mapped to the error codes generated //; // by rootd/proofd. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/NetErrors.cxx:547,error,error,547,net/net/src/NetErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/NetErrors.cxx,2,['error'],['error']
Availability,"// @(#)root/physics:$Id$; // Author: Anna Kreshuk 08/10/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TRobustEstimator; \note Despite being in the group of Legacy statistics classes, TRobustEstimator is still useful and no drop-in replacement exists for it.; \ingroup Physics; Minimum Covariance Determinant Estimator - a Fast Algorithm; invented by Peter J.Rousseeuw and Katrien Van Dreissen; ""A Fast Algorithm for the Minimum covariance Determinant Estimator""; Technometrics, August 1999, Vol.41, NO.3. What are robust estimators?; ""An important property of an estimator is its robustness. An estimator; is called robust if it is insensitive to measurements that deviate; from the expected behaviour. There are 2 ways to treat such deviating; measurements: one may either try to recognise them and then remove; them from the data sample; or one may leave them in the sample, taking; care that they do not influence the estimate unduly. In both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected.""; R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz; ""Data Analysis Techniques for High-Energy Physics"", 2nd edition. What does this algorithm do?; It computes a highly robust estimator of multivariate location and scatter.; Then, it takes those estimates to compute robust distances of all the; data vectors. Those with large robust distances are considered outliers.; Robust distances can then be plotted for better visualization of the data. How does this algorithm do it?; The MCD objective is to find h observation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx:843,robust,robust,843,math/physics/src/TRobustEstimator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx,3,['robust'],"['robust', 'robustness']"
Availability,"// @(#)root/physics:$Id$; // Author: Pasha Murat , Peter Malzacher 12/02/99; // Oct 8 1999: changed Warning to Error and; // return fX in Double_t & operator(); // Oct 20 1999: ditto in Double_t operator(); // Jan 25 2000: implemented as (fP,fE) instead of (fX,fY,fZ,fE); /** \class TLorentzVector; \ingroup Physics. \attention \parblock; TLorentzVector is a legacy class.; It is slower and worse for serialization than the recommended superior alternative ROOT::Math::LorentzVector.; ROOT provides specialisations of the ROOT::Math::LorentzVector template which; offer superior runtime performance, i.e.:; - ROOT::Math::PtEtaPhiMVector based on pt (rho),eta,phi and M (t) coordinates in double precision; - ROOT::Math::PtEtaPhiEVector based on pt (rho),eta,phi and E (t) coordinates in double precision; - ROOT::Math::PxPyPzMVector based on px,py,pz and M (mass) coordinates in double precision; - ROOT::Math::PxPyPzEVector based on px,py,pz and E (energy) coordinates in double precision; - ROOT::Math::XYZTVector based on x,y,z,t coordinates (cartesian) in double precision (same as PxPyPzEVector); - ROOT::Math::XYZTVectorF based on x,y,z,t coordinates (cartesian) in float precision (same as PxPyPzEVector but float). More details can be found in the documentation of the @ref GenVector package.; \endparblock. ### Description; TLorentzVector is a general four-vector class, which can be used; either for the description of position and time (x,y,z,t) or momentum and; energy (px,py,pz,E). ### Declaration; TLorentzVector has been implemented as a set a TVector3 and a Double_t variable.; By default all components are initialized by zero. ~~~ {.cpp}; TLorentzVector v1; // initialized by (0., 0., 0., 0.); TLorentzVector v2(1., 1., 1., 1.);; TLorentzVector v3(v1);; TLorentzVector v4(TVector3(1., 2., 3.),4.);; ~~~. For backward compatibility there are two constructors from an Double_t; and Float_t C array. ### Access to the components; There are two sets of access functions to the components",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TLorentzVector.cxx:111,Error,Error,111,math/physics/src/TLorentzVector.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TLorentzVector.cxx,1,['Error'],['Error']
Availability,"// @(#)root/physics:$Id$; // Author: Pasha Murat, Peter Malzacher 12/02/99; // Aug 11 1999: added Pt == 0 guard to Eta(); // Oct 8 1999: changed Warning to Error and; // return fX in Double_t & operator(); // Oct 20 1999: Bug fix: sign in PseudoRapidity; // Warning-> Error in Double_t operator(); /** \class TVector3; \ingroup Physics. \attention \parblock; TVector3 is a legacy class. It is slower and worse for serialization than the recommended superior alternative ROOT::Math::XYZVector. More details can be found in the documentation of the @ref GenVector package.; \endparblock. TVector3 is a general three vector class, which can be used for; the description of different vectors in 3D. ### Declaration / Access to the components. TVector3 has been implemented as a vector of three Double_t; variables, representing the cartesian coordinates. By default all components; are initialized to zero:. ~~~; TVector3 v1; // v1 = (0,0,0); TVector3 v3(1,2,3); // v3 = (1,2,3); TVector3 v4(v2); // v4 = v2; ~~~. It is also possible (but not recommended) to initialize a TVector3; with a Double_t or Float_t C array. You can get the basic components either by name or by index using operator():. ~~~; xx = v1.X(); or xx = v1(0);; yy = v1.Y(); yy = v1(1);; zz = v1.Z(); zz = v1(2);; ~~~. The member functions SetX(), SetY(), SetZ() and SetXYZ() allow to set the components:. ~~~; v1.SetX(1.); v1.SetY(2.); v1.SetZ(3.);; v1.SetXYZ(1.,2.,3.);; ~~~. ### Non-cartesian coordinates. To get information on the TVector3 in spherical (rho,phi,theta); or cylindrical (z,r,theta) coordinates, the. the member functions Mag() (=magnitude=rho in spherical coordinates),; Mag2(), Theta(), CosTheta(), Phi(), Perp() (the transverse component=r in; cylindrical coordinates), Perp2() can be used:. ~~~; Double_t m = v.Mag(); // get magnitude (=rho=Sqrt(x*x+y*y+z*z))); Double_t m2 = v.Mag2(); // get magnitude squared; Double_t t = v.Theta(); // get polar angle; Double_t ct = v.CosTheta(); // get cos of theta; Double_t ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TVector3.cxx:156,Error,Error,156,math/physics/src/TVector3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TVector3.cxx,2,['Error'],['Error']
Availability,"// @(#)root/physics:$Id$; // Author: Rene Brun , Valerio Filippini 06/09/2000; /** \class TGenPhaseSpace; \legacy{TGenPhaseSpace, No alternative classes are currently available.}; \ingroup Physics. Utility class to generate n-body event,; with constant cross-section (default); or with Fermi energy dependence (opt=""Fermi"").; The event is generated in the center-of-mass frame,; but the decay products are finally boosted; using the betas of the original particle. The code is based on the GENBOD function (W515 from CERNLIB); using the Raubold and Lynch method; F. James, Monte Carlo Phase Space, CERN 68-15 (1968). see example of use in PhaseSpace.C. Note that Momentum, Energy units are Gev/C, GeV; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TGenPhaseSpace.cxx:167,avail,available,167,math/physics/src/TGenPhaseSpace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TGenPhaseSpace.cxx,1,['avail'],['available']
Availability,"// @(#)root/proofplayer:$Id$; // Author: Maarten Ballintijn 7/06/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStatus; \ingroup proofkernel. This class holds the status of an ongoing operation and collects; error messages. It provides a Merge() operation allowing it to; be used in PROOF to monitor status in the slaves.; No messages indicates success. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx:537,error,error,537,proof/proofplayer/src/TStatus.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx,1,['error'],['error']
Availability,"// @(#)root/pythia8:$Name$:$Id$; // Author: Andreas Morsch 27/10/2007; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TPythia8; \ingroup pythia8. TPythia8 is an interface class to C++ version of Pythia 8.1 ; event generators, written by T.Sjostrand. The user is assumed to be familiar with the Pythia package.; This class includes only a basic interface to Pythia8. Because Pythia8 is; also written in C++, its functions/classes can be called directly from a ; compiled C++ script. To call Pythia functions not available in this interface a dictionary must; be generated. See $ROOTSYS/tutorials/pythia/pythia8.C for an example of use from CINT. Author: Andreas Morsch 27/10/2007. \verbatim; *------------------------------------------------------------------------------------*; | |; | *------------------------------------------------------------------------------* |; | | | |; | | | |; | | PPP Y Y TTTTT H H III A Welcome to the Lund Monte Carlo! | |; | | P P Y Y T H H I A A This is PYTHIA version 8.100 | |; | | PPP Y T HHHHH I AAAAA Last date of change: 20 Oct 2007 | |; | | P Y T H H I A A | |; | | P Y T H H III A A Now is 27 Oct 2007 at 18:26:53 | |; | | | |; | | Main author: Torbjorn Sjostrand; CERN/PH, CH-1211 Geneva, Switzerland, | |; | | and Department of Theoretical Physics, Lund University, Lund, Sweden; | |; | | phone: + 41 - 22 - 767 82 27; e-mail: torbjorn@thep.lu.se | |; | | Author: Stephen Mrenna; Computing Division, Simulations Group, | |; | | Fermi National Accelerator Laboratory, MS 234, Batavia, IL 60510, USA; | |; | | phone: + 1 - 630 - 840 - 2556; e-mail: mrenna@fnal.gov | |; | | Author: Peter Skands; CERN/PH, CH-1211 Geneva, Switzerland, | |; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/pythia8/src/TPythia8.cxx:833,avail,available,833,montecarlo/pythia8/src/TPythia8.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/pythia8/src/TPythia8.cxx,1,['avail'],['available']
Availability,"// @(#)root/roostats:$Id$; /*************************************************************************; * Project: RooStats *; * Package: RooFit/RooStats *; * Authors: *; * Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke *; *************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::HybridResult; \ingroup Roostats. Class encapsulating the result of the HybridCalculatorOriginal.; This class is a fresh rewrite in RooStats of; RooStatsCms/LimitResults developed by D. Piparo and G. Schott; New contributions to this class have been written by Matthias Wolf (error estimation). The objects of this class store and access with lightweight methods the; information calculated by LimitResults through a Lent calculation using; MC toy experiments.; In some ways can be considered an extended and extensible implementation of; TConfidenceLevel.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HybridResult.cxx:890,error,error,890,roofit/roostats/src/HybridResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HybridResult.cxx,1,['error'],['error']
Availability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::HypoTestInverterResult; \ingroup Roostats. HypoTestInverterResult class holds the array of hypothesis test results and compute a confidence interval.; Based on the RatioFinder code available in the RooStatsCms package developed by Gregory Schott and Danilo Piparo; Ported and adapted to RooStats by Gregory Schott; Some contributions to this class have been written by Matthias Wolf (error estimation). */; // include header file of this class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx:661,avail,available,661,roofit/roostats/src/HypoTestInverterResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx,2,"['avail', 'error']","['available', 'error']"
Availability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*****************************************************************************; * Project: RooStats; * Package: RooFit/RooStats; * @(#)root/roofit/roostats:$Id$; * Authors:; * Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; *; *****************************************************************************/; /** \class RooStats::LikelihoodInterval; \ingroup Roostats. LikelihoodInterval is a concrete implementation of the RooStats::ConfInterval interface.; It implements a connected N-dimensional intervals based on the contour of a likelihood ratio.; The boundary of the interval is equivalent to a MINUIT/MINOS contour about the maximum likelihood estimator. The interval does not need to be an ellipse (eg. it is not the HESSE error matrix).; The level used to make the contour is the same as that used in MINOS, eg. it uses Wilks' theorem,; which states that under certain regularity conditions the function -2* log (profile likelihood ratio) is asymptotically distributed as a chi^2 with N-dof, where; N is the number of parameters of interest. Note, a boundary on the parameter space (eg. s>= 0) or a degeneracy (eg. mass of signal if Nsig = 0) can lead to violations of the conditions necessary for Wilks'; theorem to be true. Also note, one can use any RooAbsReal as the function that will be used in the contour; however, the level of the contour; is based on Wilks' theorem as stated above. #### References. * 1. F. James., Minuit.Long writeup D506, CERN, 1998. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/LikelihoodInterval.cxx:1204,error,error,1204,roofit/roostats/src/LikelihoodInterval.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/LikelihoodInterval.cxx,1,['error'],['error']
Availability,"// @(#)root/rpdutils:$Id$; // Author: Fons Rademakers 11/08/97; // Modifified: Gerardo Ganis 8/04/2003; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // error //; // //; // Set of error handling routines for daemon process. //; // Merging of rootd and proofd/src/error.cxx //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/error.cxx:548,error,error,548,net/rpdutils/src/error.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/error.cxx,3,['error'],['error']
Availability,"// @(#)root/sessionviewer:$Id$; // Author: Marek Biskup, Jakub Madejczyk, Bertrand Bellenot 10/08/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TSessionDialogs; \ingroup sessionviewer. This file defines several dialogs that are used by TSessionViewer.; The following dialogs are available: TNewChainDlg and TNewQueryDlg. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx:608,avail,available,608,gui/sessionviewer/src/TSessionDialogs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx,1,['avail'],['available']
Availability,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/2006; /** \class TSpectrum3; \ingroup Spectrum; \brief Advanced 3-dimensional spectra processing functions; \author Miroslav Morhac. \legacy{TSpectrum3, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. This class contains advanced spectra processing functions. - Three-dimensional background estimation functions; - Three-dimensional smoothing functions; - Three-dimensional deconvolution functions; - Three-dimensional peak search functions. The algorithms in this class have been published in the following; references:. [1] M.Morhac et al.: Background elimination methods for; multidimensional coincidence gamma-ray spectra. Nuclear; Instruments and Methods in Physics Research A 401 (1997) 113-132. [2] M.Morhac et al.: Efficient one- and two-dimensional Gold; deconvolution and its application to gamma-ray spectra; decomposition. Nuclear Instruments and Methods in Physics; Research A 401 (1997) 385-408. [3] M. Morhac et al.: Efficient algorithm of multidimensional; deconvolution and its application to nuclear data processing. Digital; Signal Processing, Vol. 13, No. 1, (2003), 144-171. [4] M.Morhac et al.: Identification of peaks in multidimensional; coincidence gamma-ray spectra. Nuclear Instruments and Methods in; Research Physics A 443(2000), 108-125. These NIM papers are also available as Postscript files from:. - [SpectrumDec.ps.gz](ftp://root.cern/root/SpectrumDec.ps.gz); - [SpectrumSrc.ps.gz](ftp://root.cern/root/SpectrumSrc.ps.gz); - [SpectrumBck.ps.gz](ftp://root.cern/root/SpectrumBck.ps.gz). See also the; [online documentation](https://root.cern/guides/tspectrum-manual) and; [tutorials](https://root.cern/doc/master/group__tutorial__spectrum.html).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:1448,avail,available,1448,hist/spectrum/src/TSpectrum3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx,1,['avail'],['available']
Availability,"// @(#)root/test:$Id$; // Author: David Smith 20/10/14; /////////////////////////////////////////////////////////////////; //; //___A test for I/O plugins by reading files___; //; // The files used in this test have been generated by; // stress.cxx and preplaced on some data servers.; // stressIOPlugins reads the remote files via various data; // access protocols to test ROOT IO plugins. The data read are; // tested via tests based on some of stress.cxx tests.; //; // Can be run as:; // stressIOPlugins [name]; //; // The name parameter is a protocol name, as expected; // in a url. The supported names are: xroot, root, http, https.; // If the name is omitted a selection of schemes are tested; // based on feature availability:; //; // feature protocol multithreaded test available; //; // xrootd root no; // davix http no; //; // An example of output of a non multithreaded test, when all the tests; // run OK is shown below:; //; // ****************************************************************************; // * Starting stressIOPlugins test for protocol http; // * Test files will be read from:; // * http://root.cern/files/StressIOPluginsTestFiles/; // ****************************************************************************; // Test 1 : Check size & compression factor of a Root file........ using stress_2.root; // : opened file with plugin class......................... TDavixFile; // : Check size & compression factor of a Root file........ OK; // Test 2 : Test graphics & Postscript............................ using stress_5.root; // : opened file with plugin class......................... TDavixFile; // : Test graphics & Postscript............................ OK; // Test 3 : Trees split and compression modes..................... using Event_8a.root; // : opened file with plugin class......................... TDavixFile; // : Trees split and compression modes..................... using Event_8b.root; // : opened file with plugin class......................... TDavix",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressIOPlugins.cxx:721,avail,availability,721,test/stressIOPlugins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressIOPlugins.cxx,2,['avail'],"['availability', 'available']"
Availability,"// @(#)root/test:$Id$; // Author: Fons Rademakers 14/11/97; //; // Sample code showing off a few advanced features; // and comparing them (time-wise) with traditional ones.; //; // Simple example: downsampling a matrix, that is, creating a matrix; // that is 4 times (twice in each dimension) smaller than the original; // matrix, by picking every other sample of the latter.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/vlazy.cxx:197,down,downsampling,197,test/vlazy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/vlazy.cxx,1,['down'],['downsampling']
Availability,"// @(#)root/test:$name: $:$id: stressHistoFit.cxx,v 1.15 2002/10/25 10:47:51 rdm exp $; // Authors: David Gonzalez Maline November 2008; //*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*//; // //; // //; // Set of tests for different minimization algorithms and for //; // different objects. The tests are divided into three types: //; // //; // 1. 1D and 2D Objects, including 1D and 2D histograms, 1D and 2D //; // histograms with variable bins, TGraph, TGraphErrors, TGraph2D, //; // TGraph2DErrors //; // 2. Same as before, but trying linear fitters. //; // 3. Unbinned fits with trees of different dimensions. //; // //; // Each test will performed fits with different functions and //; // different minimization algorithms selected. There is an error //; // tolerance for each one of them. There is also the possibility to //; // inspect each one of the test individually changing the //; // defaultOptions variable. //; // //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O F I T *; // ****************************************************************************; // Test 1D and 2D objects; // Test 1: 'Histogram 1D Variable' with 'GAUS'...................OK; // Test 2: 'Histogram 1D' with 'GAUS'............................OK; // Test 3: 'TGraph 1D' with 'GAUS'...............................OK; // Test 4: 'TGraphErrors 1D' with 'GAUS'.........................OK; // Test 5: 'THnSparse 1D' with 'GAUS'............................OK; // Test 6: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' wi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:783,error,error,783,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,2,"['error', 'toler']","['error', 'tolerance']"
Availability,"// @(#)root/tmva $Id$; // Author: Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDecisionTree *; * *; * *; * Description: *; * Implementation of decision tree like PDEFoam *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamDecisionTree; \ingroup TMVA. This PDEFoam variant acts like a decision tree and stores in every; cell the discriminant. D = #events with given class / total number of events. as well as the statistical error on the discriminant. It therefore; acts as a discriminant estimator. The decision tree-like behaviour; is achieved by overriding PDEFoamDiscriminant::Explore() to use a; decision tree-like cell splitting algorithm (given a separation; type). This PDEFoam variant should be booked together with the; PDEFoamDecisionTreeDensity density estimator, which returns the; events in a cell without sampling.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDecisionTree.cxx:1182,error,error,1182,tmva/tmva/src/PDEFoamDecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDecisionTree.cxx,1,['error'],['error']
Availability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodTMlpANN *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodTMlpANN; \ingroup TMVA. This is the TMVA TMultiLayerPerceptron interface class. It provides the; training and testing the ROOT internal MLP class in the TMVA framework. Available learning methods:<br>. - Stochastic; - Batch; - SteepestDescent; - RibierePolak; - FletcherReeves; - BFGS. See the TMultiLayerPerceptron class description; for details on this ANN.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodTMlpANN.cxx:1185,Avail,Available,1185,tmva/tmva/src/MethodTMlpANN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodTMlpANN.cxx,1,['Avail'],['Available']
Availability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : GiniIndex *; * *; * *; * Description: Implementation of the GiniIndex as separation criterion *; * Large Gini Indices (maximum 0.5) mean , that the sample is well *; * mixed (same amount of signal and bkg) *; * bkg. Small Indices mean, well separated. *; * general definition: *; * Gini(Sample M) = 1 - (c(1)/N)^2 - (c(2)/N)^2 .... - (c(k)/N)^2 *; * Where: M is a sample of whatever N elements (events) *; * that belong to K different classes *; * c(k) is the number of elements that belong to class k *; * for just Signal and Background classes this boils down to: *; * Gini(Sample) = 2s*b/(s+b)^2 *; * *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://ttmva.sourceforge.net/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GiniIndex.h:837,down,down,837,tmva/tmva/inc/TMVA/GiniIndex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GiniIndex.h,1,['down'],['down']
Availability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SeparationBase *; * *; * *; * Description: An interface to different separation criteria used in various *; * training algorithms, as there are: *; * Gini-Index, Cross Entropy, Misclassification Error, e.t.c. *; * *; * There are two things: the Separation Index, and the Separation Gain *; * Separation Index: *; * Measure of the ""purity"" of a sample. If all elements (events) in the *; * sample belong to the same class (e.g. signal or backgr), than the *; * separation index is 0 (meaning 100% purity (or 0% purity as it is *; * symmetric. The index becomes maximal, for perfectly mixed samples *; * eg. purity=50% , N_signal = N_bkg *; * *; * Separation Gain: *; * the measure of how the quality of separation of the sample increases *; * by splitting the sample e.g. into a ""left-node"" and a ""right-node"" *; * (N * Index_parent) - (N_left * Index_left) - (N_right * Index_right) *; * this is then the quality criterion which is optimized for when trying *; * to increase the information in the system (making the best selection *; * *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SeparationBase.h:475,Error,Error,475,tmva/tmva/inc/TMVA/SeparationBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SeparationBase.h,1,['Error'],['Error']
Availability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::GiniIndex *; * *; * *; * Description: Implementation of the GiniIndex With Laplace correction *; * as separation criterion *; * Gini(Sample M) = 1 - (c(1)/N)^2 - (c(2)/N)^2 .... - (c(k)/N)^2 *; * Where: M is a sample of whatever N elements (events) *; * that belong to K different classes *; * c(k) is the number of elements that belong to class k *; * Laplace's correction to the prob.density c/N --> (c+1)/(N+2) *; * for just Signal and Background classes this then boils down to: *; * Gini(Sample) = 2(s*b+s+b+1)/(s+b+2)^2 *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::GiniIndexWithLaplace; \ingroup TMVA. Implementation of the GiniIndex With Laplace correction as separation criterion. Large Gini Indices (maximum 0.5) mean , that the sample is well mixed (same; amount of signal and bkg) bkg. Small Indices mean, well separated. #### General definition:. \f[; Gini(Sample M) = 1 - (\frac{c(1)}{N})^2 - (\frac{c(2)}{N})^2 .... - (\frac{c(k)}{N})^2; \f]. Where:. \f$ M \f$ is a sample of whatever \f$ N \f$ elements (events) that belong; to \f$ K \f$ different classes. \f$ c(k) \f$ is the number of elements that belong to class \f$ k \f$ fo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GiniIndexWithLaplace.cxx:760,down,down,760,tmva/tmva/src/GiniIndexWithLaplace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GiniIndexWithLaplace.cxx,1,['down'],['down']
Availability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::GiniIndex *; * *; * *; * Description: Implementation of the GiniIndex as separation criterion *; * Large Gini Indices (maximum 0.5) mean , that the sample is well *; * mixed (same amount of signal and bkg) *; * bkg. Small Indices mean, well separated. *; * general definition: *; * Gini(Sample M) = 1 - (c(1)/N)^2 - (c(2)/N)^2 .... - (c(k)/N)^2 *; * Where: M is a sample of whatever N elements (events) *; * that belong to K different classes *; * c(k) is the number of elements that belong to class k *; * for just Signal and Background classes this boils down to: *; * Gini(Sample) = 2s*b/(s+b)^2 *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::GiniIndex; \ingroup TMVA. Implementation of the GiniIndex as separation criterion. Large Gini Indices (maximum 0.5) mean , that the sample is well mixed (same; amount of signal and bkg) bkg. Small Indices mean, well separated. #### General definition:. \f[; Gini(Sample M) = 1 - (\frac{c(1)}{N})^2 - (\frac{c(2)}{N})^2 .... - (\frac{c(k)}{N})^2; \f]. Where:. \f$ M \f$ is a sample of whatever \f$ N \f$ elements (events) that belong; to \f$ K \f$ different classes. \f$ c(k) \f$ is the number of elem",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GiniIndex.cxx:843,down,down,843,tmva/tmva/src/GiniIndex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GiniIndex.cxx,1,['down'],['down']
Availability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Header : MethodCFMlpANN_def *; * *; * *; * Description: *; * Common definition for CFMlpANN method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Xavier Prudent <prudent@lapp.in2p3.fr> - LAPP, France *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; // ------------- common definitions used in several modules --------------; // recovered explicit array definitions from f2c override",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN_def.h:1137,recover,recovered,1137,tmva/tmva/inc/TMVA/MethodCFMlpANN_def.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN_def.h,1,['recover'],['recovered']
Availability,"// @(#)root/tmva $Id$; // Author: Simon Pfreundschuh; /*************************************************************************; * Copyright (C) 2016, Simon Pfreundschuh *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////; // Generic tests of the layer activation functions //; // //; // Contains tests for each of the layer activation functions that //; // test the evaluation of the function using the evaluate(...) //; // method and the computation of the derivatives using //; // evaluate_derivative(...) on a randomly generated matrix. Each //; // function returns the maximum relative error between the expected //; // result and the result obtained for the given arcthitecture. //; //////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestActivationFunctions.h:835,error,error,835,tmva/tmva/test/DNN/TestActivationFunctions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestActivationFunctions.h,1,['error'],['error']
Availability,"// @(#)root/tmva $Id$; // Author: Simon Pfreundschuh; /*************************************************************************; * Copyright (C) 2016, Simon Pfreundschuh; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /////////////////////////////////////////////////////////////////////; // Test Standard Minimizer //; // //; // This test trains a linear neural network on a linear function //; // F(x) = W * x and computes the relative error between the matrix //; // W' representing the linear function learned by the net to the //; // orignal matrix W. //; /////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMinimization.h:613,error,error,613,tmva/tmva/test/DNN/TestMinimization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMinimization.h,1,['error'],['error']
Availability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDiscriminant *; * *; * *; * Description: *; * Concrete PDEFoam sub-class. This foam stores the discriminant D *; * = N_sig / (N_bg + N_sig) with every cell, as well as the *; * statistical error on the discriminant. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDiscriminant.h:474,error,error,474,tmva/tmva/inc/TMVA/PDEFoamDiscriminant.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDiscriminant.h,1,['error'],['error']
Availability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDiscriminant *; * *; * *; * Description: *; * Implementation. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamDiscriminant; \ingroup TMVA. This PDEFoam variant stores in every cell the discriminant. D = #events with given class / total number of events. as well as the statistical error on the discriminant. It therefore; acts as a discriminant estimator. It should be booked together; with the PDEFoamDiscriminantDensity density estimator, which; returns the discriminant density at a given phase space point; during the foam build-up.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDiscriminant.cxx:1162,error,error,1162,tmva/tmva/src/PDEFoamDiscriminant.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDiscriminant.cxx,1,['error'],['error']
Availability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamEvent *; * *; * *; * Description: *; * Concrete PDEFoam sub-class. This foam stores the number of *; * events with every cell, as well as the statistical error on *; * the event number. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamEvent.h:439,error,error,439,tmva/tmva/inc/TMVA/PDEFoamEvent.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamEvent.h,1,['error'],['error']
Availability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamMultiTarget *; * *; * *; * Description: *; * Concrete PDEFoamEvent sub-class. This foam stores the number *; * of events with every cell, as well as the statistical error on *; * the event number. It overrides GetCellValue() for projecting *; * the target values given an incomplete event map with *; * N_variables < dimension of foam. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamMultiTarget.h:450,error,error,450,tmva/tmva/inc/TMVA/PDEFoamMultiTarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamMultiTarget.h,1,['error'],['error']
Availability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamTarget *; * *; * *; * Description: *; * Concrete PDEFoam sub-class. This foam stores the first target *; * (index 0) with every cell, as well as the statistical error on *; * the target. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamTarget.h:446,error,error,446,tmva/tmva/inc/TMVA/PDEFoamTarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamTarget.h,1,['error'],['error']
Availability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamTarget *; * *; * *; * Description: *; * Implementation. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamTarget; \ingroup TMVA; This PDEFoam variant stores in every cell the average target; fTarget (see the Constructor) as well as the statistical error on; the target fTarget. It therefore acts as a target estimator. It; should be booked together with the PDEFoamTargetDensity density; estimator, which returns the target fTarget density at a given; phase space point during the foam build-up.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamTarget.cxx:1127,error,error,1127,tmva/tmva/src/PDEFoamTarget.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamTarget.cxx,1,['error'],['error']
Availability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Downsample method on a CPU architecture *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Convolutional Layer //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvLayer.h:294,Down,Downsample,294,tmva/tmva/test/DNN/CNN/TestConvLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvLayer.h,2,['Down'],['Downsample']
Availability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Downsample method on a CPU architecture *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Convolutional Layer on the GPU. //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvLayerCuda.cxx:294,Down,Downsample,294,tmva/tmva/test/DNN/CNN/TestConvLayerCuda.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvLayerCuda.cxx,2,['Down'],['Downsample']
Availability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing the Pooling Layer on a CPU architecture *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Downsample function //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestPoolingLayerCpu.cxx:930,Down,Downsample,930,tmva/tmva/test/DNN/CNN/TestPoolingLayerCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestPoolingLayerCpu.cxx,3,['Down'],['Downsample']
Availability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing the Pooling Layer on a CPU architecture *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Downsample function //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestPoolingLayer.cxx:931,Down,Downsample,931,tmva/tmva/test/DNN/CNN/TestPoolingLayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestPoolingLayer.cxx,1,['Down'],['Downsample']
Availability,"// @(#)root/tree:$Id$; // Author: Anna Kreshuk 17/03/2007; /*************************************************************************; * Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TEntryListFromFile; \ingroup tree. Manages entry lists from different files, when they are not loaded; in memory at the same time. This entry list should only be used when processing a TChain (see; TChain::SetEntryList() function). File naming convention:; - by default, filename_elist.root is used, where filename is the; name of the chain element.; - xxx$xxx.root - $ sign is replaced by the name of the chain element; If the list name is not specified (by passing filename_elist.root/listname to; the TChain::SetEntryList() function, the first object of class TEntryList; in the file is taken.; It is assumed that there are as many lists, as there are chain elements,; and they are in the same order. If one of the list files can't be opened, or there is an error reading a list; from the file, this list is skipped and the entry loop continues on the next; list.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TEntryListFromFile.cxx:1189,error,error,1189,tree/tree/src/TEntryListFromFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TEntryListFromFile.cxx,1,['error'],['error']
Availability,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 01/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TFormLeafInfo; This class is a small helper class to implement reading a data member; on an object stored in a TTree. TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; - TFormLeafInfo; - TFormLeafInfoDirect; - TFormLeafInfoNumerical; - TFormLeafInfoClones; - TFormLeafInfoCollection; - TFormLeafInfoPointer; - TFormLeafInfoMethod; - TFormLeafInfoMultiVarDim; - TFormLeafInfoMultiVarDimDirect; - TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. - AddOffset(Int_t offset, TStreamerElement* element); - GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; - GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; - GetMultiplicity() : Returns info on the variability of the number of elements; - GetNdata(TLeaf* leaf) : Returns the number of elements; - GetNdata() : Used by GetNdata(TLeaf* leaf); - GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; - GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; - GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; - IsString(); - ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; - Update() : react to the possible loading of a shared library.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:974,avail,available,974,tree/treeplayer/src/TFormLeafInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx,1,['avail'],['available']
Availability,"// @available doesn't need Foundation on macOS 10.15+, iOS/tvOS 13+, or; // watchOS 6+.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp:4,avail,available,4,interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,1,['avail'],['available']
Availability,// @available requires CoreFoundation only on Darwin.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp:4,avail,available,4,interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,1,['avail'],['available']
Availability,"// @code{.cpp}; /// Error foo(<...>);; ///; /// if (auto E = foo(<...>)); /// return E; // <- Return E if it is in the error state.; /// // We have verified that E was in the success state. It can now be safely; /// // destroyed.; /// @endcode; ///; /// A success value *can not* be dropped. For example, just calling 'foo(<...>)'; /// without testing the return value will raise a runtime error, even if foo; /// returns success.; ///; /// For Error instances representing failure, you must use either the; /// handleErrors or handleAllErrors function with a typed handler. E.g.:; ///; /// @code{.cpp}; /// class MyErrorInfo : public ErrorInfo<MyErrorInfo> {; /// // Custom error info.; /// };; ///; /// Error foo(<...>) { return make_error<MyErrorInfo>(...); }; ///; /// auto E = foo(<...>); // <- foo returns failure with MyErrorInfo.; /// auto NewE =; /// handleErrors(std::move(E),; /// [](const MyErrorInfo &M) {; /// // Deal with the error.; /// },; /// [](std::unique_ptr<OtherError> M) -> Error {; /// if (canHandle(*M)) {; /// // handle error.; /// return Error::success();; /// }; /// // Couldn't handle this error instance. Pass it up the stack.; /// return Error(std::move(M));; /// });; /// // Note - The error passed to handleErrors will be marked as checked. If; /// // there is no matched handler, a new error with the same payload is; /// // created and returned.; /// // The handlers take the error checked by handleErrors as an argument,; /// // which can be used to retrieve more information. If a new error is; /// // created by a handler, it will be passed back to the caller of; /// // handleErrors and needs to be checked or return up to the stack.; /// // Otherwise, the passed-in error is considered consumed.; /// @endcode; ///; /// The handleAllErrors function is identical to handleErrors, except; /// that it has a void return type, and requires all errors to be handled and; /// no new errors be returned. It prevents errors (assuming they can all be; /// handled) fro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h:1847,Error,Error,1847,interpreter/llvm-project/llvm/include/llvm/Support/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h,2,"['Error', 'error']","['Error', 'error']"
Availability,"// @llvm.masked.expandload.*(Ptr, Mask, Src0)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:9,mask,masked,9,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,2,"['Mask', 'mask']","['Mask', 'masked']"
Availability,"// @llvm.masked.gather.*(Ptrs, alignment, Mask, Src0)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:9,mask,masked,9,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,2,"['Mask', 'mask']","['Mask', 'masked']"
Availability,"// @llvm.masked.gather.*(Ptrs, alignment, Mask, Src0); // Attempt to turn the masked gather in I into a MVE intrinsic; // Potentially optimising the addressing modes as we do so.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVEGatherScatterLowering.cpp:9,mask,masked,9,interpreter/llvm-project/llvm/lib/Target/ARM/MVEGatherScatterLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVEGatherScatterLowering.cpp,3,"['Mask', 'mask']","['Mask', 'masked']"
Availability,"// @llvm.masked.load.*(Ptr, alignment, Mask, Src0)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:9,mask,masked,9,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,2,"['Mask', 'mask']","['Mask', 'masked']"
Availability,"// @llvm.masked.scatter.*(data, ptrs, alignment, mask); // Attempt to turn the masked scatter in I into a MVE intrinsic; // Potentially optimising the addressing modes as we do so.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVEGatherScatterLowering.cpp:9,mask,masked,9,interpreter/llvm-project/llvm/lib/Target/ARM/MVEGatherScatterLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVEGatherScatterLowering.cpp,3,['mask'],"['mask', 'masked']"
Availability,"// A ""named boolean"" indicating how to parse identifiers. Usually; // identifiers map to some existing object but in special cases; // (e.g. parsing def names) no such object exists yet because we are; // in the middle of creating in. For those situations, allow the; // parser to ignore missing object errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGParser.h:303,error,errors,303,interpreter/llvm-project/llvm/lib/TableGen/TGParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGParser.h,1,['error'],['errors']
Availability,"// A ""}"" inside parenthesis is an error if there wasn't a matching ""{"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp:34,error,error,34,interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,2,['error'],['error']
Availability,"// A BUILD_VECTOR can be lowered as a SETCC. For each fixed-length mask; // vector type, we have a legal equivalently-sized i8 type, so we can use; // that.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:67,mask,mask,67,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['mask'],['mask']
Availability,"// A Graph with asymmetric error bars and multiple y error dimensions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h:27,error,error,27,hist/hist/inc/TGraphMultiErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h,2,['error'],['error']
Availability,// A Log2SEW of 0 is an operation on mask registers only.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp:37,mask,mask,37,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp,2,['mask'],['mask']
Availability,// A ParenListExpr can show up while doing error recovery with invalid code.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp:43,error,error,43,interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,2,"['error', 'recover']","['error', 'recovery']"
Availability,"// A RUToken is created by the RCU for every instruction dispatched to the; // schedulers. These ""tokens"" are managed by the RCU in its token Queue.; //; // On every cycle ('cycleEvent'), the RCU iterates through the token queue; // looking for any token with its 'Executed' flag set. If a token has that; // flag set, then the instruction has reached the write-back stage and will; // be retired by the RCU.; //; // 'NumSlots' represents the number of entries consumed by the instruction in; // the reorder buffer. Those entries will become available again once the; // instruction is retired.; //; // Note that the size of the reorder buffer is defined by the scheduling; // model via field 'NumMicroOpBufferSize'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RetireControlUnit.h:542,avail,available,542,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RetireControlUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RetireControlUnit.h,1,['avail'],['available']
Availability,// A RegAlloc pass should override this to provide the allocation heuristics.; // Each call must guarantee forward progess by returning an available PhysReg; // or new set of split live virtual registers. It is up to the splitter to; // converge quickly toward fully spilled live ranges.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocBase.h:139,avail,available,139,interpreter/llvm-project/llvm/lib/CodeGen/RegAllocBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocBase.h,1,['avail'],['available']
Availability,"// A bare type template-name which can't be a template template; // argument is an error, and was probably intended to be a type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp:83,error,error,83,interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,1,['error'],['error']
Availability,"// A bare type template-name which can't be a template template; // argument is an error, and was probably intended to be a type.; // In C++17, this could be class template argument deduction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp:83,error,error,83,interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,1,['error'],['error']
Availability,"// A binary intrusively linked into a LRU cache list. If the binary is empty,; // then the entry marks that an error occurred, and it is not part of the LRU; // list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/Symbolize/Symbolize.h:111,error,error,111,interpreter/llvm-project/llvm/include/llvm/DebugInfo/Symbolize/Symbolize.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/Symbolize/Symbolize.h,1,['error'],['error']
Availability,"// A bitrotate will be one instruction on Zvkb, so try to lower to it first if; // available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:83,avail,available,83,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['avail'],['available']
Availability,"// A boolean result can be represented as an integer type in C/C++, but at; // this point we only care about the SMT sorts. Set it as a boolean type; // to avoid subsequent SMT errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConv.h:177,error,errors,177,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConv.h,1,['error'],['errors']
Availability,"// A brief explanation of leak checkers. The goal is to find bugs where; // pointers are forgotten, causing an accumulating growth in memory; // usage over time. The common strategy for leak checkers is to explicitly; // allow the memory pointed to by globals at exit. This is popular because it; // also solves another problem where the main thread of a C++ program may shut; // down before other threads that are still expecting to use those globals. To; // handle that case, we expect the program may create a singleton and never; // destroy it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp:380,down,down,380,interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,1,['down'],['down']
Availability,// A cache made available to the Filter to store SUnits for subsequent; // invocations of the Filter,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp:16,avail,available,16,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,1,['avail'],['available']
Availability,// A category implicitly has the availability of the interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp:33,avail,availability,33,interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp,1,['avail'],['availability']
Availability,"// A class representing a non-descript snippet execution failure. This class; // is designed to sub-classed into more specific failures that contain; // additional data about the specific error that they represent. Instead of; // halting the program, the errors are reported in the output.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.h:57,failure,failure,57,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.h,4,"['error', 'failure']","['error', 'errors', 'failure', 'failures']"
Availability,// A class representing all other non-specific failures that happen during; // snippet execution.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.h:47,failure,failures,47,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.h,1,['failure'],['failures']
Availability,"// A class representing failures that happened during Benchmark, they are used; // to report informations to the user.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/SnippetGenerator.h:24,failure,failures,24,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/SnippetGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/SnippetGenerator.h,1,['failure'],['failures']
Availability,// A class representing failures that happened during clustering calculations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.h:24,failure,failures,24,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.h,1,['failure'],['failures']
Availability,"// A class representing failures that happened within llvm-exegesis, they are; // used to report informations to the user.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.h:24,failure,failures,24,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.h,1,['failure'],['failures']
Availability,// A class representing specifically segmentation faults that happen during; // snippet execution.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.h:50,fault,faults,50,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.h,1,['fault'],['faults']
Availability,"// A collection of available manipulators.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLManipSet.h:19,avail,available,19,graf3d/gl/inc/TGLManipSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLManipSet.h,1,['avail'],['available']
Availability,"// A constant pool entry may be more aligned thant he load we're trying to; // replace. If we don't support unaligned scalar mem, prefer the constant; // pool.; // TODO: Can the caller pass down the alignment?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:190,down,down,190,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['down'],['down']
Availability,"// A corrupt file name or directory table does not prevent interpretation of; // the main line program, so check the cursor state now so that its errors can; // be handled separately.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFDebugLine.cpp:146,error,errors,146,interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFDebugLine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFDebugLine.cpp,1,['error'],['errors']
Availability,// A current decl may not be available when emitting vtable thunks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp:29,avail,available,29,interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,1,['avail'],['available']
Availability,"// A declaration of the partial specialization must be visible.; // We can always recover here, because this only happens when we're; // entering the context, and that can't happen in a SFINAE context.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:82,recover,recover,82,interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp,1,['recover'],['recover']
Availability,// A default register file is always allocated at index #0. That register file; // is mainly used to count the total number of mappings created by all; // register files at runtime. Users can limit the number of available physical; // registers in register file #0 through the command line flag; // `-register-file-size`.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/RegisterFile.cpp:212,avail,available,212,interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/RegisterFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/RegisterFile.cpp,1,['avail'],['available']
Availability,// A default version (@@) is only available for defined symbols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/ELF.h:34,avail,available,34,interpreter/llvm-project/llvm/include/llvm/Object/ELF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/ELF.h,1,['avail'],['available']
Availability,// A default-constructible llvm::Error that is suitable for use with MSVC's; // std::future implementation which requires default constructible types.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MSVCErrorWorkarounds.h:33,Error,Error,33,interpreter/llvm-project/llvm/include/llvm/Support/MSVCErrorWorkarounds.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MSVCErrorWorkarounds.h,1,['Error'],['Error']
Availability,"// A definition that's weak (linkonce_odr) without being in a COMDAT; // section wouldn't lead to link errors, but it would lead to a dead; // data word from every TU but one. Putting it in COMDAT ensures there; // will be exactly one data slot in the link.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp:103,error,errors,103,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,1,['error'],['errors']
Availability,"// A dictionary module could build implicitly a set of implicit modules.; // For example, the Core module builds libc.pcm and std.pcm implicitly.; // Those modules do not require I/O information and it is okay to build; // them as part of another module.; // However, we can build a module which requires I/O implictly which is; // an error because rootcling is not able to generate the corresponding; // dictionary.; // If we build a I/O requiring module implicitly we should display; // an error unless -mSystemByproducts or -mByproduct were specified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:335,error,error,335,core/dictgen/src/rootcling_impl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx,2,['error'],['error']
Availability,"// A field inside TSFlags needs a shift and a mask. The usage is; // always as follows :; // ((TSFlags & fieldMask) >> fieldShift); // The enum keeps the mask, the shift, and all valid values of the; // field in one place.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTX.h:46,mask,mask,46,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTX.h,2,['mask'],['mask']
Availability,"// A file that TApplication did not find. Note the error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:51,error,error,51,core/rint/src/TRint.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx,1,['error'],['error']
Availability,// A floating-point register (if available).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/LoongArch.cpp:33,avail,available,33,interpreter/llvm-project/clang/lib/Basic/Targets/LoongArch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/LoongArch.cpp,1,['avail'],['available']
Availability,"// A fragment can only have one Subtarget, and when bundling is enabled we; // sometimes need to use the same fragment. We give an error if there; // are conflicting Subtargets.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCELFStreamer.cpp:131,error,error,131,interpreter/llvm-project/llvm/lib/MC/MCELFStreamer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCELFStreamer.cpp,1,['error'],['error']
Availability,"// A funnel shift (rotate) can be decomposed into simpler shifts. See if we; // are mixing in another shift that is redundant with the funnel shift.; // (fshl X, ?, Y) | (shl X, Y) --> fshl X, ?, Y; // (shl X, Y) | (fshl X, ?, Y) --> fshl X, ?, Y",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:116,redundant,redundant,116,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['redundant'],['redundant']
Availability,"// A general case: Start and End are some values, but the actual; // iteration count may not be available. If it is not, insert; // a computation of it into the preheader.; // If the induction variable bump is not a power of 2, quit.; // Othwerise we'd need a general integer division.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHardwareLoops.cpp:96,avail,available,96,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHardwareLoops.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHardwareLoops.cpp,1,['avail'],['available']
Availability,// A helper for transformScopes. Insert a trivial phi at the scope exit block; // for a value that's defined in the scope but used outside it (meaning it's; // alive at the exit block).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp:160,alive,alive,160,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp,1,['alive'],['alive']
Availability,// A helper function called by 'getVectorInstrCost'.; //; // 'Val' and 'Index' are forwarded from 'getVectorInstrCost'; 'HasRealUse'; // indicates whether the vector instruction is available in the input IR or; // just imaginary in vectorizer passes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.h:181,avail,available,181,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.h,1,['avail'],['available']
Availability,"// A list of 8-bit numbers that have at most one run of non-zero bits.; // x = x ^ (mask << 56) can be encoded as a single armv8 instruction for these; // masks.; // The list does not include the value 255, which is used for UAR.; //; // Because we are more likely to use earlier elements of this list than later; // ones, it is sorted in increasing order of probability of collision with a; // mask allocated (temporally) nearby. The program that generated this list; // can be found at:; // https://github.com/google/sanitizers/blob/master/hwaddress-sanitizer/sort_masks.py",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/HWAddressSanitizer.cpp:84,mask,mask,84,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/HWAddressSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/HWAddressSanitizer.cpp,3,['mask'],"['mask', 'masks']"
Availability,"// A list of pointers which are known to be dereferenceable within scope of; // the loop body for each iteration of the loop which executes. That is,; // the memory pointed to can be dereferenced (with the access size implied by; // the value's type) unconditionally within the loop header without; // introducing a new fault.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp:320,fault,fault,320,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp,1,['fault'],['fault']
Availability,// A list-initialization failure for a reference means that we tried to; // create a temporary of the inner type (per [dcl.init.list]p3.6) and the; // inner initialization failed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:25,failure,failure,25,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['failure'],['failure']
Availability,"// A load from a fixed stack slot can be rematerialized. This may be; // redundant with subsequent checks, but it's target-independent,; // simple, and a common case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp:73,redundant,redundant,73,interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp,1,['redundant'],['redundant']
Availability,// A map of call instructions to their target addresses. This is first; // populated with static call edges but then trimmed down to dynamic call; // edges based on LBR samples.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/MissingFrameInferrer.h:125,down,down,125,interpreter/llvm-project/llvm/tools/llvm-profgen/MissingFrameInferrer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/MissingFrameInferrer.h,1,['down'],['down']
Availability,// A map of tail call instructions to their target addresses. This is first; // populated with static call edges but then trimmed down to dynamic call; // edges based on LBR samples.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/MissingFrameInferrer.h:130,down,down,130,interpreter/llvm-project/llvm/tools/llvm-profgen/MissingFrameInferrer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/MissingFrameInferrer.h,1,['down'],['down']
Availability,// A mask of all zeroes means: explicit input operands are not; // independent.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp:5,mask,mask,5,interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp,1,['mask'],['mask']
Availability,"// A mask of busy resource units. It defaults to the empty set (i.e. a zero; // mask), and it is cleared at the beginning of every cycle.; // It is updated every time the scheduler fails to issue an instruction from; // the ready set due to unavailable pipeline resources.; // Each bit of the mask represents an unavailable resource.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h:5,mask,mask,5,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,3,['mask'],['mask']
Availability,// A mask of unavailable processor resources.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HWEventListener.h:5,mask,mask,5,interpreter/llvm-project/llvm/include/llvm/MCA/HWEventListener.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HWEventListener.h,1,['mask'],['mask']
Availability,// A mask that only clears known zeros of a shifted value is a no-op.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:5,mask,mask,5,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['mask'],['mask']
Availability,// A mask with all zeroes means: register files are available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp:5,mask,mask,5,interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp,2,"['avail', 'mask']","['available', 'mask']"
Availability,"// A masked load can not be unfolded to a full load, otherwise it would access; // unexpected memory. A simple store can not be unfolded.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/X86FoldTablesEmitter.cpp:5,mask,masked,5,interpreter/llvm-project/llvm/utils/TableGen/X86FoldTablesEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/X86FoldTablesEmitter.cpp,1,['mask'],['masked']
Availability,// A maximum version of 0 means available in all later versions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangOpenCLBuiltinEmitter.cpp:32,avail,available,32,interpreter/llvm-project/clang/utils/TableGen/ClangOpenCLBuiltinEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangOpenCLBuiltinEmitter.cpp,1,['avail'],['available']
Availability,"// A missing release manifests as a leak, so treat as a non-fatal error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:66,error,error,66,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['error'],['error']
Availability,"// A move mask is splitted into two parts:; // bits 0 ~ 7 correspond to D0 ~ D7 regs; // bits 8 ~ 15 correspond to A0 ~ A7 regs; //; // In the assembly syntax, we want to use a dash to replace; // a continuous range of registers. For example, if the bit; // mask is 0b101110, we want to print ""D1-D3,D5"" instead of; // ""D1,D2,D3,D4,D5"".; //; // However, we don't want a dash to cross between data registers; // and address registers (i.e. there shouldn't be a dash crossing; // bit 7 and 8) since that is not really intuitive. So we simply; // print the data register part (bit 0~7) and address register part; // separately.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/MCTargetDesc/M68kInstPrinter.cpp:10,mask,mask,10,interpreter/llvm-project/llvm/lib/Target/M68k/MCTargetDesc/M68kInstPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/MCTargetDesc/M68kInstPrinter.cpp,2,['mask'],['mask']
Availability,// A negative mask allows a smaller encoding. Create a new 'and' node.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp:14,mask,mask,14,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,1,['mask'],['mask']
Availability,"// A newly created definition, but we had error(s) during the import.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp:42,error,error,42,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp,1,['error'],['error']
Availability,// A non-SFINAE error has occurred as a result of this; // substitution.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaConcept.cpp:16,error,error,16,interpreter/llvm-project/clang/lib/Sema/SemaConcept.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaConcept.cpp,1,['error'],['error']
Availability,"// A note on note{Pre, Post}{Use, Mod}:; //; // (It helps to follow the algorithm with an expression such as; // ""((++k)++, k) = k"" or ""k = (k++, k++)"". Both contain unsequenced; // operations before C++17 and both are well-defined in C++17).; //; // When visiting a node which uses/modify an object we first call notePreUse; // or notePreMod before visiting its sub-expression(s). At this point the; // children of the current node have not yet been visited and so the eventual; // uses/modifications resulting from the children of the current node have not; // been recorded yet.; //; // We then visit the children of the current node. After that notePostUse or; // notePostMod is called. These will 1) detect an unsequenced modification; // as side effect (as in ""k++ + k"") and 2) add a new usage with the; // appropriate usage kind.; //; // We also have to be careful that some operation sequences modification as; // side effect as well (for example: || or ,). To account for this we wrap; // the visitation of such a sub-expression (for example: the LHS of || or ,); // with SequencedSubexpression. SequencedSubexpression is an RAII object; // which record usages which are modifications as side effect, and then; // downgrade them (or more accurately restore the previous usage which was a; // modification as side effect) when exiting the scope of the sequenced; // subexpression.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:1223,down,downgrade,1223,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['down'],['downgrade']
Availability,"// A null CombinedIndex means we should skip ThinLTO compilation; // (LLVM will optionally ignore empty index files, returning null instead; // of an error).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp:150,error,error,150,interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp,1,['error'],['error']
Availability,// A null module means an error has already been reported. Return an empty; // result.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/Symbolize/Symbolize.cpp:26,error,error,26,interpreter/llvm-project/llvm/lib/DebugInfo/Symbolize/Symbolize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/Symbolize/Symbolize.cpp,5,['error'],['error']
Availability,// A parsing error was already reported.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-refactor/ClangRefactor.cpp:13,error,error,13,interpreter/llvm-project/clang/tools/clang-refactor/ClangRefactor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-refactor/ClangRefactor.cpp,1,['error'],['error']
Availability,// A pass for testing message reporting of -verify-each failures.; // DO NOT USE THIS EXCEPT FOR TESTING!,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp:56,failure,failures,56,interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,1,['failure'],['failures']
Availability,"// A pattern may end up with an ""impossible"" type, i.e. a situation; // where all types have been eliminated for some node in this pattern.; // This could occur for intrinsics that only make sense for a specific; // value type, and use a specific register class. If, for some mode,; // that register class does not accept that type, the type inference; // will lead to a contradiction, which is not an error however, but; // a sign that this pattern will simply never match.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp:402,error,error,402,interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp,1,['error'],['error']
Availability,// A positive mask element must be cleanly divisible.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp:14,mask,mask,14,interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,1,['mask'],['mask']
Availability,"// A possible improvement is to handle the calls with the return value being; // used. If there is API for fast libcall implementation without setting; // errno, we can use the same framework to direct/wrap the call to the fast; // API in the error free path, and leave the original call in the slow path.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LibCallsShrinkWrap.cpp:243,error,error,243,interpreter/llvm-project/llvm/lib/Transforms/Utils/LibCallsShrinkWrap.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LibCallsShrinkWrap.cpp,1,['error'],['error']
Availability,// A prefix only applies to the instruction following it. Here we extract; // prefix information for the next instruction before validating the current; // one so that in the case of failure we don't erronously continue using the; // current prefix.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp:183,failure,failure,183,interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp,1,['failure'],['failure']
Availability,// A readable region is a region that live or lazily copied.; // Any symbols that refer to values in regions are alive if the region; // is readable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SymbolManager.h:113,alive,alive,113,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SymbolManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SymbolManager.h,1,['alive'],['alive']
Availability,// A readonly property declared in the primary class can be refined; // by adding a readwrite property within an extension.; // Anything else is an error.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp:148,error,error,148,interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,1,['error'],['error']
Availability,"// A resource mask which identifies buffered resources consumed by this; // instruction at dispatch stage. In the absence of macro-fusion, this value; // should always match the value of field `UsedBuffers` from the instruction; // descriptor (see field InstrBase::Desc).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h:14,mask,mask,14,interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,1,['mask'],['mask']
Availability,// A select mask with undef elements might look like an identity mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp:12,mask,mask,12,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,2,['mask'],['mask']
Availability,"// A select of a ""select shuffle"" with a common operand can be rearranged; // to select followed by ""select shuffle"". Because of poison, this only works; // in the case of a shuffle with no undefined mask elements.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp:200,mask,mask,200,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,1,['mask'],['mask']
Availability,// A semicolon was missing after this declaration. Diagnose and recover.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp:64,recover,recover,64,interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,2,['recover'],['recover']
Availability,"// A sequence of bits starting from index B up to and including index E.; // If E < B, the mask represents two sections: [0..E] and [B..W) where; // W is the width of the register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.h:91,mask,mask,91,interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.h,1,['mask'],['mask']
Availability,"// A shuffle of a concat of the same narrow vector can be reduced to use; // only low-half elements of a concat with undef:; // shuf (concat X, X), undef, Mask --> shuf (concat X, undef), undef, Mask'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:155,Mask,Mask,155,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,2,['Mask'],['Mask']
Availability,// A size mismatch here implies either type promotion or widening and would; // have resulted in scalarisation if larger vectors had not be available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:140,avail,available,140,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['avail'],['available']
Availability,"// A slidedown/slideup with an *undefined* merge op can freely clobber; // elements not copied from the source vector (e.g. masked off, tail, or; // slideup's prefix). Notes:; // * We can't modify SEW here since the slide amount is in units of SEW.; // * VL=1 is special only because we have existing support for zero vs; // non-zero VL. We could generalize this if we had a VL > C predicate.; // * The LMUL1 restriction is for machines whose latency may depend on VL.; // * As above, this is only legal for tail ""undefined"" not ""agnostic"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp:124,mask,masked,124,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp,1,['mask'],['masked']
Availability,// A sorter for the Available set that makes sure that SUs are considered; // in the best order.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h:20,Avail,Available,20,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h,1,['Avail'],['Available']
Availability,"// A special case is when the least significant bits from the load are masked; // away, but using an AND rather than a right shift. HasShiftedOffset is used; // to indicate that the narrowed load should be left-shifted ShAmt bits to get; // the result.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:71,mask,masked,71,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['mask'],['masked']
Availability,"// A splat of an inserted scalar constant becomes a vector constant:; // shuf (inselt ?, C, IndexC), undef, <IndexC, IndexC...> --> <C, C...>; // NOTE: We may have commuted above, so analyze the updated Indices, not the; // original mask constant.; // NOTE: This transformation depends on the value of the mask which is not; // known at compile time for scalable vectors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:233,mask,mask,233,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,2,['mask'],['mask']
Availability,// A table that maps processor resource IDs to processor resource masks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/ResourceManager.h:66,mask,masks,66,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/ResourceManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/ResourceManager.h,1,['mask'],['masks']
Availability,"// A table/directory entry can be pointing to somewhere in a stripped; // section, in an object that went through `objcopy --only-keep-debug`.; // In this case we don't want to cause the parsing of the object file to; // fail, otherwise it will be impossible to use this object as debug info; // in LLDB. Return SectionStrippedError here so that; // COFFObjectFile::initialize can ignore the error.; // Somewhat common binaries may have RVAs pointing outside of the; // provided raw data. Instead of rejecting the binaries, just; // treat the section as stripped for these purposes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/COFFObjectFile.cpp:392,error,error,392,interpreter/llvm-project/llvm/lib/Object/COFFObjectFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/COFFObjectFile.cpp,1,['error'],['error']
Availability,"// A top-level standard library symbol, such as std::vector; // Lightweight class, in fact just an index into a table.; // C++ and C Standard Library symbols are considered distinct: e.g. std::printf; // and ::printf are not treated as the same symbol.; // The symbols do not contain macros right now, we don't have a reliable index; // for them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Inclusions/StandardLibrary.h:318,reliab,reliable,318,interpreter/llvm-project/clang/include/clang/Tooling/Inclusions/StandardLibrary.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Inclusions/StandardLibrary.h,1,['reliab'],['reliable']
Availability,"// A universal file member can be a MachOObjectFile, an IRObject or an; // Archive. In case we can successfully cast the member as an Archive,; // it is safe to throw away the error generated due to casting the; // object as a MachOObjectFile.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-libtool-darwin/llvm-libtool-darwin.cpp:176,error,error,176,interpreter/llvm-project/llvm/tools/llvm-libtool-darwin/llvm-libtool-darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-libtool-darwin/llvm-libtool-darwin.cpp,1,['error'],['error']
Availability,"// A universal file member can be a MachOObjectFile, an IRObject or an; // Archive. In case we can successfully cast the member as an; // IRObject, it is safe to throw away the error generated due to; // casting the object as a MachOObjectFile.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-libtool-darwin/llvm-libtool-darwin.cpp:177,error,error,177,interpreter/llvm-project/llvm/tools/llvm-libtool-darwin/llvm-libtool-darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-libtool-darwin/llvm-libtool-darwin.cpp,1,['error'],['error']
Availability,// A user keeps R alive:,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanTransforms.cpp:18,alive,alive,18,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanTransforms.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanTransforms.cpp,1,['alive'],['alive']
Availability,"// A value is in a flag enum if either its bits are a subset of the enum's; // flag bits (the first condition) or we are allowing masks and the same is; // true of its complement (the second condition). When masks are allowed, we; // allow the common idiom of ~(enum1 | enum2) to be a valid enum value.; //; // While it's true that any value could be used as a mask, the assumption is; // that a mask will have all of the insignificant bits set. Anything else is; // likely a logic error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:130,mask,masks,130,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,5,"['error', 'mask']","['error', 'mask', 'masks']"
Availability,"// A vector of register file descriptors. This set always contains at least; // one entry. Entry at index #0 is reserved. That entry describes a register; // file with an unbounded number of physical registers that ""sees"" all the; // hardware registers declared by the target (i.e. all the register; // definitions in the target specific `XYZRegisterInfo.td` - where `XYZ` is; // the target name).; //; // Users can limit the number of physical registers that are available in; // register file #0 specifying command line flag `-register-file-size=<uint>`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RegisterFile.h:464,avail,available,464,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RegisterFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RegisterFile.h,1,['avail'],['available']
Availability,"// A visitor returns a bool, representing success or failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:53,failure,failure,53,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,1,['failure'],['failure']
Availability,// A vmv.v.v is equivalent to a vmerge with an all-ones mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp:56,mask,mask,56,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp,1,['mask'],['mask']
Availability,"// A vmv.v.v won't have a Mask or Glue, instead we'll construct an all-ones; // mask later below.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp:26,Mask,Mask,26,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp,2,"['Mask', 'mask']","['Mask', 'mask']"
Availability,"// AAPCS requires i1 to be zero-extended to i8 by the producer of the; // value. This is strictly redundant on Darwin (which uses ""zeroext; // i1""), but will be optimised out before ISel.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:98,redundant,redundant,98,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['redundant'],['redundant']
Availability,"// AArch64 always uses external relocations. If there is no symbol to use as; // a base address (a local symbol with no preceding non-local symbol),; // error out.; //; // FIXME: We should probably just synthesize an external symbol and use; // that.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64MachObjectWriter.cpp:153,error,error,153,interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64MachObjectWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64MachObjectWriter.cpp,1,['error'],['error']
Availability,"// ADCE does not need DominatorTree, but require DominatorTree here; // to update analysis if it is already available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp:108,avail,available,108,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp,1,['avail'],['available']
Availability,// ADD for masks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h:11,mask,masks,11,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h,1,['mask'],['masks']
Availability,"// AFAIK, we only support numeric registers and named GPR's in CFI; // directives.; // Don't worry about eating tokens before failing. Using an unrecognised; // register is a parse error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp:181,error,error,181,interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,1,['error'],['error']
Availability,"// AFloat sig = 1.0 / (1.0 + exp(- dataOutput[workerID]));; // Use more robust formula to compute log(sig) and log(1-sig) where sig= 1./(1+exp(-x)); // when sig is close to zero or to 1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Cpu/LossFunctions.hxx:72,robust,robust,72,tmva/tmva/src/DNN/Architectures/Cpu/LossFunctions.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Cpu/LossFunctions.hxx,1,['robust'],['robust']
Availability,"// AIX debug for thread local location is not ready. And for integrated as; // mode, the relocatable address for the thread local variable will cause; // linker error. So disable the location attribute generation for thread local; // variables for now.; // FIXME: when TLS debug on AIX is ready, remove this setting.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp:161,error,error,161,interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp,1,['error'],['error']
Availability,"// AMBefore is the addressing mode before this instruction was folded into it,; // and AMAfter is the addressing mode after the instruction was folded. Get; // the set of registers referenced by AMAfter and subtract out those; // referenced by AMBefore: this is the set of values which folding in this; // address extends the lifetime of.; //; // Note that there are only two potential values being referenced here,; // BaseReg and ScaleReg (global addresses are always available, as are any; // folded immediates).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:470,avail,available,470,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['avail'],['available']
Availability,"// AMD64-ABI 3.2.3p3: If there are no registers available for any; // eightbyte of an argument, the whole argument is passed on the; // stack. If registers have already been assigned for some; // eightbytes of such an argument, the assignments get reverted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp:48,avail,available,48,interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,1,['avail'],['available']
Availability,"// AMD64-ABI 3.2.3p3: Rule 2. If the class is INTEGER, the next; // available register of the sequence %rdi, %rsi, %rdx, %rcx, %r8; // and %r9 is used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp:68,avail,available,68,interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,1,['avail'],['available']
Availability,"// AMD64-ABI 3.2.3p3: Rule 3. If the class is SSE, the next; // available SSE register is used, the registers are taken in the; // order from %xmm0 to %xmm7.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp:64,avail,available,64,interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,1,['avail'],['available']
Availability,"// AMD64-ABI 3.2.3p4: Rule 3. If the class is INTEGER, the next; // available register of the sequence %rax, %rdx is used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp:68,avail,available,68,interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,1,['avail'],['available']
Availability,"// AMD64-ABI 3.2.3p4: Rule 4. If the class is SSE, the next; // available SSE register of the sequence %xmm0, %xmm1 is used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp:64,avail,available,64,interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,1,['avail'],['available']
Availability,"// AMD64-ABI 3.2.3p4: Rule 5. If the class is SSEUP, the eightbyte; // is passed in the next available eightbyte chunk if the last used; // vector register.; //; // SSEUP should always be preceded by SSE, just widen.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp:93,avail,available,93,interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,1,['avail'],['available']
Availability,// AMDHSA_BITS_ENUM_ENTRY; // Gets bits for specified bit mask from specified source.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/AMDHSAKernelDescriptor.h:58,mask,mask,58,interpreter/llvm-project/llvm/include/llvm/Support/AMDHSAKernelDescriptor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/AMDHSAKernelDescriptor.h,1,['mask'],['mask']
Availability,// AMDHSA_BITS_GET; // Sets bits for specified bit mask in specified destination.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/AMDHSAKernelDescriptor.h:51,mask,mask,51,interpreter/llvm-project/llvm/include/llvm/Support/AMDHSAKernelDescriptor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/AMDHSAKernelDescriptor.h,1,['mask'],['mask']
Availability,"// AND instruction masks this bit. If the input is already zero,; // we have nothing to do here. Otherwise, make the bit ConstZero.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:19,mask,masks,19,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,1,['mask'],['masks']
Availability,"// AND masks that can be performed by two rldic{l, r}; // instructions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/PPC.h:7,mask,masks,7,interpreter/llvm-project/clang/lib/Basic/Targets/PPC.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/PPC.h,1,['mask'],['masks']
Availability,"// AND the break condition operand with exec, then OR that into the ""loop; // exit"" mask.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerControlFlow.cpp:84,mask,mask,84,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerControlFlow.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerControlFlow.cpp,1,['mask'],['mask']
Availability,// AND with Mask leaves byte i unchanged and sets remaining bytes to 0.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp:12,Mask,Mask,12,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,1,['Mask'],['Mask']
Availability,// AND's second operand must be a shifted mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp:42,mask,mask,42,interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp,1,['mask'],['mask']
Availability,"// ANDI Rd, 0xff is redundant.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRExpandPseudoInsts.cpp:20,redundant,redundant,20,interpreter/llvm-project/llvm/lib/Target/AVR/AVRExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRExpandPseudoInsts.cpp,1,['redundant'],['redundant']
Availability,"// ANDN is not commutable, use it to pick down A and C.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp:42,down,down,42,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,1,['down'],['down']
Availability,"// AR Mask, unused currently.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZAsmPrinter.cpp:6,Mask,Mask,6,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZAsmPrinter.cpp,1,['Mask'],['Mask']
Availability,// ARM errata 602117: LDRD with base in list may result in incorrect base; // register when interrupted or faulted.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp:107,fault,faulted,107,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,2,['fault'],['faulted']
Availability,"// ARM math functions are statically linked on Android from libgcc.a, but not; // available at runtime for dynamic linking. On Linux these are usually placed; // in libgcc_s.so so can be found by normal dynamic lookup.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RTDyldMemoryManager.cpp:82,avail,available,82,interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RTDyldMemoryManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RTDyldMemoryManager.cpp,1,['avail'],['available']
Availability,// ARM's BooleanContents value is UndefinedBooleanContent. Mask out the; // undefined bits before doing a full-word comparison with zero.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:59,Mask,Mask,59,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['Mask'],['Mask']
Availability,"// ASSERT_DOUBLE_EQ does not succeed on macOS, that's why we use ASSERT_NEAR; // with a relative error in this test. A relative error of 1.E-12 should be; // large enough to take into account some numerical differences. It is,; // however, unexpected that the test fails since the code to compute the bin; // error of the TProfile2Poly and the TProfile2D do the same operations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tprofile2poly.cxx:97,error,error,97,hist/hist/test/test_tprofile2poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tprofile2poly.cxx,3,['error'],['error']
Availability,// AVX-512 masked load/store is cheaper,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp:11,mask,masked,11,interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp,1,['mask'],['masked']
Availability,"// AVX2 has efficient 64-bit element cross-lane shuffles.; // TODO: Refine to account for unary shuffle, splat, and other masks?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:122,mask,masks,122,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['masks']
Availability,"// AVX512 - Extend select with zero to merge with target shuffle.; // select(mask, extract_subvector(shuffle(x)), zero) -->; // extract_subvector(select(insert_subvector(mask), shuffle(x), zero)); // TODO - support non target shuffles as well.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:77,mask,mask,77,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,2,['mask'],['mask']
Availability,// AVX512 arch mask registers: k1-k7.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp:15,mask,mask,15,interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp,1,['mask'],['mask']
Availability,// AVX512 fallback is to lower selects of scalar floats to masked moves.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:59,mask,masked,59,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['masked']
Availability,// AVX512 masking registers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:10,mask,masking,10,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['masking']
Availability,// Abandon attempt if the dst size isn't large enough; // - this is in fact an error but this is picked up elsewhere and; // reported correctly.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:79,error,error,79,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,1,['error'],['error']
Availability,// Abort errors and other errors are handled the same,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/three.mjs:9,error,errors,9,js/modules/three.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/three.mjs,2,['error'],['errors']
Availability,"// Abort on higher than kSysError's and set error handler",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx:44,error,error,44,net/net/src/TApplicationServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx,2,['error'],['error']
Availability,"// About a half of the loads may be folded in shuffles when we have only; // one result. If we have more than one result, or the loads are masked,; // we do not fold loads at all.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp:139,mask,masked,139,interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp,1,['mask'],['masked']
Availability,"// Absolute address LDS variables that exist prior to the LDS lowering; // pass raise a fatal error in that pass. These failure modes are only; // reachable if that lowering pass is disabled or broken. If/when adding; // support for absolute addresses on user specified variables, the; // alignment check moves to the lowering pass and the frame calculation; // needs to take the user variables into consideration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMachineFunction.cpp:94,error,error,94,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMachineFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMachineFunction.cpp,2,"['error', 'failure']","['error', 'failure']"
Availability,"// Accept, even if we emitted an error diagnostic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmtAsm.cpp:33,error,error,33,interpreter/llvm-project/clang/lib/Sema/SemaStmtAsm.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmtAsm.cpp,2,['error'],['error']
Availability,"// Acceptance regions are meant to be inclusive of (1-\alpha) of the probability; // so the returned values of the CDF should make this easy.; // in particular:; // if finding the critical value for a lower bound; // when p_i < p < p_j, one should return the value associated with i; // if i=0, then one should return -infinity; // if finding the critical value for an upper bound; // when p_i < p < p_j, one should return the value associated with j; // if i = size-1, then one should return +infinity; // use pvalue < 0.5 to indicate a lower bound is requested; // casting will round down, eg. give i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SamplingDistribution.cxx:586,down,down,586,roofit/roostats/src/SamplingDistribution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SamplingDistribution.cxx,1,['down'],['down']
Availability,"// Access a branch's collection content (not the collection itself); // through a proxy.; // Search for the branchname, determine what it contains, and wire the; // TBranchProxy representing it to us so we can access its data.; // Tell the branch proxy to suppress the errors for missing branch if this; // branch name is found in the list of suppressions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx:269,error,errors,269,tree/treeplayer/src/TTreeReaderArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx,1,['error'],['errors']
Availability,"// Access to the AST is no longer available after this.; // Other things that the ASTContext manages are still available, e.g.; // the SourceManager. It'd be nice if we could separate out all the; // things in ASTContext used after this point and null out the; // ASTContext, but too many various parts of the ASTContext are still; // used in various parts.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenAction.cpp:34,avail,available,34,interpreter/llvm-project/clang/lib/CodeGen/CodeGenAction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenAction.cpp,2,['avail'],['available']
Availability,"// Accessors can be wrapped in a try-catch block, so throwing the; // exception here is akin to checking the error.; //; // Setting fIsChecked to true also avoids a spurious warning in the RResult destructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:109,error,error,109,core/foundation/v7/inc/ROOT/RError.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx,1,['error'],['error']
Availability,"// According to GCC 'Basic PowerPC Built-in Functions Available on ISA 2.05',; // __builtin_(un)pack_longdouble are available only if long double uses IBM; // extended double representation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:54,Avail,Available,54,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,2,"['Avail', 'avail']","['Available', 'available']"
Availability,"// According to UNIX standard, driver need to continue compiling all the; // inputs on the command line even one of them failed.; // In all but CLMode, execute all the jobs unless the necessary inputs for the; // job is missing due to previous failures.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Compilation.cpp:244,failure,failures,244,interpreter/llvm-project/clang/lib/Driver/Compilation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Compilation.cpp,1,['failure'],['failures']
Availability,// According to the index compute the convert mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InterleavedAccess.cpp:46,mask,mask,46,interpreter/llvm-project/llvm/lib/Target/X86/X86InterleavedAccess.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InterleavedAccess.cpp,1,['mask'],['mask']
Availability,// Account for the split cost and repair cost.; // Unless the cost is already saturated or we do not care about the cost.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/RegBankSelect.cpp:34,repair,repair,34,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/RegBankSelect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/RegBankSelect.cpp,1,['repair'],['repair']
Availability,// Accumulate any bitmask operands into the clobbered reg mask for this; // block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:58,mask,mask,58,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['mask'],['mask']
Availability,// Acquire/Release load/store is not legal for targets without a dmb or; // equivalent available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:87,avail,available,87,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['avail'],['available']
Availability,// Acquires a slot from every buffered resource in mask `ConsumedBuffers`.; // Units that are dispatch hazards (i.e. BufferSize=0) are marked as reserved.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/ResourceManager.h:51,mask,mask,51,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/ResourceManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/ResourceManager.h,1,['mask'],['mask']
Availability,"// Actions are defined by the specific error handler (; // see rootd.cxx and proofd.cxx)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx:39,error,error,39,net/rpdutils/src/DaemonUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx,1,['error'],['error']
Availability,"// Actions are defined by the specific error handler function; // (see rootd.cxx and proofd.cxx)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/error.cxx:39,error,error,39,net/rpdutils/src/error.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/error.cxx,1,['error'],['error']
Availability,"// Activate errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx:12,error,errors,12,hist/hist/src/TH3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx,2,['error'],['errors']
Availability,"// Active ring interaction - set on mouse down; // Shallow ring interaction; // Where the ring plane forms a shallow angle to the eye direction -; // a different interaction is required in these cases - see HandleMotion()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLRotateManip.h:42,down,down,42,graf3d/gl/inc/TGLRotateManip.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLRotateManip.h,1,['down'],['down']
Availability,"// Add ""not found"" diagnostic, substitutions, and pattern errors to Diags.; //; // We handle Diags a little differently than the errors we print directly:; // we add the ""not found"" diagnostic to Diags even if there are pattern; // errors. The reason is that we need to attach pattern errors as notes; // somewhere in the input, and the input search range from the ""not found""; // diagnostic is all we have to anchor them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp:58,error,errors,58,interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,4,['error'],['errors']
Availability,"// Add -framework CoreFoundation to the linker commands. We still want to; // emit the core foundation reference down below because otherwise if; // CoreFoundation is not used in the code, the linker won't link the; // framework.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp:113,down,down,113,interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,1,['down'],['down']
Availability,"// Add OR of points to new curve, skipping duplicate points within tolerance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx:67,toler,tolerance,67,roofit/roofitcore/src/RooCurve.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx,1,['toler'],['tolerance']
Availability,"// Add ScatterVectorize nodes to the list of operands, where just; // reordering of the scalars is required. Similar to the gathers, so; // simply add to the list of gathered ops.; // If there are reused scalars, process this node as a regular vectorize; // node, just reorder reuses mask.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:284,mask,mask,284,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['mask'],['mask']
Availability,// Add a 'failed' Requirement to contain the error that caused the failure; // here.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp:45,error,error,45,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp,2,"['error', 'failure']","['error', 'failure']"
Availability,// Add a CFI saying the stack was moved 16 B down.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:45,down,down,45,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,1,['down'],['down']
Availability,"// Add a VPActiveLaneMaskPHIRecipe and related recipes to \p Plan and replace; // the loop terminator with a branch-on-cond recipe with the negated; // active-lane-mask as operand. Note that this turns the loop into an; // uncountable one. Only the existing terminator is replaced, all other existing; // recipes/users remain unchanged, except for poison-generating flags being; // dropped from the canonical IV increment. Return the created; // VPActiveLaneMaskPHIRecipe.; //; // The function uses the following definitions:; //; // %TripCount = DataWithControlFlowWithoutRuntimeCheck ?; // calculate-trip-count-minus-VF (original TC) : original TC; // %IncrementValue = DataWithControlFlowWithoutRuntimeCheck ?; // CanonicalIVPhi : CanonicalIVIncrement; // %StartV is the canonical induction start value.; //; // The function adds the following recipes:; //; // vector.ph:; // %TripCount = calculate-trip-count-minus-VF (original TC); // [if DataWithControlFlowWithoutRuntimeCheck]; // %EntryInc = canonical-iv-increment-for-part %StartV; // %EntryALM = active-lane-mask %EntryInc, %TripCount; //; // vector.body:; // ...; // %P = active-lane-mask-phi [ %EntryALM, %vector.ph ], [ %ALM, %vector.body ]; // ...; // %InLoopInc = canonical-iv-increment-for-part %IncrementValue; // %ALM = active-lane-mask %InLoopInc, TripCount; // %Negated = Not %ALM; // branch-on-cond %Negated; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanTransforms.cpp:164,mask,mask,164,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanTransforms.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanTransforms.cpp,4,['mask'],"['mask', 'mask-phi']"
Availability,// Add a keep-alive edge from the FDE target to the FDE to ensure that the; // FDE is kept alive if its target is.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/EHFrameSupport.cpp:14,alive,alive,14,interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/EHFrameSupport.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/EHFrameSupport.cpp,2,['alive'],['alive']
Availability,"// Add a new kill entry for this basic block. If this virtual register is; // already marked as alive in this basic block, that means it is alive in at; // least one of the successor blocks, it's not a kill.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp:96,alive,alive,96,interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,2,['alive'],['alive']
Availability,// Add a one page to the start address to ensure that we're above the snippet; // since the above function rounds down.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/X86/Target.cpp:114,down,down,114,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/X86/Target.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/X86/Target.cpp,1,['down'],['down']
Availability,// Add a pre-serialized global symbol record. The caller must ensure that the; // symbol data remains alive until the global stream is committed to disk.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/GSIStreamBuilder.h:102,alive,alive,102,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/GSIStreamBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/GSIStreamBuilder.h,1,['alive'],['alive']
Availability,"// Add a redundant copy of the callee global which will not be legalized, as; // we need direct access to the callee later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:9,redundant,redundant,9,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,1,['redundant'],['redundant']
Availability,// Add a register mask operand representing the call-preserved registers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:18,mask,mask,18,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,17,['mask'],['mask']
Availability,// Add a register mask operand representing the call-preserved registers.; // Proper defs for return values will be added by setPhysRegsDeadExcept().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:18,mask,mask,18,interpreter/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp,1,['mask'],['mask']
Availability,// Add a register mask operand representing the call-preserved registers.; // TODO: Should return-twice functions be handled?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiISelLowering.cpp:18,mask,mask,18,interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiISelLowering.cpp,1,['mask'],['mask']
Availability,// Add a register mask with no preserved registers. This results in all; // registers being marked as clobbered.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEISelLowering.cpp:18,mask,mask,18,interpreter/llvm-project/llvm/lib/Target/VE/VEISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEISelLowering.cpp,2,['mask'],['mask']
Availability,"// Add a register mask with no preserved registers. This results in all; // registers being marked as clobbered. This can't work if the dispatch block; // is in a Thumb1 function and is linked with ARM code which uses the FP; // registers, as there is no way to preserve the FP registers in Thumb1 mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:18,mask,mask,18,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['mask'],['mask']
Availability,// Add a register mask with the call-preserved registers. Proper; // defs for return values will be added by setPhysRegsDeadExcept().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:18,mask,mask,18,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,1,['mask'],['mask']
Availability,// Add a register mask with the call-preserved registers.; // Proper defs for return values will be added by setPhysRegsDeadExcept().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp:18,mask,mask,18,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp,4,['mask'],['mask']
Availability,// Add accessibility info if available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.cpp:29,avail,available,29,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.cpp,1,['avail'],['available']
Availability,// Add align info if available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.cpp:21,avail,available,21,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.cpp,1,['avail'],['available']
Availability,// Add all constant physical registers to the preserved mask:,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/RegisterInfoEmitter.cpp:56,mask,mask,56,interpreter/llvm-project/llvm/utils/TableGen/RegisterInfoEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/RegisterInfoEmitter.cpp,1,['mask'],['mask']
Availability,"// Add all fixed arguments. Note that for non-varargs calls, NumFixedArgs; // isn't reliable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp:84,reliab,reliable,84,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,1,['reliab'],['reliable']
Availability,// Add all leaves to Available queue.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp:21,Avail,Available,21,interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,1,['Avail'],['Available']
Availability,"// Add an EOF pattern for any trailing --implicit-check-not/CHECK-DAG/-NOTs,; // and use the first prefix as a filler for the error message.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp:126,error,error,126,interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,1,['error'],['error']
Availability,// Add an unconditional branch from NewBB to BB.; // There doesn't seem to be meaningful DebugInfo available; this doesn't; // correspond directly to anything in the source.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp:99,avail,available,99,interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,1,['avail'],['available']
Availability,// Add an unconditional branch from OrigBB to NewBB.; // Note the new unconditional branch is not being recorded.; // There doesn't seem to be meaningful DebugInfo available; this doesn't; // correspond to anything in the source.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BranchRelaxation.cpp:164,avail,available,164,interpreter/llvm-project/llvm/lib/CodeGen/BranchRelaxation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BranchRelaxation.cpp,3,['avail'],['available']
Availability,// Add an unconditional branch from OrigBB to NewBB.; // Note the new unconditional branch is not being recorded.; // There doesn't seem to be meaningful DebugInfo available; this doesn't; // correspond to anything in the source.; // TODO: Add support for 16bit instr.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYConstantIslandPass.cpp:164,avail,available,164,interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYConstantIslandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYConstantIslandPass.cpp,1,['avail'],['available']
Availability,// Add call arguments; // Get position of register mask in the call,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp:51,mask,mask,51,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp,1,['mask'],['mask']
Availability,"// Add constraints for use-blocks. Note that these are the only constraints; // that may add a positive bias, it is downhill from here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocGreedy.cpp:116,down,downhill,116,interpreter/llvm-project/llvm/lib/CodeGen/RegAllocGreedy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocGreedy.cpp,1,['down'],['downhill']
Availability,"// Add contributions due to error in x coordinates",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:28,error,error,28,roofit/roofitcore/src/RooXYChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx,1,['error'],['error']
Availability,// Add crtfastmath.o if available and fast math is enabled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp:24,avail,available,24,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,3,['avail'],['available']
Availability,"// Add dedicated logging stream for errors that will remain active in silent mode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx:36,error,errors,36,roofit/roofitcore/test/stressRooFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx,2,['error'],['errors']
Availability,"// Add dummy merge value before the mask. Or if there isn't a mask, before; // EVL.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:36,mask,mask,36,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,2,['mask'],['mask']
Availability,// Add each active offloading kind from a mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Action.cpp:42,mask,mask,42,interpreter/llvm-project/clang/lib/Driver/Action.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Action.cpp,1,['mask'],['mask']
Availability,// Add eh-frame passes.; // FIXME: Prune eh-frames for which compact-unwind is available once; // we support compact-unwind registration with libunwind.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/MachO_arm64.cpp:79,avail,available,79,interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/MachO_arm64.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/MachO_arm64.cpp,1,['avail'],['available']
Availability,// Add emit FPR mask flag.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZAsmPrinter.cpp:16,mask,mask,16,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZAsmPrinter.cpp,1,['mask'],['mask']
Availability,// Add emit VR mask flag.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZAsmPrinter.cpp:15,mask,mask,15,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZAsmPrinter.cpp,1,['mask'],['mask']
Availability,"// Add histograms with Poisson errors; // Issue warning if weights are not 1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:31,error,errors,31,roofit/roofitcore/src/RooHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx,1,['error'],['errors']
Availability,"// Add histograms with SumW2 errors; // Add histograms, calculate combined sum-of-weights error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:29,error,errors,29,roofit/roofitcore/src/RooHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx,2,['error'],"['error', 'errors']"
Availability,// Add in the cost of synthesizing a mask if one wasn't required.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:37,mask,mask,37,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['mask'],['mask']
Availability,"// Add metadata if calling an __attribute__((error(""""))) or warning fn.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp:45,error,error,45,interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,1,['error'],['error']
Availability,// Add new registers or mask bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNRegPressure.cpp:24,mask,mask,24,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNRegPressure.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNRegPressure.cpp,1,['mask'],['mask']
Availability,"// Add output dependence to the next nearest defs of this vreg.; //; // Unless this definition is dead, the output dependence should be; // transitively redundant with antidependencies from this definition's; // uses. We're conservative for now until we have a way to guarantee the uses; // are not eliminated sometime during scheduling. The output dependence edge; // is also useful if output latency exceeds def-use latency.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:153,redundant,redundant,153,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,1,['redundant'],['redundant']
Availability,// Add platform and process symbols if available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-jitlink/llvm-jitlink.cpp:39,avail,available,39,interpreter/llvm-project/llvm/tools/llvm-jitlink/llvm-jitlink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-jitlink/llvm-jitlink.cpp,1,['avail'],['available']
Availability,// Add register mask from call node,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp:16,mask,mask,16,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp,1,['mask'],['mask']
Availability,// Add root to Available queue.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp:15,Avail,Available,15,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,2,['Avail'],['Available']
Availability,"// Add scalarization of target's unsupported masked memory intrinsics pass.; // the unsupported intrinsic will be replaced with a chain of basic blocks,; // that stores/loads element one-by-one if the appropriate mask bit is set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h:45,mask,masked,45,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,4,['mask'],"['mask', 'masked']"
Availability,// Add source line info if available and TyDesc is not a forward declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.cpp:27,avail,available,27,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.cpp,1,['avail'],['available']
Availability,// Add source line info if available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.cpp:27,avail,available,27,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.cpp,1,['avail'],['available']
Availability,"// Add support for querying global aliasing information when available.; // Because the `AAManager` is a function analysis and `GlobalsAA` is a module; // analysis, all that the `AAManager` can do is query for any *cached*; // results from `GlobalsAA` through a readonly proxy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:61,avail,available,61,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,1,['avail'],['available']
Availability,// Add the 'const' to the type to recover.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:34,recover,recover,34,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['recover'],['recover']
Availability,// Add the callee-saved register as live-in; it's killed at the spill.; // Do not do this for callee-saved registers that are live-in to the; // function because they will already be marked live-in and this will be; // adding it for a second time. It is an error to add the same register; // to the set more than once.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:257,error,error,257,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,1,['error'],['error']
Availability,"// Add the components of RHS to this instance. Instead of calculating; // the final value here, we keep track of the numerator and denominator; // separately, to reduce floating point error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Support.h:184,error,error,184,interpreter/llvm-project/llvm/include/llvm/MCA/Support.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Support.h,1,['error'],['error']
Availability,// Add the function's parameter attributes so they are available for use in; // the function's instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/ValueEnumerator.cpp:55,avail,available,55,interpreter/llvm-project/llvm/lib/Bitcode/Writer/ValueEnumerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/ValueEnumerator.cpp,2,['avail'],['available']
Availability,// Add the given capabilities to available and all their implicitly defined; // capabilities too.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVModuleAnalysis.h:33,avail,available,33,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVModuleAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVModuleAnalysis.h,1,['avail'],['available']
Availability,// Add the glue for the CopyToReg of mask->v0.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp:37,mask,mask,37,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp,1,['mask'],['mask']
Availability,// Add the mask index for the new shuffle vector.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp:11,mask,mask,11,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,1,['mask'],['mask']
Availability,// Add the multilib suffixed paths where they are available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp:50,avail,available,50,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,1,['avail'],['available']
Availability,// Add the new vregs as available values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp:24,avail,available,24,interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp,1,['avail'],['available']
Availability,// Add the nodes that aren't ready back onto the available list.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp:49,avail,available,49,interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,4,['avail'],['available']
Availability,"// Add the record to the collection if we don't already have a record that; // points to the same function name. This is useful to ignore the redundant; // records for the functions with ODR linkage.; // In addition, prefer records with real coverage mapping data to dummy; // records, which were emitted for inline functions which were seen but; // not used in the corresponding translation unit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/Coverage/CoverageMappingReader.cpp:142,redundant,redundant,142,interpreter/llvm-project/llvm/lib/ProfileData/Coverage/CoverageMappingReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/Coverage/CoverageMappingReader.cpp,1,['redundant'],['redundant']
Availability,// Add the requested pass to the best available pass manager.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:38,avail,available,38,interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp,1,['avail'],['available']
Availability,"// Add the success state.; // In this context ""success"" means there is not an EOF or other read error; // before any item is matched in 'fscanf'. But there may be match failure,; // therefore return value can be 0 or greater.; // It is not specified what happens if some items (not all) are matched and; // then EOF or read error happens. Now this case is handled like a ""success""; // case, and no error flags are set on the stream. This is probably not; // accurate, and the POSIX documentation does not tell more.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp:96,error,error,96,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp,4,"['error', 'failure']","['error', 'failure']"
Availability,"// Add the unique query tag as TNamed object to the input list; // so that it is available in TSelectors for monitoring",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:81,avail,available,81,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,3,['avail'],['available']
Availability,// Add this header as a workaround to prevent `too few template arguments for; // class template 'SmallVector'` building error with build compilers like XL.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/LLVM.h:121,error,error,121,interpreter/llvm-project/clang/include/clang/Basic/LLVM.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/LLVM.h,1,['error'],['error']
Availability,"// Add this to work with arbitrary vectors:; // dot /= Math.sqrt(ux * ux + uy * uy) * Math.sqrt(vx * vx + vy * vy);; // rounding errors, e.g. -1.0000000000000002 can screw up this",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:129,error,errors,129,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['error'],['errors']
Availability,"// Add to cache only on HTTP success, so that we do not cache; // error response bodies as proper responses to requests.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/three.mjs:66,error,error,66,js/modules/three.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/three.mjs,1,['error'],['error']
Availability,"// Add to the input list (input data not available on master where; // this info will be processed)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:41,avail,available,41,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,['avail'],['available']
Availability,"// Add to the new mask. For the NumSources>2 case these are not correct,; // but are only used for the modular lane number.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp:18,mask,mask,18,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,1,['mask'],['mask']
Availability,"// Add transition for the failed state.; // Error occurs if nothing is matched yet and reading the input fails.; // Error can be EOF, or other error. At ""other error"" FERROR or 'errno' can; // be set but it is not further specified if all are required to be set.; // Documentation does not mention, but file position will be set to; // indeterminate similarly as at 'fread'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp:44,Error,Error,44,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp,4,"['Error', 'error']","['Error', 'error']"
Availability,"// Add transition for the failed state.; // Failure of 'ungetc' does not result in feof or ferror state.; // If the PutVal has value of EofVal the function should ""fail"", but this is; // the same transition as the success state.; // In this case only one state transition is added by the analyzer (the two; // new states may be similar).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp:44,Failure,Failure,44,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp,1,['Failure'],['Failure']
Availability,"// Add transition for the failed state.; // If a (non-EOF) error occurs, the resulting value of the file position; // indicator for the stream is indeterminate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp:59,error,error,59,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp,1,['error'],['error']
Availability,"// Add; /* ---------- EnumerateENDFType ---------- */; /* Enumerates all the available sections inside the ENDF file; * @param sec Find the next section after <B>sec</B>; * @return Next available section in ENDF file, -1 if EOF; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/NdbMF.cxx:77,avail,available,77,test/periodic/NdbMF.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/NdbMF.cxx,2,['avail'],['available']
Availability,"// Adding new options to struct CXIndexOptions:; // 1. If no other new option has been added in the same libclang version,; // sizeof(CXIndexOptions) must increase for versioning purposes.; // 2. Options should be added at the end of the struct in order to seamlessly; // support older struct versions. If options->Size < sizeof(CXIndexOptions),; // don't attempt to read the missing options and rely on the default values of; // recently added options being reasonable. For example:; // if (options->Size >= offsetof(CXIndexOptions, RecentlyAddedMember)); // do_something(options->RecentlyAddedMember);; // An exception: if a new option is small enough, it can be squeezed into the; // /*Reserved*/ bits in CXIndexOptions. Since the default value of each option; // is guaranteed to be 0 and the callers are advised to zero out the struct,; // programs built against older libclang versions would implicitly set the new; // options to default values, which should keep the behavior of previous; // libclang versions and thus be backward-compatible.; // If options->Size > sizeof(CXIndexOptions), the user may have set an option; // we can't handle, in which case we return nullptr to report failure.; // Replace `!=` with `>` here to support older struct versions. `!=` has the; // advantage of catching more usage bugs and no disadvantages while there is a; // single supported struct version (the initial version).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp:1192,failure,failure,1192,interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,1,['failure'],['failure']
Availability,"// Additional text based option being passed down to customize the merge.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TFileMergeInfo.h:45,down,down,45,core/meta/inc/TFileMergeInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TFileMergeInfo.h,1,['down'],['down']
Availability,"// Additionally need to drop all global values from the comdat to; // available_externally, to satisfy the COMDAT requirement that all members; // are discarded as a unit. The non-local linkage global values avoid; // duplicate definition linker errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTO.cpp:246,error,errors,246,interpreter/llvm-project/llvm/lib/LTO/LTO.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTO.cpp,1,['error'],['errors']
Availability,"// Adds all vectors holded by all TProofVectorContainers in the collection; // the vector holded by this TProofVectorContainer.; // Returns the total number of poins in the result or -1 in case of an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofDraw.h:200,error,error,200,proof/proofplayer/inc/TProofDraw.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofDraw.h,1,['error'],['error']
Availability,"// Adds more scope specifier to the spelled name until the spelling is not; // ambiguous. A spelling is ambiguous if the resolution of the symbol is; // ambiguous. For example, if QName is ""::y::bar"", the spelling is ""y::bar"", and; // context contains a nested namespace ""a::y"", then ""y::bar"" can be resolved to; // ::a::y::bar in the context, which can cause compile error.; // FIXME: consider using namespaces.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Lookup.cpp:368,error,error,368,interpreter/llvm-project/clang/lib/Tooling/Refactoring/Lookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Lookup.cpp,1,['error'],['error']
Availability,// Adjust Mask to the right number of elements.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp:10,Mask,Mask,10,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,1,['Mask'],['Mask']
Availability,// Adjust NotMaskLZ down to be from the actual size of the int instead of i64.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:20,down,down,20,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['down'],['down']
Availability,// Adjust cycles with downward saturation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp:22,down,downward,22,interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp,1,['down'],['downward']
Availability,// Adjust mask based on new input vector length.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp:10,mask,mask,10,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,2,['mask'],['mask']
Availability,"// Adjust mask in case of reused inputs. Also, need to insert constant; // inputs at first, otherwise it affects the final outcome.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp:10,mask,mask,10,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,1,['mask'],['mask']
Availability,// Adjust mask to correct indices for the second input.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:10,mask,mask,10,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,// Adjust mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp:10,mask,mask,10,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,2,['mask'],['mask']
Availability,"// Adjust potentially 's' setting instructions after isel, i.e. ADC, SBC, RSB,; // RSC. Coming out of isel, they have an implicit CPSR def, but the optional; // operand is still set to noreg. If needed, set the optional operand's; // register to CPSR, and remove the redundant implicit def.; //; // e.g. ADCS (..., implicit-def CPSR) -> ADC (... opt:def CPSR).; // Rename pseudo opcodes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:267,redundant,redundant,267,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['redundant'],['redundant']
Availability,// Adjust shuffle mask - replace SM_SentinelZero with second source index.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:18,mask,mask,18,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,// Adjust stack to erase error code,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ExpandPseudo.cpp:25,error,error,25,interpreter/llvm-project/llvm/lib/Target/X86/X86ExpandPseudo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ExpandPseudo.cpp,2,['error'],['error']
Availability,// Adjust the mask so we are pulling in the same index from the splat; // as the index from the interesting vector in consecutive elements.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:14,mask,mask,14,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['mask'],['mask']
Availability,// Adjust the mask to match the new locations of A and B.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:14,mask,mask,14,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,// Adjust the shuffle mask if either input vector comes from a; // SCALAR_TO_VECTOR and keep the respective input vector in permuted; // form (to prevent the need for a swap).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:22,mask,mask,22,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['mask'],['mask']
Availability,"// Adjust width of ""C"" to the bitfield width, then mask off the high bits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp:51,mask,mask,51,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp,1,['mask'],['mask']
Availability,"// AdvSIMD immediate moves cannot materialize out mask in a single; // instruction for 64-bit elements. Instead, materialize zero and then; // negate it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64LegalizerInfo.cpp:50,mask,mask,50,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64LegalizerInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64LegalizerInfo.cpp,1,['mask'],['mask']
Availability,"// Advance Nhdr by NoteSize bytes, starting from NhdrPos.; //; // Assumes NoteSize <= RemainingSize. Ensures Nhdr->getSize() <= RemainingSize; // upon returning. Handles stopping iteration when reaching the end of the; // container, either cleanly or with an overflow error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/ELFTypes.h:268,error,error,268,interpreter/llvm-project/llvm/include/llvm/Object/ELFTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/ELFTypes.h,1,['error'],['error']
Availability,// Advance RegionBegin if the first instruction moves down.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:54,down,down,54,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['down'],['down']
Availability,// After an error the next token can be an annotation token.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp:12,error,error,12,interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,1,['error'],['error']
Availability,"// After emitting the diagnostic, bypass the overriding file to recover; // (this creates a separate FileEntry).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp:64,recover,recover,64,interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,1,['recover'],['recover']
Availability,"// After encountering an error, if we're actually supposed to capture, keep; // capturing in nested contexts to suppress any follow-on diagnostics.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:25,error,error,25,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['error'],['error']
Availability,"// After running the loop pass, the parent loop might change and we need to; // notify the updater, otherwise U.ParentL might gets outdated and triggers; // assertion failures in addSiblingLoops and addChildLoops.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPassManager.cpp:167,failure,failures,167,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPassManager.cpp,2,['failure'],['failures']
Availability,"// After the dominator tree was updated with the added edge, update MemorySSA; // if available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:85,avail,available,85,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['avail'],['available']
Availability,"// After the loop has been deleted all the values defined and modified; // inside the loop are going to be unavailable. Values computed in the; // loop will have been deleted, automatically causing their debug uses; // be be replaced with undef. Loop invariant values will still be available.; // Move dbg.values out the loop so that earlier location ranges are still; // terminated and loop invariant assignments are preserved.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp:282,avail,available,282,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,1,['avail'],['available']
Availability,"// After unmerging, verify that GEPIOp is actually only used in SrcBlock (not; // alive on IndirectBr edges).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:82,alive,alive,82,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['alive'],['alive']
Availability,// Alias scope information gives a way to definitely identify an; // original memory object and practically produced in the module LDS; // lowering pass. If there is no scope available we will not be able; // to disambiguate LDS aliasing as after the module lowering all LDS; // is squashed into a single big object. Do not attempt to use one of; // the limited LDSDMAStores for something we will not be able to use; // anyway.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp:175,avail,available,175,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp,1,['avail'],['available']
Availability,// Align OffsetBeg to generate correct mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:39,mask,mask,39,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['mask'],['mask']
Availability,// Align so unusual types like i1 don't get rounded down.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelEmitter.cpp:52,down,down,52,interpreter/llvm-project/llvm/utils/TableGen/GlobalISelEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelEmitter.cpp,1,['down'],['down']
Availability,// All 1's means mask is not needed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp:17,mask,mask,17,interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,1,['mask'],['mask']
Availability,// All Required analyses should be available to the pass as it runs! Here; // we fill in the AnalysisImpls member of the pass so that it can; // successfully use the getAnalysis() method to retrieve the; // implementations it needs.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:35,avail,available,35,interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp,1,['avail'],['available']
Availability,"// All conflicts with previous declarations are recovered by; // returning the previous declaration, unless this is a definition,; // in which case we want the caller to bail out.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:48,recover,recovered,48,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['recover'],['recovered']
Availability,"// All conflicts with previous declarations are recovered by; // returning the previous declaration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:48,recover,recovered,48,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp,1,['recover'],['recovered']
Availability,// All elements of the original mask can be scaled down to map to the elements; // of a mask with wider elements.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp:32,mask,mask,32,interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,3,"['down', 'mask']","['down', 'mask']"
Availability,// All errors should have been emitted.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:7,error,errors,7,interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,2,['error'],['errors']
Availability,// All instructions have either a shift or a mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp:45,mask,mask,45,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp,1,['mask'],['mask']
Availability,// All leaves to AvailableQueue.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp:17,Avail,AvailableQueue,17,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,1,['Avail'],['AvailableQueue']
Availability,// All mask elements besides the inserted element remain the same.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp:7,mask,mask,7,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,1,['mask'],['mask']
Availability,// All nodes that are possible to schedule are stored in the Available set.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.cpp:61,Avail,Available,61,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.cpp,1,['Avail'],['Available']
Availability,"// All non-undef (non-negative) indexes are well within [0..127], so they; // fit in a single byte. Build two 64-bit words:; // - MaskIdx where each byte is the corresponding index (for non-negative; // indexes), and 0xFF for negative indexes, and; // - MaskUnd that has 0xFF for each negative index.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp:130,Mask,MaskIdx,130,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp,2,['Mask'],"['MaskIdx', 'MaskUnd']"
Availability,"// All of the compare-mask comparisons are ordered, but we can switch; // between the two by a double inversion. E.g. ULE == !OGT.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:22,mask,mask,22,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,2,['mask'],['mask']
Availability,"// All of these mask pair classes have the same spill size, the same kind; // of kmov instructions can be used with all of them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:16,mask,mask,16,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,1,['mask'],['mask']
Availability,"// All one mask, or 5-byte mask.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:11,mask,mask,11,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,2,['mask'],['mask']
Availability,// All private methods return true if there is more input available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/JSONCompilationDatabase.cpp:58,avail,available,58,interpreter/llvm-project/clang/lib/Tooling/JSONCompilationDatabase.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/JSONCompilationDatabase.cpp,1,['avail'],['available']
Availability,"// All ranges for the subprogram DIE in case it has multiple. We need to; // pass this down into parseInlineInfo so we don't warn about inline; // ranges that are not in the current subrange of a function when they; // actually are in another subgrange. We do this because when a function; // has discontiguos ranges, we create multiple function entries with only; // the info for that range contained inside of it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/GSYM/DwarfTransformer.cpp:87,down,down,87,interpreter/llvm-project/llvm/lib/DebugInfo/GSYM/DwarfTransformer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/GSYM/DwarfTransformer.cpp,1,['down'],['down']
Availability,"// All remaining transformation depend on the value of the mask, which is; // not known at compile time for scalable vectors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:59,mask,mask,59,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['mask'],['mask']
Availability,"// All simm32 constants should be handled by isel.; // NOTE: The getMaxBuildIntsCost call below should return a value >= 2 making; // this check redundant, but small immediates are common so this check; // should have better compile time.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:145,redundant,redundant,145,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['redundant'],['redundant']
Availability,"// All subscripts are all the same type.; // Loop bound may be smaller (e.g., a char).; // Should zero extend loop bound, since it's always >= 0.; // This routine collects upper bound and extends or truncates if needed.; // Truncating is safe when subscripts are known not to wrap. Cases without; // nowrap flags should have been rejected earlier.; // Return null if no bound available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:376,avail,available,376,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['avail'],['available']
Availability,// All the GEPs feeding the PHI are identical. Clone one down into our; // BB so that it can be merged with the current GEP.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:57,down,down,57,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,1,['down'],['down']
Availability,// All the bits of Op0 that the 'and' could be masking are already zero.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ConstantFolding.cpp:47,mask,masking,47,interpreter/llvm-project/llvm/lib/Analysis/ConstantFolding.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ConstantFolding.cpp,1,['mask'],['masking']
Availability,// All the bits of Op1 that the 'and' could be masking are already zero.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ConstantFolding.cpp:47,mask,masking,47,interpreter/llvm-project/llvm/lib/Analysis/ConstantFolding.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ConstantFolding.cpp,1,['mask'],['masking']
Availability,// All upstream VP SDNodes always have a mask and avl.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VVPISelLowering.cpp:41,mask,mask,41,interpreter/llvm-project/llvm/lib/Target/VE/VVPISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VVPISelLowering.cpp,1,['mask'],['mask']
Availability,// All users are OK. Adjust the masks for MI.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZElimCompare.cpp:32,mask,masks,32,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZElimCompare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZElimCompare.cpp,1,['mask'],['masks']
Availability,// All valid 64-bit to 32-bit casts work by chopping off the high; // bits. Any masking only clearing the low bits will also apply in the new; // address space.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp:80,mask,masking,80,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp,1,['mask'],['masking']
Availability,"// All vector types are default aligned on an 8-byte boundary, even if the; // vector facility is not available. That is different from Linux.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/SystemZ.h:102,avail,available,102,interpreter/llvm-project/clang/lib/Basic/Targets/SystemZ.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/SystemZ.h,1,['avail'],['available']
Availability,"// All we know about a fence instruction is what we get from the ModRef; // mask: if Loc is a constant memory location, the fence definitely could; // not modify it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp:76,mask,mask,76,interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp,1,['mask'],['mask']
Availability,"// All zero mask.; // See if we have a continuous run of bits. If so, we have 0*1+0*",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:12,mask,mask,12,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['mask'],['mask']
Availability,// All-one mask is modelled as no-mask following the convention for masked; // load/store/gather/scatter. Initialize BlockMask to no-mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:11,mask,mask,11,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,4,['mask'],"['mask', 'masked']"
Availability,// All-true mask for the currently configured explicit vector length.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/VectorBuilder.h:12,mask,mask,12,interpreter/llvm-project/llvm/include/llvm/IR/VectorBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/VectorBuilder.h,1,['mask'],['mask']
Availability,// AllCaps and AvailableCaps are related but different. AllCaps is a subset of; // AvailableCaps. AvailableCaps is the complete set of capabilities that are; // available to the current target. AllCaps is the set of capabilities that; // are required by the current module.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVModuleAnalysis.h:15,Avail,AvailableCaps,15,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVModuleAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVModuleAnalysis.h,4,"['Avail', 'avail']","['AvailableCaps', 'available']"
Availability,// Allocate a new Reg Mask and copy Mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLoweringCall.cpp:22,Mask,Mask,22,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLoweringCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLoweringCall.cpp,2,['Mask'],['Mask']
Availability,"// Allocate a weak_ptr on the heap, return a pointer to it. The user is responsible for deleting this weak_ptr.; // This function is meant to be used by RInterface's methods that book code for jitting.; // The problem it solves is that we generate code to be lazily jitted with the addresses of certain objects in them,; // and we need to check those objects are still alive when the generated code is finally jitted and executed.; // So we pass addresses to weak_ptrs allocated on the heap to the jitted code, which is then responsible for; // the deletion of the weak_ptr object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:369,alive,alive,369,tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx,1,['alive'],['alive']
Availability,// Allocate by adjusting by the negative of what the record holder tracked; // it tracked a positive offset in a downward growing stack.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARC/ARCFrameLowering.cpp:113,down,downward,113,interpreter/llvm-project/llvm/lib/Target/ARC/ARCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARC/ARCFrameLowering.cpp,1,['down'],['downward']
Availability,"// Allocate int register and shadow next int register. If first; // available register is Mips::A1 or Mips::A3, shadow it too.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp:68,avail,available,68,interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp,1,['avail'],['available']
Availability,"// Allocate the mask array for the node out of the BumpPtrAllocator, since; // SDNode doesn't have access to it. This memory will be ""leaked"" when; // the node is deallocated, but recovered when the NodeAllocator is released.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:16,mask,mask,16,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,2,"['mask', 'recover']","['mask', 'recovered']"
Availability,"// Allocate the same number of UTF-16 code units as UTF-8 code units. Encoding; // as UTF-16 should always require the same amount or less code units than the; // UTF-8 encoding. Allocate one extra byte for the null terminator though,; // so that someone calling DstUTF16.data() gets a null terminated string.; // We resize down later so we don't have to worry that this over allocates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTFWrapper.cpp:324,down,down,324,interpreter/llvm-project/llvm/lib/Support/ConvertUTFWrapper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTFWrapper.cpp,1,['down'],['down']
Availability,// Allow #defining |and| and friends for Microsoft compatibility or; // recovery when legacy C headers are included in C++.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPDirectives.cpp:72,recover,recovery,72,interpreter/llvm-project/clang/lib/Lex/PPDirectives.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPDirectives.cpp,1,['recover'],['recovery']
Availability,// Allow a non-canonical shuffle mask that is choosing elements from op1.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp:33,mask,mask,33,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,1,['mask'],['mask']
Availability,// Allow different 'introduced' / 'obsoleted' availability versions; // on a method that implements an optional protocol requirement. It; // makes less sense to allow this for 'deprecated' as the user can't; // see if the method is 'deprecated' as 'respondsToSelector' will; // still return true when the method is deprecated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp:46,avail,availability,46,interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,1,['avail'],['availability']
Availability,// Allow for degenerate case: completely undef mask means neither source is used.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instructions.cpp:47,mask,mask,47,interpreter/llvm-project/llvm/lib/IR/Instructions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instructions.cpp,1,['mask'],['mask']
Availability,"// Allow hardware divide if available in arch, or no; // info exists.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ARMBuildAttributes.h:28,avail,available,28,interpreter/llvm-project/llvm/include/llvm/Support/ARMBuildAttributes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ARMBuildAttributes.h,1,['avail'],['available']
Availability,// Allow one node which will masked along with any loads found.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:29,mask,masked,29,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['mask'],['masked']
Availability,// Allow sinking if MI edits lane mask (divergent i1 in sgpr).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp:34,mask,mask,34,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp,1,['mask'],['mask']
Availability,"// Allow sizeof(void)/alignof(void) as an extension, unless in OpenCL where; // this is an error (OpenCL v1.1 s6.3.k)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:91,error,error,91,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['error'],['error']
Availability,"// Allow the scheduler to force top-down or bottom-up scheduling. If neither; // is true, the scheduler runs in both directions and converges.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:36,down,down,36,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['down'],['down']
Availability,"// Allow users to relax checking by N% i.e., if they use a 5% tolerance,; // then we check against 0.95*ScaledThreshold",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/MisExpect.cpp:62,toler,tolerance,62,interpreter/llvm-project/llvm/lib/Transforms/Utils/MisExpect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/MisExpect.cpp,1,['toler'],['tolerance']
Availability,// Allow wider loads if they are sufficiently aligned to avoid memory faults; // and if the original load is simple.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp:70,fault,faults,70,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,1,['fault'],['faults']
Availability,// Already emitted a diagnostic when parsing the error type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:49,error,error,49,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['error'],['error']
Availability,// Already had a match; // Error if multiple matches are found for a column.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenMapTable.cpp:27,Error,Error,27,interpreter/llvm-project/llvm/utils/TableGen/CodeGenMapTable.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenMapTable.cpp,1,['Error'],['Error']
Availability,// Already imported (possibly from another TU) and with an error.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp:59,error,error,59,interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,1,['error'],['error']
Availability,// Already imported but with error.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp:29,error,error,29,interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,1,['error'],['error']
Availability,// Also check for register mask interference.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterferenceCache.cpp:27,mask,mask,27,interpreter/llvm-project/llvm/lib/CodeGen/InterferenceCache.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterferenceCache.cpp,2,['mask'],['mask']
Availability,// Also compute the smallest discriminant and various masks for convenience.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/PointerSumType.h:54,mask,masks,54,interpreter/llvm-project/llvm/include/llvm/ADT/PointerSumType.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/PointerSumType.h,1,['mask'],['masks']
Availability,// Also ensure that the node to be masked only produces one data result.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:35,mask,masked,35,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['mask'],['masked']
Availability,// Also recover CFG index by scanning the CFG block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp:8,recover,recover,8,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp,1,['recover'],['recover']
Availability,"// Also that one was empty. We need to error out, but only if the user; // did not explicitly request to avoid errors about missing branches",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:39,error,error,39,tree/treeplayer/src/TTreeReaderValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx,2,['error'],"['error', 'errors']"
Availability,"// Alternative: fit chi^2 integrating f(x) over ranges defined by X errors, rather; // than taking point at center of bin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:68,error,errors,68,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['error'],['errors']
Availability,"// Alternative: fit chi^2 integrating f(x) over ranges defined by X errors,; // rather than taking point at center of bin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx:68,error,errors,68,roofit/roofitcore/test/testTestStatistics.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx,1,['error'],['errors']
Availability,"// Although IEEE-754 says atan2(+/-0.0, +/-0.0) are well-defined, and; // GLIBC and MSVC do not appear to raise an error on those, we; // cannot rely on that behavior. POSIX and C11 say that a domain error; // may occur, so allow for that possibility.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ConstantFolding.cpp:115,error,error,115,interpreter/llvm-project/llvm/lib/Analysis/ConstantFolding.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ConstantFolding.cpp,2,['error'],['error']
Availability,"// Although a conservatively allocatable node can be allocated to a register,; // spilling it may provide a lower cost solution. Assert here that spilling; // is done by choice, not because there were no register available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/PBQP/ReductionRules.h:213,avail,available,213,interpreter/llvm-project/llvm/include/llvm/CodeGen/PBQP/ReductionRules.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/PBQP/ReductionRules.h,1,['avail'],['available']
Availability,"// Although there are 32 vector registers, v0 is special in that it is the; // only register that can be used to hold a mask.; // FIXME: Should we conservatively return 31 as the number of usable; // vector registers?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.h:120,mask,mask,120,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.h,1,['mask'],['mask']
Availability,"// Although we create ADJCALLSTACKDOWN and ADJCALLSTACKUP; // as scheduling fences, we skip creating fences if we already; // have existing ADJCALLSTACKDOWN/UP to avoid nesting,; // which causes verification error with -verify-machineinstrs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTLSDynamicCall.cpp:208,error,error,208,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTLSDynamicCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTLSDynamicCall.cpp,1,['error'],['error']
Availability,"// Although we'll properly infer the type of the block once it's completed,; // make sure we provide a return type now for better error recovery.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:130,error,error,130,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,2,"['error', 'recover']","['error', 'recovery']"
Availability,// Always available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:10,avail,available,10,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,2,['avail'],['available']
Availability,"// Always avoid lexing editor placeholders when we're just running the; // preprocessor as we never want to emit the; // ""editor placeholder in source file"" error in PP only mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp:157,error,error,157,interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,1,['error'],['error']
Availability,"// Always communicate errors via SendLogFile",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:22,error,errors,22,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['error'],['errors']
Availability,// Always emit an alignment here even if we throw an error.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp:53,error,error,53,interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,1,['error'],['error']
Availability,// Always emit an alignment here even if we thrown an error.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:54,error,error,54,interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,1,['error'],['error']
Availability,// Always enable -Wdeprecated-objc-isa-usage and promote it; // to an error.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:70,error,error,70,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,1,['error'],['error']
Availability,// Always enable availability diagnostics for shader models.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp:17,avail,availability,17,interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp,1,['avail'],['availability']
Availability,// Always error about undefined 'TARGET_OS_*' macros.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:10,error,error,10,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,1,['error'],['error']
Availability,"// Always insert the action at the beginning, otherwise we may end up; // using the temp reg before it's available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp:105,avail,available,105,interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp,1,['avail'],['available']
Availability,"// Always make sure the size of this pack is correct, even if we didn't; // deduce any values for it.; //; // FIXME: This isn't required by the normative wording, but substitution; // and post-substitution checking will always fail if the arity of any; // pack is not equal to the number of elements we processed. (Either that; // or something else has gone *very* wrong.) We're permitted to skip any; // hard errors from those follow-on steps by the intent (but not the; // wording) of C++ [temp.inst]p8:; //; // If the function selected by overload resolution can be determined; // without instantiating a class template definition, it is unspecified; // whether that instantiation actually takes place",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:410,error,errors,410,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['error'],['errors']
Availability,"// Always map a canonical src path to its real path into the YAML, by doing; // this we map different virtual src paths to the same entry in the VFS; // overlay, which is a way to emulate symlink inside the VFS; this is also; // needed for correctness, not doing that can lead to module redefinition; // errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ModuleDependencyCollector.cpp:304,error,errors,304,interpreter/llvm-project/clang/lib/Frontend/ModuleDependencyCollector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ModuleDependencyCollector.cpp,2,['error'],['errors']
Availability,// Always return. Either we cached out or we just emitted an error.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NonNullParamChecker.cpp:61,error,error,61,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NonNullParamChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NonNullParamChecker.cpp,1,['error'],['error']
Availability,// Always try to create iterator declarator to avoid extra error messages; // about unknown declarations use.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:59,error,error,59,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['error'],['error']
Availability,// Always use the FP for SVE spills if available and beneficial.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:39,avail,available,39,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['avail'],['available']
Availability,"// Amount of lineWidth available to table",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlTable.cxx:23,avail,available,23,gui/guihtml/src/TGHtmlTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlTable.cxx,1,['avail'],['available']
Availability,"// An @catch parameter must be an unqualified object pointer type;; // FIXME: Recover from ""NSObject foo"" by inserting the * in ""NSObject *foo""?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:78,Recover,Recover,78,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['Recover'],['Recover']
Availability,// An AND with a constant mask is the same as a truncate + zero-extend.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:26,mask,mask,26,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['mask'],['mask']
Availability,"// An HD function counts as host code if we're compiling for host, and; // device code if we're compiling for device. Defer any errors in device; // mode until the function is known-emitted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp:128,error,errors,128,interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,2,['error'],['errors']
Availability,"// An ImportPath is the list of the AST nodes which we visit during an; // Import call.; // If node `A` depends on node `B` then the path contains an `A`->`B` edge.; // From the call stack of the import functions we can read the very same; // path.; //; // Now imagine the following AST, where the `->` represents dependency in; // therms of the import.; // ```; // A->B->C->D; // `->E; // ```; // We would like to import A.; // The import behaves like a DFS, so we will visit the nodes in this order:; // ABCDE.; // During the visitation we will have the following ImportPaths:; // ```; // A; // AB; // ABC; // ABCD; // ABC; // AB; // ABE; // AB; // A; // ```; // If during the visit of E there is an error then we set an error for E,; // then as the call stack shrinks for B, then for A:; // ```; // A; // AB; // ABC; // ABCD; // ABC; // AB; // ABE // Error! Set an error to E; // AB // Set an error to B; // A // Set an error to A; // ```; // However, during the import we could import C and D without any error and; // they are independent from A,B and E.; // We must not set up an error for C and D.; // So, at the end of the import we have an entry in `ImportDeclErrors` for; // A,B,E but not for C,D.; //; // Now what happens if there is a cycle in the import path?; // Let's consider this AST:; // ```; // A->B->C->A; // `->E; // ```; // During the visitation we will have the below ImportPaths and if during; // the visit of E there is an error then we will set up an error for E,B,A.; // But what's up with C?; // ```; // A; // AB; // ABC; // ABCA; // ABC; // AB; // ABE // Error! Set an error to E; // AB // Set an error to B; // A // Set an error to A; // ```; // This time we know that both B and C are dependent on A.; // This means we must set up an error for C too.; // As the call stack reverses back we get to A and we must set up an error; // to all nodes which depend on A (this includes C).; // But C is no longer on the import path, it just had been previously.; // Such situatio",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h:702,error,error,702,interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h,7,"['Error', 'error']","['Error', 'error']"
Availability,"// An LE has been generated, but it's not the terminator - that is an; // unconditional branch. However, the logic has now been reversed with the; // CBN?Z being the conditional branch and the LE being the unconditional; // branch. So this means we can remove the redundant unconditional branch; // at the end of the block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp:264,redundant,redundant,264,interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,1,['redundant'],['redundant']
Availability,"// An One-Off Identity mask is one that is mostly an identity mask from as; // single source but contains a single element out-of-place, either from a; // different vector or from another position in the same vector. As opposed to; // lowering this via a ARMISD::BUILD_VECTOR we can generate an extract/insert; // pair directly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:23,mask,mask,23,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,2,['mask'],['mask']
Availability,"// An empty Result might mean a line with ';' or some parsing error, ignore; // it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/Parser.cpp:62,error,error,62,interpreter/llvm-project/clang/lib/Parse/Parser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/Parser.cpp,1,['error'],['error']
Availability,// An empty range of new register means no repairing.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/RegBankSelect.cpp:43,repair,repairing,43,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/RegBankSelect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/RegBankSelect.cpp,1,['repair'],['repairing']
Availability,// An error diagnostic has already been printed when parsing the declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:6,error,error,6,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,1,['error'],['error']
Availability,// An error has occurred so exit loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp:6,error,error,6,interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp,1,['error'],['error']
Availability,"// An error has occurred.. We might be able to recover with metalinks.; // Try to populate the replicas vector. If successful, TFile will try; // the replicas one by one",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/davix/src/TDavixFile.cxx:6,error,error,6,net/davix/src/TDavixFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/davix/src/TDavixFile.cxx,2,"['error', 'recover']","['error', 'recover']"
Availability,// An error if not of the form LLVM-MCA-TARGET-KIND,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/CodeRegionGenerator.cpp:6,error,error,6,interpreter/llvm-project/llvm/tools/llvm-mca/CodeRegionGenerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/CodeRegionGenerator.cpp,1,['error'],['error']
Availability,// An error margin is necessary because of poor performance of the generic RP; // tracker and can be adjusted up for tuning heuristics to try and more; // aggressively reduce register pressure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.h:6,error,error,6,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.h,1,['error'],['error']
Availability,"// An error node must either be a sink or have a tag, otherwise; // it could get reclaimed before the path diagnostic is created.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp:6,error,error,6,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp,1,['error'],['error']
Availability,"// An error occurred",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Display.h:6,error,error,6,core/textinput/src/textinput/Display.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Display.h,1,['error'],['error']
Availability,// An error occurred parsing the trailing return type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:6,error,error,6,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['error'],['error']
Availability,// An error occurred.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/YAMLParser.cpp:6,error,error,6,interpreter/llvm-project/llvm/lib/Support/YAMLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/YAMLParser.cpp,2,['error'],['error']
Availability,"// An error that we need to suppress.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:6,error,error,6,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp,1,['error'],['error']
Availability,"// An error was encountered running the snippet, process it",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkRunner.cpp:6,error,error,6,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkRunner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkRunner.cpp,1,['error'],['error']
Availability,// An immediate integer between 0 and 65535 (valid for MOVW); // only available in ARMv6T2 and above,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/ARM.cpp:70,avail,available,70,interpreter/llvm-project/clang/lib/Basic/Targets/ARM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/ARM.cpp,1,['avail'],['available']
Availability,"// An implementation implicitly has the availability of the interface.; // Unless it is ""+load"" method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp:40,avail,availability,40,interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp,1,['avail'],['availability']
Availability,"// An in-register sign-extend of a boolean is a negation:; // 'true' (1) sign-extended is -1.; // 'false' (0) sign-extended is 0.; // However, we must mask the high bits of the source operand because the; // SIGN_EXTEND_INREG does not guarantee that the high bits are already zero.; // TODO: Do this for vectors too?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp:151,mask,mask,151,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp,1,['mask'],['mask']
Availability,"// An integer description might consist of a single integer or; // an arithmetic expression evaluating to the integer. The expressions; // can contain the following tokens: <int> ( ) + - | & ~ not. Their meaning; // is the same as in C++ except for 'not' expression.; // The operators in the original RC implementation have the following; // precedence:; // 1) Unary operators (- ~ not),; // 2) Binary operators (+ - & |), with no precedence.; //; // 'not' expression is mostly useful for style values. It evaluates to 0,; // but value given to the operator is stored separately from integer value.; // It's mostly useful for control style expressions and causes bits from; // default control style to be excluded from generated style. For binary; // operators the mask from the right operand is applied to the left operand; // and masks from both operands are combined in operator result.; //; // The following grammar is used to parse the expressions Exp1:; // Exp1 ::= Exp2 || Exp1 + Exp2 || Exp1 - Exp2 || Exp1 | Exp2 || Exp1 & Exp2; // Exp2 ::= -Exp2 || ~Exp2 || not Expr2 || Int || (Exp1).; // (More conveniently, Exp1 is a non-empty sequence of Exp2 expressions,; // separated by binary operators.); //; // Expressions of type Exp1 are read by parseIntExpr1(Inner) method, while Exp2; // is read by parseIntExpr2().; //; // The original Microsoft tool handles multiple unary operators incorrectly.; // For example, in 16-bit little-endian integers:; // 1 => 01 00, -1 => ff ff, --1 => ff ff, ---1 => 01 00;; // 1 => 01 00, ~1 => fe ff, ~~1 => fd ff, ~~~1 => fc ff.; // Our implementation differs from the original one and handles these; // operators correctly:; // 1 => 01 00, -1 => ff ff, --1 => 01 00, ---1 => ff ff;; // 1 => 01 00, ~1 => fe ff, ~~1 => 01 00, ~~~1 => fe ff.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rc/ResourceScriptParser.cpp:765,mask,mask,765,interpreter/llvm-project/llvm/tools/llvm-rc/ResourceScriptParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rc/ResourceScriptParser.cpp,2,['mask'],"['mask', 'masks']"
Availability,"// An interleaved load will look like this for Factor=3:; // %wide.vec = load <12 x i32>, ptr %3, align 4; // %strided.vec = shufflevector %wide.vec, poison, <4 x i32> <stride mask>; // %strided.vec1 = shufflevector %wide.vec, poison, <4 x i32> <stride mask>; // %strided.vec2 = shufflevector %wide.vec, poison, <4 x i32> <stride mask>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.cpp:176,mask,mask,176,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.cpp,3,['mask'],['mask']
Availability,// An operand %0:sub0 reads %0:sub1..n. Invert the lane; // mask for subregister defs. Read-undef defs will be handled by; // readsReg below.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineVerifier.cpp:60,mask,mask,60,interpreter/llvm-project/llvm/lib/CodeGen/MachineVerifier.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineVerifier.cpp,1,['mask'],['mask']
Availability,// An operand mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenSchedule.h:14,mask,mask,14,interpreter/llvm-project/llvm/utils/TableGen/CodeGenSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenSchedule.h,1,['mask'],['mask']
Availability,// An optimization remark emitter. Used to report failures.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/InstructionSelect.cpp:50,failure,failures,50,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/InstructionSelect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/InstructionSelect.cpp,1,['failure'],['failures']
Availability,"// An undef shuffle mask element may propagate as an undef constant element in; // the new binop. That would produce poison where the original code might not.; // If we already made a safe constant, then there's no danger.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp:20,mask,mask,20,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,1,['mask'],['mask']
Availability,"// An unsigned LEB128 number representing the (implementation-defined) time; // of last modification for the file, or 0 if not available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFStreamer.cpp:127,avail,available,127,interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFStreamer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFStreamer.cpp,1,['avail'],['available']
Availability,"// An unsigned LEB128 number representing the (implementation-defined); // time of last modification for the file, or 0 if not available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DebugLineSectionEmitter.h:127,avail,available,127,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DebugLineSectionEmitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DebugLineSectionEmitter.h,1,['avail'],['available']
Availability,"// An unsigned LEB128 number representing the length in bytes of the file,; // or 0 if not available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFStreamer.cpp:91,avail,available,91,interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFStreamer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFStreamer.cpp,2,['avail'],['available']
Availability,"// An unspecified FilenameID means use the previous (or containing); // filename if available, or the main source file otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp:84,avail,available,84,interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp,1,['avail'],['available']
Availability,"// An unterminated open brace is undefined. We treat the rest of the string; // as a literal replacement, but we assert to indicate that this is; // undefined and that we consider it an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/FormatVariadic.cpp:186,error,error,186,interpreter/llvm-project/llvm/lib/Support/FormatVariadic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/FormatVariadic.cpp,1,['error'],['error']
Availability,"// An unused autorelease is badness. If we remove it the receiver; // will likely die immediately while previously it was kept alive; // by the autorelease pool. This is bad practice in general, leave it; // and emit an error to force the user to restructure their code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransRetainReleaseDealloc.cpp:127,alive,alive,127,interpreter/llvm-project/clang/lib/ARCMigrate/TransRetainReleaseDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransRetainReleaseDealloc.cpp,2,"['alive', 'error']","['alive', 'error']"
Availability,// Analyse the specified address returning true if a more optimal addressing; // mode is available. When returning true all parameters are updated to reflect; // their recommended values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:89,avail,available,89,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['avail'],['available']
Availability,// Analysis information if available,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineVerifier.cpp:27,avail,available,27,interpreter/llvm-project/llvm/lib/CodeGen/MachineVerifier.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineVerifier.cpp,1,['avail'],['available']
Availability,// Analyze the shuffle mask in Scale-sized chunks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:23,mask,mask,23,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['mask'],['mask']
Availability,// And RHS must be a mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp:21,mask,mask,21,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,1,['mask'],['mask']
Availability,// And compute the mask as usual: (-1 l>> (NumHighBitsToClear)),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp:19,mask,mask,19,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,1,['mask'],['mask']
Availability,// And compute the mask as usual: ~(-1 << (SumOfShAmts)),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp:19,mask,mask,19,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,1,['mask'],['mask']
Availability,// And just directly shift any other-half mask elements to be same-half; // as we will have mirrored the dword containing the element into the; // same position within that half.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:42,mask,mask,42,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,"// And locations of macro calls, to properly recover boundaries of those in; // case of empty expansions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Syntax/Tokens.cpp:45,recover,recover,45,interpreter/llvm-project/clang/lib/Tooling/Syntax/Tokens.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Syntax/Tokens.cpp,1,['recover'],['recover']
Availability,// And make this available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp:17,avail,available,17,interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp,1,['avail'],['available']
Availability,// And put the last one into the available values for SSA form of our; // predicate state.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp:33,avail,available,33,interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp,1,['avail'],['available']
Availability,// And put the new value into the available values for SSA form of our; // predicate state.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp:34,avail,available,34,interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp,1,['avail'],['available']
Availability,"// AndImm is a superset of (AllOnes >> ShlImm); in other words, AndImm; // should end with Mask, and could be prefixed with random bits if those; // bits are shifted out.; //; // For example, xyz11111 (with {x,y,z} being 0 or 1) is fine if ShlImm >= 3;; // the AND result corresponding to those bits are shifted out, so it's fine; // to not extract them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:91,Mask,Mask,91,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,1,['Mask'],['Mask']
Availability,"// Annotate the load as an invariant load iff inside an instance method; // and ivar belongs to instance method's class and one of its super class.; // This check is needed because the ivar offset is a lazily; // initialised value that may depend on objc_msgSend to perform a fixup on; // the first message dispatch.; //; // An additional opportunity to mark the load as invariant arises when the; // base of the ivar access is a parameter to an Objective C method.; // However, because the parameters are not available in the current; // interface, we cannot perform this check.; //; // Note that for direct methods, because objc_msgSend is skipped,; // and that the method may be inlined, this optimization actually; // can't be performed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:510,avail,available,510,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['avail'],['available']
Availability,"// Any AVX512 mask register (same as Yk, additionally allows k0; // for intermideate k reg operations).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp:14,mask,mask,14,interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp,1,['mask'],['mask']
Availability,// Any MIMG instructions that use tfe or lwe require an initialization of the; // result register that will be written in the case of a memory access failure.; // The required code is also added to tie this init code to the result of the; // img instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:150,failure,failure,150,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,1,['failure'],['failure']
Availability,"// Any errors will be diagnosed later in the main loop, ignore them here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/dsymutil/DwarfLinkerForBinary.cpp:7,error,errors,7,interpreter/llvm-project/llvm/tools/dsymutil/DwarfLinkerForBinary.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/dsymutil/DwarfLinkerForBinary.cpp,2,['error'],['errors']
Availability,// Any failure here will fail materialization.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp:7,failure,failure,7,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp,1,['failure'],['failure']
Availability,// Any flags available in a select/setcc fold will be on the setcc as they; // migrated from fcmp,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:13,avail,available,13,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['avail'],['available']
Availability,"// Any icmp can be viewed as being trivially masked; if it allows us to; // remove one, it's worth it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:45,mask,masked,45,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,1,['mask'],['masked']
Availability,// Any leaks or other errors?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp:22,error,errors,22,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,1,['error'],['errors']
Availability,// Any other type of HNode is an error.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/YAMLTraits.cpp:33,error,error,33,interpreter/llvm-project/llvm/lib/Support/YAMLTraits.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/YAMLTraits.cpp,1,['error'],['error']
Availability,// Any previous copy definition or reading the Defs is no longer available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCopyPropagation.cpp:65,avail,available,65,interpreter/llvm-project/llvm/lib/CodeGen/MachineCopyPropagation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCopyPropagation.cpp,1,['avail'],['available']
Availability,// Any return value split in to more than two values can't be returned; // directly. Vectors are returned via the available vector registers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:114,avail,available,114,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['avail'],['available']
Availability,// Any semantic dependence on the qualifier will have; // been incorporated into NamedType. We still need to; // track syntactic (instantiation / error / pack); // dependence on the qualifier.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h:146,error,error,146,interpreter/llvm-project/clang/include/clang/AST/Type.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h,1,['error'],['error']
Availability,// Any unknown false lanes have been masked away by the user(s).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp:37,mask,masked,37,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp,1,['mask'],['masked']
Availability,// Anything that is not a function parameter is an error.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:51,error,error,51,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['error'],['error']
Availability,// Anything that isn't an instruction is always available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:48,avail,available,48,interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,1,['avail'],['available']
Availability,"// Apply Blur on ""downSampleRatio*glowDownSampleRatio"" res",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js:18,down,downSampleRatio,18,ui5/eve7/lib/OutlinePassEve.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js,1,['down'],['downSampleRatio']
Availability,"// Apply any qualifiers from the array type to the element type. This; // implements C99 6.7.3p8: ""If the specification of an array type includes; // any type qualifiers, the element type is so qualified, not the array type.""; // If we get here, we either have type qualifiers on the type, or we have; // sugar such as a typedef in the way. If we have type qualifiers on the type; // we must propagate them down into the element type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:407,down,down,407,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['down'],['down']
Availability,"// Apply divisibilty by \p Divisor on MinMaxExpr with constant values,; // recursively. This is done by aligning up/down the constant value to the; // Divisor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:116,down,down,116,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['down'],['down']
Availability,// Apply mask after the operation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:9,mask,mask,9,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['mask'],['mask']
Availability,"// Apply the ModRef mask. This ensures that if Loc is a constant memory; // location, we take into account the fact that the call definitely could not; // modify the memory location.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp:20,mask,mask,20,interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp,1,['mask'],['mask']
Availability,// Apply the mask to the low word.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APInt.cpp:13,mask,mask,13,interpreter/llvm-project/llvm/lib/Support/APInt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APInt.cpp,1,['mask'],['mask']
Availability,"// Apply the range if there is any; // In case of a chain with a total of N entries, calling SetEntriesRange(N + 1, ...) does not error out; // This is a bug, reported here: https://github.com/root-project/root/issues/10774",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RLoopManager.cxx:130,error,error,130,tree/dataframe/src/RLoopManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RLoopManager.cxx,1,['error'],['error']
Availability,// Apply this processing to all the arguments at once instead of; // dying at the first failure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:88,failure,failure,88,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['failure'],['failure']
Availability,// Apply tweaks if context-sensitive or probe-based profile is available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp:63,avail,available,63,interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp,1,['avail'],['available']
Availability,// Applying mask on vector of i1's and make sure result is at least 8 bits wide.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:12,mask,mask,12,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['mask'],['mask']
Availability,"// Approach bounding box to minimize errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoShapeAssembly.cxx:37,error,errors,37,geom/geom/src/TGeoShapeAssembly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoShapeAssembly.cxx,1,['error'],['errors']
Availability,// Args were sensible expressions but we couldn't initialize the member; // from them. Preserve them in a RecoveryExpr instead.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:106,Recover,RecoveryExpr,106,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['Recover'],['RecoveryExpr']
Availability,// Array of bit values passed down from our parent.; // Set to all BIT_UNFILTERED's for Parent == NULL.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DecoderEmitter.cpp:30,down,down,30,interpreter/llvm-project/llvm/utils/TableGen/DecoderEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DecoderEmitter.cpp,1,['down'],['down']
Availability,"// As SRAI is only available on i16/i32 types, we expand only up to i32; // and handle i64 separately.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:19,avail,available,19,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['avail'],['available']
Availability,"// As a GEP can refer to other GEPs, recursively make all the operands; // of this GEP available at HoistPt.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp:87,avail,available,87,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp,1,['avail'],['available']
Availability,"// As an example for the mapping of RNTuple fields to RDF columns, let's consider an RNTuple; // using the following types and with a top-level field named ""event"" of type Event:; //; // struct Event {; // int id;; // std::vector<Track> tracks;; // };; // struct Track {; // std::vector<Hit> hits;; // };; // struct Hit {; // float x;; // float y;; // };; //; // AddField() will be called from the constructor with the RNTuple root field (ENTupleStructure::kRecord).; // From there, we recurse into the ""event"" sub field (also ENTupleStructure::kRecord) and further down the; // tree of sub fields and expose the following RDF columns:; //; // ""event"" [Event]; // ""event.id"" [int]; // ""event.tracks"" [RVec<Track>]; // ""R_rdf_sizeof_event.tracks"" [unsigned int]; // ""event.tracks.hits"" [RVec<RVec<Hit>>]; // ""R_rdf_sizeof_event.tracks.hits"" [RVec<unsigned int>]; // ""event.tracks.hits.x"" [RVec<RVec<float>>]; // ""R_rdf_sizeof_event.tracks.hits.x"" [RVec<unsigned int>]; // ""event.tracks.hits.y"" [RVec<RVec<float>>]; // ""R_rdf_sizeof_event.tracks.hits.y"" [RVec<unsigned int>]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RNTupleDS.cxx:566,down,down,566,tree/dataframe/src/RNTupleDS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RNTupleDS.cxx,1,['down'],['down']
Availability,"// As an exception, do not flag errors for variables binding to; // const string literals.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:32,error,errors,32,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['error'],['errors']
Availability,"// As before, model no mask as a trivial mask if it'll let us do an; // optimization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:23,mask,mask,23,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,2,['mask'],['mask']
Availability,"// As general rule, fp converts that were not matched above are scalarized; // and cost 1 vcvt for each lane, so long as the instruction is available.; // If not it will become a series of function calls.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMTargetTransformInfo.cpp:140,avail,available,140,interpreter/llvm-project/llvm/lib/Target/ARM/ARMTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMTargetTransformInfo.cpp,1,['avail'],['available']
Availability,"// As in TBranch::GetBasket, this is used as a half-hearted measure to suppress; // the error reporting when many failures occur.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBasket.cxx:88,error,error,88,tree/tree/src/TBasket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBasket.cxx,2,"['error', 'failure']","['error', 'failures']"
Availability,// As mask we must use most poisoned case: red zones and after scope.; // As bytes we can use either the same or just red zones only.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp:6,mask,mask,6,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp,1,['mask'],['mask']
Availability,"// As of binutils 2.32, ld has a bogus TLS relaxation error when the GD/LD; // code sequence using R_X86_64_GOTPCREL (instead of R_X86_64_GOTPCRELX) is; // attempted to be relaxed to IE/LE (binutils PR24784). Work around the bug by; // only using GOT when GOTPCRELX is enabled.; // TODO Delete the workaround when GOTPCRELX becomes commonplace.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:54,error,error,54,interpreter/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp,1,['error'],['error']
Availability,"// As this is a single-input shuffle, the repeated mask should be; // a strictly valid v8i16 mask that we can pass through to the v8i16; // lowering to handle even the v16 case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:51,mask,mask,51,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,2,['mask'],['mask']
Availability,"// As this is a single-input shuffle, the repeated mask should be; // a strictly valid v8i16 mask that we can pass through to the v8i16; // lowering to handle even the v32 case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:51,mask,mask,51,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,2,['mask'],['mask']
Availability,// As-is msan can not tolerate noundef mismatch between caller and; // implementation. Mismatch is possible for e.g. indirect calls from C-caller; // into C++. Such mismatches lead to confusing false reports. To avoid; // expensive workaround on msan we enforce initialization event in uncommon; // cases where it's allowed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp:22,toler,tolerate,22,interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,1,['toler'],['tolerate']
Availability,// Ask DFA if machine resource is available for MI.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/DFAPacketizer.cpp:34,avail,available,34,interpreter/llvm-project/llvm/lib/CodeGen/DFAPacketizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/DFAPacketizer.cpp,1,['avail'],['available']
Availability,"// Ask our owning viewer to close; // Has to be deferred so that our GUI event thread can process this event; // and emit signals - otherwise deleted object is called to emit events; // Not very nice but seems to be only reliable way to close down",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSAFrame.cxx:221,reliab,reliable,221,graf3d/gl/src/TGLSAFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSAFrame.cxx,2,"['down', 'reliab']","['down', 'reliable']"
Availability,"// Assemblers should use the narrow encodings of these instructions when permissible.; // These instructions are special in that they are commutable, so shorter encodings; // are available more often.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp:179,avail,available,179,interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp,1,['avail'],['available']
Availability,// Assert as we enumerate users that 'UselessPad' doesn't have any unwind; // information that we'd be contradicting by making a map entry for it; // (which is something that getUnwindDestTokenHelper must have proved for; // us to get here). Just assert on is direct users here; the checks in; // this downward walk at its descendants will verify that they don't have; // any unwind edges that exit 'UselessPad' either (i.e. they either have no; // unwind edges or unwind to a sibling).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp:302,down,downward,302,interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,1,['down'],['downward']
Availability,// Assign it to the first available color (assumed to be the best) if it's; // not possible to share a used color with other objects.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackSlotColoring.cpp:26,avail,available,26,interpreter/llvm-project/llvm/lib/CodeGen/StackSlotColoring.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackSlotColoring.cpp,1,['avail'],['available']
Availability,// Assign the first mask argument to V0.; // This is an interim calling convention and it may be changed in the; // future.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:20,mask,mask,20,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['mask'],['mask']
Availability,// Assignment requires the LHS to be an identifier.; // This assume we're building without RTTI because LLVM builds that way by; // default. If you build LLVM with RTTI this can be changed to a; // dynamic_cast for automatic error checking.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp:225,error,error,225,interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,8,['error'],['error']
Availability,"// Assignment to error coefficients vector.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:17,error,error,17,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['error'],['error']
Availability,"// Assume infinite resources that allow to fully exploit the available; // instruction-level parallelism.; // InstCost = InstLatency + max(Op1Cost, Op2Cost, … OpNCost)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectOptimize.cpp:61,avail,available,61,interpreter/llvm-project/llvm/lib/CodeGen/SelectOptimize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectOptimize.cpp,1,['avail'],['available']
Availability,"// Assume pre-ARMv6 doesn't support unaligned accesses.; //; // ARMv6 may or may not support unaligned accesses depending on the; // SCTLR.U bit, which is architecture-specific. We assume ARMv6; // Darwin and NetBSD targets support unaligned accesses, and others don't.; //; // ARMv7 always has SCTLR.U set to 1, but it has a new SCTLR.A bit; // which raises an alignment fault on unaligned accesses. Linux; // defaults this bit to 0 and handles it as a system-wide (not; // per-process) setting. It is therefore safe to assume that ARMv7+; // Linux targets support unaligned accesses. The same goes for NaCl; // and Windows.; //; // The above behavior is consistent with GCC.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Arch/ARM.cpp:372,fault,fault,372,interpreter/llvm-project/clang/lib/Driver/ToolChains/Arch/ARM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Arch/ARM.cpp,1,['fault'],['fault']
Availability,"// Assume there is no custom name <redirection>, and therefore the; // vector name consists of; // _ZGV<isa><mask><vlen><parameters>_<scalarname>.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/VFABIDemangler.cpp:109,mask,mask,109,interpreter/llvm-project/llvm/lib/IR/VFABIDemangler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/VFABIDemangler.cpp,1,['mask'],['mask']
Availability,"// Assume we are repairing a use and thus, the original reg will be; // the source of the repairing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/RegBankSelect.cpp:17,repair,repairing,17,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/RegBankSelect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/RegBankSelect.cpp,2,['repair'],['repairing']
Availability,// Assuming that both candidates are not matches...; // Sort by the ranking of deduction failures.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:89,failure,failures,89,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,1,['failure'],['failures']
Availability,"// Assuming the caller doesn't have a zeroext or signext return parameter,; // truncation all the way down to i1 is valid.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:102,down,down,102,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,2,['down'],['down']
Availability,"// Assuming the effective width of Y is not larger than A, i.e. all bits; // from X and Y are disjoint in (X << A) | Y,; // if the mask of this AND op covers all bits of X or Y, while it covers; // no bits from the other, we can bypass this AND op. E.g.,; // ((X << A) | Y) & Mask -> Y,; // if Mask = ((1 << effective_width_of(Y)) - 1); // ((X << A) | Y) & Mask -> X << A,; // if Mask = ((1 << effective_width_of(X)) - 1) << A; // SimplifyDemandedBits in InstCombine can optimize the general case.; // This pattern aims to help other passes for a common case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:131,mask,mask,131,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,5,"['Mask', 'mask']","['Mask', 'mask']"
Availability,"// Assuming the representation of this is close to a true Lorentz Rotation,; // but may have drifted due to round-off error from many operations,; // this forms an ""exact"" orthosymplectic matrix for the Lorentz Rotation; // again.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/src/Boost.cxx:118,error,error,118,math/genvector/src/Boost.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/src/Boost.cxx,5,['error'],['error']
Availability,"// Assuming we are just pass the '{' mark, quering the next token; // Searched for {z}, but none was found. Return false, as no parsing error was; // encountered",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp:136,error,error,136,interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp,1,['error'],['error']
Availability,"// At each stage, we're looking for something that looks like:; // %s = shufflevector <8 x i32> %op, <8 x i32> undef,; // <8 x i32> <i32 2, i32 3, i32 undef, i32 undef,; // i32 undef, i32 undef, i32 undef, i32 undef>; // %a = binop <8 x i32> %op, %s; // Where the mask changes according to the stage. E.g. for a 3-stage pyramid,; // we expect something like:; // <4,5,6,7,u,u,u,u>; // <2,3,u,u,u,u,u,u>; // <1,u,u,u,u,u,u,u>; // While a partial reduction match would be:; // <2,3,u,u,u,u,u,u>; // <1,u,u,u,u,u,u,u>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:264,mask,mask,264,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,1,['mask'],['mask']
Availability,// At failure ferror could be set.; // The standards do not tell what happens with the file position at failure.; // But we can assume that it is dangerous to make a next I/O operation after; // the position was not set correctly (similar to 'fseek').,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp:6,failure,failure,6,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp,2,['failure'],['failure']
Availability,// At least add the file name if available:,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/SARIFDiagnostic.cpp:33,avail,available,33,interpreter/llvm-project/clang/lib/Frontend/SARIFDiagnostic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/SARIFDiagnostic.cpp,1,['avail'],['available']
Availability,// At least print the file name if available:,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/LogDiagnosticPrinter.cpp:35,avail,available,35,interpreter/llvm-project/clang/lib/Frontend/LogDiagnosticPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/LogDiagnosticPrinter.cpp,2,['avail'],['available']
Availability,"// At that point, Mask contains 0x80 set at each byte that holds a value; // in [\n, \r + 1 [; // Scan for the next newline - it's very likely there's one.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp:18,Mask,Mask,18,interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp,1,['Mask'],['Mask']
Availability,"// At the IR layer, all the masked load intrinsics have policy operands,; // none of the others do. All have passthru operands. For our pseudos,; // all loads have policy operands.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp:28,mask,masked,28,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp,1,['mask'],['masked']
Availability,"// At this point we have a resource with an element type, so we can assume; // that it's valid or we would have diagnosed the error earlier.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGHLSLRuntime.cpp:126,error,error,126,interpreter/llvm-project/clang/lib/CodeGen/CGHLSLRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGHLSLRuntime.cpp,1,['error'],['error']
Availability,"// At this point we know that Inst is a vector to scalar transition.; // Try to move it down the def-use chain, until:; // - We can combine the transition with its single use; // => we got rid of the transition.; // - We escape the current basic block; // => we would need to check that we are moving it at a cheaper place and; // we do not do that for now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:88,down,down,88,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['down'],['down']
Availability,// At this point we need AT to perform the expansions and we exit if it is; // not available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp:83,avail,available,83,interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,1,['avail'],['available']
Availability,// At this point we need AT to perform the expansions; // and we exit if it is not available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp:83,avail,available,83,interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,2,['avail'],['available']
Availability,"// At this point, every statement in the translation unit has been analyzed by; // the CloneDetector. The only thing left to do is to report the found clones.; // Let the CloneDetector create a list of clones from all the analyzed; // statements. We don't filter for matching variable patterns at this point; // because reportSuspiciousClones() wants to search them for errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CloneChecker.cpp:370,error,errors,370,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CloneChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CloneChecker.cpp,1,['error'],['errors']
Availability,"// At this point, ignored errors can no longer be upgraded.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/DiagnosticIDs.cpp:26,error,errors,26,interpreter/llvm-project/clang/lib/Basic/DiagnosticIDs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/DiagnosticIDs.cpp,1,['error'],['errors']
Availability,"// At this point, the value is available in v0 via the same subreg; // we used for Def.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp:31,avail,available,31,interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,1,['avail'],['available']
Availability,"// At this point, we know that all the operands of ToBePromoted but Def; // can be statically promoted.; // For Def, we need to use its parameter in ToBePromoted:; // b = ToBePromoted ty1 a; // Def = Transition ty1 b to ty2; // Move the transition down.; // 1. Replace all uses of the promoted operation by the transition.; // = ... b => = ... Def.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:248,down,down,248,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['down'],['down']
Availability,"// At this point, we know that if we shift the LHS up by LHSShift and the; // RHS down by RHSShift, we can emit a regular division with a final scaling; // factor of Scale.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:82,down,down,82,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,1,['down'],['down']
Availability,"// At this point, we need to repair a defintion of a terminator.; // Technically we need to fix the def of MI on all outgoing; // edges of MI to keep the repairing local. In other words, we; // will create several definitions of the same register. This; // does not work for SSA unless that definition is a physical; // register.; // However, there are other cases where we can get away with; // that while still keeping the repairing local.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/RegBankSelect.cpp:29,repair,repair,29,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/RegBankSelect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/RegBankSelect.cpp,3,['repair'],"['repair', 'repairing']"
Availability,"// At this point, we've successfully parsed a class-specifier in 'definition'; // form (e.g. ""struct foo { int x; }"". While we could just return here, we're; // going to look at what comes after it to improve error recovery. If an; // impossible token occurs next, we assume that the programmer forgot a ; at; // the end of the declaration and recover that way.; //; // Also enforce C++ [temp]p3:; // In a template-declaration which defines a class, no declarator; // is permitted.; //; // After a type-specifier, we don't expect a semicolon. This only happens in; // C, since definitions are not permitted in this context in C++.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp:209,error,error,209,interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp,3,"['error', 'recover']","['error', 'recover', 'recovery']"
Availability,"// Attach/create additional branch for error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:39,error,error,39,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['error'],['error']
Availability,"// Attach/create additional branches for asymmetric error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:52,error,error,52,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,2,['error'],['error']
Availability,// Attempt a second lookup. Here we expect an error as the code and symbols; // should have been removed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/OrcV2CBindingsRemovableCode/OrcV2CBindingsRemovableCode.c:46,error,error,46,interpreter/llvm-project/llvm/examples/OrcV2Examples/OrcV2CBindingsRemovableCode/OrcV2CBindingsRemovableCode.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/OrcV2CBindingsRemovableCode/OrcV2CBindingsRemovableCode.c,1,['error'],['error']
Availability,"// Attempt to avoid passing indirect results using byval when possible. This; // is important for good codegen.; //; // We do this by coercing the value into a scalar type which the backend can; // handle naturally (i.e., without using byval).; //; // For simplicity, we currently only do this when we have exhausted all of the; // free integer registers. Doing this when there are free integer registers; // would require more care, as we would have to ensure that the coerced value; // did not claim the unused register. That would require either reording the; // arguments to the function (so that any subsequent inreg values came first),; // or only doing this optimization when there were no following arguments that; // might be inreg.; //; // We currently expect it to be rare (particularly in well written code) for; // arguments to be passed on the stack when there are still free integer; // registers available (this would typically imply large structs being passed; // by value), so this seems like a fair tradeoff for now.; //; // We can revisit this if the backend grows support for 'onstack' parameter; // attributes. See PR12193.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp:912,avail,available,912,interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,1,['avail'],['available']
Availability,"// Attempt to break anti-dependence edges on the critical path. Walk the; // instructions from the bottom up, tracking information about liveness; // as we go to help determine which registers are available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp:197,avail,available,197,interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,1,['avail'],['available']
Availability,"// Attempt to break anti-dependence edges. Walk the instructions; // from the bottom up, tracking information about liveness as we go; // to help determine which registers are available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp:176,avail,available,176,interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp,1,['avail'],['available']
Availability,"// Attempt to canonicalize SGT/UGT -> SGE/UGE compares with constant which; // reduces the number of EFLAGs bit reads (the GE conditions don't read ZF),; // this may translate to less uops depending on uarch implementation. The; // equivalent for SLE/ULE -> SLT/ULT isn't likely to happen as we already; // canonicalize to that CondCode.; // NOTE: Only do this if incrementing the constant doesn't increase the bit; // encoding size - so it must either already be a i8 or i32 immediate, or it; // shrinks down to that. We don't do this for any i64's to avoid additional; // constant materializations.; // TODO: Can we move this to TranslateX86CC to handle jumps/branches too?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:505,down,down,505,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['down'],['down']
Availability,"// Attempt to combine (select M, (sub 0, X), X) -> (sub (xor X, M), M).; // Limit this to cases of non-constant masks that createShuffleMaskFromVSELECT; // can't catch, plus vXi8 cases where we'd likely end up with BLENDV.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:112,mask,masks,112,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['masks']
Availability,// Attempt to constant fold all of the constant source ops.; // Returns true if the entire shuffle is folded to a constant.; // TODO: Extend this to merge multiple constant Ops and update the mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:192,mask,mask,192,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,// Attempt to convert a (vXi1 bitcast(iX Cond)) selection mask before it might; // get split by legalization.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:58,mask,mask,58,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,// Attempt to create a shuffle mask from a VSELECT/BLENDV condition mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:31,mask,mask,31,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,2,['mask'],['mask']
Availability,"// Attempt to create a valid clear mask, splitting the mask into; // sub elements and checking to see if each is; // all zeros or all ones - suitable for shuffle masking.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:35,mask,mask,35,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,3,['mask'],"['mask', 'masking']"
Availability,// Attempt to decode as a per-byte mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:35,mask,mask,35,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,// Attempt to decode ops that could be represented as a shuffle mask.; // The decoded shuffle mask may contain a different number of elements to the; // destination value type.; // TODO: Merge into getTargetShuffleInputs(),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:64,mask,mask,64,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,2,['mask'],['mask']
Availability,"// Attempt to detect the file type using file magic. We have a slight bias; // towards the binary format, and we do this by making sure that the first 4; // bytes of the binary file is some combination of the following byte; // patterns: (observe the code loading them assumes they're little endian); //; // 0x01 0x00 0x00 0x00 - version 1, ""naive"" format; // 0x01 0x00 0x01 0x00 - version 1, ""flight data recorder"" format; // 0x02 0x00 0x01 0x00 - version 2, ""flight data recorder"" format; //; // YAML files don't typically have those first four bytes as valid text so we; // try loading assuming YAML if we don't find these bytes.; //; // Only if we can't load either the binary or the YAML format will we yield an; // error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/XRay/Trace.cpp:721,error,error,721,interpreter/llvm-project/llvm/lib/XRay/Trace.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/XRay/Trace.cpp,1,['error'],['error']
Availability,// Attempt to extract constant byte masks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:36,mask,masks,36,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['masks']
Availability,// Attempt to extract+simplify a (constant pool load) shuffle mask.; // TODO: Support other types from getTargetShuffleMaskIndices?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:62,mask,mask,62,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,"// Attempt to find Src vector which contains our SDValue, if so, add our; // perm mask to the existing one. If we are unable to find a match for the; // first SDValue, attempt to find match for the second.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:82,mask,mask,82,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,1,['mask'],['mask']
Availability,"// Attempt to find the closest/best fuzzy match. Usually an error happens; // because some string in the output didn't exactly match. In these cases, we; // would like to show the user a best guess at what ""should have"" matched, to; // save them having to actually check the input manually.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp:60,error,error,60,interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,1,['error'],['error']
Availability,// Attempt to generate the binary blend mask. If an input is zero then; // we can use any lane.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:40,mask,mask,40,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,// Attempt to generically simplify the variable shuffle mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:56,mask,mask,56,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,// Attempt to match a combined shuffle mask against supported unary immediate; // permute instructions.; // TODO: Investigate sharing more of this with shuffle lowering.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:39,mask,mask,39,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,// Attempt to match a combined shuffle mask against supported unary shuffle; // instructions.; // TODO: Investigate sharing more of this with shuffle lowering.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:39,mask,mask,39,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,// Attempt to match a combined unary shuffle mask against supported binary; // shuffle instructions.; // TODO: Investigate sharing more of this with shuffle lowering.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:45,mask,mask,45,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,// Attempt to match against the candidate repeated sub-lane masks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:60,mask,masks,60,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['masks']
Availability,// Attempt to match first source from mask before insertion point.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:38,mask,mask,38,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,// Attempt to match the mask against known shuffle patterns.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:24,mask,mask,24,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,// Attempt to match the target mask against the unpack lo/hi mask patterns.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:31,mask,mask,31,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,2,['mask'],['mask']
Availability,// Attempt to narrow/widen shuffle mask until it matches the target number of; // elements.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:35,mask,mask,35,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,// Attempt to narrow/widen the shuffle mask to the correct size.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:39,mask,mask,39,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,// Attempt to peek through inputs and adjust mask when we extract from an; // upper subvector.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:45,mask,mask,45,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,// Attempt to promote any comparison mask ops before moving the; // SIGN_EXTEND_INREG in the way.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:37,mask,mask,37,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,// Attempt to recover by skipping the invalid 'typename',MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/Parser.cpp:14,recover,recover,14,interpreter/llvm-project/clang/lib/Parse/Parser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/Parser.cpp,1,['recover'],['recover']
Availability,"// Attempt to salvage back through as many instructions as possible. Bail if; // a non-instruction is seen, such as a constant expression or global; // variable. FIXME: Further work could recover those too.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:188,recover,recover,188,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['recover'],['recover']
Availability,"// Attempt to sort the inputs my ascending mask values to make simpler input; // shuffles and push complex shuffles down to the uses. We sort on the first; // of the two input shuffle orders, to try and get at least one input into a; // nice order.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp:43,mask,mask,43,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,2,"['down', 'mask']","['down', 'mask']"
Availability,"// Attempts to match Name as a register (either using the default name or; // alternative ABI names), setting RegNo to the matching register. Upon; // failure, returns a non-valid MCRegister. If IsRVE, then registers x16-x31; // will be rejected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/AsmParser/RISCVAsmParser.cpp:151,failure,failure,151,interpreter/llvm-project/llvm/lib/Target/RISCV/AsmParser/RISCVAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/AsmParser/RISCVAsmParser.cpp,1,['failure'],['failure']
Availability,"// Attempts to match Name as a register (either using the default name or; // alternative ABI names), setting RegNo to the matching register. Upon; // failure, returns true and sets RegNo to 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/CSKY/AsmParser/CSKYAsmParser.cpp:151,failure,failure,151,interpreter/llvm-project/llvm/lib/Target/CSKY/AsmParser/CSKYAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/CSKY/AsmParser/CSKYAsmParser.cpp,2,['failure'],['failure']
Availability,"// Attribute and form pairs must either both be non-zero, in which case; // they are added to the abbreviation declaration, or both be zero to; // terminate the abbrevation declaration. In this case only one was; // zero which is an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFAbbreviationDeclaration.cpp:233,error,error,233,interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFAbbreviationDeclaration.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFAbbreviationDeclaration.cpp,1,['error'],['error']
Availability,"// AttributesImpl is uniqued, these should not be available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AttributeImpl.h:50,avail,available,50,interpreter/llvm-project/llvm/lib/IR/AttributeImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AttributeImpl.h,1,['avail'],['available']
Availability,"// AttributesSetImpt is uniqued, these should not be available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AttributeImpl.h:53,avail,available,53,interpreter/llvm-project/llvm/lib/IR/AttributeImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AttributeImpl.h,1,['avail'],['available']
Availability,"// AttributesSetNode is uniqued, these should not be available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AttributeImpl.h:53,avail,available,53,interpreter/llvm-project/llvm/lib/IR/AttributeImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AttributeImpl.h,1,['avail'],['available']
Availability,"// Author: Enrico Guiraud, Danilo Piparo CERN 02/2018; /*************************************************************************; * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // This header contains helper free functions that slim down RDataFrame's programming model",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDFHelpers.hxx:469,down,down,469,tree/dataframe/inc/ROOT/RDFHelpers.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDFHelpers.hxx,1,['down'],['down']
Availability,"// Author: Stefan Schmitt; // DESY, 10/08/11; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, bug fix in GetNonemptyNode() and non-const access of tree; // Version 17.7, bug fix in ExtractHistogram; // Version 17.6, bug fix to avoid possible crash in method; // CreateHistogramOfMigrations(). Bug fix with NaN in GetGlobalBinNumber(); // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, bug fix with error handling; // Version 17.3, bug fix with underflow/overflow bins; // Version 17.2, new option isPeriodic; // Version 17.1, in parallel to TUnfold; // Version 17.0, initial version, numbered in parallel to TUnfold",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinning.h:452,error,error,452,hist/unfold/inc/TUnfoldBinning.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinning.h,1,['error'],['error']
Availability,"// Author: Stefan Schmitt; // DESY, 10/08/11; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, bug fix in GetNonemptyNode() and non-const access of tree; // Version 17.7, bug fix in ExtractHistogram; // Version 17.6, bug fix to avoid possible crash in method; // CreateHistogramOfMigrations(). Bug fix with NaN in GetGlobalBinNumber(); // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, bug fix with error handling; // Version 17.3, bug fix with underflow/overflow bins; // Version 17.2, with XML support, bug fix with bin map creation,; // isPeriodic option for neighbour bins; // Version 17.1, in parallel to changes in TUnfold; // Version 17.0, initial version, numbered in parallel to TUnfold; /** \class TUnfoldBinning; Binning schemes for use with the unfolding algorithm TUnfoldDensity. Binning schemes are used to map analysis bins on a single histogram; axis and back. The analysis bins may include unconnected bins (e.g; nuisances for background normalisation) or various multidimensional; histograms (signal bins, differential background normalisation bins, etc).; <br/>; If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. <h3>Functionality</h3>. The TUnfoldBinning objects are connected by a tree-like structure.; The structure does not hold any data, but is only responsible for; arranging the analysis bins in the proper order.; Each node of the tree is responsible for a group of bins. That group; may consist of; <ul>; <li> several unconnected bins, each with a dedicated name.</li>; <li> bins organized in a multidimensional distribution, defined by a; set of axes. The axes are defined by a number of bins N and by (N+1); bin borders. In addition to the N bins inside there may be an underflow and an; overflow bin</li>; </ul>; Each bin has a ""global"" bin numb",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:452,error,error,452,hist/unfold/src/TUnfoldBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx,1,['error'],['error']
Availability,"// Author: Stefan Schmitt; // DESY, 13/10/08; // Version 17.9, add new methods GetDF(), GetSURE(), ScanSURE(), GetSqrtEvEmatrix(); //; // History:; // Version 17.8, add new method GetDXDY() for histograms; // Version 17.7, change finite() -> TMath::Finite(); // Version 17.6, updated doxygen-style comments, add one argument for scanLCurve; // Version 17.5, fix memory leak with fVyyInv, bugs in GetInputInverseEmatrix(), GetInput(), bug in MultiplyMSparseMSparseTranspVector; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, bug fix with GetProbabilityMatrix; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, option to specify an error matrix with SetInput(), new ScanRho() method; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, fix bug with error matrix in case kEConstraintArea is used; // Version 16.0, fix calculation of global correlations, improved error messages; // Version 15, simplified L-curve scan, new tau definition, new error calc., area preservation; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes and small bug fix; // Version 12, report singular matrices; // Version 11, reduce the amount of printout; // Version 10, more correct definition of the L curve, update references; // Version 9, faster matrix inversion and skip edge points for L-curve scan; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, replace class XY by std::pair; // Version 5, replace run-time dynamic arrays by new and delete[]; // Version 4, fix new bug from V3 with initial regularisation condition; // Version 3, fix bug with initial regularisation condition; // Version 2, with improved ScanLcurve() algorithm; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:743,error,error,743,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,2,['error'],['error']
Availability,"// Author: Stefan Schmitt; // DESY, 13/10/08; // Version 17.9, add new methods GetDF(), GetSURE(), ScanSURE(), GetSqrtEvEmatrix(); //; // History:; // Version 17.8, add new method GetDXDY() for histograms; // Version 17.7, updates in the TUnfold implementation; // Version 17.6, updated doxygen-style comments, add one argument for scanLCurve; // Version 17.5, fix memory leak and other bugs; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, in parallel to changes in TUnfoldBinning; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, error matrix with SetInput, store fL not fLSquared; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, in parallel to bug-fix in TUnfold.C; // Version 16.0, some cleanup, more getter functions, query version number; // Version 15, simplified L-curve scan, new tau definition, new eror calc.; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes; // Version 12, with support for preconditioned matrix inversion; // Version 11, regularisation methods have return values; // Version 10, with bug-fix in TUnfold.cxx; // Version 9, implements method for optimized inversion of sparse matrix; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, completely remove definition of class XY; // Version 5, move definition of class XY from TUnfold.C to this file; // Version 4, with bug-fix in TUnfold.C; // Version 3, with bug-fix in TUnfold.C; // Version 2, with changed ScanLcurve() arguments; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h:645,error,error,645,hist/unfold/inc/TUnfold.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h,1,['error'],['error']
Availability,"// Author: Stefan Schmitt; // DESY, 23/01/09; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, parallel to changes in TUnfold; // Version 17.7, bug fix in GetBackground(); // Version 17.6, with updated doxygen comments; // Version 17.5, bug fixes in TUnfold fix problem with GetEmatrixSysUncorr; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, add methods to find back systematic and background sources; // Version 17.1, bug fix with background uncertainty; // Version 17.0, possibility to specify an error matrix with SetInput; // Version 16.2, bug-fix with the calculation of background errors; // Version 16.1, parallel to changes in TUnfold; // Version 16.0, parallel to changes in TUnfold; // Version 15, fix bugs with uncorr. uncertainties, add backgnd subtraction; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, support for systematic errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:622,error,error,622,hist/unfold/inc/TUnfoldSys.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h,3,['error'],"['error', 'errors']"
Availability,"// Author: Stefan Schmitt; // DESY, 23/01/09; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, parallel to changes in TUnfold; // Version 17.7, bug fix in GetBackground(); // Version 17.6, with updated doxygen comments; // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, add methods to find back systematic and background sources; // Version 17.1, bug fix with background uncertainty; // Version 17.0, possibility to specify an error matrix with SetInput; // Version 16.1, parallel to changes in TUnfold; // Version 16.0, parallel to changes in TUnfold; // Version 15, fix bugs with uncorr. uncertainties, add backgnd subtraction; // Version 14, remove some print-out, do not add unused sys.errors; // Version 13, support for systematic errors; /** \class TUnfoldSys; \ingroup Unfold; An algorithm to unfold distributions from detector to truth level,; with background subtraction and propagation of systematic uncertainties. TUnfoldSys is used to decompose a measurement y into several sources x,; given the measurement uncertainties, background b and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfoldSys has an adjustable regularisation term and also supports an; optional constraint on the total number of events.; Background sources can be specified, with a normalisation constant and; normalisation uncertainty. In addition, variants of the response; matrix may be specified, these are taken to determine systematic; uncertainties. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead of TUnfoldSys. TUnfoldDensity adds; features to TUnfoldSys, related to possible complex multidimensional; arrangements of bins. For inn",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:598,error,error,598,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,3,['error'],"['error', 'errors']"
Availability,"// Auxilliary structures for pinging; // The client request",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:29,ping,pinging,29,proof/proof/src/TProofMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx,1,['ping'],['pinging']
Availability,// Available and in AvailableQueue,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:3,Avail,Available,3,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,2,['Avail'],"['Available', 'AvailableQueue']"
Availability,"// Available capacity within the chunks",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveChunkManager.h:3,Avail,Available,3,graf3d/eve/inc/TEveChunkManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveChunkManager.h,2,['Avail'],['Available']
Availability,"// Available externally is really just a ""declaration with a body"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Internalize.cpp:3,Avail,Available,3,interpreter/llvm-project/llvm/lib/Transforms/IPO/Internalize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Internalize.cpp,1,['Avail'],['Available']
Availability,// Available for tailcall (not callee-saved GPRs).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86RegisterInfo.cpp:3,Avail,Available,3,interpreter/llvm-project/llvm/lib/Target/X86/X86RegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86RegisterInfo.cpp,1,['Avail'],['Available']
Availability,"// Available on all platforms; // Neither TTHREAD_TLS_DECL_IMPL and TTHREAD_TLS_INIT; // do not delete the object at the end of the process.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h:3,Avail,Available,3,core/foundation/inc/ThreadLocalStorage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h,1,['Avail'],['Available']
Availability,// Available registers for BS.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp:3,Avail,Available,3,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp,1,['Avail'],['Available']
Availability,// Available registers for CG.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp:3,Avail,Available,3,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp,1,['Avail'],['Available']
Availability,// Available registers for CP.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp:3,Avail,Available,3,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp,1,['Avail'],['Available']
Availability,// Available registers for IG.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp:3,Avail,Available,3,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp,1,['Avail'],['Available']
Availability,// Available registers for RIE.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp:3,Avail,Available,3,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp,1,['Avail'],['Available']
