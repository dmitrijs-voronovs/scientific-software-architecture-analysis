quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Testability,yunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156244/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_node](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156244/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_node/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156244/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_proxy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156244/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_proxy/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_ranges](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156244/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_ranges/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_common](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156244/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_common/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_dist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156244/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_dist/); - [projectroot.bindings.pyroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11432#issuecomment-1266661576:3470,test,testReport,3470,https://root.cern,https://github.com/root-project/root/pull/11432#issuecomment-1266661576,1,['test'],['testReport']
Testability,yunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156262/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_node](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156262/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_node/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156262/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_proxy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156262/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_proxy/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_ranges](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156262/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_ranges/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_dist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156262/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_dist/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_common](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156262/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_common/); - [projectroot.bindings.pyroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11489#issuecomment-1266710154:1803,test,testReport,1803,https://root.cern,https://github.com/root-project/root/pull/11489#issuecomment-1266710154,1,['test'],['testReport']
Testability,yunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156263/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_node](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156263/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_node/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156263/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_proxy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156263/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_proxy/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_ranges](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156263/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_ranges/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_common](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156263/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_common/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_dist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156263/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_dist/); - [projectroot.bindings.pyroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11489#issuecomment-1266818032:1793,test,testReport,1793,https://root.cern,https://github.com/root-project/root/pull/11489#issuecomment-1266818032,1,['test'],['testReport']
Testability,yunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156318/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156318/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_node](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156318/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_node/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_proxy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156318/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_proxy/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_ranges](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156318/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_ranges/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_common](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156318/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_common/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_dist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156318/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_dist/); - [projectroot.bindings.pyroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11443#issuecomment-1267001496:1983,test,testReport,1983,https://root.cern,https://github.com/root-project/root/pull/11443#issuecomment-1267001496,1,['test'],['testReport']
Testability,yunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167025/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_node](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167025/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_node/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167025/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_proxy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167025/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_proxy/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_ranges](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167025/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_ranges/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_common](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167025/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_common/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_dist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167025/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_dist/); - [projectroot.bindings.pyroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11208#issuecomment-1416904063:1799,test,testReport,1799,https://root.cern,https://github.com/root-project/root/pull/11208#issuecomment-1416904063,1,['test'],['testReport']
Testability,yunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167351/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_node](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167351/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_node/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167351/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_proxy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167351/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_proxy/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_ranges](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167351/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_ranges/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_common](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167351/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_common/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_dist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167351/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_dist/); - [projectroot.bindings.pyroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11208#issuecomment-1421054711:1799,test,testReport,1799,https://root.cern,https://github.com/root-project/root/pull/11208#issuecomment-1421054711,1,['test'],['testReport']
Testability,yunittests_distrdf_unit_test_friendinfo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/122711/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/122711/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_node](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/122711/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_node/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_proxy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/122711/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_proxy/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_common](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/122711/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_common/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_dist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/122711/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_dist/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_root_module](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/122711/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_root_module/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8567#issuecomment-880838219:1850,test,test,1850,https://root.cern,https://github.com/root-project/root/pull/8567#issuecomment-880838219,1,['test'],['test']
Testability,yunittests_distrdf_unit_test_friendinfo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/124957/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/124957/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_node](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/124957/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_node/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_proxy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/124957/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_proxy/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_common](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/124957/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_common/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_dist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/124957/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_dist/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/124957/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_root_module](https://lcgapp-services.cern.ch/root-jenk,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8884#issuecomment-903607387:1846,test,test,1846,https://root.cern,https://github.com/root-project/root/pull/8884#issuecomment-903607387,1,['test'],['test']
Testability,yunittests_distrdf_unit_test_friendinfo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186029/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186029/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_node](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186029/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_node/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_proxy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186029/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_proxy/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_ranges](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186029/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_ranges/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_common](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186029/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_common/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_dist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186029/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_dist/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_graph_caching](https://lcgap,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13745#issuecomment-1739786763:1572,test,test,1572,https://root.cern,https://github.com/root-project/root/pull/13745#issuecomment-1739786763,1,['test'],['test']
Testability,yunittests_distrdf_unit_test_friendinfo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186035/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186035/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_node](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186035/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_node/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_proxy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186035/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_proxy/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_ranges](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186035/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_ranges/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_common](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186035/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_common/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_dist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186035/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_dist/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_graph_caching](https://lcgap,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13736#issuecomment-1739845334:1572,test,test,1572,https://root.cern,https://github.com/root-project/root/pull/13736#issuecomment-1739845334,1,['test'],['test']
Testability,yunittests_distrdf_unit_test_friendinfo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186041/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186041/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_node](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186041/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_node/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_proxy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186041/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_proxy/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_ranges](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186041/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_ranges/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_common](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186041/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_common/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_dist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186041/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_dist/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_graph_caching](https://lcgap,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13737#issuecomment-1740083138:1572,test,test,1572,https://root.cern,https://github.com/root-project/root/pull/13737#issuecomment-1740083138,1,['test'],['test']
Testability,yunittests_distrdf_unit_test_friendinfo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186065/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186065/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_node](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186065/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_node/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_proxy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186065/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_proxy/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_ranges](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186065/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_ranges/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_common](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186065/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_common/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_dist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186065/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_dist/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_graph_caching](https://lcgap,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13751#issuecomment-1740248107:1572,test,test,1572,https://root.cern,https://github.com/root-project/root/pull/13751#issuecomment-1740248107,1,['test'],['test']
Testability,yunittests_distrdf_unit_test_friendinfo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186107/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186107/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_node](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186107/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_node/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_proxy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186107/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_proxy/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_ranges](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186107/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_ranges/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_common](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186107/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_common/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_dist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186107/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_dist/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_graph_caching](https://lcgap,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13753#issuecomment-1740777537:1572,test,test,1572,https://root.cern,https://github.com/root-project/root/pull/13753#issuecomment-1740777537,1,['test'],['test']
Testability,yunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162825/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.test.test_stressentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162825/testReport/projectroot/test/test_stressentrylist/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooDataSet](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162825/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooDataSet/); - [projectroot.test.test_stressentrylist_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162825/testReport/projectroot/test/test_stressentrylist_interpreted/); - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treetreeplayertestUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162825/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treetreeplayertestUnit/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162825/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.python.ttree.roottest_python_ttree_ttree](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162825/testReport/projectroot.roottest.python/ttree/roottest_python_ttree_ttree/); - [projectroot.roottest.root.io.TFile.roottest_root_io_TFile_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162825/testReport/projectroot.roottest.root.io/TFile/roottest_root_io_TFile_make/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_execmisstop](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162825/testRepor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11908#issuecomment-1358518089:1333,test,testReport,1333,https://root.cern,https://github.com/root-project/root/pull/11908#issuecomment-1358518089,1,['test'],['testReport']
Testability,yunittests_distrdf_unit_test_node](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/137960/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_node/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/137960/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_proxy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/137960/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_proxy/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_friendinfo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/137960/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_callable_generator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/137960/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_callable_generator/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/137960/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_dist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/137960/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_dist/); - [projectroot.roottest.python.distrdf.common.roottest_python_distrdf_common_common_test_rungraphs](https://lcgapp-services.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9941#issuecomment-1046993608:1569,test,test,1569,https://root.cern,https://github.com/root-project/root/pull/9941#issuecomment-1046993608,1,['test'],['test']
Testability,yunittests_distrdf_unit_test_node](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167350/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_node/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167350/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167350/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_ranges](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167350/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_ranges/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_proxy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167350/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_proxy/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_common](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167350/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_common/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_dist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167350/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_dist/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_rdf_filter_pyz](https://lcgapp-services.cern.ch/root-je,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11208#issuecomment-1421081238:3209,test,test,3209,https://root.cern,https://github.com/root-project/root/pull/11208#issuecomment-1421081238,1,['test'],['test']
Testability,yunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86059/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_root_module](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86059/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_root_module/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86059/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_contains](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86059/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_contains/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_comparisonops](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86059/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_comparisonops/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tclass_dynamiccast](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86059/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tclass_dynamiccast/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tfile_attrsyntax_get_writeobject_open](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86059/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tfile_attrsyntax_get_writeobject_open/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tfile_constructor](https://,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5833#issuecomment-641293165:1953,test,test,1953,https://root.cern,https://github.com/root-project/root/pull/5833#issuecomment-641293165,1,['test'],['test']
Testability,yunittests_pyroot_pyz_ttree_asmatrix](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86206/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_asmatrix/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_th1_operators](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86206/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_th1_operators/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tgraph_getters](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86206/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tgraph_getters/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_len](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86206/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tcollection_len/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_listmethods](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86206/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tcollection_listmethods/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_operators](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86206/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tcollection_operators/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_iterable](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86206/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tcollection_iterable/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTH1FindFirstBinAbove](https://lcgapp-services.cern.ch/root-jenkins/job/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5582#issuecomment-641847251:1430,test,test,1430,https://root.cern,https://github.com/root-project/root/pull/5582#issuecomment-641847251,1,['test'],['test']
Testability,yunittests_pyroot_pyz_ttree_branch_attr/); - [projectroot.bindings.pyroot_experimental.PyROOT.test.pyunittests_pyroot_pyz_ttree_setbranchaddress](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.bindings.pyroot_experimental.PyROOT/test/pyunittests_pyroot_pyz_ttree_setbranchaddress/); - [projectroot.runtutorials.tutorial_pyroot_DynamicSlice_py_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot/runtutorials/tutorial_pyroot_DynamicSlice_py_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1Prepa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3410#issuecomment-462308840:1973,test,testReport,1973,https://root.cern,https://github.com/root-project/root/pull/3410#issuecomment-462308840,1,['test'],['testReport']
Testability,yunittests_pyroot_root_module/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_comparisonops](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91499/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_comparisonops/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_th1_operators](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91499/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_th1_operators/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tvector3_len](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91499/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tvector3_len/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tstring_len](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91499/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tstring_len/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tstring_comparisonops](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91499/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tstring_comparisonops/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_conv_tstring](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91499/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_conv_tstring/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobjstring_len](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91499/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobjstring_len/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tvector,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6038#issuecomment-669079294:1644,test,testReport,1644,https://root.cern,https://github.com/root-project/root/pull/6038#issuecomment-669079294,1,['test'],['testReport']
Testability,yunittests_pyroot_ttree_asmatrix/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30144/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_alias](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30144/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_alias/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30144/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_cache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30144/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_cache/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30144/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30144/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30144/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30144/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_ranges](ht,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2193#issuecomment-397236796:3018,test,test,3018,https://root.cern,https://github.com/root-project/root/pull/2193#issuecomment-397236796,1,['test'],['test']
Testability,yunittests_pyroot_ttree_asmatrix/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30198/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_alias](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30198/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_alias/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30198/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_cache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30198/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_cache/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30198/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30198/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30198/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30198/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2193#issuecomment-397318209:3018,test,test,3018,https://root.cern,https://github.com/root-project/root/pull/2193#issuecomment-397318209,1,['test'],['test']
Testability,yz_pretty_printing/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_branch_attr](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117262/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_branch_attr/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_branch](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117262/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_branch/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_array_interface](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117262/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_array_interface/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_setbranchaddress](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117262/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_setbranchaddress/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_asmatrix](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117262/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_asmatrix/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117262/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_asnumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117262/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8124#issuecomment-834727273:1795,test,testReport,1795,https://root.cern,https://github.com/root-project/root/pull/8124#issuecomment-834727273,1,['test'],['testReport']
Testability,yz_pretty_printing/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_branch_attr](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117263/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_branch_attr/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_array_interface](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117263/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_array_interface/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_branch](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117263/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_branch/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_setbranchaddress](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117263/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_setbranchaddress/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_asmatrix](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117263/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_asmatrix/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117263/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_asnumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117263/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8124#issuecomment-834722654:1796,test,testReport,1796,https://root.cern,https://github.com/root-project/root/pull/8124#issuecomment-834722654,1,['test'],['testReport']
Testability,yz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153538/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_stl_vector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153538/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_stl_vector/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_comparisonops](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153538/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_comparisonops/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tclass_dynamiccast](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153538/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tclass_dynamiccast/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_contains](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153538/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_contains/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcontext_contextmanager](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153538/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tcontext_contextmanager/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tdirectory_attrsyntax](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153538/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tdirectory_attrsyntax/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tdirectoryfile_attrsyntax_get](https://lcgapp-services.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11306#issuecomment-1235391286:1804,test,test,1804,https://root.cern,https://github.com/root-project/root/pull/11306#issuecomment-1235391286,1,['test'],['test']
Testability,yz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93114/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_array_interface](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93114/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_array_interface/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_contains](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93114/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_contains/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_comparisonops](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93114/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_comparisonops/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tclass_dynamiccast](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93114/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tclass_dynamiccast/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tdirectory_attrsyntax](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93114/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tdirectory_attrsyntax/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tdirectoryfile_attrsyntax_get](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93114/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tdirectoryfile_attrsyntax_get/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tfile_attrsyntax_get_writeobject_open](ht,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6105#issuecomment-675753656:1701,test,test,1701,https://root.cern,https://github.com/root-project/root/pull/6105#issuecomment-675753656,1,['test'],['test']
Testability,yz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97354/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_contains](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97354/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_contains/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_array_interface](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97354/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_array_interface/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_comparisonops](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97354/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_comparisonops/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tclass_dynamiccast](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97354/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tclass_dynamiccast/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tdirectory_attrsyntax](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97354/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tdirectory_attrsyntax/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tdirectoryfile_attrsyntax_get](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97354/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tdirectoryfile_attrsyntax_get/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tfile_attrsyntax_get_writeobject_open](ht,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6445#issuecomment-700846727:1552,test,test,1552,https://root.cern,https://github.com/root-project/root/pull/6445#issuecomment-700846727,1,['test'],['test']
Testability,yz_rtensor/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84325/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84325/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84325/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84325/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84325/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84325/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84325/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testProxiesAndCategories](https://lcg,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-636157674:1689,test,testReport,1689,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-636157674,1,['test'],['testReport']
Testability,yz_rtensor/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84830/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84830/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84830/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84830/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84830/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84830/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84830/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/); - [projectroot.roottest.root.hist.roottest_root_hist_assertSparseToTHn](https://lcgapp-services.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-638163257:1884,test,testReport,1884,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-638163257,1,['test'],['testReport']
Testability,yz_tobject_comparisonops](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82851/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_tobject_comparisonops/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82851/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_tclass_dynamiccast](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82851/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_tclass_dynamiccast/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_tdirectory_attrsyntax](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82851/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_tdirectory_attrsyntax/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_tdirectoryfile_attrsyntax_get](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82851/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_tdirectoryfile_attrsyntax_get/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_array_interface](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82851/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_array_interface/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_tfile_attrsyntax_get_writeobject_open](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82851/testReport/projectroot.bindings.pyroot_e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5654#issuecomment-630950741:2097,test,testReport,2097,https://root.cern,https://github.com/root-project/root/pull/5654#issuecomment-630950741,1,['test'],['testReport']
Testability,yz_ttree_iterable/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_len](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107918/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tcollection_len/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_listmethods](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107918/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tcollection_listmethods/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_setbranchaddress](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107918/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_setbranchaddress/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_branch](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107918/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_branch/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tseqcollection_itemaccess](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107918/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tseqcollection_itemaccess/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tseqcollection_listmethods](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107918/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tseqcollection_listmethods/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_asmatrix](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107918/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_asmatrix/). And 45 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7290#issuecomment-786172737:2058,test,testReport,2058,https://root.cern,https://github.com/root-project/root/pull/7290#issuecomment-786172737,11,['test'],"['test', 'testReport']"
Testability,yz_ttree_setbranchaddress/); - [projectroot.runtutorials.tutorial_pyroot_DynamicSlice_py_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot/runtutorials/tutorial_pyroot_DynamicSlice_py_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3410#issuecomment-462308840:2267,test,testReport,2267,https://root.cern,https://github.com/root-project/root/pull/3410#issuecomment-462308840,1,['test'],['testReport']
Testability,"y{""aaaa"", ""bbbbbb""};; test_map_[test_array] = ""cccc"";; }; ; void Print(Option_t *option="""") const {; for(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8268:1403,test,test,1403,https://root.cern,https://github.com/root-project/root/issues/8268,1,['test'],['test']
Testability,z4_compr_level9/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simplex2_default_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97235/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simplex2_default_compr_level9/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simple_lzma_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97235/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lzma_compr_level9/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simplek_default_compr_deflevel](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97235/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simplek_default_compr_deflevel/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_NameCyclesRootmvPrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97235/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_NameCyclesRootmvPrepareInput/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simplek_lzma_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97235/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simplek_lzma_compr_level9/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_NameCyclesRootmv](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97235/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_NameCyclesRootmv/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97235/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/). And 159 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6445#issuecomment-700364472:2207,test,testReport,2207,https://root.cern,https://github.com/root-project/root/pull/6445#issuecomment-700364472,4,['test'],['testReport']
Testability,z_tdirectoryfile_attrsyntax_get/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tfile_attrsyntax_get_writeobject_open](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88895/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tfile_attrsyntax_get_writeobject_open/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tfile_constructor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88895/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tfile_constructor/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_branch_attr](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88895/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_branch_attr/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_iterable](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88895/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_iterable/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_setbranchaddress](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88895/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_setbranchaddress/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_branch](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88895/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_branch/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_asmatrix](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88895/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_asmatrix/). And 892 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5919#issuecomment-653244157:2294,test,testReport,2294,https://root.cern,https://github.com/root-project/root/pull/5919#issuecomment-653244157,11,['test'],"['test', 'testReport']"
Testability,z_tdirectoryfile_attrsyntax_get/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tfile_attrsyntax_get_writeobject_open](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91297/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tfile_attrsyntax_get_writeobject_open/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tfile_constructor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91297/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tfile_constructor/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_branch_attr](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91297/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_branch_attr/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_iterable](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91297/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_iterable/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_setbranchaddress](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91297/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_setbranchaddress/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_branch](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91297/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_branch/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_asmatrix](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91297/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_asmatrix/). And 893 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6113#issuecomment-668175004:2294,test,testReport,2294,https://root.cern,https://github.com/root-project/root/pull/6113#issuecomment-668175004,11,['test'],"['test', 'testReport']"
Testability,z_tobject_contains](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159034/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_contains/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcontext_contextmanager](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159034/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tcontext_contextmanager/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_stl_vector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159034/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_stl_vector/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_array_interface](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159034/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_array_interface/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_len](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159034/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tcollection_len/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_iterable](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159034/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tcollection_iterable/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_listmethods](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159034/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tcollection_listmethods/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_operators](https://lcgapp-services.cern.ch/root-j,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1312749734:1607,test,test,1607,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1312749734,1,['test'],['test']
Testability,z_tobject_contains](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159132/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_contains/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcontext_contextmanager](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159132/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tcontext_contextmanager/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_stl_vector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159132/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_stl_vector/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_array_interface](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159132/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_array_interface/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_len](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159132/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tcollection_len/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_iterable](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159132/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tcollection_iterable/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_listmethods](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159132/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tcollection_listmethods/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_operators](https://lcgapp-services.cern.ch/root-j,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1314431466:1275,test,test,1275,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1314431466,1,['test'],['test']
Testability,"zation/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:12522,Test,Test,12522,https://root.cern,https://github.com/root-project/root/issues/12429,1,['Test'],['Test']
Testability,zations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12018#issuecomment-1380358995:1652,test,testReport,1652,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995,4,['test'],['testReport']
Testability,zations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84350/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_ttree_asmatrix](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84350/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_ttree_asmatrix/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84350/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_asnumpy/); - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84350/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84350/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_cache/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84350/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.root.collection.roottest_root_collection_arrayViewBasic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84350/testReport/projectroot.roottest.root/collection/roottest_root_collection_arrayViewBasic/); - [projectroot.test.test_stresshistofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84350/testReport/projectroot/test/test_stresshistofit_interpreted/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-636285829:1729,test,testReport,1729,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-636285829,2,['test'],"['test', 'testReport']"
Testability,zations.test.pyunittests_pyroot_pyz_th1_operators](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191628/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_th1_operators/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tf_pycallables](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191628/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tf_pycallables/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_roofit_roodataset_numpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191628/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_roofit_roodataset_numpy/); - [projectroot.core.thread.test.gtest_core_thread_test_testTThreadedObject](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191628/testReport/projectroot.core.thread/test/gtest_core_thread_test_testTThreadedObject/); - [projectroot.core.thread.test.gtest_core_thread_test_corethreadtestUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191628/testReport/projectroot.core.thread/test/gtest_core_thread_test_corethreadtestUnit/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTFormula](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191628/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_testTFormula/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTF1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191628/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_testTF1/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTF2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191628/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_testTF2/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTF3](https://lcgapp-services.cern.ch/root-je,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1860934326:1407,test,test,1407,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1860934326,1,['test'],['test']
Testability,zations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.roottest.python.distrdf.roottest_python_distrdf_spark_test_friend_trees](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111870/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_friend_trees/); - [projectroot.roottest.python.distrdf.roottest_python_distrdf_spark_test_histo_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111870/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_histo_write/); - [projectroot.roottest.python.distrdf.roottest_python_distrdf_spark_test_include_headers](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111870/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_include_headers/); - [projectroot.roottest.python.distrdf.roottest_python_distrdf_spark_test_inv_mass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111870/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_inv_mass/); - [projectroot.roottest.python.distrdf.roottest_python_distrdf_spark_test_reducer_merge](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111870/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_buildranges](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111870/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_buildranges/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_callable_generator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111870/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_callable_generator/); - [projectroot.bindings.experimental.distrdf.test.pyunitte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-805744399:1780,test,testReport,1780,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-805744399,1,['test'],['testReport']
Testability,zations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.roottest.python.distrdf.roottest_python_distrdf_spark_test_friend_trees](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/114330/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_friend_trees/); - [projectroot.roottest.python.distrdf.roottest_python_distrdf_spark_test_histo_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/114330/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_histo_write/); - [projectroot.roottest.python.distrdf.roottest_python_distrdf_spark_test_include_headers](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/114330/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_include_headers/); - [projectroot.roottest.python.distrdf.roottest_python_distrdf_spark_test_inv_mass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/114330/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_inv_mass/); - [projectroot.roottest.python.distrdf.roottest_python_distrdf_spark_test_reducer_merge](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/114330/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_buildranges](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/114330/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_buildranges/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_callable_generator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/114330/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_callable_generator/); - [projectroot.bindings.experimental.distrdf.test.pyunitte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-819495788:1780,test,testReport,1780,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-819495788,1,['test'],['testReport']
Testability,zations/test/pyunittests_pyroot_pyz_rdataframe_asnumpy/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106219/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106219/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTFile/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDict2TFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106219/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDict2TFile/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclic03](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106219/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclic03/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclic01](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106219/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclic01/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclic00](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106219/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclic00/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_unsupportedClasses](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106219/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_unsupportedClasses/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_excludedAutoparseKeys](https://lcgapp-services.cern.ch/root-jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-775753702:2183,test,testReport,2183,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-775753702,1,['test'],['testReport']
Testability,zations/test/pyunittests_pyroot_pyz_rdataframe_asnumpy/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106221/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106221/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTFile/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDict2TFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106221/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDict2TFile/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclic03](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106221/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclic03/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclic01](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106221/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclic01/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclic00](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106221/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclic00/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_unsupportedClasses](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106221/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_unsupportedClasses/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_excludedAutoparseKeys](https://lcgapp-services.cern.ch/root-jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-775762985:2732,test,testReport,2732,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-775762985,1,['test'],['testReport']
Testability,ze' defined as a class template here but previously declared as a struct template [-Wmismatched-tags] ; - /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-centos7-clang39-opt/lib/cmake/VecCore/../../../include/Vc/common/simdize.h:920:1: warning: 'tuple_element' defined as a class template here but previously declared as a struct template [-Wmismatched-tags] . ### Failing tests:; - [projectroot.roottest.root.io.compression.roottest_root_io_compression_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46261/testReport/projectroot.roottest.root.io/compression/roottest_root_io_compression_make/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46261/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_make/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46261/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_hadd_autoload/); - [projectroot.roottest.root.io.newstl.roottest_root_io_newstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46261/testReport/projectroot.roottest.root.io/newstl/roottest_root_io_newstl_make/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46261/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46261/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46261/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastclo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2889#issuecomment-434706879:1983,test,testReport,1983,https://root.cern,https://github.com/root-project/root/pull/2889#issuecomment-434706879,1,['test'],['testReport']
Testability,ze() instead [-Wdeprecated-declarations] ; - [2020-04-06T10:49:47.421Z] /mnt/build/workspace/root-pullrequests-build/root/tree/treeplayer/test/treeprocmt/treeprocessormt.cxx:392:254: warning: ‘UInt_t ROOT::GetImplicitMTPoolSize()’ is deprecated: Please use ROOT::GetThreadPoolSize() instead [-Wdeprecated-declarations] ; - [2020-04-06T10:49:47.421Z] /mnt/build/workspace/root-pullrequests-build/root/tree/treeplayer/test/treeprocmt/treeprocessormt.cxx:392:254: warning: ‘UInt_t ROOT::GetImplicitMTPoolSize()’ is deprecated: Please use ROOT::GetThreadPoolSize() instead [-Wdeprecated-declarations] ; - [2020-04-06T10:49:47.421Z] /mnt/build/workspace/root-pullrequests-build/root/tree/treeplayer/test/treeprocmt/treeprocessormt.cxx:392:276: warning: ‘UInt_t ROOT::GetImplicitMTPoolSize()’ is deprecated: Please use ROOT::GetThreadPoolSize() instead [-Wdeprecated-declarations] ; - [2020-04-06T10:49:47.421Z] /mnt/build/workspace/root-pullrequests-build/root/tree/treeplayer/test/treeprocmt/treeprocessormt.cxx:395:170: warning: ‘UInt_t ROOT::GetImplicitMTPoolSize()’ is deprecated: Please use ROOT::GetThreadPoolSize() instead [-Wdeprecated-declarations] ; - [2020-04-06T10:49:47.421Z] /mnt/build/workspace/root-pullrequests-build/root/tree/treeplayer/test/treeprocmt/treeprocessormt.cxx:395:170: warning: ‘UInt_t ROOT::GetImplicitMTPoolSize()’ is deprecated: Please use ROOT::GetThreadPoolSize() instead [-Wdeprecated-declarations] ; - [2020-04-06T10:49:47.421Z] /mnt/build/workspace/root-pullrequests-build/root/tree/treeplayer/test/treeprocmt/treeprocessormt.cxx:395:192: warning: ‘UInt_t ROOT::GetImplicitMTPoolSize()’ is deprecated: Please use ROOT::GetThreadPoolSize() instead [-Wdeprecated-declarations] ; - [2020-04-06T10:49:47.421Z] /mnt/build/workspace/root-pullrequests-build/root/tree/treeplayer/test/treeprocmt/treeprocessormt.cxx:395:257: warning: ‘UInt_t ROOT::GetImplicitMTPoolSize()’ is deprecated: Please use ROOT::GetThreadPoolSize() instead [-Wdeprecated-declarations] . And 26 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5290#issuecomment-609728056:2376,test,test,2376,https://root.cern,https://github.com/root-project/root/pull/5290#issuecomment-609728056,3,['test'],['test']
Testability,"ze_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXMethodDecl*, const clang::FunctionProtoType*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] . And 65 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46194/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46194/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2396#issuecomment-434619561:3626,test,tests,3626,https://root.cern,https://github.com/root-project/root/pull/2396#issuecomment-434619561,3,['test'],"['testReport', 'tests']"
Testability,zed] . And 2 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154874/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154874/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154874/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154874/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154874/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154874/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154874/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](htt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1253768170:2808,test,testReport,2808,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1253768170,1,['test'],['testReport']
Testability,zeroentries](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148747/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_zeroentries/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148747/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_definepersample](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148747/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_definepersample/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_samplecallback](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148747/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_samplecallback/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_datasetspec](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148747/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_datasetspec/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148747/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.pyunittests_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148747/testReport/projectroot.tree.dataframe/test/pyunittests_dataframe_cache/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148747/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.treeplayer.test.gtest_tree_treepl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10854#issuecomment-1171047106:1341,test,test,1341,https://root.cern,https://github.com/root-project/root/pull/10854#issuecomment-1171047106,1,['test'],['test']
Testability,zer’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:30:7: error: conflicting declaration ‘struct RooFit::TestStatistics::RooAbsL’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:31:8: error: conflicting declaration ‘struct RooFit::TestStatistics::WrapperCalculationCleanFlags’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:37:46: error: ‘RooAbsL’ was not declared in this scope ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:37:53: error: template argument 1 is invalid ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:38:46: error: ‘WrapperCalculationCleanFlags’ was not declared in this scope ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:38:74: error: template argument 1 is invalid ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:44:11: error: ‘LikelihoodGradientMode’ has not been declared . And 2038 more. ### Warnings:; - [2023-01-06T12:13:58.100Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:3:32: warning: declaration of ‘G__RooFitCoreInit290’ shadows a global declaration [-Wshadow] ; - [2023-01-06T12:13:58.935Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:19968:46: warning: possible problem detected in invocation of delete o,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11981#issuecomment-1373555060:2005,Test,TestStatistics,2005,https://root.cern,https://github.com/root-project/root/pull/11981#issuecomment-1373555060,1,['Test'],['TestStatistics']
Testability,ze’ [-Wunused-parameter] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:220:50: warning: unused parameter ‘al’ [-Wunused-parameter] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:300:28: warning: unused parameter ‘ptr’ [-Wunused-parameter] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:300:50: warning: unused parameter ‘al’ [-Wunused-parameter] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:304:28: warning: unused parameter ‘ptr’ [-Wunused-parameter] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:304:50: warning: unused parameter ‘al’ [-Wunused-parameter] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:344:11: warning: ‘operator new’ must not return NULL unless it is declared ‘throw()’ (or -fcheck-new is in effect) . And 8 more. ### Failing tests:; - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28207/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28207/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28207/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28207/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2112#issuecomment-393139531:1832,test,tests,1832,https://root.cern,https://github.com/root-project/root/pull/2112#issuecomment-393139531,5,['test'],"['testReport', 'tests']"
Testability,"{; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called; fD = SysOpen(path, O_RDONLY, 0644);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction; /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]; memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'; return SysWriteImpl(fd,buf,len);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch; if (fExternalData) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false; if (fBlockList.fBuffer == 0) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch; if (fBlockList.fBuffer == 0) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false; if (fBlockOffset+len <= fBlockSeek->fSize) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch; if (fBlockOffset+len <= fBlockSeek->fSize) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true; if (!fBlockSeek->fNext) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch; if (!fBlockSeek->fNext) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'; fBlockSeek->CreateNext(fDefaultBlockSize);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'; fNext = new TMemBlock(size,this);; ^; /home/performance-test/src_master/io/io/src/TMem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3891#issuecomment-502686211:5817,test,test,5817,https://root.cern,https://github.com/root-project/root/pull/3891#issuecomment-502686211,1,['test'],['test']
Testability,{aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readUniqPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readUniqPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-414258112:3567,test,testReport,3567,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-414258112,1,['test'],['testReport']
Testability,| Algorithm | ReadUZRT(Unzipped Real Time) | ReadUZCT(Unzipped CPU Time) | ReadUnzip(Unzipped Size) | ReadRT(Zipped Real Time) | ReadCT(Zipped CPU Time) | ReadTotal(Zipped Size) |; | --- | --- | --- | --- | --- | --- | --- |; | zlib | 55.22 MB/s | 60.46 MB/s | 6803.79 MB | 13.34 MB/s | 14.60 MB/s | 1643.17 MB |; | lz4 | 54.67 MB/s | 60.77 MB/s | 6803.26 MB | 15.01 MB/s | 16.68 MB/s | 1867.59 MB |; | zlib-1 | 52.64 MB/s | 58.43 MB/s | 6802.96 MB | 14.74 MB/s | 16.37 MB/s | 1905.55 MB |. Here are the results I tested. Again I run three times for each of the algorithms and interleave three algorithms in round-robin fashion.( zlib lz4 zlib-1 zlib lz4 zlib-1 zlib lz4 zlib-1). ReadUZ\* represents the speed of dividing uncompressed size and Read\* represents the speed of dividing compressed size. There is no obvious gap between lz4 and zlib. I tried to reproduce the previous test results. I guess the reason might be due to the sequence of each test? (previously I run each test three times and then switch to the next algorithm like zlib zlib zlib zlib-1 zlib-1 zlib-1 lz4 lz4 lz4). However I did clean the page cache before each run.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/81#issuecomment-145171739:514,test,tested,514,https://root.cern,https://github.com/root-project/root/pull/81#issuecomment-145171739,4,['test'],"['test', 'tested']"
Testability,"| wc -l; 1; nm -C $ROOTSYS/lib/*.so | grep kError | wc -l; 34; ```. ```; strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c; 1 -1; 1 3000; 219 access(; 2 chdir(; 1 execve(; 1 +++ exited with 0 +++; 184 getcwd(; 2 newfstatat(0, ; 2 newfstatat(1, ; 2 newfstatat(2, ; 532 newfstatat(3, ; 29 newfstatat(4, ; 10141 newfstatat(AT_FDCWD, ; 546 openat(AT_FDCWD, ; 843 readlink(; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; ```. ```; strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'; -1; 3000; grep openat openat.log | wc -l; 402; ```. ## This PR. ```; time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)""; -1; 3000. real	0m0.805s; user	0m0.612s; sys	0m0.191s; ```. ```; nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l; 1; nm -C $ROOTSYS/lib/*.so | grep kError | wc -l; 27; ```. ```; strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c; 1 -1; 1 3000; 219 access(; 2 chdir(; 1 execve(; 1 +++ exited with 0 +++; 184 getcwd(; 2 newfstatat(0, ; 2 newfstatat(1, ; 2 newfstatat(2, ; 532 newfstatat(3, ; 29 newfstatat(4, ; 10141 newfstatat(AT_FDCWD, ; 546 openat(AT_FDCWD, ; 843 readlink(; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12245, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12249, si_uid=100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14287#issuecomment-1867398677:2482,log,log,2482,https://root.cern,https://github.com/root-project/root/pull/14287#issuecomment-1867398677,1,['log'],['log']
Testability,} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.te,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:3056,test,test,3056,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['test']
Testability,~~Most test failures are due to https://sft.its.cern.ch/jira/browse/ROOT-10062~~ (red herring),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3602#issuecomment-478464699:7,test,test,7,https://root.cern,https://github.com/root-project/root/pull/3602#issuecomment-478464699,1,['test'],['test']
Testability,"~~TBD: Pretty-printing feature for RVec~~; Pretty printing feature for PyROOT!. **ROOT.VecOps.RVec:**; ```python; >>> v = ROOT.ROOT.VecOps.RVec('float')(3); >>> for i in range(3): v[i] = i; >>> print(v); { 0, 1, 2 }; ```. **std.vector:**; ```python; >>> v = ROOT.std.vector('float')(5); >>> for i in range(len(v)): v[i] = i; >>> print(v); { 0.00000f, 1.00000f, 2.00000f, 3.00000f, 4.00000f }; ```. **std.map:**; ```python; >>> m = ROOT.std.map(""string"", ""int"")(); >>> m[""foo""] = 42; >>> m[""bar""] = -1; >>> print(m); { ""bar"" => -1, ""foo"" => 42 }; ```. **ROOT.RDataFrame:**; ```python; >>> f = ROOT.TFile(""test.root"", ""RECREATE""); >>> tree = ROOT.TTree(""foo"", ""bar""); >>> [do sth with the tree ...]; >>> df = ROOT.RDataFrame(""foo"", ""test.root""); >>> print(df); A data frame built on top of the foo dataset.; ```. **Recursive pretty-printing:**; ```python; >>> v = ROOT.std.vector(""vector<float>"")(2); >>> v[0].push_back(1); >>> v[0].push_back(2); >>> v[1].push_back(-3); >>> v[1].push_back(-4); >>> print(v); { { 1.00000f, 2.00000f }, { -3.00000f, -4.00000f } }; ```. **Uncommon types in STL containers:**; ```python; >>> v = ROOT.std.vector(""TObject"")(2); >>> v[0] = ROOT.TObject(); >>> v[1] = ROOT.TObject(); >>> print(v); { @0x3fbb980, @0x3fbb990 }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097:604,test,test,604,https://root.cern,https://github.com/root-project/root/pull/2097,2,['test'],['test']
Testability,"~~Test coverage is still not great, but feature-wise we should be there.~~. There might be edge cases that I have not thought of testing, but most things (including jitting) are implemented and have non-zero coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9529:2,Test,Test,2,https://root.cern,https://github.com/root-project/root/pull/9529,2,"['Test', 'test']","['Test', 'testing']"
Testability,"~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /reproducer/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /reproducer/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /reproducer/build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /reproducer/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /reproducer/build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /reproducer/build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /reproducer/build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /reproducer/build/include/Rtypes.h:195:; In file included from <module-includes>:2:; In file included from /reproducer/build/include/ROOT/RStringView.hxx:25:; /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/string_view:40:10: fatal error: could not build module 'std'; #include <iosfwd>; ~~~~~~~~^; Error: Error loading the default rootcling header ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478#issuecomment-1113253160:35261,stub,stubs-,35261,https://root.cern,https://github.com/root-project/root/issues/10478#issuecomment-1113253160,1,['stub'],['stubs-']
Testability,"~~~~~~~; ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```; <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]; Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found.; Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found.; Module includeit.pcm not found.; Module lib not found.; Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found.; Module ���2V@)����2V not found.; Module TFitter not found.; Module; )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found.; <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]; Module ROOTGpadv7 not found.; Module ���2V8���2V not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found.; Module Ц~�����2V D not found.; Module mi not found.; Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module 9.0 not found.; ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found.; Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module !p�w��:�2 not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8518:3437,test,test,3437,https://root.cern,https://github.com/root-project/root/issues/8518,1,['test'],['test']
Testability,"~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from aliceesdProjectHeaders.h:20,\r\n from aliceesdProjectSource.cxx:3:\r\nAliESDkink.h:36:26: note: destination object 'AliESDkink::fTPCdensity' of size 8\r\n 36 | Float_t fTPCdensity[2][2]; //tpc cluster density before and after kink\r\n | ^~~~~~~~~~~\r\n```\r\nI.e. complaining about having only 8 bytes when 16 are reserved.\r\n\r\nWe work around this issue by using:\r\n```\r\n for (Int_t i=0;i&lt;4;i++) reinterpret_cast&lt;Float_t*&gt;(fTPCdensity)[i] = (&(rhs.fTPCdensity[0][0]))[i];\r\n``` . ### Failing tests:; - [projectroot.roottest.cling.function.roottest_cling_function_refClasses_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/157305/testReport/projectroot.roottest.cling/function/roottest_cling_function_refClasses_build/); - [projectroot.roottest.cling.function.roottest_cling_function_refFunction_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/157305/testReport/projectroot.roottest.cling/function/roottest_cling_function_refFunction_build/); - [projectroot.roottest.cling.other.roottest_cling_other_runfileClose](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/157305/testReport/projectroot.roottest.cling/other/roottest_cling_other_runfileClose/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_scopeDict_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/157305/testReport/projectroot.roottest.cling/parsing/roottest_cling_parsing_scopeDict_build/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlProxies](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/157305/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlProxies/); - [projectroot.roottest.cling.template.roottest_cling_template_templatefriend_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/157305/tes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11556#issuecomment-1278173875:1722,test,testReport,1722,https://root.cern,https://github.com/root-project/root/pull/11556#issuecomment-1278173875,1,['test'],['testReport']
Testability,"‘%lu’ expects argument of type ‘long unsigned int’, but argument 8 has type ‘__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned int&gt;, unsigned int&gt;::value_type’ {aka ‘unsigned int’} [-Wformat=] ; - [2022-11-29T18:10:56.828Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/test/test_Queue.cxx:94:11: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 9 has type ‘__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned int&gt;, unsigned int&gt;::value_type’ {aka ‘unsigned int’} [-Wformat=] ; - [2022-11-29T18:10:56.828Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/test/test_Queue.cxx:94:11: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 10 has type ‘__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned int&gt;, unsigned int&gt;::value_type’ {aka ‘unsigned int’} [-Wformat=] ; - [2022-11-29T18:10:56.828Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/test/test_Queue.cxx:94:11: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 11 has type ‘__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned int&gt;, unsigned int&gt;::value_type’ {aka ‘unsigned int’} [-Wformat=] . And 10 more. ### Failing tests:; - [projectroot.io.io.test.gtest_io_io_test_TFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160297/testReport/projectroot.io.io/test/gtest_io_io_test_TFile/); - [projectroot.net.netxng.test.gtest_net_netxng_test_RRawFileNetXNG](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160297/testReport/projectroot.net.netxng/test/gtest_net_netxng_test_RRawFileNetXNG/); - [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160297/testReport/projectroot/test/test_stressIOPlugins_xroot/); - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessorm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11776#issuecomment-1331128616:3607,test,test,3607,https://root.cern,https://github.com/root-project/root/pull/11776#issuecomment-1331128616,1,['test'],['test']
Testability,"‘,’ or ‘...’ before ‘&lt;’ token ; - [2021-05-07T16:35:09.073Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingMethodInfoTests.cxx:630:27: error: ‘funcPar0’ was not declared in this scope ; - [2021-05-07T16:35:09.073Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingMethodInfoTests.cxx:637:6: error: ‘funcPar0’ was not declared in this scope ; - [2021-05-07T16:35:09.073Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingMethodInfoTests.cxx:645:34: error: no match for call to ‘(TClingMethodInfo_NonDependentMemberTypes_Test::TestBody()::&lt;lambda(const char*, int)&gt;) (const char [17], &lt;brace-enclosed initializer list&gt;)’ ; - [2021-05-07T16:35:09.073Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingMethodInfoTests.cxx:654:34: error: no match for call to ‘(TClingMethodInfo_NonDependentMemberTypes_Test::TestBody()::&lt;lambda(const char*, int)&gt;) (const char [17], &lt;brace-enclosed initializer list&gt;)’ ; - [2021-05-07T16:35:09.073Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingMethodInfoTests.cxx:662:34: error: no match for call to ‘(TClingMethodInfo_NonDependentMemberTypes_Test::TestBody()::&lt;lambda(const char*, int)&gt;) (const char [14], &lt;brace-enclosed initializer list&gt;)’ ; - [2021-05-07T16:35:09.073Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingMethodInfoTests.cxx:668:39: error: no match for call to ‘(TClingMethodInfo_NonDependentMemberTypes_Test::TestBody()::&lt;lambda(const char*, int)&gt;) (const char [3], &lt;brace-enclosed initializer list&gt;)’ ; - [2021-05-07T16:35:09.073Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingMethodInfoTests.cxx:673:34: error: no match for call to ‘(TClingMethodInfo_NonDependentMemberTypes_Test::TestBody()::&lt;lambda(const char*, int)&gt;) (const char [3], &lt;brace-enclosed initializer list&gt;)’ . And 5 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8124#issuecomment-834603179:3625,test,test,3625,https://root.cern,https://github.com/root-project/root/pull/8124#issuecomment-834603179,6,"['Test', 'test']","['TestBody', 'test']"
Testability,‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1775:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_testForeignDraw](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/chain/roottest_root_tree_chain_make/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/fastcloning/roottest_roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519#issuecomment-415844036:3036,test,testReport,3036,https://root.cern,https://github.com/root-project/root/pull/2519#issuecomment-415844036,1,['test'],['testReport']
Testability,‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2496#issuecomment-414946221:3011,test,testReport,3011,https://root.cern,https://github.com/root-project/root/pull/2496#issuecomment-414946221,1,['test'],['testReport']
Testability,‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.event.roottest_root_io_event](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/event/roottest_root_io_event/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/stdarra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411089672:3011,test,testReport,3011,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411089672,1,['test'],['testReport']
Testability,‘filename’ [-Wunused-parameter] ; - [2023-02-05T02:07:00.230Z] tmva/sofie/test/Mul_FromONNX.hxx:15:21: warning: unused parameter ‘filename’ [-Wunused-parameter] ; - [2023-02-05T02:07:00.230Z] tmva/sofie/test/Div_FromONNX.hxx:15:21: warning: unused parameter ‘filename’ [-Wunused-parameter] ; - [2023-02-05T02:07:00.230Z] tmva/sofie/test/Cast_FromONNX.hxx:15:21: warning: unused parameter ‘filename’ [-Wunused-parameter] ; - [2023-02-05T02:07:00.230Z] tmva/sofie/test/ReduceMean_FromONNX.hxx:15:21: warning: unused parameter ‘filename’ [-Wunused-parameter] ; - [2023-02-05T02:07:00.230Z] tmva/sofie/test/ReduceProd_FromONNX.hxx:15:21: warning: unused parameter ‘filename’ [-Wunused-parameter] ; - [2023-02-05T02:07:00.230Z] tmva/sofie/test/Shape_FromONNX.hxx:15:21: warning: unused parameter ‘filename’ [-Wunused-parameter] ; - [2023-02-05T02:07:00.230Z] tmva/sofie/test/LinearWithLeakyRelu_FromONNX.hxx:15:21: warning: unused parameter ‘filename’ [-Wunused-parameter] . And 38 more. ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_callable_generator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167024/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_callable_generator/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_friendinfo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167024/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167024/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_proxy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11208#issuecomment-1416905460:1617,test,tests,1617,https://root.cern,https://github.com/root-project/root/pull/11208#issuecomment-1416905460,1,['test'],['tests']
Testability,"‘throw()’ (or -fcheck-new is in effect) ; - ../root/core/newdelete/src/NewDelete.cxx:263:6: warning: the program should also define ‘void operator delete(void*, std::size_t)’ [-Wsized-deallocation] ; - ../root/core/newdelete/src/NewDelete.cxx:367:6: warning: the program should also define ‘void operator delete [](void*, std::size_t)’ [-Wsized-deallocation] . ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34226/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34226/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34226/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_alias](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34226/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_alias/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34226/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34226/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34226/testReport/projectroot.tree.dataframe/test/gte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409179229:1427,test,testReport,1427,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409179229,1,['test'],['testReport']
Testability,‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_more](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_more/); - [projectroot.tree.dataframe.test.gtest_t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:3536,test,test,3536,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['test']
Testability,"’ (or -fcheck-new is in effect) ; - ../root/core/newdelete/src/NewDelete.cxx:263:6: warning: the program should also define ‘void operator delete(void*, std::size_t)’ [-Wsized-deallocation] ; - ../root/core/newdelete/src/NewDelete.cxx:367:6: warning: the program should also define ‘void operator delete [](void*, std::size_t)’ [-Wsized-deallocation] . ### Failing tests:; - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36185/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36185/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36185/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36185/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36185/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36185/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411168090:1435,test,testReport,1435,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411168090,1,['test'],['testReport']
Testability,"’ (or -fcheck-new is in effect) ; - ../root/core/newdelete/src/NewDelete.cxx:263:6: warning: the program should also define ‘void operator delete(void*, std::size_t)’ [-Wsized-deallocation] ; - ../root/core/newdelete/src/NewDelete.cxx:367:6: warning: the program should also define ‘void operator delete [](void*, std::size_t)’ [-Wsized-deallocation] . ### Failing tests:; - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36131/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36131/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36131/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36131/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36131/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36131/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36131/testReport/projectroot.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411077518:1435,test,testReport,1435,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411077518,1,['test'],['testReport']
Testability,’ attribute directive ignored [-Wattributes] . And 130 more. ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_dependency_versions](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162987/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162987/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.runtutorials.tutorial_roostats_FourBinInstructional](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162987/testReport/projectroot/runtutorials/tutorial_roostats_FourBinInstructional/); - [projectroot.runtutorials.tutorial_roostats_IntervalExamples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162987/testReport/projectroot/runtutorials/tutorial_roostats_IntervalExamples/); - [projectroot.runtutorials.tutorial_roostats_OneSidedFrequentistUpperLimitWithBands](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162987/testReport/projectroot/runtutorials/tutorial_roostats_OneSidedFrequentistUpperLimitWithBands/); - [projectroot.runtutorials.tutorial_roostats_StandardFeldmanCousinsDemo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162987/testReport/projectroot/runtutorials/tutorial_roostats_StandardFeldmanCousinsDemo/); - [projectroot.runtutorials.tutorial_roostats_TwoSidedFrequentistUpperLimitWithBands](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162987/testReport/projectroot/runtutorials/tutorial_roostats_TwoSidedFrequentistUpperLimitWithBands/); - [projectroot.runtutorials.tutorial_roostats_rs401c_FeldmanCousins](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162987/testReport/projectroot/runtutorial,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11950#issuecomment-1361876263:4794,test,testReport,4794,https://root.cern,https://github.com/root-project/root/pull/11950#issuecomment-1361876263,1,['test'],['testReport']
Testability,’ attribute directive ignored [-Wattributes] . And 130 more. ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_dependency_versions](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163016/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163016/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.runtutorials.tutorial_roostats_FourBinInstructional](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163016/testReport/projectroot/runtutorials/tutorial_roostats_FourBinInstructional/); - [projectroot.runtutorials.tutorial_roostats_IntervalExamples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163016/testReport/projectroot/runtutorials/tutorial_roostats_IntervalExamples/); - [projectroot.runtutorials.tutorial_roostats_OneSidedFrequentistUpperLimitWithBands](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163016/testReport/projectroot/runtutorials/tutorial_roostats_OneSidedFrequentistUpperLimitWithBands/); - [projectroot.runtutorials.tutorial_roostats_StandardFeldmanCousinsDemo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163016/testReport/projectroot/runtutorials/tutorial_roostats_StandardFeldmanCousinsDemo/); - [projectroot.runtutorials.tutorial_roostats_TwoSidedFrequentistUpperLimitWithBands](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163016/testReport/projectroot/runtutorials/tutorial_roostats_TwoSidedFrequentistUpperLimitWithBands/); - [projectroot.runtutorials.tutorial_roostats_rs401c_FeldmanCousins](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163016/testReport/projectroot/runtutorial,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11946#issuecomment-1362291080:4794,test,testReport,4794,https://root.cern,https://github.com/root-project/root/pull/11946#issuecomment-1362291080,1,['test'],['testReport']
Testability,’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] . And 179 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.cling.dict.ROOT-9185.roottest_cling_dict_ROOT_9185_ROOT9185](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.cling.dict/ROOT-9185/roottest_cling_dict_ROOT_9185_ROOT9185/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshotNFiles/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1851#issuecomment-408947574:3311,test,testReport,3311,https://root.cern,https://github.com/root-project/root/pull/1851#issuecomment-408947574,1,['test'],['testReport']
Testability,’ defined but not used [-Wunused-function] ; - [2022-09-13T12:58:37.749Z] /usr/include/python3.10/numpy/__multiarray_api.h:1464:1: warning: ‘int _import_array()’ defined but not used [-Wunused-function] ; - [2022-09-13T12:58:41.917Z] /usr/include/python3.10/numpy/__multiarray_api.h:1464:1: warning: ‘int _import_array()’ defined but not used [-Wunused-function] ; - [2022-09-13T12:59:55.209Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Shape_FromONNX.hxx:20:35: warning: unused parameter ‘tensor_X’ [-Wunused-parameter] . ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154210/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.tmva.sofie.test.gtest_tmva_sofie_test_TestCustomModelsFromONNX](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154210/testReport/projectroot.tmva.sofie/test/gtest_tmva_sofie_test_TestCustomModelsFromONNX/); - [projectroot.roottest.root.collection.roottest_root_collection_runDeleteWarning](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154210/testReport/projectroot.roottest.root/collection/roottest_root_collection_runDeleteWarning/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154210/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_aclicDataMemberSelection](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154210/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_aclicDataMemberSelection/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11065#issuecomment-1245398805:2690,test,testReport,2690,https://root.cern,https://github.com/root-project/root/pull/11065#issuecomment-1245398805,1,['test'],['testReport']
Testability,’ defined but not used [-Wunused-function] ; - [2022-09-13T14:16:54.809Z] /usr/include/python3.10/numpy/__multiarray_api.h:1464:1: warning: ‘int _import_array()’ defined but not used [-Wunused-function] ; - [2022-09-13T14:16:55.905Z] /usr/include/python3.10/numpy/__multiarray_api.h:1464:1: warning: ‘int _import_array()’ defined but not used [-Wunused-function] ; - [2022-09-13T14:17:01.367Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Shape_FromONNX.hxx:20:35: warning: unused parameter ‘tensor_X’ [-Wunused-parameter] . ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154226/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.tmva.sofie.test.gtest_tmva_sofie_test_TestCustomModelsFromONNX](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154226/testReport/projectroot.tmva.sofie/test/gtest_tmva_sofie_test_TestCustomModelsFromONNX/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154226/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_aclicDataMemberSelection](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154226/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_aclicDataMemberSelection/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154226/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runalice,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11065#issuecomment-1245504276:1712,test,testReport,1712,https://root.cern,https://github.com/root-project/root/pull/11065#issuecomment-1245504276,1,['test'],['testReport']
Testability,’ shadows a member of 'this' [-Wshadow] ; - /data/sftnight/workspace/root-pullrequests-build/build/include/RooAbsCollection.h:79:104: warning: declaration of ‘begin’ shadows a member of 'this' [-Wshadow] ; - /data/sftnight/workspace/root-pullrequests-build/build/include/RooAbsCollection.h:79:104: warning: declaration of ‘end’ shadows a member of 'this' [-Wshadow] ; - /data/sftnight/workspace/root-pullrequests-build/build/include/RooAbsCollection.h:79:104: warning: declaration of ‘begin’ shadows a member of 'this' [-Wshadow] . And 611 more. ### Failing tests:; - [projectroot.test.test_stressroostats](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52647/testReport/projectroot/test/test_stressroostats/); - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52647/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.test.test_stressroofit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52647/testReport/projectroot/test/test_stressroofit/); - [projectroot.runtutorials.tutorial_roofit_rf502_wspacewrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52647/testReport/projectroot/runtutorials/tutorial_roofit_rf502_wspacewrite/); - [projectroot.runtutorials.tutorial_roostats_CreateExampleFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52647/testReport/projectroot/runtutorials/tutorial_roostats_CreateExampleFile/); - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52647/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory/); - [projectroot.roofit.histfactory.test.gtest_roofit_histfactory_test_testHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52647/testReport/projectroot.roofit.histfactory/test/gtest_roofit_histfactory_test_testHistFactory/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_simple](https://epsft-jenkins.cern.ch/job/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3345#issuecomment-458990497:2257,test,testReport,2257,https://root.cern,https://github.com/root-project/root/pull/3345#issuecomment-458990497,2,['test'],"['test', 'testReport']"
Testability,’ shadows a previous local [-Wshadow] ; - [2022-04-04T13:39:11.435Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Concat.hxx:129:26: warning: declaration of ‘i’ shadows a previous local [-Wshadow] ; - [2022-04-04T13:39:27.245Z] /data/sftnight/workspace/root-pullrequests-build/build/include/TMVA/ROperator_Concat.hxx:86:32: warning: declaration of ‘SP’ shadows a member of ‘TMVA::Experimental::SOFIE::ROperator_Concat&lt;T&gt;’ [-Wshadow] ; - [2022-04-04T13:39:27.245Z] /data/sftnight/workspace/root-pullrequests-build/build/include/TMVA/ROperator_Concat.hxx:107:25: warning: declaration of ‘i’ shadows a previous local [-Wshadow] ; - [2022-04-04T13:39:27.245Z] /data/sftnight/workspace/root-pullrequests-build/build/include/TMVA/ROperator_Concat.hxx:129:26: warning: declaration of ‘i’ shadows a previous local [-Wshadow] ; - [2022-04-04T13:39:29.704Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Concat.hxx:86:32: warning: declaration of ‘SP’ shadows a member of ‘TMVA::Experimental::SOFIE::ROperator_Concat&lt;T&gt;’ [-Wshadow] ; - [2022-04-04T13:39:29.705Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Concat.hxx:107:25: warning: declaration of ‘i’ shadows a previous local [-Wshadow] ; - [2022-04-04T13:39:29.705Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Concat.hxx:129:26: warning: declaration of ‘i’ shadows a previous local [-Wshadow] ; - [2022-04-04T13:39:29.705Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Concat.hxx:86:32: warning: declaration of ‘SP’ shadows a member of ‘TMVA::Experimental::SOFIE::ROperator_Concat&lt;T&gt;’ [-Wshadow] . And 2 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_legacy_thread_threadsh2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/141491/testReport/projectroot/runtutorials/tutorial_legacy_thread_threadsh2/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10315#issuecomment-1087586535:2452,test,tests,2452,https://root.cern,https://github.com/root-project/root/pull/10315#issuecomment-1087586535,2,['test'],"['testReport', 'tests']"
Testability,"’ writing to an object of type ‘struct std::pair&lt;clang::CXXRecordDecl*, clang::SourceLocation&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;const clang::CXXMethodDecl*, const clang::CXXMethodDecl*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXMethodDecl*, const clang::FunctionProtoType*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] . And 65 more. ### Failing tests:; - [projectroot.roottest.python.cling.roottest_python_cling_api](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/48937/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/48937/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/48937/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_aclicDataMemberSelection](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/48937/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_aclicDataMemberSelection/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3005#issuecomment-440776468:3840,test,tests,3840,https://root.cern,https://github.com/root-project/root/pull/3005#issuecomment-440776468,1,['test'],['tests']
Testability,"’ writing to an object of type ‘struct std::pair&lt;clang::CXXRecordDecl*, clang::SourceLocation&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;const clang::CXXMethodDecl*, const clang::CXXMethodDecl*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXMethodDecl*, const clang::FunctionProtoType*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] . And 65 more. ### Failing tests:; - [projectroot.roottest.python.cling.roottest_python_cling_api](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/48947/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/48947/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/48947/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/48947/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_aclicDataMemberSelection](https://epsft-jenkins.cern.ch/job/root-pullrequests-buil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012#issuecomment-440950306:3840,test,tests,3840,https://root.cern,https://github.com/root-project/root/pull/3012#issuecomment-440950306,1,['test'],['tests']
Testability,"’ writing to an object of type ‘struct std::pair&lt;clang::CXXRecordDecl*, clang::SourceLocation&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;const clang::CXXMethodDecl*, const clang::CXXMethodDecl*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXMethodDecl*, const clang::FunctionProtoType*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] . And 65 more. ### Failing tests:; - [projectroot.roottest.python.cling.roottest_python_cling_api](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/48967/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/48967/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/48967/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/48967/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_aclicDataMemberSelection](https://epsft-jenkins.cern.ch/job/root-pullrequests-buil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2122#issuecomment-440967420:3840,test,tests,3840,https://root.cern,https://github.com/root-project/root/pull/2122#issuecomment-440967420,1,['test'],['tests']
Testability,"’ writing to an object of type ‘struct std::pair&lt;clang::CXXRecordDecl*, clang::SourceLocation&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;const clang::CXXMethodDecl*, const clang::CXXMethodDecl*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXMethodDecl*, const clang::FunctionProtoType*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] . And 65 more. ### Failing tests:; - [projectroot.roottest.python.cling.roottest_python_cling_api](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/48973/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/48973/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/48973/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_aclicDataMemberSelection](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/48973/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_aclicDataMemberSelection/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3020#issuecomment-440977639:3840,test,tests,3840,https://root.cern,https://github.com/root-project/root/pull/3020#issuecomment-440977639,1,['test'],['tests']
Testability,"’ writing to an object of type ‘struct std::pair&lt;clang::CXXRecordDecl*, clang::SourceLocation&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;const clang::CXXMethodDecl*, const clang::CXXMethodDecl*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXMethodDecl*, const clang::FunctionProtoType*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] . And 65 more. ### Failing tests:; - [projectroot.roottest.python.cling.roottest_python_cling_api](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49001/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49001/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49001/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_aclicDataMemberSelection](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49001/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_aclicDataMemberSelection/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2917#issuecomment-441009360:3840,test,tests,3840,https://root.cern,https://github.com/root-project/root/pull/2917#issuecomment-441009360,1,['test'],['tests']
Testability,"’ writing to an object of type ‘struct std::pair&lt;clang::CXXRecordDecl*, clang::SourceLocation&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;const clang::CXXMethodDecl*, const clang::CXXMethodDecl*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXMethodDecl*, const clang::FunctionProtoType*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] . And 65 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_aclicDataMemberSelection](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49023/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_aclicDataMemberSelection/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49023/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.evolution.version5.roottest_root_meta_evolution_version5_execNestedColl](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49023/testReport/projectroot.roottest.root.meta.evolution/version5/roottest_root_meta_evolution_version5_execNestedColl/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_runpairs](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49023/testReport/projectroot.roottest.root.meta/tclass/roottes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3009#issuecomment-441045614:3840,test,tests,3840,https://root.cern,https://github.com/root-project/root/pull/3009#issuecomment-441045614,1,['test'],['tests']
Testability,"’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXRecordDecl*, clang::SourceLocation&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] . And 61 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41876/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41876/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.event.roottest_root_io_event](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41876/testReport/projectroot.roottest.root.io/event/roottest_root_io_event/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41876/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41876/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execOld/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41876/testReport/projectroot.roottest.root.meta/tclass/roottest_root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2683#issuecomment-424387215:4196,test,testReport,4196,https://root.cern,https://github.com/root-project/root/pull/2683#issuecomment-424387215,1,['test'],['testReport']
Testability,’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411129604:3565,test,testReport,3565,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411129604,1,['test'],['testReport']
Testability,’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readUniqPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readUniqPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-414258112:3318,test,testReport,3318,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-414258112,1,['test'],['testReport']
Testability,’} [-Wcast-function-type] . ### Failing tests:; - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50977/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50977/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_nodes](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50977/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_nodes/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50977/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50977/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_csv](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50977/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_csv/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50977/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treetreeplayertestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50977/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treetreeplayertestUnit/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_sqlite](https://e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3216#issuecomment-451828526:2518,test,test,2518,https://root.cern,https://github.com/root-project/root/pull/3216#issuecomment-451828526,1,['test'],['test']
Testability,"’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] . ### Failing tests:; - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50977/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50977/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_nodes](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50977/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_nodes/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50977/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50977/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_csv](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50977/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_csv/); - [projectroot.tree.dataframe.test.gtest_tree_d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3216#issuecomment-451828526:1966,test,test,1966,https://root.cern,https://github.com/root-project/root/pull/3216#issuecomment-451828526,1,['test'],['test']
Testability,"… IncrementalExecutor. This patch contains two functionality:; 1. Autoloading of dynamic symbols for system headers; There is three kind of symbols in shared object file, which is 1; normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols.; Linker doesn't care about 3, but should take care (of course) 1 and; 2. For system headers, often symbols are defined in .dynsym section; which means they are 2 dynamic symbols. This patch adds support of; autoloading those symbols. We fallback to resolving dynamic symbols; from system headers only if we couldn't resolve from normal symbol; table, as the initialization of header search is expensive (iterating; through all system headers); 2. Register callback from IncrementalExecutor; Previously, LazyFunctionCreatorAutoload was getting callback only; from DynamicLibraryManager::loadLibrary. This was enough for fixing; tests, but is insufficient to handle ""symbol <something> unresolved; while linking function"" errors as those errors are emitted from; IncrementalExecutor. Adding a callback from IncrementalExecutor; enables us to unresolved symbols. It fixes these kind of errors:; `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3017:878,test,tests,878,https://root.cern,https://github.com/root-project/root/pull/3017,1,['test'],['tests']
Testability,"… Windows. This was breaking the Windows build with the following error:; ```; [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]; ```; On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6591:355,test,test,355,https://root.cern,https://github.com/root-project/root/pull/6591,1,['test'],['test']
Testability,"… at the first failure. It works like expected: example of broken test that should be repeated 10 times, it stopped after 1 attempt and rerun second time with coredump https://gist.github.com/oshadura/32ffe755e4f8602a9e6a136992202f50. The feature was requested here: https://github.com/root-project/root/pull/6354",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6354:66,test,test,66,https://root.cern,https://github.com/root-project/root/pull/6354,1,['test'],['test']
Testability,… on histograms. In Debug and RelWithDebInfo builds (when assertions are active) the following; code caused an assertion to fire:. root [0] TEfficiency* eff = new TEfficiency;; root [1] eff->SetUseWeightedEvents();; Info in <TROOT::TEfficiency::SetUseWeightedEvents>: Histograms are filled with weights; root.exe: ../hist/hist/src/TEfficiency.cxx:3593: void TEfficiency::SetUseWeightedEvents(bool): Assertion `fTotalHistogram->GetSumw2N() > 0 && fPassedHistogram->GetSumw2N() > 0' failed. This fixes ROOT-9058.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1183:58,assert,assertions,58,https://root.cern,https://github.com/root-project/root/pull/1183,3,"['Assert', 'assert']","['Assertion', 'assertion', 'assertions']"
Testability,"… tutorials. # This Pull request: df001_Introduction tutorial. ## Changes or fixes:. The explanation of the actions in the part ""Operations on dataframe"" using ForEach() and TActionResultPtr<T> does not match with the RDataFrame Reference guide and is hence outdated. Now there is an updated text. Also, a few grammar mistakes are now corrected for. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11005:371,test,tested,371,https://root.cern,https://github.com/root-project/root/pull/11005,1,['test'],['tested']
Testability,"…alizing. When we deserialize a function with noexcept(constant_expression) qualifier the; constant_expression itself might trigger deserialization. Triggering nested; deserializations is not supported in clang. Currently we just removed the assert but this shows problems when we go to; higher version of stl's (such as the one in ubuntu19) which more heavily; rely on constexpr. We segfault in cases where we do equivalent of:; ```; cling::Interpreter *interp = ((TCling*)gCling)->GetInterpreterImpl();; auto& lh = interp->getLookupHelper();; auto diag = cling::LookupHelper::WithDiagnostics;; auto S = lh.findScope(""ROOT::Internal::RDF"", diag);; lh.findAnyFunction(S, ""RDataFrameTake<float>"", diag);; lh.findAnyFunction(S, ""RDataFrameTake<std::vector<float>>"", diag);; ```. This patch delays the unsafe computation of type of the deserialized function; and thus the evaluation of the exception qualifier. This should fix the failing; pyunittests-pyroot-rdataframe-asnumpy nightly on ubuntu 19. The red pill is applying llvm-mirror/clang@5d50602a8de220e1f0bbdd136e9a7be21a1b63c0. This will happen after releasing v6.20.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4656:242,assert,assert,242,https://root.cern,https://github.com/root-project/root/pull/4656,1,['assert'],['assert']
Testability,…antities() (#11115). cherry-picked from cd992545ae. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11141:118,test,tested,118,https://root.cern,https://github.com/root-project/root/pull/11141,1,['test'],['tested']
Testability,…avoid clash with classes that CMS Combine will eventually provide. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15558:133,test,tested,133,https://root.cern,https://github.com/root-project/root/pull/15558,1,['test'],['tested']
Testability,"…ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3160:21,test,test,21,https://root.cern,https://github.com/root-project/root/pull/3160,6,['test'],"['test', 'testDetails']"
Testability,…est-time-in-case-annotation. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12663:95,test,tested,95,https://root.cern,https://github.com/root-project/root/pull/12663,1,['test'],['tested']
Testability,…failing tests),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1657:9,test,tests,9,https://root.cern,https://github.com/root-project/root/pull/1657,1,['test'],['tests']
Testability,"…h when ROOT uses G4 units. # This Pull request:; The PR fixes the computation of the radiation length and nuclear interaction length; which are computed wrongly when ROOT uses in G4 units. ## Changes or fixes:; All in TGeoMaterial.cpp; The fix is based on an initial pull request from Ivana:; https://github.com/root-project/root/pull/9401 ; which did miss the necessary changes for mixtures. Output from constructing Iron from:; ```; 99.5 % Element: FE Z=26 N=56.000000 A=55.845000 [g/mole]; 0.5 % Element: C Z=6 N=12.000000 A=12.010700 [g/mole]; ```; - ROOT units:; ```; $> root.exe material_test.C\(\""ROOT\""\); Material Iron A=55.845 Z=26 rho=7.874 radlen=1.75666 intlen=0.0271712 index=0; TGeoMaterial Iron; 		 Density: 		7.874 [g/cm^3]; 		 Radiation Length: 	1.75666 [cm] ; 		 Interaction Length: 	16.9589 [cm] ; ```; - Geant4 units:; ```; $> root.exe material_test.C\(\""G4\""\); Material Iron A=55.845 Z=26 rho=7.874 radlen=17.5666 intlen=0.271712 index=3; TGeoMaterial Iron; 		 Density: 		7.874 [g/cm^3]; 		 Radiation Length: 	17.5666 [mm] ; 		 Interaction Length: 	169.589 [mm] ; ```; PDG (https://pdg.lbl.gov/2020/AtomicNuclearProperties/HTML/iron_Fe.html):; ```; Specific gravity 	 7.874 	g cm-3; Nuclear interaction length 	132.1 	g cm-2 	16.77 	cm; Radiation length 	 13.84 	g cm-2 	1.757 	cm; ```. ## Checklist:. - [X ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11060:1333,test,tested,1333,https://root.cern,https://github.com/root-project/root/pull/11060,1,['test'],['tested']
Testability,…ible. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13685:72,test,tested,72,https://root.cern,https://github.com/root-project/root/pull/13685,1,['test'],['tested']
Testability,"…ied. We cannot merge both codepaths because root.exe should always run with modules; if -Druntime_cxxmodules is specified, however, rootcling enables modules only; if -cxxmodule flag is passed. This patch fixes asserts when ROOT is built in -Druntime_cxxmodules=On but; no -cxxmodule flag is specified (in tree/test for instance).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3622:212,assert,asserts,212,https://root.cern,https://github.com/root-project/root/pull/3622,2,"['assert', 'test']","['asserts', 'test']"
Testability,"…istered with gtest_main.a. Error message is not obvious: usr/bin/ld: ../../../googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function main:gtest_main.cc:(.text.startup+0x26): undefined reference to testing::InitGoogleTest(int*, char**)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5523:233,test,testing,233,https://root.cern,https://github.com/root-project/root/pull/5523,1,['test'],['testing']
Testability,"…nation. Adds support for:; ```python; >>> import cppyy; >>> s1 = cppyy.gbl.std.string(""test""); >>> s2 = ""test""; >>> s1+s2; ```. From:; https://bitbucket.org/wlav/cppyy-backend/commits/ea594f920a9db9f535b6ecfcbd0403210b19aaee; https://bitbucket.org/wlav/cppyy-backend/commits/f16f69c6a515c5d1036e6e950043e1faa5582be0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7072:88,test,test,88,https://root.cern,https://github.com/root-project/root/pull/7072,2,['test'],['test']
Testability,"…ndows). This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5001:1051,log,log,1051,https://root.cern,https://github.com/root-project/root/pull/5001,2,['log'],['log']
Testability,"…overy."". This reverts commit 77b8755f36e2313b757fed4068114c28caa16de1. Breaks windows, and has some failures in stress tests. Investigating.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3734:120,test,tests,120,https://root.cern,https://github.com/root-project/root/pull/3734,1,['test'],['tests']
Testability,"…pector. Currently, irrelevant value is returned if compressed size exceeds the range of int, since std::accumulate is initialized with plain 0. The proposed version uses std::reduce where (implicit) zero-initialization is done with the iterator value type. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #16124",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16113:323,test,tested,323,https://root.cern,https://github.com/root-project/root/pull/16113,1,['test'],['tested']
Testability,"…plicitMT on. Move the creation of `TThreadExecutor pool` before the call of `Internal::MakeClusters()`, to make sure it is properly initialized when calling `ROOT::Internal::TPoolManager::GetPoolSize()` (via `ROOT::GetImplicitMTPoolSize()`); This fix a crash with the `gtest-tree-treeplayer-test-treeprocessormt` test on Windows, due to a division by zero at line 224 in `TTreeProcessorMT`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4953:292,test,test-treeprocessormt,292,https://root.cern,https://github.com/root-project/root/pull/4953,2,['test'],"['test', 'test-treeprocessormt']"
Testability,"…ply suppress:"". See #11937; for why `-flat_namespace` is bad. This reverts commit a05d4be. (cherry picked from commit 0e03b6a)# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12100:192,test,tested,192,https://root.cern,https://github.com/root-project/root/pull/12100,1,['test'],['tested']
Testability,"…sed errors in the incremental tests, update tutorials to Keras 2.x API",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1629:31,test,tests,31,https://root.cern,https://github.com/root-project/root/pull/1629,1,['test'],['tests']
Testability,…t::GetTypeName. This doesn't impose a potential allocation (or the use of std::string) on the caller unnecessarily. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16695:138,test,tested,138,https://root.cern,https://github.com/root-project/root/pull/16695,1,['test'],['tested']
Testability,"…te record for instantiating its definition. We model the 'inline'ness as being instantiated with the static data member in; order to track whether the declaration has become a definition yet. git-svn-id: https://llvm.org/svn/llvm-project/cfe/trunk@317147 91177308-0d34-0410-b5e6-96231b3b80d8. This patch fixes a problem in cxxmodules and c++17 of the kind:; ```; 1/2 Test #263: tutorial-dataframe-df004_cutFlowReport ......***Failed Error regular expression found in output. Regex=[: error:] 30.90 sec. Processing /home/vvassilev/workspace/sources/root/tutorials/dataframe/df004_cutFlowReport.C...; In module 'std' imported from input_line_1:1:; /usr/include/c++/7/string_view:88:41: error: static data member 'npos' already has an initializer; static constexpr size_type npos = size_type(-1);; ^; /usr/include/c++/7/string_view:319:43: note: in instantiation of static data member 'std::basic_string_view<char, std::char_traits<char> >::npos' requested here; rfind(_CharT __c, size_type __pos = npos) const noexcept;; ^; /home/vvassilev/workspace/builds/root_runtime_modules_builtin_clang_debug/include/ROOT/RDF/RInterface.hxx:468:14: note: in instantiation of function template specialization 'ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::SnapshotImpl<double, int>' requested here; return SnapshotImpl<ColumnTypes...>(treename, filename, columnList, options);; ^; input_line_102:2:206: note: in instantiation of function template specialization 'ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::Snapshot<double, int>' requested here; *reinterpret_cast<ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager>>*>(0x7fffffff9598) = reinterpret_cast<ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase>*>(0x7fffffff95d0)->Snapshot<__rdf1::b13_type, __rdf1::b24_type>(""myTree"", ""df004_cutFlowReport.root"", *reinterpret_cast<std::vector<std::string>*>(0x7fffffff9940),*reinterpret_cast<ROOT::RDF::RSnapshotOptions*>(0x7fffffff9a40));; ^; /usr/include/c++/7/str",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4437:368,Test,Test,368,https://root.cern,https://github.com/root-project/root/pull/4437,1,['Test'],['Test']
Testability,"…to push. ## Changes or fixes:; Adding a call to vector.reserve() to RField.cxx in (almost) all cases where we know the exact number of elements pushed. Saves a bunch of reallocation especially when the number of pushed elements is not strictly bounded (e.g. number of columns, number of subfields). ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary) - not necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15475:322,test,tested,322,https://root.cern,https://github.com/root-project/root/pull/15475,1,['test'],['tested']
Testability,…ve use. This might fix intermittent failure in roottest_root_multicore_tp_process_imt; https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11911/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt/; shows crash in:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1339:152,test,testReport,152,https://root.cern,https://github.com/root-project/root/pull/1339,2,['test'],['testReport']
Testability,…… (#11060). * Fix computation of the radiation length and nuclear interaction length when ROOT uses G4 units. * Fix computation of the radiation length and nuclear interaction length when ROOT uses G4 units. (cherry picked from commit 103bb7e4d930b4921debceec6ad7d418bacae4fc). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11103:344,test,tested,344,https://root.cern,https://github.com/root-project/root/pull/11103,1,['test'],['tested']
Testability,…… (#11060). * Fix computation of the radiation length and nuclear interaction length when ROOT uses G4 units. * Fix computation of the radiation length and nuclear interaction length when ROOT uses G4 units. (cherry picked from commit 103bb7e4d930b4921debceec6ad7d418bacae4fc). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11080,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11104:344,test,tested,344,https://root.cern,https://github.com/root-project/root/pull/11104,1,['test'],['tested']
Testability,"──────────── trace ────; [#0] 0x7fffddef621d → TCanvas::Resize(this=0x4729d00); [#1] 0x7fffd6c2bae8 → TRootCanvas::HandleContainerConfigure(this=0x463e910); [#2] 0x7fffd6b68a3d → TGFrame::HandleEvent(this=0x46940a0, event=0x7fffdf211150); [#3] 0x7fffd6b186ba → TGClient::HandleEvent(this=0x3aed770, event=0x7fffdf211150); [#4] 0x7fffd6b189ed → TGClient::ProcessOneEvent(this=0x3aed770); [#5] 0x7fffd6b189ed → TGClient::ProcessOneEvent(this=0x3aed770); [#6] 0x7fffd6b18a2b → TGClient::HandleInput(this=0x3aed770); [#7] 0x7ffff593e9b0 → TUnixSystem::DispatchOneEvent(this=0x7034f0, pendingOnly=<optimized out>); [#8] 0x7ffff5866a1a → TSystem::ProcessEvents(this=0x7034f0); [#9] 0x7ffff7fd6012 → mov rcx, QWORD PTR [rsp+0x10]; ───────────────────────────────────────────────────────────; ```. While sometimes it executes normally:. ```gdb; [Detaching after fork from child process 40508]; [Detaching after fork from child process 40510]; [Detaching after fork from child process 40514]; [Detaching after fork from child process 40516]; [Detaching after fork from child process 40519]; [Detaching after fork from child process 40523]; [Detaching after fork from child process 40526]; [New Thread 0x7fffdf212700 (LWP 40534)]; [*] Failed to find objfile or not a valid file format: [Errno 2] No such file or directory: '.gnu_debugdata for /lib64/libXcursor.so.1'; [*] Failed to find objfile or not a valid file format: [Errno 2] No such file or directory: '.gnu_debugdata for /lib64/libXfixes.so.3'; First canvas has been created; Next: Create canvas again with the same name and get the warning; Warning in <TCanvas::Constructor>: Deleting canvas with same name: test; Second canvas has been created.; I should have gotten undefined behaviour at this point. E.g. Seg. fault.; [Thread 0x7fffdf212700 (LWP 40534) exited]; [Inferior 1 (process 40503) exited normally]; Python Exception <class 'UnicodeEncodeError'>: 'ascii' codec can't encode character '\u27a4' in position 12: ordinal not in range(128); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564113510:7015,test,test,7015,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564113510,1,['test'],['test']
Testability,"🤔 Just to understand, is it a known real leak or a false positive?. I initially thought it was something we in any case could not fix on our side and I also suppressed the sanitiser leak as described [here](https://gitlab.ep1.rub.de/fp311online/cern-root/-/tree/v6-22-08-ep1/core/sanitizer?ref_type=heads) (not sure this is an official documentation, but it's something google brought to my attention). In particular I added; ```; cd root_install/etc/; printf '\n#Full libCling for SMASH\nleak:libCling\n' >> lsan-root.supp; ```; together with; ```dockerfile; # This will let sanitizer suppress leaks according to suppressions file list of patterns; ENV LSAN_OPTIONS=""suppressions=${ROOTSYS}/etc/lsan-root.supp:print_suppressions=0""; ```; to my Dockerfile. Doing so, all the unit tests pass, but I then monitored memory usage over a long run of our application and a linear growth was evident (plot left below). Nothing extreme, sure, but I thought it was worth reporting, especially since in `v6.26.10` the problem does not occur (plot right below). 🤷‍♂️ . <div align=""center"">. <img src=""https://github.com/root-project/root/assets/13135070/ca744a83-51ca-4143-ba20-bf481e60c6b8"" width=""360"" />; <img src=""https://github.com/root-project/root/assets/13135070/a68a2ced-a04f-4698-a0e0-a72cf6dd9d1d"" width=""355"" />. </div>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-1814642915:780,test,tests,780,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-1814642915,1,['test'],['tests']
Usability,"				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics; 				 as well as a list of their names. .g <var>				- Prints out information about global variable; 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the; 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes; 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding; 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one; 				 saved in a given file. .stats [name]		- Show stats for internal data structures; 				 'ast' abstract syntax tree stats; 				 'asttree [filter]' abstract syntax tree layout; 				 'decl' dump ast declarations; 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation; 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands.; ===============================================================================; .L <filename>[flags]: load the given file with optional flags like; + to compile or ++ to force recompile.; Type .? TSystem::CompileMacro for a list of all flags.; .(x|X) <filename>[flags](args) :; same as .L <filename>[flags] and runs then a function; with signature: ret_type filename(args).; .credits : show credits; .demo : launch GUI demo; .help Class::Member : open reference guide for that class member (or .?).; Specifying '::Member' is optional.; .help edit : show line editing shortcuts (or .?); .license : show license; .ls : list contents of current TDir",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10121#issuecomment-1084927674:2512,undo,undo,2512,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674,2,['undo'],['undo']
Usability," 	std::vector<double> m_vVel;; 	std::vector<double> m_vOpPow;; 	std::vector<double> m_vPulseMag;; 	std::vector<double> m_vIntData[NUMBER_OF_COLORS];; 	std::vector<double> m_vIntDataSD[NUMBER_OF_COLORS];; 	std::vector<double> m_vPkRatio;; 	std::vector<int> m_vEvtErr;; 	std::vector<double> m_vEvRate;; 	std::vector<double> m_vGEV;; 	std::vector<int> m_vChEnbMask;. 	bool m_bAllChannelsEnabled;; ```. Here, NUMBER_OF_COLORS = 5. The generated _dict file in root 5 show, at one point (note the vector declaration), . ```; {; for (Int_t R__l = 0; R__l < 5; R__l++) {; vector<double> &R__stl = m_vIntData[R__l];; R__stl.clear();; int R__i, R__n;; R__b >> R__n;; R__stl.reserve(R__n);; for (R__i = 0; R__i < R__n; R__i++) {; double R__t;; R__b >> R__t;; R__stl.push_back(R__t);; }; }; }; ```. This seems to work well. But in root 6 it produces (note the [5] after vector<double>). ```; for (Int_t R__l = 0; R__l < 5; R__l++) {; vector<double>[5] &R__stl = m_vIntData[R__l];; R__stl.clear();; int R__i, R__n;; R__b >> R__n;; R__stl.reserve(R__n);; for (R__i = 0; R__i < R__n; R__i++) {; double R__t;; R__b >> R__t;; R__stl.push_back(R__t);; }; }; }. ```. this produces the compilation error:. ```; g++ -O -Wall -fPIC -pthread -std=c++14 -m64 -I/usr/include/root -I/home/vmecomp/Projects/Cytogate/CytCommon -I../../Include -I. -I/usr/include -I/home/vmecomp/Projects/Cytogate/Bus -I/home/vmecomp/Projects/Cytogate/Include -I/home/vmecomp/Projects/Cytogate/CytCommon -I/usr/include/root -c -o CytStatInfo_dict.o CytStatInfo_dict.C; CytStatInfo_dict.C: In member function ‘virtual void CytStatInfo::Streamer(TBuffer&)’:; CytStatInfo_dict.C:202:25: error: expected identifier before numeric constant; vector<double>[5] &R__stl = m_vIntData[R__l];; ^; CytStatInfo_dict.C:202:25: error: expected ‘]’ before numeric constant; vector<double>[5] &R__stl = m_vIntData[R__l];; ^; ]; CytStatInfo_dict.C:202:24: warning: structured bindings only available with -std=c++17 or -std=gnu++17; vector<double>[5] &R__stl = m_vI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12755#issuecomment-1534658132:1715,clear,clear,1715,https://root.cern,https://github.com/root-project/root/issues/12755#issuecomment-1534658132,1,['clear'],['clear']
Usability," * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior; The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00.; ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce; * Create any workspace file with ROOT 5.34, eg.; ```; % root -b; ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc); root [0] RooWorkspace w(""w"");; root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");; root [4] w.writeToFile(""simplest-53432.root"");; ```; * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:; * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590; #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cv",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7276:1134,simpl,simplest-,1134,https://root.cern,https://github.com/root-project/root/issues/7276,1,['simpl'],['simplest-']
Usability," /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 3&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile2D]’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 2&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile]’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11127#issuecomment-1207076516:2125,usab,usable,2125,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207076516,1,['usab'],['usable']
Usability," 2022 MacOSX13.1.sdk; drwxr-xr-x 7 root wheel 224 Sep 18 15:25 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 Sep 18 14:57 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 Sep 18 15:25 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 Sep 18 14:56 MacOSX15.sdk -> MacOSX15.0.sdk; + clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/pcanal/root_working/builds/master.debug/src/tutorials/v7/ntuple -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Applications/Xcode.app",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2375170248:1618,clear,clear-ast-before-backend,1618,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2375170248,1,['clear'],['clear-ast-before-backend']
Usability, 396: gtest-tree-dataframe-test-datasource-sqlite; 419/1231 Test #395: gtest-tree-dataframe-test-datasource-ntuple ......................... Passed 1.80 sec; Start 397: pyunittests-dataframe-misc; 420/1231 Test #393: gtest-tree-dataframe-test-datasource-csv ............................ Passed 3.56 sec; Start 398: pyunittests-dataframe-histograms; 421/1231 Test #391: gtest-tree-dataframe-test-datasource-trivial ........................ Passed 6.48 sec; Start 399: pyunittests-dataframe-cache; 422/1231 Test #396: gtest-tree-dataframe-test-datasource-sqlite ......................... Passed 4.60 sec; Start 400: pyunittests-dataframe-merge-results; 423/1231 Test #397: pyunittests-dataframe-misc .......................................... Passed 3.66 sec; 424/1231 Test #398: pyunittests-dataframe-histograms .................................... Passed 3.40 sec; 444/1231 Test #400: pyunittests-dataframe-merge-results ................................. Passed 4.48 sec; 446/1231 Test #376: gtest-tree-dataframe-test-dataframe-simple .......................... Passed 38.57 sec; 447/1231 Test #399: pyunittests-dataframe-cache ......................................... Passed 10.50 sec; Start 447: tutorial-dataframe-df000_simple; Start 448: tutorial-dataframe-df001_introduction; Start 449: tutorial-dataframe-df002_dataModel; 470/1231 Test #447: tutorial-dataframe-df000_simple ..................................... Passed 2.85 sec; Start 450: tutorial-dataframe-df003_profiles; Start 451: tutorial-dataframe-df004_cutFlowReport; 472/1231 Test #450: tutorial-dataframe-df003_profiles ................................... Passed 5.31 sec; Start 452: tutorial-dataframe-df005_fillAnyObject; 473/1231 Test #449: tutorial-dataframe-df002_dataModel .................................. Passed 9.46 sec; Start 453: tutorial-dataframe-df006_ranges; 474/1231 Test #451: tutorial-dataframe-df004_cutFlowReport .............................. Passed 6.28 sec; Start 454: tutorial-dataframe-df007_snapshot; 475/1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:6509,simpl,simple,6509,https://root.cern,https://github.com/root-project/root/pull/10300,1,['simpl'],['simple']
Usability," AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; In TColor::GetColorTransparent() (see https://root.cern.ch/doc/master/classTColor.html#ae666674d7087b2b709abebde22667c50); a new color is defined each time a transparent color (with alpha channel) is requested. In graphics applications with many transparent objects this leads quickly to exhausting the available index space of colors. At some point the int returned turns negative and the colors displayed are not what they should be. . There does not seem to be a way to reset the entire color space in use by ROOT to simply start over. This would not fix the underlying problem but would at least provide a workaround. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The expected behavior is that transparent colors are re-used like any other color and no new color index is needed when requesting an already used transparent color again. ; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; type ; TColor::GetColorTransparent(1,0.1); repeatedly on the commandline in ROOT. Each time the function is called a higher integer is returned even though the same transparent color is wanted. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: 6.24/06; OS: linux (opensuse TW); How obtained: self compiled. ### Additional context; <!--; Add any other context about the probl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10299:1111,clear,clear,1111,https://root.cern,https://github.com/root-project/root/issues/10299,1,['clear'],['clear']
Usability," CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG; -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success; -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS; -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success; -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS; -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS; -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success; -- Performing Test C_SUPPORTS_FDATA_SECTIONS; -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_EH'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_RTTI'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:6101,clear,clearing,6101,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,1,['clear'],['clearing']
Usability, Minuit2/MnFcn.h Minuit2/MnFumiliMinimize.h Minuit2/MnFunctionCross.h Minuit2/MnGlobalCorrelationCoeff.h Minuit2/MnHesse.h Minuit2/MnLineSearch.h Minuit2/MnMachinePrecision.h Minuit2/MnMatrix.h Minuit2/MnMigrad.h Minuit2/MnMinimize.h Minuit2/MnMinos.h Minuit2/MnParabola.h Minuit2/MnParabolaFactory.h Minuit2/MnParabolaPoint.h Minuit2/MnParameterScan.h Minuit2/MnPlot.h Minuit2/MnPosDef.h Minuit2/MnPrint.h Minuit2/MnRefCountedPointer.h Minuit2/MnReferenceCounter.h Minuit2/MnScan.h Minuit2/MnSeedGenerator.h Minuit2/MnSimplex.h Minuit2/MnStrategy.h Minuit2/MnTiny.h Minuit2/MnTraceObject.h Minuit2/MnUserCovariance.h Minuit2/MnUserFcn.h Minuit2/MnUserParameterState.h Minuit2/MnUserParameters.h Minuit2/MnUserTransformation.h Minuit2/MnVectorTransform.h Minuit2/ModularFunctionMinimizer.h Minuit2/NegativeG2LineSearch.h Minuit2/Numerical2PGradientCalculator.h Minuit2/ParametricFunction.h Minuit2/ScanBuilder.h Minuit2/ScanMinimizer.h Minuit2/SimplexBuilder.h Minuit2/SimplexMinimizer.h Minuit2/SimplexParameters.h Minuit2/SimplexSeedGenerator.h Minuit2/SinParameterTransformation.h Minuit2/SqrtLowParameterTransformation.h Minuit2/SqrtUpParameterTransformation.h Minuit2/StackAllocator.h Minuit2/VariableMetricBuilder.h Minuit2/VariableMetricEDMEstimator.h Minuit2/VariableMetricMinimizer.h Minuit2/VectorOuterProduct.h TMinuit2TraceObject.h /mnt/build/workspace/root-pullrequests-build/root/math/minuit2/inc/LinkDef.h ; - [2020-10-25T10:36:13.979Z] /mnt/build/workspace/root-pullrequests-build/build/include/Minuit2/MnPrint.h:130:69: error: use of undeclared identifier 't' ; - [2020-10-25T10:36:13.979Z] /mnt/build/workspace/root-pullrequests-build/build/include/Minuit2/MnPrint.h:132:24: error: no member named 'Warning' in 'ROOT::Minuit2::MnPrintLevel' ; - [2020-10-25T10:36:13.979Z] /mnt/build/workspace/root-pullrequests-build/build/include/Minuit2/MnPrint.h:133:71: error: use of undeclared identifier 't' ; - [2020-10-25T10:36:13.979Z] /mnt/build/workspace/root-pullrequests-build/build/inc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-716125314:5235,Simpl,SimplexParameters,5235,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-716125314,1,['Simpl'],['SimplexParameters']
Usability," No FPE/crash. ### To Reproduce; simplex.cxx . ```cpp; #include ""Minuit2/FunctionMinimum.h""; #include ""Minuit2/MnUserParameterState.h""; #include ""Minuit2/MnPrint.h""; #include ""Minuit2/MnMigrad.h""; #include ""Minuit2/MnSimplex.h""; #include ""Minuit2/FCNBase.h"". #include <fenv.h>. using namespace ROOT::Minuit2;. class TestChi2 : public ROOT::Minuit2::FCNBase; {; public:; TestChi2() {}; ~TestChi2() {}; virtual double Up() const {return 1.0;}; virtual double operator () (const std::vector<double> &a) const; {; return std::pow(a.at(0)-0.11,2)+std::pow(a.at(1)-0.5,2)/100.0;; }; };. int main(int argc, char ** argv); {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; MnUserParameters fit_parameters;; fit_parameters.Add(""A"",0.118,0.01,0,1);; fit_parameters.Add(""B"",0.5,0.1,0.1,100.0);; fit_parameters.Fix(""A"");; fit_parameters.Fix(""B"");; TestChi2* FULL= new TestChi2();; MnUserParameters temp_fit_parameters=fit_parameters;; MnMigrad migrad0(*FULL, temp_fit_parameters); ; FunctionMinimum min_migrad0 = migrad0(); // OK; MnSimplex simplex0(*FULL, temp_fit_parameters);; FunctionMinimum min_simplex0 = simplex0(); // FPE; exit(0);; }; ```; ```; g++ simplex.cc -o simplex.exe $(root-config --glibs --cflags) -lMinuit2; ./simplex.exe; ```; results in . ```; The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 ROOT::Minuit2::SimplexBuilder::Minimum (this=0x7ffcf9555c58, mfcn=..., seed=..., maxfcn=200, minedm=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/SimplexBuilder.cxx:48; #6 0x00007f045c93e1cd in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=<optimized out>, mfcn=..., gc=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6775:1251,simpl,simplex,1251,https://root.cern,https://github.com/root-project/root/issues/6775,1,['simpl'],['simplex']
Usability," `FieldDescriptors` is used elsewhere in the code (see improvements in API client code in 222a412). It also removes move-only semantics on `RFieldDescriptor` (my eventual intent is to remove move-only semantics on all `Descriptors`). `RFieldDescriptor` is made up of value-types only, so there are no resources to worry about. . For merging `NTuples`, we need to copy many descriptors (possibly with some small adjustments). ; With move-only semantics, we'd have to implement a `Clone` method for `RFieldDescriptor`. ; This is disadvantageous compared to relying on value semantics. `Clone`, while conceptually simple, is additional code to maintain.; * If we ever add fields to the class, Clone could be buggy (missing the added field); In contrast, the copy constructor will never miss any fields. ; * Move-only object lifetimes are non-trivial to reason about, we increase the risk of introducing UB by relying on a moved-from object, etc. . Regarding performance concerns (`RFieldDescriptor` has a vector member), I think C++ helps us here with Return Value Optimization and copy elision (simplified example here: https://godbolt.org/z/FwmKaD). . The high-level changes are: ; * define default values for a field descriptor; * remove move-only restriction on `RFieldDescriptor`; * implement a builder class for `RFieldDescriptor` to make construction (and using `RNTupleDescriptorBuilder`) more explicit. ; </details>. We introduce a new type, `RDanglingFieldDescriptor`, that supports the builder pattern for field descriptor values, e.g. ; ```c++; RFieldDescriptor fieldDesc = RDanglingFieldDescriptor(); .FieldId(1); .FieldName(""some_field""); .Structure(ENTupleStructure::kCollection); .UnwrapDescriptor(); ; ```. Dangling descriptors let us modify all field descriptor information except for relationship information (i.e. they have no idea about field parents or children). They are meant to be used for building new `RNTuples` through `RNTupleDescriptorBuilder` or during a merge operation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5934:1771,simpl,simplified,1771,https://root.cern,https://github.com/root-project/root/pull/5934,1,['simpl'],['simplified']
Usability," a segfault for non-debug builds):. ```cpp; #include <TTree.h>; #include <TFile.h>; #include <TApplication.h>. int main(); {; //TApplication app(""app"", nullptr, nullptr);; TFile *outputFile = new TFile(""output.root"", ""RECREATE"");. TTree *tree = new TTree(""tree"", ""treeliberated tree"");; outputFile->Write();. tree->StartViewer();. //app.Run();; outputFile->Close();; }; ```. ```; #8 0x00007fd6cf22b8c2 in TGCompositeFrame::TGCompositeFrame (this=0x56036dc34a10, p=0x0, w=10, h=10, options=3, back=0) at ../../../root_dbg/gui/gui/src/TGFrame.cxx:853; #9 0x00007fd6cf22d4cc in TGMainFrame::TGMainFrame (this=0x56036dc34a10, p=0x0, w=10, h=10, options=2) at ../../../root_dbg/gui/gui/src/TGFrame.cxx:1430; #10 0x00007fd6d64b9a6c in TTreeViewer::TTreeViewer (this=0x56036dc34a10, tree=0x56036d05df80) at ../../../root_dbg/tree/treeviewer/src/TTreeViewer.cxx:349; #11 0x00007fd6d809e059 in ?? (); #12 0x000056036c1be340 in ?? (); #13 0x000056036c1be340 in ?? (); #14 0x000056036dc34a10 in ?? (); #15 0x000056036dc34a10 in ?? (); #16 0x00007fff775fd220 in ?? (); #17 0x00007fff775fd3d8 in ?? (); #18 0x00007fff775fdc20 in ?? (); #19 0x00007fff775fd3f8 in ?? (); #20 0x00000001775fd3e0 in ?? (); #21 0x0000000000000000 in ?? (); ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The crash is due to a nullptr dereference in `TGCompositeFrame::TGCompositeFrame` (`fParent` is null), which in turn is caused by a failed check in `TGWindow::TGWindow` at `TGWindow.cxx:54`:. ```; if (!p && gClient) {; p = gClient->GetRoot();; }; ```. In the condition above, if the user created no `TApplication`, `gClient` is false-y. Rather than crash and burning, we could detect the situation and produce a helpful error message. ### Additional context; <!--; Add any other context about the problem here.; -->. At least [one user](https://root-forum.cern.ch/t/break-segmentation-violation-for-a-compiled-program/42022/12) could have used a better error message :smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6743:1447,clear,clear,1447,https://root.cern,https://github.com/root-project/root/issues/6743,1,['clear'],['clear']
Usability," add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have a model containing a `RooRealSumPdf` which wraps a `RooAbsReal` with an analytical integral (I tested with `RooGaussModel` and `RooPolyVar`). One of the parameters of the `RooAbsReal` is a function of the actual fit parameter (a `RooProduct` containing a `RooRealVar` for example).; When using batchmode, in the computation of the integral of the `RooAbsReal` (which is internal to the `RooRealSumPdf`, since it overrides `analyticalIntegralWN`), the value of the transformed parameter is not synced with the changes of the `RooRealVar` it contains, leading to a wrong integral.; Inspecting the `RooFitDriver` contents shows that the dataMap entry corresponding to the transformed parameter has the correct value, it's just the integral which uses the wrong one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Integral uses correct parameters. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testIntegralDesync() {; using namespace RooFit;; RooRealVar x(""x"", """", 0, 1);; ; RooRealVar par(""par"", """", -0.005, -5, 5);; RooProduct par_mod(""par_mod"", """", RooArgSet(par, RooConst(10)));; ; // RooPolyVar fn(""fn"", """", x, RooArgList(RooConst(1), par_mod));; // RooRealSumPdf pdf(""pdf"", """", fn, RooConst(1));; ; RooGaussModel gm(""gm"", """", x, RooConst(0), RooConst(0.001));; RooFormulaVar formula(""formula"", ""exp(-@0/@1)"", RooArgList(x, par_mod));; auto fn = gm.convolution(&formula, &x);; RooRealSumPdf pdf(""pdf"", """", *fn, RooConst(1));; ; auto data = pdf.generate(x, NumEvents(1));; ; auto nllBase = pdf.createNLL(*da",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11578:1259,clear,clear,1259,https://root.cern,https://github.com/root-project/root/issues/11578,1,['clear'],['clear']
Usability," addition to disabling the banner, there should be some additional action to preserve the copyright and attribution to Wouter and David in a more useful manner, as well as update it to reflect the huge amount of work that has happened since 2013 (here I would suggest a [`CITATION.cff` file](https://citation-file-format.github.io/). I also think ROOT should get one too, but that's another Issue.). As Wouter doesn't appear to have a GitHub account (**edit**: I'm wrong, he's @wverkerke), I'll tag @egpbos as a public member of the RooFit development team (apologies if I should have tagged someone else) as well as @dkirkby to see if they have any particular thoughts on the matter. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. To trigger the RooFit banner simply run any piece of code that uses any part of RooFit. Example:. ```console; $ python -c 'from ROOT import RooFit' # Get banner. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. For the examples I've shown above are using ROOT `v6.24/06` built from source. ```console; $ root --version; ROOT Version: 6.24/06; Built for linuxx8664gcc on Feb 18 2022, 00:26:00; From tags/v6-24-06@v6-24-06; ```. ### Additional context; <!--; Add any other context about the problem here.; -->. * [ROOT Forum: How to switch off RooFit banner?](https://root-forum.cern.ch/t/how-to-switch-off-roofit-banner/6357/4); * [ROOT Forum: RooFit Banner - can we switch it off somehow?](https://root-forum.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9954:4260,simpl,simply,4260,https://root.cern,https://github.com/root-project/root/issues/9954,1,['simpl'],['simply']
Usability," and execute function [file](w/o extension); Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension); E <[file]>: open editor and evaluate {statements} in the file; Load/Unload: L [file] : load [file]; Lk [file] : keep [file] if already loaded, else load it; La [file] : reload all files loaded after [file]; U [file] : unload [file]; C [1|0] : copy source to $TMPDIR (on/off); undo : undo previous declarations; lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN); preproc : toggle preprocessing of interpreted files; Monitor: g <[var]> : list global variable; l <[var]> : list local variable; proto <[scope]::>[func] : show function prototype; class <[name]> : show class definition (one level); Class <[name]> : show class definition (all level); typedef <name> : show typedefs; function : show interpreted functions; macro : show macro functions; template : show templates; include : show include paths; file : show loaded files; where : show current file position; security : show security level; refcount : reference count control on/off; garbage : show garbage collection buffer; Garbage : Do garbage collection; cover [file] : save trace coverage; return [val] : return undefined symbol value; Run: S : step over function/loop; s : step into function/loop; i : ignore and step over; c <[line]>: continue <to [line]>; e : step out from function; f [file] : select file to debug; b [line] : set break point; db [line] : delete break point; a [assert]: break only if assertion is true; O [0~4] : Set bytecode compiler mode; debug : bytecode status display on/off; asmstep : bytecode step mode on/off; status : show bytecode exec flags; dasm : disassembler; except : toggle exception catching; Quit: q : quit cint; qqq : quit cint - mandatory; qqqqq : exit process immediately; qqqqqqq : abort process; save : call emergency routine to save important data. ROOT special commands.; ===========================================================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191:3741,undo,undo,3741,https://root.cern,https://github.com/root-project/root/issues/10191,2,['undo'],['undo']
Usability," be added to the Users' Guide.; For example bases in the scenario:. ```cpp; class Position { /* point in 3D space */; public:; Position(float x, float y, float z);; // get Cartesian coordinates; float x();; float y();; float z();; // get spherical coordinates; float r();; float phi();; float theta();; // get pseudorapidity; float eta();; };. class Hit : public Position { /* localized detector signal */; public:; Hit(float energy, float x, float y, float z);; // get energy and transverse energy; float e();; float et();; };; ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)?. * The next step is to consider collections of objects:. i) define. ```cpp; class Track { /* particle trajectory */. private:; std::vector< Hit > m_hits;. };; ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14540:1115,Simpl,Simplest,1115,https://root.cern,https://github.com/root-project/root/issues/14540,1,['Simpl'],['Simplest']
Usability," behavior; All options are documented, and outdated ones are removed. - [x] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md; - [x] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md; - [x] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb; - [x] .![shell]; - [x] .qqqqq; - [x] "" "" << metaString << ""R [user@]host[:dir] [-l user] [-d dbg] [script]\t- Launch process in a remote host\n""; - [x] "" "" << metaString << ""demo\t- Launch GUI demo\n""; - [x] "" "" << metaString << ""credits\t- Show credits\n""; - [x] "" "" << metaString << ""license\t- Show license\n""; - [x] CTRL+D also works as a way to exit; - [x] CTRL+C can interrupt; - [x] CTRL+Z pauses job; - [x] CTRL+L clear screen; - [x] CTRL+Del Ctrl Left Ctrl Right Ctrol Backspace https://github.com/root-project/root/pull/10091; - [x] CTRL+S for forward search https://github.com/root-project/root/issues/10137; - [x] .exit; - [x] .quit; - [x] .typedef; - [x] .include; - [x] Specify also a new command, e.g. .flags, to show ; - [x] .undo / .U to unload the last n input lines doesn't seem to work; - [x] .O1 to set the optimization level is implemented even if .help says it's not; - [x] Translate 0x1F code etc to key name; - [x] Clarify what .files and .fileEx and .stats mean. ### To Reproduce; `.?`. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/root-project/web/pull/764; https://github.com/root-project/root/pull/10055",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10065:1360,undo,undo,1360,https://root.cern,https://github.com/root-project/root/issues/10065,1,['undo'],['undo']
Usability," ch_data.AddFriend(treename, idfilepath). df = ROOT.RDataFrame(ch_data). return (df, ch_data); #------------------------------------------; def test():; #----------------------; #Make input; #----------------------; index = 0 ; l_tp_file = [] ; for val in range(0, 100, 10):; filepath = make_data(val); l_tp_file.append((index, filepath)); index+=1; #----------------------; #Merge; #----------------------; df, _ = get_df(l_tp_file, 'tree', id_column='id'); df.Display(['a', 'id'], -1).Print(); #df.Snapshot('tree', 'file.root'); #------------------------------------------; test(); ```. I will add `get_df` to my personal library. The approach seems safe and clean enough, however the return value needs to include the chain (i.e. _) because otherwise I get a crash. Which seems to indicate that the chain's reference is not kept inside the dataframe. So once the function returns, the chain is removed by the garbage collector and the dataframe does not have anything to save (the script above is self contained and you can try it yourself). That should not be right, if I tell the dataframe to use the chain, the chain should be kept alive by the dataframe. > ; > The simplest solution: with the upcoming `DefinePerSample` method you can solve this more easily, but the feature will only be merged in ROOT master in a few days ([PR here](https://github.com/root-project/root/pull/8841)). With `DefinePerSample` you could write something like this:; > ; > ```c++; > df.DefinePerSample(""index"", ""GetIndex(rdfsampleinfo_.AsString())""); > ```; > ; > where `rdfsampleinfo_.AsString()` will be of the form `<filename>/<treename>`. I expect to merge this feature in master today or tomorrow. So we would have to create a `GetIndex` function to extract from the ""filename/treename"" the index? Yes, that would make my code far simpler. However it might take months until that is available through CVMFS. In any case, the simpler our code gets, the better, fewer places for bugs to hide. Cheers and thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-932494638:4806,simpl,simplest,4806,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-932494638,3,['simpl'],"['simpler', 'simplest']"
Usability," every computer; program, no matter how complicated, executes a sequence of elementary; arithmetic operations (addition, subtraction, multiplication, division, etc.); and elementary functions (exp, log, sin, cos, etc.). By applying the chain; rule repeatedly to these operations, derivatives of arbitrary order can; be computed automatically, accurately to working precision, and using at; most a small constant factor more arithmetic operations than the original; program. AD is an alternative technique to symbolic and numerical differentiation.; These classical methods run into problems: symbolic differentiation leads; to inefficient code (unless done carefully) and faces the difficulty of; converting a computer program into a single expression, while numerical; differentiation can introduce round-off errors in the discretization; process and cancellation. Both classical methods have problems with; calculating higher derivatives, where the complexity and errors increase.; Finally, both classical methods are slow at computing the partial; derivatives of a function with respect to many inputs, as is needed for; gradient-based optimization algorithms. Automatic differentiation solves; all of these problems, at the expense of introducing more software; dependencies. This patch allows ROOT to interoperate with clad. Namely, users can ask; the interpreter to produce a derivative or a gradient to a known function. An illustrative example code for first order derivative:. root [0] #include ""Math/CladDerivator.h""; root [1] double my_pow2(double x) { return x*x; }; root [2] auto derivative_meta_obj = clad::differentiate(my_pow2, /*wrt 1-st argument*/0);; root [3] derivative_meta_obj.dump();; The code is: double my_pow2_darg0(double x) {; return (1. * x + x * 1.);; }; root [5] derivative_meta_obj.execute(1) // no iterations, at the cost of function call.; (double) 2.0000000. Learn more about clad at https://github.com/vgvassilev/clad. Patch by Aleksandr Efremov(@efremale) and me!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2378:2330,Learn,Learn,2330,https://root.cern,https://github.com/root-project/root/pull/2378,1,['Learn'],['Learn']
Usability," existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. When trying to compile a project against ROOT 6.26.04 sourced from CVMFS, cmake complains about nlohmann_json missing. ```; CMake Error at /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/Cmake/3.21.3/Linux-x86_64/share/cmake-3.21/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; Could not find a configuration file for package ""nlohmann_json"" that is; compatible with requested version ""3.10.5"". The following configuration files were considered but not accepted:. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1; /lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1. Call Stack (most recent call first):; /cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/cmake/ROOTConfig.cmake:114 (find_dependency); CMakeLists.txt:1 (find_package); ```. <!--; A clear and concise description of what the wrong behavior is.; -->; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. Use a CentOS7 machine and setup ROOT 6.26.04 from CVMFS; (/cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/bin/root). Create a CMakeLists.txt file with the following contents:. `find_package( ROOT REQUIRED COMPONENTS Core RIO MathCore Matrix HistFactory RooFitCore RooFit Hist RooStats Minuit2 Minuit )`. Go to an empty folder, and call `cmake` on that CMakeLists.txt file. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version: 6.26.04; 2. Operating system: CentOS7; 3. How you obtained ROOT: ```setupATLAS; lsetup ""root 6.26.04-x86_64-centos7-gcc11-opt""```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10963:1214,clear,clear,1214,https://root.cern,https://github.com/root-project/root/issues/10963,2,['clear'],['clear']
Usability," faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots.; Problem appears when I make plo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474:1148,clear,clear,1148,https://root.cern,https://github.com/root-project/root/issues/8474,1,['clear'],['clear']
Usability," for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. ; In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off).; The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; void test_roosimcrash() {; RooRealVar x(""x"", """", 0, 1);; RooRealVar rnd(""rnd"", """", 0, 1);; RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);; catThr.addThreshold(1./3, ""v0"", 0);; catThr.addThreshold(2./3, ""v1"", 1);; ; RooRealVar m(""m"", """", 0.5, 0, 1);; RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));; RooUniform rndPdf(""rndPdf"", """", rnd);; RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));; ; auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));; auto cat = dynamic_cast<RooCategory*>(ds-",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10473:999,clear,clear,999,https://root.cern,https://github.com/root-project/root/issues/10473,1,['clear'],['clear']
Usability," in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found?. Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option?. This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF, not OTF. Perhaps we should look for another library ... or at least a new TTF/OTF parser -- I don't know much about low-level font things so this maybe already exists in root?. I understand this is not all perfect -- but at this point our priority is to get something usable in for the existing REve applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2161600927:2271,usab,usable,2271,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2161600927,1,['usab'],['usable']
Usability," ls -l /Library/Developer/CommandLineTools/SDKs/; total 0; lrwxr-xr-x 1 root wheel 14 17 Sep 14:08 MacOSX.sdk -> MacOSX15.0.sdk; drwxr-xr-x 7 root wheel 224 17 Sep 14:10 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 17 Sep 14:07 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 17 Sep 14:09 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 17 Sep 14:07 MacOSX15.sdk -> MacOSX15.0.sdk; sftnight@macphsft34 ~ % clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.1.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/sftnight -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -I/usr/local/include -internal-isystem /Library/Developer/CommandLine",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:18560,clear,clear-ast-before-backend,18560,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['clear'],['clear-ast-before-backend']
Usability," make a joint debug session.; > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.; > > ; > > ; > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.; > ; > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. ```C++; if(!m_Opts.CompilerOpts.CUDADevice); ExeRes = m_Executor->runStaticInitializersOnce(T);; ```. I need to verify, if this is a good solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-777052629:3803,simpl,simply,3803,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-777052629,1,['simpl'],['simply']
Usability," meeting on 25/11/2022 (and probably also related to https://github.com/root-project/root/pull/11628#discussion_r1023123773), this pull request adds support for per field post-read callback functions to be invoked after reading a value object.; Such callbacks can be used to inspect/modify the value object after reading, e.g. to initialize transient members. The conclusion of a previous discussion is that we should not allow views on fields with a mappable type and that have a read callback.; The signature of a read callback function is; ```c++; void callback_func(RFieldValue &);; ```. ## Changes of fixes:; - Fields with a mappable type need to be distinguished from ""simple"" fields (i.e. those that have no additional actions after reading). Thus, the `kTraitMappable` trait is introduced in this PR; it is set for fields of fundamental types that can be directly mapped via `RField<T>::Map()`. These fields also map as-is to a single column.; The `fIsSimple` member now takes a different meaning: a field is simple if it is both mappable (i.e. kTraitMappable) and has no post-read callback.; - Read callbacks are managed via the _protected_ member functions `RFieldBase::{Add,Remove}ReadCallback()`.; - `RFieldBase::Read()` calls the read callbacks as appropriate. The fast path still only calls `fPrincipalColumn->Read()`.; Callbacks should be relatively rare; thus, the branch is marked as `R__unlikely()`, as it provides a small performance increase for non-mappable types that have no read callback.; - As discussed, views are disallowed on fields with a mappable type and a read callback. ## Experimental measurements; The overhead of the changes in this PR was measured in a synthetic test case. The schema is comprised of 4 fields of fundamental data types + 2 fields referring to user-defined `struct`s (containing 4 and 8 members of fundamental data types, respectively). The test program reads all fields across 10000k entries. The file lies in a tmpfs. The overhead has been measu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11731:1080,simpl,simple,1080,https://root.cern,https://github.com/root-project/root/pull/11731,1,['simpl'],['simple']
Usability," might help us fixing this issue.; ===========================================================; #5 ROOT::Minuit2::SimplexBuilder::Minimum (this=0x7ffcf9555c58, mfcn=..., seed=..., maxfcn=200, minedm=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/SimplexBuilder.cxx:48; #6 0x00007f045c93e1cd in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=<optimized out>, mfcn=..., gc=..., seed=..., strategy=..., maxfcn=200, toler=<optimized out>) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:166; #7 0x00007f045c93c737 in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=0x7ffcf9555c48, fcn=..., st=..., strategy=..., maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:120; #8 0x00007f045c905c51 in ROOT::Minuit2::MnApplication::operator() (this=0x7ffcf9555b00, maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/MnApplication.cxx:57; #9 0x000000000041068c in main (); ===========================================================; ```. ### Setup; CentOS7/gcc-4.8.5 root 6.22 from EPEL . ### Additional context; Not a personal priority of me, so it is unlikely that I will provode a patch in the next days.; However, I can briefly describe how the FPE occurs.; It occurs on line 48 in SimplexBuilder when all parameters are fixed and 1./double(n) is always 1/0. So it is just plain crash, not an FPE.; To avoid it the Simplex builder should not be called for the case when there are no free parameters but instead, ModularFunctionMinimizer::Minimize() should call FCn just once and return ""current state"". And yes, just preempting a question about a fit with zero free parameters. Yes, it is very useful. ; Imagine a set of different models fitted to the data using the same codebase. Some models have 2 free parameters, others 3, but some have 0. And for the last category because if this bug one cannot use simplex from ROOT. (I use migrad).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6775:3035,Simpl,SimplexBuilder,3035,https://root.cern,https://github.com/root-project/root/issues/6775,3,"['Simpl', 'simpl']","['Simplex', 'SimplexBuilder', 'simplex']"
Usability," need to be rebased anyway), but as a way to get a preliminary review of this code. Purpose: HistFactory and RooWorkspace should be able to import and export their contents from and to text files, using a common JSON/YAML syntax. Method: The code has been written in such a way as to. - Minimize the amount of changes to existing code; - Make it as easy as possible for users to add new serializers/deserializers for new or existing classes; - Provide a clean interface as much as possible. Dependencies: The code requires a JSON/YML parser and emitter.; ROOT already includes the nlohmann JSON module, which is used as a default for the interface.; However, for development, I have been using the rapidyml package, which also supports reading and writing of YML files. As the code for this already exists, I have kept this in as an optional dependency. When available, it replaces the nlohmann interface and then also provides YML reading and writing capabilities, while the default is limited to JSON. Please review:. - general coding style; - packaging: Should these new files continue to live in RooStats, or should they go to a new subpackage of RooFit?; - code placement: Is the way I split the functionality up into different source files acceptable, or would you wish for a smaller/higher granularity of the splitting?; - build system: Is the way I encoded the optional dependency acceptable?; - class and function names: Are the names of classes and functions acceptable, or should things be renamed to be more conformant?. Please don't review yet:; - lack of functionality - more things will be added over time; - individual violations of the style guide (e.g. missing spaces or newlines) . Please specifically suggest where documenation should be added!; Does every function need a docstring, or just the ones announced in header files? Do these docstrings need to exist also for the Interface class added, and also for the implementations of that, or only for the RooFit-side of the code?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5151:1816,guid,guide,1816,https://root.cern,https://github.com/root-project/root/pull/5151,1,['guid'],['guide']
Usability," non-existent bins. What is . ```; In [5]: binning.GetNBins(); Out [5]: 1001; In [6]: binning.FindBin(array.array(""d"", (1.2, 0.5, 0.5, 0.5, 0.5))); Out [6]: 1004; In [7]: binning.GetBinContent(1004); TKDTreeBinning::GetBinContent:0: RuntimeWarning: No such bin. Returning 0.; Info in <TKDTreeBinning::GetBinContent>: 'bin' is between 0 and 1001.; Out [7]: 0; ```; The specified coordinates should be well within the binning range - if I understand the method correctly, the binning range is a hyper-rectangle that envelops all the data points, correct?; ```; In [15]: for i in range(5):; ...: print(f""Dim {i} - min:{binning.GetDataMin(i)}, max: {binning.GetDataMax(i)}""); ...:; Dim 0 - min:0.9872230887413025, max: 1.5643738508224487; Dim 1 - min:0.279508501291275, max: 0.8602268695831299; Dim 2 - min:-0.9999595284461975, max: 0.9999838471412659; Dim 3 - min:-0.9999908804893494, max: 0.9998750686645508; Dim 4 - min:-1.0, max: 1.0000001192092896; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `FindBin()` should return a value within [0, `binning.GetNBins()` - 1]. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; - Download the ROOT file with the binning from [CERNBox](https://cernbox.cern.ch/index.php/s/86ZPwwpEStaiIdS); - Run the following in Python; ```python; import array; import ROOT; file = ROOT.TFile(""binning.root""); binning = file.Get(""TKDTreeBinning""); binning.FindBin(array.array(""d"", (1.2, 0.5, 0.5, 0.5, 0.5))); binning.GetBinContent(1004); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26/02; macOS 12.3.1; Homebrew install. ### Additional context; <!--; Add any other c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10784:1523,clear,clear,1523,https://root.cern,https://github.com/root-project/root/issues/10784,1,['clear'],['clear']
Usability," of all threads:; ===========================================================; #0 0x00007f86acb0fbf7 in __GI___wait4 (pid=18077, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f86acb0fd4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f86aca5509b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f86ae5282a1 in TUnixSystem::StackTrace() () from /home/tomas/ROOT/root_install/lib/libCore.so; #4 0x00007f86ae527c14 in TUnixSystem::DispatchSignals(ESignals) () from /home/tomas/ROOT/root_install/lib/libCore.so; #5 <signal handler called>; #6 0x00007f86ad4a0f34 in RooAbsArg::setAttribute(char const*, bool) () from /home/tomas/ROOT/root_install/lib/libRooFitCore.so; #7 0x00007f86abf40164 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #8 0x00007f86abf42e81 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelModel(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #9 0x00007f86abf57971 in RooStats::HistFactory::MakeModelAndMeasurementFast(RooStats::HistFactory::Measurement&, RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration const&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; ```. ### Reproducer. Unfortunately, I do not have a simple reproducer. But I can provide the XML files produced by the code if that helps?. ### ROOT version. ROOT Version: 6.31/01; Built for linuxx8664gcc on Nov 26 2023, 09:58:47; From remotes/origin/HEAD@v6-31-01-341-gab6cdd5dda. ### Installation method. build from source. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14225:3521,simpl,simple,3521,https://root.cern,https://github.com/root-project/root/issues/14225,1,['simpl'],['simple']
Usability," of what the wrong behavior is.; -->; When using the pythonization of _some_ `RooCmdArgs` together with the `RooArgSet` pythonization, the created set is dropped too early.; It does not always cause a segfault (depends on the `RooCmdArg`) but it is visible in `valgrind`.; I've seen this happen with `Minos`, `Slice`, `Project`, `Parameters` and SelectVar, while I tested `Conditional`, `Constrain`, `ExternalConstraints`, `Components` and `VisualizeError` and they show no issue (not even in `valgrind`). ; I _think_ the difference is wether the `RooArgSet` is stored as a `RooArgSet` in the `RooCmdArg` (works fine) or as a `TObject*` (dropped early).; I've also noticed that this happens only when you combine the two pythonizations, e.g. both; ```Python; model.fitTo(data, Minos = ROOT.RooArgSet(parameter)); model.fitTo(data, ROOT.RooFit.Minos({parameter})); ```; work fine, only; ```Python; model.fitTo(data, Minos = {parameter}); ```; is affected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No use after free. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). mu = ROOT.RooRealVar(""mu"", """", 0.5, 0, 1); gx = ROOT.RooGaussian(""gx"", """", x, mu, ROOT.RooFit.RooConst(0.2)); gy = ROOT.RooGaussian(""gy"", """", y, mu, ROOT.RooFit.RooConst(0.2)); g = ROOT.RooProdPdf(""g"", '', [gx, gy]). # works; condg1 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = (gy, {y})); condg2 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = ({gy}, y)); condg3 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = ({gy}, {y})). data = g.generate({x,y}, NumEvents = 10000). # often segfaults, valgrind reports problems; g.fitTo(data, Minos = {mu}, Prin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11421:1406,clear,clear,1406,https://root.cern,https://github.com/root-project/root/issues/11421,1,['clear'],['clear']
Usability, on root-ubuntu-2204-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163311/console).; ### Errors:; - [2023-01-02T13:46:22.128Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/src/RPageStorageDaos.cxx:307:80: error: no matching function for call to ‘ROOT::Experimental::Detail::RDaosContainer::ROidDkeyPair::ROidDkeyPair(&lt;brace-enclosed initializer list&gt;)’ ; - [2023-01-02T13:46:22.128Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/src/RPageStorageDaos.cxx:701:80: error: no matching function for call to ‘ROOT::Experimental::Detail::RDaosContainer::ROidDkeyPair::ROidDkeyPair(&lt;brace-enclosed initializer list&gt;)’ . ### Warnings:; - [2023-01-02T13:41:26.055Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2023-01-02T13:41:26.575Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-02T13:41:26.575Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4042:43: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-02T13:42:45.530Z] /home/sftnight/build/workspace/root-pullrequests-build/root/io/io/src/TEmulatedMapProxy.cxx:144:25: warning: bitwise operation between different enumeration types ‘EProperty’ and ‘TGenCollectionProxy::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-02T13:42:45.530Z] /home/sftnig,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11874#issuecomment-1368960482:1011,simpl,simple,1011,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1368960482,1,['simpl'],['simple']
Usability, on root-ubuntu-2204-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163670/console).; ### Errors:; - [2023-01-10T07:30:15.222Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/src/RPageStorageDaos.cxx:307:80: error: no matching function for call to ‘ROOT::Experimental::Detail::RDaosContainer::ROidDkeyPair::ROidDkeyPair(&lt;brace-enclosed initializer list&gt;)’ ; - [2023-01-10T07:30:15.222Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/src/RPageStorageDaos.cxx:701:80: error: no matching function for call to ‘ROOT::Experimental::Detail::RDaosContainer::ROidDkeyPair::ROidDkeyPair(&lt;brace-enclosed initializer list&gt;)’ . ### Warnings:; - [2023-01-10T07:26:17.045Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2023-01-10T07:26:17.322Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-10T07:26:17.322Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4042:43: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-10T07:26:46.426Z] /home/sftnight/build/workspace/root-pullrequests-build/root/io/io/src/TEmulatedMapProxy.cxx:144:25: warning: bitwise operation between different enumeration types ‘EProperty’ and ‘TGenCollectionProxy::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-10T07:26:46.426Z] /home/sftnig,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11874#issuecomment-1376839076:1011,simpl,simple,1011,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1376839076,1,['simpl'],['simple']
Usability," oper=...); ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```; <!-- ### Pipe Supports Sintimid ### -->; <material name =""Pipe:Sintimid"">; <D type=""density"" value=""1.43"" unit=""g/cm3""/>; <composite ref=""C"" n=""18""/>; <composite ref=""O"" n=""5""/>; <composite ref=""N"" n=""2""/>; </material>. <!--### Pipe Supports Sintimid15G ###-->; <material name =""Pipe:Sintimid15G"">; <D type=""density"" value=""1.42"" unit=""g/cm3""/>; <fraction ref=""Pipe:Sintimid"" n=""0.85""/>; <fraction ref=""C"" n=""0.15""/>; </material>; ```; where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior; No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:; ```; void test_mixture(); {; TGeoManager *geom = new TGeoManager("""","""");; TGeoElementTable *table = gGeoManager->GetElementTable();; TGeoElement *c = table->GetElement(6);; TGeoElement *n = table->GetElement(7);; TGeoElement *o = table->GetElement(8);; . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);; double cc = 18 * c->A();; double cn = 2 * n->A();; double co = 5 * o->A();; double total = cc + cn + co;; mix->AddElement(c, cc/total);; mix->AddElement(n, cn/total);; mix->AddElement(o, co/total);; mix->Print();. TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);; mix2->AddElement(mix, 0.85);; mix2->AddElement(c, 0.15);; mix2->Print();; std::cout << ""Number of elements:"" << mix2->GetNelements() << '\n';; for(int i=0; i< mix2->GetNelements(); i++) {; std::cout << ""Element "" << i << "": "" << mix2->GetElement(i)->GetName() << '\n'; ; }; mix2->ComputeDerivedQuantities();; }; ``` ; reproduces the segfault with v6-26-00-patches, whereas 6.24.06 runs fine. ### Setup; 1. ROOT v6-26-00-patches from SFT nightlies: (/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11272:1915,simpl,simple,1915,https://root.cern,https://github.com/root-project/root/issues/11272,1,['simpl'],['simple']
Usability," public User::BeamFlux; }; ```. We had a crash during BuildOld for User::BeamFlux. ```; User::TBaseObject triggers replacement routines.; reaches NTrackerVtx; calls (unnecessary) TStreamerBase::InitStreaming() and BuildOld for BeamFlux; in BuildOld look at base User::TrackerVtxBase (and record pointer value in baseclass); calls Init on the TStreamerElement base; this triggers the creation of the TClass for User::TrackerVtxBase; but BuildOld kept a stale pointer to the old TClass (was baseclass variable).; ```. Solution: replace raw pointer by a TClassRef. TCompInfo::Update did a TClass::GetClass for all type that were not classes :(; Usually it is just a waste of time.; In this case, one such type is User::TContext::Time (an enum) use as part; of User::TContext .. Consequently, before the dictionary TClass for User::TContext was constructed,; another class requested the update of the emulated StreamerInfo for the (still); emulated User::TContext, this in turn provoked the (unnecessary) call to; TClass::GetClass on ‘User::TContext::Time’ which provoked the creation of; the TClass for User::TContext … one of the steps is to absorb the existing; StreamerInfo (including the one being updated) and clear them (i.e. delete; the TCompInfo array) … upon return the result of the TClass::GetClass (a nullptr); is stored in deleted memory. Solution: Don’t call TClass::GetClass on non-type. ```; User::TDatum is loaded; provokes update of a StreamerInfo with a TTrueParticle; *spurrious* InitStreaming provoke need for TTrueParticle TClass; start consuming the TTrueParticle TProtoClass; needs the TTrueVertex TClass; provokes update of a StreamerInfo with a TBaseObject; *spurrious* InitStreaming provoke need for TBaseObject TClass; needs the TTrueParticle TClass; Consumes the TTrueParticle TProtoClass; return fine with a good TTrueVertex TClass; continue using the already “cleared” TTrueParticle TProtoClass; ```. Solution: significant update of TStreamerElement::Update and TStreamerB",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4389:1640,clear,clear,1640,https://root.cern,https://github.com/root-project/root/pull/4389,2,['clear'],['clear']
Usability," special column `rdfentry_`, despite the name, does not correspond to the global TChain entry number _in MT runs_ (see also [the relevant docs](https://root.cern/doc/master/classROOT_1_1RDataFrame.html#helper-cols)). This is surprising for users (hence the big warning in the docs linked above) and makes it unnecessarily difficult to e.g. attach a numpy array as an additional column (because it's hard to index into it correctly without stable global row numbers). We could instead make `rdfentry_` always match the ""real"" (global) entry number in the dataset -- if only each MT task knew the offset of the current tree w.r.t. all other trees in the chain. ### Proposed solution . - have TTreeProcessorMT tell each MT task which tree it is processing w.r.t. to the global chain (`#1`, `#2`, `#3`, ...); - have each task calculate its tree's offset by going over a list of tree entry numbers, filling missing values as needed (the list of entry numbers would be implemented as an array of fixed size `nTrees` with atomic elements. This plus the fact that threads only need to write into the atomic elements if they see the value has not been calculated yet should minimize thread contention) . ### Other solution considered. - we could always build a global TChain, for every task, and always use global entry numbers everywhere. However this would require that TTreeProcessorMT reads out the number of entries in each tree before the tasks even start, because it first needs to come up with entry ranges for each task. My intuition is that this would bring a larger performance impact than the proposed solution: we know from DistRDF that the (redundant) opening O(1k) remote files at startup is a significant cost.; - we could do nothing: `rdfentry_` would be unstable and it could not be relied upon to e.g. index into manually added ""friend columns"" or to fill TEntryLists (like [this user would have liked to do](https://root-forum.cern.ch/t/accessing-entry-information-using-rdataframe/52378))",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12190:1539,intuit,intuition,1539,https://root.cern,https://github.com/root-project/root/issues/12190,1,['intuit'],['intuition']
Usability," sprintf(char *string,char *format,arglist,...);; int fscanf(FILE *fp,char *format,arglist,...);; int scanf(char *format,arglist,...);; int sscanf(char *string,char *format,arglist,...);; (C++ compiled) class TClass public:TDictionary //Dictionary containing class information; (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects; (C++ compiled) class TMemberInspector //ABC for inspecting class data members; (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title); (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics; (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup; (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information; (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information; (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information; (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion; (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion; (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method); (C++ compiled) class TQObject //Base class for object communication mechanism; (C++ compiled) class TFunction public:TDictionary //Dictionary for global function; (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers; (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries; (C++ compiled) class TTask public:TNamed //Base class for tasks; (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action.; (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo; (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084824531:2809,undo,undo,2809,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531,1,['undo'],['undo']
Usability," the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide function states() with direct access to map of category names; to category numbers.; - Add functions getCurrent{Index|Label} to make clear that they access; class state. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change. Changes in special category classes:; - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories.; - Clean up header of RooMappedCategory. Outline as much as possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5502:2542,clear,clear,2542,https://root.cern,https://github.com/root-project/root/pull/5502,2,['clear'],"['clear', 'clearing']"
Usability," the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```; struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };; .L lib/libStrip.so ; Marker m2;; gInterpreter->AutoParse(""SiStripCluster"");; .undo 2; SiStripCluster obj;; ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```; struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };; .L lib/libStrip.so ; SiStripCluster obj;; ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there?. It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:; ```; commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms); Author: Philippe Canal <pcanal@fnal.go",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2852#issuecomment-434478365:1014,undo,undo,1014,https://root.cern,https://github.com/root-project/root/pull/2852#issuecomment-434478365,1,['undo'],['undo']
Usability," to the Linux version, likely due to an unaccounted screen scaling factor. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; In the GL geometry viewer, the tab ""Guides/Camera center"" allows to ""Pick center"" with the mouse, which will change the default center of view to the 2D mouse coordinates of the clicked point on the 3D coordinates of the drawn model. The ""depth"" is chosen such that the point on the drawn object surface below the mouse is picked. For ray-tracing, expect a correct ""solid"" drawing of the drawn volume. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Run the macro `$ROOTSYS/tutorials/geom/rootgeom.C; root[0] gGeoManager->GetVolume(""R"")->Draw(""ogl"");; Rotate the drawn ""R"", then go to tab ""Guides"" and select [Camera center]/Show; A marker should appear in the default center of view.; Now click on ""Pick center"", then click somewhere on the drawn letter ""R""; On linux, the center of view moves on the surface of ""R"" just below the mouse, and you can freely rotate about this; On mac, the center moves elsewhere than below the mouse position, showing that the device coordinates are wrongly mapped onto the scene coordinates. ; <img width=""848"" alt=""center_pick_mac"" src=""https://user-images.githubusercontent.com/18400453/213129268-db36b3b4-7ffb-4f65-9d9d-6051296cabf4.png"">. for ray-tracing testing:; root[0] gGeoManager->GetVolume(""R"")->Raytrace();; Linux:; ![r_ray_linux](https://user-images.githubusercontent.com/18400453/213126543-d15c9edb-fb94-460b-855b-9e66256060ad.png); MacBook Air (M1, 2020); <img width=""478"" alt=""r_ray_mac"" src=""https://user-images.githubusercontent.com/18400453/213126640-8c7e6a84-0178-4102-8c93-ec6ed938cbd2.png"">. ### Setup; <!--; 1. ROOT version; 2. Operati",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12035:1827,Guid,Guides,1827,https://root.cern,https://github.com/root-project/root/issues/12035,1,['Guid'],['Guides']
Usability, violation; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f6cdd6c560c in waitpid () from /lib64/libc.so.6; #1 0x00007f6cdd642f62 in do_system () from /lib64/libc.so.6; #2 0x00007f6cdecce102 in TUnixSystem::StackTrace() () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #3 0x00007f6cdecd061c in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #4 <signal handler called>; #5 0x0000000001209080 in ?? (); #6 0x00007f6cdec52005 in TList::FindObject(TObject const*) const () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #7 0x00007f6cdec5237c in TList::Clear(char const*) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #8 0x00007f6cdec50a01 in THashTable::Clear(char const*) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #9 0x00007f6cdec504dd in THashList::Clear(char const*) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #10 0x00007f6cdec9d1a7 in TListOfDataMembers::Unload() () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #11 0x00007f6cdec7f2d0 in TClass::SetUnloaded() () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15964#issuecomment-2202499805:1425,Clear,Clear,1425,https://root.cern,https://github.com/root-project/root/issues/15964#issuecomment-2202499805,1,['Clear'],['Clear']
Usability,![screenshot](https://user-images.githubusercontent.com/249404/51119045-173f1980-1812-11e9-9195-9cbc431d1709.png); I get this even after clearing the cache.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3235#issuecomment-454025552:137,clear,clearing,137,https://root.cern,https://github.com/root-project/root/pull/3235#issuecomment-454025552,1,['clear'],['clearing']
Usability,""", [] { return 1; }).Histo1D<int>(""x"");; @@ -250,7 +254,7 @@ TEST(RDFVary, VariationsForWithNoVariations); EXPECT_EQ(hs.GetKeys(), std::vector<std::string>{""nominal""});; }; ; -TEST(RDFVary, GetVariations); +TEST_P(RDFVary, GetVariations); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 0; }).Define(""y"", [] { return 10; });; auto df2 = df.Vary(""x"", SimpleVariation, {}, 2); @@ -269,7 +273,7 @@ TEST(RDFVary, GetVariations); ""Variations {x:0, x:1} affect column x\nVariations {xy:0, xy:1} affect columns {x, y}\n"");; }; ; -TEST(RDataFrameInterface, VaryFriend); +TEST(RDFVary, VaryFriend); {; int x = 0;; TTree main(""main"", ""main"");; @@ -295,7 +299,7 @@ TEST(RDataFrameInterface, VaryFriend); EXPECT_EQ(sum2vars[""var:0""], 43);; }; ; -TEST(RDFVary, ResultMapIteration); +TEST_P(RDFVary, ResultMapIteration); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 0; }).Vary(""x"", SimpleVariation, {}, 2);; auto s = df.Sum<int>(""x"");; @@ -327,7 +331,7 @@ TEST_P(RDFVary, VaryDefinePerSample); EXPECT_EQ(ss[""x:1""], 2 * 10);; }; ; -TEST(RDFVary, SaveGraph); +TEST_P(RDFVary, SaveGraph); {; ROOT::RDataFrame df(1);; auto c = df.Define(""x"", [] { return 0; }); @@ -622,7 +626,7 @@ TEST_P(RDFVary, DefineDependingOnVariations); EXPECT_EQ(sums[""yshift:low""], 410);; }; ; -TEST(RDFVary, VaryAndAlias); +TEST_P(RDFVary, VaryAndAlias); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Alias(""y"", ""x"").Vary(""x"", SimpleVariation, {}, 2);; auto s1 = df.Sum<int>(""y"");; @@ -1000,7 +1004,7 @@ struct MyCounter : public ROOT::Detail::RDF::RActionImpl<MyCounter> {; }; };; ; -TEST(RDFVary, VaryBook); +TEST_P(RDFVary, VaryBook); {; auto d = ROOT::RDataFrame(10); .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}); @@ -1385,7 +1389,7 @@ TEST_P(RDFVary, VaryProfiles); EXPECT_DOUBLE_EQ(h2s[""x:1""].GetMean(), 4.5);; }; ; -TEST(RDFVary, VaryReduce); +TEST_P(RDFVary, VaryReduce); {; auto h = ROOT::RDataFrame(10); .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10715#issuecomment-1150873429:4490,Simpl,SimpleVariation,4490,https://root.cern,https://github.com/root-project/root/pull/10715#issuecomment-1150873429,1,['Simpl'],['SimpleVariation']
Usability,""".help"" command, modified to open the online reference guide (generat…",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4203:55,guid,guide,55,https://root.cern,https://github.com/root-project/root/pull/4203,1,['guid'],['guide']
Usability,""";; TString formula = ""x"";; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<x<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; std::cout<<""\n"";; ULong64_t y = x-1;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; std::cout<<""\n"";; y = x-926;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; f.Close();; }. int main() {; ULong64_t x = 1617047019150033926;; ; write(x);; read(x);; }; ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root; 2. Reads the file and the tree:; - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly; - Displays the value with Scan() – displayed value is different on the last digit; - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:; ```; Written to tree: 1617047019150033926; Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");; Expected output: 1617047019150033926; ****************************************; * Row * x *; ****************************************; * 0 * 1617047019150033920 *; ****************************************. TTree::Scan(""x-1617047019150033925"");; Expected output: 1; ****************************************; * Row * x-1617047019150033925 *; ****************************************; * 0 * 0 *; ****************************************. TTree::Scan(""x-1617047019150033000"");; Expected output: 926; ****************************************; * Row * x-1617047019150033000 *; ****************************************; * 0 * 1024 *; ****************************************; ```; I encou",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7844:1891,simpl,simple,1891,https://root.cern,https://github.com/root-project/root/issues/7844,1,['simpl'],['simple']
Usability,"""You"" was Axel and Philippe + whoever is doing TXNetNG these days :) ; Michal (main developer of XrdCl) and I assumed the crash happens because libXrdCl was already unloaded, see xrootd issue: xrootd/xrootd#1487. Now, you say the library is still loaded ... then it's probably more likely that destruction ob XrdCl global objects has already happened or was in progress (I just learned c++ is rather relaxed about how this is allowed to happen). @simonmichal ... what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8767#issuecomment-892009554:378,learn,learned,378,https://root.cern,https://github.com/root-project/root/issues/8767#issuecomment-892009554,1,['learn'],['learned']
Usability,"# API Redesign. ## Goal. The goal is this PR is to improve the API of the CNN layers (MaxPooling and Conv currently), by eliminating redundant constructor arguments and fields. By redundant in this context, I refer to arguments that can be directly computed from others, and fields that unnecesseraly exist in multiple classes. ## Key points. Below some discussion points on design decisions I made, but still consider debatable. ; Since my experience in production level C++ is very limited I highly value opinions from experienced colleagues and previous authors of the module. ### Making `MaxPoolingLayer` a sub-class of `ConvLayer`. Every layer type in a convolutional network follows the logic existing in our `ConvLayer`:. A filter is sliding over the input and at each step applies an operation to the input elements within its receptive field to produce a single output element. * In a convolutional layer this operation is a linear combination with learnable parameters.; * In an average pooling layer the operation is a linear combination with constant parameters (and equal to the inverse of the receptive field's size).; * In a max pooling layer its a non linear operation. As we can see they all share the same logic and therefore fields. ## Results. 1. Common fields between the 2 layer types in the CNN module are now not duplicated (strides sizes, padding sizes, filter sizes). The same for the 4 `protected` methods in `ConvLayer`. 2. We now have a cleaner API, as the constructor arguments where reduced from 26 to 16 without any change in the functionality).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117:958,learn,learnable,958,https://root.cern,https://github.com/root-project/root/pull/2117,2,['learn'],['learnable']
Usability,# Backport. This will backport the following commits from `master` to `v6-32-00-patches`:; - [[skip-ci] improve labeling in candle plot examples.](https://github.com/root-project/root/pull/15659); - [Fix warnings in timeaxis3.C](https://github.com/root-project/root/pull/15659); - [Simplify timeonaxis.C and make the year labels clearer](https://github.com/root-project/root/pull/15659); - [simplify timeonaxis examples.](https://github.com/root-project/root/pull/15659); - [Remove an unused variable and use exact dates.](https://github.com/root-project/root/pull/15659). <!--- Backport version: 9.5.1 -->. ### Questions ?; Please refer to the [Backport tool documentation](https://github.com/sorenlouv/backport),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15674:282,Simpl,Simplify,282,https://root.cern,https://github.com/root-project/root/pull/15674,3,"['Simpl', 'clear', 'simpl']","['Simplify', 'clearer', 'simplify']"
Usability,"# Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The following reproducer crashes with the stacktrace below (with a debug build of ROOT -- just a segfault for non-debug builds):. ```cpp; #include <TTree.h>; #include <TFile.h>; #include <TApplication.h>. int main(); {; //TApplication app(""app"", nullptr, nullptr);; TFile *outputFile = new TFile(""output.root"", ""RECREATE"");. TTree *tree = new TTree(""tree"", ""treeliberated tree"");; outputFile->Write();. tree->StartViewer();. //app.Run();; outputFile->Close();; }; ```. ```; #8 0x00007fd6cf22b8c2 in TGCompositeFrame::TGCompositeFrame (this=0x56036dc34a10, p=0x0, w=10, h=10, options=3, back=0) at ../../../root_dbg/gui/gui/src/TGFrame.cxx:853; #9 0x00007fd6cf22d4cc in TGMainFrame::TGMainFrame (this=0x56036dc34a10, p=0x0, w=10, h=10, options=2) at ../../../root_dbg/gui/gui/src/TGFrame.cxx:1430; #10 0x00007fd6d64b9a6c in TTreeViewer::TTreeViewer (this=0x56036dc34a10, tree=0x56036d05df80) at ../../../root_dbg/tree/treeviewer/src/TTreeViewer.cxx:349; #11 0x00007fd6d809e059 in ?? (); #12 0x000056036c1be340 in ?? (); #13 0x000056036c1be340 in ?? (); #14 0x000056036dc34a10 in ?? (); #15 0x000056036dc34a10 in ?? (); #16 0x00007fff775fd220 in ?? (); #17 0x00007fff775fd3d8 in ?? (); #18 0x00007fff775fdc20 in ?? (); #19 0x00007fff775fd3f8 in ?? (); #20 0x00000001775fd3e0 in ?? (); #21 0x0000000000000000 in ?? (); ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The crash is due to a nullptr dereference in `TGCompositeFrame::TGCompositeFrame` (`fParent` is null), which in turn is caused by a failed check in `TGWindow::TGWindow` at `TGWindow.cxx:54`:. ```; if (!p && gClient) {; p = gClient->GetRoot();; }; ```. In the condition above, if the user created no `TApplication`, `gClient` is false-y. Rather than crash and burning, we could detect the situation and produce a helpful error message. ### Additional context; <!--; Add any other context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6743:28,clear,clear,28,https://root.cern,https://github.com/root-project/root/issues/6743,1,['clear'],['clear']
Usability,# Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844250497:1743,simpl,simple,1743,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844250497,2,['simpl'],['simple']
Usability,# Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844244254:1744,simpl,simple,1744,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844244254,2,['simpl'],['simple']
Usability,# Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844261645:1736,simpl,simple,1736,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844261645,2,['simpl'],['simple']
Usability,"# This Pull request: [Fix #6981] RDisplay::Print to list custom number of elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed.; ; Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element.; ; Additional paramter to the constructor of the the RDisplay() was added,; that is the nMaxCollectionElements. It determines, number of elements to be; shown from long collction. Default is 10.; ; Corresponding tests were adapted and additional ones were added to check; the new functionality.; ; Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9105:358,simpl,simplified,358,https://root.cern,https://github.com/root-project/root/pull/9105,1,['simpl'],['simplified']
Usability,"# This Pull request:. ## Changes or fixes:. - Added the BatchGenerator, BatchLoader, and ChunkLoader C++ classes.; Used to generate batches from a RDataset for Machine Learning purposes. - Added _batchgenerator.py used to interact with the BatchGenerator class from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12485:168,Learn,Learning,168,https://root.cern,https://github.com/root-project/root/pull/12485,1,['Learn'],['Learning']
Usability,"# This Pull request:. ## Changes or fixes:. Calling `AsNumpy` on a dataframe (python api) now read `RVec` entries and `std::vector` as `numpy.ndarray` of the corresponding type. The implementation should be practically free besides some type checking. It's not inmediate where to draw the line between what to convert into a `numpy.ndarray`. An `RVec` is clear but I also chose to convert `std::vector`, but not things such as `std::array`. Maybe `std::vector` shouldn't be converted. I haven't updated all the tests related to the conversion of `std::vector` so they are currently failing (I would like to have official confirmation). We could also return a 2D (or N-D) regular array in the case the data is regular. This can be checked also without much overhead and the transformation into a regular array can be done via `numpy.stack`. From the offline discussions we decided that we would leave this final optional step to the user. There are some consequences of these changes: for instance when dealing with string data, if we have a vector of strings of different length, it won't be converted into a numpy array. We could optionaly check for this and return a numpy array of objects. (there is a deprecation warning when you try to make an array from jagged data). In the case where all strings are the same length, the output of `np.asarray` is to convert them into multidimensional arrays of chars, which may not agree with what the user is expecting. Perhaps we could handle the `std::string` case separately but in this case what other cases should we handle separately?. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/7685",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14717:355,clear,clear,355,https://root.cern,https://github.com/root-project/root/pull/14717,1,['clear'],['clear']
Usability,# This Pull request:. ## Changes or fixes:. Dear All. This pull request adds gradient and Laplacian methods for arrays. These can be used to calculate one-dimensional first and second order derivatives. Should there also be methods for calculating higher order derivatives and dimensions?. I am open to any feedback regarding the code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #14304,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15100:307,feedback,feedback,307,https://root.cern,https://github.com/root-project/root/pull/15100,1,['feedback'],['feedback']
Usability,# This Pull request:. ## Changes or fixes:. I authored PR https://github.com/root-project/root/pull/14690 which updated some .clang-format options which were not compliant with the (atleast) latest schema. Some of these options appear not to work with older version of `clang-format` so I simplify them in this PR. the behaviour should remain the same. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14741:289,simpl,simplify,289,https://root.cern,https://github.com/root-project/root/pull/14741,1,['simpl'],['simplify']
Usability,"# This Pull request:. ## Changes or fixes:. Sets the verbosity level of rootcling in ACLiC to the default, therewith printing also warnings and not only fatal errors. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes [ROOT-10975](https://its.cern.ch/jira/browse/ROOT-10975). Linked roottest PR https://github.com/root-project/roottest/pull/1168 and https://github.com/root-project/roottest/pull/1169, that fixes a test which becomes broken once the verbosity is increased because some unused rules start to generate warnings. The rules are unused simply because the name of some template instantiations are not spelled correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16208:595,simpl,simply,595,https://root.cern,https://github.com/root-project/root/pull/16208,1,['simpl'],['simply']
Usability,# This Pull request:. ## Changes or fixes:; - Simplifies the importing of Pandas data frames to RDataFrame. ; - Added tutorial `df035_RDFFromPandas.py` to demonstrate this functionality. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; none,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14844:46,Simpl,Simplifies,46,https://root.cern,https://github.com/root-project/root/pull/14844,1,['Simpl'],['Simplifies']
Usability,"# This Pull request:. ## Changes or fixes:; Add function `ROOT::VecOps::StableSort` and `ROOT::VecOps::StableArgsort` as stable variants of `ROOT::VecOps::Sort` and `ROOT::VecOps::Argsort`, providing users with a choice of sorting stability. The implementation is simple: using the current implementation of `Sort` and `Argsort` while replacing `std::sort` with `std::stable_sort`. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). <!--This PR fixes # -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9286:264,simpl,simple,264,https://root.cern,https://github.com/root-project/root/pull/9286,1,['simpl'],['simple']
Usability,"# This Pull request:. ## Changes or fixes:; Currently this is the behaviour; ```; ~> root -b -q -l NotExistingFile.C; Warning in <TApplication::GetOptions>: macro pippo.C not found; root: unrecognized option 'pippo.C'; Try 'root --help' for more information.; ~> echo $?; 0; ```; the root executable simply warns about the file not existing but returns 0, as everything went well. This has several downsides, including not protecting us from our typos when adding tests to the suite (see original JIRA issue). ## Checklist:. - [v] tested changes locally; - [v] updated the docs (if necessary). This PR fixes [ROOT-9365](https://its.cern.ch/jira/browse/ROOT-9395)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16205:300,simpl,simply,300,https://root.cern,https://github.com/root-project/root/pull/16205,1,['simpl'],['simply']
Usability,"# This Pull request:. ## Changes or fixes:; Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me?. I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #14258; [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15097:296,guid,guide,296,https://root.cern,https://github.com/root-project/root/pull/15097,2,"['feedback', 'guid']","['feedback', 'guide']"
Usability,"# This Pull request:. ## Changes or fixes:; Each of the four commits contains an independent improvement that I made while working on something else (error handling). They are not necessary, but I think they are useful nonetheless, so here they are. 1. MultiProcess::Messenger worker to master messages implemented slightly more efficiently.; 2. Implemented full TestStatistics::RooAbsL::constOptimizeTestStatistic; these features are used rarely in Higgs fits, I think, but they are nonetheless features in non-MP RooFit fits that I now added for feature parity.; 3. Extend RooAbsL test suite with comparisons to the non-MP RooFit fits (RooNLLVar) that they were intended to reimplement.; 4. Extend NaNPacker test suite with some simple arithmetic demonstrations / sanity checks. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15499:731,simpl,simple,731,https://root.cern,https://github.com/root-project/root/pull/15499,1,['simpl'],['simple']
Usability,"# This Pull request:. ## Changes or fixes:; Enables viewing the HTML reference guide directly embedded within the QtCreator IDE, by pressing F1 on each function, in the same Fashion as the Help functionality of MATLAB. It also allows searching the Reference Guide without needing to open a web browser or while being offline. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9525:79,guid,guide,79,https://root.cern,https://github.com/root-project/root/pull/9525,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"# This Pull request:. ## Changes or fixes:; Makes PROOF optional and enabled by default with some simple CMake changes. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; There is no issue (yet) to be fixed, this is a PR opened for discussion. It is important to underline that effectively, this PR changes nothing: PROOF is still always built by default and the opt-out option is given not to build it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13571:98,simpl,simple,98,https://root.cern,https://github.com/root-project/root/pull/13571,1,['simpl'],['simple']
Usability,"# This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);; * Label nodes now use html, allowing for more custom fonts;; * Colors of different element types were changed to be easier to; distinguish;; * Empty RLoopManager is more clearly indicated;; * Actions which has run are more clearly indicated;; * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #9556",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9722:277,clear,clearly,277,https://root.cern,https://github.com/root-project/root/pull/9722,2,['clear'],['clearly']
Usability,# This Pull request:. - Simplifies the `\legacy` interface. It has now only one parameter.; - The text has been rephrased.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9108:24,Simpl,Simplifies,24,https://root.cern,https://github.com/root-project/root/pull/9108,1,['Simpl'],['Simplifies']
Usability,# This Pull request:. - Translated rf_408_RDataFrameToRooFit.C; - Changed signature of constructor to take RooAbsArg by reference.; - Changed ROOT.RooArgList in args to accept a simple Python list. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8705:178,simpl,simple,178,https://root.cern,https://github.com/root-project/root/pull/8705,1,['simpl'],['simple']
Usability,"# This Pull request:. Adds optimized `BulkRead` implementations for RVec of simple types and cardinality fields. Along the way, fixes an issue with RNTuple's handling of adopted RVecs. @eguiraud @vepadulano If RDF relies on the elements of a bulk of RVec<PoD> being all consecutively in memory, we also need to implement `BulkRead` for `RArrayAsRVecField` (#13040). ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13382:76,simpl,simple,76,https://root.cern,https://github.com/root-project/root/pull/13382,1,['simpl'],['simple']
Usability,# This Pull request:. Allows running named macro from shared library as it was the case with CINT and was documented in users guide.; See https://root-forum.cern.ch/t/cannot-run-shared-object-in-batch-mode/58213. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14772. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14813:126,guid,guide,126,https://root.cern,https://github.com/root-project/root/pull/14813,1,['guid'],['guide']
Usability,"# This Pull request:. Explicitly set `Vdt_ROOT` when `builtin_vdt` was used for the build. This way, a default location would be provided for VDT, which the user could still override if they wanted to. ## Changes or fixes:. This fixes the issue reported in #14163. Following up from the changes introduced in #11844. Note that this fix requires CMake 3.12+, with [CMP0074](https://cmake.org/cmake/help/latest/policy/CMP0074.html#policy:CMP0074) set to `NEW`. :thinking: Supporting older CMake versions, or that policy set to `OLD` would also be possible, but would require a lot more lines of code. (`FindVdt.cmake` would need to learn about a new hint variable itself.). Still, if people here feel very strongly about it, it would be possible to go that route as well. :thinking: . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary) (N/A). This PR fixes: #14163",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14178:630,learn,learn,630,https://root.cern,https://github.com/root-project/root/pull/14178,1,['learn'],['learn']
Usability,"# This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (added a doxygen line). ## Code to test functionality:; (run as a root script). ```c++; void apge() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;; TGraphErrors *gr = new TGraphErrors;; for (Int_t i=0;i<n;i++) {; Double_t x = i*0.1;; gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));; }; gr->SetTitle(""a simple graph"");; gr->GetXaxis()->SetTitle(""X title"");; gr->GetYaxis()->SetTitle(""Y title"");; gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it; c1->Update();; c1->GetFrame()->SetBorderSize(12);; c1->Modified();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15232:209,simpl,simply,209,https://root.cern,https://github.com/root-project/root/pull/15232,3,"['Simpl', 'simpl']","['Simple', 'simple', 'simply']"
Usability,"# This Pull request:. In preparation of multi-cluster prefetching, this PR fixes a few issues with the current I/O scheduling, namely:. - It fixes reading of offset columns where currently it can happen that we are by accident jumping back one cluster. This is due to the fact that in order to get the size of a collection in entry $n$, we have to read elements $n$ and $n-1$ of the offset column. Except when we are at the start of the new cluster, where we can simply read the first offset element in the cluster. - A problem in page coalescing of the file backend. The file backend should ensure that while coalescing page requests to a single read requests, we are not reading more than $x$ percent of the actual required payload. This mechanism was potentially breaking if the gaps between pages were all the same size. That's now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9096:463,simpl,simply,463,https://root.cern,https://github.com/root-project/root/pull/9096,1,['simpl'],['simply']
Usability,"# This Pull request:. Note that this PR does not need to be merged, although it could be, I'm mainly putting it up here to test it on CI. I needed it to rebase another branch on top of, which I will submit for a PR soon too. I leave it up to you whether you want to consider these two things separately. ## Changes or fixes:. The `RooGradMinimizerFcn` was not necessary anymore, so it has been removed. We do plan to repurpose its code later on for a ""`LikelihoodGradientSerial`"" implementation of `LikelihoodGradientWrapper`. This removal also simplifies construction of `RooMinimizer`, which no longer needs it. That, in turn, simplifies the test case configuration in testLikelihoodGradientJob.cpp. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11716:545,simpl,simplifies,545,https://root.cern,https://github.com/root-project/root/pull/11716,2,['simpl'],['simplifies']
Usability,# This Pull request:. Removes the usage of `llvm::makeArrayRef` in cling and use deduction guides (https://reviews.llvm.org/D140896) instead. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14219,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14221:91,guid,guides,91,https://root.cern,https://github.com/root-project/root/pull/14221,1,['guid'],['guides']
Usability,"# This Pull request:. Simplified/fixed how VDT would be used. Did this by making `ROOTVecOps`, `RooBatchCompute` and `TMVA` link against `VDT::VDT` in all circumstances (as long as VDT is being used). Regardless of whether VDT is used as a ""builtin"" or as an ""external"". At the same time made `ROOTVecOps` and `RooBatchCompute` depend on `VDT::VDT` publicly, as they actually do. ## Changes or fixes:. - Made sure that an imported `VDT::VDT` library would be set up when `builtin_vdt` is being used.; - Simplified how `ROOTVecOps`, `RooBatchCompute` and `TMVA` would just (publicly) link against `VDT::VDT` if either `vdt` or `builtin_vdt` is `TRUE`. Instead of the spaghetti of options that it had before.; - Made sure that all of those targets would explicitly depend on the `VDT` target if `builtin_vdt` is set to `TRUE`.; - Made sure that VDT would be searched for when calling `find_package(ROOT)` in client code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11797.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11844:22,Simpl,Simplified,22,https://root.cern,https://github.com/root-project/root/pull/11844,2,['Simpl'],['Simplified']
Usability,"# This Pull request:. Some lists weren't being cleared when workspace is deleted, leaking lots of memory. (really only the embedded data list from all the RooHistFuncs). Would be nice if this change be added to 6.24 and ideally 6.22 too?. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8844:47,clear,cleared,47,https://root.cern,https://github.com/root-project/root/pull/8844,1,['clear'],['cleared']
Usability,# This Pull request:. This PR is a simple backport that removes a warning on recent macos builds due to the presence of dead code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13743:35,simpl,simple,35,https://root.cern,https://github.com/root-project/root/pull/13743,1,['simpl'],['simple']
Usability,"# This Pull request:. While looking at the documentation for split branches, I noticed a direct contradiction in the user guide:. > As of ROOT 4.01/00, only `std::vector` of objects can be split.; > Support for splitting the other type of STL containers will be; > introduced in the near future. vs. > All STL containers are supported. ## Changes or fixes:. As now all STL containers are supported, I remove the bullet discussion the ROOT 4.01/00 state. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12551:122,guid,guide,122,https://root.cern,https://github.com/root-project/root/pull/12551,1,['guid'],['guide']
Usability,"# This Pull request:. [Fix #6981] RDisplay::Print to show more elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed. Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element. Current unit tests were adapted and a new one is added, to test showing; elements around the treshold, i.e. of <10, 10, 11, >11 elements. Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9095:344,simpl,simplified,344,https://root.cern,https://github.com/root-project/root/pull/9095,1,['simpl'],['simplified']
Usability,"# This Pull request:; In the current version of the tutorials, the ROOT::Math::Interpolator was used which required ROOT to be built with Mathmore or gsl. Since it was a linear interpolation, it can be replaced by simply creating a TGraph and using the TGraph::Eval() method.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13989:214,simpl,simply,214,https://root.cern,https://github.com/root-project/root/pull/13989,1,['simpl'],['simply']
Usability,"# This Pull request:; Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:; - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument.; - Container addresses follow the simplified pattern `daos://($pool)/($container)`. ; - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern.; - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. ; - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. ; - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively); - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. ; - The `libdaos_mock` library is updated in lockstep.; - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10720:424,simpl,simplified,424,https://root.cern,https://github.com/root-project/root/pull/10720,1,['simpl'],['simplified']
Usability,"# This Pull request:; Normally the user needs to use the TBBConfig.cmake that comes with the TBB installation. This is achieved by simply setting the `CMAKE_PREFIX_PATH` the the installation of TBB. In case it is not used, the `FindTBB.cmake` shipped with ROOT is used. In this case a fix has been made to set properly the TBB_VERSION. . ## Changes or fixes:; Issue #8260. ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14670:131,simpl,simply,131,https://root.cern,https://github.com/root-project/root/pull/14670,1,['simpl'],['simply']
Usability,"# This Pull request:; ProgressHelper is a class that offers callback functions for RDataFrame,; and can compute and print event statistics and a progress bar. With a change like this:; ```diff; --- a/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C; +++ b/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C; @@ -28,6 +28,7 @@; #include ""TLatex.h""; #include ""Math/Vector4D.h""; #include ""TStyle.h""; +#include ""ROOT/RDFHelpers.hxx""; ; using namespace ROOT::VecOps;; ; @@ -52,6 +53,9 @@ void df102_NanoAODDimuonAnalysis(); // Request cut-flow report; auto report = df_mass.Report();; ; + ROOT::RDF::ProgressHelper progress(10000, ROOT::RDF::CountEvents(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""));; + h.OnPartialResultSlot(10000, [&progress](unsigned int slot, TH1D& histo){ progress(slot, histo); });; +; // Produce plot; gStyle->SetOptStat(0); gStyle->SetTextFont(42);; auto c = new TCanvas(""c"", """", 800, 700);; ```. one gets:; `bin/root -q ~/code/root-src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C+O`; ![image](https://user-images.githubusercontent.com/16205615/125669114-03ebfeb1-96e4-4dcc-afd9-b6690aafb4a1.png). ## TODO; - [ ] Write helpers that integrate this into the head node of RDF, preferably with a single line of code.; - [ ] *Optional*: Finalise callbacks for RDF, since a carriage return is always missing. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8675:145,progress bar,progress bar,145,https://root.cern,https://github.com/root-project/root/pull/8675,1,['progress bar'],['progress bar']
Usability,"# This Pull request:; Removes invocations to the root-config executable at *ROOT module import time*. The executable `root-config` was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison, which is fast and which has no impact in terms of memory (as a query to the type system would have caused with modules),. More in general, this simple PR could be considered as the first of a series to reduce the time needed to `import ROOT` as much as possible. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13803:279,simpl,simple,279,https://root.cern,https://github.com/root-project/root/pull/13803,2,['simpl'],['simple']
Usability,"# This Pull request:; Solve the problem with a segfault in the tests. ## Changes or fixes:; * Changed the routines to eval R code in several methods on TRInterface.; * Fixed link to the documentation (ROOT-R Users Guide). ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes # ; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/93/LABEL=ROOT-centos7,SPEC=noimt,V=6-24/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8822:214,Guid,Guide,214,https://root.cern,https://github.com/root-project/root/pull/8822,1,['Guid'],['Guide']
Usability,"# This Pull request:; This PR is a WIP and has been posted to collect feedback. It proposes a fix for warnings on MacOS which are prompted when linking the libCore shared library due to two links to libxxHash, which are there only if xxhash and lz4 are builtins. This seems to be a non trivial CMake problem, which is fixed with some perhaps non-hortodox CMake code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13739:70,feedback,feedback,70,https://root.cern,https://github.com/root-project/root/pull/13739,1,['feedback'],['feedback']
Usability,"# This Pull request:; Translates the tutorials of the `root/tutorials/v7` into Python language.; Some of them have C++ wrappers(simple extension module) to achieve their functionality and match ; the behavior of its corresponding C++ version.; As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:; - [yes] tested changes locally; - [yes] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16657:128,simpl,simple,128,https://root.cern,https://github.com/root-project/root/pull/16657,1,['simpl'],['simple']
Usability,"# This Pull request:; adds a new ColumnType `Real32Trunc`, that stores a real value as a tightly-packed, IEEE-754 single precision float using less than 32 bits. The missing bits are simply truncated from the mantissa, causing the value to be rounded towards zero.; The valid range of bit widths is `[10, 31]` inclusive. This is the first ColumnType with a variable bit width, therefore it requires some extra handling on the RColumnElement and RField side, but it uses a single type id on disk (`0x1D`) and a single enum value `EColumnType::kReal32Trunc`. The way to use it is by calling the new `SetTruncated(nBits)` method on `RField<float>`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16192:183,simpl,simply,183,https://root.cern,https://github.com/root-project/root/pull/16192,1,['simpl'],['simply']
Usability,"# This Pull request:; adds the `Real32Quant` column type to RNTuple. This column type stores floating point values on disk as integers with a user-defined precision (from 3 to 32 bits) and a user-defined value range. This allows to reduce the storage space required to save floats with a well-defined range with more precision than a simple truncation. The conversion is defined as (pseudocode): ; ```; def quantize(value, min, max, n_precision_bits); {; quantized_max = (1 << n_precision_bits) - 1;; scale = quantized_max / (max - min);; quantized = round((value - min) * scale);; return quantized;; }; ```. This change requires adding metadata to the on-disk information, more specifically in the Field Description (see specifications.md for more details). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16390:334,simpl,simple,334,https://root.cern,https://github.com/root-project/root/pull/16390,1,['simpl'],['simple']
Usability,# This Pull request:; fixes a warning due to an unused param in SimplexSeedGenerator (becomes a compile error with dev=ON),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15981:64,Simpl,SimplexSeedGenerator,64,https://root.cern,https://github.com/root-project/root/pull/15981,1,['Simpl'],['SimplexSeedGenerator']
Usability,"## Bug description; <!--; A clear and concise description of what you expected to happen.; -->. When running over TTrees, RDF event loops that exhaust all entry ranges specified via `df.Range(..)` quit the event loop early as a performance optimization. RDataSource-based event loops do not, and instead run until the end of the dataset in all cases (performing no processing after Ranges have been exhausted). This yields correct results but wastes CPU cycles.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6455:28,clear,clear,28,https://root.cern,https://github.com/root-project/root/issues/6455,1,['clear'],['clear']
Usability,"## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11264:227,clear,clear,227,https://root.cern,https://github.com/root-project/root/pull/11264,1,['clear'],['clear']
Usability,"## Changes or fixes:. Use registry pattern for the ONNX parser. Now the operators and the tensor types are stored in a std::unordered_map. All the implemented operators are registered automatically when creating an object of type RModelParser_ONNX. When parsing an onnx graph the parser checks the type of the onnx node and throw an exception if it's not implemented or call the corresponding function to parse it. This PR also makes SOFIE more modular. Now operators can be added simply by defining an operator class that inherits from ROperator, defining a function to parse the onnx node and registering this function to the parser. ## Example of adding a new ONNX operator. ```{c++}; #include ""onnx_proto3.pb.h""; #include ""TMVA/RModel.hxx""; #include ""TMVA/RModelParser_ONNX.hxx"". using namespace TMVA::Experimental::SOFIE;. template<typename T>; struct ROperator_Sign : public ROperator {; std::string fNX;; std::string fNY;; std::vector<size_t> fShapeX;; std::vector<size_t> fShapeY;. ROperator_Sign(std::string nameX, std::string nameY) : fNX(nameX), fNY(nameY) {}. std::vector<std::vector<size_t>> ShapeInference(std::vector<std::vector<size_t>> input) override {; return input;; }. std::vector<ETensorType> TypeInference(std::vector<ETensorType> input) override {; return input;; }. void Initialize(RModel& model) override {; if (!model.CheckIfTensorAlreadyExist(fNX)) {; throw std::runtime_error(""TMVA::SOFIE - Tensor "" + fNX + "" not found."");; }; fShapeX = model.GetTensorShape(fNX);; fShapeY = fShapeX;; //fShapeY = ShapeInference({fShapeX})[0];; model.AddIntermediateTensor(fNY, model.GetTensorType(fNX), fShapeY);; }. std::string Generate(std::string OpName) override {; OpName = ""op_"" + OpName;; std::stringstream out;. out << SP << ""\n//---- Operator"" << OpName << ""\n"";; size_t length = ConvertShapeToLength(fShapeX);; out << SP << ""for (size_t i = 0; i < "" << length << ""; i++) {\n"";; out << SP << SP << ""if (tensor_"" << fNX << ""[i] > 0.) {\n"";; out << SP << SP << SP << ""tensor_"" << ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11518:481,simpl,simply,481,https://root.cern,https://github.com/root-project/root/pull/11518,1,['simpl'],['simply']
Usability,"## DeepCode failed to analyze this pull request; Something went wrong despite trying multiple times, sorry about that.; Please comment this pull request with ""Retry DeepCode"" to manually retry, or [contact us](https://www.deepcode.ai/feedback?select=4&utm_source=gh_review) so that a human can look into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7771#issuecomment-811770636:234,feedback,feedback,234,https://root.cern,https://github.com/root-project/root/pull/7771#issuecomment-811770636,6,['feedback'],['feedback']
Usability,"## Describe the bug. I just ran into an issue while trying to use the ATLAS analysis software on the latest version of macOS, with the latest version of Xcode. While trying to load the dictionary of a class whose header includes `<boost/shared_ptr.hpp>`, my test application dies. To simplify things a bit, I put a simple reproducer under: https://github.com/krasznaa/root-boost-dictionary-error With which I see the following:. ```; [bash][eowyn-1]:root-boost-dictionary-error > root; ------------------------------------------------------------------; | Welcome to ROOT 6.22/02 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Aug 17 2020, 12:46:52 |; | From tags/v6-22-02@v6-22-02 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] MyClass c;; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1072:31: error: expected expression; template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:83:73: note: expanded from macro 'atomic_is_lock_free'; #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))); ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:284,simpl,simplify,284,https://root.cern,https://github.com/root-project/root/issues/6454,2,['simpl'],"['simple', 'simplify']"
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ## Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6397:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6397,4,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Calling `tbb::global_control c(tbb::global_control::max_allowed_parallelism, 3);` followed by `ROOT::GetThreadPoolSize()` or `TThreadExecutor::GetPoolSize()` results in the incorrect number of threads reported (hardware concurrency rather than what was set via `tbb::global_control`. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `ROOT::GetThreadPoolSize` should report the real TBB thread pool size or the real number of threads that ROOT will use. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. This code prints 8 two times on my 8-core workstation, but CPU usage is actually 300%, i.e. TBB's thread pool has size 3 but we ROOT reports 8. ```cpp; #include <ROOT/TThreadExecutor.hxx>; #include <tbb/global_control.h>; #include <tbb/task_scheduler_init.h>; #include <iostream>; #include <TROOT.h>. int main() {; tbb::global_control c(tbb::global_control::max_allowed_parallelism, 3);; ROOT::EnableImplicitMT();; std::cout << ROOT::GetThreadPoolSize() << std::endl;; ROOT::TThreadExecutor pool;; std::cout << pool.GetPoolSize() << std::endl;; auto busyLoop = [](int x) { int i = 0; for (; i < 1000000000+x; ++i); return i; };; pool.Foreach(busyLoop, {1,2,3,4,5,6,7,8});; return 0;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6363:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6363,2,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. In the following reproducer, `t.Scan()` prints values for column `out_x.out_x` but the output is truncated to `out_x.out`, which can be quite confusing for larger trees with nested branches:. ```; root [0] TTree t;; root [1] int x = 42;; root [2] t.Branch(""out_x"", &x); (TBranch *) 0x5559ed5dc4f0; root [3] t.Fill(); (int) 4; root [4] t.Scan(); ************************; * Row * out_x.out *; ************************; * 0 * 42 *; ************************; (long long) 1; ```. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The leaf name in the header of the table should either be just `""out_x""` or be the complete `""out_x.out_x""`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6473:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6473,2,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Jitted Min calls break with RVec columns, although they work fine with scalars and if the RVec type is passed explicitly as a template parameter. Max is not affected. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```c++; #include <ROOT/RDataFrame.hxx> ; #include <ROOT/RVec.hxx> ; ; int main() { ; auto df = ROOT::RDataFrame(1).Define(""x"", [] { return ROOT::RVec<float>{1,2,3}; }); ; df.Max<ROOT::RVec<float>>(""x"").GetValue(); ; df.Min<ROOT::RVec<float>>(""x"").GetValue(); ; df.Max(""x"").GetValue(); ; df.Min(""x"").GetValue(); // this one breaks at runtime ; return 0; ; } ; ```. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.22.02. ## Additional context; <!--; Add any other context about the problem here.; -->. First reported [on the forum](https://root-forum.cern.ch/t/rdataframe-min-function-does-not-compile/41573).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6435:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6435,1,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. RDF::Display does not search non-top-level TTree branches for regex matches, so `Display(""a.b"")` throw a ""column not found"" exception. The problem is at https://github.com/root-project/root/blob/8c8cefe83a147bf8a88b694426840175615d5065/tree/dataframe/src/RDFInterfaceUtils.cxx#L383",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6371:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6371,1,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Reported [on the forum](https://root-forum.cern.ch/t/crash-when-creating-rdataframe-graph/42343/3), with a reproducer. [test3.C](https://root-forum.cern.ch/uploads/short-url/7ZVxQ0j0rgaCf65KgARmFplQGlz.C) + [testtree2.root](https://root-forum.cern.ch/uploads/short-url/bXK8KdWy4gp0xW8iT7zEIXAXJ3V.root) should produce . ![image](https://user-images.githubusercontent.com/10999034/99836526-88665b00-2b66-11eb-8859-7e1b7364487e.png). but instead produce. ![image](https://user-images.githubusercontent.com/10999034/99836547-9025ff80-2b66-11eb-84b5-938b2d212152.png). when the following line is uncommented:. ```; //latestDF = std::make_unique<RNode>(latestDF->Define(""r42"",[](){return 42;}));; ```. Furthermore, `Define`s are displayed out of order, in general, by `SaveGraph`. ### Additional context; <!--; Add any other context about the problem here.; -->. The problem is due to broken logic in the `GetGraph` function of `RAction` and `RFilter`: it loops over a `std::map` of Defines to figure out which have been added between that node and the previous node in the graph, but the loop over the `std::map` is out of order -- this causes both issues, the first because the out of order defines cause misattribution of parent nodes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6853:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6853,1,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; See the following gist:; https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT master; 2. Fedora 32; 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context; Stacktrace; ```; #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50; #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79; #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181; #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341; #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306; #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362; #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TObject.cxx:998; #7 0x00007ffff75db056 in TFile::~TFile (this=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6527:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6527,2,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The virtual C++ methods overriden in some python class is ignored in the subsequent subclass. . Simple examples is given in [here] (https://gist.github.com/VanyaBelyaev/fb58efd76b693a7777c9c83a6f43ae15); In short:; - C++ class A, ; - python class B, that inherits from A and override virtual method from A ; - python class C, that inherits from B and override (the same) virual method form A (and B); - python class D, that inherits from B and has empty body . And f one call the method from A, B, C , D ; - for A one gets original C++ behaviour (OK); - for B one gets the overriden behaviour (OK); - for C one gets overriden behaviour defined in C (OK); - for D one gets the original C++ behaviour ( that is not OK) . ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. It is expected that D picks up the overriden method from class B, as naturally expected for the inheritance pattern . ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Simple gist is [here] (https://gist.github.com/VanyaBelyaev/fb58efd76b693a7777c9c83a6f43ae15). ## Setup. 1. ROOT version 623/01; 2. Operating system CentOS7, lxplus x86, 64-centos7-gcc9-opt. 3. How you obtained ROOT: `dev3/latest` nightly LCG slot,. ## Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6470:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6470,4,"['Simpl', 'clear']","['Simple', 'clear']"
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. With [ROOT-10692](https://sft.its.cern.ch/jira/browse/ROOT-10692) fixed, ROOT now, by default, uses the default C++ standard of the compiler rather than always using C++11. However, due to how our cmake logic is structured, root7 is still turned off by default, even if the default C++ standard used by the compiler was detected to be C++14 or higher. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. With a compiler that defaults to `-std=C++14` or above, a vanilla `cmake path/to/root` should have root7 turned on. ## Additional context; <!--; Add any other context about the problem here.; -->. I think the root cause is that, at the following lines in our main `CMakeLists.txt`, we _first_ include `RootBuildOptions` (which sets root7 to OFF by default because it doesn't detect a high-enough C++ standard) and _then_ we include `CheckCompiler`, which sets our default `CMAKE_CXX_STANDARD` to the compiler default. https://github.com/root-project/root/blob/33458dc53621cf3e685a302a4bf899108aed0d0c/CMakeLists.txt#L128-L134. Moving `include(CheckCompiler)` above `include(RootBuildOptions)` fixes this issue but breaks Windows, because some cmake variable that `CheckCompiler` needs in the case of windows were defined earlier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6406:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6406,2,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. `hadd --help` prints the following:. ```; usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]; [-cachesize CACHESIZE]; [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]; [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]; TARGET SOURCES. OPTIONS:; -a Append to the output; -k Skip corrupt or non-existent files, do not exit; -T Do not merge Trees; -O Re-optimize basket size when merging TTree; -v Explicitly set the verbosity level: 0 request no output, 99 is the default; -j Parallelize the execution in multiple processes; -dbg Parallelize the execution in multiple processes in debug mode (Does not delete partial files stored inside working directory); -d Carry out the partial multiprocess execution in the specified directory; -n Open at most 'maxopenedfiles' at once (use 0 to request to use the system maximum); -cachesize Resize the prefetching cache use to speed up I/O operations(use 0 to disable); -experimental-io-features Used with an argument provided, enables the corresponding experimental feature for output trees; -f Gives the ability to specify the compression level of the target file(by default 4) ; -fk Sets the target file to contain the baskets with the same compression; as the input files (unless -O is specified). Compresses the meta data; using the compression level specified in the first input or the; compression setting after fk (for example 206 when using -fk206); -ff The compression level use is the one specified in the first input; -f0 Do not compress the target file; -f6 Use compression level 6. (See TFile::SetCompressionSettings for the support range of value.); TARGET Target file; SOURCES Source files; ```. The options `-fk`, `-ff` and `-f0` are listed in the short usage overview as `[-fk FK] [-ff FF] [-f0 F0] `, but they do not accept a parameter. The docs mention that `-f` controls the compression _level_ of the target file (e.g. 4",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6438:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6438,1,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Serialization of ROOT objects in python using `dill` is broken for `python3`, but it works ok for `python2`.; ; ( `dill` serialization is vital for the proper paralllel and distributive python calculations using `pathos` suite. The functionality of ; regular paralell python `pp` and `multiprocessing` module is very limited due to limitations of `pickle`` serialization, ; and it is a moment when `dill`/`pathos` enters the game, significantly extending the functionality; . ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Similar behaviour for `python2` and `python3` is expected ; b ut it works for `python2` and fails for `python3`; ; ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. to reproduce see this very simple gist ; https://gist.github.com/VanyaBelyaev/278074969f2f940f180885be35f04db9 . It has been tested with different LCG releases from LCG_94 to LCG_97a; and it always works for `pytjon2` and fails for `python3`. for `python3` one gets an error; ```; Traceback (most recent call last):; File ""./test_dill.py"", line 13, in <module>; hh = dill.loads ( dill.dumps ( h ) ); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 294, in dumps; dump(obj, file, protocol, byref, fmode, recurse)#, strictio); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 287, in dump; pik.dump(obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 437, in dump; self.save(obj); File ""/cvmfs/sft.cern.ch/lcg/relea",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6370,2,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The following code works fine with 6.20.04, but segfaults with 6.22.02. ```cpp; #include ""RooDataSet.h""; #include ""RooRealVar.h""; #include ""TFile.h""; #include ""TTree.h"". int main(int argc, char* argv[]) {; TTree* tree = new TTree(""tree"", ""tree"");; double var = 1;; tree->Branch(""var"", &var, ""var/D"");; tree->Fill();. RooRealVar* roovar = new RooRealVar(""var"", ""var"", 0, 10);; TFile* output_file = new TFile(""test.root"", ""RECREATE"", ""output_file"");. output_file->Print();; RooDataSet* data_set = new RooDataSet(""data_set"", ""data_set"", tree, RooArgSet(*roovar));; output_file->Print();. return 0;; }; ```. The segfault happens on the last `output_file->Print();` line - it seems the creation of the `RooDataSet` somehow destroys the object pointed to by `output_file`. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expect the code to run without segfaulting. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. Save the quoted code to `mwe_tfile.cc`; 2. Build with `g++ mwe_tfile.cc -o mwe_tfile $(root-config --cflags --glibs) -lRooFitCore`; 3. Run `./mwe_tfile`. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Ubuntu 18.04; Binary ROOT installs; Works with 6.20.04; Doesn't work with 6.22.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6408:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6408,2,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The problem is visible in the [conda nightly builds](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/), e.g. [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/136/testReport/junit/projectroot.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). JupyROOT tests are red because a new json field `""execution""` is added to the `.ipynb` file. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; It should be enough to install the [ROOT conda nightlies](https://root.cern/install/nightlies/#conda-package), build roottest against them and run one of the JupyROOT tests via ctest. ## Additional context; <!--; Add any other context about the problem here.; -->. I _think_ the reason this problem cropped up is that the version of nbconvert installed by conda (conda-forge channel) was recently bumped from 5.6.1 to 6.0.2. nbformat documents that new `""execution""` field in notebooks as of [8 months ago](https://github.com/jupyter/nbformat/commit/1b6cbffd2ae527354d8b90e17740f823291a8dca). The `nbdiff.py` steering script already filters some lines from the notebooks before diff'ing them, but the introduction of a new json field also changes the surrounding lines, e.g. a closed brace becomes a comma, an extra closing brace is added, and the current filtering mechanism is not able to deal with this, so I am not sure what the best way to proceed would be.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6356:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6356,1,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; This is a continuation of a jira issue originally found in multithreaded RDF [ROOT-10896](https://sft.its.cern.ch/jira/browse/ROOT-10896). If a TTree spans over multiple files (i.e. when its size is higher than `fgMaxTreeSize`) TBufferMerger cannot correctly save its contents to the (multiple) TBufferMergerFile(s) in its queue. This is due to the original TFile being deleted in [`TTree::ChangeFile`](https://github.com/root-project/root/blob/4342e397b3c2a97a6851d895983291eddf8f033f/tree/tree/src/TTree.cxx#L2703) but not updated in TBufferMergerFile which then holds a dangling pointer. The program crashes with the following stacktrace (not really helpful even with debug symbols enabled in ROOT as well):; ```; vpadulan@fedorathinkpad-T550 [~/Projects/ROOT-10896]: ./tbuffermerger_setmaxsize_seq ; Fill: Switching to new file: tbuffermerger_sequential_1.root; Fill: Switching to new file: tbuffermerger_sequential_2.root. *** Break *** segmentation violation; ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6; #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6; #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120; #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411; #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3649; #5 0x00007f4fcd15a82a in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6523:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6523,1,['clear'],['clear']
Usability,"## Describe the bug; As discussed in the [ROOT forum](https://root-forum.cern.ch/t/root-memstat-doesnt-work/41455):; WIthout the memstat feature, `root.exe` still offers the `-memstat` option but produced failures like; ```; input_line_11:2:6: error: unknown type name 'TMemStat'; new TMemStat("""",100000,5000000);; ```. ## Expected behavior; If memstat is not part of the build, the memstat option should not be offered or there should be a clearer error message. ## To Reproduce; Steps to reproduce the behavior:; 1. Compile with `cmake -Dmemstat=off`; 2. Run `root -l`. ## Setup; 1. Master; 2. Arch Linux; 3. Built from sources",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6410:441,clear,clearer,441,https://root.cern,https://github.com/root-project/root/issues/6410,1,['clear'],['clearer']
Usability,"## Describe the bug; Crash.; ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff59494f8 in TPad::ShowGuidelines (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /home/andriish/Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248; 6248	 tmpGuideLinePad->Delete();; (gdb) bt; #0 0x00007ffff59494f8 in TPad::ShowGuidelines(TObject*, int, char, bool) (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248; #1 0x00007ffff5932f5f in TPad::ExecuteEvent(int, int, int) (this=0x249da40, event=21, px=412, py=186) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:2159. ```. ## Expected behavior; No crash. ## To Reproduce; No working standalone reproducer so far. ## Setup; master ROOT with gcc4.8.5 on CentOS7. ## Additional context; The relevant code is . ```; static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad; if (tmpGuideLinePad) {; if (object == tmpGuideLinePad) { // in case of funny button click combination.; tmpGuideLinePad->Delete();; tmpGuideLinePad = 0;; return;; }; tmpGuideLinePad->Delete();; tmpGuideLinePad = 0;; }. ```; Obviously the code if completely ok for a single thread application.; However, a protection for multithread apps is needed when dealing with tmpGuideLinePad. Tag @couet",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6510:916,Guid,Guidelines,916,https://root.cern,https://github.com/root-project/root/issues/6510,1,['Guid'],['Guidelines']
Usability,"## Describe the bug; I store a custom event class in a TTree. Some of the members of the class are arrays (c-style). Accessing the array members works for the first time the GetEntry() is called, but subsequent accesses result in segmentation faults. I am using the ""old"" way of reading the tree (with SetBranchAddress). . One possible workaround might be to use std::array instead of c-style arrays, although I have not fully tested if this works. . ## Expected behavior; Array members of objects in TTrees are accessible via PyROOT as was the case before 6.22. . ## To Reproduce. I attached a MWE (really a minimal failing example), including a script to build/generate a tree/run the offending python scripts (faiing.sh): [mwe.tar.gz](https://github.com/root-project/root/files/5286101/mwe.tar.gz). The gist is that the event here is a simple class: ; ```. #ifndef _mwe_event_h; #define _mwe_event_h. #include ""TObject.h"" ; #include <array>. class MWEEvent ; {. public: ; MWEEvent() { iev =-1; bar=-1; foo[0] =-1; foo[1]=-1; } . // workaround for not being able to access foo directly ; double get_foo(int i) const { return foo[i]; } . int iev; ; double bar; ; double foo[2]; ; virtual ~MWEEvent() { ; } . ClassDef(MWEEvent,1);; }; ; ```. A tree of these objects can be read with PyROOT fine if only the scalar members are touched, or the getter is used:. ```; import ROOT . ROOT.gSystem.Load(""build/libmwe.so"") . f = ROOT.TFile(""out.root""); ; t = f.Get(""tree""); . ev = ROOT.MWEEvent() . t.SetBranchAddress(""event"",ev) . for i in range(10): ; t.GetEntry(i); ; print (ev.iev) ; print (ev.bar) ; print (ev.get_foo(0)); print (ev.get_foo(1)); ```. But if you try to access the array member directly (as used to work), it does not work:; ```; import ROOT . ROOT.gSystem.Load(""build/libmwe.so"") . f = ROOT.TFile(""out.root""); ; t = f.Get(""tree""); . ev = ROOT.MWEEvent() . t.SetBranchAddress(""event"",ev) . for i in range(10): ; t.GetEntry(i); ; print (ev.iev) ; print (ev.bar) ; print (ev.foo[0]); print (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6468:839,simpl,simple,839,https://root.cern,https://github.com/root-project/root/issues/6468,1,['simpl'],['simple']
Usability,"## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy; SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support; PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy; The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}; Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:; * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15309:1505,learn,learning,1505,https://root.cern,https://github.com/root-project/root/issues/15309,1,['learn'],['learning']
Usability,"## Description; Development of the functionality for parsing a PyTorch PT file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object; - [x] Support for PyTorch nn.Module, nn.Sequential, nn.ModuleList containers.; - [x] Supports Linear, ReLU and Transpose Layers/operations.; - [x] Header file for the function; - [x] Function implementation . ## Interface; The parser requires the shape and data type of the input tensors. Shape is a mandatory parameter, whereas the function defaults to Float data-type for the input tensors, if not explicitly mentioned.; ; **Example usage**; ```; std::vector<size_t> s1{120,1};; std::vector<std::vector<size_t>> inputShape{s1};; auto model = TMVA::Experimental::SOFIE::PyTorch::Parse(""trained_model_dense.pt"",inputShape);; ```; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests ; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests . ## Documentation; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8684:163,Learn,Learning,163,https://root.cern,https://github.com/root-project/root/pull/8684,1,['Learn'],['Learning']
Usability,"## Description; Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object ; - [x] Support for Keras Sequential API Models ; - [x] Support for Keras Functional API Models ; - [x] Supports Dense (with relu activation),ReLU and Permute Layers ; - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root); - [x] Header file for the function ; - [x] Function implementation ; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests. ## Documentation ; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8430:176,Learn,Learning,176,https://root.cern,https://github.com/root-project/root/pull/8430,1,['Learn'],['Learning']
Usability,"## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Just like TTree does, TTreeReader should limit the event loop to the number of entries in the main tree. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The following self-contained reproducer should print 10 (number of entries in the main tree), but prints 20 (number of entries in the friend tree). ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TTreeReader.h>; #include <TTreeReaderValue.h>; #include <TFile.h>; #include <TTree.h>; #include <iostream>. int main() {; ROOT::RDataFrame(10).Define(""x"", ""42"").Snapshot(""main"", ""main.root"", {""x""});; ROOT::RDataFrame(20).Define(""y"", ""1"").Snapshot(""friend"", ""friend.root"", {""y""});. TFile fmain(""main.root""); ; auto tmain = fmain.Get<TTree>(""main""); ; TFile ffriend(""friend.root"");; auto tfriend = ffriend.Get<TTree>(""friend"");. tmain->AddFriend(tfriend); . int counter = 0;; TTreeReader r(tmain); ; while (r.Next()); ++counter;; std::cout << ""should be 10: "" << counter << std::endl;. return 0;; } ; ```. This becomes problematic when comparing e.g. the output of `TTree::Draw` with the output of `RDataFrame::Histo1D`:. ```cpp; tmain->Draw(""x""); // fills the histogram with 10 entries; ROOT::RDataFrame(*tmain).Histo1D(""x"")->DrawClone(); // fills the histogram with 20 entries, 10 of which are bogus; ```. ## Additional context; <!--; Add any other context about the problem here.; -->. The problem was first reported [on the forum](https://root-forum.cern.ch/t/add-friend-with-rdataframe/41652/10) and via TTreeReader it affects RDataFrame analyses too (but only if implicit multi-threading is disabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6518:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/6518,1,['clear'],['clear']
Usability,"## Explain what you would like to see improved; There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory.; // FIXME: This is very annoying behaviour, we should; // be able to choose to not do this like we; // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved; I see several ways how it could be improved:. 1) ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7308:994,Guid,Guide,994,https://root.cern,https://github.com/root-project/root/issues/7308,1,['Guid'],['Guide']
Usability,"## Is your feature request related to a problem? Please describe.; You could call it a ""problem"", yes. What we want basically is to drop out an RooDataSet directly from RDataFrame. There's two ways to do it:; #### Easy way:; - Create a loopable collection of events that drops out of RDF. Could be a std::vector, a snapshot, etc; - One by one, fill those events into RooDataSet à la https://root.cern/doc/master/rf402__datahandling_8C.html; ```c++; // Fill d with dummy values; Int_t i;; for (i = 0; i < 1000; i++) {; x = i / 50 - 10;; y = sqrt(1.0 * i);; c.setLabel((i % 2) ? ""Plus"" : ""Minus"");; ; // We must explicitly refer to x,y,c here to pass the values because; // d is not linked to them (as explained above); d.add(RooArgSet(x, y, c));; }; ```. This is going to be slow, and not so elegant. #### Requires more development, but better:; - RooDataSet should accept collections when you construct it; - Since data is stored in a `std::vector` internally, it could even `std::swap` with an external vector!; - RDataFrame should directly spit out such a collection or it should be easy to connect the two.; - It is clear that MT runs are not trivial, but maybe not a priority.; - @eguiraud what is the easiest to spit out from RDF, which is loopable, maybe even adopt the memory?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7223:1119,clear,clear,1119,https://root.cern,https://github.com/root-project/root/issues/7223,1,['clear'],['clear']
Usability,"## RooMultivariateGaussian doesn't allow the converiance matrix to be fit. The data type used to represent the covariance matrix in RooMultivariateGaussian is TMatrixDSym and not RooRealVar or RooListProxy and doesn't allow for it to be fit. This is not a bug but a new feature request. There is alway the possibility to write in this case your own pdf. This feature only got requested once in 2017, and in the request ticket there was no mention of a usecase. Without a clear usecase, we are not going to blindly implement features. *Originally suggested by Albert Bursche [ROOT-9052](https://sft.its.cern.ch/jira/browse/ROOT-9052)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6557#issuecomment-1705593397:471,clear,clear,471,https://root.cern,https://github.com/root-project/root/issues/6557#issuecomment-1705593397,1,['clear'],['clear']
Usability,## [Codecov](https://app.codecov.io/gh/root-project/root/pull/13414?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project) Report; > :exclamation: No coverage uploaded for pull request base (`master@0d1f204`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project#section-missing-base-commit).; > The diff coverage is `n/a`. > :exclamation: Current head 15e8116 differs from pull request most recent head e2c1183. Consider uploading reports for the commit e2c1183 to get more accurate results. ```diff; @@ Coverage Diff @@; ## master #13414 +/- ##; ==========================================; Coverage ? 23.83% ; ==========================================; Files ? 8507 ; Lines ? 1719518 ; Branches ? 717767 ; ==========================================; Hits ? 409914 ; Misses ? 1083067 ; Partials ? 226537 ; ```. | Flag | Coverage Δ | |; |---|---|---|; | unittests | `23.83% <0.00%> (?)` | |. Flags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project#carryforward-flags-in-the-pull-request-comment) to find out more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13414#issuecomment-1672056213:289,learn,learn,289,https://root.cern,https://github.com/root-project/root/pull/13414#issuecomment-1672056213,1,['learn'],['learn']
Usability,## [Codecov](https://app.codecov.io/gh/root-project/root/pull/13430?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project) Report; > :exclamation: No coverage uploaded for pull request base (`master@6276954`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project#section-missing-base-commit).; > The diff coverage is `n/a`. > :exclamation: Current head 85ba098 differs from pull request most recent head 6c6f6da. Consider uploading reports for the commit 6c6f6da to get more accurate results. ```diff; @@ Coverage Diff @@; ## master #13430 +/- ##; ==========================================; Coverage ? 23.80% ; ==========================================; Files ? 8507 ; Lines ? 1719515 ; Branches ? 717824 ; ==========================================; Hits ? 409380 ; Misses ? 1083984 ; Partials ? 226151 ; ```. | Flag | Coverage Δ | |; |---|---|---|; | unittests | `23.80% <0.00%> (?)` | |. Flags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project#carryforward-flags-in-the-pull-request-comment) to find out more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13430#issuecomment-1678240847:289,learn,learn,289,https://root.cern,https://github.com/root-project/root/pull/13430#issuecomment-1678240847,1,['learn'],['learn']
Usability,## [Codecov](https://app.codecov.io/gh/root-project/root/pull/13466?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project) Report; > :exclamation: No coverage uploaded for pull request base (`master@4f0450b`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project#section-missing-base-commit).; > The diff coverage is `n/a`. ```diff; @@ Coverage Diff @@; ## master #13466 +/- ##; ==========================================; Coverage ? 23.84% ; ==========================================; Files ? 8508 ; Lines ? 1719789 ; Branches ? 717998 ; ==========================================; Hits ? 410002 ; Misses ? 1083133 ; Partials ? 226654 ; ```. | [Flag](https://app.codecov.io/gh/root-project/root/pull/13466/flags?src=pr&el=flags&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project) | Coverage Δ | |; |---|---|---|; | [unittests](https://app.codecov.io/gh/root-project/root/pull/13466/flags?src=pr&el=flag&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project) | `23.84% <0.00%> (?)` | |. Flags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project#carryforward-flags-in-the-pull-request-comment) to find out more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13466#issuecomment-1681134447:289,learn,learn,289,https://root.cern,https://github.com/root-project/root/pull/13466#issuecomment-1681134447,1,['learn'],['learn']
Usability,## [Codecov](https://app.codecov.io/gh/root-project/root/pull/13478?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project) Report; > :exclamation: No coverage uploaded for pull request base (`master@ebe4f59`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project#section-missing-base-commit).; > The diff coverage is `n/a`. ```diff; @@ Coverage Diff @@; ## master #13478 +/- ##; ==========================================; Coverage ? 23.80% ; ==========================================; Files ? 8508 ; Lines ? 1719800 ; Branches ? 718008 ; ==========================================; Hits ? 409426 ; Misses ? 1083951 ; Partials ? 226423 ; ```. | [Flag](https://app.codecov.io/gh/root-project/root/pull/13478/flags?src=pr&el=flags&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project) | Coverage Δ | |; |---|---|---|; | [unittests](https://app.codecov.io/gh/root-project/root/pull/13478/flags?src=pr&el=flag&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project) | `23.80% <0.00%> (?)` | |. Flags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project#carryforward-flags-in-the-pull-request-comment) to find out more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13478#issuecomment-1685023865:289,learn,learn,289,https://root.cern,https://github.com/root-project/root/pull/13478#issuecomment-1685023865,1,['learn'],['learn']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour?. If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists!. ### How to reproduce?. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT?. irrelevant. ### Which operating system are you using?. irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13042:705,guid,guidelines,705,https://root.cern,https://github.com/root-project/root/issues/13042,2,['guid'],['guidelines']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. A PyRoot for loop isn't iterating as many times as it should (actually about half as many times as it should). ### Reproducer. I have a TTree in a for loop and have been comparing the number of events (the details of which are in branches) with someone else at various points in that loop. Within that loop is a second loop where I'm looking at the number of tracks coming from those events. It is clear that that inner track isn't iterating anywhere nearly as much as it should be. ```python; # This is the event loop ; for entryNum in range (0, AutreeData.GetEntries()):; if (entryNum % 5000 == 0):; print(""Data Fourth Pass (Vn Corrected for Resolution)"", entryNum). # TTree; AutreeData.GetEntry(entryNum). # Event and track variables; px = AutreeData.Px; py = AutreeData.Py; pz = AutreeData.Pz; q = AutreeData.Charge; tofBeta = AutreeData.tofBeta; dEdx = AutreeData.dEdx; NSigmaPr = AutreeData.nSigmaPr; NSigmaKa = AutreeData.nSigmaKa; NSigmaPi = AutreeData.nSigmaPi; vx = AutreeData.Vx; vy = AutreeData.Vy; vz = AutreeData.Vz; Centrality = AutreeData.centrality; EPDnMIP = AutreeData.EPDnMip; EPDID = AutreeData.EPDid; DCA = AutreeData.DCA; NHits = AutreeData.nHits; NHitsdEdx = AutreeData.nHitsDedx; NHitsFit = AutreeData.nHitsFit; NHitsPoss = AutreeData.nHitsPoss; Tracknumber = AutreeData.tracknumber. # Various checks and irrelevant things go here. # Track loop; for index in range(Tracknumber):; # This histogram is filled to determine how many tracks there were initially. I had half of the other person's tracks (rougly); OverallTrackCheck.Fill(1) . # Irrelevant things go here; ```. ### ROOT version. 6.20. ### Installation method. It was in an online Jupyter notebook. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14215:473,clear,clear,473,https://root.cern,https://github.com/root-project/root/issues/14215,1,['clear'],['clear']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```; cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }; ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106); ```; [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh; [vpadulan@lxplus951 ~]$root --version; ROOT Version: 6.32.02; Built for linuxx8664gcc on Jun 19 2024, 05:05:49; From heads/master@tags/v6-32-02; [vpadulan@lxplus951 ~]$python repro_libphysics.py; cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOption",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16601:404,simpl,simple,404,https://root.cern,https://github.com/root-project/root/issues/16601,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15212:322,learn,learn,322,https://root.cern,https://github.com/root-project/root/issues/15212,3,['learn'],['learn']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts. I wanted to (1) point out two related bugs in ROOT's cppyy, and (2) ask for advice on how such cases are handled by ROOT developers. First is a minimally reproducible bug involving pretty straightforward type trait gymnastics. The cppyy snippet below seems to simply gives up at the first non-trivial part, and no further Python bindings are possible. . The second, which I *suspect* is related/stems from the above, is cppyy sometimes ""strips"" the arguments of a function template parameter. As both pure-C++ and `cppyy.cppdef` do not make such mistakes (i.e. it's valid C++), I'm not sure what could be going wrong on the bindings-side to result in this behaviour. I have not been able to factorize this part out of my library to make a minimal example, but can be reproduced by with this [header](https://raw.githubusercontent.com/taehyounpark/queryosity/master/queryosity.h). Neither issue is present in the standalone, newer cppyy 3.0.0, so I suspect updating ROOT's cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon?; - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work?. Thank you very much for your time!. ### Reproducer. ```py; import cppyy. cppyy.cppdef('''; // some ""expression"" out of which a std::function can be constructed; template <typename Fn> struct expression {; using function_type = decltype(std::function(std::declval<Fn>()));; };. // some ""equation"" specialized to handle such expressions; template <typename T> class equation;; template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function; template <typename Fn> struct deduce_equation;; template <typename Ret, typename... Args>; struct deduce_equation<std::function<Ret(Args...)>> {; using type = equ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15062:349,simpl,simply,349,https://root.cern,https://github.com/root-project/root/issues/15062,1,['simpl'],['simply']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From [ROOT-9699](https://its.cern.ch/jira/browse/ROOT-9699). ### Reproducer. When trying to access the list of public methods of a class in python I observe; ```; RuntimeWarning: failed offset calculation between TList and TViewPubFunctions; ```. For me this can simply be reproduced with. ```; python3 -c ""import ROOT; ROOT.TObject.Class().GetListOfAllPublicMethods()""; ```. ### ROOT version. master on Mac and 6.32 on Alma9. ### Installation method. from sources. ### Operating system. all, I fear. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15919:338,simpl,simply,338,https://root.cern,https://github.com/root-project/root/issues/15919,1,['simpl'],['simply']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14571:689,clear,clear,689,https://root.cern,https://github.com/root-project/root/issues/14571,1,['clear'],['clear']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker.; Unfortunately this is not the case.; The marker 4 (""kCircle"") behaves properly, though.; A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp; {; const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32; TGraphErrors *g1 = new TGraphErrors(1);; g1->SetMarkerStyle(4); // error bars clearly visible; g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);; TGraphErrors *g2 = new TGraphErrors(1);; g2->SetMarkerStyle(m); // marker covers error bars; g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);; TGraphErrors *g3 = new TGraphErrors(1);; g3->SetMarkerStyle(4); // error bars clearly visible; g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);; TGraphErrors *g4 = new TGraphErrors(1);; g4->SetMarkerStyle(m); // marker covers error bars; g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);; TMultiGraph *mg = new TMultiGraph();; mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);; mg->GetXaxis()->SetLimits(0., 1.);; mg->SetMinimum(0.); mg->SetMaximum(1.);; mg->Draw(""AP"");; }; ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14549:243,clear,clearly,243,https://root.cern,https://github.com/root-project/root/issues/14549,4,"['clear', 'simpl']","['clearly', 'simple']"
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TH2Poly.h>; #include <TCanvas.h>; #include <string>. int main(); {; ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""); .Define(""b2"", ""(double) rdfentry_ * rdfentry_""); .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};; c.cd();. filled->Draw(""colz"");. c.Draw();; c.SaveAs(""rdf_fill_th2poly.png"");; }; ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```; /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’; 298 | fObjects[i] = new HIST(*fObjects[0]);; | ^~~~~~~~~~~~~~~~~~~~~~; In file included from rdf_fill_th2poly.cpp:2:; /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:; 66 | class TH2Poly : public TH2 {; ```. Is it possible to add it ?. Cheers,; Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14548:144,simpl,simple,144,https://root.cern,https://github.com/root-project/root/issues/14548,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello, . I am creating this issue because I found a bug in the `TFileMerger` class in case there is a single input file provided and the user is requesting producing an output with only some objects from that input file. . Tagging @pcanal on that issue. . A simple standalone bug reproducer is provided below. ; In the script `numTest` can be set to `0` or `1` . The case `numTest=0` allows illustrating the bug: ; The input file `myFileWithHists.root` is created with 4 histograms: `hist1`, `hist2`, `hist3` and `hist4`. ; The `TFileMerger` object should create a file `myExclusiveFile.root` and is required to only copy `hist1`, `hist2`. ; But instead the full file is copied and `myExclusiveFile.root` contains all histograms. ; ```; selectiveHadd Source file 1: myFileWithHists.root; [TFile::Cp] Total 0.00 MB	|====================| 100.00 % [6.7 MB/s]. romain@romain-dell:~/Desktop$ root -l myExclusiveFile.root ; root [0] ; Attaching file myExclusiveFile.root as _file0...; (TFile *) 0x562d3abbe360; root [1] .ls; TFile**		myExclusiveFile.root	; TFile*		myExclusiveFile.root	; KEY: TH1F	hist1;1	hist1; KEY: TH1F	hist2;1	hist2; KEY: TH1F	hist3;1	hist3; KEY: TH1F	hist4;1	hist4; root [2] ; ```. The case `numTest=1` is a way to avoid this bug. ; One can create a dummy empty file and add it as input file of the `TFileMerger` so that there is 2 input files the one of interest + the dummy empty one . ; In that case as requested only `hist1` and `hist2` are found in the `myExclusiveFile.root` file.; ```; selectiveHadd Source file 1: myFileWithHists.root; Creating a dummy empty file to avoid a bug in TFileMerger class: /tmp/dummyEmptyFile-52fce558-3043-11ee-8e02-2201a8c0beef.root; selectiveHadd Source file 2: /tmp/dummyEmptyFile-52fce558-3043-11ee-8e02-2201a8c0beef.root; selectiveHadd Target path: myExclusiveFile.root:/. romain@romain-dell:~/Desktop$ root -l myExclusiveFile.root ; root [0] ; Attaching file myExclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13359:333,simpl,simple,333,https://root.cern,https://github.com/root-project/root/issues/13359,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello, . I am creating this issue because there is a bug when setting an entry list that has already been used to a `TTree`.; The entry number returned by `tree->GetEntryNumber(index)` are messed up until that function is called 2 times in a row for the same index. You can find a standalone simple reproducer of the bug below. . In that code by setting `numTest` to `0`, `1` or `2` you will obtain the different print below. ; With that example by calling `tree->GetEntryNumber(index)` it should return the value `index` ; e.g. `tree->GetEntryNumber(2)` should return `2`. However until the `GetEntryNumber()` function has not been called 2 times for the same index then the returned entry number is NOT the expected one. . Here it is simple to solve the issue i.e. not call `entryList->GetEntry(15);` before setting the entry list to the tree ; but I find this behaviour really error prone as one would need to be sure the entry list has never been used basically. . On the other hand using the copy constructor allows not having this issue because I think the `fLastIndexQueried` is reset to `-1` ; ```; tree->SetEntryList( new TEntryList(*entryList) );; ``` . Tagging @pcanal and @Axel-Naumann . For `numTest=0`; ```; tree->GetEntryNumber(0)=16; tree->GetEntryNumber(0)=0; tree->GetEntryNumber(0)=0; tree->GetEntryNumber(0)=0; ```; For `numTest=1`; ```; tree->GetEntryNumber(0)=16; tree->GetEntryNumber(1)=17; tree->GetEntryNumber(1)=1; tree->GetEntryNumber(1)=1; ```; For `numTest=2`; ```; tree->GetEntryNumber(0)=16; tree->GetEntryNumber(1)=17; tree->GetEntryNumber(2)=18; tree->GetEntryNumber(2)=2; tree->GetEntryNumber(2)=2; ```. ### Reproducer. ```C++; #include ""TFile.h""; #include ""TTree.h""; #include ""TError.h""; #include ""TEntryList.h"". #include<string>; #include<vector>; #include<iostream>. // function defined after main ; void createTree(const std::string &outputFile);. int main(){; ; // number of the test ; /",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13338:367,simpl,simple,367,https://root.cern,https://github.com/root-project/root/issues/13338,2,['simpl'],['simple']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):; ```; CMake Error at cmake/modules/RootMacros.cmake:336 (list):; list sub-command FILTER, mode REGEX failed to compile regex; ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"".; Call Stack (most recent call first):; cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY); core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13731:589,clear,clearer,589,https://root.cern,https://github.com/root-project/root/issues/13731,2,['clear'],"['clearer', 'clearly']"
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```; $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));""; ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python; import cppyy. cppyy.cppdef(""""""; struct foo {};; """"""). bar = cppyy.gbl.foo(); print(f""cppyy version {cppyy.__version__}""); print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""); This gives:; ```. This returns:. ```; cppyy version 1.6.2; Does foo have __getitem__()? False; ```. vs. ```; cppyy version 3.1.2; Does foo have __getitem__()? True; ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas?. ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15161:175,simpl,simple,175,https://root.cern,https://github.com/root-project/root/issues/15161,2,"['clear', 'simpl']","['clearly', 'simple']"
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop).; This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```; #include <ROOT/RDataFrame.hxx>; #include <TROOT.h>; #include <vector>; #include <string>. int main(); {; ROOT::EnableImplicitMT();; ; for (UInt_t i = 0 ; i < 100; i++){; 	std::vector<std::string> input_files;; 	input_files.emplace_back(""test1.root"");; 	input_files.emplace_back(""test2.root"");	; std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrigPassed"", ""IsSingleMuonTrigMatched"", ""IsSingleMuonTrigPa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15079:623,simpl,simply,623,https://root.cern,https://github.com/root-project/root/issues/15079,1,['simpl'],['simply']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See the report on the forum https://root-forum.cern.ch/t/accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called/59261. This is simply due to distributed RDataFrame not keeping track of the defined columns. In general, the inner, local RDataFrame object is really just an empty shell for now. ### Reproducer. See the report. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15442:238,simpl,simply,238,https://root.cern,https://github.com/root-project/root/issues/15442,1,['simpl'],['simply']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*; 2. `root -l failWS_release.root`; 3. `fail->Print()`; 4. See: ""message : function value is NAN"". Please find here the workspace:; [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:; https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13749:132,simpl,simple,132,https://root.cern,https://github.com/root-project/root/issues/13749,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The RDataFrame execution order for branches of the computation graph is bottom-up: actions request values to the upstream readers traversing them one by one in reverse order w.r.t. their insertion. This logic seems to be flipped when the action is JITted. In a simple example with two `Define`d columns and one `Graph`, the order of execution of the `Define`s changes depending on whether the action needs to infer the column types or not. Correc order (bottom-up); ```; ./repro_graph_compiled.out ; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:852 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Starting event loop number 0.; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:811 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Nothing to jit and execute.; Defining 'b2': address: 0x7ffe1477198c, value: 42; Defining 'b1': address: 0x7ffe1477198c, value: 10; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:889 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 6.10352e-05s elapsed).; graph: X: 10,Y:42; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:811 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Nothing to jit and execute.; ```. Wrong order; ```; ./repro_graph_jitted.out ; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:852 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Starting event loop number 0.; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:825 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Just-in-time compilation phase completed in 1.388524 seconds.; Defining 'b1': address: 0x7ffd017cb8dc, value: 42;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15686:336,simpl,simple,336,https://root.cern,https://github.com/root-project/root/issues/15686,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There are a couple of places in ROOT that use a different case for one of the functions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```; /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from; /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a; /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for; /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/); /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/); /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/); /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;; /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;; /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;; /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;; /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from; /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the; ```. ### Reproducer. `grep -n -r DistanceToPrimitive /opt/root_src/*`. ### ROOT version. ```; ROOT v6.32.00; Built for",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16087:478,guid,guide,478,https://root.cern,https://github.com/root-project/root/issues/16087,3,['guid'],['guide']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python; import cppyy; import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works!; cppyy.gbl.std.function[""void(int, int)""]() # works!; cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work!; ```. Gives you this output:; ```txt; Traceback (most recent call last):; File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>; cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work!; ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__; pyclass = _backend.MakeCppTemplateClass(*newargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class; ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16064:688,simpl,simple,688,https://root.cern,https://github.com/root-project/root/issues/16064,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This issue stems originally from https://github.com/cms-sw/cmssw/issues/43077 and is a place to continue the discussions of https://github.com/root-project/root/pull/14261 and https://github.com/root-project/root/pull/14276 . ## The symptoms. In seemingly innocent examples we end up opening a huge amount of files at ROOT startup time. See in particular https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 or https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781128718 . It turns out that the immediate cause of the large amount of open calls is that some symbol is missing and cling needs to traverse many files in order to find it. So far, offending symbols have been `TString::kNPOS` and `k*` variables from `TError.h`. ## The way forward. While the two linked ROOT PRs solve (maybe hide?) the immediate problem, there is an underlying root cause which is highlighted by the fact that in ROOT 6.26 (LLVM9) none of this was an issue. Ideally, we need to find a way to avoid the eager search of symbols in all libraries in `$LD_LIBRARY_PATH`. In fact, the mere fact that we search for the symbol `TString::kNPOS` in such simple examples is a problem, that shouldn't be necessary. ### Reproducer. https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225. ### ROOT version. `>=6.28`. ### Installation method. build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14277:1224,simpl,simple,1224,https://root.cern,https://github.com/root-project/root/issues/14277,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This line; https://github.com/root-project/root/blob/2b997add1d6b432ce27f35c1cbf385ffdc4a7cd5/math/matrix/src/TDecompBase.cxx#L231; is wrong and leads to a runaway loop until it reaches the limit.; The handbook mentioned in the comment of the function correctly uses ≥1 instead of <1 in its algorithm.; The fix simply consists in changing <1 to ≥1. Pull request in preparation. ### Reproducer. As it is, the code works, but may lead to reduced numerical precision for big matrices. ### ROOT version. all, I guess ?. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13110:386,simpl,simply,386,https://root.cern,https://github.com/root-project/root/issues/13110,1,['simpl'],['simply']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15318:1176,simpl,simply,1176,https://root.cern,https://github.com/root-project/root/issues/15318,2,"['clear', 'simpl']","['clearly', 'simply']"
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 ; The script is quite simple:; ```; from ROOT import TFile; f=TFile.Open(""tmp.RDO""); f.ls(); t=f.Get(""CollectionTree""); n=t.GetEntries(); for i in range(n):; s=t.GetEntry(i); print(s); f.Close(); ```; For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0; . ### ROOT version. Writing: 6.32/02; Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15964:572,simpl,simple,572,https://root.cern,https://github.com/root-project/root/issues/15964,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. After merging #12676, _all the page sources_ are required to be able to populate the page zero from the `kTypePageZero` locator. However, for for the sake of simplifying the PR #12676 (which was already quite large), this was not included and thus left for a follow-up pull request. ### What is the expected behaviour?. `RPageSourceDaos` should be able to populate the page zero in all cases, i.e. a call to `PopulatePage()`, `LoadSealedPage()`, or `LoadClusters()`. ### How to reproduce?. n/a. ### ROOT version. master. ### How did you install ROOT?. custom build. ### Which operating system are you using?. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12960:238,simpl,simplifying,238,https://root.cern,https://github.com/root-project/root/issues/12960,1,['simpl'],['simplifying']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as; `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour?. If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce?. Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT?. custom build. ### Which operating system are you using?. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13017:151,progress bar,progress bar,151,https://root.cern,https://github.com/root-project/root/issues/13017,2,['progress bar'],['progress bar']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:; ```; Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux; ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour?. Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce?. Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash; root@2cd219ab253b:~/data# root --version; ROOT Version: 6.28/04; Built for linuxx8664gcc on May 24 2023, 17:37:00; From tags/v6-28-04@v6-28-04; root@2cd219ab253b:~/data# root -l workspace_example.root; root [0]; Attaching file workspace_example.root as _file0...; (TFile *) 0x402fde6770; root [1] minimal_example->PrintXML(); Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux; ```. ### ROOT version. 6.28/04. ### How did you install ROOT?. custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using?. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967:709,clear,clear,709,https://root.cern,https://github.com/root-project/root/issues/12967,1,['clear'],['clear']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```; root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root; root [0] Electrons_All->Draw(""pt__NOSYS""); ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```; wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root; root -l test_ntuples_200123.root ; ```. takes 0.6s. ### What is the expected behaviour?. _No response_. ### How to reproduce?. See original report. ### ROOT version. 6.26.10. ### How did you install ROOT?. Does not matter. ### Which operating system are you using?. Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13018:233,simpl,simply,233,https://root.cern,https://github.com/root-project/root/issues/13018,1,['simpl'],['simply']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). ; This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot.; Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour?. The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce?. On macOS using Instruments one can do:; ; ```bash; xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root; open root.trace; ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT?. ALICE build environment. ### Which operating system are you using?. macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000:93,simpl,simple,93,https://root.cern,https://github.com/root-project/root/issues/13000,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ### Describe the bug; A range object that return different types for `begin()` and `end()`(A.K.A. not a [common-range](https://en.cppreference.com/w/cpp/ranges/common_range)) fails to check if the types is printable. ### Expected behavior; `printValue_impl<CollectionType>` must not have hard error whether `CollectionType` is printable or not. ### Reproducer. I'm using C++14 library that provide [`vccc::views::iota`](https://github.com/visualcamp/vccc/blob/6080acb71122f984293c38f17412ceb085f43b02/include/vccc/__ranges/views/iota_view.hpp#L434-L445) that models [`std::views::iota`](https://en.cppreference.com/w/cpp/ranges/iota_view).; The standard defines that It returns different type for sentinel if it models unbounded `iota_view`. Anyway, detailed description is not really necessary because the fix is really simple and intuitive. #### Input line; ```c++; vccc::views::iota(10) | vccc::views::take(4); ```; #### Output; ```c++; In file included from input_line_11:1:; In file included from /Users/yonggyulee/Documents/GitHub/lackhole/xeus-cling/install/include/xcpp/xmime.hpp:16:; /usr/local/include/cling/Interpreter/RuntimePrintValue.h:224:7: error: 'auto' deduced as 'counted_iterator<I>' (aka 'counted_iterator<vccc::ranges::iota_view<int, vccc::unreachable_sentinel_t>::iterator>') in declaration of 'iter' and deduced as 'sentinel<true>' in declaration of 'iterEnd'; auto iter = obj->begin(), iterEnd = obj->end();; ^ ~~~~~~~~~~~~ ~~~~~~~~~~; /usr/local/include/cling/Interpreter/RuntimePrintValue.h:241:39: note: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<vccc::ranges::take_view<vccc::ranges::iota_view<int>>>' requested here; return collectionPrinterInternal::printValue_impl(obj);; ^; /Users/yonggyulee/Documents/GitHub/lackhole/xeus-cling/install/include/xcpp/xmime.hpp:49:39: note: in instantiation of function template specialization 'cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14966:896,simpl,simple,896,https://root.cern,https://github.com/root-project/root/issues/14966,2,"['intuit', 'simpl']","['intuitive', 'simple']"
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Class `TProcessEventTimer` is async timer and used inside `TTreePlayer::Process()` method to enable events processing during `TTree::Draw()`. Main problem - all data handling in the `THttpServer` performed inside `THttpTimer` handler - including `TTree::Draw()` invoked from `RBrowser`. So to say one cannot initiate async timer inside sync timer handler. There is simple solution. In `TUnixSystem::DispatchTimers(Bool_t mode)` one should change line 2947:; https://github.com/root-project/root/blob/master/core/unix/src/TUnixSystem.cxx#L2947; ```; fInsideNotify = !mode; ; ```. Means handling of ""normal"" sync timers is not dangerous and do not block functionality to reset async timer inside ; `TUnixSystem::ResetTimer` which implemented as:. ```; void TUnixSystem::ResetTimer(TTimer *ti); {; if (!fInsideNotify && ti && ti->IsAsync()); UnixSetitimer(NextTimeOut(kFALSE));; }; ```. Another solution - let process `THttpServer` events differently - not in the `THttpTimer` handler. ; But this means extension of `TSystem::DispatchOneEvent` method. Like adding generic event handlers called every time `gSystem->ProcessEvents()` is called. . ### Reproducer. Not provided. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13224:440,simpl,simple,440,https://root.cern,https://github.com/root-project/root/issues/13224,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Dear experts,; since ROOT 6.30 I have encountered an issue when calling simple functions inside a `TTree::Scan`. For example, if I consider a function whose prototype is ; `int func(int a)`; and call it in a `TTree::Scan`; `t->Scan(""func(myBranch)"")`. it will always be called with 0 as argument. This happens also when passing a constant argument (`t->Scan(""func(2)"")`). This issue doesn't appear in root 6.28. Cheers,; Marino. ### Reproducer. To reproduce the bug just call the `test()` function in the following piece of code; ```; root[] .L filename.C; root[] test(); ```. If this macro is run with root 6.28, the `cout` in `testfunc` will correctly print the values of the branches and `testfunc` column in the Scan will show the correct output of the formula `a+b*c`. When run with ROOT 6.30, the `cout` will print `0 0 0` and the `testfunc` column will always be 0. ```; #include <iostream>; #include <string>; #include <TFile.h>; #include <TTree.h>. using namespace std;. float testfunc(int a, int b, float c); {; cout << a << "" "" << b << "" "" << c << endl;; return a + b * c;; }. void createTree(const string &filename); {; cout << ""Creating tree in file "" << filename << endl;; TFile *f = TFile::Open(filename.c_str(), ""RECREATE"");; TTree *t = new TTree(""t"", ""t"");; int a;; int b;; float c;; t->Branch(""a"", &a, ""a/I"");; t->Branch(""b"", &b, ""b/I"");; t->Branch(""c"", &c, ""c/F"");; for (int i = 0; i < 10; ++i); {; a = i;; b = i + 1;; c = i + 2;; t->Fill();; }; t->Write();; f->Close();; cout << ""Tree created"" << endl;; }. void runExampleScan(const string &filename); {; cout << ""Running example scan"" << endl;; TFile *f = TFile::Open(filename.c_str());; TTree *t = (TTree *)f->Get(""t"");; t->Scan(""a:b:c:testfunc(a,b,c)"", """", ""colsize=20"");; delete t;; delete f;; }. void runExampleDraw(const string &filename); {; gROOT->SetBatch();; TCanvas *c = new TCanvas(""c"", ""c"", 800, 600);; cout << ""Running example draw"" << endl;;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14405:147,simpl,simple,147,https://root.cern,https://github.com/root-project/root/issues/14405,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. For a ROOT file structured with top-level directories A and B, it seems that if B contains a subdirectory also named A the objects in that subdirectory may fail being properly merged when using **_hadd_**; instead the outcome is a simple copy of the object in the first source file... The getDirectory() helper in TFilerMerger::MergeOne() indeed apparently favours a lookup based on the directory name and not the full path, which may not always pick the intended directory:; https://github.com/root-project/root/blob/0aa2b6b8760b78dff2cffd873f955735fa1b0ef3/io/io/src/TFileMerger.cxx#L548. ### Reproducer. Save self-contained script below to mwe.cxx and execute with **_root -l -b -q mwe.cxx++_**; ```; #include ""TFileMerger.h""; #include ""TFile.h""; #include ""TH1D.h""; #include <iostream>. void createSrcFile(const char* name); {; TFile f(name, ""RECREATE"");; f.mkdir(""A"", """");; f.mkdir(""B/A"", """");; f.mkdir(""C/D/A"", """");; f.cd(""A"");; TH1D h1(""H1"", ""H1"", 1, 0., 1.);; h1.SetBinContent(1, 1);; h1.Write();; f.cd(""B/A"");; TH1D h2(""H2"", ""H2"", 1, 0., 1.);; h2.SetBinContent(1, 10);; h2.Write();; f.cd(""C/D/A"");; TH1D h3(""H3"", ""H3"", 1, 0., 1.);; h3.SetBinContent(1, 100);; h3.Write();; f.Close();; }. void check(const char* filename, const char* deco); {; TFile f(filename, ""READ"");; std::cout << deco; 	 << f.Get<TH1D>(""A/H1"")->GetBinContent(1); 	 << "" ""; << f.Get<TH1D>(""B/A/H2"")->GetBinContent(1); 	 << "" ""; 	 << f.Get<TH1D>(""C/D/A/H3"")->GetBinContent(1); 	 << std::endl;; f.Close();; }. void mwe(); {; createSrcFile(""src1.root"");; createSrcFile(""src2.root"");; TFileMerger mg;; mg.AddFile(""src1.root"", kFALSE);; mg.AddFile(""src2.root"", kFALSE);; mg.OutputFile(""dest.root"", kTRUE);; mg.Merge();; check(""src1.root"", "" "");; check(""src2.root"", ""+ "");; std::cout << ""------------\n"";; check(""dest.root"", ""= "");; }; ```. ### ROOT version. 6.32.02. ### Installation method. lxplus native. ### Operating system. RHEL 9.4. ### Additional ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16190:306,simpl,simple,306,https://root.cern,https://github.com/root-project/root/issues/16190,1,['simpl'],['simple']
Usability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. I apologise in advance since I cannot clearly say whether this is the expected behaviour and my code should be fixed or if the new graphics is not behaving correctly.; The X axis labels are touching the plot with the new graphics while they are not with the old one. ### Reproducer. See attached root file: [timeseries.root.zip](https://github.com/root-project/root/files/12717037/timeseries.root.zip). ### ROOT version. master. ### Installation method. build from sources. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13719:113,clear,clearly,113,https://root.cern,https://github.com/root-project/root/issues/13719,1,['clear'],['clearly']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""\; class Abstract {; public:; Abstract() : data1_(3) {};; virtual ~Abstract() {};. virtual int method() = 0;. private:; int data1_;; };. class Derived : public Abstract {; public:; Derived() : Abstract() {};. int method() override { return data2_; };. private:; int data2_;; };; """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint; # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and; # catch the exception, then later attempts to make Derived now fail; # with puzzling JIT errors; try:; obj1 = model.MakeField[""Abstract""](""test1""); except ValueError as ex:; print(ex); obj2 = model.MakeField[""Derived""](""test2""); ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13910:194,clear,clear,194,https://root.cern,https://github.com/root-project/root/issues/13910,1,['clear'],['clear']
Usability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. If load canvas with ratio plot from the file and then simply close it - ROOT crashes. ### Reproducer. root -l -b https://jsroot.gsi.de/files/ratioplot.root -e 'ratioplot1->Draw(); ratioplot1->Close();' . ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14855:129,simpl,simply,129,https://root.cern,https://github.com/root-project/root/issues/14855,1,['simpl'],['simply']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the first stack histogram has negative bin content - it will not be shown automatically.; The only chance to see negative bins is to set min/max values for THStack. . `df106` macro draws such a stack and one bin is hidden from the drawing. ### Reproducer. Here is a simple reproducer macro:; [hstack.C.txt](https://github.com/user-attachments/files/15551454/hstack.C.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE linux, Mac ...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15740:344,simpl,simple,344,https://root.cern,https://github.com/root-project/root/issues/15740,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:; 1. A crash, upon first execution; 2. A system freeze, once the browser is loaded. ## Crash; Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:; ```; [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:; ERROR: Failed parsing extensions; [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ ; -> Created TensorFlow Lite XNNPACK delegate for CPU.; ```; The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze; Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py; import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(); h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""); h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15474:152,simpl,simple,152,https://root.cern,https://github.com/root-project/root/issues/15474,2,"['responsiv', 'simpl']","['responsive', 'simple']"
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. OpenGL isn't working at least for the following versions of macosx and command line tools when compiled from source.; The issue was also seen for some older macosx versions and for me it is not clear if this is problem of the macosx or XCode version and with which version it was introduced. The problem is seen with ROOT 6.30.08 as well as the latests 6.32.06. macosx | CLT; 14.6.1 (x86) | 15.3; 14.6.1 (arm) | 15.3; 13.6.7 (x86) | 15.1; 14.3 (x86) | 15.1; 14.3. (arm) | 15.1. The problem is for example visible when executing the tutorial share/doc/root/tutorials/eve/box.C from the installation directory. The expected behaviour is that a shape is displayed in the viewer. The seen behaviour is that only a blavk screen is displayed and the following warning is printed . `Warning in <TGLLogicalShape::Draw>: display-list registration failed.`. When installing root using brew the problem is gone and the expected behaviour is seen when running the above mentioned macro. Unfortunately when using brew to compile root from the sources the problem appears again. On only gets a black screen and the warning. So obviously there must be some difference between the machine used to generate the brew bottles and the machines used by me and my colleagues. Do you have any idea what the problem could be and how to fix it. . ### Reproducer. Install root from sources using brew. `brew install -s root`. Execute the following macro. `$HOMEBREW_PREFIX/Cellar/root/6.32.06/bin/root ; $HOMEBREW_PREFIX/Cellar/root/6.32.06/share/doc/root/tutorials/eve/box.C `. The command should open a viewer where only a black screen is displayed with the warning . `Warning in <TGLLogicalShape::Draw>: display-list registration failed.`. in the terminal. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16523:269,clear,clear,269,https://root.cern,https://github.com/root-project/root/issues/16523,1,['clear'],['clear']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Recent version of PyROOT/cppyy fails for relatively simple templated function overload with SFINAE. The reproducer is here.; There is templated C++ class A; and there are template functions `fun_2` overloaded with SFINAE - see below. For completeness:; - for templated member functions SFINAE overload works ok.. [It was not the case for relatively old PyROOT/cppyy. I am using LCG-dev3 cvmfs nightly builds with ROOT 6.31/01. ### Reproducer. ```python; import ROOT; print ( 'ROOT version' , ROOT.gROOT.GetVersion() ); ROOT.gInterpreter.Declare('''; #include <type_traits> ; #include <string> ; template <unsigned int N>; class A; {; public:; //; template <unsigned int K,; typename std::enable_if<(K<N),int>::type = 0 >; std::string fun_1 () { return ""ququ"" ;} ; //; template <unsigned int K,; typename std::enable_if<(N<=K),int>::type = 0 >; int fun_1 () { return K ;} ; };; // the same with functions; template <unsigned int K,unsigned int N, ; typename std::enable_if<(K<N),int>::type = 0 >; inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} ; //; template <unsigned int K,unsigned int N,; typename std::enable_if<(N<=K),int>::type = 0 >; inline int fun_2 ( A<N>& ) { return K ;} ; '''). N = 4 ; a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) ; for k in range ( 2 * N + 1 ) : ; print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) ; for k in range( 2 * N + 1 ) :; func = ROOT.fun_2[k,N]; print ( k , func ( a ) ) ; ```. And the output is: ; ```; ROOT version 6.31/01; Use templated method of templated class A<4> : it is OK; 0 ququ; 1 ququ; 2 ququ; 3 ququ; 4 4; 5 5; 6 6; 7 7; 8 8; Use templated function for templated class A<4> : it fails for k >=4; 0 ququ; 1 ququ; 2 ququ; 3 ququ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>; p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15085:127,simpl,simple,127,https://root.cern,https://github.com/root-project/root/issues/15085,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Reporting on behalf of Fermilab SBN collaboration and SciSoft group. ---. We have some ROOT data files containing `RooInt` objects (we used then for storing ""metadata"").; That class was removed from ROOT (ca29ccf1) and we can't read that data any more.; This is not exactly a bug, since ROOT works as intended — but that intention breaks our data. Twofold question:; 1. how to work around the problem for existing data using newer ROOT; 2. are there other recommended ways to simply store an integer with a name in a ROOT file?; `TNamed` comes to mind, but it needs explicit conversions, and that is why `RooInt` was preferred. For people with Fermilab access, there is a [related Redmine ticket #28974](https://cdcvs.fnal.gov/redmine/issues/28974). ### Reproducer. 1. Write a `RooInt` object in a new `TFile` with ROOT 6.28; 2. Try to read that object from that `TFile` with the latest ROOT. ### ROOT version. `v6-32-00`. ### Installation method. Build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16380:551,simpl,simply,551,https://root.cern,https://github.com/root-project/root/issues/16380,1,['simpl'],['simply']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Simple latex `g^{*}` with symbol font is not correctly stored in the PDF file.; ```; auto l = new TLatex(0.5, 0.5, ""g^{*}"");; l->SetTextFont(122);; l->SetTextAlign(22);; l->SetTextSize(0.2);; ```. ### Reproducer. [latex1.cxx.txt](https://github.com/user-attachments/files/17132728/latex1.cxx.txt). ![c1](https://github.com/user-attachments/assets/79403060-5242-41ea-81b5-545df114afa8). [c1.pdf](https://github.com/user-attachments/files/17132733/c1.pdf). ### ROOT version. Master branch. ### Installation method. build from source. ### Operating system. OpenSUSE linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16527:75,Simpl,Simple,75,https://root.cern,https://github.com/root-project/root/issues/16527,1,['Simpl'],['Simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples).; Typically for this task I make a loop over RooPlot components and ""sum"" them manually.; To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects.; I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion ; from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/; The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist.; I've prepared a file with two `RooHist` objects in mu piblic AFS directory; ```; import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'); h1 = f.Get ( 'h1' ) ## RooHist ; h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum ; hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum ; h1.Draw ('same') ## draw the first component ; h2.Draw ('same') ## draw the second component . h1.SetLineColor(2); h2.SetLineColor(4); ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist.; I've prepared a file with two `RooHist` objects in mu piblic AFS directory; ```; import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'); h1 = f.Get ( 'h1' ) ## RooHist ; h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum ; hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum ; h1.Draw ('same') ## draw the first component ; h2.Draw ('same') ## draw the second component . h1.SetLineColor(2); h2.SetLineColor(4); ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15052:676,simpl,simple,676,https://root.cern,https://github.com/root-project/root/issues/15052,2,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The event weight obtained from `TGenPhaseSpace::Generate()` that is used to get a flat distribution is not normalized to 1. The number rather seems to correspond to the square of the portion of the phase space occupied by the kinematically allowed final states, e.g., for three massless particles, the shape is a triangle that occupies 1/2 of the m_{12}^2 and m_{23}; ^2 ranges, and the normalization is indeed 1/4 (instead of 1). Maybe this is a feature and not a bug, but it should be documented in the `TGenPhaseSpace::Generate()` method. It would also be useful to have a method that returns the correct event weight. At the moment, in order to get a correctly normalized weight, one can run a Monte Carlo to obtain an overall normalization of the distribution for chosen masses and then apply this normalization as a correction on individual weights of generated events. ### Reproducer. A simplest example can be the tutorial macro: [PhaseSpace.C](https://root.cern.ch/doc/master/PhaseSpace_8C.html). ### ROOT version. Present in v6.30 but the behavior was the same in v5 and possibly before. ### Installation method. built from source. ### Operating system. Probably all systems (tested on Linux Centos 7, Centos 8, Rocky 9, macOS Sonoma 14). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14765:969,simpl,simplest,969,https://root.cern,https://github.com/root-project/root/issues/14765,1,['simpl'],['simplest']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The original report is available here:; https://root-forum.cern.ch/t/streamerinfo-is-not-stored-in-tfile-with-update-mode/57383. ```; We have an executable which loops over multiple TFiles (each containing 1 object of different classes not known to this application, though the problem is the same if all includes are added) , and for each file. opens it in the ""update"" mode (w/o explicitly loading the object stored in the file); writes some simple struct with metadata; closes the file.; Afterwards, in separate processes, these files are read by other executables (Consumers) which include headers for objects inside these files. The ClassVersion of the content for some of these files is lower than the current ClassVersion used by Consumers. Automatic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TLis",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14171:519,simpl,simple,519,https://root.cern,https://github.com/root-project/root/issues/14171,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms); 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration); 3. see the memory increase forever. You can test the bug with the following script:; ```; import resource; import ROOT. def print_memory_usage(message):; print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""); histogram_names = open(""histogram_names.txt"").read().splitlines(); print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1""; with ROOT.TFile.Open(fn) as f:; print_memory_usage(""open ROOT file""); for i, histogram_name in enumerate(sorted(histogram_names)):; h = f.Get(histogram_name); if i % 1000 == 0:; print_memory_usage(f""read {i+1} histograms""); print_memory_usage(""read all histograms""); print_memory_usage(""outside context maneger (closing ROOT file)""); ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16178:414,simpl,simple,414,https://root.cern,https://github.com/root-project/root/issues/16178,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a `can't dereference invalidated vector iterator` assertion failure in `SimpleCollectionProxy.hxx` (at line 23) when running `ntuple_show.exe` on Windows. This code is the issue: `*end_arena = &(*vec.end());` one cannot dereference `end()`, [as explained in the standard](https://en.cppreference.com/w/cpp/container/vector/end):; > end() returns an iterator to the element following the last element of the vector. This element acts as a placeholder; attempting to access it results in undefined behavior. Note there is the same kind of potential issue at line 27 with `static_cast<IteratorData *>(*end_arena)->ptr = &(*vec.end());`. ### Reproducer. Run the `ntuple_show.exe` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13568:156,Simpl,SimpleCollectionProxy,156,https://root.cern,https://github.com/root-project/root/issues/13568,1,['Simpl'],['SimpleCollectionProxy']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp; root [0] g=TF1(""gaus""); Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477.; ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13965:91,simpl,simple,91,https://root.cern,https://github.com/root-project/root/issues/13965,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++; void test() {. ROOT::RDataFrame df(100);; ROOT::RDF::Experimental::AddProgressBar(df);; auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });; auto max = def.Range(0, 10);; auto hist = max.Histo1D(""x"");; std::cout << hist->Integral() << ""\n"";; }; ```. The following code shows:; ```; root [0] ; Processing test.cxx...; [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] ; 10; ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15323:121,progress bar,progress bar,121,https://root.cern,https://github.com/root-project/root/issues/15323,3,['progress bar'],['progress bar']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used.; When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:; ```; void test_save(); {; auto f1 = new TF1(""linear"", ""x"", -5, 5);; f1->SetNpx(10);; f1->Draw(""l"");; Double_t xx[1] = { 0 };; // this works properly; f1->Save(-5, 5, 0, 0, 0, 0);; printf(""Get saved at 0 %f\n"", f1->GetSave(xx));; // calling with default args make mistake by 0.5 bin; f1->Save(0, 0, 0, 0, 0, 0);; printf(""Get saved at 0 %f\n"", f1->GetSave(xx));; }; ```; [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5.; Running the example :. ```; Get saved at 0 0.000000; Get saved at 0 0.500000; ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13927:338,Simpl,Simple,338,https://root.cern,https://github.com/root-project/root/issues/13927,1,['Simpl'],['Simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message; ```; /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h""; header ""canvas/Persistency/Common/Sampled.h""; ^; ```; This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g.; ```; module ""critic_test_art_sampling-input_dict"" {; requires cplusplus; header ""canvas/Persistency/Common/Sampled.h""; link ""libcanvas.so""; }; ```; 1. Attempt to create a PCM from it:; ```; rootcling --cxxmodule -f -v4 ...; ```; 1. Check the error code:; ```; echo $?; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13675:699,simpl,simple,699,https://root.cern,https://github.com/root-project/root/issues/13675,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When having fields with mixed STL types sometimes you run into issues when trying to fill them. I've attached an example below. ### Reproducer. This is a minimal script that shows that issue. ```cpp; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RNTupleWriter.hxx>; ; #include <TSystem.h>; ; #include <vector>; #include <variant>; #include <optional>; ; using RNTupleModel = ROOT::Experimental::RNTupleModel;; using RNTupleWriter = ROOT::Experimental::RNTupleWriter;; ; void ntpl_issue(); {; auto model = RNTupleModel::Create();; ; auto fldVvar = model->MakeField<std::vector<std::variant<std::optional<int>,float>>>(""vvar"");; ; auto ntuple = RNTupleWriter::Recreate(std::move(model), ""F"", ""ntpl_issue.root"");; ; for (int i = 0; i < 10; i++) {; fldVvar->clear();; ; for (int j = 0; j < 5; ++j) {; std::variant<std::optional<int>,float> var(1.0);; fldVvar->emplace_back(var);; }; ; ntuple->Fill();; }; }; ```. And this is the error that it produces.; ```; Fatal: (typedValue->size() % fItemSize) == 0 violated at line 2432 of `.../root_src/tree/ntuple/v7/src/RField.cxx'; aborting; ```. Another way to get it to fail is by using `std::vector<std::variant<std::atomic<int>,float>>`. ### ROOT version. 6.33/01 (commit eef2244). ### Installation method. Built from source. ### Operating system. macOS. ### Additional context. I found this issue while trying to generate `std::variant` types in an invalid state by doing something like this. ```cpp; struct S {; operator int() { throw 42; }; };. std::variant<int,float> var;; try {; var = S();; } catch (int) {}; fldVvar->emplace_back(var);; ```. The spec indicates that invalid states are supported, as shown in the line below. I wanted to ask what's the reason for them being supported given that they are not really supposed to be ""legal"", and it seems like one can't successfully generate an RNTuple with an invalid state. It either ends up initializing the first variant or",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15534:832,clear,clear,832,https://root.cern,https://github.com/root-project/root/issues/15534,1,['clear'],['clear']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16119:727,simpl,simple,727,https://root.cern,https://github.com/root-project/root/issues/16119,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:; ```; module ""critic_test_art_sampling-input_dict"" {; requires cplusplus; header ""canvas/Persistency/Common/Sampled.h""; export *; link ""libcanvas.so""; }; ```; The specified header is not found—as it would be in C++ source—even in the presence of; ```; -I<path/to/parent/of/relative/path>; ```; on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory.; 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent.; 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`; 4. Observe the failure to find the header. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13689:82,simpl,simple,82,https://root.cern,https://github.com/root-project/root/issues/13689,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. ATLAS is seeing a number of unit test failures in the dev4LCG/el9 nightlies; (which use root-6.28.00-patches); that are linked to trying to operate on Eigen objects from pyroot.; I've managed to reduce this to a simple, standalone example, which reveals; that the issue has to do with a template overload for operator(). The reproducer is in the attached archive. The included setup script; should be appropriate for lxplus9.; Run:. $ . ./setup; $ ./build.sh; $ python test.py. and it crashes with a segmentation violation. From gdb, the stack trace is:. ```; #0 0x00007ffff7558f13 in std::construct_at<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__location=0x5f3a3a676e697274); at /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/bits/stl_construct.h:97; #1 0x00007ffff75588c3 in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (; __p=0x5f3a3a676e697274, __a=...); at /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/bits/alloc_traits.h:539; #2 std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff75ba167, __x=@0x7fffffff7c40: 0x73abec0); at /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/bits/stl_vector.h:1281; #3 0x00007ffff75624a9 in CPyCppyy::CPPOverload::AdoptMethod (; this=0x7ffff75fe9a0 <CPyCppyy::TemplateProxy_Type>, pc=0x73abec0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:946; #4 0x00007ffff759fb6a in CPyCppyy::TemplateProxy::AdoptMethod (; this=0x7fffd65c01f0, pc=0x73abec0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111; #5 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13410:293,simpl,simple,293,https://root.cern,https://github.com/root-project/root/issues/13410,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411); in which a job that loaded many dictionaries was starting to fail with; errors like. ```; cling JIT session error: Cannot allocate memory; ```. Although the job in question was not small, it was also not close to hitting; any limit on the process virtual size, which made this error confusing.; It turned out that what was happening was that the job was hitting; the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below.; When i run this on lxplus, it fails after about 21600 iterations, at which; point we have. ```; 21600 vmsize 1.2G nvma 65469; ```. So the total vmsize still (relatively...) quite small, but the number; of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```; 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 ; 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 ; 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 ; 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 ; 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 ; 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 ; 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 ; ```. So each time the jitter runs, it is producing a section of executable; memory, a section of read-only memory, and a section of read-write memory.; This would also be a performance issue. The jitter should somehow be more intelligent about grouping together; regions of the same protection. This may however be in tension; with other requirements, such as this comment from IncrementalJit.cpp:. ```; // A memory manager for Cling that reserves memory for code and data sections; // to keep them contiguous for the emission of one module. This is required; // for working exception handling support since one .eh_frame section will; // refer to many separate .text sections. However, stack unw",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14156:596,simpl,simple,596,https://root.cern,https://github.com/root-project/root/issues/14156,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,; https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message; ```; unable to export class 'RooBreitWigner' - no export keys available!; there are several possible reasons for this:; 1. RooBreitWigner is a custom class that you or some package you are using added.; 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for.; 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename); either way, please make sure that:; 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available; 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this!; (int) 0; ```. ### Reproducer. 1. Use the latest root,; `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`; ```c++; #include ""RooRealVar.h""; #include ""RooBreitWigner.h""; #include ""RooWorkspace.h""; #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(); {; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);; RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");; w.import(bw);. RooJSONFactoryWSTool tool(w);; tool.exportJSON(""standard_pdf.json"");; return 0;; }; ```. ### ROOT version. ```; root --version; ROOT Version: 6.33/01; Built for linuxx8664gcc on Apr 26 2024, 23:06:35; From heads/master@v6-31-01-1819-gb5ad658677; ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15370:616,clear,clearExportKeys,616,https://root.cern,https://github.com/root-project/root/issues/15370,1,['clear'],['clearExportKeys']
Usability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330, we just simple executable:; [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz), we get definitively lost report by valgrind:. ```; ==44592== at 0x483A809: malloc (vg_replace_malloc.c:309); ==44592== by 0x898CD15: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x8921B63: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02); ==44592== by 0x4AB98C0: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16121:170,simpl,simple,170,https://root.cern,https://github.com/root-project/root/issues/16121,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names.; But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up..; How can this be ?. The output of the reproducer is the following:; My f0 gets modified into t0..; ```; root [1] .x test.C; [f0] + [beta]*x; [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x""; ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```; {; 	double t0 = 0;; 	double t1 = 10;; 	; 	double f0 = 12.5;; 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";; TF1 *formula = new TF1(""formula1"", formulaStr);; formula->SetParName (0, ""beta"");; formula->SetParameter(0, beta);; formula->SetParName (1, ""t0"");; formula->SetParameter(1, t0);; formula->SetParName (2, ""f0"");; formula->SetParameter(2, f0);; formula->SetParName (3, ""t1"");; formula->SetParameter(3, t1);; formula->SetParName (4, ""f1"");; formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;; std::cout << formula->GetFormula()->GetExpFormula() << std::endl;; }; ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13709:187,simpl,simplicity,187,https://root.cern,https://github.com/root-project/root/issues/13709,2,"['clear', 'simpl']","['clear', 'simplicity']"
Usability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. It is not clear what `root macro_C.so` does. It should be documented in these places:; - [x] https://github.com/root-project/web/blob/main/manual/root_macros_and_shared_libraries/index.md; - [x] https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md; - [x] https://github.com/root-project/web/blob/main/manual/cling/index.md; - [x] https://github.com/root-project/root/blob/master/interpreter/cling/lib/MetaProcessor/MetaSema.cpp; - [x] core/base/src/root-argparse.py; - [x] TApplication.cxx if there is a custom change wrt cling. It's not clear if the call should also auto-run the macro or not like .x; Maybe it's an old remnant of CINT. Or maybe it should run it and right now there is a bug and it does not. The only documented place seems to be: page 27 [of this document](https://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuideA4.pdf) and it's not working on master. ### Reproducer. https://root-forum.cern.ch/t/cannot-run-shared-object-in-batch-mode/58213. ### ROOT version. ```; ROOT v6.30/04; Built for linuxx8664gcc on Jan 31 2024, 10:01:37; From heads/master@tags/v6-30-04; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. https://root-forum.cern.ch/t/cannot-run-shared-object-in-batch-mode/58213",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14772:85,clear,clear,85,https://root.cern,https://github.com/root-project/root/issues/14772,4,"['clear', 'guid']","['clear', 'guide', 'guides']"
Usability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances.; In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file.; The stack trace is the following:; ``` ; TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding ; ; *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info); [/usr/lib/dyld] start (no debug info); make[2]: *** [SofieCompileModels_ROOT] Error 139; make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2; make: *** [all] Error 2; ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` na",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15156:278,clear,clear,278,https://root.cern,https://github.com/root-project/root/issues/15156,2,['clear'],"['clear', 'clearly']"
Usability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. The RNTuple file backend should store streamer info records for the types stored in the ntuple in the hosting ROOT file. This will fix `TFile::MakeProject` wrt. RNTuple. ~~A field visitor is probably the right approach to collect the types for which a streamer info needs to be added.~~; ~~The streamer info records need to be generated from the RNTupleDescriptor (the on-disk information).~~; The streamer info can simply be taken from `TClass` at the time of writing.; At a later point, we can consider if we want to generate streamer info from the RNTuple schema. ### Reproducer. tbd. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14871:491,simpl,simply,491,https://root.cern,https://github.com/root-project/root/issues/14871,1,['simpl'],['simply']
Usability,"### Describe the bug. Following up on #11396, I noticed that a NLL created from a RooSimultaneous in a multi-ranged configuration doesn't give the expected value. In https://github.com/root-project/root/pull/11445, I tried to implement a unit test that was checking exactly that, but the NLL from RooSimultaneous was not consistent with a mathematically equivalent sum of NLLs per category. It is still not clear whether the difference is only a constant factor that doesn't influence the fit result, but this is potentially a but that even has an influence on the results. I suspect that it is actually biasing the fit result, because in multi-ranged fits the NLL is computed using an integral of the top-level PDF that is created with `createIntegral`, and I'm not sure if the integral of a RooSimultaneous is well defined in that context. Please @AlkaidCheng, take note of this, because this is a potential problem for your workflow. ### Expected behavior. The NLL value from a RooSimultaneous in a multi-range configuration should be the same value as the normalized combination of individual NLLs created in the individual categories. ### To Reproduce. Comment out the final part of the `MultiRangeFitWithSplitRange` unit test in `testRooSimultaneous`. ### Setup. Arch Linux with ROOT master. ### Additional context. - The priority level of this issue can be reduced if it turns out that the difference in the NLL value is a constant that doesn't affect the fit result",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11447:407,clear,clear,407,https://root.cern,https://github.com/root-project/root/issues/11447,1,['clear'],['clear']
Usability,"### Describe the bug. In PyROOT it has been possible to avoid the double `ROOT.ROOT` for some classes/functions for a while; ```py; import ROOT; df = ROOT.RDataFrame; ```; But that doesn't happen for every new class/function defined in C++ . This is a simple reproducer: create some entities in a namespace:; ```py; import ROOT. ROOT.gInterpreter.Declare(; """"""; namespace ROOT{; namespace Detail{; struct MyStruct{};; void dostuff(){}; int myint;; }}; """"""; ); ```; Then try to access them in a Python session; ```py; $ python -i namespace_function.py; >>> ROOT.Detail.MyStruct; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'MyStruct'. Full details:; type object 'Detail' has no attribute 'MyStruct'; 'Detail::MyStruct' is not a known C++ class; 'MyStruct' is not a known C++ template; 'MyStruct' is not a known C++ enum; >>> ROOT.ROOT.Detail.MyStruct; <class cppyy.gbl.ROOT.Detail.MyStruct at 0x55e51fe1dd60>; >>> ROOT.Detail.dostuff; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'dostuff'. Full details:; type object 'Detail' has no attribute 'dostuff'; 'Detail::dostuff' is not a known C++ class; 'dostuff' is not a known C++ template; 'dostuff' is not a known C++ enum; >>> ROOT.ROOT.Detail.dostuff; <cppyy.CPPOverload object at 0x7f522b684eb0>; >>> ROOT.Detail.myint; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'myint'. Full details:; type object 'Detail' has no attribute 'myint'; 'Detail::myint' is not a known C++ class; 'myint' is not a known C++ template; 'myint' is not a known C++ enum; >>> ROOT.ROOT.Detail.myint; 0; ```. It's unclear how to avoid the double `ROOT.ROOT` in general. ### Expected behavior; <!--; A clear and concise description of what you expecte",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8745:252,simpl,simple,252,https://root.cern,https://github.com/root-project/root/issues/8745,1,['simpl'],['simple']
Usability,"### Describe the bug. ROOT libraries compiled with clang and high optimization level emit floating point exceptions in the simplest codes. ### Expected behavior; No FPEs. ### To Reproduce; Compile the code below using clang; ```; clang++ -D_FORTIFY_SOURCE=2 -O4 -pipe -g -Wall -D_REENTRANT -D_GLIBCXX_ASSERTIONS -std=c++1y -o color5.exe color5.cxx; ```; and run ; ```; ./color5.exe; ```; Output of the reproducer. ```; msum 0.300000 0.100000; Floating point exception (core dumped); ```. The same compilation with ``-O1`` produces a working executable. Please note that this code is a reproducer obtained from the TColor::RGB2HLS static function. ```; #include <iostream>; #include <stdlib.h>. #include <fenv.h>; #define Float_t float; #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677:123,simpl,simplest,123,https://root.cern,https://github.com/root-project/root/issues/6677,1,['simpl'],['simplest']
Usability,"### Describe the bug. The following tests fail:; ```; 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed); 1052 - tutorial-v7-concurrentfill.cxx (Failed); 1054 - tutorial-v7-histops.cxx (Failed); 1055 - tutorial-v7-perf.cxx (Failed); 1056 - tutorial-v7-perfcomp.cxx (Failed); 1057 - tutorial-v7-simple.cxx (Failed); 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed); 1063 - tutorial-rcanvas-rh1.cxx (Failed); 1064 - tutorial-rcanvas-rh1_large.cxx (Failed); 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed); 1066 - tutorial-rcanvas-rh2.cxx (Failed); 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed); 1068 - tutorial-rcanvas-rh2_large.cxx (Failed); 1069 - tutorial-rcanvas-rh3.cxx (Failed); 1070 - tutorial-rcanvas-rh3_large.cxx (Failed); 1071 - tutorial-rcanvas-rlegend.cxx (Failed); 1082 - tutorial-rcanvas-subpads.cxx (Failed); 1577 - roottest-root-core-execStatusBitsCheck (Failed); ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce?. Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13058:297,simpl,simple,297,https://root.cern,https://github.com/root-project/root/issues/13058,1,['simpl'],['simple']
Usability,"### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`; we get the following errors:. ```; $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/; 0.0331268310547; [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook; [NbConvertApp] Executing notebook with kernel: python2; [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'; Traceback (most recent call last):; File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook; output, resources = self.exporter.from_filename(notebook_filename, resources=resources); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename; return self.from_file(f, resources=resources, **kw); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file; return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node; nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node; nb_copy, resources = self._preprocess(nb_copy, resources); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess; nbc, resc = preprocessor(nbc, resc); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__; return self.preprocess(nb, resources); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess; nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources); File ""/us",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10430:50,guid,guide,50,https://root.cern,https://github.com/root-project/root/issues/10430,1,['guid'],['guide']
Usability,"### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8073:858,simpl,simple,858,https://root.cern,https://github.com/root-project/root/issues/8073,1,['simpl'],['simple']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. After checking out a small commit that only touches a gtest, `libCling` gets rebuilt because a dependency (`VCSRevision.h`) changes, which in turn means everything that depends on cling gets rebuilt:. ```; // ... snip ...; [ 26%] Generating VCSRevision.h; [ 26%] Built target LLVMMCDisassembler; [ 26%] Built target LLVMOption; [ 26%] Built target LLVMMCParser; [ 26%] Built target LLVMRemarks; [ 26%] Built target clang-cmake-exports; [ 26%] Built target rconfigure; [ 27%] Built target obj.llvm-tblgen; [ 27%] Built target llvm_vcsrevision_h; [ 27%] Built target gitcommit; [ 27%] Built target LLVMDebugInfoMSF; [ 27%] Built target obj.clang-tblgen; [ 27%] Built target rootMan; [ 28%] Built target LLVMDebugInfoDWARF; [ 28%] Built target rsa; [ 28%] Built target LLVMDebugInfoCodeView; [ 28%] Built target haddMan; [ 28%] Built target LLVMMC; [ 28%] Built target hist2workspaceMan; [ 28%] Built target copy_pretty_printers; [ 28%] Built target rootclingMan; [ 28%] Built target ProofBenchPARFiles; [ 29%] Built target move_headers; [ 30%] Built target LLVMSupport; [ 30%] Built target Foundation_Stage1; [ 30%] Built target BaseTROOT; [ 30%] Built target Foundation; [ 30%] Built target clang-tblgen; [ 30%] Built target Clib; [ 30%] Built target llvm-tblgen; [ 30%] Built target Lz4; [ 30%] Built target TextInput; [ 30%] Built target Zstd; [ 30%] Built target Lzma; [ 30%] Built target Unix; [ 30%] Built target GuiCore; [ 30%] Built target Zip; [ 30%] Built target Cont; [ 30%] Built target Meta; [ 30%] Built target RootPcmObjs; [ 30%] Built target mathtext; [ 30%] Built target root; [ 30%] Built target rmkdepend; [ 30%] Built target AttributeCompatFuncTableGen; [ 30%] Built target rpdutil; [ 30%] Built target ClangAttrImpl; [ 30%] Built target intrinsics_gen; [ 30%] Built target ClangSACheckers; [ 30%] Built target InstCombineTableGen; [ 30%] Built target StmtDataCollectors; [ 30%] Built t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7893:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/7893,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Apparently calling `Display` with some extra parameter like `nRows` is not respected if before calling `Print` one adds any other operation to the graph. ### To Reproduce; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TString.h>; #include <string>; #include <vector>; #include <memory>; void write_tree(); {; int x{};; TString s{};. TFile file{""dataset.root"", ""recreate""};; TTree tree{""events"", ""events""};; tree.Branch(""nJets"", &x, ""nJets/I"");; tree.Branch(""systName"", &s);. std::vector<std::string> values{""nominal"", ""up"", ""down""};. for (int i = 0; i < 3; i++); {; x = i + 1;; s.Replace(0, s.Length(), values[i]);; tree.Fill();; }. tree.Write();; }. void read_tree(); {; TFile file{""dataset.root"", ""read""};; std::unique_ptr<TTree> tree{file.Get<TTree>(""events"")};; tree->Scan(""*"");; }. void analyze(); {; ROOT::RDataFrame df{""events"", ""dataset.root""};. // Book display; auto disp = df.Display(""systName"", 1);. // Do anything else; df.Count().GetValue();. // The display doesn't respect the original parameters; // Prints all 3 rows whereas it should print only one; disp->Print();; }. int main(); {; write_tree();; read_tree();; analyze();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; Fedora 36; ROOT 6.26/06 from conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11390:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/11390,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Calling `clear` followed by `push_back(x)` on a `RVec` that is adopting memory results in the wrong value being ""pushed back"": . ```; ~ root -l (cern-root) ; root [0] ROOT::RVec<int> v{1,2,3}; (ROOT::RVec<int> &) { 1, 2, 3 }; root [1] ROOT::RVec<int> v2(v.data(), v.size()); (ROOT::RVec<int> &) { 1, 2, 3 }; root [2] v2[0] = 0; (int) 0; root [3] v; (ROOT::RVec<int> &) { 0, 2, 3 }; root [4] v2.clear(); root [5] v; (ROOT::RVec<int> &) { 0, 2, 3 }; root [6] v2.push_back(42); root [7] v2; (ROOT::RVec<int> &) { 0 } // should be 42!!; root [8] v; (ROOT::RVec<int> &) { 0, 2, 3 }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6796:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/6796,3,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Due to the logic in `TTree::GetCacheAutoSize`, if `fAutoFlush == 0` then the size of the `TTreeCache` is set to 0 which in turn disables it. However there are separate mechanisms to disable the `TTreeCache` if desired (e.g. `TTree::SetCacheSize`) and even if `fAutoFlush == 0`, when reading over the network, we can benefit greatly from `TTreeCache`'s pre-fetching. ### Additional context; <!--; Add any other context about the problem here.; -->. - discussion and debugging: https://mattermost.web.cern.ch/root/pl/uzub3wwt3bdxxcdu4jmxxyrmby; - summary: https://mattermost.web.cern.ch/root/pl/xmtuq55j3pnc7cp7f8zyhf5ujw",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8713:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/8713,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. First reported [on the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805).; `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`.; When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp; #include <ROOT/TBufferMerger.hxx>; #include <ROOT/RVec.hxx>; #include <TTree.h>; #include <TFile.h>; #include <iostream>. int main(); {; // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist; {; TFile f(""standardwrite.root"", ""recreate"");; TTree t(""t"", ""t"", 99, &f);; ROOT::RVec<float> rv{1, 2, 3};; t.Branch(""v"", &rv.AsVector());; t.Fill();; f.Write();; }. std::cout << ""***** standard write ******"" << std::endl;; auto f2 = TFile::Open(""standardwrite.root"");; for (auto e : *f2->GetStreamerInfoList()) {; std::cout << e->GetName() << std::endl;; }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist; {; ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");; auto f = bm.GetFile();; TTree t(""t"", ""t"", 99, f.get());; ROOT::RVec<float> rv{1, 2, 3};; t.Branch(""v"", &rv.AsVector());; t.Fill();; f->Write();; }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;; auto f = TFile::Open(""bufferm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6611:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/6611,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. First reported on the forum [here](https://root-forum.cern.ch/t/rdataframe-and-friend-and-python/41923).; TTrees written to file preserve knowledge of their friends, and if they are also present in the file reading one TTree recovers the full friendship chain. When constructing an RDF object as `RDataFrame(treename, filename)`, friends are not automatically made available as they are if the TTree is read from file manually and then passed to RDF's ctor. . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```cpp; root [0] TFile f(""f.root"", ""recreate""); T(TFile &) Name: f.root Title: ; root [1] TTree t1(""t1"", ""t1""); (TTree &) Name: t1 Title: t1; root [2] TTree t2(""t2"", ""t2""); (TTree &) Name: t2 Title: t2; root [3] int x = 42; (int) 42; root [4] t2.Branch(""x"", &x); (TBranch *) 0x5575916824d0; root [5] t2.Fill(); (int) 4; root [6] t1.AddFriend(&t2); (TFriendElement *) 0x557591f09790; root [7] t1.Write(); (int) 231; root [8] t2.Write(); (int) 343; root [9] f.Close(); root [10] ROOT::RDataFrame(""t1"", ""f.root"").Max<int>(""t2.x"").GetValue(); Error in <TRint::HandleTermInput()>: std::runtime_error caught: Unknown column: t2.x; ```. Note that extracting the TTree from file manually and then constructing RDF from the tree works:. ```cpp; auto t1 = file.Get<TTree>(""t1"");; ROOT::RDataFrame(*t1).Max<int>(""t2.x"").GetValue() // prints 42; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6741:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/6741,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Here's a self-contained reproducer:. ```python; import ROOT. ROOT.RDataFrame(10).Define(""x"", ""int(rdfentry_)"").Snapshot(""t"", ""f.root""). f = ROOT.TFile(""f.root""); t = f.Get(""t""); reader = ROOT.TTreeReader(t); age = ROOT.TTreeReaderValue['int'](reader, ""x""); staff_list = []; for entry in reader:; print(age.Get()[0]); ```. This prints. ```; 1; 2; 3; 4; 5; 6; 7; 8; 9; 9; ```. instead of . ```; 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Either Python iteration should be disabled (in favor of `while reader.Next()`, which works as expected) or it should produce the same results as the `while reader.Next()` loop. ### Additional context; <!--; Add any other context about the problem here.; -->. First reported at https://root-forum.cern.ch/t/ttreereader-vs-rdataframe-vs-branches-to-read-ttree/44785",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8183:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/8183,2,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I get a segfault with the following program; ```cpp; #include <ROOT/RHist.hxx>; #include <TRandom.h>. int main(){; ROOT::Experimental::RH1D myhisto{};. for (auto i = 0; i < 1000; i++){; myhisto.Fill(gRandom->Gaus(10,1));; }; }; ```; ```; $: g++ -o create_rh1d create_rh1d.cpp `root-config --cflags --glibs`; $: ./create_rh1d . *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fbb37f46c8a in __GI___wait4 (pid=74253, stat_loc=stat_loc; entry=0x7fffe5f04fe8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe5f04fe8, options=options; entry=0) at waitpid.c:38; #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #5 <signal handler called>; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7971:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/7971,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Our centos7 nightly builds fail with the following errors:. ```; 01:46:28 In file included from /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:34:0:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/inc/XrdProofConn.h:140:4: error: ‘XReqErrorType’ does not name a type; 01:46:28 XReqErrorType LowWrite(XPClientRequest *, const void *, int);; 01:46:28 ^; 01:46:28 In file included from /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:47:0:; 01:46:28 /usr/include/xrootd/XrdSec/XrdSecInterface.hh:611:25: warning: unused parameter ‘entity’ [-Wunused-parameter]; 01:46:28 virtual bool PostProcess(XrdSecEntity &entity,; 01:46:28 ^; 01:46:28 /usr/include/xrootd/XrdSec/XrdSecInterface.hh:611:25: warning: unused parameter ‘einfo’ [-Wunused-parameter]; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: In member function ‘XrdClientMessage* XrdProofConn::SendRecv(XPClientRequest*, const void*, char**)’:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:551:41: error: ‘LowWrite’ was not declared in this scope; 01:46:28 if (LowWrite(req, reqData, reqDataLen) != kOK) {; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:551:46: error: ‘kOK’ was not declared in this scope; 01:46:28 if (LowWrite(req, reqData, reqDataLen) != kOK) {; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: At global scope:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:777:1: error: ‘XReqErrorType’ does not name a type; 01:46:28 XReqErrorType XrdProof",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6779:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/6779,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Our nightly conda builds are affected. An example of the broken tests is [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/183/testReport/junit/projectroot.cling/array/roottest_cling_array_runarray1/). The relevant part of the output:. ```; cd /test_job/roottest_build/cling/array; /usr/bin/timeout -s USR2 270s /opt/conda/envs/test-root/bin/root -e '#define NDEBUG' -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C; -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]; #define NDEBUG; ^; <command line>:1:9: note: previous definition is here; #define NDEBUG 1; ^; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. To reproduce it's sufficient to compile ROOT with `-DCMAKE_BUILD_TYPE=Release -Droottest=OFF` ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6575:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/6575,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The current logic to construct a TChain in a distributed task to pass to the RDF constructor is at; https://github.com/root-project/root/blob/b494a9b145246b66868fa38e2fd3e1f37fa73c47/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py#L166-L168. But this is too simple, since it doesn't account for the common use case of a TChain with no name and sub trees with different names:; ```py; >>> import ROOT; >>> RDF = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; >>> c = ROOT.TChain(); >>> c.Add(""10entries.root/entries""); 1; >>> c.Add(""other10entries.root/otherentries""); 1; >>> df = RDF(c); >>> df.Count().GetValue(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Proxy.py"", line 127, in GetValue; headnode.backend.execute(generator); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Backends/Base.py"", line 135, in execute; ranges = headnode.build_ranges(); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/HeadNode.py"", line 307, in build_ranges; clustersinfiles = Ranges.get_clusters(self.treename, self.inputfiles); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Ranges.py"", line 220, in get_clusters; entries = t.GetEntriesFast(); AttributeError: 'TObject' object has no attribute 'GetEntriesFast'; ```. The error is due to the current sub tree not being found (since the input chain has no name). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Distributed RDataFrame should support this use case. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master built on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8750:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/8750,3,"['clear', 'simpl']","['clear', 'simple']"
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The following is a self-contained reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>. int main(); {; ROOT::RDataFrame(1000).Define(""x"", [] { return 42; }).Snapshot<int>(""t"", ""f.root"", {""x""});. ROOT::EnableImplicitMT();; auto df_bkg = ROOT::RDataFrame(""t"", ""f.root"");; ROOT::RDF::RSnapshotOptions opts;; opts.fAutoFlush = 10;; df_bkg.Snapshot<int>(""somedir/DecayTree"", ""bkg.root"", {""x""}, opts);; }; ```. The cause of the crash is a use-after-delete or a double-delete, caused by the following lines in `TFileMerger::MergeOne` which wrongly setup the subdirectory (owned by the parent file, owned by RDF) for deletion. Deletion of the subdirectory in turn causes the deletion of the output TTree that RDF is still using:. ```cpp; 556 TList dirtodelete;; 557 auto getDirectory = [&dirtodelete](TDirectory *parent, const char *name, const TString &pathname); 558 {; 559 TDirectory *result = dynamic_cast<TDirectory*>(parent->GetList()->FindObject(name));; 560 if (!result); 561 result = parent->GetDirectory(pathname);; 562 else; 563 dirtodelete.Add(result);; 564; 565 return result;; 566 };; ```. The bug affects any application using TFileMerger this way, of course, not just RDataFrame::Snapshot, but that's the most prominent case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8226:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/8226,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```; ~ hadd f2.root f.root; hadd Target file: f2.root; hadd compression setting for all output: 1; hadd Source file 1: f.root; hadd Target path: f2.root:/; ~ file f2.root; f2.root: ROOT file Version 62301 (Compression: 1); ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0...; (TFile *) 0x55a618b47f40; (int) 1; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>; #include <TTree.h>; int main() {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; int x = 42;; t.Branch(""x"", &x);; t.Fill();; t.Write();; f.Close();; return 0;; }; ```; `hadd f2.root f.root` then produces a file `f2.root` with unspecified compression algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6616:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/6616,2,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The warnings look like this:. ```; CMake Warning (dev) at interpreter/llvm/src/cmake/modules/TableGen.cmake:70 (add_custom_command):; Policy CMP0116 is not set: Ninja generators transform DEPFILEs from; add_custom_command(). Run ""cmake --help-policy CMP0116"" for policy; details. Use the cmake_policy command to set the policy and suppress this; warning.; Call Stack (most recent call first):; interpreter/llvm/src/include/llvm/IR/CMakeLists.txt:2 (tablegen); This warning is for project developers. Use -Wno-dev to suppress it.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8060:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/8060,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The `TTree::SetCacheSize()` method takes 64-byte integer as input, however the types of member `fBuffer` and `fBufferMin` in class `TTreeCache` are both 32-byte integer, so there will be an integer overflow if one tries to set the buffer size more than 512MB because in the line 1614 of `TTreeCache.cxx`:. ```c++; if (ntotCurrentBuf > 4 * fBufferSizeMin) ; // Humm something wrong happened.; Warning(""FillBuffer"", ""There is more data in this cluster (starting at entry %lld to %lld, ""; ""current=%lld) than usual ... with %d %.3f%% of the branches we already have ""; ""%d bytes (instead of %d)"",; fEntryCurrent, fEntryNext, entries[j], i, (100.0 * i) / ((float)fNbranches), ntotCurrentBuf,; fBufferSizeMin);; ```; so one will get weird warnings like:; ```shell; Warning in <TTreeCache::FillBuffer>: There is more data in this cluster (starting at entry 0 to 34020, current=31185) than usual ... with 700 42.067% of the branches we already have 458967692 bytes (instead of 1073741824); ```; even though every thing is fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9292:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/9292,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When averaging a RooCurve generated with standard precision over intervals smaller than the distance between two subsequent points, the procedure for moving the `xFirstPt` and `xLastPt` back inside the interval `[xFirst,xLast]`, can move `xFirstPt` and `xLastPt` outside of the requested interval. This leads to an increased value of the integral used for averaging, and a subsequently higher average than can be expected based on the interpolated values of the curve at the interval boundaries. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooCurve::average(Double_t xFirst, Double_t xLast)` returing the average value of the curve in the requested interval. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Example code where this behaviour occurs:; [ExampleMacro.zip](https://github.com/root-project/root/files/8025465/ExampleMacro.zip); ```c++; #include <iostream>; #include <RooAbsReal.h>; #include <RooRealVar.h>; #include <RooPlot.h>; #include <RooCmdArg.h>; #include <RooGenericPdf.h>. void ExampleMacro(); {; RooRealVar x(""x"",""x"",0,50);; RooGenericPdf func(""func"",""Test Function"",""x"",x);. RooPlot* xframe = x.frame();. func.plotOn(xframe, RooFit::Name(""funcCurve""));. RooCurve* funcCurve = xframe->getCurve(""funcCurve"");; Double_t xFirst, xLast;; std::cout << ""\ni, f(i), f(i+0.1), avg[i,i+0.1]\n"" << std::endl;. for (Double_t i = 10; i < 11; i += 0.1); {; Double_t avg = funcCurve->average(i,i+0.1);; xFirst = funcCurve->interpolate(i, 1e-10);; xLast = funcCurve->interpolate(i+0.1, 1e-10);; std::cout << i << "", "" << xFirst << "", "" << xLast << "", "" << avg << std::endl;; }; }; ```; Run with `root -l Exam",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9838:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/9838,2,['clear'],['clear']
Usability,"### Describe the bug; According to https://root.cern.ch/root/htmldoc/guides/users-guide/WritingGUI.html#event-processing-signals-and-slots one can pass parameters by value to your slots. `Connect(myButton, ""Pressed()"",""TH1"",hist, ""Draw(=\""LEGO\"")"");`. For example, I was trying:; `myTGCheckBox->Connect(""Clicked()"",""TGTextButton"", myButton, ""SetText(=\""LEGOlegoemoryABCDEF\"")"");`. But when I click on my checkbox, ROOT crashes then with:; ```; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f7c3b4d0457 in __GI___waitpid (pid=14103, stat_loc=stat_loc; entry=0x7ffcd65f6a98, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30; #1 0x00007f7c3b43b177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149; #2 0x00007f7c3c078960 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so; #3 0x00007f7c3c07b4d5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so; #4 <signal handler called>; #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65; #6 0x00007f7c3bf806be in StrDup(char const*) () from /opt/root_bld/lib/libCore.so; #7 0x00007f7c3c7c10ea in TGHotString::TGHotString(char const*) () from /opt/root_bld/lib/libGui.so; #8 0x00007f7c3c6967ad in TGTextButton::SetText(TString const&) () from /opt/root_bld/lib/libGui.so; #9 0x00007f7c2b3b903c in ?? (); #10 0x0000563f9e2c0f30 in ?? (); #11 0x0000563f9da66200 in ?? (); #12 0x0000000000000000 in ?? (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addit",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7195:69,guid,guides,69,https://root.cern,https://github.com/root-project/root/issues/7195,2,['guid'],"['guide', 'guides']"
Usability,"### Describe the bug; An interactive ROOT session crashes on definition of a simple C++20 concept, e.g.; ```c++; template <typename T> concept Hashable = requires(T a) {; { std::hash<T>{}(a) } -> std::convertible_to<std::size_t>;; };; ```. For reference, the relevant stack trace frames is provided below.; ```; #5 0x00007f388ee59180 in cling::isDefinition(clang::Decl const*) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #6 0x00007f388ee59c60 in cling::DefinitionShadower::invalidatePreviousDefinitions(clang::NamedDecl*) const () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #7 0x00007f388ee5b37b in cling::DefinitionShadower::Transform(clang::Decl*) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #8 0x00007f388ee509c2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #9 0x00007f388ee50b75 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #10 0x00007f388ee50d41 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #11 0x00007f388ee11089 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #12 0x00007f388ee118ac in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #13 0x00007f388ed6e87c in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #14 0x00007f388ed71e7e in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/jalopezg/CERN/root/_b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12779:77,simpl,simple,77,https://root.cern,https://github.com/root-project/root/issues/12779,1,['simpl'],['simple']
Usability,"### Describe the bug; FPE when calling Simplex with no free parameters. ### Expected behavior; No FPE/crash. ### To Reproduce; simplex.cxx . ```cpp; #include ""Minuit2/FunctionMinimum.h""; #include ""Minuit2/MnUserParameterState.h""; #include ""Minuit2/MnPrint.h""; #include ""Minuit2/MnMigrad.h""; #include ""Minuit2/MnSimplex.h""; #include ""Minuit2/FCNBase.h"". #include <fenv.h>. using namespace ROOT::Minuit2;. class TestChi2 : public ROOT::Minuit2::FCNBase; {; public:; TestChi2() {}; ~TestChi2() {}; virtual double Up() const {return 1.0;}; virtual double operator () (const std::vector<double> &a) const; {; return std::pow(a.at(0)-0.11,2)+std::pow(a.at(1)-0.5,2)/100.0;; }; };. int main(int argc, char ** argv); {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; MnUserParameters fit_parameters;; fit_parameters.Add(""A"",0.118,0.01,0,1);; fit_parameters.Add(""B"",0.5,0.1,0.1,100.0);; fit_parameters.Fix(""A"");; fit_parameters.Fix(""B"");; TestChi2* FULL= new TestChi2();; MnUserParameters temp_fit_parameters=fit_parameters;; MnMigrad migrad0(*FULL, temp_fit_parameters); ; FunctionMinimum min_migrad0 = migrad0(); // OK; MnSimplex simplex0(*FULL, temp_fit_parameters);; FunctionMinimum min_simplex0 = simplex0(); // FPE; exit(0);; }; ```; ```; g++ simplex.cc -o simplex.exe $(root-config --glibs --cflags) -lMinuit2; ./simplex.exe; ```; results in . ```; The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 ROOT::Minuit2::SimplexBuilder::Minimum (this=0x7ffcf9555c58, mfcn=..., seed=..., maxfcn=200, minedm=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/SimplexBuilder.cxx:48; #6 0x00007f045c93",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6775:39,Simpl,Simplex,39,https://root.cern,https://github.com/root-project/root/issues/6775,2,"['Simpl', 'simpl']","['Simplex', 'simplex']"
Usability,"### Describe the bug; I am experiencing strange behaviour with `RooAddPdf::fixCoefRange`. When I call `createIntegral` on a `RooAddPdf`, then call `fixCoefRange`, then call `createIntegral` again, the same value is returned (whilst the change of definition of the coefficients should change the integral). It seems to me the cache does not get cleared when calling `fixCoefRange`, as the behaviour is correct when calling `fixCoefRange` before any integral computation. ### To Reproduce; ```cpp; RooWorkspace w1;; w1.factory(""x[3., 0., 10.]"");; w1.var(""x"")->setRange(""range_int"", 0., 4.);; w1.factory(""AddPdf::sum(Gaussian(x, mean1[1.], sigma1[2.]), Gaussian(x, mean2[5.], sigma2[10.]), coef[0.3])"");; RooWorkspace w2(w1);. //Call createIntegral on workspace w1 only; cout << w1.pdf(""sum"")->createIntegral(RooArgSet(*w1.var(""x"")),RooFit::NormSet(RooArgSet(*w1.var(""x""))), RooFit::Range(""range_int""))->getVal() << endl;. w1.var(""x"")->setRange(""fixCoefRange"", 0., 1.);; static_cast<RooAddPdf*>(w1.pdf(""sum""))->fixCoefRange(""fixCoefRange"");. w2.var(""x"")->setRange(""fixCoefRange"", 0., 1.);; static_cast<RooAddPdf*>(w2.pdf(""sum""))->fixCoefRange(""fixCoefRange"");. cout << w1.pdf(""sum"")->createIntegral(RooArgSet(*w1.var(""x"")),RooFit::NormSet(RooArgSet(*w1.var(""x""))), RooFit::Range(""range_int""))->getVal() << endl;; cout << w2.pdf(""sum"")->createIntegral(RooArgSet(*w2.var(""x"")),RooFit::NormSet(RooArgSet(*w2.var(""x""))), RooFit::Range(""range_int""))->getVal() << endl;; ```. This prints :; ```; 0.548209 //Before calling RooAddPdf::fixCoefRange; 0.548209 //After calling RooAddPdf::fixCoefRange but with a previous call to createIntegral; 0.463998 //After calling RooAddPdf::fixCoefRange without any previous call; ```; whilst I would expect : ; ```; 0.548209; 0.463998; 0.463998; ```. ### Setup; ROOT 6.26/02",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10988:344,clear,cleared,344,https://root.cern,https://github.com/root-project/root/issues/10988,1,['clear'],['cleared']
Usability,"### Describe the bug; I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior; No crash. ### To Reproduce; ```; root -l; root [0] int x; (int) 0; root [1] .undo; root [2] x; (int) 0; root [3] .undo; root [4] .undo; root [5] x; input_line_13:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x).; Execution of your code was aborted.; root [6] x; input_line_15:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x).; Execution of your code was aborted.; root [7] int x; (int) 0; root [8] int x; (int) 0; root [9] x; (int) 0; root [10] x; (int) 0; root [11] x; (int) 0; root [12] x; (int) 0; root [13] .undo; root [14] x; (int) 0; root [15] .undo 5; root [16] x; input_line_24:2:3: error: use of undeclared identifier 'x'; (x); ^; terminate called after throwing an instance of 'cling::CompilationException'; what(): Error evaluating expression (x); ```. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10178:71,undo,undo,71,https://root.cern,https://github.com/root-project/root/issues/10178,6,['undo'],['undo']
Usability,"### Describe the bug; In a local jupyter notebook and SWAN, the output of a code block only shows after the block finishes execution.; This makes progress bars only display after completion, rendering them useless. ### Expected behavior; An std::flush should update the output of a code block of a notebook, even if the code block is still running. ### To Reproduce; For example:; ```; std::chrono::steady_clock::time_point begin = std::chrono::steady_clock::now();. for(long i = 0; i < 1000000000; i++); {; if(i % 100000000 == 0); {; std::cout << i << ""\n"" << std::flush;; }; }. std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();; std::cout << ""Time difference = "" << std::chrono::duration_cast<std::chrono::milliseconds>(end - begin).count() << ""ms\n"";; ```; This takes 7 seconds on my machine, thus long enough to see the numbers pop up sequentially in a ROOT console.; However, in a local notebook or on SWAN, all of the output is only shown after 7 seconds. ### Setup; ROOT version: ROOT 6.24/06; Operating system: Ubuntu on windows (Ubuntu 20.04.1 LTS); How you obtained ROOT: Downloaded today via Conda; Jupyter Notebook 6.4.3 (ROOT kernel). ### Additional context; On Swan, progress bars work on SWAN software stack 97a, but not on 99 and 100.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8989:146,progress bar,progress bars,146,https://root.cern,https://github.com/root-project/root/issues/8989,2,['progress bar'],['progress bars']
Usability,"### Describe the bug; In this page: https://github.com/root-project/web/blob/main/manual/cling/index.md there is an example about using the '?' before every line. See also https://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuide.html#the-root-prompt. ```; root [] {; root [] ? TLine l;; root [] ? for (int i = 0; i < 5; i++) {; root [] ? l.SetX1(i);; root [] ? l.SetY1(i+1);; root [] ? l.Print();; root [] ? }; root [] ? }; ```. However, if I try it, I get errors, not the help it's supposed to output:; ```; ROOT_prompt_1:1:1: error: expected expression; ? TLine l;; ^; ROOT_prompt_1:1:3: error: 'TLine' does not refer to a value; ? TLine l;; ^; /opt/root_bld/include/TPaveText.h:19:7: note: declared here; class TLine;; ^; ROOT_prompt_1:1:9: error: expected ':'; ? TLine l;; ^; : ; ROOT_prompt_1:1:1: note: to match this '?'; ? TLine l;; ^; ROOT_prompt_1:1:9: error: use of undeclared identifier 'l'; ? TLine l;; ^; ROOT_prompt_2:1:1: error: expected expression; ? for (int i = 0; i < 5; i++) {; ^; ROOT_prompt_2:1:3: error: expected expression; ? for (int i = 0; i < 5; i++) {; ^; ROOT_prompt_2:1:3: error: expected ':'; ? for (int i = 0; i < 5; i++) {; ^; : ; ROOT_prompt_2:1:1: note: to match this '?'; ? for (int i = 0; i < 5; i++) {; ^; ROOT_prompt_2:1:3: error: expected expression; ? for (int i = 0; i < 5; i++) {; ^; <<< cling interactive line includer >>>:1:1: error: expected '}'; ROOT_prompt_0:1:1: note: to match this '{'; {; ^; <<< cling interactive line includer >>>:1:1: error: expected '}'; input_line_9:1:42: note: to match this '{'; void __cling_Un1Qu31(void* vpClingValue) {; ^; ```. vs. ```; TLine X1=0.000000 Y1=1.000000 X2=0.000000 Y2=0.000000; TLine X1=1.000000 Y1=2.000000 X2=0.000000 Y2=0.000000; TLine X1=2.000000 Y1=3.000000 X2=0.000000 Y2=0.000000; TLine X1=3.000000 Y1=4.000000 X2=0.000000 Y2=0.000000; TLine X1=4.000000 Y1=5.000000 X2=0.000000 Y2=0.000000; ```. ### Expected behavior; Either remove this example from the documentation, or fix the issue. If t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10056:206,guid,guides,206,https://root.cern,https://github.com/root-project/root/issues/10056,2,['guid'],"['guide', 'guides']"
Usability,"### Describe the bug; It looks like the warning reported at https://sft.its.cern.ch/jira/browse/ROOT-10816 is still not solved with gcc 11 and the current builtin_tbb. . ```bash; $: cmake -GNinja -Dminimal=ON -Dimt=ON -Dbuiltin_tbb=ON $ROOT_HOME; [...]; $: cmake --build . -- -j32; [...]; In file included from ginclude/tbb/tbb.h:48,; from /home/vpadulan/Programs/rootproject/root/core/imt/src/TThreadExecutor.cxx:10:; ginclude/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:; ginclude/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]; 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));; | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ginclude/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here; 93 | struct bucket : tbb::internal::no_copy {; | ^~~~~~; ```. ### Setup; Fedora 34; ROOT master@39de75e; gcc 11.2. ### Additional context; This should be indeed fixed by the current builtin_tbb (2019 U9) for gcc 10 as reported at https://github.com/oneapi-src/oneTBB/issues/134; But on the TBB repo there are other similar issues that still didn't work with gcc 10.2 and tbb 2020 https://github.com/oneapi-src/oneTBB/issues/307",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9020:619,clear,clearing,619,https://root.cern,https://github.com/root-project/root/issues/9020,1,['clear'],['clearing']
Usability,"### Describe the bug; It's not possible to catch exceptions in the interactive `root` prompt on Apple Silicon, nor does `TRint` take care of uncaught exceptions. ### Expected behavior; The user should be able to catch exceptions, or at least the fallback handler should prevent process termination. ### To Reproduce; The most simple examples are; ```; root [0] try { throw 1; } catch (...) { }; libc++abi.dylib: terminating with uncaught exception of type int; ```; and; ```; root [0] throw 1;; libc++abi.dylib: terminating with uncaught exception of type int; ```; (which should be handled in `TRint::HandleTermInput()`). ### Setup; ROOT 6.25/01 on `macphsft25`. ### Additional context; Plenty:; * #7100 fixed catching exceptions from constructors on macOS (and has tests, including unwinding through multiple JIT recursions).; * [ROOT-10703](https://sft.its.cern.ch/jira/browse/ROOT-10703) and [ROOT-10962](https://sft.its.cern.ch/jira/browse/ROOT-10962) for the original reports. #### Edit:; Same in 6.22/07, tested on `macphsft24`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7541:326,simpl,simple,326,https://root.cern,https://github.com/root-project/root/issues/7541,1,['simpl'],['simple']
Usability,"### Describe the bug; PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior; PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7279:40,Guid,Guide,40,https://root.cern,https://github.com/root-project/root/issues/7279,5,"['Guid', 'guid']","['Guide', 'guide', 'guides']"
Usability,"### Describe the bug; The `ROOT_GENERATE_DICTIONARY` function from cmake creates dictionary `G_xxx_cc.cxx` and compieles it with different flags than rest of the target sources.; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The `ROOT_GENERATE_DICTIONAR` body copies various properties of the target into new target for dictionary, and should also copy the compile features properties.; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; Steps to reproduce the behavior:; 1. Create target with some non-standard feature, e.g. c++17 (requires root compiled against c++17, then `std::string_view` breaks compatibility with pre c++17 build); ```; target_compile_features(${ARG_TARGET} PRIVATE cxx_std_17); ```; 2. Generate dictionary; ```; ROOT_GENERATE_DICTIONARY(G__${ARG_TARGET}_cc; ${ARG_HEADERS}; MODULE ${ARG_TARGET}; LINKDEF Linkdef.h; ); ```; 3. Compile such dictionary, the dict will not compile against c++17 and various errors related to `std::string_view` will appear. ### Setup; 1. ROOT 6.22.02; 2. Operating system - GNU/Linux; 3. Compiled from source. ### Solution; In line 667 of `RootMacros.cmake` add following lines:. ```; target_compile_features(${dictionary} PRIVATE; $<TARGET_PROPERTY:${ARG_MODULE},COMPILE_FEATURES>); ```. See also https://root-forum.cern.ch/t/rootmacros-cmake-should-also-support-target-features-for-dictionary/42159",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6777:187,clear,clear,187,https://root.cern,https://github.com/root-project/root/issues/6777,2,['clear'],['clear']
Usability,"### Describe the bug; The undo shortcut in the prompt editor misses one entry in the sequence (I guess it is not added to the buffer). ### Expected behavior; Entries where ENTER are pressed are also added to the undo buffer. ### To Reproduce; ```; root -l; root [0] int x; (int) 0; root [1] float y; (float) 0.00000f; // Start then pressing repeatedly CTRL+_; ```; --> Neither `x` nor `y` are shown when undoing. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10182:26,undo,undo,26,https://root.cern,https://github.com/root-project/root/issues/10182,3,['undo'],"['undo', 'undoing']"
Usability,### Describe the bug; `ROOT::Experimental::RFitPanel` is missing in the reference guide. ### Expected behavior. https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RFitPanel.html links to the doc page,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7304:82,guid,guide,82,https://root.cern,https://github.com/root-project/root/issues/7304,1,['guid'],['guide']
Usability,"### Describe the bug; ```; root [1] .rawInput; root [2] std::vector<short> getV() { return {42}; }; root [3] .rawInput; root [4] getV()[0].foo(); ```; and that last line shows an error, good! But now:; ```; root [5] getV()[0]; IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&); Maybe you need to load the corresponding shared library?; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7970:573,clear,clear,573,https://root.cern,https://github.com/root-project/root/issues/7970,1,['clear'],['clear']
Usability,"### Description. Operators like `operator+` don't work in cppyy if they are implemented as template functions. ### Reproducer. ```python; import cppyy. cppyy.cppdef("""""". template<class T>; struct Foo {; Foo(T v) : val{v} {}; T val;; };. template <class T>; Foo<T> operator+(Foo<T> const &a, Foo<T> const &b); {; return Foo<T>{a.val + b.val};; }. """"""). klass = cppyy.gbl.Foo[""int""]. a = klass(4); b = klass(7). a + b; ```. ### ROOT version. At least ROOT 6.04 according to original Jira ticket:; https://its.cern.ch/jira/browse/ROOT-7717. ### Installation method. Build `master` from source. ### Operating system. Arch Linux. ### Additional context. * same problem as reported in [ROOT-7717](https://its.cern.ch/jira/browse/ROOT-7717), but with a simplified reproducer; * reproducer works with upstream cppyy, so the problem is likely related to the cppyy-backend (e.g. ROOT meta or CallFunc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15378:746,simpl,simplified,746,https://root.cern,https://github.com/root-project/root/issues/15378,1,['simpl'],['simplified']
Usability,"### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `$ROOTSYS/tutorial/tmva/TMVACrossValidationApplication.C` provides a nice example of applying weights trained using the code `$ROOTSYS/tutorial/tmva/TMVACrossValidation.C`. It assumes the data file has variables `x`, `y` and `eventID`, and assigns the fold deterministically using split expression `int([eventID])%int([numFolds])`, where in this case `numFolds = 2`. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The spectator `eventID` has integer type in training and in application, however TMVA seems to treat all variables as float, and there is problem in converting integer type into float when treating the split expression. My observation is the split expression returns 0 all the time, namely instead of assigning weights from fold `int([eventID])%int([numFolds])` it actually always assigning to fold 0 or `numFolds`. A simple fix is to require `eventID` in the data has type float. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Attached files contains a modified `TMVACrossValidationApplication.C` demonstrating the issues. ; It generates a tree with `x`, `y` and `eventID`, and using weights saved in `dataset/weights/` to evaluate BDTG output. ; For each eventID it decides which fold using split expression `int([eventID])%int([numFolds])` for all the cases below:; - each event with a unique eventID as integer (as in official ROOT tutorial);; - all eventID fixed to 1 as integer;; - all eventID fixed to 2 as integer (equivalent as fixed to 0);; - all eventID fixed to 1 as float;; - all eventID fixed to 2 as float (equivalent as fixed to 0);. It can be run with `root -l TMVACrossValidationAppli",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9115:31,clear,clear,31,https://root.cern,https://github.com/root-project/root/issues/9115,2,['clear'],['clear']
Usability,"### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:; * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies; * TObject::kOverwrite can be used to avoid writing multiple namecycles; * retrieving an object from TFile by name automatically retrieves the highest namecycle; * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14584:394,guid,guide,394,https://root.cern,https://github.com/root-project/root/issues/14584,2,['guid'],['guide']
Usability,"### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-130. Update the User guide of Minuit2, make it a chapter of the ROOT User Guide ?. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14551:120,guid,guide,120,https://root.cern,https://github.com/root-project/root/issues/14551,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14556:350,simpl,simple,350,https://root.cern,https://github.com/root-project/root/issues/14556,2,"['simpl', 'undo']","['simple', 'undocumented']"
Usability,"### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide.; For example bases in the scenario:. ```cpp; class Position { /* point in 3D space */; public:; Position(float x, float y, float z);; // get Cartesian coordinates; float x();; float y();; float z();; // get spherical coordinates; float r();; float phi();; float theta();; // get pseudorapidity; float eta();; };. class Hit : public Position { /* localized detector signal */; public:; Hit(float energy, float x, float y, float z);; // get energy and transverse energy; float e();; float et();; };; ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)?. * The next step is to consider collections of objects:. i) define. ```cpp; class Track { /* particle trajectory */. p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14540:173,Guid,Guide,173,https://root.cern,https://github.com/root-project/root/issues/14540,2,"['Guid', 'Simpl']","['Guide', 'Simplest']"
Usability,### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5195. At the 2013 ROOT Workshop Peter Waller pointed that the interface to clone a subset of the branches needed to be clarified (and documented) or simplified. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14550:248,simpl,simplified,248,https://root.cern,https://github.com/root-project/root/issues/14550,1,['simpl'],['simplified']
Usability,"### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5305. I've been reading http://root.cern.ch/download/doc/ROOTUsersGuideHTML/ch12s21.html and one of the early passages is:; > It is clear that you want to be as independent as possible of the header file (i.e. MyClass.h) generated by MakeClass. The solution is to implement a derived class, for example MyRealClass deriving from MyClass such that a change in your Tree or regeneration of MyClass.h does not force you to change MyRealClass.h. You can imagine deriving several classes from MyClass.h, each with a specific algorithm. I would like to request an addition to this User Guide section which outlines this example of deriving MyRealClass from MyClass. It might just need an extra line or two explaining how this would work. Jean-François. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14566:231,clear,clear,231,https://root.cern,https://github.com/root-project/root/issues/14566,2,"['Guid', 'clear']","['Guide', 'clear']"
Usability,"### Explain what you would like to see improved and how. Hello there. I am a college senior and am interested in improving my C++ open source development, and would like to work on CERN's ROOT repo. I have noticed that there is no explicit 'clear' command for ROOT's CLI. It utilizes the .!cls command. . I would like to know if I could implement the same to get me started here. @Axel-Naumann @couet . I would like to know if my proposed idea can be implemented, and would like the maintainer's thoughts on the same. Thanks once again. ### ROOT version. latest docker image. ### Installation method. docker. ### Operating system. Windows. ### Additional context. - I would like to know if one would suggest that I build out ROOT in a linux environment, or in a windows environment.; - Would need some help in locating the CLI file within the repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13958:241,clear,clear,241,https://root.cern,https://github.com/root-project/root/issues/13958,1,['clear'],['clear']
Usability,"### Explain what you would like to see improved and how. I am missing a couple of methods inside `THnD` class that I use frequently when working with the usual `TH1D`, `TH2D`, ... classes. I am missing something like: `std::vector <Double_t> GetBinCenter(std::vector<Int_t> idx)` that simply returns the center of the bin using the ranges and number of bins. Simple implementation such as for each component doing:. ```; xMin + (xMax-xMin)*((double)bin-0.5)/Nbins;; ```. where `xMin`, `xMax`, `Nbins` are known for each dimensions inside `THnD` and `bin` is the corresponding bin where we want to know its coordinate. Perhaps there is another way to achieve this (please let me know), but it would be interesting that there would be coherence between `TH` and `THn` methods. Also a method to get the integral would be interesting. See this post:. https://root-forum.cern.ch/t/method-to-calculate-integral-in-a-thnd/57276. Thanks for considering!. ### ROOT version. ROOT 6.26/02. ### Installation method. source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14173:285,simpl,simply,285,https://root.cern,https://github.com/root-project/root/issues/14173,2,"['Simpl', 'simpl']","['Simple', 'simply']"
Usability,"### Explain what you would like to see improved and how. I checked various compiler optimizations like Profile-Guided Optimization (PGO) on many projects - all the results are available at https://github.com/zamazan4ik/awesome-pgo . Since such optimizations help with optimizing CPU-intensive apps, I think it can be an interesting idea to optimize the Root project with PGO since the project cares a lot about performance. I can suggest the following ideas:. * Perform PGO benchmarks with some typical for the project workloads. If it shows improvements - add a note to the documentation about possible improvements in Root's performance with PGO. E.g. for Cling I already proposed evaluating PGO: https://github.com/root-project/cling/issues/508; * Perform testing Post-Link Optimization techniques (like [LLVM BOLT](https://github.com/llvm/llvm-project/blob/main/bolt/README.md)) would be interesting too (Clang and Rustc already use BOLT as an addition to PGO). However, I recommend starting with the usual PGO since it's a much more stable technology with fewer limitations. ### ROOT version. Latest. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15778:111,Guid,Guided,111,https://root.cern,https://github.com/root-project/root/issues/15778,1,['Guid'],['Guided']
Usability,"### Explain what you would like to see improved and how. I found myself trying to use a glob in `TChain::Add` with a remote path. I discovered that in XRootD, this is supported:; ```; TChain c{""Events""};; c.Add(""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run*"");; c.GetListOfFiles()->GetEntries(); (int) 4; ```; Whereas with https (through davix) this is not supported; ```; TChain c{""Events""};; c.Add(""https://root.cern/files/HiggsTauTauReduced/*.root"");; Error in <TDavixSystem::DavixOpendir>: failed to opendir the directory: HTTP 405 : Method Not Allowed, Permission refused (17); ```. First off, we should understand more clearly with the different libraries if this use case is 1. knowingly supported (xrootd), knowingly unsupported (davix) 2. a valid use case or seen as a corner case. Base on that, we should decide whether to actually support it in ROOT, which would mean support it with all the different remote protocols, or remove support with xrootd and decide to always throw an exception in case remote globbing is attempted. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13258:649,clear,clearly,649,https://root.cern,https://github.com/root-project/root/issues/13258,1,['clear'],['clearly']
Usability,"### Explain what you would like to see improved and how. I have a simple snippet which produces a plot (in PDF or SVG) where the text items in the legend are clickable hyperlinks:; ```python; from matplotlib import pyplot as plt; plt.rcParams['svg.fonttype'] = 'none'; fig = plt.figure(); plt.scatter([1], [2], label=""CERN""); plt.scatter([1], [2.25], label=""ROOT""); leg = plt.legend(); for ta in leg.texts:; t = ta.get_text(); if t == ""CERN"":; url = 'https://home.cern'; ta.set_url(url); elif t == ""ROOT"":; url = 'https://root.cern'; ta.set_url(url). fig.savefig('scatter.svg'); fig.savefig('scatter.pdf'); ```. Can be run with `python repro.py` and saves both SVG and PDF files with the clickable links in the legend. It would be nice to have the same feature also for TLegend. I have taken a look at [TLink](https://root.cern.ch/doc/master/classTLink.html) but despite what the docs hint at, that cannot be used to show hyperlinks, rather only links between different graphical components of the same canvas/browser. . ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16512:66,simpl,simple,66,https://root.cern,https://github.com/root-project/root/issues/16512,1,['simpl'],['simple']
Usability,"### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time.; The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this.; Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers.; At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on.; To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15070:531,simpl,simple,531,https://root.cern,https://github.com/root-project/root/issues/15070,1,['simpl'],['simple']
Usability,"### Explain what you would like to see improved and how. Python2 is not supported since a while, and supporting in ROOT both Python2 and Python3, despite easing greatly the transition of users and experiments, incremented the maintenance cost of the codebase. . All traces of Python2 should be removed from the ROOT codebase and all the simplifications deriving from this removal should be put in place. ### ROOT version. v6.32/00. ### Installation method. All. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13861:337,simpl,simplifications,337,https://root.cern,https://github.com/root-project/root/issues/13861,1,['simpl'],['simplifications']
Usability,"### Explain what you would like to see improved and how. See https://bugs.gentoo.org/show_bug.cgi?id=926439 in the Gentoo tracker.; I extracted the important part from the build log from the bug above. Here it is:; ```; >>> Completed installing sci-physics/root-6.30.04 into /var/tmp/portage/sci-physics/root-6.30.04/image. * Final size of build directory: 8271248 KiB (7.8 GiB); * Final size of installed tree: 1643460 KiB (1.5 GiB). * Verifying compiled files for python3.11; * ; * QA Notice: The following unexpected files/directories were found; * top-level in the site-packages directory:; * ; * /usr/lib/python3.11/site-packages/libJupyROOT3_11.so.6.30.04; * /usr/lib/python3.11/site-packages/libROOTPythonizations3_11.so.6.30.04; * ; * This is most likely a bug in the build system. More information; * can be found in the Python Guide:; * https://projects.gentoo.org/python/guide/qawarn.html#stray-top-level-files-in-site-packages; ```. Ideally, ROOT would install `libROOTPythonizations3_11.so.6.30.04` inside the `ROOT/` subdirectory of PyROOT, and `libJupyROOT3_11.so.6.30.04` inside `JupyROOT`, with the appropriate adjustments so that RPATHs, etc, are correct. ### ROOT version. 6.30.04. ### Installation method. emerge. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14917:837,Guid,Guide,837,https://root.cern,https://github.com/root-project/root/issues/14917,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"### Explain what you would like to see improved and how. The [documentation](https://root.cern.ch/doc/v632/classRooMCStudy.html#a8123a2ac2bfc1d97796224571b9e0e4a) for the `RooMCStudy` constructor says for the argument `ExternalConstraints`: ""Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy."" This is not correct. Looking at the [source code](https://root.cern.ch/doc/v632/RooMCStudy_8cxx_source.html#l00171), it appears that the `ExternalConstraints` are simply added to the fit options that are eventually passed internally to `fitTo`. It would be better, I think, to simply eliminate this as an argument to `RooMCStudy`. It should instead just be allowed as part of the arbitrary `FitOptions`. This would be more transparent. ### ROOT version. v6.32. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15405:536,simpl,simply,536,https://root.cern,https://github.com/root-project/root/issues/15405,2,['simpl'],['simply']
Usability,"### Explain what you would like to see improved and how. The [example](https://root.cern/doc/master/classROOT_1_1RDataFrame.html#progressbar) given by the RDataFrame documentation on the use of the progress bar does not run because the wrong function is used. ```; import ROOT; rdf = ROOT.RDataFrame(10).Define(""x"", ""1""); rdf_1 = ROOT.RDF.RNode(rdf.Filter(""x == 1"")); ROOT.RDF.Experimental.AddProgressBar(rdf_1); ```. This gives the error; ```; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); /tmp/ipykernel_531/2773921370.py in <module>; 1 import ROOT; 2 rdf = ROOT.RDataFrame(10).Define(""x"", ""1""); ----> 3 rdf_1 = ROOT.RDF.RNode(rdf.Filter(""x == 1"")); 4 ROOT.RDF.Experimental.AddProgressBar(rdf_1). TypeError: Template method resolution failed:; none of the 2 overloaded methods succeeded. Full details:; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&&) =>; TypeError: could not convert argument 1; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(const ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&) =>; TypeError: could not convert argument 1; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&&) =>; TypeError: could not convert argument 1; none of the 2 overloaded methods succeeded. Full details:; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&&) =>; TypeError: could not convert argument 1; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(const ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&) =>; TypeError: could not convert argument 1; none of the 3 overloaded methods succeeded. Full details:; RI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15040:198,progress bar,progress bar,198,https://root.cern,https://github.com/root-project/root/issues/15040,1,['progress bar'],['progress bar']
Usability,"### Explain what you would like to see improved and how. The boolean template in `RNTupleView<T, bool>` steers whether or not the view is owned by the user. It would be more clear to use two different classes. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16321:174,clear,clear,174,https://root.cern,https://github.com/root-project/root/issues/16321,1,['clear'],['clear']
Usability,"### Explain what you would like to see improved and how. The release notes of 6.30, see e.g. https://github.com/root-project/root/commit/d9c7887f7423a4c93dbb50759b840b5b803baec3 are diverging for master vs 6.30 patches. Some new changes have been implemented only in v630patches, others are only added to master. As a result, it has become a bit messy, and changes that should appear on the ROOT website release notes are not appearing because they should have been backported to 6.30. On the other hand, an easy backport is not doable because new changes were done directly on 6.30patches without doing them on master, so we would need to use 'Meld' to fuse them by hand to restore a bit the order. Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'?. ### ROOT version. ```; ROOT v6.30/02; Built for linuxx8664gcc on Nov 27 2023, 19:50:38; From tags/v6-30-02@; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14439:722,guid,guidelines,722,https://root.cern,https://github.com/root-project/root/issues/14439,1,['guid'],['guidelines']
Usability,"### Explain what you would like to see improved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15252:654,guid,guide,654,https://root.cern,https://github.com/root-project/root/issues/15252,2,['guid'],['guide']
Usability,"### Explain what you would like to see improved and how. This forum post https://root-forum.cern.ch/t/too-many-operators-for-the-ttree-project-conditions/58009/5 triggered a discussion that probably `RResultPtr` could better behave with respect to ownership of its pointee. For example, this function; ```cpp; TH1D *DrawStuff(const char *columnname) {; auto file = TFile::Open(""tutorials/hsimple.root"", ""READ"");; auto ntuple = file->Get<TTree>(""ntuple"");; ROOT::RDataFrame df(*ntuple);; auto ht = df.Histo1D(*h, columname);; return ht.GetPtr();; }; ```. Will return a dangling pointer since the `RResultPtr` going out of scope will destroy the pointee. The forum user presents a pattern such as. ```cpp; THStack* histStack = new THStack(""histStack"", ""Bs_MCORR"");; for(int i=0; i<sampNumb; i++) {; TFile* file = new TFile(rootList[i]);; TTree* tree = (TTree*)file->Get(""DecayTree"");; ROOT::RDataFrame df(*tree);; auto ht = df.Filter(conds[i].Data()).Histo1D(h, ""Bs_MCORR"");; histStack->Add(ht.GetPtr(), , ""HIST && E1 && EX0"");; }; histStack->Draw();; ```. Which also doesn't work with the current API. Admittedly, this example would not work in general since `THStack` does not take ownership of the passed histograms and assumes they will be kept alive by ROOT global objects. In general, for this kind of use case we could convey the message to users they can store the histograms in a vector of shared pointers which is the clearest and most standard data structure to represent the situation correctly. So we need:. * `std::shared_ptr<T> RResultPtr<T>::GetSharedPtr()`; * More documentation on the RDataFrame user guide about these use cases; * A tutorial starting from the forum post reproducer once we have the API. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14766:1426,clear,clearest,1426,https://root.cern,https://github.com/root-project/root/issues/14766,2,"['clear', 'guid']","['clearest', 'guide']"
Usability,"### Explain what you would like to see improved and how. This is really up for discussion, but I wanted to at least raise the issue. One can put an arbitrarily large number as the `endEntry` of the global entry range passed to `RDatasetSpec::WithGlobalRange`, and everything will run correctly: RDataFrame simply stops the event loop at the last actually available entry. Diagnosing this case to warn the user or to error out is not straightforward in general: think of a dataset made of O(1k) files read over the network: hard to tell what the max number of entries is before we start processing. I think this is the reason for the current behavior. Reproducer:. ```cpp; #include ""ROOT/RDF/RDatasetSpec.hxx""; #include ""ROOT/RDF/RSample.hxx""; #include <ROOT/RDataFrame.hxx>. int main() {; {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; t.Fill();; t.Write();; }; ; ROOT::RDF::Experimental::RDatasetSpec spec;; ROOT::RDF::Experimental::RSample sample(""main"", {{""t"", ""f.root""}});; spec.AddSample(sample);; spec.WithGlobalRange({0, 2}); // but the tree only has 1 entry; ROOT::RDataFrame(spec).Count().GetValue(); // no error; }; ```. ### ROOT version. any that supports RDatasetSpec. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13800:306,simpl,simply,306,https://root.cern,https://github.com/root-project/root/issues/13800,1,['simpl'],['simply']
Usability,"### Explain what you would like to see improved and how. While browsing the docs I cannot find any mention of C++ 20 support (just old forum posts lamenting the lack of support), while it is indeed clearly supported in recent versions of ROOT (albeit with some hiccups). . Is there any plan to document ROOT with C++ 20 usage? ; It would be nice to add a custom label for C++ 20 issues as well, so bugs like https://github.com/root-project/root/issues/14230 are more visible to whomever wants to use ROOT with the latest standard. . Thank you for the great work 🙂. ### ROOT version. Not relevant. ### Installation method. Not relevant. ### Operating system. Not relevant. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14308:198,clear,clearly,198,https://root.cern,https://github.com/root-project/root/issues/14308,1,['clear'],['clearly']
Usability,"### Explain what you would like to see improved. A set of usability improvements to `RLogger` coming out of a discussion of #6875 with @pcanal . ### Optional: share how it could be improved. - [ ] add a function (to `RLogManager`?) to emit just a string to the log (e.g. by creating an otherwise empty `RLogEntry` and having `Emit` not write out anything like function, file, etc.);; - [ ] add a ""show timestamp"" option flag to `RLogManager`, on by default. (And try to add ""nanoseconds since call to `ROOT()`"")",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6931:58,usab,usability,58,https://root.cern,https://github.com/root-project/root/issues/6931,1,['usab'],['usability']
Usability,"### Explain what you would like to see improved. It would be great to add documentation for several [RooKeysPdf](https://root.cern.ch/doc/master/classRooKeysPdf.html) parameters.; In particular, there is a parameter *rho* in two constructors, which has no explanation. Constructors descriptions are very unclear. However, *rho* is explained in the article. There is a parameter Mirror, which I could not find in the article (it has more options than there). From the code it looks like usually it is just reflecting pdf around the border:. if (_mirrorLeft) {; p.x = 2. * _lo - x;. But from the [source code, line 261](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooKeysPdf.cxx#L261) I can't understand the meaning of *_asymLeft* option (the code is not simple or intuitive, and has no comments). ### Additional context. Maybe it would be worth to give a link to [RooNDKeysPdf](https://root.cern.ch/doc/master/classRooNDKeysPdf.html) as a closely related class?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8507:776,simpl,simple,776,https://root.cern,https://github.com/root-project/root/issues/8507,2,"['intuit', 'simpl']","['intuitive', 'simple']"
Usability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. Currently we have a small paragraph titled ""Reading and manipulating collections"", but given users' feedback, we can do better in advertising and explaining how to deal with collections in RDF. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. We should expand that paragraph and move it out of ""More features"" into its own section. Examples should show how to perform object selection with RVecs, and link to tutorials and other resources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7086:211,feedback,feedback,211,https://root.cern,https://github.com/root-project/root/issues/7086,1,['feedback'],['feedback']
Usability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. From Andrea Rizzi: currently `df.Display()` only shows the first and last elements of collection columns. It would be more helpful/intuitive if all elements were listed, at least up to a reasonable collection length. Example of the current output:. ```; y | x | w | z | ; 100 | 1 | 1.8000000 | { 1.1000000, 2.1000000 } | ; | ... | | ... | ; | 4 | | { 3.1000000, 4.1000000 } | ; 10000 | 5 | 3.2400000 | { 4.5100000, 5.5100000 } | ; | ... | | ... | ; | 8 | | { 6.5100000, 7.5100000 } | ; 1000000 | 9 | 5.8320000 | { 8.2610000, 9.2610000 } | ; | ... | | ... | ; | 12 | | { 10.261000, 11.261000 } | ; 100000000 | 13 | 10.497600 | { 12.387100, 13.387100 } | ; | ... | | ... | ; | 16 | | { 14.387100, 15.387100 } | ; 10000000000 | 17 | 18.895680 | { 16.925810, 17.925810 } | ; | ... | | ... | ; | 20 | | { 18.925810, 19.925810 } | ; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ```python; $ python $(root-config --tutdir)/dataframe/df024_Display.py; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6981:242,intuit,intuitive,242,https://root.cern,https://github.com/root-project/root/issues/6981,1,['intuit'],['intuitive']
Usability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,; and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9); suggest the usage of build as a reserved, preferred name for build; directories.; Other precedents are entries such as `cmake-build` and `.build` in; ROOT's `.gitignore`, with the exact same rationale, because those are; the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8031:542,guid,guidelines,542,https://root.cern,https://github.com/root-project/root/issues/8031,1,['guid'],['guidelines']
Usability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; I would like functioning of both `TFormula::SetParNames()` and `TFormula::SetParameters()` to be more consistent and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent ; `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++; TFormula f(""f"", ""x*[0]*[1]*[2]"");; TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly; g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error; ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++; TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");; f.SetParName(3, ""lastParameter"");; // Parameters names: p0, p1, p2, lastParameter; f.SetParNames(""a"", ""b"");; // Parameters names: a, b, p2, p3; ```; User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetPar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7805:228,intuit,intuitive,228,https://root.cern,https://github.com/root-project/root/issues/7805,1,['intuit'],['intuitive']
Usability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; I'm currently working on getting ROOT into the official Debian repositories for easy installation. However, a major hassle is the name of the shared libraries: these include very generic names like for example `libCore.so`, `libGui.so`, etc.; The conflict here is that Debian usually splits shared libraries in separate packages with their library name. However a package with e.g. the name `libcore` is just not explicit enough. A better and much more precise name would be `libROOTCore.so`. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->; I see two possible ways to achieve this: one would be to simply add a prefix to all libraries globally, the other would be to rename the libraries in CMake itself.; The latter one is probably a time-consuming task, and also needs to handle cases like e.g. `libHist`, since both `libHist` and `libROOTHist` exist.; The prior one could be easily added with a CMake option, or just done automatically when building with `gnuinstall=ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10985:791,simpl,simply,791,https://root.cern,https://github.com/root-project/root/issues/10985,1,['simpl'],['simply']
Usability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; When there are many columns in a `ROOT::RDataFrame`, `df.Display(many_columns)->Print()` is truncated and doesn't include all the columns requested. I can understand this truncating without any parameter, but when I pass the columns explicitly, no truncating should occur. The Pandas approach to truncation is better and should be adopted as well - it shows first and last columns with `...` in the middle, clearly indicating the truncation. ### Setup; 1. ROOT version: 6.22.06; 2. Operating system: Ubuntu 18.04; 3. How you obtained ROOT: `binary download`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7205:518,clear,clearly,518,https://root.cern,https://github.com/root-project/root/issues/7205,1,['clear'],['clearly']
Usability,"### Explain what you would like to see improved; Currently, cling uses `cling::utils::getWrapPoint()` to cut the input line in two parts: one that will become part of an internal wrapper function (i.e., `__cling_Un1Qu3xxx`) and the other that will not.; This mechanism is overly simplistic and cannot correctly handle some cases, e.g. users would expect that the excerpts below are equivalent, however,; ```c++; root [0] namespace foo { int i; }; root [1] using namespace foo; std::cout << ""hello\n"";; hello; root [2] i; (int) 0; ```; translates into do not wrap `using namespace foo;` and wrap `std::cout << ""hello\n"";`, while; ```c++; root [0] namespace foo { int i; }; root [1] std::cout << ""hello\n""; using namespace foo;; hello; root [2] i; input_line_11:2:3: error: use of undeclared identifier 'i'; (i); ^; ```; will wrap all the input. Therefore, the `using` directive is not parsed at the TU level. Also, this function adds missing `;` for some cases, but the current support is somewhat limited (see related issue #8064). ### Optional: share how it could be improved; Cling should cut the input line in several independent fragments that will be either wrapped or directly parsed by clang. Additionally, these fragments shall incorporate some marks, such as ""needs wrapper"" or ""needs terminating semicolon"". The proposed solution might also add the terminating `;` where required, if requested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9171:279,simpl,simplistic,279,https://root.cern,https://github.com/root-project/root/issues/9171,1,['simpl'],['simplistic']
Usability,"### Explain what you would like to see improved; Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re; there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved; - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag.; - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes.; - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`; - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce; See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10395:435,learn,learn,435,https://root.cern,https://github.com/root-project/root/issues/10395,1,['learn'],['learn']
Usability,"### Explain what you would like to see improved; I open this to keep track of a suggestion by @lmoneta to save histograms as csv or txt files.; https://github.com/root-project/root/issues/9491#issuecomment-1094786152. Right now, there are all sorts of workarounds to achieve this (see below), but they are easy to forget and periodically there are new questions on the forum wrt the same thing.; A function doing; `TH1::SaveAs("".txt"")`; would be more user-friendly. ### Optional: share how it could be improved; Move TGraph implementation in https://github.com/root-project/root/issues/9491 to a class THistSaveAs. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.24/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Sep 02 2021, 14:20:23 |; | From tags/v6-24-06@v6-24-06 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://root-forum.cern.ch/t/save-data-points-from-a-histogram-in-a-txt-file/49768/3; https://root-forum.cern.ch/t/save-histogram-in-txt-file/43616/13; https://stackoverflow.com/questions/28970124/cern-root-exporting-data-to-plain-text; https://root-forum.cern.ch/t/save-the-contents-of-histogram-to-text-file/28616/2; https://root-forum.cern.ch/t/histogram-to-ascii/14080/6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10474:451,user-friendly,user-friendly,451,https://root.cern,https://github.com/root-project/root/issues/10474,1,['user-friendly'],['user-friendly']
Usability,"### Explain what you would like to see improved; I've been working (with couet and others) on reducing errors in the Doxygen documentation of the code, from 10k+ to a manageable level of under 1k (and going down). However, currently, there is no safeguard to prevent new commits from introducing new errors, which is prone to happen, as not everyone is familiar with the doxygen syntax. To maintain in a sustainable way the 'clean status' of the reference guide and online documentation, it would be helpful to add an automation script that compiles the documentation only with the files modified in the Pull Request to be merged, in the same way that a bot checks now about clang-format, etc. Because Doxygen can be configured to have only one input file, this extra check will not involve much time as compared to building the whole documentation. Then, it could be checked whether no warnings are produced by the 'touched' files. ### Optional: share how it could be improved; - [ ] The Github action or CI script should modify the -DDOCU_INPUT CMake flag to only add those touched by the Pull Request; - [x] The INCLUDE_PATH in the Doxyfile should be extended (for good, not just in the script) to all possible include folders, as you might touch a 'source file', but would get a bunch of warnings if Doxygen does not find the corresponding include path. (This is not the case in the full build, as the include files are also part of the INPUT, but wouldn't be the case if we just 'touch' the sources in the PR).; - [ ] The WARN_LOGFILE (-DDOCU_LOGFILE in cmake) should be set by the CI script to a useful filename. If the file is empty after running doxygen, the Test passes.; - [ ] Optional: HAVE_DOT, listLibs, etc. could be set to NO in case a speedup is wanted.; - [ ] Potentially hook it also up with spell-checking checks, see https://github.com/codespell-project/codespell; - [ ] Alternative approach suggested by albert-github to avoid missing references: use the overnight tag file from h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9953:456,guid,guide,456,https://root.cern,https://github.com/root-project/root/issues/9953,1,['guid'],['guide']
Usability,"### Explain what you would like to see improved; Installing a user-side cppyy (no virtualenv) breaks the python based ROOT tools.; So, i would like to be possible to have a user installed cppyy without this having an impact on ROOT installation. ### Optional: share how it could be improved; i was wondering if, given the special local only usage of a private/local version of cppyy, if this could be encapsulated somehow, so ROOT would use only it’s own version in such a way that is does not see any other cppyy version (even if discovered), and also the private cppyy modules are put in a place that would not be seen by anything outside ROOT as it’s not usable anyway:; ```; [Thursday 06.04.23 21:38 adrian@hal] ~ $; python3; Python 3.11.2 (main, Feb 8 2023, 00:00:00) [GCC 12.2.1 20221121 (Red Hat 12.2.1-4)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import cppyy; /usr/lib64/python3.11/site-packages/cppyy_backend/loader.py:90: UserWarning: No precompiled header available (/usr/lib64/python3.11/site-packages/cppyy_backend/etc not writable); this may impact performance.; warnings.warn('No precompiled header available (%s); this may impact performance.' % msg); /usr/lib64/python3.11/site-packages/cppyy/__init__.py:266: UserWarning: CPyCppyy API path not found (tried: /usr/include); set CPPYY_API_PATH to fix; warnings.warn(""CPyCppyy API path not found (tried: %s); set CPPYY_API_PATH to fix"" % os.path.dirname(cpycppyy_path)); ```. ### To Reproduce; ```; rootls; usage: rootls [-h] [-1] [-l] [-t] FILE [FILE ...]; rootls: error: the following arguments are required: FILE. pip3 install --user cppyy. rootls; Traceback (most recent call last):; File ""/usr/bin/rootls"", line 12, in <module>; import cmdLineUtils; File ""/usr/share/root/cli/cmdLineUtils.py"", line 81, in <module>; import ROOT; File ""/usr/lib64/python3.11/site-packages/ROOT/__init__.py"", line 25, in <module>; cppyy.gbl.gROOT.SetBatch(False); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12635:658,usab,usable,658,https://root.cern,https://github.com/root-project/root/issues/12635,1,['usab'],['usable']
Usability,"### Explain what you would like to see improved; It is just a point of view but IMHO, it would be easier if all additional functionality (hadd, mkdir, cp, ls, etc...); would be usable as arguments/verbs to root: `root -hadd ...`, `root -ls ...` ; Moreover `--` token for end of global arguments would be useful in the following way:; * if verb is present (cp, ls, mv, hadd , etc...) whatever is after `--` are arguments for the verb (otherwise the verb should be the last); * if there is no verb present whatever is after `--` is text to be passed to root as code (replacement/addition to -e). this can become even more useful if these verbs are also converted to special commands (like `.pwd`, `.ls`); and if the line tokenization is also done for them (with the usual token of `;`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8447:177,usab,usable,177,https://root.cern,https://github.com/root-project/root/issues/8447,1,['usab'],['usable']
Usability,"### Explain what you would like to see improved; Related to this comment https://github.com/root-project/root/issues/8742#issuecomment-888177051. There is a way to document CMake flags so that they appear neatly within the Doxygen reference guide of ROOT. ### Optional: share how it could be improved; https://github.com/ferdymercury/cmake-modules/blob/master/make_documentation.cmake; http://jesnault.fr/website/document-your-cmake-code-within-doxygen/. In the main, I use add_subdirectory(doc), and then I create a ""doc"" folder with a .gitignore containing cmake.dox, and then a CMakeLists.txt with more or less this structure:. ```; ## CMAKE_DOCUMENTATION_START CMakeLists.txt; ##; ## Main CMakeFile for compiling zdt-daq.; ## Following variables can be configured when running ccmake:; ## <table>; ## <caption id=""config-cmake"">Table of configurable CMake parameters</caption>; ## <tr><th>Variable <th>Values <th>Description; ## <tr><td>BUILD_DOCUMENTATION <td>ON (OFF) <td>Build Doxygen HTML documentation; ## <tr><td>CLI11_DIR <td>/opt/CLI11 <td>CLI11 git repository; ## <tr><td>CMAKE_BUILD_TYPE <td>Release (Debug) <td>Choose the type of build; ## <tr><td>ENABLE_TESTS <td>ON (OFF) <td>Build CTests; #~ ## <tr><td>FunctionalPlus_DIR <td>/opt/FunctionalPlus/install/lib/cmake/FunctionalPlus <td>FPlus install folder containing FindFunctionalPlus; ## <tr><td>CMAKEMODULES_DIR <td>/opt/cmake-modules <td>rpavlik git source dir, use https://github.com/ferdymercury/cmake-modules and git checkout master; ## <tr><td>ROOT_DIR <td>$ROOTSYS (/opt/root) <td>ROOT build directory; ## <tr><td>ZSTR_DIR <td>/opt/zstr <td>ZSTR git repository; ## </table>; ##; ## CMAKE_DOCUMENTATION_END; ## See https://www.stack.nl/~dimitri/doxygen/manual/tables.html. # Add Doxygen documentation https://stackoverflow.com/questions/34878276/build-doxygen-from-cmake-script. ### cmake-modules; if(NOT DEFINED CMAKEMODULES_DIR); set (CMAKEMODULES_DIR ""/opt/cmake-modules"" CACHE STRING ""cmake-modules git repository""); endif(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8999:241,guid,guide,241,https://root.cern,https://github.com/root-project/root/issues/8999,1,['guid'],['guide']
Usability,"### Explain what you would like to see improved; TGSpeedo class is quite helpful, but it lacks the ability of auto-calculating the mean value (a mean mark is there, but is up to the user to put a senseful value there on each update). ### Optional: share how it could be improved; I would propose to let the user define a circular buffer size, so that the TGSpeedo class autocalculates the mean value of the last N entries. The default value would be N=0 to keep old behaviour and save memory, but the user could call for example SetMeanBufferSize(10) to do an average of the last 10 entries. Could be implemented for example using https://root.cern/doc/master/circular_8C.html; or just with this simple header class: https://github.com/jnk0le/Ring-Buffer/blob/master/ringbuffer.hpp. And then the average just as `std::sum(begin(...), end(...), 0)/N`. ### To Reproduce; 1. EnableMeanMark in TGSpeedo; 2. The Mean value is not calculated automatically. ### Setup; 1. ROOT 6.23/01; 2. Linux; 3. Self-built",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7164:696,simpl,simple,696,https://root.cern,https://github.com/root-project/root/issues/7164,1,['simpl'],['simple']
Usability,"### Explain what you would like to see improved; The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh; https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved; - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ""; - Or remove the part about export ROOTSYS...; - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context; See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10722:69,Guid,Guide,69,https://root.cern,https://github.com/root-project/root/issues/10722,4,"['Guid', 'clear', 'guid']","['Guide', 'clear', 'guide']"
Usability,"### Explain what you would like to see improved; The TColor palettes are nicely described here: https://root.cern.ch/doc/master/classTColor.html; However, it is not clear which of these palettes are prone to artefacts, which are not CVD friendly, etc. Only the Rainbow one is mentioned and linked to https://root.cern.ch/rainbow-color-map. ### Optional: share how it could be improved; - I think it would be helpful if they would be split into two separate sections, namely those that are CVD-friendly and those that are not. This would help the users in quickly knowing which to avoid.; - Maybe adding this link in the docu would be interesting: https://www.nature.com/articles/s41467-020-19160-7; - I would also suggest to implement the 'batlow' palette described in the link above into the predefined palettes. And potentially others described in Box2 of that article.; - These graphs here are also quite informative https://matplotlib.org/stable/tutorials/colors/colormaps.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8098:165,clear,clear,165,https://root.cern,https://github.com/root-project/root/issues/8098,1,['clear'],['clear']
Usability,"### Explain what you would like to see improved; The TGCommandLinePlugin is great for external CMake/C++ applications that use some ROOT classes / TApplication and GUI classes TGFrame, where you want to have some interactive debugging options via Cling. To make it even more user-friendly, it would be nice if the following things were improved:; - Pressing Up and Down Arrow Keys changes the selected command in the ComboBox.; - Pressing Tab Key propagates to the command line to give command suggestions / autocompletion, as it happens in the real ROOT terminal; - Typed commands are added to the ROOT history file, so that the next time . ### Optional: share how it could be improved; Changes in TGTextEntry:; ```; virtual void UpDownArrowsPressed(Int_t); //*SIGNAL*. case kKey_Down:; CursorOutDown();; UpDownArrowsPressed(1);; break;; case kKey_Up:; CursorOutUp();; UpDownArrowsPressed(0);; break;; ```. Changes in TGCommandLinePlugin; ```; fCommand->Connect(""TabPressed()"", ""TGCommandPlugin"", this,; ""HandleTab()"");; fCommand->Connect(""UpDownArrowsPressed()"", ""TGCommandPlugin"", this,; ""HandleArrows()"");. void TGCommandPlugin::HandleTab(); {; //redirect CLI suggestions back to terminal; }. void TGCommandPlugin::HandleArrows(); {; //Scroll one up or down in combobox; }. if (app->InheritsFrom(""TRint"") || fForceFlag ) // accept also if a user set an fForceFlat explicitly?; Gl_histadd((char *)string);; ```. ### To Reproduce; - Open tutorials/gui/guiWithCINT.C; - Try to use up and down arrow keys to scroll between line commands. ### Setup; 1. ROOT 6.23/01; 2. Linux; 3. Self-built",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7180:275,user-friendly,user-friendly,275,https://root.cern,https://github.com/root-project/root/issues/7180,1,['user-friendly'],['user-friendly']
Usability,"### Explain what you would like to see improved; The TThread HTML documentation speaks about having to compile with special ./configure flags, see. https://github.com/root-project/root/blob/f8efb11a51cbe5b5152ebef19a4f7b78744ca2fa/documentation/users-guide/Threads.md. ### Optional: share how it could be improved; Change it to the corresponding CMake flags, or clarify if it is still needed. ### To Reproduce; Open https://root.cern.ch/root/htmldoc/guides/users-guide/Threads.html and check the ""Installation section""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7216:251,guid,guide,251,https://root.cern,https://github.com/root-project/root/issues/7216,3,['guid'],"['guide', 'guides']"
Usability,"### Explain what you would like to see improved; There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory.; // FIXME: This is very annoying behaviour, we should; // be able to choose to not do this like we; // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved; I see several ways how it could be improved:. 1) ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7308:282,learn,learn,282,https://root.cern,https://github.com/root-project/root/issues/7308,1,['learn'],['learn']
Usability,"### Explain what you would like to see improved; When I browse math documentation, I read MathMore documentation at https://root.cern/doc/master/group__MathMore.html . When I browse menu in the left column, there are four submenus. ; The submenu `Numerical Algorithms` has on its page https://root.cern/doc/master/group__NumAlgo.html (see that the link is common for both MathCore and MathMore):; Math » MathCore | Math » MathMore; Same for `Statistical functions`. When I press `Special functions` on the left menu, the left menu changes to MathCore!; https://root.cern/doc/master/group__SpecFunc.html; Same for `QuasiRandom number generators and distributions`. This is very confusing. . ### Optional: share how it could be improved; I think that MathMore subsections should be deleted (or merged with MathCore, which is larger). ; There can remain the main page describing what MathMore is, but all subsections common with MathCore should belong only there (or to a common ROOT::Math section). This is very confusing for new users, because I didn't notice that the link is the same, and had to browse both sections in MathCore and MathMore trying to find the difference. ### Additional context; I think this is not related to the site, but to documentation generation. Even if it's not simple to be implemented technically, this is still a feature request (or even a bug report), because for users this is not convenient.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7440:1289,simpl,simple,1289,https://root.cern,https://github.com/root-project/root/issues/7440,1,['simpl'],['simple']
Usability,"### Explain what you would like to see improved; When running:; ```c++; #include ""RooRealVar.h""; #include ""RooGaussian.h""; #include ""RooAddPdf.h""; #include ""RooMCStudy.h"". using namespace RooFit;. void rf801_mcstudy(); {; RooRealVar x(""x"", ""x"", 0, 10);; x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);; RooRealVar sigma(""sg"", """", 0.5);; RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));; //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)); mcstudy->generateAndFit(1000, 1000);; }; ```; ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python; msg = ROOT.RooMsgService.instance(); str_z=msg.getStream(0); str_z.minLevel = ROOT.RooFit.WARNING; ```; which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved; If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one.; 2. Use a progress bar for the `run` message. ### To Reproduce; You can just run the code I put above. ### Setup; 1. ROOT version: 6.24/06; 2. Operating system: Linux manjaro 5.15.7-1-MANJARO; 3. How you obtained ROOT, such as `dnf install` / bin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9489:852,progress bar,progress bar,852,https://root.cern,https://github.com/root-project/root/issues/9489,1,['progress bar'],['progress bar']
Usability,"### Explain what you would like to see improved; You are always forced to return a dummy value when using TExecutorCRTP::Map(). ### Optional: share how it could be improved; - `void` should be supported.; - Alternatively, add a `static_assert` somewhere, because the instantiation failures are spectacularly long for such a simple mistake. ### To Reproduce; ```c++; void runParallel() {; ROOT::Internal::TExecutor ex; ; constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; ; auto printRange = [=](std::size_t i) {; const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); ; const auto begin = nEvent * i;; const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // Comment in to make it compile; //return 0;; }; ; ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7872:324,simpl,simple,324,https://root.cern,https://github.com/root-project/root/issues/7872,1,['simpl'],['simple']
Usability,"### Feature description. As requested by the user on the forum (https://root-forum.cern.ch/t/rdataframe-feature-request-per-sample-histo-graph-fill-and-filter/), a FilterPerSample feature would improve and simplify physics analysis when a single RDataFrame with multiple samples is used. . There is an additional suggestion from the user concerning ""an option to expose the RSampleInfo object as a default RDataFrame column (in the same way as rdfentry_ and rdfslot_), maybe “rdfsample_” "". . ### Alternatives considered. The current workaround is by using a DefinePerSample in an additional column, where weights are set to 0 for all but the sample of interest. . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13422:206,simpl,simplify,206,https://root.cern,https://github.com/root-project/root/issues/13422,1,['simpl'],['simplify']
Usability,"### Feature description. Currently, ROOT loads fonts via the `Root.TTFontPath`. This makes a lot of sense from a ROOT maintainer perspective (simply ship all used fonts), but is a roadblock for a distribution maintainer (embedded files are usually not wished if not otherwise possible). Thus, it would be nice if ROOT would _additionally_ support [fontconfig](https://www.freedesktop.org/wiki/Software/fontconfig/), which is the default way to find fonts on Linux. In particular, the font interface should first look into `Root.TTFontPath` and then fallback to fontconfig. This means that the font-finding interface needs two parameters: the font file name and a fontconfig name as fallback. The current font interface is a bit all over the place. There is at least `graf2d/graf/src/TTF.cxx`, `graf3d/gl/src/TGLFontManager.cxx` and `graf3d/gl/src/TGLText.cxx` that handle font names, probably more. Fedora uses [this patch](https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-fontconfig.patch) from @ellert to get rid of the non-free MS fonts (see also https://github.com/root-project/root/issues/8357), which is a good start but the patch is not really feasible upstream due to Windows/OSX support. /cc @Axel-Naumann @dpiparo. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16229:142,simpl,simply,142,https://root.cern,https://github.com/root-project/root/issues/16229,1,['simpl'],['simply']
Usability,"### Feature description. How hard would it be to implement a class (somehow) deriving from histogram classes, but showing in the TBrowser UI some sort of a complex histogram ?. Current state: I have histograms storing Re and Im parts of a complex signal for instance.; This goes currently in TBrowser as:; ```; my.root; -> TH1D* : histogram[Re]; -> TH1D* : histogram[Im]; -> TH1D* : histogram[Ph]; -> TH1D* : histogram[Mag]; ```. I would like to display something like:; ```; my.root; TComplexH1D* ; |; --> Re (TH1D); --> Im (TH1D); --> Ph (TH1D); --> Mag (TH1D); ```. This wouldn't simply be a class with 4 histograms inside, I don't want to spread histograms everywhere in my rootfiles, but represent this object as a single key and still be able to open it and look inside.. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13352:583,simpl,simply,583,https://root.cern,https://github.com/root-project/root/issues/13352,1,['simpl'],['simply']
Usability,"### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh; ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]; ```; Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13924:124,usab,usability,124,https://root.cern,https://github.com/root-project/root/issues/13924,1,['usab'],['usability']
Usability,### Feature description. It would become familiar and user-friendly for the users and developers if they would have a login and signup option which they can use for more future works in the website. I would like to make this new feature. Please assign this work to me. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16646:54,user-friendly,user-friendly,54,https://root.cern,https://github.com/root-project/root/issues/16646,1,['user-friendly'],['user-friendly']
Usability,"### Is your feature request related to a problem? Please describe. It would be great to have a progress bar for RDF, one that does not need to open all files before giving an estimate on the remaining processing time. ### Describe the solution you'd like. Similar to https://github.com/root-project/root/pull/8675 but with the approach sketched in https://github.com/root-project/root/pull/8675#discussion_r670348181",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8685:95,progress bar,progress bar,95,https://root.cern,https://github.com/root-project/root/issues/8685,1,['progress bar'],['progress bar']
Usability,"### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to; - [ ] have a mechanism for this; - [ ] expose the mechanism, for instance through documentation / release notes; - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7361:555,usab,usable,555,https://root.cern,https://github.com/root-project/root/issues/7361,1,['usab'],['usable']
Usability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7116:76,clear,clear,76,https://root.cern,https://github.com/root-project/root/issues/7116,2,['clear'],['clear']
Usability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. Getting the derivative of a TF1 is not that simple. It's a common thing so it should be simple. . ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; At the moment it's not that simple to get the derivative of a TF1. There is a method to determine the derivative at a point but it would be nice if you could; - get the derivative of the whole function; - get the derivative with respect to any variable (d/dx, d/dy, d/dz ...) not just x.; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->; I read that there is a Derivator but it doesn't seem that easy to use. If a TF1 derivative method is not added, maybe the Derivator docs could be improved/tutorials made. REASONING:. There are a lot of cool math functions that I would like to add and they rely on partial derivatives with respect to different variables and at the moment they are near impossible to make.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8735:76,clear,clear,76,https://root.cern,https://github.com/root-project/root/issues/8735,5,"['clear', 'simpl']","['clear', 'simple']"
Usability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. I wanted to use the [Lambert W function](https://en.wikipedia.org/wiki/Lambert_W_function) to find a root of a function. ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. Having a `TMath::LambertW(Double_t x, Int_t k, Double_t tol=1e-10)` and `TMath::LambertW(TComplex x, Int_t k, Double_t tol=1e-10)`. ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. Of course one can just solve it numerically by finding a root. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->. [On the Lambert W function](https://cs.uwaterloo.ca/research/tr/1993/03/W.pdf) provides some theoretical background. I'm aware of two implementations of the Lambert W function in code:; https://github.com/fredrik-johansson/mpmath/blob/c11db84b3237bd8fc6721f5a0c5d7c0c98a24dc1/mpmath/functions/functions.py#L327-L490; and; https://github.com/scipy/scipy/blob/master/scipy/special/_lambertw.pxd; which is based on the first one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8471:76,clear,clear,76,https://root.cern,https://github.com/root-project/root/issues/8471,2,['clear'],['clear']
Usability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. In previous versions of the ROOT documentation, it was clearly mentioned that e.g. `TH1::GetRMS` for historical reasons does not in fact calculate RMS but the standard deviation. Now this section is just empty:; https://root.cern.ch/doc/master/classTH1.html#a8fdcbb1ef23f99d5b28c1f10e947c957. ### Describe the solution you'd like. Re-introduce this documentation. ### Describe alternatives you've considered. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11456:76,clear,clear,76,https://root.cern,https://github.com/root-project/root/issues/11456,2,['clear'],"['clear', 'clearly']"
Usability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. Rather often for minimisation in `RooFit`, using `RooAbsPDf::fitTo`, for complicated functions a maximal number of calls is reached. Since there is no direct war to access this parameter of `RooMinimiser` from `RooAbsPDf::fitTo`,; for such cases I need to switch from `RooAbsPdf::fitTo` to a manual creation of `RooMinimiser` object, ; configure it and use it to minimize (manually created) NLL. . ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. It will be very good to have a dedicated option(`RooCmdArg`) to `RooAbsPdf::fitTo` function that allows to redefine the default number of calls, such that one can use it together with other options, e.g. . ```; dataset = ...; pdf = ...; result = pdf.FitTo ( dataset , ROOT.RooFit.Save() , ROOT.RooFit.MaxCalls( 10000 ) , ... ); ```; ; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. The standard way that I use , is in case `RooAbsPdf::fitTo` reaches maximal number of calls, switch ; to manual creation and configuration of `RooMinimiser`, manual creation of NLL and edssentially bypass very nice and convinient `RooAbsPdf::fitTo` interface. . ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11875:76,clear,clear,76,https://root.cern,https://github.com/root-project/root/issues/11875,2,['clear'],['clear']
Usability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->; Here:. https://root.cern.ch/doc/master/TH2Poly_8h_source.html#l00033. The code suggests that we cannot store in these bins neither the bin error nor the sum of the squares of the weights. Thus in order to keep track of the errors we need two TH2Poly instances, one for the values and the other for the errors. What is the logic behind this design? I do not think this makes sense. Can this be changed? ; ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; Add setters and getters for errors, add members for the error and a member for the sum of squares of weights. . ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8340:76,clear,clear,76,https://root.cern,https://github.com/root-project/root/issues/8340,2,['clear'],['clear']
Usability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->; I think it would be cool to have support for Vector Fields in the Graphics and math libraries. Where you enter a vector field equation f(x, y) or f(x, y, z) and get a visualisation of a that vector field. ; ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; If it's okay, i'd like to try and make this. I think it would be a cool addition.; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->; A cobination of TF2 and other ROOT native libraries such as TLine, TArrow, TVector2, TVector3 etc.; ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->; I couldn't find anything like this existing so I just assume that it doesn't exist. Let me know if I'm wrong. ![image](https://user-images.githubusercontent.com/62119114/121907935-d1614500-cd2c-11eb-8d34-2cfc6b049d10.png); Something like this is the image I have in my brain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8422:76,clear,clear,76,https://root.cern,https://github.com/root-project/root/issues/8422,2,['clear'],['clear']
Usability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->; While users can `Define` a column with the same name in different branches of the computation graph, that's not true for `Alias`es: they are global to the computation graph. For example, this fails:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main() {; auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 42; }).Define(""y"", [] { return 0; });; auto dfzx = df.Alias(""z"", ""x"");; auto dfzy = df.Alias(""z"", ""y"");; auto max42 = dfzx.Max<int>(""z"");; auto max0 = dfzy.Max<int>(""z"");; std::cout << ""should be 42: "" << *max42 << '\n';; std::cout << ""should be 0: "" << *max0 << '\n';. return 0;; }; ```. ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. Aliases should behave the same as Defines, we should track them per-computation-graph-branch rather than per-computation-graph. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->. That would make it possible to `Redefine` aliases, which is currently not a thing because we don't want a computation-graph-branch-local `Redefine` to undefine a global `Alias`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7381:76,clear,clear,76,https://root.cern,https://github.com/root-project/root/issues/7381,2,['clear'],['clear']
Usability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [idk] when I want to [brb]; -->. ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; Hype; -->. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8775:76,clear,clear,76,https://root.cern,https://github.com/root-project/root/issues/8775,2,['clear'],['clear']
Usability,"### Is your feature request related to a problem? Please describe.; As discussed in https://sft.its.cern.ch/jira/browse/SPI-2149 ATLAS would like to have a ROOT patch release 6.24/06a with the fix/patch for https://github.com/root-project/root/pull/10369. . If this is not feasible can ROOT 6.24/08 be releases soon ? But due to the imminent data taking start we'd like avoid potential interferences due to other patches that might come with 6.24/08. <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. Release 6.24/06a. ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. Release 6.24/08. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->. See https://sft.its.cern.ch/jira/browse/SPI-2149 for more details and the discussion with the CERN SFT SPI team experts. Cheers, Johannes (for ATLAS)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10515:459,clear,clear,459,https://root.cern,https://github.com/root-project/root/issues/10515,2,['clear'],['clear']
Usability,"### Is your feature request related to a problem? Please describe.; I want to use the manual offline. Ideally a pdf, but an archive of html pages is fine too. ### Describe the solution you'd like; Could it be added to the Reference Guide at https://root.cern/reference/ ? And give a link to that in some visible place. ### Describe alternatives you've considered; I know I can use `wget`, but I downloaded the Reference Guide from the site (oh no, I generated it myself - but I think there's no difference? If there is, maybe it could be included into doxygen data?), and regret that Manual is missing there. Thanks a lot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421:232,Guid,Guide,232,https://root.cern,https://github.com/root-project/root/issues/7421,2,['Guid'],['Guide']
Usability,"### Is your feature request related to a problem? Please describe.; I wanted to fit my data with a uniform distribution (I know the simple analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like; Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered; I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context; I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7880:132,simpl,simple,132,https://root.cern,https://github.com/root-project/root/issues/7880,1,['simpl'],['simple']
Usability,"### Is your feature request related to a problem? Please describe.; I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko).; But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like; Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered; @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {; std::vector<int> fContent;; ClassDef(VectorWrapper, 2);; };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8517:205,simpl,simple-variable-in-root-files,205,https://root.cern,https://github.com/root-project/root/issues/8517,1,['simpl'],['simple-variable-in-root-files']
Usability,"### Is your feature request related to a problem? Please describe.; If I want to read data from a webDav/http endpoint using an oidc token, I'd need to be able to pass the token somehow in ROOT to the Davix client wrapper. Possibly through env variable and rootrc. ### Describe the solution you'd like; Make the Davix client wrapper able to take the token from env variable and rootrc. ### Additional context; Preparatory for future WLCG (and not only) authN/Z model.; I was thinking to something like this as a required change, but, of course, I'd need more feedback: https://github.com/root-project/root/compare/master...dciangot:davix_bearer_token?expand=1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6802:559,feedback,feedback,559,https://root.cern,https://github.com/root-project/root/issues/6802,1,['feedback'],['feedback']
Usability,"### Is your feature request related to a problem? Please describe.; Not a problem but a usage of XRootD feature that is not used by TFile::Open. ### Describe the solution you'd like; It would be useful that .meta4 files in `TFile::Open(""whatever_name.meta4"")`; to be passed for processing to TNetXNGFile (XRootD). ### Describe alternatives you've considered; There are no alternatives, TFile::Open (TNetXNGFile::Open) does not know to pass; to XrdCl the meta file for processing. ### Additional context; XRootD (XrdCl) know to use a meta file (`.meta4`) which is a virtual redirector. This allows not only fallback through a list a replicas to the same file but (at least for xrdcp) concurrent access (with `-y | --sources <n> `). There would be 2 problems to be solved:; 1. Add a signature to TNetXNGFile to allow to process a call like `TNetXNGFile::Open(""whatever_name.meta4"")`; 2. Tell TFile to redirect an access to a `.meta4` file to TNetXNGFile. For reference, just in case the file type is identified by content (but from what i seen in TFile::GetType this is not the case) a meta4 file is an xml with the signature like:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <metalink xmlns=""urn:ietf:params:xml:ns:metalink"">. ... </metalink>; ```. I tried something on my own but i got entangled on my lack of knowledge of TFile mechanics, so i though to ask expert help here, maybe the solution is fast and simple (in expert eyes).; Adding here @simonmichal in case there are questions on XrdCl feature.; Thanks a lot!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11653:1410,simpl,simple,1410,https://root.cern,https://github.com/root-project/root/issues/11653,1,['simpl'],['simple']
Usability,"### Is your feature request related to a problem? Please describe.; When I have too much stuff in my Linux command line, I press CTRL+L and it clears everything. When I have too much stuff in my ROOT prompt, I type `.!clear` and it clears everything. ### Describe the solution you'd like; It would be nice if ROOT could capture CTRL+L and do that `.!clear` behind the scenes. If this option is added, it would be nice that it is documented somewhere in the ROOT prompt commands https://github.com/root-project/root/pull/10055. Plan B would be to allow the user to define custom 'shortcuts' in a .root_shortcuts file, where one could specify that CTRL+L bind to .!clear or whatever you want. But I guess it would be better that this comes by default for everyone as it is quite generic. ### Describe alternatives you've considered; Pressing or holding 'ENTER' many times. ### Additional context; https://root-forum.cern.ch/t/keyboard-shortcut-hot-keys-in-root-aliases/14093",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10057:143,clear,clears,143,https://root.cern,https://github.com/root-project/root/issues/10057,5,['clear'],"['clear', 'clears']"
Usability,"### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of; the same type are encountered, for which no chaining behavior is; defined. To make the warning message more clear, a map is implemeted to look up; the name of the function in the `RooFit` namespace that is used to; create the repeated RooCmdArg. Usually, the names of the argument and; the name of the function that created it are identical, but there are; exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that; have a defined chaining behavior (`Import`, `Link`, and `Slice`), where; the alternatives that take a `std::map` with the multiple commands is; suggested. This is done to encourage RooFit code that can be easily; ported to Python if desired, because chainig command arguments with the; same name is not possible in Python RooFit (commands are passed as; keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more; commands than `RooAbsReal::plotOn` can digest. They will get the; solution in the warning message instead of having to ask in the forum,; which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:; * main commit explianed above; * commit 2 - 4:; * update RooFit code to not trigger the warnings; * commit 5:; * update RooFit C tutorial files to not trigger the warnings; * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8427:370,clear,clear,370,https://root.cern,https://github.com/root-project/root/pull/8427,1,['clear'],['clear']
Usability,"### This Pull request:; ; Hi @guitargeek, this PR is just to refactor the simple class in; RooLagrangianMorphFunc::Config as a struct to keep it's usage apparent.; Let me know what you think !; ; #### Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9180:74,simpl,simple,74,https://root.cern,https://github.com/root-project/root/pull/9180,1,['simpl'],['simple']
Usability,"##### Edit:; I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:; I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:; Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally; - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15972:685,guid,guide,685,https://root.cern,https://github.com/root-project/root/pull/15972,2,"['Simpl', 'guid']","['Simply', 'guide']"
Usability,"#2 0x00007ffff4c9c8f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3391; #3 0x00007ffff7b30e64 in TStorage::ObjectDealloc (vp=0x55555562e410) at ../core/base/src/TStorage.cxx:362; #4 0x00007ffff7b14518 in TObject::operator delete (ptr=0x55555562e410) at ../core/base/src/TObject.cxx:1001; #5 0x00007ffff7b11cba in TObject::~TObject (this=0x55555562e410, __in_chrg=<optimized out>) at ../core/base/src/TObject.cxx:91; #6 0x0000555555556242 in main () at foo.cpp:9; ```. where the line that accidentally sets the bit again is 3181 here:. ```cpp; 3172 /* Caller must ensure that we know tc_idx is valid and there's room; 3173 for more chunks. */; 3174 static __always_inline void; 3175 tcache_put (mchunkptr chunk, size_t tc_idx); 3176 {; 3177 tcache_entry *e = (tcache_entry *) chunk2mem (chunk);; 3178; 3179 /* Mark this chunk as ""in the tcache"" so the test in _int_free will; 3180 detect a double free. */; 3181 e->key = tcache_key;; 3182; 3183 e->next = PROTECT_PTR (&e->next, tcache->entries[tc_idx]);; ```. and this version of the test circumvents that behavior of `_int_free` so it does not crash (at least on my laptop):. ```cpp; void *mem = malloc(sizeof(TObject));; auto o = new (mem) TObject();; auto l = new TList();; l->SetName(""my own list"");; l->Add(o);; o->~TObject();; l->Clear();; free(mem);; ```. If my understanding is correct, this also means that the test failure is real in the sense that the `kNotDeleted` mechanism does not correctly work on platforms where `free` has that behavior. From Philippe (https://github.com/root-project/roottest/pull/880#issuecomment-1239663370):. > We (I) need to extend the core library to detect when there is a memory checker (or similar) that leads to the memory being salted after a delete and in that case disable our own already-deleted test (since it is now ineffective anyway and assumingly it is already doing the job of warning the user about use-after-delete). And subsequently the test needs to also be disabled in those cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11330:1665,Clear,Clear,1665,https://root.cern,https://github.com/root-project/root/issues/11330,1,['Clear'],['Clear']
Usability,"#8569 set the ClassDef version to 1, while it was zero before. Zero was a special value meaning ""no I/O needed"" (see https://root.cern.ch/root/html534/guides/users-guide/AddingaClass.html#motivation). This PR/commit resets it to zero. Fixes #8652.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8653:151,guid,guides,151,https://root.cern,https://github.com/root-project/root/pull/8653,2,['guid'],"['guide', 'guides']"
Usability,"(R) {; + M.dump();; + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());; + printf(""MemBuf '%s'\n"", R->getBuffer().data());; + // dump M and object file *R here.; + }*/; + return R;; + }; + };; +; class IncrementalJIT {; public:; using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;; @@ -131,9 +162,24 @@ private:; SymbolMapT& m_SymbolMap;; };; ; +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {; + public:; + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr); + : SimpleCompiler(TM, ObjCache) {}; + CompileResult operator()(llvm::Module &M) {; + auto R = SimpleCompiler::operator()(M);; + if (R) {; + M.dump();; + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());; + // dump M and object file *R here.; + }; + return R;; + }; + };*/; +; typedef RemovableObjectLinkingLayer ObjectLayerT;; typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,; - llvm::orc::SimpleCompiler> CompileLayerT;; + MySimpleCompiler> CompileLayerT;; typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;; ; std::unique_ptr<llvm::TargetMachine> m_TM;; diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp; index 544d946..d10eaea 100644; --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp; +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp; @@ -251,10 +251,9 @@ namespace cling {; // Enable incremental processing, which prevents the preprocessor destroying; // the lexer on EOF token.; PP.enableIncrementalProcessing();; -; - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,; - /*SkipFunctionBodies*/false,; - /*isTemp*/true), this));; + Parser* TempParser = new Parser(PP, SemaRef,/*SkipFunctionBodies*/false,/*isTemp*/true);; + TempParser->Initialize();; + m_LookupHelper.reset(new LookupHelper(TempParser, this));; if (!m_LookupHelper); return;. diff --git a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp b/interpret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9380#issuecomment-985923087:3602,Simpl,SimpleCompiler,3602,https://root.cern,https://github.com/root-project/root/pull/9380#issuecomment-985923087,1,['Simpl'],['SimpleCompiler']
Usability,"(as per the discussion above, this will not get merged as is because we rather prefer an implementation that can estimate the remaining number of entries/time without having to check all input files beforehand, but the logic to create and update the progress bar, including colors, windows support etc. is still directly re-usable and super useful)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8675#issuecomment-880833581:250,progress bar,progress bar,250,https://root.cern,https://github.com/root-project/root/pull/8675#issuecomment-880833581,2,"['progress bar', 'usab']","['progress bar', 'usable']"
Usability,"(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails; // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works; C->cd();; Double_t w=20, h=20, xl=0, yb=20;; TBox* o=new TBox();; TPad* c= new TPad();; c->SetPad(0,0,1,1);; c->cd(1);; c->PlaceBox(o,w,h,xl,yb);; return 0;; }; ```; ## Setup. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```; source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6449:3416,clear,clear,3416,https://root.cern,https://github.com/root-project/root/issues/6449,2,['clear'],['clear']
Usability,")::MPPassManager::runOnModule (this=0xf6a4b0, M=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/IR/LegacyPassManager.cpp:1554; #63 llvm::legacy::PassManagerImpl::run (this=<optimized out>, M=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/IR/LegacyPassManager.cpp:542; #64 0x00007fffeeaccbee in cling::IncrementalExecutor::emitModule (this=0x698d80, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:253; #65 cling::IncrementalExecutor::runStaticInitializersOnce (this=0x698d80, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:251; #66 0x00007fffeea63d43 in cling::Interpreter::executeTransaction (this=<optimized out>, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1714; #67 0x00007fffeea6da53 in cling::IncrementalParser::commitTransaction (this=0x4f6670, PRT=..., ClearDiagClient=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:675; #68 0x00007fffeea6e410 in cling::IncrementalParser::Compile (this=0x4f6670, input=..., Opts=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:846; #69 0x00007fffeea62615 in cling::Interpreter::EvaluateInternal (this=0x4f17a0, input=..., CO=..., V=0x7fffffffcc70, wrapPoint=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379; #70 0x00007fffee95d98f in TCling::Calc (this=0x4f0e00, line=0x1c224b0 ""ROOT::Internal::RDF::JitFilterHelper(R_rdf::lambda0, new const char*[1]{\""a\""}, 1, \""\"", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x21269a0), reinterpret_cast<std::shared_ptr<ROO""..., error=0x7fffffffcd0c) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:3556; #71 0x00007ffff7fc97b3 in ROOT::Internal::RDF::InterpreterCalc(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocato",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1097659822:16074,Clear,ClearDiagClient,16074,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1097659822,1,['Clear'],['ClearDiagClient']
Usability,"); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The additional datasets also get exported to XML/rootfile/etc.; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue.; It was first discovered in our analysis framework.; [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/); ### A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10538:1107,clear,clear,1107,https://root.cern,https://github.com/root-project/root/issues/10538,1,['clear'],['clear']
Usability,* Fix the link from the RooFit tutorials to the main RooFit page. * Fix broken link in `RooJSONFactoryWSTool`. * Remove redundant links in `roofit_hs3.md` (doxygen generates the links automatically). * Use relative paths to reference guide. * Avoid class names in the brief description because the duplicated name looks not nice in the generated docs: https://root.cern/doc/v628/group__Roofitcore.html. * Remove a few unneeded destructor declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14130:234,guid,guide,234,https://root.cern,https://github.com/root-project/root/pull/14130,1,['guid'],['guide']
Usability,"* Make central function `TestReport()` which executes all planned tests for the canvas. ; * Print report when all images and scripts are generated. ; * Resort function orders to avoid need of forward declarations; * Use `TString::Format()` instead of `snprintf`; * Use `TFile::Open()` instead of `new TFile`; * Improve handling of command line args like `-k` or `-v`; * Create SVG instead of PS files when running in web mode, provide correspondent ref file; * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```; ./stressGraphics --web=chrome; ... **********************************************************************; * All the tests passed. :-); **********************************************************************; * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S; **********************************************************************; * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds; **********************************************************************; * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0; **********************************************************************; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16579:521,simpl,simplify,521,https://root.cern,https://github.com/root-project/root/pull/16579,1,['simpl'],['simplify']
Usability,* Remove man pages for non-existing binaries; They might have existed in the past: g2rootold genmap proofserva roota. * Install generated man pages in the correct subdirectory (man/man1). * Use the correct library name in the plugin definitions. * Remove obsolete plugin definition; libPeac was removed in version 5.34.01. * Simplify rule; No need to exclude files that no longer exists. * TWebVirtualX was removed - remove plugin definition using it; See commit a07af0afbe2e26237bf8ca059abc34255378a070. * Don't download input file if it already exists; This allows running the tests with pre-fetched file in environments without network - like e.g. the Fedora package build server. * Python 3 compatibility,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4026:325,Simpl,Simplify,325,https://root.cern,https://github.com/root-project/root/pull/4026,1,['Simpl'],['Simplify']
Usability,"* Revert changes to `emitLLVMUsed`: clearing the vectors `LLVMUsed` and `LLVMCompilerUsed` does not seem; needed because `CodeGenerator::StartModule` will swap the entire `CodeGenModule`.; * Revert changes to `SourceManager::isBeforeInTranslationUnit`: if assertions are enabled `llvm_unreachable` has the same effects as `assert(0)`. As we don't see this assertion in recent times, this change is probably not relevant anymore.; * Revert change in `SourceLocation::isBeforeInTranslationUnitThan`: I believe that all locations have a `SourceManager` nowadays, even from the command line.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13181:36,clear,clearing,36,https://root.cern,https://github.com/root-project/root/pull/13181,1,['clear'],['clearing']
Usability,"* Since the `RooAbsMinimizeFcn` implementations don't need to be copied; anymore, we can use `std::unique_ptr` instead of `shared_ptr` for; clear ownership and less overhead. * Name variables to be consistent with RooFit style. * Streamline `public` and `private` scopes. * Avoid code duplication with new private member function that applies a; specific call to both the regular likelihood and the likelihood in the; gradient. * Additional commit fixes memory leaks of toy datasets in `TestStatistics` tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12361:140,clear,clear,140,https://root.cern,https://github.com/root-project/root/pull/12361,1,['clear'],['clear']
Usability,* TBranch::GetEntriesSerialized: actually reuse baskets inside of simply leaking them; This applies fixes that were introduce to GetBulkEntries in 61c9927 and 60ad148; * Prevent leak of ready-to-reuse basket. This fixes https://github.com/root-project/root/issues/11853,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11862:66,simpl,simply,66,https://root.cern,https://github.com/root-project/root/pull/11862,1,['simpl'],['simply']
Usability,"* The `RooStatsUtils::MakeCleanWorkspace` function was implemented by ATLAS framework developers, who remain its only users until now. * They requested changing the function in #7823 and there is no clear reason to deny this request. Closes #7823.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16339:199,clear,clear,199,https://root.cern,https://github.com/root-project/root/pull/16339,1,['clear'],['clear']
Usability,"* added a paragraph on ""creating a TDataFrame"", including a TDF from scratch; * added examples and short explanations for string expressions for `Define` and `Filter`; * added a minimal example of creation of a TDF from scratch, including snapshotting to a new data-set; * switched ""branch"" with ""column"" where we are not specifically talking of a TTree. I am also waiting for feedback from @hshe824 who is kindly taking a look at it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/764:377,feedback,feedback,377,https://root.cern,https://github.com/root-project/root/pull/764,1,['feedback'],['feedback']
Usability,* inlining of simple getters; * replace `NULL` with `nullptr`; * change getters in `RooLagrangianMorphFunc::Config`: return `const &`; * remove `Config(const Config &other) = default;` because it caused; warnings,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8001:14,simpl,simple,14,https://root.cern,https://github.com/root-project/root/pull/8001,1,['simpl'],['simple']
Usability,* speed up `RooProdPdf::getConstraints()`; * don't waste time trying to undo changes to computation graph in BatchMode; * some typo and documentation fixes. More detail in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12051:72,undo,undo,72,https://root.cern,https://github.com/root-project/root/pull/12051,1,['undo'],['undo']
Usability,* use default members initializers; * use `override` specifier to clearly identify re-implemented methods; * use `nullptr` instead of 0 for all pointer values; * provide `= delete` specifier for non-implemented copy constructor and assign operators,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4305:66,clear,clearly,66,https://root.cern,https://github.com/root-project/root/pull/4305,1,['clear'],['clearly']
Usability,"**Need**:. The need for a new evaluation metric for testing the convergence of the optimizer is essential. The already existing metric was maximumRelativeError() between two matrices which takes the maximum of all the relative errors between its individual elements. But the relative error between these elements depends on the element values. i.e. Relative error between a and b = abs(a-b)/(abs(a)+abs(b)). Let use consider 2 cases,. case a) If two values are a = 0.0001 , b = 0.0002, relative error = 0.3333; case b) If two values are a = 10.0001 b = 10.0002 relative error = 4.99992e-6 . Since the unit tests for optimizer is written in a way so that a sample 3 layer DNN will learn this function Y = K * X. So, If X = I ( Identity matrix ), then Y = K * I = K. This should be equivalent to the output of the trained DNN when I is feed as Input. Let Y' be the output of the trained DNN. So I need to compare the matrices K and Y' for approximate equality with a certain threshold. So If I use maximumRelativeError for comparing the approximate equality for two matrices, then even though the difference is small for two cases, the relative error is significantly different. So there is a need for a new evaluation metric.; ; **Goal**:. The goal of this PR is to implement new evaluation metric meanAbsoluteError() between two matrices which takes the mean of all the absolute errors of individual elements. Absolute error between a and b = abs(a-b). So both the cases described above will have the same absolute error. So I propose this would be a good choice of metric for comparing two matrices for approximate equality as needed for testing optimizers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2376:680,learn,learn,680,https://root.cern,https://github.com/root-project/root/pull/2376,1,['learn'],['learn']
Usability,"**TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that; supported 32 bit CPUs was 10.14 Mojave, end-of-life since three; years: https://en.wikipedia.org/wiki/MacOS_version_history; This effectively sets our oldest supported macOS version to 10.15; from the perspective of CMake (although, I think in practice the; minimum supported version is probably newer because of LLVM; constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,; which I believe is not needed anymore. It is also patched out in; nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16554:597,simpl,simplifications,597,https://root.cern,https://github.com/root-project/root/pull/16554,1,['simpl'],['simplifications']
Usability,"**This is a replay of #16274 with the ""clear build"" label for the CI, to see if we can reproduce the build error that were observed after merging said PR**. Our CMake code modifies `find_package` to ignore any ROOT builtins, such that the builtin LLVM doesn't find and use system versions of the builtin dependencies. This is a bit hacky, but fortunately this needs to be done only when builtins are used. Therefore, this commit suggests to only do this redefinition of `find_package` if any builtins are used. This closes #8633, where it was requested to avoid this hack for the sake of being compatible with the `vcpkg` package manager. Although the hack is not completely removed, it is removed for the case where not builtins are used, which is probably what is done when using a C++ package manager to manage dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16285:39,clear,clear,39,https://root.cern,https://github.com/root-project/root/pull/16285,1,['clear'],['clear']
Usability,"*Original request by Marc Escalier in [ROOT-2753](https://sft.its.cern.ch/jira/browse/ROOT-2753), which got quite a few comments. Ported now to GitHub to make the request more visible.*. Hello,; one can create a RooDataSet with a given selection on variables by doing :; ```C++; RooRealVar myvariable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvariable,""condition on myvariable""); ```; for which ""condition on the variable"" could be for example : ""myvariable < 10""; this works well if myvariable is a float for example; but in the case where myvariable is a vector (i mean a array) of float or anything else :; (myvector_variable[0], myvector_myvariable[1], etc...), how to do to make a selection on the first (or any index) element of the vector, with a condition on the element of the vector ?; it seems this is not implemented in roofit ?; i mean, if i do this :; ```C++; RooRealVar myvector_variable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvector_variable,""myvector_variable[0]<10""); ```; it crashes; if i do :; ```C++; RooRealVar myvector_variable(""myvector_variable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvariable[0],""myvector_variable[0] < 10""); ```; it is ""forbidden"" by the root/roofit program; by the way, it crashes also if i do :; ```C++; RooRealVar myvector_variable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvector_variable); ```; (if myvariable is a vector and not a simple variable); thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12610:1498,simpl,simple,1498,https://root.cern,https://github.com/root-project/root/issues/12610,1,['simpl'],['simple']
Usability,"+1 as it make `diffs` clearer in case of change to the member initialization. (downside, is the number of extra lines).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12102#issuecomment-1419337842:22,clear,clearer,22,https://root.cern,https://github.com/root-project/root/pull/12102#issuecomment-1419337842,1,['clear'],['clearer']
Usability,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>; (""test"", ""test_out.root"", columnList); .GetValue();; }; }; ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15079:8007,clear,clear,8007,https://root.cern,https://github.com/root-project/root/issues/15079,1,['clear'],['clear']
Usability,", I wanted to provide an option to match multiple classes without specifying their names one by one. This can be useful, for instance, for templated classes, since we might want to apply the same pythonizor to any instantiation of the templated class no matter with what type it was instantiated (note that pythonizors are not applied to templates but to classes). So it is also possible to do (this time picking a real example from ROOT):; ```python; @pythonization(""ROOT::VecOps::RVec<"", is_prefix=True); def pythonizor_RVec(klass, name):; ...; ```; The `is_prefix` argument (`False` by default) tells that I want to match anything that starts with `ROOT::VecOps::RVec<`, e.g. `ROOT::VecOps::RVec<float>`. The same thing can be done with an iterable too:; ```python; @pythonization([ ""ROOT::VecOps::RVec<"", ""std::vector<"" ], is_prefix=True); def pythonizor_RVec_stdvec(klass, name):; ...; ```. Alternatively, I could have allowed regular expressions. I discarded that because of two reasons:; - They are more costly that simple string comparison.; - They complicate the registration of pythonizors per scope. In this new `@pythonization` decorator, the scope of the class is parsed (e.g. `NS1::NS2` for `NS1::NS2::C`) and the pythonizor is _registered for that scope_. This allows for more efficient lookup of the pythonizors to apply, because when a class is accessed for the first time, only the pythonizors registered for its scope will be attempted. This is nice for user classes, because if a user class belongs to `UserNamespace`, when the user script first accesses the class only the pythonizors for classes in `UserNamespace` will be tried, and not every single registered pythonizor (in particular, not all the pythonizors ROOT registers for its classes in the global namespace). So I prefer to have a clean static prefix that unambiguously tells me what the target scope is than something like `NS1::(.+)::C`. And if the user wants to do an additional complex matching with regular expre",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9128:2326,simpl,simple,2326,https://root.cern,https://github.com/root-project/root/pull/9128,1,['simpl'],['simple']
Usability,- Add PyMVA introduction and Keras documentation to TMVA Users Guide.; - Set default options for PyKeras method correctly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/391:63,Guid,Guide,63,https://root.cern,https://github.com/root-project/root/pull/391,1,['Guid'],['Guide']
Usability,"- Change implementation of next event. Simplify updates. Update summary tree on scene changes. - Optimize streaming. - Detect web-socket close and warn user (red rectangle in topbar). - Standalone THREE renderer:; - ortho camera, compositing, camera reset, key and mouse handling (own copy of OrbitController needed); - picking, highlight and tooltips; - selection and multiple selection. - Don't execute user input from main toolbar while scene changes are processing. - Add virtual function LocalModelChanges to controll model changes in the proxy builder. - Major cleanup of several JS classes. - New class REveEllipsod (error ellipse). - Support changing of outline colors for selection/highlight. - Review / improve REveData classes, esp. for selection and projections. - REveSelection, allow a list of selection upward propagation modes, not just a single one. - Validate expressions for table views, also, check TROOT::ProcessLine staus. - Cleanup some TEve-stlye change propagation / update functions. - Merge REveElement GetMaster() and ForwardSelection() through fSelectionMaster member. - Use REveAuntAsList in REveDataItem to communicate selection between proxy builders and REveDataItem. - Improve selection handling for compounds and multi-Objec3D representations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4617:39,Simpl,Simplify,39,https://root.cern,https://github.com/root-project/root/pull/4617,1,['Simpl'],['Simplify']
Usability,"- Fix ROOT-9561.; TTree::Draw segfaults when passing ""A*"" as drawing option; The following macro reproduces the problem:. ```; {; TTree tree(""tree"", ""tree"");; int a, b;; tree.Branch(""a"", &a);; tree.Branch(""b"", &b);; a = 1;; b = 2;; tree.Fill();; tree.Draw(""a:b"", """", ""* A"");; }; ```. - The paragraph ""Retrieving the result of Draw"" in the TTree::Draw reference guide has been improved and updated.; - Some typos have been fixed in TTree.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5629:361,guid,guide,361,https://root.cern,https://github.com/root-project/root/pull/5629,1,['guid'],['guide']
Usability,- GetBranchNames is now a public method of RLoopManager; - fBranchNames is now RLoopManager::fValidBranchNames; - the first call to GetBranchNames evaluates the list of; valid branch names (expensive operation) and stores it; in fValidBranchNames. Subsequent calls simply return; the cached value; - code in RInterface has been simplified as a consequence. A test python application which booked O(100k) operations in situations where caching was not performed sees an improvement of the RDF setup time from 17s to 6s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3025:265,simpl,simply,265,https://root.cern,https://github.com/root-project/root/pull/3025,2,['simpl'],"['simplified', 'simply']"
Usability,- It looks good. Thanks.; - I think for THistPainter::PaintErrors() it is simply missing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9015#issuecomment-923867560:74,simpl,simply,74,https://root.cern,https://github.com/root-project/root/pull/9015#issuecomment-923867560,1,['simpl'],['simply']
Usability,- Make sure the comments on data members are visible in the reference guide. - Fix typos,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7847:70,guid,guide,70,https://root.cern,https://github.com/root-project/root/pull/7847,1,['guid'],['guide']
Usability,"- Move some RenderCore specific classes and all shaders into RenderCore source tree. - Implement all existing Three.js functionality with RenderCore. - In RenderCore, further improve on existing functionality:; - Textured points - arbitrary size and shape.; - Mesh lines - arbitrary thickness.; - Object and sub-object picking through color buffer with fragment depth detection.; - Camera handling like in TEve, with ability to pick rotation center. - The development branch has been squashed to hide redundant changes. Full history is available in PR osschar/root#41. ## C++ / Server Changes. - REveManager: Make RenderCore the default rendering engine. - Stream interpreter errors and show them in client log. - Add flag fIsRCore to REveManager. - Make REvePointSet secondary-selectable. - Add parameter for projection depth in REveDataCollection. ## JS / Client Changes. - Remove error MessageBox popup during client updates. - EveManager.js: Check change bits in ImportSceneBinary when scene changes are streamed. - EveScene.js: Optimize visibility changes. - EveScene.js: pass eve_element instead of object3d in cases where it simplifies the code. - EveScene.js, GlViewer classes: Cleamup highlite/selection management so it can be abstracted for RCore. - Separate viewer-side selection processing for Three / RCore. ## Tutorials / Demos Changes. - event_demo.C: secondary select points, jet title include pT. - Tune marker sizes, colors, visual parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11936:1132,simpl,simplifies,1132,https://root.cern,https://github.com/root-project/root/pull/11936,1,['simpl'],['simplifies']
Usability,- Proper Doxygen formatting. A lot of documentation was not visible on the reference guide because of wrong doxygen formatting. Some comment appeared on the wrong date members.; - Fix typos,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7665:85,guid,guide,85,https://root.cern,https://github.com/root-project/root/pull/7665,1,['guid'],['guide']
Usability,- Rebased and deleted includes instead of commenting out.; - I didn't rerun IWYU so I'm curious if the build still succeeds.; - Also the rebase failed on math/physics/inc/TVector3.h where I used the master for simplicity.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/123#issuecomment-285393802:210,simpl,simplicity,210,https://root.cern,https://github.com/root-project/root/pull/123#issuecomment-285393802,1,['simpl'],['simplicity']
Usability,- Remove old Windows specific limitations (leftover from ROOT 5); - Global namespace in front of ROOT::Fit to prevent compiler complaining about ROOT::Fit::ROOT::Fit::ExecutionPolicy; (maybe we should simply remove ROOT::Fit),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1742:201,simpl,simply,201,https://root.cern,https://github.com/root-project/root/pull/1742,1,['simpl'],['simply']
Usability,"- Several fixes to make the documentation of data members visible in the reference guide.; - In Hoption_t, three useless struct members were removed: Keep, Char, Update. They were left over from CERNLIB fortran code !; - TPainter3dAlgorithms use the Doxygen grouping mechanism @{ and @} to show the structure in the data members which was indicated by simple C++ comments; - Few documentation update in THistPainter; - Fix typos",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7706:83,guid,guide,83,https://root.cern,https://github.com/root-project/root/pull/7706,2,"['guid', 'simpl']","['guide', 'simple']"
Usability,"- TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA.; The macro generates on the fly some toys images (size 16x16) of two different classes and then a; convolutional neural network is used for their classification.; This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package; This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA.; Toys time dependednt data of two different classes are generated on the fly and then; a recurrent neural network is used for classification.; Both TMVA and PyKeras networks are built and used.; The network uses by default one LSTM layer, but optionally it can be built with; a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type; can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5441:993,simpl,simple,993,https://root.cern,https://github.com/root-project/root/pull/5441,1,['simpl'],['simple']
Usability,"- [ ] Checked for duplicates. When the `auto` keyword is used in the interpreter to substitute pointer types, the value of the pointer is not printed out correctly, even though the pointer points to the correct variable. A few simple interpreter commands to reproduce the problem:; ```; root [0] int x = 1; (int) 1; root [1] int y = 2; (int) 2; root [2] auto xp = &x; (int *) @0x7ffe114d3bb8 <- WRONG!; root [3] auto yp = &y; (int *) @0x7ffe114d3bb8 <- WRONG!; root [4] &x; (int *) 0x7f3bcb682018; root [5] &y; (int *) 0x7f3bcb68201c; root [6] xp; (int *) @0x7ffe114d3bb8 <- WRONG!; root [7] yp; (int *) @0x7ffe114d3bb8 <- WRONG!; root [8] *xp; (int) 1; root [9] *yp; (int) 2; ```. However, if one uses `auto *` instead of auto, one gets the expected behavior:. ```; root [0] int x = 1; (int) 1; root [1] int y = 2; (int) 2; root [2] auto * xp = &x; (int *) 0x7f8f0a394018 <- CORRECT!; root [3] auto * yp = &y; (int *) 0x7f8f0a39401c <- CORRECT!; root [4] &x; (int *) 0x7f8f0a394018; root [5] &y; (int *) 0x7f8f0a39401c; root [6] xp; (int *) 0x7f8f0a394018 <- CORRECT!; root [7] yp; (int *) 0x7f8f0a39401c <- CORRECT!; root [8] *xp; (int) 1; root [9] *yp; (int) 2; ```. Can we fix the interpreter such that it also prints the correct pointer values when `auto` is used?. This problem was originally spotted on the ROOT forum:; https://root-forum.cern.ch/t/wrong-object-returned-in-root-when-using-auto-keyword",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8806:227,simpl,simple,227,https://root.cern,https://github.com/root-project/root/issues/8806,1,['simpl'],['simple']
Usability,"- [ ] Checked for duplicates; <!--; I did not find any duplicates; -->. ### Describe the bug; <!--; When compiling a makefile that includes ROOT libraries, there was an error when using TCanvas.h.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; makefile that included root libraries. ; make version 3.81. clang++ -g -Werror -fopenmp `root-config --cflags` -I./Analysis -o Test Analysis/TestAnalysis.cpp Analysis/Test.cpp `root-config --glibs` -lSpectrum ; In file included from Analysis/Test.cpp:16:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TCanvas.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TPad.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualPad.h:30:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TQObject.h:42:; /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:53:42: error: 'sizeof (val)' will return the size of the pointer, not the array itself [-Werror,-Wsizeof-pointer-div]; constexpr size_t size = sizeof(val)/sizeof(val[0]);; ~~~~~~~~~~~^; /Users/tamashiro1/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:51:25: note: pointer 'val' declared here; void SetArg(const T* val). The SOLUTION that I used:; In line 53 of TVirtualQConnection.h, I changed ; constexpr size_t size = sizeof(val)/sizeof(val[0]);; to ; constexpr size_t size = sizeof(val)/sizeof(*val);; and my code compiled.; -->. ### Setup; <!--; 1. 6.26/06; 2. Mac OS 12.6.5; 3. homebrew; -->. ### Additional context; <!--; root works for now, but I wanted to share the bug and solution I used. ; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12786:234,clear,clear,234,https://root.cern,https://github.com/root-project/root/issues/12786,1,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version 6.26/02; 2. Operating system Mac Big Sur apple m1; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->binary download. ### Additional context; <!--; create a microstrip simulation with:; <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10472:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10472,2,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10533:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10533,16,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6645:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/6645,2,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. For ROOT 6.27 (LCG dev23 nightly slot) I see a wrong overload resolution for pair of functions that takes argumentof type `double` and `std::complex<double>`. The complex veruison of function is invoked, whle `double` version is ignored:. see [here](https://gist.github.com/VanyaBelyaev/2cd0280e1e5584a74652c9bfd8f2f2af). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. I would expect the proper overleoad resolution: the `double` function is inviked for `double` argument ; and `std::complex<double>` version is invoked for the `complex` argument. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. see the gist [here](https://gist.github.com/VanyaBelyaev/2cd0280e1e5584a74652c9bfd8f2f2af). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT Version 6.27 ; 2. LCG dev3 nightly cvmfs slot, `x86_64-centos7-gcc12-opt` platform . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11924:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11924,2,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I my project I use ROOT from LCG nightlies build dev3 slot; And for my tests (with ctest and nose) I get an error:. ``` ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>; import ROOT, os, glob ; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>; module = importlib.import_module(pyz.__name__ + '.' + module_name); File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>; from ._roocategory import RooCategory; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18; """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries.; ^; SyntaxError: invalid escape sequence \c; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8902:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/8902,1,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Dear ROOT developers, . since, I believe, introduction of ROOT v6, after one redirects /dev/stdout to a file, by typing, for example, ; "".> a.txt"", one can no longer see what he is typing on the command line - the typed characters are saved ; to a.txt, but are not duplicated on the screen. . Moreover, pressing the up-arrow key brings to the screen usual escape characters (as shown in the example below - ; ""^[[A"" corresponds to me pressing up-arrow) and a user has to remember the contents of the command stack till he finally ; types "".>"" and gets visibility of the command prompt back. -- many thanks for taking time and looking into it, Pasha. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The desired (a'la ROOT 5) behavior is that after the redirection, the output of the compiled code is redirected ; to the specified file, everything coming from /usr/stdin is also sent to that file, but also duplicated on the screen, ; so the command line is fully visible and editable at any time. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; <pre>; murat@mu2e01:/data/murat/mu2e_dev>root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.22/06 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7626:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7626,1,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Exception is throwing std::length_error with message vector too long. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>. int; main(int argc, char* argv[]); {; std::uint32_t v0 = 0;; std::uint32_t v1 = 0;. TFile file(""sbx.root"", ""RECREATE"");; TTree tree(""tree-name"", ""tree-title"");; tree.Branch(""v0"", &v0);; tree.Branch(""v1"", &v1);. for (std::size_t i = 0; i < 10; ++i); {; v0 = i;; v1 = i * 2;; tree.Fill();; }. tree.Scan();; tree.Write();. try; {; ROOT::RDataFrame df(tree);; }; catch (std::length_error& ex); {; std::cout << ex.what() << std::endl;; std::cout << std::endl;; }. return 0;; }; ```. ### Setup; <!--; 1. ROOT version 6.26.10 and 6.29.01; 2. Operating system Windows Visual Studio 2022 64-bit x64 ; 3. How you obtained ROOT Downloaded exe installer; -->; ROOT version 6.26.10 and 6.29.01; Operating system Windows Visual Studio 2022 64-bit x64 ; How you obtained ROOT Downloaded exe installer. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12540:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12540,2,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Number of compiler warnings on unused variables on macOS:. ```; /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]; vm_size_t vsize, vprvt, rsize, size;; ^; 1 warning generated.; [6852/9530] Linking CXX static library lib/libclingUtils.a; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o; /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]; Bool_t cpuPin = kFALSE;; ^; 1 warning generated.; [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]; Display *disp;; ^; 1 warning generated.; [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t px",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10572:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10572,1,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Trying to load the plugin for a module that was not compiled returns 0 (success value); ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Return the failure value (-1 ?). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; root [1] gROOT->GetPluginManager()->FindHandler(""TVirtualGeoConverter"")->LoadPlugin(); Module ConverterVG not found.; Error in <TCling::LoadPCM>: ROOT PCM /Users/agheata/root/root_install/lib/libConverterVG_rdict.pcm file does not exist; ... long list of PCM's tried by LoadPCM; (int) 0; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Tested with master branch on Monterey MacBook Air (M1, 2020), compiled from source. ### Additional context; <!--; Add any other context about the problem here.; -->; The same code on my Ubuntu 22.04 returns correctly -1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12326:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12326,2,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; ```; geonwoo@geonwoo-VirtualBox:~$ root; ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; LC_ALL=C x86_64-linux-gnu-g++-9 -O3 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Results was:; With exit code 0. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fd7d1a1bc2a in __GI___wait4 (pid=4287, stat_loc=stat_loc; entry=0x7ffdd0caeb28, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007fd7d1a1bbeb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffdd0caeb28, options=options; entry=0) at waitpid.c:38; #2 0x00007fd7d198b0e7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fd7d203d1ce in TUnixSystem::StackTrace() () from /home/geonwoo/root/lib/libCore.so.6.22; #4 0x00007fd7d203a055 in TUnixSystem::DispatchSignals(ESignals) () from /home/geonwoo/root/lib/libCore.so.6.22; #5 <signal handler called>; #6 0x00007fd7d0566be6 in (anonymous namespace)::RedirectingFileSystemParser::uniqueOverlayTree((anonymous namespace)::RedirectingFileSystem*, (anonymous namespace)::Entry*, (anonymous namespace)::Entry*) () from /home/geonwoo/root/lib/libCling.so; #7 0x00007fd7d0566d05 in (anonymous namespace)::RedirectingFileSystemParser::uniqueOverlayTree((anonymous names",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6859:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/6859,1,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; When running the same script twice in a row in the same root session, I get a segmentation fault. Same commands inline work fine. If changing TF1 to TH1, it works fine.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; void Test(); {; TF1 *crap = new TF1(""crap"",""pol0"",0.,1.);; crap->Print();. TFile *out = new TFile(""./test.root"",""recreate""); ; ; crap->Write();; ; out->Close();; delete out;; ; return;; }. .x Test.C; -->. ### Setup; <!--; 1. 6.22/03 ; 2. CentOS Linux 8; 3. Own build; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10489:595,clear,clear,595,https://root.cern,https://github.com/root-project/root/issues/10489,1,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior; Just fix it? Make it work? Or something like these... ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:; ```python; factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',; H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.24.06; 2. Operating system: Ubuntu20.04; 3. Obtain way: binary download. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9624:436,Learn,LearningRateSchedule,436,https://root.cern,https://github.com/root-project/root/issues/9624,6,['Learn'],['LearningRateSchedule']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. Cannot create `ROOT.TF1` from python function in ROOT v6.25/01 (dev3python2 LCG slot) i tworks for dev3 slot, but nor for dev2python2 . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Failure to create `ROOT.TF1` bject from python function. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; it should work both for python2 and python3 . ### To Reproduce. ```; from __future__ import print_function; import ROOT, sys, math . print( 'Python: ', sys.version_info ); print( 'ROOT: ', ROOT.gROOT.GetVersion() ). def fun ( x,*_ ): return math.sin(x[0])/x[0] . f1 = ROOT.TF1 ( 'f1' , fun , 0 , 8*math.pi ); f1.Draw (); ```. as output one gets: . ```; Traceback (most recent call last):; File ""./ostap/build/tst1.py"", line 10, in <module>; f1 = ROOT.TF1 ( 'f1' , fun , 0 , 8*math.pi ); TypeError: Template method resolution failed:; none of the 8 overloaded methods succeeded. Full details:; TF1::TF1(const TF1& f1) =>; TypeError: takes at most 1 arguments (4 given); TF1::TF1() =>; TypeError: takes at most 0 arguments (4 given); TF1::TF1(const char* name, const char* formula, double xmin, double xmax, const char* option) =>; TypeError: takes at least 5 arguments (4 given); TF1::TF1(const char* name, double xmin, double xmax, int npar, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2 (a float is required); TF1::TF1(const char* name, const char* formula, double xmin = 0, double xmax = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault, bool vectorize = false) =>; TypeError:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8152:527,clear,clear,527,https://root.cern,https://github.com/root-project/root/issues/8152,2,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; There is a segfault in segfault for RooMomentMorph for ROOT>6.24 . I am using the example from https://gist.github.com/cranmer/46fff8d22015e5a26619 ; it was OK for ROOT 6.24 but fails for e.g. dev3 LCG nightly build . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; There is a segfault in segfault for RooMomentMorph for ROOT>6.24 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. no segfault . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. at lxplus: ; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/x86_64-centos7-gcc11-opt/setup.sh; python test.py ; ```; where `tst.py` is a content of https://gist.github.com/cranmer/46fff8d22015e5a26619 with a fixed print statement. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. Fails for ROOT > 6.24 ; 2. lxplus ; 3. LCG . ### Additional context; <!--; Add any other context about the problem here.; -->. actuallt my examples are more complicated, but since it fails even for the example from the expert, I use his example",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11061:609,clear,clear,609,https://root.cern,https://github.com/root-project/root/issues/11061,2,['clear'],['clear']
Usability,"- [ ] Implement batch eval for Chi2 test stat; - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401); - [x] Implement getWeightBatch() and getBatches() for RooDataHist; - [ ] Implement getBatch for RooTreeDataStore?; - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed.; - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation.; - [ ] Use batch evaluation & inverted CDF for toys; - [ ] Continue to improve interface with variadic templates; - [ ] Profile and optimise new Batch interface; - [ ] Modernise proxyList member of RooSimultaneous; - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.); - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous; - [ ] Implement analytical integration of RooJohnson.; - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense.; - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`.; - [ ] Use analytic integrals in RooBinSamplingPdf when available.; - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf.; - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304; - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits.; - [ ] Throw Gaussian & Poisson constraints into dedicated fast class.; - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface.; - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits.; - [ ] #7217, pythonisations for RooFit; - [ ] Vectorized generation of events. Unless specialised",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6557:288,clear,clear,288,https://root.cern,https://github.com/root-project/root/issues/6557,1,['clear'],['clear']
Usability,"- [ x ] Checked for duplicates. ### Describe the bug; After I write out (part of) a geometry with; ```; writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");; ```; the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says; ```; <world ref=""HcalBarrel""/>.; ```; The result is that ROOT itself cannot read the file:; ```; Info in <TGeoManager::Import>: Reading geometry from file: [...]; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Error in <TGeoManager::Import>: Cannot open file; ```. ### Expected behavior; The function should return usable gdml. I tested that if I change by hand to ; ```; <world ref=""HcalBarrel0x0x55d87ec06500""/>; ```; the file is woorking and valid. ### To Reproduce; ```; root -l $ROOTSYS/tutorials/geom/rootgeom.C; TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);; TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);; TGDMLWrite *writer = new TGDMLWrite;; writer->SetG4Compatibility(true);; writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");; .q; root -l; gGeoManager->Import(""test.gdml""); Info in <TGeoManager::Import>: Reading geometry from file: test.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Error in <TGeoManager::Import>: Cannot open file; ```. A side bug, I cannot reproduce this with the Export option, and that; is because it doesn't recognize the f flag:; ```; root [1] gGeoManager->Export(""test.gdml"",""vgf""); Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code; Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set; ```. ### Setup; 1. 6.24.06; 2. singularity container running debian (on top of Scientific Linux 7); 3. Container maintainer installed it. ### Additional context; I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9310:645,usab,usable,645,https://root.cern,https://github.com/root-project/root/issues/9310,2,"['Simpl', 'usab']","['Simple', 'usable']"
Usability,"- [ x ] Checked for duplicates. ### Describe the bug; When fitting a histogram using the ""WW"" option for TH1::Fit(), i.e.; ```; hist->Fit(func,""WW"");; ```; The fit ignores bins with zero counts, i.e. the same as the ""W"" option. ### Expected behavior; Fit should proceed with all bins with a weight of 1, even those with no counts. ### To Reproduce; ``` TH1D *hist = new TH1D(""hist"", ""hist"", 100, 0, 100);; TF1 *func = new TF1(""func"", ""[0]"", 0, 100);; func->SetParameter(0, 1);; ; hist->FillRandom(""func"", 10); //add sparse counts. hist->Draw(""hist"");. hist->Fit(func, ""WWR"");; func->Draw(""hist same"");; ; std::cout << func->GetParameter(0) << std::endl; ; ```. ### Setup; 1. ROOT version 6.27/01; 2. MacOS 12.5.1; 3. ROOT compiled from source. ### Additional context; This is pretty clear from the ROOT::Fit::FitOptionsMake function [here](https://root.cern.ch/doc/master/HFitImpl_8cxx_source.html#l00684), where on line 728 the WW option is set (correctly), and then on line 780 the W option is checked for, and overwrites the WW option flag. A trivial check that the WW option is not present at line 780, or that ```fitOption.W1 != 2``` fixes the issue, i.e. change line 780 to; ```; if (!opt.Contains(""WW"") && opt.Contains(""W"")) fitOption.W1 = 1; // all non-empty bins have weight =1 (for chi2 fit); ```; or ; ```; if (fitOption.W1 !=2 && opt.Contains(""W"")) fitOption.W1 = 1; // all non-empty bins have weight =1 (for chi2 fit); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11304:783,clear,clear,783,https://root.cern,https://github.com/root-project/root/issues/11304,1,['clear'],['clear']
Usability,"- [ x ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9309:393,clear,clear,393,https://root.cern,https://github.com/root-project/root/issues/9309,2,['clear'],['clear']
Usability,"- [ x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. [Line 98 of root/tree/dataframe/src/RRootDS.cxx](https://github.com/root-project/root/blob/master/tree/dataframe/src/RRootDS.cxx#L98) looks like it might be left over from a previous incarnation. . I'm interested in finding out if this is a bug because I'm trying to subclass RDataSource, and my subclass isn't working, so perhaps I'm not properly understanding how this one worked...; <!--; A clear and concise description of what the wrong behavior is.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11971:778,clear,clear,778,https://root.cern,https://github.com/root-project/root/issues/11971,1,['clear'],['clear']
Usability,"- [ x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; in root interpreter, we may:; ``` c++; root [0] unsigned long a=5;; ```; and then; ```c++; root [1] b=a;; ```; and it returns a number; ```; (unsigned long) 140055251333128; ```; which is totally unexpected.; <!--. -->. ### Expected behavior; we expect to yield:; ```; (unsigned long)5; ```. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; code generally described above. ; you just need to: ; start root interpretor; ```bash; $root; ```; and run the lines in it; ```c++; root [0] unsigned long a=5;; (unsigned long) 5; root [1] b=a;; ```; note other unsigned integer types also bug.; ``` c++; root [2] unsigned int c; (unsigned int) 0; root [3] d=c; Error in <TRint::HandleTermInput()>: std::runtime_error caught: >>> Interpreter compilation error:; expected relocatable expression. root [4] unsigned char e=5; (unsigned char) '0x05'; root [5] f=e; Error in <TRint::HandleTermInput()>: std::runtime_error caught: >>> Interpreter compilation error:; expected relocatable expression; ```. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; splash screen; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.22/02 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 17 2020, 12:46:52 |; | From tags/v6-22-02@v6-22-02 |; | Try '.help', ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6812:684,clear,clear,684,https://root.cern,https://github.com/root-project/root/issues/6812,1,['clear'],['clear']
Usability,"- [ √ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. If the parameter list of a function has a trailing comma (e.g. funct(int a, int b,){} ) then the second parameter cannot be specified from the command line (e.g. root 'funct.C(1,2)' ). ### Expected behavior. Both parameters should be usable. ### To Reproduce. /* Bug Report; * This works:; * root -b -q 'bug.C(""asdf"")'; * This does not:; * root -b -q 'bug.C(""asdf"",""xyzzy"")'; *; * You must remove the comma after param2 to fix this.; */. void bug(; 		 const Char_t *param1 = ""input Text 1"",; 		 const Char_t *param2 = ""input Text 2"", // The comma here breaks the code; ); {; cout << param1 << endl;; cout << param2 << endl;; }. ### Setup. 1. ROOT version; Version 5.34/38 12 March 2018 ; 3. Operating system; NAME=""Scientific Linux""; VERSION=""7.3 (Nitrogen)""; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; Installed on rcas node at Brookhaven National Lab. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12840:619,usab,usable,619,https://root.cern,https://github.com/root-project/root/issues/12840,1,['usab'],['usable']
Usability,"- [V ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. ; These negative values are then handled differently in different versions of ROOT; ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png); ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. ; Is it possible to avoid the negative values in RooChebychev in the first place?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The code which produces the plots above:; ```; import ROOT; canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500); #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__; mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53); frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)); c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1); c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1); bkg = ROOT.RooChe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12452:392,clear,clear,392,https://root.cern,https://github.com/root-project/root/issues/12452,2,['clear'],['clear']
Usability,"- [V] Checked for duplicates. ### Describe the bug; RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise; - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce; I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup; 1. ROOT version 6.22/06.; 2. Arch Linux.; 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8000:790,simpl,simply,790,https://root.cern,https://github.com/root-project/root/issues/8000,2,['simpl'],['simply']
Usability,"- [X] Checked for duplicates (checked with @pcanal ); <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>. int main() {; {; // write data out. // in the main tree, ""x"" counts 0, 1, 2; ROOT::RDataFrame(3); .DefineSlotEntry(""x"", [](unsigned, ULong64_t e) { return int(e); }); .Snapshot<int>(""main"", ""main.root"", {""x""});. // in the friend tree, ""x"" counts 0, 1, 3 (i.e. no entry with x == 2); ROOT::RDataFrame(3); .DefineSlotEntry(""x"",; [](unsigned, ULong64_t e) { return e == 2 ? 3 : int(e); }); .Snapshot<int>(""friend"", ""friend.root"", {""x""});; }. TFile fmain(""main.root"");; auto *main = fmain.Get<TTree>(""main"");; TFile ffriend(""friend.root"");; auto *fr = ffriend.Get<TTree>(""friend"");. fr->BuildIndex(""x"");; main->AddFriend(fr);. int xmain, xfriend;; main->SetBranchAddress(""x"", &xmain);; main->SetBranchAddress(""friend.x"", &xfriend);. for (int i = 0; i < 3; ++i) {; main->GetEntry(i);; std::cout << xmain << "" "" << xfriend << '\n';; }. return 0;; }; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. An error or warning should be printed if no indexed entry could be retrieved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7713:415,clear,clear,415,https://root.cern,https://github.com/root-project/root/issues/7713,2,['clear'],['clear']
Usability,"- [X] Checked for duplicates. ### Describe the bug. I try to eigen-decompose a (seemingly simple) symmetric 3x3 matrix M, defined like this:. 1 0.01 0.01 ; 0.01 1 0.01 ; 0.01 0.01 1 . But TMatrixDEigen seems to fail. Fetching the eigenvalues D and eigenvectors Q, I calculate Q x D x Q^T and get:. 1.055 -0.1825 0.1475 ; -0.1825 1.179 0.02375 ; 0.1475 0.02375 0.8487 . which is not equal to M, so the decomposition failed.; I tried this on several platforms, with identical results.; I attach a macro to reproduce the issue. Strangely enough the check often looks normal (for example, changing the off-diagonal elements to 0.1 or 0.0001), but with some specific cases like the one above it seems to break. I was not able to determine more precise criteria. Comparing the returned values to other codes (eg numpy) the eigenvalues seem correct, but the eigenvectors often disagree (also in cases where the check above apparently works). ### Expected behavior. Q x D x Q^T should match M. ### To Reproduce. TMatrixD m(3,3);; m(0,0) = m(1,1) = m(2,2) = 1;; m(0,1) = m(1,0) = m(1,2) = m(2,1) = 0.01;; m(0,2) = m(2,0) = 0.01;; cout << ""Initial matrix : "" << endl;; m.Print();. cout << ""Determinant : "" << endl;; cout << m.Determinant() << endl;. TMatrixDEigen mtm(m);; TMatrixD eigenVal = mtm.GetEigenValues();. cout << ""Eigenvalues (D): "" << endl;; eigenVal.Print();; ; TMatrixD eigenVec = mtm.GetEigenVectors();; TMatrixD eigenVecT = mtm.GetEigenVectors();; eigenVecT.T();; cout << ""EigenVectors (Q): "" << endl;; eigenVec.Print();; ; TMatrixD mCheck = eigenVec*eigenVal*eigenVecT;; cout << ""Q*D*QT : "" << endl;; mCheck.Print();. ### Setup. Root 6.22, EL7",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7850:90,simpl,simple,90,https://root.cern,https://github.com/root-project/root/issues/7850,1,['simpl'],['simple']
Usability,"- [X] Checked for duplicates. ### Describe the bug; After creating a new TCanvas with Pyroot, moving the cursor over the TCanvas window displays the Windows wait-cursor, and clicking the window makes it hang and show ""Not Responding"" in the title bar. ### Expected behavior; The newly created TCanvas should be responsive, as it is when created from the ROOT command prompt instead of in Pyroot. ### To Reproduce (in VStudio x86 native tools command window); > c:\root_v6.24.06\bin\thisroot.bat; > python; >>> import ROOT; >>> c1 = ROOT.TCanvas(""blah"", ""blah blah"", 800, 600). (canvas opens but is unresponsive). ### Setup; ROOT 6.24.06 precompiled binaries (built Sep 02 2021, 14:20:23); Windows 11 Pro; Python 3.8.10 (32-bit) ; VStudio 2019 (16.11.9) or 2022 (17.0.5) Community edition. ### Additional context; ROOT appears to behave properly when launched from the command prompt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9645:311,responsiv,responsive,311,https://root.cern,https://github.com/root-project/root/issues/9645,1,['responsiv'],['responsive']
Usability,"- [X] Checked for duplicates. ### Describe the bug; We have a long-running service which reads some information from ROOT files and we have noticed that this service regularly grows its memory use until it consumes all available memory and gets killed. I think I have tracked it down to reading one particular object type `TMap`. We have relatively large `TMap` object stored in files, the key in TMap is `TObjString` and values are `TObjArray` of `TObjString`. Every time when TMap is read from a file the memory use grows dramatically by many megabytes, even though the Python object is discarded almost immediately after use. ### Expected behavior; Memory use should not grow indefinitely, memory should be deallocated when Python object is destroyed. ### To Reproduce; I managed to reproduce this issue with a simple script, attached here:; ```python; import os; import tempfile. import psutil; import ROOT. def main():. proc = psutil.Process(). with tempfile.TemporaryDirectory() as tmpdir:. file_name = os.path.join(tmpdir, ""testfile.root""); print(""Creating test root file"", file_name); _make_file_with_tmap(file_name). mem0 = proc.memory_info(); rootfile = ROOT.TFile.Open(file_name, ""READ""); while True:. ann_obj = rootfile.Get(""annotations""); # ann_obj.DeleteAll() # DeleteAll seems to slow leak but not 100%; del ann_obj. mem1 = proc.memory_info(); _memstat(mem0, mem1); mem0 = mem1. def _make_file_with_tmap(file_name):. rootfile = ROOT.TFile.Open(file_name, ""RECREATE""). map = ROOT.TMap(). for i in range(50_000):. key = ROOT.TObjString(""long_histogram_name_"" * 10 + str(i)); value = ROOT.TObjArray(); value.Add(ROOT.TObjString(""annotation"")); value.Add(ROOT.TObjString(f""10000"")); map.Add(key, value). rootfile.WriteTObject(map, ""annotations""); rootfile.Close(). def _memstat(mem0, mem1):; MB = 1024 * 1024; rss_mb = mem1.rss // MB; vms_mb = mem1.vms // MB; rss_delta_mb = (mem1.rss - mem0.rss) / MB; vms_delta_mb = (mem1.vms - mem0.vms) / MB; print(f""Memory stat: RSS={rss_mb} MB, VMS={v",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11099:814,simpl,simple,814,https://root.cern,https://github.com/root-project/root/issues/11099,1,['simpl'],['simple']
Usability,"- [X] Checked for duplicates. ### Describe the bug; When ROOT is configured with `-Druntime_cxxmodules:BOOL=OFF`, then deprecation warnings (from `[[deprecated]]`) are not shown in the Cling interpreter. ### Expected behavior; * Either warnings should be shown in `-Druntime_cxxmodules:BOOL=OFF` configurations; * Or the behaviour should be documented in a clear and concise way. ### To Reproduce. With `-Druntime_cxxmodules:BOOL=OFF`:; ```console; $ cat foo.C; [[deprecated]] void foo() { }; $ root -q -l foo.C. Processing foo.C...; $; ```. With `-Druntime_cxxmodules:BOOL=ON`:; ```console; $ cat foo.C; [[deprecated]] void foo() { }; $ root.exe -q -l foo.C. Processing foo.C...; input_line_9:2:2: warning: 'foo' is deprecated [-Wdeprecated-declarations]; foo() /* '.x' tries to invoke a function with the same name as the macro */; ^; /tmp/foo.C:1:3: note: 'foo' has been explicitly marked deprecated here; [[deprecated]] void foo() { }; ^; ```. ### Setup. 1. ROOT version: 6.22.08 and 6.24.06; 2. Linux (Debian-10 for me, other OS for others); 3. Built from source using private spack rules, built straight from source. ### Additional context; See discussion on the ""Cling"" Channel in Mattermost. cc: @dennisklein",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9815:357,clear,clear,357,https://root.cern,https://github.com/root-project/root/issues/9815,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. When plotting to SVG file the way; ```c++; hist->Draw();; gPad->Print(""hist.svg"");; ```. The produced SVG file is occasionally broken due to the newline character being inserted to the middle of the closing XML tag. The error might be caused by certain kind of 250-character-per-line limit. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The newline should be inserted somewhere before the closing XML tag. Please don't remove all the new lines just to workaround this bug. It is great to have readable SVG outputs. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. Prepare the reproduction code; `Reproduce.C`; ```c++; #include<TCanvas.h>; #include<TPad.h>; #include<TFile.h>; #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {; TCanvas::MakeDefCanvas();; TFile *tfIn = TFile::Open(pathFileIn);; TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));; hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");; hpxLongTitle->Draw();; gPad->Print(""hpxLongTitle.svg"");; tfIn->Close();; }. int main(int argc, char* argv[]) {; if ( argc > 1 ) {; Reproduce(argv[1]);; } else {; Reproduce();; }; }",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9514:705,clear,clear,705,https://root.cern,https://github.com/root-project/root/issues/9514,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. A reproducer:. ```python; import ROOT; print(ROOT.gSystem.GetIncludePath()); ROOT.vector('int')(); print(ROOT.gSystem.GetIncludePath()); ```. prints . ```; -I$ROOTSYS/include -I""/home/eguiraud/ROOT/install_dbg_includepaths/etc/"" -I""/home/eguiraud/ROOT/install_dbg_includepaths/etc//cling"" -I""/home/eguiraud/ROOT/install_dbg_includepaths/include/"" -I""/usr/include/python2.7""; -I$ROOTSYS/include -I""/home/eguiraud/ROOT/install_dbg_includepaths/etc/"" -I""/home/eguiraud/ROOT/install_dbg_includepaths/etc//cling"" -I""/home/eguiraud/ROOT/install_dbg_includepaths/include/"" -I""/usr/include/python2.7"" -I""/home/eguiraud/ROOT/build_dbg_includepaths/include""; ```. Note that the second line contains ` -I""/home/eguiraud/ROOT/build_dbg_includepaths/include""`, which wasn't there before a `ROOT.vector` was instantiated. That's problematic because the user might not have permissions to access the build directory (while it can access the install directory) leading to cling errors. This is with ROOT master@028fcca0fa , compiling ROOT with `cmake -DCMAKE_BUILD_TYPE=Debug -Dccache=ON -Ddev=ON -Droofit=OFF -Dtmva=OFF -Dtesting=ON -Droottest=ON ../root`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7108,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. As far as I understand, this should work:. ```cpp; #ifndef TWOINTS; #define TWOINTS; struct TwoInts {; int a, b;; };; #endif; ```. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TError.h>; #include <TInterpreter.h>; #include <TKey.h>. #include ""TwoInts.h"". int main() {; gInterpreter->GenerateDictionary(""TwoInts;ROOT::VecOps::RVec<TwoInts>"",; ""ROOT/RVec.hxx;TwoInts.h"");. TFile f(""f.root"", ""recreate"");; auto *cl = TClass::GetClass(""ROOT::VecOps::RVec<TwoInts>"");; R__ASSERT(cl != nullptr);; ROOT::RVec<TwoInts> v{{1, 2}, {3, 4}};; f.WriteObjectAny(&v, cl, ""v"");; f.Close();; TFile in_f(""f.root"");; auto *k = in_f.GetKey(""v"");; auto *obj = static_cast<ROOT::RVec<TwoInts> *>(k->ReadObjectAny(cl));; R__ASSERT(obj != nullptr);; auto &in_v = *obj;; R__ASSERT(in_v[0].a == 1 && in_v[0].b == 2 && in_v[1].a == 3 &&; in_v[1].b == 4);. return 0;; }; ```. But instead produces:. ```; g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs); ~/S/w/rootcling_rvec ./repro; /home/blue/Scratchpad/work/rootcling_rvec/AutoDict_TwoInts_2251615068_cxx_ACLiC_dict.cxx:55:61: error: expected ‘)’ before ‘::’ token; 55 | static TGenericClassInfo *GenerateInitInstanceLocal(const ::*); | ~ ^~~; | ); ```. because the autogenerated dictionary code is broken (see the invalid `(const ::*)`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master @ 9f1902c1 .; I would not even attempt this with v6.24 or earlier because ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7708:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7708,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures.; There are various possible failure modes -- the command above typically results in these kind of errors:. ```; 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+...; 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so; 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0); 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value; 1369: collect2: error: ld returned 1 exit status; 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7366:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7366,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context; <!--; Add any other context about the problem here.; -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7377:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7377,2,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Compiling ROOT with Python 3.9 produces a large number of deprecation warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8128:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/8128,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The exit status of `root --help` is 1, not 0. The [exit status](https://en.wikipedia.org/wiki/Exit_status) usually indicates whether the process is successful or not. Zero means success, and non-zero values suggests an error. It doesn't affect any of the functionality, but a package maintainer who tests the build with `root --help` would be surprised by the nonzero exit status. Is this behavior a design decision, or does it imply some check failures?. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root --help` exits with exit status 0. ### To Reproduce; 1. In a Bourn-like shell, run; ```sh; root --help; echo ""Exit status: $?""; ```. ```console; $ root --help; echo ""Exit status: $?"". usage: root; [-b B]; [-x X]; [-e E]; [-n N]; [-t T]; [-q Q]; [-l L]; [-a A]; [-config CONFIG]; [-h HELP]; [--version VERSION]; [--notebook NOTEBOOK]; [--web WEB]; [--web=<browser> WEB=<BROWSER>]; [dir]; [file:data.root]; [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show the ROOT banner; -a Show the ROOT splash screen; -config print ./configure options; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11977:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11977,2,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The following snippet causes a nullptr dereference (or a corresponding assertion failure in debug builds):. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main() {; auto df = ROOT::RDataFrame(10000);; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto colNames = df.GetColumnNames();; auto c = df.Count();; auto n1 = df.Snapshot(""Events"", ""A.root"", colNames, opts);; std::cout << c.GetValue() << std::endl;. return 0;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7547:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7547,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The problem and steps to reproduce it are described [in this forum post](https://root-forum.cern.ch/t/trouble-installing-root-w-python3/43694/11).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7311:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7311,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The symptom is the following:. ```; /usr/bin/mkdir -p /data/ssdext4/rdf_scaling/relwithdebinfo@master/include/libAfterImage; installing libAfterImage headers using command -; ""-m 644 <header> /data/ssdext4/rdf_scaling/relwithdebinfo@master/include/libAfterImage"" :; afterimage.h afterbase.h ascmap.h asfont.h asim_afterbase.h asimage.h asimagexml.h asstorage.h asvisual.h blender.h bmp.h char2uni.h draw.h export.h imencdec.h import.h pixmap.h scanline.h transform.h ungif.h xcf.h ximage.h xpm.h xwrap.h. /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: Command not found; /bin/sh: line 2: -m: c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7786:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7786,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. This runs fine:; ```; $ root --foobarbaz; ```; Virtually all unix command line tools error out if an invalid option is passed. It's surprising that `root` does not and can lead to problems:. ```; $ root --batch; ```; does _not_ start `root` in batch mode, because there is no long spelling for `-b`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root --nonexistingoption` should error out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8850:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/8850,2,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Weird/wrong results printed when converting different entities to `bool`:. 1.; ```; root [0] int foo = 42; (int) 42; root [1] (bool)foo; (bool) true; root [2] bool(foo); (bool) false; ```. 2.; ```; root [0] const char *foo = ""asda""; (const char *) ""asda""; root [1] !foo; (bool) false; root [2] bool(foo); (bool) false; root [3] bool(foo[0]); (bool ([0]) @0x55c4ba66f180; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8304:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/8304,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7345:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7345,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. `GetLeaf(branchname, leafname)` seems to ignore the `branchname` argument if friend trees are present -- or in any case, it returns a non-null pointer even for a bogus `branchname` argument, but only if friend trees are present. Note that depending on the situation this might result in wrong data being read. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `GetLeaf(branchname, leafname)` should return the same pointer whether a friend tree is present or not. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```cpp; #include <TFile.h>; #include <TTree.h>; #include <iostream>. int main() {; {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; int x = 42;; t.Branch(""x"", &x);; t.Fill();; t.Write();; }. TFile f(""f.root"");; auto *t = f.Get<TTree>(""t"");; std::cout << t->GetLeaf(""asdklj"", ""x"") << '\n'; // prints 0 as expected. TFile f2(""f.root"");; auto *t2 = f2.Get<TTree>(""t"");; t->AddFriend(t2);; std::cout << t->GetLeaf(""asdklj"", ""x"") << '\n'; // prints the address of leaf `x`, unexpected. return 0;; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. I am using master@a7cceb7478e . ### Additional context; <!--; Add any other context about",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6964:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/6964,2,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; C++ class members can be initialized in PyROOT through a constructor but it seems not working through object properties. See details and reproducer in [the forum](https://root-forum.cern.ch/t/problem-initialising-c-class-members-from-pyroot/43970). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It should be possible to initialize class members through object properties. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; See [forum post]([the forum](https://root-forum.cern.ch/t/problem-initialising-c-class-members-from-pyroot/43970).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7501:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7501,2,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile and run the following macro with `root -l -b -q T.C+`:; ```C++; #include <vector>; #include ""TTree.h"". #pragma link C++ class A;; #pragma link C++ class B+;; #pragma link C++ class std::vector<B>+;. struct A {; int x;; ClassDef(A, 1);; };; ClassImp(A);. struct B : A {; int y;; ClassDef(B, 1);; };; ClassImp(B);. void T() {; TTree* tree = new TTree(""T"", ""T"");; std::vector<B> bvec;; tree->Branch(""B"", &bvec);; }; ```; Macro aborts with the error: ; ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.22.08 (built myself), 6.26.00 (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10240:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10240,2,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Everytime I call fitTo there seems to be various roofit objects that are created and are not cleaned after every iteration. I cannot get RooTrace::dump() to output anything but I am able to use RooTrace::printObjectCounts() to output the object counts. It seems fitTo creates a bunch of RooAbsCollection objects that are not cleaned which starts to consume all the memory. I can see the resident memory usage go up when looking at the top command. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Well, ideally, I hope that I would be able to call fitTo all the times I would like. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; I will include it here since it is really short program. ```; void test(){. RooTrace::active(kTRUE);; RooTrace::mark();; RooRealVar x(""x"",""x"",-10,10);; RooDataSet d(""d"",""d"",RooArgSet(x));; RooRealVar s(""s"",""s"",1,1,10);; RooRealVar m(""m"",""m"",0,-10,10);; RooGaussian g(""gauss"",""gauss(x,m,s)"",x,m,s);; RooPlot *f=x.frame();; for (Int_t j=0; j<300; ++j){; x.setVal(gRandom->Gaus(0,1));; d.add(x);; }; for (Int_t i=0; i<10; i++) {; cout << ""\n------------------------------\nStart iteration "" << i << endl;. cout << ""Before fitting"" << endl;; RooTrace::printObjectCounts();. g.fitTo(d,RooFit::PrintLevel(-1));//,RooFit::SumW2Error(tr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6975:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/6975,2,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; ROOT produces a double free error on TGText.Clear() after calling TGText.AsString(). ### Setup; ROOT 6.22/06. ; OS: Linux Debian 10 Buster and Scientific Linux 7; Root is self-built on Debian. Official redhat release is used on Scientific Linux. <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; The problem can be traced to ```gui/gui/src/TGText.cxx:1250``` in ```TGText::AsString()```:. ```; char *txt = travel->GetText();; ret += txt;; delete [] txt;; ```. txt is deleted, however it points at the text buffer to a line as returned by TGTextLine::GetText(). That there is an override, TGTextLine::GetText(Ulong_t, Ulong_t), that does return an allocated string that needs to be deleted bu the caller. To fix the problem, only the 'delete' line needs to be deleted, but it's not good to have two methods with the same name that have different allocation behaviors on the return values. Another possible fix would be to have TGTextLine::GetText() also allocate a new string for its return value. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7460:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7460,2,"['Clear', 'clear']","['Clear', 'clear']"
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When `TBrowser` is opened, all the child items (files and folders) of the super-directories will be shown. This cause it to get stuck when one of them contains a huge amount of files and directories. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `TBrowser` is opened smoothly without being overwhelmed by the upstream folders. Possible solutions include:; * Provide an option not to follow the symlink; * Provide an option to specify the number of super-directory to show. These solution would require changes of User Interface or even the TBrowser API, but it might be useful when moving the files to somewhere with thinner directory tree is inconvenient/impossible. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Easy:. 1. `cd` into a temporary directory (`/dev/shm` would be convenient); 2. ```bash; mkdir testdir; cd testdir; for i in {1..100000}; do mkdir $i; done; cd 50000; cp /path/to/root/tutorial/hsimple.root .; root; ```; 3. Inside the ROOT interpreter,; ```ROOT; TBrowser tb; ```. Practical:; 1. Install [Nix package manager](https://nixos.org/) by executing the installation script, by setting up a NixOS, or by using the docker image.; 2. Fill `/nix/store` with packages by installing packages, `nix-shell` or `nix-build`; 2. Install ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7213:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7213,2,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When building with native LLVM (with CMake flag `-Dbuiltin_llvm=OFF`) with Nix and Nixpkgs, the builder tries to place `lib/cmake/cling/ClingConfig.cmake.tmp` under the read-only `/path/to/native/llvm/lib/`, and gets System Error. Not sure if this issue is reproducible on other platforms. Partial command line output:; ```; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0:/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/x86_64-unknown-linux-gnu:/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/backward' at runtime.; -- And then fallback to: 'g++'; CMake Error: Could not open file for write in copy operation //nix/store/vqlvh9dv2prsrmk6lng8n66wgfpvra1j-llvm-13.0.1-lib/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. Possible source of the issue:; https://github.com/root-project/root/blob/master/interpreter/cling/cmake/modules/CMakeLists.txt#L4-L5. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; 1. The configurations works, just as it does on the 6.26 branch.; 2. If not feasible, the",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11920,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When calling the `TH1::GetCumulative()` method, it should generate a cumulative histogram and with its error (`fSumw2`) set, and should not change the original histogram. However, it turns out that it doesn't set the error for the new histogram, but (incorrectly) modify the bin error of the original histogram into the value that should have been assigned to the generated histogram. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The `TH1::GetCumulative()` method generates the corresponding cumulative histogram with `fSumw2` set (when the original histogram has its `fSumw2` set) while keeping the original histogram intact. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; In the ROOT interactive prompt,; ```; root [0] TH1 *h1 = new TH1D(""h1"", ""h1"", 8, 0., 8.);; root [1] for (int i=0; i<8; ++i) h1->Fill(0.5 + i, 0.5);; root [2] for (int i=0; i<8; ++i) h1->Fill(0.5 + i, 0.5);; root [3] h1->GetBinError(1); (double) 0.70710678; root [4] h1->GetBinError(2); (double) 0.70710678; root [5] sqrt(2) / 2; (double) 0.70710678; root [6] TH1 *h1Cumu = h1->GetCumulative(false);; root [7] h1Cumu->GetBinError(1); (double) 0.0000000; root [8] h1Cumu->GetBinError(2); (double) 0.0000000; root [9] h1->GetBinError(1); (double) 2.0000000; root [10] h1->GetBinErro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11947:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11947,2,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When running an RDataFrame-based analysis macro with ~1000 histogram outputs (each of them has 20000 bins) on a 8-core laptop (16 logical processors), `EnableImplicitMT()` cause ROOT to use up the 32GB RAM and ~30GB swap space. This sometimes causes segmentation violation. Workaround: Drop the line `EnableImplicitMT()`. Related issue: #6676 . ### Expected behavior; Get a way to reduce/restrict the RAM usage of RDataFrame when `EnableImplicitMT()`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version: 6.25/01 built against revision 24ea49d4702ba0aa9b1ea5521950520154ee151c from the master branch; ```console; $ root --version; ROOT Version: 6.25/01; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; ```; 2. Operating system: NixOS, x86_64-linux; ```console; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.10.67, NixOS, 21.05.20210922.83413f4 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210908_3c56f62`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; ```; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; Custom build from source with the Nix package manager. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9087:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/9087,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch.; After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:; ```; JUPYTER_PATH=ROOTSYS/etc/notebook; JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook; ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The correct environment variables would be; ```; JUPYTER_PATH=/usr/local/etc/root/notebook; JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook; ```; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; 1. Build and install `latest-stable` branch; 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51; 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`; 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: 6.24/00; 2. Operating system: openSUSE Tumbleweed -- release: 20210606; 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b45",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8435:925,clear,clear,925,https://root.cern,https://github.com/root-project/root/issues/8435,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; If attempting to create multiple snapshots simultaneously of some RDF's children nodes, ROOT crashes. This follows up on a discussion in the thread here:; https://root-forum.cern.ch/t/snapshot-shuffles-data-invisibly-with-implicitmt/43473/8?u=nmangane. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Expect that one event loop can be triggered with different nodes (downstream of filters, whether or not they produce exclusive sets of events) writing output to unique files via Snapshot. Without this capability, have to fall back to multiple event loops over extensive amounts of data to separate them into different files, which is not really expected. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; embedded in python script here; I first saw this issue in a more pythonic script (e.g. snapshot options set via cppyy rather than doing everything in the intepreter); ```; import ROOT; ROOT.gInterpreter.ProcessLine(""""""; ROOT::EnableImplicitMT(8);; auto df = ROOT::RDataFrame(10000).Define(""x"", ""rdfentry_"").Define(""y"", ""fabs(rdfentry_ - 5000)"").Define(""z"", ""rdfslot_"");; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto colNames = df.GetColumnNames();; auto c = df.Count();; auto n1 = df.Filter(""x > 2000 && y < 0"").Snapshot(""Events"", ""A.root"", colNames, opts);; auto n4 = df.Filter(""z < 3 && y >= 0"").Snapshot(""Event",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7500:667,clear,clear,667,https://root.cern,https://github.com/root-project/root/issues/7500,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior; The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00.; ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce; * Create any workspace file with ROOT 5.34, eg.; ```; % root -b; ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc); root [0] RooWorkspace w(""w"");; root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");; root [4] w.writeToFile(""simplest-53432.root"");; ```; * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:; * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_ba",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7276:944,simpl,simplest-,944,https://root.cern,https://github.com/root-project/root/issues/7276,1,['simpl'],['simplest-']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; `Redefine()` is a new method added on the master branch to allow re-definition to an existing column. However, segmentation violation occurs when trying to redefine a defined column. ### Expected behavior; Defined columns are re-definable. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Generate a file containing a simple tree containing a `std::vector<Float_t>` branch:. `gen_tree.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>. #include <vector>; #include <string>; #include <cstdlib>; #include <iostream>. void gen_tree(const std::string pathFile = ""file_float_vector.root"") {; 	TFile *tfOut = TFile::Open(pathFile.c_str(), ""RECREATE"");; 	tfOut->cd();; 	TTree *ttOut = new TTree(""Events"", ""Tree of float vectors"");; 	std::vector<Float_t> vTest(8);; 	vTest.clear();; 	ttOut->Branch(""TestVar"", &vTest);; 	constexpr size_t nEntries = 100;; 	for (size_t jEntry = 0; jEntry < nEntries; ++jEntry) {; 		const Float_t var0 = rand() / static_cast<Float_t>(RAND_MAX);; 		const size_t nVar = rand() % 8;; 		std::cerr << ""jEntry: "" << jEntry << ""\tnVar: "" << nVar << ""\tvar0: "" << var0 << std::endl;; 		vTest.resize(nVar, 0.);; 		for (size_t iVar = 0; iVar < nVar; ++iVar) {; 			vTest[iVar] = var0 + 0.125 * iVar;; 			std::cerr << vTest[iVar] << "" "" << std::flush;; 		}; 		std::cerr << std::endl;; 		ttOut->Fill();; 	}; 	ttOut->Write();; 	t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8857:938,simpl,simple,938,https://root.cern,https://github.com/root-project/root/issues/8857,1,['simpl'],['simple']
Usability,"- [X] Checked for duplicates; None found. ### Describe the bug; Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in; ```; clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int); ```; See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) .; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; A successful build ;-) .; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; LCG nightlies (lcgcmake). Did not try yet in standalone.; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT master; 2. Operating system: centos7, centos8; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context; None for the moment",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594:475,clear,clear,475,https://root.cern,https://github.com/root-project/root/issues/9594,2,['clear'],['clear']
Usability,"- [check ] Checked for duplicates; ### Describe the bug. With regard to the file; **interpreter/CMakeLists.txt**; commit 408de13e131818a3620ce44a7341892f4bdfc420; moved the line ; `get_directory_property(LLVM_DEFS DIRECTORY llvm/src COMPILE_DEFINITIONS)`; from inside; `if (builtin_llvm)`; to inside; `if (builtin_cling)`. Error looks like: . CMake Error at interpreter/CMakeLists.txt:452 (get_directory_property):; get_directory_property DIRECTORY argument provided but requested directory; not found. This could be because the directory argument was invalid or, it; is valid but has not been processed yet. ### Expected behavior; The previous method of handling this was to simply skip this procedure. The compile flags from the external LLVM would not be appended to CLING compile flags. The new logic always checks for this dir even if llvm is external. As a result, it no longer works with my external LLVM, which doesn't have a copy of the /src directory in its installation dir. My build system removes the source trees and build dirs to save space on disk. LLVM install dir does contain cmakefiles under lib/cmake/ and those were used to identify it correctly. . ### To Reproduce. ### Setup; obtained root from https://root.cern.ch/download/root_v6.24.00.source.tar.gz. ### Additional context; I am building with cmake and I have builtin_llvm OFF but builtin_cling ON because the internet told me I am not allowed to use my own cling, I have to use the one with root-patches. I am trying very hard to not use the builtin_llvm because it clashes with the other builds on my system so root either fails to build or just crashes, depending on the version. I am an easybuilder and if I can get this to work, lots of other easybuilders will be able to replicate my procedure and build ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8141:676,simpl,simply,676,https://root.cern,https://github.com/root-project/root/issues/8141,1,['simpl'],['simply']
Usability,"- [x ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--. -->; segfault in build process. ; ### Expected behavior; <!--; -->; build process completes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; standard cmake build process, as described in the guide. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6-26-10 (@4dddea35); FreeBSD 13.2 RELEASE (clang 14.0.5), required dependencies installed from ports. ### Additional context; <!--; Add any other context about the problem here.; -->. a port exists v6-28-02 (development/root), installs in binary form (so somebody got it to compile, did not have too much time to test it thoroughly). In my case, however, the port also does not compile, craps out somewhere else. plus it hauls in too many dependencies so it is less than ideal.; I imagine getting it to work on FreeBSD would not end at fixing this issue here. The fbsd port maintainer has some patches which might help, but I have also seen that e.g. procfs is deprecated in new releases and libprocstat has to be used, etc, etc.; With that being said, it would be extremely nice to get ROOT to work on FreeBSD...; thanks,. ```; [ 52%] Built target rootcling_stage1; [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x000000000446e3d5 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x000000000446c6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12787:816,guid,guide,816,https://root.cern,https://github.com/root-project/root/issues/12787,1,['guid'],['guide']
Usability,"- [x ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `sudo root --notebook --log-level 10 --allow-root` works; `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds.; There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:; `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`; and noticed that the kernel freezes on line 57:; `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT Version: 6.22/02; 2. arch linux; 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6608:392,clear,clear,392,https://root.cern,https://github.com/root-project/root/issues/6608,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633:177,undo,undocumented,177,https://root.cern,https://github.com/root-project/root/issues/8633,1,['undo'],['undocumented']
Usability,"- [x] Checked for duplicates. ### Describe the bug. SOFIE-converted models written out as `.hxx` header files do not have include guards. This causes problems when potentially loading the same model more than once, e.g. when creating several RDF graphs to process different samples in the same process.; While it is easy to add header guards manually (passing `#ifndef ...\n#define...\n#include...\n#endif` to `gInterpreter.Declare`), it would more user-friendly if they were directly included in the generated headers. ### To Reproduce; E.g. in [this tutorial](https://root.cern.ch/doc/master/TMVA__SOFIE__RDataFrame_8py.html), run `ROOT.gInterpreter.Declare('#include ""' + generatedFile + '""')` twice. ### Setup. 1. ROOT version: `master`; 2. Operating system: CentOS7; 3. How you obtained ROOT: LCG dev3 nightly. ### Additional context. I'm happy to try to make a PR with a fix if you think it makes sense.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10586:449,user-friendly,user-friendly,449,https://root.cern,https://github.com/root-project/root/issues/10586,1,['user-friendly'],['user-friendly']
Usability,"- [x] Checked for duplicates. ### Describe the bug. Supplying invalid values (np.nan) to TGraph does not warn me of invalid data, and the TGraph collapses into a single line. The same thing happens for TGraphErrors as well. For a user such as myself, it takes time to figure out what is going on. I've had many problems with ROOT not drawing something, so it took quite a lot of debugging to figure out the problem was the data this time. It would improve user experience and save time for end users. ### Expected behavior. Warning or exception should be raised. Optionally, an empty graph can be drawn. . ### To Reproduce; Reproducible code with a bug (with np.nan values):; ```; import ROOT; canvas = ROOT.TCanvas(f""test_canvas"", ""title"", 400, 400); canvas.Draw(); canvas.cd(). num_values = 5; g = ROOT.TGraph(num_values, ; np.arange(num_values, dtype='float'), ; np.full(num_values, fill_value=np.nan)); g.SetMarkerSize(2); g.SetMarkerStyle(2); g.DrawClone('AP'); ```; ![image](https://user-images.githubusercontent.com/22337362/218409911-59aa5edb-e2d2-4410-b3e9-0159b3750721.png). Reproducible code **without** a bug (with valid y-axis values):; ```; import ROOT; canvas = ROOT.TCanvas(f""test_canvas"", ""title"", 400, 400); canvas.Draw(); canvas.cd(). num_values = 5; g = ROOT.TGraph(num_values, ; np.arange(num_values, dtype='float'), ; np.arange(num_values, dtype='float')); g.SetMarkerSize(2); g.SetMarkerStyle(2); g.DrawClone('AP'); ```; ![image](https://user-images.githubusercontent.com/22337362/218409848-d88d2b5d-c4f6-4e0c-b02d-cb4a74bc49f0.png). <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; Using ROOT inside SWAN. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12296:456,user experience,user experience,456,https://root.cern,https://github.com/root-project/root/issues/12296,1,['user experience'],['user experience']
Usability,"- [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manuall",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797:347,clear,clearly,347,https://root.cern,https://github.com/root-project/root/issues/11797,1,['clear'],['clearly']
Usability,"- [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:; ```cpp; // sink is destroyed before model; auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; {; RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());; sink.Create(*model.get());; // uncomment to run successfully; // model = nullptr; ; } ; ```; ```; pure virtual method called; terminate called without an active exception; Aborted (core dumped); ```; The following sequence is seemingly to blame (worked out with @jblomer):; 1. The model owns fields; 2. On `sink.Create()`, these fields get their columns connected to the page sink ; 3. The columns get their pages allocated from the page sink; 4. On destruction, the columns ask the page sink to help the free the pages; 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: ; https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; ROOT master. ### Additional context; This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8581:1176,clear,clear,1176,https://root.cern,https://github.com/root-project/root/issues/8581,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; It is possible to construct a TChain that reads the same tree from the same file twice. It appears that if I create a TEntryList for said chain, it will only read the entries the first time, while the second read of the same file will be ignored. Let's create a file with a tree and 20 entries. Something like this is enough; ```python; ROOT.RDataFrame(20).Define(""x"",""rdfentry_"").Snapshot(""entries"",""file_20entries_1.root""); ```. Then the following snippet; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TChain.h>; #include <TEntryList.h>; #include <iostream>. int main(){; auto start_1{0};; auto start_2{0};; auto end_1{20};; auto end_2{10};. TEntryList elists;; TEntryList elist1{""e"",""e"",""entries"",""file_20entries_1.root""};; TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. for(auto entry = start_1; entry < end_1; entry++){; elist1.Enter(entry);; }. for(auto entry = start_2; entry < end_2; entry++){; elist2.Enter(entry);; }. elists.Add(&elist1);; elists.Add(&elist2);. TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";; }; ```; Will output the following; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles ; 20; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with; ```diff; - TEntryList e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8505:60,clear,clear,60,https://root.cern,https://github.com/root-project/root/issues/8505,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates. ### Describe the bug; Attached ([HCAL_Chimney_Sector_Half_Plate.gdml.gz](https://github.com/root-project/root/files/10095037/HCAL_Chimney_Sector_Half_Plate.gdml.gz)) is a relatively simple GDML file (6280 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. ### Expected behavior; ROOT should not report an overlap. Geant4 does not report an overlap, and visualizes the volumes this way (demonstrating they are not overlapping):; ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce; - `TGeoManager* myGeo = new TGeoManager();`; - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`; - `myGeo->CheckOverlaps()`; - `myGeo->PrintOverlaps()`. ```; 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l ; root [0] TGeoManager* myGeo = new TGeoManager();; root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""); Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2; Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; (TGeoManager *) 0x556b33e2bc60; root [2] myGeo->CheckOverlaps(); Info in <TGeoNodeMatri",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11781:212,simpl,simple,212,https://root.cern,https://github.com/root-project/root/issues/11781,1,['simpl'],['simple']
Usability,"- [x] Checked for duplicates. ### Describe the bug; Attached ([overlap_issue.gdml.gz](https://github.com/root-project/root/files/10097172/overlap_issue.gdml.gz)) is a relatively simple GDML file (6844 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. (This is similar to #11781, but this time there is no explanation due to incorrect default units.). ### Expected behavior; There should be no overlap reported. Drawing the overlap (last line in reproduce commands below) shows the two tessellated objects without overlap:; ![image](https://user-images.githubusercontent.com/4656391/204112181-59b9798d-ca48-4426-9ab8-734e11f895d0.png). ### To Reproduce; ```console; auto* geo = TGeoManager::Import(""overlap_issue.gdml""); geo->CheckOverlaps(); geo->PrintOverlaps(); auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(); auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(); auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(); auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(); TGeoChecker ch(geo); overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1); overlap->Print(); overlap->Draw(); ```; which produces:; ```console; 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l ; root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""); Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material; Warning in <TGeoManager::CheckGeometry>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11784:178,simpl,simple,178,https://root.cern,https://github.com/root-project/root/issues/11784,1,['simpl'],['simple']
Usability,"- [x] Checked for duplicates. ### Describe the bug; In TMVA documentation at ; https://root.cern/doc/master/group__TMVA.html; there is a link ""The full description of the Multi Variate Analysis package"", which leads to ; http://tmva.sourceforge.net/. On that site it's written: ""In 2013, TMVA was completely integrated into ROOT and is now released as part of it. The new official home can be found at the ROOT website (here). "", where the link ""here"" leads to; https://root.cern/tmva/; which doesn't exist. The same link is in TMVA's sourceforge page as ""Project Page"". Also I note that in the [TMVA Reference guide](https://root.cern/doc/master/group__TMVA.html) there are links to ; The TMVA Users Guide.; The TMVA Options Reference,; that all lead to sourceforge.net (and they are both broken). Probably they should be moved to root.cern?. ### Expected behavior; If the sourceforge link should be deleted, remove that. If it is relevant, then please fix the link to root.cern there or the page at root.cern/tmva .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7627:611,guid,guide,611,https://root.cern,https://github.com/root-project/root/issues/7627,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"- [x] Checked for duplicates. ### Describe the bug; In the ROOT prompt, `.?` prints a slightly outdated help message. Both the Cling-specific part (MetaSema) and the ROOT-specific special commands (TApplication) need revision. ### Expected behavior; All options are documented, and outdated ones are removed. - [x] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md; - [x] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md; - [x] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb; - [x] .![shell]; - [x] .qqqqq; - [x] "" "" << metaString << ""R [user@]host[:dir] [-l user] [-d dbg] [script]\t- Launch process in a remote host\n""; - [x] "" "" << metaString << ""demo\t- Launch GUI demo\n""; - [x] "" "" << metaString << ""credits\t- Show credits\n""; - [x] "" "" << metaString << ""license\t- Show license\n""; - [x] CTRL+D also works as a way to exit; - [x] CTRL+C can interrupt; - [x] CTRL+Z pauses job; - [x] CTRL+L clear screen; - [x] CTRL+Del Ctrl Left Ctrl Right Ctrol Backspace https://github.com/root-project/root/pull/10091; - [x] CTRL+S for forward search https://github.com/root-project/root/issues/10137; - [x] .exit; - [x] .quit; - [x] .typedef; - [x] .include; - [x] Specify also a new command, e.g. .flags, to show ; - [x] .undo / .U to unload the last n input lines doesn't seem to work; - [x] .O1 to set the optimization level is implemented even if .help says it's not; - [x] Translate 0x1F code etc to key name; - [x] Clarify what .files and .fileEx and .stats mean. ### To Reproduce; `.?`. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10065:1015,pause,pauses,1015,https://root.cern,https://github.com/root-project/root/issues/10065,2,"['clear', 'pause']","['clear', 'pauses']"
Usability,"- [x] Checked for duplicates. ### Describe the bug; We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/).; The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior; Build should succeed with dictionary creation. ### To Reproduce; We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:; https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h; https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h; Both of them derive from base class in athena:; https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup; <!--; 1. ROOT 6.24; 2. CentOS7; 3. CERN LCG builds, gcc8.; -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8387:640,simpl,simple,640,https://root.cern,https://github.com/root-project/root/issues/8387,1,['simpl'],['simple']
Usability,"- [x] Checked for duplicates. ### Describe the bug; When root fails to load the dictionary payload it used to give a clear message that a header file couldn't be included.; ```; In file included from G__DDG4 dictionary payload:445:; In file included from /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/include/DDG4/Geant4Config.h:100:; /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/include/DDG4/Geant4TrackingAction.h:18:10: fatal error: 'G4VUserTrackInformation.hh' file not found; #include ""G4VUserTrackInformation.hh""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:; ```; See full [error.txt](https://github.com/root-project/root/files/5517699/error.txt). But with the root master or 6.22.00, there is only; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload""; ```; In both cases followed by the rest of the ""dictionary payload"", see attached . [error98.txt](https://github.com/root-project/root/files/5517700/error98.txt); [errorDev.txt](https://github.com/root-project/root/files/5517701/errorDev.txt). The solution to the parsing of the paylog in both cases is the same, adding the Geant4 header location to ROOT_INCLUDE_PATH, this is understood. But the message about the missing header file should still be printed, when it cannot be found, shouldn't it?; Running the command with `strace` let's one see that it fails to find the Geant4 headers. ### Expected behavior; Print the ""file not found"" message. ### To Reproduce; This gives the error message, but of course is nothing to see if the problem is solved:; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_98/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```. This is for the environment that still ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:117,clear,clear,117,https://root.cern,https://github.com/root-project/root/issues/6791,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates. ### Describe the bug; Windows running on non utf-8 code page will see scramble text for non-ascii folders and files in the current new html `TBrowser` implementation, and fails selection and opening. Older `TRootBrowser` did not have this issue but does not support 64 bit on windows. ### Expected behavior; TBrowser can see files and folders, select files and folders normally. ### To Reproduce; Used non-ascii windows system (should already have some non-ascii text in filesystem already), install root. ### Setup; 1. ROOT version: 6.26/06; 2. Operating system: Windows; 3. How you obtained ROOT binary: download from cern site. ### Additional context; Should be self explanatory. ### Suggested fix:; A post-build step should fix this on newer windows systems, as this documentation says:; https://learn.microsoft.com/en-us/windows/apps/design/globalizing/use-utf8-code-page. Tested and works on my machine. Related forum topic:; https://root-forum.cern.ch/t/tbrowser-non-ascii-text-scrambles-on-windows/51899",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11519:830,learn,learn,830,https://root.cern,https://github.com/root-project/root/issues/11519,1,['learn'],['learn']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Should build? :). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash; cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core; gh pr checkout 75166; brew install --build-from-source root; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context; <!--; Add any other context about the problem here.; -->. Full error:. ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:31:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:; /Applications/Xcode.app/Contents/Deve",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881:531,clear,clear,531,https://root.cern,https://github.com/root-project/root/issues/7881,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```; TGeoManager::Import(""mother.gdml"");; ```. `mother.gdml`:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">; <define />; <solids>; <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />; </solids>; <structure>; <volume name=""world"">; <physvol>; <file name=""child.gdml"" />; </physvol>; <materialref ref=""world_material"" />; <solidref ref=""world_solid"" />; </volume>; </structure>; <setup name=""Default"" version=""1.0"">; <world ref=""world"" />; </setup>; </gdml>; ```. `child.gdml`:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""; xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">; <define>; <position name=""cube_v0"" unit=""mm"" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9744:799,simpl,simple,799,https://root.cern,https://github.com/root-project/root/issues/9744,1,['simpl'],['simple']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. Trying to compile root 6.24r1 with binutils 2.36 or later fails if `builtin_afterImage=ON` with the following error. ```; CMake Error at .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-RelWithDebInfo.cmake:49 (message):; Command failed: 2. 'make'. See also. .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log; ```. The mentioned logfiles show. ```; ar: libdeps specified more than once; make[5]: *** [libAfterImage.a] Error 1; ```. This is caused by a change to `ar` in [binutils 2.36](https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;a=blob_plain;f=binutils/NEWS;hb=refs/tags/binutils-2_36) so that the ""previously unused modifier l"" now has a meaning. . The fix is quite simple, one can just replace `ar clq` in the AfterImage Makefile with `ar cq`, see for example a similar problem in tightvnc: https://www.mail-archive.com/debian-bugs-dist@lists.debian.org/msg1789948.html. ### Expected behavior. Expected behavior is to compile successfully . ### To Reproduce. You need a system with binutils 2.36 installed (can be easily installed in a local prefix). ### Setup. * Ubuntu 18.04, ; * GCC 10.2,; * ROOT 6.24rc1 from https://github.com/root-project/root/archive/v6-24-00-rc1.tar.gz; * Compilation using `-Dasimage=ON -Dbuiltin_afterimage=ON`. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7558:1101,simpl,simple,1101,https://root.cern,https://github.com/root-project/root/issues/7558,1,['simpl'],['simple']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12755:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12755,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. A seemingly valid usage of TTreeReader with friends causes a segfault because of the dereference of a null `directorTree`:. ```c++; #8 0x00007f58ac8f3cac in GetFriendBranchName (directorTree=0x0, branch=0x561d8a909570, fullBranchName=0x561d8a909589 ""x"") at ../../../root_dbg/tree/treeplayer/src/TBranchProxy.cxx:116; #9 0x00007f58ac8f3fe8 in ROOT::Detail::TBranchProxy::TBranchProxy (this=0x561d8a901cf0, boss=0x561d88ead730, branchname=0x561d8a909589 ""x"", branch=0x561d8a909570, membername=0x7ffdab5e1a89 """") at ../../../root_dbg/tree/treeplayer/src/TBranchProxy.cxx:133; #10 0x00007f58ac999032 in ROOT::Internal::TNamedBranchProxy::TNamedBranchProxy (this=0x561d8a901cf0, boss=0x561d88ead730, branch=0x561d8a909570, fullname=0x7ffdab5e1ae0 ""t2.x"", proxyname=0x561d8a909589 ""x"", membername=0x7ffdab5e1a89 """") at ../../../root_dbg/tree/treeplayer/inc/TTreeReaderUtils.h:52; #11 0x00007f58ac997941 in ROOT::Internal::TTreeReaderValueBase::CreateProxy (this=0x7ffdab5e1da0) at ../../../root_dbg/tree/treeplayer/src/TTreeReaderValue.cxx:644; #12 0x00007f58ac988287 in TTreeReader::SetProxies (this=0x7ffdab5e2070) at ../../../root_dbg/tree/treeplayer/src/TTreeReader.cxx:356; #13 0x00007f58ac98901b in TTreeReader::SetEntryBase (this=0x7ffdab5e2070, entry=0, local=false) at ../../../root_dbg/tree/treeplayer/src/TTreeReader.cxx:609; #14 0x0000561d87cc8858 in TTreeReader::SetEntry (this=0x7ffdab5e2070, entry=0) at /home/eguiraud/ROOT/build_dbg/include/TTreeReader.h:191; #15 0x0000561d87cc8829 in TTreeReader::Next (this=0x7ffdab5e2070) at /hom",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6993:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/6993,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Another incarnation of the ATLAS xAOD EDM overwhelming ROOT is at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```; (gdb) bt; #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6; #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6; #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6; #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6; #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128; #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364; #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051; #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8578:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/8578,2,"['clear', 'learn']","['clear', 'learn']"
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Build master with `builtin_llvm=OFF` using system LLVM. CMake configuration fails with:. ```; -- Using LLVM external library - 13.0.1; -- Clang version: 13.0.1; -- Could NOT find Git (missing: GIT_EXECUTABLE) ; -- Not building amdgpu-arch: hsa-runtime64 not found; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/include/c++/12:/usr/include/x86_64-linux-gnu/c++/12:/usr/include/c++/12/backward' at runtime.; -- And then fallback to: 'ccache'; CMake Error: Could not open file for write in copy operation /usr/lib/llvm-13/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. The error is thrown in [interpreter/cling/cmake/modules/CMakeLists.txt:22-25](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/interpreter/cling/cmake/modules/CMakeLists.txt#L22-L25) when trying to create a file in `cling_cmake_builddir` which is not writable. The bug originates from [interpreter/cling/cmake/modules/CMakeLists.txt:5](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/interpreter/cling/cmake/modules/CMakeLists.txt#L5) and was introduced in 2b283ccf3a624f70dab3e8783d361d25c13e2c65 from #10294. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. I think there are three options to fix this:; - 2b283ccf3a624f70dab3e8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12151:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12151,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Building git master with #12154 on top results in the following build error:. ```; FAILED: core/G__Core.cxx lib/Core.pcm /home/stephan/Projects/ROOT/builddir/core/G__Core.cxx /home/stephan/Projects/ROOT/builddir/lib/Core.pcm ; cd /home/stephan/Projects/ROOT/builddir/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/stephan/Projects/ROOT/builddir/lib: /home/stephan/Projects/ROOT/builddir/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /home/stephan/Projects/ROOT/builddir/lib/libCore.so -excludePath /home/stephan/Projects/ROOT -excludePath /home/stephan/Projects/ROOT/builddir/ginclude -excludePath /home/stephan/Projects/ROOT/builddir/externals -excludePath /home/stephan/Projects/ROOT/builddir/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/x86_64-linux-gnu/c++/12 -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/12/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/12/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/include -I/home/stephan/Projects/ROOT/builddir/include -I/usr/include -I/home/stephan/Projects/ROOT/builddir/ginclude -I/home/stephan/Projects/ROOT/core/base/inc -I/home/stephan/Projects/ROOT/core/base/v7/inc -I/home/stephan/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12156,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Building master (+ fix for #12151) with `builtin_llvm=OFF` results in this build error:. ```; [5940/8663] /usr/lib/ccache/c++ -I""/<<PKGBUILDDIR>>/core/dictgen/res"" -I""/<<PKGBUILDDIR>>/core/dictgen/src"" -I""/<<PKGBUILDDIR>>/core/foundation/res"" -I""/<<PKGBUILDDIR>>/core/clingutils/res"" -I""/<<PKGBUILDDIR>>/core/base/inc"" -I""/<<PKGBUILDDIR>>/core/clib/inc"" -I""/<<PKGBUILDDIR>>/core/meta/inc"" -I""/<<PKGBUILDDIR>>/core/foundation/inc"" -I""/<<PKGBUILDDIR>>/obj-x86_64-linux-gnu/ginclude"" -I""/<<PKGBUILDDIR>>/interpreter/cling/include"" -isystem ""/<<PKGBUILDDIR>>/interpreter/llvm/src/tools/clang/include"" -isystem ""/<<PKGBUILDDIR>>/obj-x86_64-linux-gnu/interpreter/llvm/src/tools/clang/include"" -isystem /usr/lib/llvm-13/include -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fPIC -fvisibility-inlines-hidden -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations -std=c++17 -fno-rtti -MD -MT core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o -MF core/dictgen/CMakeFiles/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12152:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12152,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Creating a distributed RDataFrame with an in-memory-only TTree should not be possible. Currently, this case is untested and the following reproducer triggers a couple of spurious errors:. ```python; from array import array; import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame. tree = ROOT.TTree(""tree"", ""Tree in memory""); x = array(""f"", [0]); tree.Branch(""x"", x, ""x/F""). r = ROOT.TRandomMixMax(). for i in range(100000):; x[0] = r.Gaus(10, 1); tree.Fill(). df = RDataFrame(tree). print(df.Count().GetValue()); ```. The first error is; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Node.py"", line 717, in get_treename; return first_arg.GetUserInfo().At(0).GetName(); ReferenceError: attempt to access a null-pointer; ```; Since the `get_treename` function calls `GetUserInfo()` which is empty in this case. Changing that line to `return first_arg.GetName()` triggers; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Base.py"", line 158, in mapper; for f in current_range.filelist:; TypeError: 'NoneType' object is not iterable; ```; And in this case the name of the tree is correctly retrieved, but the function [build_ranges](https://github.com/root-project/root/blob/bdd8a241d5ce5d2f7d3b5b273a0660d7ed52a517/bindings/experimental/distrdf/python/DistRDF/Node.py#L605) expects the inputfiles to be non-empty, otherwise the ranges will be created as if the constructor called was `RDataFrame(ULong64_t numEntries)` instead. So that's a silent",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7788:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7788,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. First reported [here](https://root-forum.cern.ch/t/tchain-parallel-reading-more-than-1-branch/42348/13).; For this TTree (the file is linked from the forum post):. ```; root [12] DmpMCEvtNtup->Print(""NUD_total_ADC*""); ******************************************************************************; *Tree :DmpMCEvtNtup: DAMPE MC Event nTuple Tree *; *Entries : 30000 : Total = 42024515 bytes File Size = 5331016 *; * : : Tree compression factor = 7.90 *; ******************************************************************************; *Br 0 :NUD_total_ADC : nud_total_adc/D *; *Entries : 30000 : Total Size= 241261 bytes File Size = 7509 *; *Baskets : 8 : Basket Size= 32000 bytes Compression= 32.06 *; *............................................................................*; ```. ```; DmpMCEvtNtup->Draw(""NUD_total_ADC""); ```; works, while; ```; root [13] TTreeReader r(DmpMCEvtNtup);; root [14] TTreeReaderValue<double> rv(r, ""NUD_total_ADC"");; root [15] r.Next(); Error in <TTreeReaderValueBase::GetBranchDataType()>: The branch NUD_total_ADC was created using a leaf list and cannot be represented as a C++ type. Please access one of its siblings using a TTreeReaderArray:; Error in <TTreeReaderValueBase::GetBranchDataType()>: NUD_total_ADC.nud_total_adc; Error in <TTreeReaderValueBase::CreateProxy()>: The branch NUD_total_ADC contains data of type {UNDETERMINED TYPE}, which does not have a dictionary.; (bool) false; ```. does not. `TTreeReader` instead requires the full leaf name:. ```; root [1] TTreeReader r(DmpMCEvtNtup);; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6881:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/6881,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. First reported in the forum [here](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724), `keepGenData` is not sufficient to save generated parameters, despite the claims of the [documentation](https://root.cern.ch/doc/v624/classRooMCStudy.html#aa8654b8fcb5983d834c02489a35c9981). One must *also* specify an *internal* constraint. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `genParDataSet` should contain the values of the parameters used in dataset generation if `keepGenData=True` in `RooMCStudy::generate` (or `::run` or `::generateAndFit`). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:; ```python; import ROOT as r. ws = r.RooWorkspace(""workspace""); x = ws.factory(""x[-10, 10]""); pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""); pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""); pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)); mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(); print(""yes"" if gen_ds else ""no""); ```. This is still the case if an external constraint is used:; ```python; import ROOT as r. ws = r.RooWorkspace(""workspace""); x = ws.factory(""x[-10, 10]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9490:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/9490,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I currently cannot build the master branch due to the fact that the hardcoded SHA256 checksum in /builtins/xrootd/CMakeLists.txt is not the same checksum as the one obtained when downloading the file. There is a mismatch. There is a check that makes the build fail in this case. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The checksum in /builtins/xrootd/CMakeLists.txt is the same as the one obtained from the actually downloaded file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; git clone https://github.com/root-project/root.git; mkdir build; cd build; cmake ../root/ -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON -DCMAKE_IGNORE_PATH=""/home/zef/miniconda3/bin;/home/zef/miniconda3/include;/home/zef/miniconda3/lib"" -Dccache=ON -DPYTHON_EXECUTABLE=""/usr/bin/python3"" -Dbuiltin_fftw3=On; ```. Note that the checksum obtained by `sha256sum xrootd-5.4.2.tar.gz` is: 2b394270c55cb3d14f3c44b692311db99d2d25278882b513d4d564b68a58ed4a. The checksum hardcoded in the CMAKE file is: 84e8a9a2bcad116df479f94e985c287dd99fbac0613d4fbb61f4ccc0cef81fa3. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version: master branch as of now; Opera",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10503:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10503,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I have some data in RDataFrame, and I want to fit them using RooFit. I book a `RooDataSet` using the `RooDataSetHelper` like this; ```cpp; auto data_set = df.Book<double, double>(; RooDataSetHelper(""data_set"", ""title"", RooArgSet(var1, var2)), {""var1"", ""var2""});; ```; The fit is wrong because the `data_set` doesn't respect the limits on `var1` and `var2`, resulting in an incorrect normalization. The only difference in the following simplified fits is that I used; ```cpp; auto data_set = df.Book<double, double>(; ```; for the first one, and ; ```cpp; auto data_set = df.Filter(""var2>2005 && var2<2020"").Book<double, double>(; ```; for the second one. ![all_wrong](https://user-images.githubusercontent.com/23052054/180235896-9f9d8cdb-5804-4567-9f0f-e1279c141777.png); ![all_right](https://user-images.githubusercontent.com/23052054/180235919-42ba997b-7bcb-4462-8b81-eab405454b1d.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expected the RooDataSet to account for the RooRealVar range. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. Get any `RDataFrame`; 2. Create a `RooRealVar` with limits narrower than the corresponding data in the `RDataFrame`; 3. Use `RooDataSetHelper` to book a `RooDataSet` from the `RDataFrame` using the `RooReal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11017:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11017,2,"['clear', 'simpl']","['clear', 'simplified']"
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. In ROOT 6.29 (dev3 LCG nightly slot on cvmfs) RooMomentMorphND cause segmentation fault. . (there is no fault e.g. for ROOT 6.26/04 ( LCG_102 LCG slot on cvmfs); ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. No segmentation faults... . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. My oversimplified script in https://gist.github.com/VanyaBelyaev/2373dae80b24b74d75026420efde8043 . Usage on cvmsf, LCG dev3 nightly slot (ROOT 6.29/01) : . ( source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; python ./tst_morph.py ) . one gets segfaultt . while for LCG_102 slot on cevmfs (ROOT 6.26/04) everything is OK :. ( source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; python ./tst_morph.py ) . ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. - ROOT 6.29/01; - lxplus @ CERN; - LCG dev3 nightly slot ; ; ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12155:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12155,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. My PyROOT scripts uses `RooMomentMorphND` and I am using LCG dev3 nightly build ( ROOT version 6.29/01); Staring this morning it fails to get RooMomentMorphND, reporting . ```. AttributeError: Failed to get attribute RooMomentMorphND from ROOT. ```; . ### Expected behavior. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. LCG dev3 nightly slot at cvmfs . ```; import ROOT ; print ( ROOT.RooMomentMorphND); ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. LCG dev3 nightly slot at cvmfs ( ROOT version 6.29/01). <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12653:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12653,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Some classes are imported in the Python session namespace when wildcard import is used, while others aren't:. ```; vpadulan@fedorathinkpad-T550 [~]: python; Python 3.8.7 (default, Jan 20 2021, 00:00:00) ; [GCC 10.2.1 20201125 (Red Hat 10.2.1-9)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from ROOT import *; >>> RDataFrame; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'RDataFrame' is not defined; >>> TPyDispatcher; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'TPyDispatcher' is not defined; >>> TGHorizontalFrame; <class cppyy.gbl.TGHorizontalFrame at 0x55f59c990900>; >>> RDF; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'RDF' is not defined; >>> TTree; <class cppyy.gbl.TTree at 0x55f59cac9650>; >>> TTreeReader; <class cppyy.gbl.TTreeReader at 0x55f59ce32910>; >>> ; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. We should be able to tell more consistenty which names are available after wildcard import, it is handled [here](https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L153) . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7669:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7669,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Ensure you are using ROOT >= 6.24/00; 1. Ensure you are using CMake >= 3.22.0; 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. Problem verified on 6.24/06 and 6.25/02.; 2. SLF7.; 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context; <!--; Add any other context about the problem here.; -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9583:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/9583,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. `root-config --has-XXX` simply prints `""no""` and returns 0 if `XXX` is not a ROOT feature. This is an unnecessary source of confusion (see e.g. [this forum thread](https://root-forum.cern.ch/t/root-6-22-no-python-support-enabled/44131)), especially when features change name, as it happened with `--has-python` which is now spelled `--has-pyroot`, or in case of spelling mistakes `root-config --has-builtin-cling` prints `""no""` but `root-config --has-builtin_cling` prints `""yes""`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root-config --has-bugs` should print something like `""unknown feature: 'bugs'""` and `root-config` should return non-zero.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7662:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7662,3,"['clear', 'simpl']","['clear', 'simply']"
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; .dot file generated with RooAbsArg::graphVizTree produces an invalid .dot file if the graph title contains spaces. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; RooAbsArg::graphVizTree should produce a valid .dot file even when the names of the elements contain spaces. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ROOT macro, save to graphvizMWE.C and run with `root graphvizMWE.C`:; ```; void graphvizMWE(void){; // Create a simple dependency tree; RooRealVar x{};; RooRealVar sigma{};; RooRealVar mu{};. RooGaussian Gaussian(""my_gaussian"", ""Gaussian"", x, mu, sigma);; RooGaussian GaussianWithSpace(""my gaussian"", ""Gaussian"", x, mu, sigma);. // Create GraphViz trees; Gaussian.graphVizTree(""tree_example.dot"");; GaussianWithSpace.graphVizTree(""tree_example2.dot""); // Produces invalid output; }; ```; Then attempt to convert the produced `.dot` files to images using; `dot -Tpng tree_example.dot -o example1.png # Produces an image`; `dot -Tpng tree_example2.dot -o example2.png # Error!`. The first of these will produce a .png image, the second will fail with a message like: `Error: tree_example2.dot: syntax error in line 1 near 'gaussian'`. Can be fixed by enclosing the graph title in quotes: i.e. changing line 1 of `tree_example2.dot` from; `",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7067:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7067,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I am getting this error when I try to make a cmake project with ROOT:; ```; C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and containe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7982,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I created a 5D binning from some data. The `FindBin` function returns seemingly non-existent bins. What is . ```; In [5]: binning.GetNBins(); Out [5]: 1001; In [6]: binning.FindBin(array.array(""d"", (1.2, 0.5, 0.5, 0.5, 0.5))); Out [6]: 1004; In [7]: binning.GetBinContent(1004); TKDTreeBinning::GetBinContent:0: RuntimeWarning: No such bin. Returning 0.; Info in <TKDTreeBinning::GetBinContent>: 'bin' is between 0 and 1001.; Out [7]: 0; ```; The specified coordinates should be well within the binning range - if I understand the method correctly, the binning range is a hyper-rectangle that envelops all the data points, correct?; ```; In [15]: for i in range(5):; ...: print(f""Dim {i} - min:{binning.GetDataMin(i)}, max: {binning.GetDataMax(i)}""); ...:; Dim 0 - min:0.9872230887413025, max: 1.5643738508224487; Dim 1 - min:0.279508501291275, max: 0.8602268695831299; Dim 2 - min:-0.9999595284461975, max: 0.9999838471412659; Dim 3 - min:-0.9999908804893494, max: 0.9998750686645508; Dim 4 - min:-1.0, max: 1.0000001192092896; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `FindBin()` should return a value within [0, `binning.GetNBins()` - 1]. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; - Download the ROOT file with the binning from [CERNBox",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10784:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10784,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. ; In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off).; The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; void test_roosimcrash() {; RooRealVar x(""x"", """", 0, 1);; RooRealVar rnd(""rnd"", """", 0, 1);; RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);; catThr.addThreshold(1./3, ""v0"", 0);; catThr.addThreshold(2./3, ""v1"", 1);; ; RooRealVar m(""m"", """", 0.5, 0, 1);; RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));; RooUniform rndPdf(""rndPdf"", """", rnd);; RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));; ; auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));; auto cat = dynamic_cast<RooC",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10473:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10473,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have a model containing a `RooRealSumPdf` which wraps a `RooAbsReal` with an analytical integral (I tested with `RooGaussModel` and `RooPolyVar`). One of the parameters of the `RooAbsReal` is a function of the actual fit parameter (a `RooProduct` containing a `RooRealVar` for example).; When using batchmode, in the computation of the integral of the `RooAbsReal` (which is internal to the `RooRealSumPdf`, since it overrides `analyticalIntegralWN`), the value of the transformed parameter is not synced with the changes of the `RooRealVar` it contains, leading to a wrong integral.; Inspecting the `RooFitDriver` contents shows that the dataMap entry corresponding to the transformed parameter has the correct value, it's just the integral which uses the wrong one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Integral uses correct parameters. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testIntegralDesync() {; using namespace RooFit;; RooRealVar x(""x"", """", 0, 1);; ; RooRealVar par(""par"", """", -0.005, -5, 5);; RooProduct par_mod(""par_mod"", """", RooArgSet(par, RooConst(10)));; ; // RooPolyVar fn(""fn"", """", x, RooArgList(RooConst(1), par_mod));; // RooRealSumPdf pdf(""pdf"", """", fn, RooConst(1));; ; RooGaussModel gm(""gm"", """", x, Roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11578:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11578,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The additional datasets also get exported to XML/rootfile/etc.; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue.; It was first discovered in our analysis framework.; [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Both with ROOT 6.20/06 fr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10538:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10538,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; If I call `TH1::GetXaxis()->SetRange`, the Yaxis range automatically adjusts to zoom in on the selected bins. For `THStack::GetXaxis()->SetRange`, however, this is not the case–the Yaxis retains the same range it had before. Originally reported in the [forum](https://root-forum.cern.ch/t/yaxis-range-does-not-adjust-when-zooming-xaxis-of-thstack/42953?u=mwilkins). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `THStack::GetXaxis()->SetRange` should result in a re-zoom of the Yaxis so that the bins in-range are visible. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; See [forum](https://root-forum.cern.ch/t/yaxis-range-does-not-adjust-when-zooming-xaxis-of-thstack/42953?u=mwilkins).; ```python; import ROOT as r; h1 = r.TH1F(""h1"", ""h1"", 100, 0, 100); for i in range(int(1e6)):; h1.Fill(r.gRandom.Gaus(20, 5)); c = r.TCanvas(); h1.Draw() # full range shown; h1.GetXaxis().SetRange(1, 6); c.Update() # Yaxis zooms in to show content in bins 1 to 6; h2 = r.TH1F(""h2"", ""h2"", 100, 0, 100); for i in range(10):; h2.Fill(r.gRandom.Gaus(9, 5)); hs = r.THStack(); hs.Add(h1); hs.Add(h2); hs.Draw() # note Yaxis range; hs.GetXaxis().SetRange(1, 6); c.Update() # Yaxis range has not changed, making it difficult to see the bins; ```. ### Setup; <!--; 1. ROOT v",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6991:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/6991,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; If you pass a dictionary to the `Link` argument in the `RooDataSet` constructor, the pythonization actually tries to call `RooFit::Import`, then fails because `RooFit::Import` has a slightly different signature (`Import` takes a map from to string to either `TH1*`, `RooDataSet*` or `RooDataHist*`, `Link` takes a map from string to `RooAbsData*`). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The pythonization calls the correct `RooCmdArg`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); g = ROOT.RooGaussian('g', '', x, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.2)). data = g.generate({x}, NumEvents = 1000). data_2 = ROOT.RooDataSet('dataLinked', {x}, Link = {'useless': data}); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11496:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11496,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:; <pre>; if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||; (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ); return i; ; </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8641:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/8641,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; In TColor::GetColorTransparent() (see https://root.cern.ch/doc/master/classTColor.html#ae666674d7087b2b709abebde22667c50); a new color is defined each time a transparent color (with alpha channel) is requested. In graphics applications with many transparent objects this leads quickly to exhausting the available index space of colors. At some point the int returned turns negative and the colors displayed are not what they should be. . There does not seem to be a way to reset the entire color space in use by ROOT to simply start over. This would not fix the underlying problem but would at least provide a workaround. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The expected behavior is that transparent colors are re-used like any other color and no new color index is needed when requesting an already used transparent color again. ; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; type ; TColor::GetColorTransparent(1,0.1); repeatedly on the commandline in ROOT. Each time the function is called a higher integer is returned even though the same transparent color is wanted. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: 6.24/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10299:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10299,2,"['clear', 'simpl']","['clear', 'simply']"
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; In a `RooAddPdf`, the coefficients are tied to the normalization range. When passing a range name to the `RooAbsPdf::fitTo` call, this is visible because new integrals will be created over the fit range, to fix the definition of the coefficients. I will refer to these integrals as coefnorm integrals.; In ROOT 6.28, coefnorm integrals for ranged fits of `RooAddPdf`s were changed. This, however, added several integrals that with the old method would not be evaluated. In particular:; - the new implementation is unable to elide coefnorm integrals over ranges equivalents to the full range; - in the new implementation, to every coefnorm integral over the fit range correspond an integral over an empty named range. This is separate to the integral with no range, which is also done; - calling `addPdf.fixAddCoefRange(fit_range)` before the fit (a common solution if you wanted to avoid coefnorm integrals) removes the unnamed range coefnorm integrals, but not the named range ones. Note, however, that in all the test I performed these integral do not seem to affect fit results, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed r",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12645:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12645,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; In the current master, the interpolation that is implemented for code2 and for code3 are exactly the same. Code2: https://root.cern/doc/master/FlexibleInterpVar_8cxx_source.html#l00426; Code3: https://root.cern/doc/master/FlexibleInterpVar_8cxx_source.html#l00440. According to the comment for code3 this interpolation should implement ""a parabolic version of log-normal"" but a parabolic with linear extrapolation is implemented again (as for code2). Another small improvement/clarification (only related to a comment) could be made in this line: https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l00729. It states that a linear extrapolation is used for code4 but looking at the actual code an exponential extrapolation is implemented: https://root.cern/doc/master/FlexibleInterpVar_8cxx_source.html#l00455. The described issues also seem to be present in v6.18, v6.20 and v6.22 (I didn't check older releases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7103:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7103,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:; ```; for (int j = 0; j < 20000; j++) {; hzmodel.Sample(&flux_real[0]);; if(j<10); std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;; ```; output. ```; 1 5.73992 4.99711 4.88; 2 5.73992 4.99711 5.26624; 3 5.72944 4.99459 5.25179; 4 5.34123 4.99459 5.25179; 5 5.34123 4.96792 5.25179; 6 5.34123 4.96792 5.2696; 7 5.26477 4.99232 5.52042; 8 5.59451 4.99232 5.52042; 9 5.59451 5.04631 5.52042; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; By calling `SampleMulti`, all components should be randomized. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; tested on ; ubuntu 20.04 + ROOT v6.26.00 (wget); ubuntu 20.04 + ROOT v6.24.06 (wget); MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context; <!--; Add any other context about the problem here.; -->; N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10222:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10222,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Nested `RooSimultaneous` are flattened into a single `RooSimultaneous` with a `RooSuperCategory` as index. ; When plotting a `RooSimultaneous`, if the index category is derived its servers are searched inside the `ProjWData` set, and if not found the plot becomes a slice in the categories.; However, the only server of a `RooSuperCategory` is the internal `RooMultiCategory`, so in case of a nested `RooSimultaneous` the plot is always a slice.; This is basically https://github.com/root-project/root/issues/12020, except during plots and not generation. The solution is probably the same. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Categories are summed over and not sliced. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1). c1 = ROOT.RooCategory('c1', '', {'c11': 0, 'c12': 1}); c2 = ROOT.RooCategory('c2', '', {'c21': 0}). u = ROOT.RooUniform('u', '', x); g = ROOT.RooGaussian('g', '', x, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.1)); s1 = ROOT.RooSimultaneous('s1', '', {'c11': u, 'c12': g}, c1); s2 = ROOT.RooSimultaneous('s2', '', {'c21': s1}, c2). proto = ROOT.RooDataSet('proto', '', {c1, c2}); c1.setIndex(0); for i in range(50):; proto.add({c1, c2}); c1.setIndex(1); for i i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12652:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12652,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; Python 3.9.6 (default, Sep 6 2021, 15:36:22) ; [GCC 11.1.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> gROOT = ROOT.gROOT; >>> gROOT.ProcessLine('enum Enum { a,b,c }'); 0; >>> ROOT.Enum; <class 'ROOT._facade.Enum'>; >>> ROOT.Enum.a; 0; >>> ROOT.Enum.b; 1; >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'); 0; >>> ROOT.Track.Type.a; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: type object 'int' has no attribute 'a'; >>> ROOT.Enum.a; 0; >>> ; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9246:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/9246,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; ROOT Vc/vector.h and std::chrono both use at least four same names in their namespaces, i.e. floor, ceil, round, and abs. std:: and std::chrono:: are the different name spaces of course, but trying to instantiate an std::chrono::time_point doesn't compile if a compilation unit include's Vc/vector.h header as well (or any that includes it, such as Math/Minimizer.h etc). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It should compile. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Here is an example:. ```; #include ""Vc/vector.h""; #include <chrono>. void foo() {; std::chrono::time_point<std::chrono::system_clock,; std::chrono::nanoseconds> tp;; std::chrono::floor<std::chrono::seconds>(tp);; }; ```; Trying to build; ```; $ c++ $(root-config --cflags) -std=c++17 -c a.cpp ; In file included from a.cpp:1:; In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:; /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T.""; static_assert(std::is_arithmetic<T>::value,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Library",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11934:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11934,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; RooProdPdf can accept the parameter Conditional, which tells RooFit what observables this pdf needs to be normalized on. ; This parameter has two forms:; * pdf, normalization observables, depsAreCond = false (default); * pdf, conditional observables, depsAreCond = true. The two forms are supposed to be identical if {conditional observables} = {all observables} - {normalization observables}.; This is true when not using BatchMode. With BatchMode on (cpu) instead what happens is that depsAreCond is always considered false and the pdf behaves as if conditional observables were normalization. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No difference between the two forms of the RooProdPdf, even when using BatchMode. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```c++; void test_batchmodecond() {; using namespace RooFit;. RooRealVar x(""x"", """", 0, 1);; RooRealVar xErr(""xErr"", """", 0.0001, 0.1);. RooGaussModel gm(""gm"", """", x, RooConst(0), xErr);; ; RooRealVar tau(""tau"", """", 0.4, 0, 1);; RooDecay decayPdf(""decayPdf"", """", x, tau, gm, RooDecay::SingleSided);; ; RooGamma errPdf(""errPdf"", """", xErr, RooConst(4), RooConst(0.005), RooConst(0));; ; ; RooProdPdf pdf1(""pdf1"", """", RooArgSet(errPdf), Conditional(decayPdf, x, false)); // what we want: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11332:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11332,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root 6.26.04 build fails in a Ubuntu 22.04 `pbuilder` sandbox, with the following features enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit webgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_sh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10777,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Running `ROOT::GetImplicitMTPoolSize()` gives the error message; `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`.; Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Start an interactive session of ROOT.; Run `ROOT::GetImplicitMTPoolSize()`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs).; No error in version 6.20/07. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10413:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10413,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Columns of type `double` with values read from the csv file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Run the following macro with `root`; ```; {; std::ofstream outfile;; outfile.open(""./toydata.csv"");; outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";; outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);; auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});; auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});; auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;; df1.Display()->Print();; std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;; df2.Display()->Print();; std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;; df3.Display()->Print();; std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;; df4.Display()->Print();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; *ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12520:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12520,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`; ```cpp; class CustomStruct { ; typedef std::string typedef_string;; typedef_string str;; };. auto classField = RField<CustomStruct>(""field"");; ```; Trying to create this field fails at run time:; ```; C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >; ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) ; [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; ### Setup; ROOT master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):; https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L55",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7861:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7861,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The GL geometry viewer allows ""picking"" the center of view for a drawn geometry. This is not working correctly on Mac.; In a different context: TGeo ray-tracing relies on pixel-to-model coordinates conversion to create rays in the model coordinate system for each viewport pixel and then intersect the model. The ray-traced image on mac shows ""gaps"" (see below) compared to the Linux version, likely due to an unaccounted screen scaling factor. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; In the GL geometry viewer, the tab ""Guides/Camera center"" allows to ""Pick center"" with the mouse, which will change the default center of view to the 2D mouse coordinates of the clicked point on the 3D coordinates of the drawn model. The ""depth"" is chosen such that the point on the drawn object surface below the mouse is picked. For ray-tracing, expect a correct ""solid"" drawing of the drawn volume. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Run the macro `$ROOTSYS/tutorials/geom/rootgeom.C; root[0] gGeoManager->GetVolume(""R"")->Draw(""ogl"");; Rotate the drawn ""R"", then go to tab ""Guides"" and select [Camera center]/Show; A marker should appear in the default center of view.; Now click on ""Pick center"", then click somewhere on the drawn letter ""R""; On l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12035:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12035,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The compilation fails with the following error:; ```; Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap; In file included from input_line_9:58:; In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:; C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence; this issue; mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; static_cast<unsigned long>( ); CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9468:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/9468,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The exception occurs with `pytest` running the test code:; ```python; ============================================================================ FAILURES =============================================================================; _______________________________________________________________ test_data_frame_vec_of_vec_of_real ________________________________________________________________; RuntimeWarning: awkward::ListArray_63uTHafmYE: base class awkward::ArrayView has no streamer or dictionary it will not be saved. The above exception was the direct cause of the following exception:. tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). def test_data_frame_vec_of_vec_of_real(tmp_path):; filename = os.path.join(tmp_path, ""test-listarray.root""); ; ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); ; data_frame = ak.to_rdataframe({""x"": ak_array_in}); ; assert data_frame.GetColumnType(""x"").startswith(""awkward::ListArray_""); ; ak_array_out = ak.from_rdataframe(; data_frame,; columns=(""x"",),; ); assert ak_array_in.to_list() == ak_array_out[""x""].to_list(); ; #with pytest.raises(SystemError):; > data_frame.Snapshot(""ListArray"", filename, (""x"",)); E SystemError: ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initia",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11602:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11602,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The output file of TFileMerger is never deleted, thus all the merging can happen correctly.; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master; Fedora 32; `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`; ### Additional context; <!--; Add any other context about the problem here.; -->; Stack trace of the reproducer; ```; Fill: Switching to new file: filemergerinput_1.root; Fill: Switching to new file: filemergerinpu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6640:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/6640,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341).; 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:; `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`; 3. You can validate the weird behaviour by performing an intermediate conversion:; `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11245:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11245,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When compiling with VecGeom enabled, I get this compile error:; ```; In file included from <builddir>/include/TObject.h:18,; from <builddir>/include/TNamed.h:25,; from <builddir>/include/TDictionary.h:44,; from <builddir>/include/TClass.h:23,; from <builddir>/geom/vecgeom/G__ConverterVG.cxx:14:; <builddir>/include/TStorage.h: In static member function ‘static void TStorage::UpdateIsOnHeap(const volatile UInt_t&, volatile UInt_t&)’:; <builddir>/include/TStorage.h:133:12: warning: compound assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile]; 133 | bits |= kIsOnHeap;; | ~~~~~^~~~~~~~~~~~; <builddir>/include/TStorage.h:135:12: warning: compound assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile]; 135 | bits &= ~kIsOnHeap;; | ~~~~~^~~~~~~~~~~~~; In file included from /usr/include/c++/11/memory:76,; from <builddir>/include/ROOT/TypeTraits.hxx:15,; from <builddir>/include/TString.h:30,; from <builddir>/include/TNamed.h:26,; from <builddir>/include/TDictionary.h:44,; from <builddir>/include/TClass.h:23,; from <builddir>/geom/vecgeom/G__ConverterVG.cxx:14:; /usr/include/c++/11/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<TInterpreterValue>; <template-parameter-2-2> = void; _Tp = TInterpreterValue; _Dp = std::default_delete<TInterpreterValue>; std::nullptr_t = std::nullptr_t]’:; <builddir>/include/TInterpreter.h:280:85: required from here; /usr/include/c++/11/bits/unique_ptr.h:321:11: err",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10984:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10984,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When creating a RooDataSet from a PDF using RooAbsPdf::generate() and afterwards plotting it in a specific region using RooDataSet::reduce() the internal weights of the reduced RooDataSet are broken, i.e. they are all set to 1. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The weights of the reduced RooDataSet should not change to 1 when calling RooDataSet::reduce(). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Run included macro with ```root broken_weights.C```. ```C; #include ""RooStats/HistFactory/Measurement.h""; #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h""; #include ""TFile.h""; #include ""TROOT.h""; ; using namespace RooStats;; using namespace HistFactory;. void create_test_ws(){; // taken from https://root.cern.ch/doc/v608/histfactory_2example_8C_source.html; std::string InputFile = ""example.root"";; // Create the measurement; Measurement meas(""meas"", ""meas"");. meas.SetOutputFilePrefix( ""./results/example_UsingC"" );; meas.SetPOI( ""SigXsecOverSM"" );; meas.AddConstantParam(""alpha_syst1"");; meas.AddConstantParam(""Lumi"");. meas.SetLumi( 1.0 );; meas.SetLumiRelErr( 0.10 );; meas.SetExportOnly( true );; meas.SetBinHigh( 2 );. // Create a channel. Channel chan( ""channel1"" );; chan.SetData( ""data"", InputFile );; chan.SetSt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6951:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/6951,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When fitting a RooSimultaneous pdf using BatchMode(true) (which should be cpu) the fit contains additional parameters, one for each observable, called `_<first category label>_<obs name>`, where the category is the one used in the RooSimultaneous.; The fit converges, but fails at the HESSE step, leading to an ""approximation only"" covariance matrix.; The label used is, from what I understood, based on label ordering and not the indices.; The mapping from category label to index however influences the fit result. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra parameters, successful HESSE. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void test_batchModeCategory() {; RooRealVar x(""x"", """", 0, 1);; RooRealVar rnd(""rnd"", """", 0, 1);; // change this mapping from labels to indices to change the fit result (slightly); RooThresholdCategory catThr(""cat"", """", rnd, ""a"", 2);; catThr.addThreshold(1./3, ""b"", 0);; catThr.addThreshold(2./3, ""c"", 1);; ; RooRealVar m(""m"", """", 0.5, 0, 1);; RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));; RooUniform rndPdf(""rndPdf"", """", rnd);; RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));; ; auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));; auto cat = dynamic_ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10991:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10991,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When importing data from a TTree, I specify a set of `RooRealVar`s that tell RooFit which branches I want to pull data from. It is my understanding that if a value is less than the bounds of a particular `RooRealVar`, it is excluded. This is not in fact the case. One issue stems from [this method](https://github.com/root-project/root/blob/98f6c2f17918a5fcf16f84d6d64a3dd1f11d0fab/roofit/roofitcore/src/RooAbsRealLValue.cxx#L93) or [this line in the code](https://github.com/root-project/root/blob/98f6c2f17918a5fcf16f84d6d64a3dd1f11d0fab/roofit/roofitcore/src/RooAbsRealLValue.cxx#L132), where I found that RooFit actually adds `1e-6` to either side of that comparison. I couldn't find this documented anywhere, and I'm not really sure why it's there to begin with, but maybe someone here with more knowledge of the code has a reason for why this is the way it is. This is less of a bug and more a lack of documentation. I would also consider the second implementation of `inRange` [here](https://github.com/root-project/root/blob/98f6c2f17918a5fcf16f84d6d64a3dd1f11d0fab/roofit/roofitcore/src/RooAbsRealLValue.cxx#L493) troubling, as it adds an `epsilon = 1e-8 * fabs(val)` to the comparison (and switches from `<` to `<=`. Again, maybe this is intentional, but these will certainly give different results in edge cases. The assignment operator uses the first one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expect the following behavior:; ```; RooRealVar t1(""t1"", ""Some variable"", ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11954:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11954,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When opening a GDML geometry with TEveManager I get this error message:; ```; Error in <TFile::Init>: HERD.gdml not a ROOT file; ```; Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This can be simply reproduced in the Root shell by opening any GDML file as:; ```; $ root; root [0] TEveManager m(500, 500); (TEveManager &) @0x7fbabb351008; root [1] m.GetGeometry(""HERD.gdml""); TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'.; Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7987:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7987,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When passing a argument to a formula based RooFit function (e.g. `RooFormulaVar` or `RooGenericPdf`), RooFit will search for all occurrences of the object name in the formula and replace them with an ordinal parameter (needed for the underling `TFormula`). However, when the argument is a `RooConst` the name is just a string containing the value and this can break if there are numeric literals inside the formula.; For example; ```; RooFormulaVar f(""f"", ""2.7*@0"", RooFit::RooConst(2.)); ```; becomes inside the `TFormula`; ```; x[0].7*x[0]; ```; because the name 2 of the `RooConst` matched the 2 of the numeric literal. This of course breaks during formula compilation. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The variables do not replace numeric literals no matter the name. Possibly `RooConst`s should be matched only by index?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; RooFormulaVar f(""f"", ""2.7*@0"", RooFit::RooConst(2.)); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; HEAD of ROOT 6.26 from LCG dev4. ### Additional context; <!--; Add any other context about the problem here.; -->; `RooFormulaVar f(""f"", ""2.7*@0"", RooF",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11992:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11992,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When plotting a RooFit function the `RooCurve` will try to use the `plotSamplingHint` method to get a list of optimal point locations. When using a `RooHistPdf` or `RooHistFunc` the list contains points a little (~1e-8*range) before and after each bin boundary. ; If the bins are aligned to the range (as they often are), one point per side falls outside the range.; However, there is no guarantee that the function is safe to execute there, so this may cause a NaN to be inserted in the plot.; Furthermore, when this happens the `RooCurve` seems to stop collecting points and just uses the current list, which in case of an histogram only contains the bin boundaries, meaning that the curve is not smooth between bins. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The function is evaluated only in range, no NaN in frame, smooth function between bin boundaries. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testRooHistPdfBinning() {; RooRealVar x(""x"", """", 0., 1);; ; RooGenericPdf sqrtPdf(""sqrtPdf"", ""sqrt(x)"", x);; ; TH1F h(""h"", """", 2, 0., 1);; h.Fill(0.2, 2);; h.Fill(0.8, 1);; RooDataHist dh(""dh"", """", x, RooFit::Import(h));; RooHistPdf hpdf(""hpdf"", """", x, dh);; ; RooRealVar frac(""frac"", """", 0.5, 0, 1);; RooAddPdf p(""p"", """", RooArgS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11482:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11482,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When using the pythonization of _some_ `RooCmdArgs` together with the `RooArgSet` pythonization, the created set is dropped too early.; It does not always cause a segfault (depends on the `RooCmdArg`) but it is visible in `valgrind`.; I've seen this happen with `Minos`, `Slice`, `Project`, `Parameters` and SelectVar, while I tested `Conditional`, `Constrain`, `ExternalConstraints`, `Components` and `VisualizeError` and they show no issue (not even in `valgrind`). ; I _think_ the difference is wether the `RooArgSet` is stored as a `RooArgSet` in the `RooCmdArg` (works fine) or as a `TObject*` (dropped early).; I've also noticed that this happens only when you combine the two pythonizations, e.g. both; ```Python; model.fitTo(data, Minos = ROOT.RooArgSet(parameter)); model.fitTo(data, ROOT.RooFit.Minos({parameter})); ```; work fine, only; ```Python; model.fitTo(data, Minos = {parameter}); ```; is affected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No use after free. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). mu = ROOT.RooRealVar(""mu"", """", 0.5, 0, 1); gx = ROOT.RooGaussian(""gx"", """", x, mu, ROOT.RooFit.RooConst(0.2)); gy = ROOT.RooGaussi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11421:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11421,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `GetValue` of an RDF complex type column gives the following error:; ```bash; Column type: _Complex double; <cppyy.gbl.ROOT.RDF.RResultPtr<vector<_Complex double> > object at 0x7fc929ee8430>; Error pythonizing class std::vector<_Complex double>:; Traceback (most recent call last):; File ""/Users/yana/Projects/ROOT/ROOT-master/21.04.2022/root_install/lib/ROOT/_pythonization/__init__.py"", line 233, in _invoke; user_pythonizor(klass, fqn); File ""/Users/yana/Projects/ROOT/ROOT-master/21.04.2022/root_install/lib/ROOT/_pythonization/_stl_vector.py"", line 37, in pythonize_stl_vector; if klass.value_type == 'char':; AttributeError: <class cppyy.gbl.std.vector<_Complex double> at 0x7fc929c29e20> has no attribute 'value_type'. Full details:; type object 'vector<_Complex double>' has no attribute 'value_type'; 'std::vector<_Complex double>::value_type' is not a known C++ class; 'value_type' is not a known C++ template; 'value_type' is not a known C++ enum; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; data_frame = ROOT.RDataFrame(10).Define(""x"", ""gRandom->Rndm()""); data_frame_xy = data_frame.Define(""y"", ""x*2 +1j""); data_frame_xy.Display().Print(); ```; ok so far.; ```python; column=""y",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10522:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10522,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `ROOT` and latest` cppyy 3.0.1` cannot be used in the same virtual environment. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Please, consider back porting the feature needed from `cppyy 3.0.1`:; https://github.com/wlav/CPyCppyy/commit/6c7ca2547347b7bea8e49c7f2337fa9fb0455186. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12579:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12579,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooKeysPdf` do not have an internal generation method, and relies on numerical generation (e.g. `RooAcceptReject`).; However, if the call to generate contains `ProtoData`, the distribution of the generated data is not correct. ; I tried the same with other numerically generated pdf, specifically `RooGenericPdf`, but only `RooKeysPdf` seems to be affected.; This may be caused by a bad interaction between `RooKeysPdf` and `RooAcceptReject`, since adding a prototype switches the generator from `RooFoamGenerator` to `RooAcceptReject`.; I verified that forcing `RooFoamGenerator` (which I can only do by recompiling ROOT, as far as I know) solves the issue. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Generation works correctly regardless of prototype data. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); pdf_x = ROOT.RooGenericPdf('pdf_x', 'x', [x]). # correct, of course; dt_base = pdf_x.generate({x}, NumEvents = 10000). pdf_keys = ROOT.RooKeysPdf('pdf_keys', '', x, dt_base, ROOT.RooKeysPdf.MirrorBoth). # also correct; dt_keys = pdf_keys.generate({x}, NumEvents = 10000). y = ROOT.RooRealVar('y', '', 0, 1); proto = ROOT.RooDataSet('proto_y', '', {y}); proto.add(ROOT.RooArgSet(y)). # still",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12286:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12286,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooLinearVar`s and other `RooAbsRealLValue`s are special inside integrals, as `RooRealIntegral` over the underling `RooRealVar` can transparently integrate over the `RooLinearVar` variable and then use the jacobian to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12646:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12646,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooSimultaneous` has a feature where if the internal pdfs are themselves `RooSimulteneous`, the pdf is flattened in a single level `RooSimulteneous` with a `RooSuperCategory` as index.; When generating such a pdf from prototype data, the prototype needs to contain all the subcategories of the super-category, and it does so by checking the super-category servers. ; However, recently `RooSuperCategory` was changed to contain a `RooMultiCategory` internally, and the only reported direct server is the internal multi-category. This leads to a wrong generation (the prototype data is ignored, the gen context refers to the current labels). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Proto data works even with nested RooSimultaneous. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1). c1 = ROOT.RooCategory('c1', '', {'c11': 0}); c2 = ROOT.RooCategory('c2', '', {'c21': 0}). u = ROOT.RooUniform('u', '', x); s1 = ROOT.RooSimultaneous('s1', '', {'c11': u}, c1); s2 = ROOT.RooSimultaneous('s2', '', {'c21': s1}, c2). proto = ROOT.RooDataSet('proto', '', {c1, c2}); for i in range(100):; proto.add({c1, c2}). proto.table(c1).Print(""V""); proto.table(c2).Print(""V""). ROOT.RooMsgService.instance().ad",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12020:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12020,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooWorkspace` is supposed to be able to store custom PDFs using `importClassCode`, but, even after setting `Impl` and `Decl` directories, a workspace with a custom PDF will crash on opening. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Ideally, just; ```python; ws.importClassCode(""RooSDSCBShape.cxx""); ```; should be sufficient. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins).; ```python; import os. import ROOT as r. # declare PDF; r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files; cls = r.TClass.GetClass(""RooSDSCBShape""); cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0); cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace; ws = r.RooWorkspace(""ws""); ws.addClassDeclImportDir(os.getcwd()); ws.addClassImplImportDir(os.getcwd()); ws.importClassCode(cls); ws.writeToFile(""test.root""). # extract the class from the workspace; f = r.TFile.Open(""test.root""); inws = f.Get(""ws""); ```. Output:; ```; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; Al",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7249,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; Either:; Automatically convert the data type of the arrays and fill the error with the correct values; Or:; Raising error/warning when mixed data types are passed. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import numpy as np; import ROOT; n = 1; x = np.array([1]); y = np.array([2]); xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]); yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]); reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)); # result:; # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7393:739,clear,clear,739,https://root.cern,https://github.com/root-project/root/issues/7393,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; TKeys in a TFile with the same name as the requested RNTuple will be attempted to be parsed as an RNTuple, leading to internal parser errors later on. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The RNTupleReader should check the type of the TKey before parsing (and throw an exception if there's no RNTuple with the requested name).; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; Create a TFile with a TKey with a certain name, then try to open that file as an RNTuple.; ```cpp; std::string filename = ""some_file.root"";; {; auto file = std::make_unique<TFile>(filename.c_str(), ""RECREATE"", """", 209);; auto tree = std::make_unique<TTree>(""Events"", """");; file->Write();; file->Close();; tree.release();; }. auto ntuple = RNTupleReader::Open(""Events"", filename);; ```; ```; Fatal: nread == nbytes violated at line 1011 of `~/root/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; Root master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8284:542,clear,clear,542,https://root.cern,https://github.com/root-project/root/issues/8284,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; With the recent version of ROOT (v6.26/08), I found out that when plotting the pull distribution after a fit with pullHist, the wrong distribution is shown with respect to the one produced with ROOT v6.26/06, for example. ### Expected behavior; When the fit converges, a gaussian-like pull distribution is expected, while with ROOT v6.26/08 the histogram bars are unreasonably high. ### To Reproduce; You can find the needed code and data to reproduce the bug at the following link:; https://cernbox.cern.ch/s/hnMmXVjUtbwlZJN; Simply run `bug_reproducer.py` with ROOT v6.26/06 and v6.26/08 and see the difference in the plot produced. ### Setup; Tested with ROOT setup from `lb-conda`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11738:910,Simpl,Simply,910,https://root.cern,https://github.com/root-project/root/issues/11738,1,['Simpl'],['Simply']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. This issue was addressed here: https://github.com/root-project/root/pull/3914, but it is present in ROOT 6.14/09. ### Describe the bug. The hadd ""-v 0"" option to set the verbosity level to 0 does not work in ROOT 6.14/09. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Here is an example of running hadd on two files to create an output file.; ```; hadd target.root file_1.root file_2.root. hadd Target file: target.root; hadd compression setting for all ouput: 1; hadd Source file 1: file_1.root; hadd Source file 2: file_2.root; hadd Target path: target.root:/; hadd Target path: target.root:/Histograms; ```; Result: target.root created containing a tree with the expected number of entries. I would like to use the ""-v 0"" option for hadd to set the verbosity level to 0 as described by the program info.; ```; hadd. Usage: hadd [-f[fk][0-9]] [-k] [-T] [-O] [-a]; [-n maxopenedfiles] [-cachesize size] [-j ncpus] [-v [verbosity]]; targetfile source1 [source2 source3 ...]. If the option -v is used, explicitly set the verbosity level;; 0 request no output, 99 is the default; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; hadd -v 0 target.root file_1.root file_2.root. hadd Target file: 0; hadd compression setting for all ouput: 1; hadd Source file 1: target.root; Error in <TFile::TFile>: file target.root does not exist; Error in <TFil",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11372:614,clear,clear,614,https://root.cern,https://github.com/root-project/root/issues/11372,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; At least I could not find any obvious ones that described the same problem. But it might be a more general problem in the python bindings which I have missed. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Defining new `TColor`s in python seems to pick the wrong constructor. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; In previous versions of ROOT (up to 6.20/04) the right constructor was picked here. . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT as r. color_index = r.TColor.GetFreeColorIndex(); print(type(color_index), color_index) # just to be sure that color_index is indeed an int. # This seems to be chosing the TColor(float, float, float, float) constructor; # instead of the TColor(int, float, float, float, const char*, float); color = r.TColor(color_index, 0.1, 0.2, 0.3). # This should be 0.1, 0.2, 0.3, but will actually be the color index, 0.1, 0.2; print(color.GetRed(), color.GetBlue(), color.GetGreen()). # Explicitly passing an empty string to the constructor helps in picking the correct constructor; color = r.TColor(color_index + 1, 0.1, 0.2, 0.3, """"); print(color.GetRed(), color.GetBlue(), color.GetGreen()) # now is 0.1, 0.2, 0.3; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7790:550,clear,clear,550,https://root.cern,https://github.com/root-project/root/issues/7790,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; Yes. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root fails to build in Arch Linux.; `$ cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; <details>; <summary>output</summary>. ```; -- The C compiler identification is GNU 11.2.0; -- The CXX compiler identification is GNU 11.2.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.36.0""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 11, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:396,clear,clear,396,https://root.cern,https://github.com/root-project/root/issues/10528,1,['clear'],['clear']
Usability,"- [y] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have run into issue reported on ROOT forum here:; https://root-forum.cern.ch/t/tpython-problem/46064; and managed to narrow it down a little. When ROOT is compiled with python3.8/3.9, running the following (in both compiled code and interactively):; ; const char * b = (const char*) TPython::Eval(""'done'"");. leads to following error:. input_line_29:74:12: error: expected member name or ';' after declaration specifiers; TPyReturn isascii() {; ~~~~~~~~~ ^; /usr/include/ctype.h:234:22: note: expanded from macro 'isascii'; # define isascii(c) __isascii (c); ^; .; .; . ; (const char *) nullptr. It does not happen with python 3.6. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Running the TPython::Eval command should simply return ""done"". Tested with ROOT 6.24.6+python3.6. root [1] const char * b = (const char*) TPython::Eval(""'done'""); (const char *) ""done"". ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile ROOT (tested with 6.24.6 and 6.26.8) with python 3.8 or 3.9 and run following in root interactive:. root [1] const char * b = (const char*) TPython::Eval(""'done'""). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. 6.24.6 + pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12182:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12182,1,['clear'],['clear']
Usability,"- [yes] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When I run the TMVARegression (root tutorial/tmva/TMVARegreession.C), I found the results by using FDA_GA and FDA_MT are different, but they use same function to do regression. The fit parameters from FDA_MT are always equal to zero. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I have found the following ways to avoid this problem: ; In class TMVA::MinuitFitter, change the code at line 103 as shown bellow, and then reinstall root. Then the results from FDA_MT, FDA_SA and even FDA_GAMT are same.`. void TMVA::MinuitFitter::Init(); {; .......... ; //fMinWrap = new MinuitWrapper( fFitterTarget, 2*GetNpars() );; fMinWrap = new MinuitWrapper( fFitterTarget, GetNpars() );; ..........; }; `. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; root tutorial/tmva/TMVARegreession.C. In TMVARegression.C, I use the FDA method as bellow: ` . if (Use[""FDA_MC""]); factory->BookMethod( dataloader, TMVA::Types::kFDA, ""FDA_MC"",; ""!H:!V:Formula=(0)+(1)*x0+(2)*x1:ParRanges=(-100,100);(-100,100);(-100,100):FitMethod=MC:SampleSize=100000:Sigma=0.1"" );; ; if (Use[""FDA_GA""]) // can also use Simulated Annealing (SA) algorithm (see Cuts_SA options) .. the formula of this example is good for parabolas; factory->BookMethod( dataloader, TMVA::Types::kFDA, ""FDA_GA"",",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6773:393,clear,clear,393,https://root.cern,https://github.com/root-project/root/issues/6773,2,['clear'],['clear']
Usability,"- move important functions (constructors,destructors,accessors) to header; to avoid overhead in creating and accessing these small objects; - optimize access to TLorentzVector by avoiding a double switch statement; (switch on direction in TLorentzVector followed by same switch in TVector3). This merge request is result of profiling work in the AliRoot framework where simple accesses to the mentioned objects are considerable (on the 2% level).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/165:370,simpl,simple,370,https://root.cern,https://github.com/root-project/root/pull/165,1,['simpl'],['simple']
Usability,"- removed nested template struct SimpleAction; - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook; - BuildAndBook now only takes one template parameter instead of three; - the default type of histogram weights is now `void` (which signals that we are; not filling a weighted histogram); - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which; in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used; to decide whether to perform runtime type guessing or not. Multiple overloads of; `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/348:33,Simpl,SimpleAction,33,https://root.cern,https://github.com/root-project/root/pull/348,2,['Simpl'],['SimpleAction']
Usability,"- try harder to find branches and leaves users requested when; trying to figure out their type; - when building the list of valid column names, use the output of; TBranch::GetFullName instead of the names (joined by dots) of; the branches we traversed so far. With multiple nested; TBranchElements, the traversal might be `a.b.c` while the name; returned by TBranch::GetFullName (which is what TTree::GetBranch; recognizes) might be simply `a.c` (see e.g. ROOT-9975). These changes fix ROOT-9975, although in some corner cases they might; change which column names RDataFrame considers valid (any ""reasonable""; user application that was working should keep working -- no tutorial,; test or integration benchmark we have was broken by these changes). A test is at https://github.com/root-project/roottest/pull/632 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6988:433,simpl,simply,433,https://root.cern,https://github.com/root-project/root/pull/6988,1,['simpl'],['simply']
Usability,"-------------------------------------------------===//; @@ -361,6 +363,8 @@; Record.push_back(D->isTopLevelDeclInObjCContainer());; Record.push_back(D->getAccess());; Record.push_back(D->isModulePrivate());; + D->dump();; + if (D->getOwningModule()) fprintf(stderr, ""D->getOwningModule()->Name=%s"", D->getOwningModule()->Name.c_str());; Record.push_back(Writer.getSubmoduleID(D->getOwningModule()));; ; // If this declaration injected a name into a context different from its; ```; with result:; ```ConsoleSession; <snip/>; LinkageSpecDecl 0xbf7b930 <<module-includes>:1:1, line:3:1> line:1:8 C; |-CXXRecordDecl 0xbf7b988 </usr/include/xlocale.h:27:9, line:39:1> line:27:16 in xlocale.h hidden struct __locale_struct definition; | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal; | | |-DefaultConstructor exists trivial needs_implicit; | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveConstructor exists simple trivial needs_implicit; | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveAssignment exists simple trivial needs_implicit; | | `-Destructor simple irrelevant trivial needs_implicit; | |-CXXRecordDecl 0xbf7bad0 <col:9, col:16> col:16 in xlocale.h hidden implicit struct __locale_struct; | |-CXXRecordDecl 0xbf7bb88 parent 0xbf3f498 <line:30:3, col:10> col:10 in xlocale.h hidden struct __locale_data; | |-FieldDecl 0xbf7be08 <col:3, col:37> col:25 in xlocale.h hidden __locales 'struct __locale_data *[13]'; | |-FieldDecl 0xbf7beb8 <line:33:3, col:29> col:29 in xlocale.h hidden __ctype_b 'const unsigned short *'; | |-FieldDecl 0xbf7bf28 <line:34:3, col:14> col:14 in xlocale.h hidden __ctype_tolower 'const int *'; | |-FieldDecl 0xbf7bf98 <line:35:3, col:14> col:14 in xlocale.h hidden __ctype_toupper 'const int *'; | `-FieldDecl 0xbf7c098 <line:38:3, col:25> col:15 in xlocale.h hidden __names 'const char *[13]'; |-TypedefDec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377744663:1395,simpl,simple,1395,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663,5,['simpl'],['simple']
Usability,"-1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails; // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works; C->cd();; Double_t w=20, h=20, xl=0, yb=20;; TBox* o=new TBox();; TPad* c= new TPad();; c->SetPad(0,0,1,1);; c->cd(1);; c->PlaceBox(o,w,h,xl,yb);; return 0;; }. ```. I see. ```; [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc; entry=0x7ffeea3c7360, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007f16b8107f62 in do_system (line=<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428#issuecomment-698590998:1696,clear,clear,1696,https://root.cern,https://github.com/root-project/root/issues/6428#issuecomment-698590998,1,['clear'],['clear']
Usability,"-1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TRandom* R1= new TRandom();; TRandom* R2= new TRandom();; TRandom* R3= new TRandom();; Float_t r1,g1,b1;; Float_t r2,g2,b2;; Float_t r3,g3,b3;; Float_t fHue1=-1.0f; ; Float_t fLight1=-1.0f;; Float_t fSaturation1 = -1.0f;; Float_t fHue2=-1.0f; ; Float_t fLight2=-1.0f;; Float_t fSaturation2 = -1.0f;; Float_t fHue3=-1.0f; ; Float_t fLight3=-1.0f;; Float_t fSaturation3 = -1.0f;; for (size_t i=0; i<1000000;i++); {; r1=16.0f*(1.0f-float(R1->Rndm()));; g1=16.0f*(1.0f-float(R1->Rndm()));; b1=16.0f*(1.0f-float(R1->Rndm()));; printf(""TColor::RGB2HLS(%f, %f, %f ...)->"",r1,g1,b1);; TColor::RGB2HLS( r1,g1,b1 ,fHue1, fLight1, fSaturation1);; printf(""%f, %f, %f\n"",fHue1, fLight1, fSaturation1);; }; for (size_t i=0; i<1000000;i++); {; r2=16.0f*(1.0f-float(R2->Rndm()));; g2=16.0f*(1.0f-float(R2->Rndm()));; b2=16.0f*(1.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6684#issuecomment-713684777:1699,clear,clear,1699,https://root.cern,https://github.com/root-project/root/pull/6684#issuecomment-713684777,1,['clear'],['clear']
Usability,"-1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. void FakeRGB2HLS(Float_t rr, Float_t gg, Float_t bb,; Float_t &hue, Float_t &light, Float_t &satur); {; Float_t rnorm, gnorm, bnorm, minval, maxval, msum, mdiff, r, g, b;; minval = maxval =0 ;; r = g = b = 0;; if (rr > 0) {; r = rr;; if (r > 1) r = 1;; }; if (gg > 0) {; g = gg;; if (g > 1) g = 1;; }; if (bb > 0) {; b = bb;; if (b > 1) b = 1;; }. minval = r;; if (g < minval) minval = g;; if (b < minval) minval = b;; maxval = r;; if (g > maxval) maxval = g;; if (b > maxval) maxval = b;. rnorm = gnorm = bnorm = 0;; mdiff = maxval - minval;; msum = maxval + minval;; printf(""msum %f %f\n"",msum,mdiff);; light = 0.5 * msum;; if (maxval != minval) {; rnorm = (maxval - r)/mdiff;; gnorm = (maxval - g)/mdiff;; bnorm = (maxval - b)/mdiff;; } else {; satur = hue = 0;; return;; }. if (light < 0.5); satur = mdiff/msum;; else; satur = mdiff/(2.0 - msum);. if (r == maxval); {; printf(""hue 1\n"");; hue = 60.0 * ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677:2272,clear,clear,2272,https://root.cern,https://github.com/root-project/root/issues/6677,1,['clear'],['clear']
Usability,"-1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. void FakeRGB2HLS(Float_t rr, Float_t gg, Float_t bb,; Float_t &hue, Float_t &light, Float_t &satur); {; Float_t rnorm, gnorm, bnorm, minval, maxval, msum, mdiff, r, g, b;; minval = maxval =0 ;; r = g = b = 0;; if (rr > 0) {; r = rr;; if (r > 1) r = 1;; }; if (gg > 0) {; g = gg;; if (g > 1) g = 1;; }; if (bb > 0) {; b = bb;; if (b > 1) b = 1;; }. minval = r;; if (g < minval) minval = g;; if (b < minval) minval = b;; maxval = r;; if (g > maxval) maxval = g;; if (b > maxval) maxval = b;. rnorm = gnorm = bnorm = 0;; mdiff = maxval - minval;; msum = maxval + minval;; printf(""msum %f %f\n"",msum,mdiff);; light = 0.5 * msum;; if (maxval != minval) {; rnorm = (maxval - r)/mdiff;; gnorm = (maxval - g)/mdiff;; bnorm = (maxval - b)/mdiff;; } else {; satur = hue = 0;; return;; }. if (light < 0.5); satur = mdiff/msum;; else; satur = mdiff/(2.0 - msum);. if (r == maxval); {; printf(""hue 1\n"");; hue = 60.0 * ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6373#issuecomment-712842902:1684,clear,clear,1684,https://root.cern,https://github.com/root-project/root/issues/6373#issuecomment-712842902,1,['clear'],['clear']
Usability,. ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175603018:2310,simpl,simple,2310,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175603018,2,['simpl'],['simple']
Usability,...; Error in <TList::Clear>: A list is accessing an object (0x558b19a500b0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b74080) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b76bf0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b80a80) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b80df0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b81320) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b817c0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b81b90) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b82030) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b82260) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bacc50) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bb6580) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bb6f70) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bb73d0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bbad50) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bc5b80) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bc5eb0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bc8710) already deleted (list name = TList); (TFile *) 0x558b199f9480; ```. ##,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14793:948,Clear,Clear,948,https://root.cern,https://github.com/root-project/root/issues/14793,18,['Clear'],['Clear']
Usability,...and simplify function signatures accordingly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5558:7,simpl,simplify,7,https://root.cern,https://github.com/root-project/root/pull/5558,1,['simpl'],['simplify']
Usability,...in the hope to get a clearer picture about the test failures; when jitting,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1937:24,clear,clearer,24,https://root.cern,https://github.com/root-project/root/pull/1937,1,['clear'],['clearer']
Usability,"...plus ""many of us"" recommend to simply not do `make install`, but use ROOT right where it was built, or better yet grab a binary build from https://root.cern/download/nightly/ and untar it. As Guilherme says: if you want to get rid of that, just `rm -rf`, done!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3405#issuecomment-462812992:34,simpl,simply,34,https://root.cern,https://github.com/root-project/root/pull/3405#issuecomment-462812992,1,['simpl'],['simply']
Usability,...to make it clear that we only use these functions in this same source file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5273:14,clear,clear,14,https://root.cern,https://github.com/root-project/root/pull/5273,1,['clear'],['clear']
Usability,"...ue in pyspark. From:. http://www.sealiesoftware.com/blog/archive/2017/6/5/Objective-C_and_fork_in_macOS_1013.html. > The rules for using Objective-C between fork() and exec() have changed; in macOS 10.13. Incorrect code that happened to work most of the time in; the past may now fail. Some workarounds are available. This led to issues within the Python language, tracked at; https://bugs.python.org/issue33725. Any application that makes use of; e.g. multiprocessing (or in any way ends up calling MacOS system `fork`; or `exec`) is affected. According to the Python bug tracker, this issue; has been fixed in Python 3.8. The XCode Python 3.8 version begs to differ. In a very specific usecase,; that boils down to this simple reproducer:; ```python; import pyspark. sparkconf = pyspark.SparkConf().setAll(; {""spark.app.name"": ""distrdf001_spark_connection"",; ""spark.master"": ""local[4]"", }.items()); sparkcontext = pyspark.SparkContext(conf=sparkconf). def imp(partition):; import cppyy; return 1. count = sparkcontext.parallelize(range(1)).map(imp).reduce(lambda x,y:; x+y); ```. the issue is still triggered. Installing any other 3.8+ Python; executable on a MacOS node doesn't show this behaviour, with the exact; same pyspark version (3.2.1). It is possible to workaround this problem, by setting the environment; variable OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES before running a test.; This effectively brings back the behaviour of MacOS10.12 and previous; versions. This commit uses this workaround, since we cannot directly; modify how the system XCode Python on MacOS works. To give an idea of the impact of this issue (and therefore the changes; in this commit), the situation where this occurs is as follows:. 1. A user wants to run RDataFrame in distributed mode.; 2. Their environment is MacOS 10.13+.; 3. The application creates a pyspark mock cluster on the local Mac machine and; the computations happen strictly in the single local node, not in a; distributed cluster. Thus, it pro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9811:725,simpl,simple,725,https://root.cern,https://github.com/root-project/root/pull/9811,1,['simpl'],['simple']
Usability,"../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core` to work with newer packaging standards.; # - It provides a clear error message when setuptools is not installed.; # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so; # setuptools doesn'""'""'t think the script is `-c`. This avoids the following warning:; # manifest_maker: standard file '""'""'-c'""'""' not found"".; # - It generates a shim setup.py, for handling setup.cfg-only projects.; import os, sys, tokenize; ; try:; import setuptools; except ImportError as error:; print(; ""ERROR: Can not execute `setup.py` since setuptools is not available in ""; ""the build environment."",; file=sys.stderr,; ); sys.exit(1); ; __file__ = %r; sys.argv[0] = __file__; ; if os.path.exists(__file__):; filename = __file__; with tokenize.open(__file__) as f:; setup_py_code = f.read(); else:; filename = ""<auto-generated setuptools caller>""; setup_py_code = ""from setuptools import setup; setup()""; ; exec(compile(setup_py_code, filename, ""exec"")); '""'""''""'""''""'""' % ('""'""'.../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-req-build-02hl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1154135015:3094,clear,clear,3094,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015,1,['clear'],['clear']
Usability,"..Wrapper`"" classes are abstract interfaces. These can be implemented for different kinds of algorithms, or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based multi-processing implementation based on `RooFit::MultiProcess`. Other possible implementations could use the GPU or external tools like TensorFlow. The coupling of all these classes to `RooMinimizer` is made via the `MinuitFcnGrad` class, which owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700:1756,simpl,simple,1756,https://root.cern,https://github.com/root-project/root/pull/8700,1,['simpl'],['simple']
Usability,".its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; Using a `std::pair` for a custom class inside another custom class seems to somehow break the dictionary load mechanism. In the [attached reproducer](https://github.com/root-project/root/files/8609137/reproducer.tar.gz), `OtherClass` contains a `std::pair<int, MyClass>`; for both custom classes a dictionary is created. Manually loading the dictionary in the Root shell seems to lead to an incomplete type state for `MyClass`, such that some assertions fail. The failure disappear if the same assertion is tested before on a class from the same dictionary and not encompassed in the `std::pair`. It thus seems that the presence of the `std::pair` somehow interferes with loading the dictionary for the contained class. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The presence of `std:::pair` should not interfere with the dictionary of its contained classes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. This [reproducer](https://github.com/root-project/root/files/8609137/reproducer.tar.gz) showcases the problem:; ```bash; $ rootcling -f dict.cpp MyClass.h OtherClass.h LinkDef.h; $ g++ -shared -std=c++14 -fPIC -I$ROOTSYS/include dict.cpp -o libDict.so ; $ root; root [0] .L libDict.so; root [1] std::is_copy_assignable<MyClass>::value; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/type_traits:139:14: error: base class has incomplete type; : public conditional<_B1::value, _B2, _B1>::type; ~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10512:1134,clear,clear,1134,https://root.cern,https://github.com/root-project/root/issues/10512,1,['clear'],['clear']
Usability,"/ previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);; C->cd();; Double_t w=0, h=0, xl=0, yb=0;; TH1D* o=new TH1D();; TPad* c= new TPad();; c->PlaceBox(o,w,h,xl,yb);; delete c;; delete C;; return 0;; }; ```; compile; ```; g++ pad2.cxx $(root-config --glibs --cflags --libs) -o pad2 -g; ```; run; ```; ./pad2; ```. ## Setup. ROOT 6.22.02 CentOS7 gcc4.8.5 ; and ; lxplus with ; ```; source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh; ```; Should also work with mac (not tested). ## Additional context. Hopefully this will be the last one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428:4100,clear,clear,4100,https://root.cern,https://github.com/root-project/root/issues/6428,1,['clear'],['clear']
Usability,/MnCross.h Minuit2/MnEigen.h Minuit2/MnFcn.h Minuit2/MnFumiliMinimize.h Minuit2/MnFunctionCross.h Minuit2/MnGlobalCorrelationCoeff.h Minuit2/MnHesse.h Minuit2/MnLineSearch.h Minuit2/MnMachinePrecision.h Minuit2/MnMatrix.h Minuit2/MnMigrad.h Minuit2/MnMinimize.h Minuit2/MnMinos.h Minuit2/MnParabola.h Minuit2/MnParabolaFactory.h Minuit2/MnParabolaPoint.h Minuit2/MnParameterScan.h Minuit2/MnPlot.h Minuit2/MnPosDef.h Minuit2/MnPrint.h Minuit2/MnRefCountedPointer.h Minuit2/MnReferenceCounter.h Minuit2/MnScan.h Minuit2/MnSeedGenerator.h Minuit2/MnSimplex.h Minuit2/MnStrategy.h Minuit2/MnTiny.h Minuit2/MnTraceObject.h Minuit2/MnUserCovariance.h Minuit2/MnUserFcn.h Minuit2/MnUserParameterState.h Minuit2/MnUserParameters.h Minuit2/MnUserTransformation.h Minuit2/MnVectorTransform.h Minuit2/ModularFunctionMinimizer.h Minuit2/NegativeG2LineSearch.h Minuit2/Numerical2PGradientCalculator.h Minuit2/ParametricFunction.h Minuit2/ScanBuilder.h Minuit2/ScanMinimizer.h Minuit2/SimplexBuilder.h Minuit2/SimplexMinimizer.h Minuit2/SimplexParameters.h Minuit2/SimplexSeedGenerator.h Minuit2/SinParameterTransformation.h Minuit2/SqrtLowParameterTransformation.h Minuit2/SqrtUpParameterTransformation.h Minuit2/StackAllocator.h Minuit2/VariableMetricBuilder.h Minuit2/VariableMetricEDMEstimator.h Minuit2/VariableMetricMinimizer.h Minuit2/VectorOuterProduct.h TMinuit2TraceObject.h /mnt/build/workspace/root-pullrequests-build/root/math/minuit2/inc/LinkDef.h ; - [2020-10-25T10:36:13.979Z] /mnt/build/workspace/root-pullrequests-build/build/include/Minuit2/MnPrint.h:130:69: error: use of undeclared identifier 't' ; - [2020-10-25T10:36:13.979Z] /mnt/build/workspace/root-pullrequests-build/build/include/Minuit2/MnPrint.h:132:24: error: no member named 'Warning' in 'ROOT::Minuit2::MnPrintLevel' ; - [2020-10-25T10:36:13.979Z] /mnt/build/workspace/root-pullrequests-build/build/include/Minuit2/MnPrint.h:133:71: error: use of undeclared identifier 't' ; - [2020-10-25T10:36:13.979Z] /mnt/build/workspace/root-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-716125314:5208,Simpl,SimplexMinimizer,5208,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-716125314,1,['Simpl'],['SimplexMinimizer']
Usability,"/O annotation can be moved from the comments to using `C++ attributes` (in particular because support for the comment is implemented internally through the same mechanics). To quote the referred pull request:. The way dictionary information are propagated from the `C++` code or `XML` dictionaries to reflex and cling is rather roundabout:. - a; - `<field name=""data_"" comment=""!""/>` tags `XML` dictionaries are parsed by `genreflex` and injected into the `LLVM AST` of the corresponding `C++` code as comments `//!`;; - `C++` comments like `//!` or `//[size_]` are converted by `genreflex/rootcling` into `LLVM AST` annotations; cling parses the `LLVM` annotations and uses them to generate the desired behavior in the dictionaries. This approach does not work well with macro-generated data members:. - macros cannot generate comments, so `//!` or `//[size_]` cannot be used directly;; - macros cannot easily be used to generate the `class_def.xml` file, requiring manual intervention for their implementation and maintenance. However, it turns out that dictionaries can bypass the comments and use LLVM annotations directly within the C++ code. So; ```; private:; int size_;; float* data_; //[size_]; float* transient_; //!; ```; can be also expressed as; ```; private:; int size_;; float* data_ [[clang::annotate(""[size_]"")]];; float* transient_ [[clang::annotate(""!"")]];; ```; and annotations can be generated by macros. In order to avoid spurious warnings when compiling the header, we should offer a (set of) macro(s), eg:. - `ROOT_IO_TRANSIENT` can be used to annotate transient data members, like `//!; - `ROO_IO_SIZE(SIZE)` can be used to annotate dynamic arrays, like `//[SIZE]`; or. - `ROOT_IO_ANNOTATE` that can be used with `ROOT_IO_ANNOATE(""!"")` and `ROOT_IO_ANNOTATE(""[size]"")`. The advantage of the earlier case would be to (possibly) allow simplification of the internal parsing, by using:; ```; float* data_ [[rootio::size(""size_"")]];; float* transient_ [[rootio::transient]];; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12012:1919,simpl,simplification,1919,https://root.cern,https://github.com/root-project/root/issues/12012,1,['simpl'],['simplification']
Usability,"/TCling.cxx:390; #14 0x00007fffec2ff3bf in TCling::HandleNewDecl (this=0x696f40, DV=0x19e3ac0, isDeserialized=false, modifiedTClasses=std::set with 0 elements) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:518; #15 0x00007fffec31acaf in TCling::UpdateListsOnCommitted (this=0x696f40, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6773; #16 0x00007fffec2ff5d6 in TCling__UpdateListsOnCommitted (T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:554; #17 0x00007fffec45276f in TClingCallbacks::TransactionCommitted (this=0x1244d20, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingCallbacks.cxx:872; #18 0x00007fffec52fc5f in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x720d70, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:83; #19 0x00007fffec67437d in cling::IncrementalParser::commitTransaction (this=0x6a7b50, PRT=..., ClearDiagClient=true) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:630; #20 0x00007fffec674b5d in cling::IncrementalParser::Compile (this=0x6a7b50, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:775; #21 0x00007fffec52c5db in cling::Interpreter::DeclareInternal (this=0x697c30, input=""#line 1 \""ROOT_prompt_1\""\nnamespace Detail { int i; }"", CO=..., T=0x0); at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1341; #22 0x00007fffec52a961 in cling::Interpreter::process (this=0x697c30, input=""#line 1 \""ROOT_prompt_1\""\nnamespace Detail { int i; }"", V=0x7fffffffb6d0, T=0x0, disableValuePrinting=false); at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:819; #23 0x00007fffec74a8a1 in cling::MetaProcessor::process (this=0x1069b10, input_line=..., compRes=@0x7fffffffb6cc: cling::Interpreter::kSuccess, result=0x7fffffffb6d0, disableValuePrinting=false); at /home/jhahnfel/ROOT/src/interpreter/cling/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8828#issuecomment-900036214:3373,Clear,ClearDiagClient,3373,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-900036214,1,['Clear'],['ClearDiagClient']
Usability,"/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TApplication* theApp = new TApplication(""App"", &argc, argv);; auto *G= new TGMainFrame(gClient->GetRoot(), 768, 1024);; theApp->Run();; return 0;; }. ```; compiled with ; ```; c++ $(root-config --cflags --glibs) -g -O1 frame.cxx -o frame.exe; ```; and executed as ; ```; ./frame.exe; ```; ### Setup; ROOT master MacOSX 10.15; and ROOT night build ; root_v6.22.99.macosx64-10.15-clang120 MacOSX 10.15. Tag @couet",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6758:3766,clear,clear,3766,https://root.cern,https://github.com/root-project/root/issues/6758,2,['clear'],['clear']
Usability,"/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11808:2591,learn,learn-github-actions,2591,https://root.cern,https://github.com/root-project/root/pull/11808,1,['learn'],['learn-github-actions']
Usability,"/lib/Interpreter/IncrementalExecutor.cpp; +++ b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp; @@ -34,6 +34,8 @@; ; #include <iostream>; ; +#include ""llvm/Support/Debug.h""; +; using namespace llvm;; ; namespace cling {; @@ -112,6 +114,8 @@ IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine& /*diags*/,; : m_Diags(diags); #endif; {; + //llvm::DebugFlag = true;; + //setCurrentDebugType(""dyld"");; ; // MSVC doesn't support m_AtExitFuncsSpinLock=ATOMIC_FLAG_INIT; in the class definition; std::atomic_flag_clear( &m_AtExitFuncsSpinLock );; diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp; index e20543b..668bf0b 100644; --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp; +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp; @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,; this->m_Resolver};; },; m_NotifyObjectLoaded, NotifyFinalizedT(*this)),; - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),; + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),; m_LazyEmitLayer(m_CompileLayer) {; ; m_CompileLayer.setNotifyCompiled(NCC);; diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h; index df4360f..ac4c851 100644; --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h; +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h; @@ -38,6 +38,37 @@ namespace cling {; class Azog;; class IncrementalExecutor;; ; + class MySimpleCompiler : public llvm::orc::SimpleCompiler {; + public:; + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr); + : SimpleCompiler(TM, ObjCache) {}; + CompileResult operator()(llvm::Module &M) {; + auto R = SimpleCompiler::operator()(M);; + //auto Filename = ""output.o"";; + std::error_code EC;; + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);; + ; + static unsigned counter = 0;; + std::string FileStem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9380#issuecomment-985923087:1282,Simpl,SimpleCompiler,1282,https://root.cern,https://github.com/root-project/root/pull/9380#issuecomment-985923087,1,['Simpl'],['SimpleCompiler']
Usability,"/path/to/file:name, TBD. > We also want a dedicated GetDataSourceInfo, because we have either fDataSet->GetLabel(), if there's a fDataSource, or a TTree/TChain type if there is a df.GetTree or it's a simple dataframe aka RDataFrame(N) if none if this is true. Alright so I have different opinions for both things. First off, I would like to have a common nomenclature that we agree upon, and we can use as reference in the future for our users. This is what my mind first thinks off when reads the following different names:; * `data format` is the identifier name of the logical or in-memory layout of the dataset. For example, `TTree`, `RNTuple`, `CSV`, `Apache Arrow`. The data format specification also imposes some extra constraints, like a CSV table does not have an embedded name, while a TTree does.; * `dataset` is the concrete representation of the information carried by data contained somewhere in some data format, e.g. a flat table or a table with possible n-dimensional cell elements for our usecases.; * `data source` is kind of more blurred, but I see it as a combination of the two above. You can't have a source of data without a dataset and you need a data format to be able to reason about the dataset and run computations on it. The nomenclature above might not be always true, but I still think it's worth to bring up the point that we should agree on one. It stems from my personal reasoning that:; * While I understand the utility of `GetDatasetInfo`, I see a lot of possible drawbacks which I described in [this comment](https://github.com/root-project/root/issues/7828#issuecomment-817820448) to what we currently call `GetDataSourceInfo` discussion; * I would more clearly understand `GetDataSourceInfo` if it were called `GetDataFormat` or `GetDataFormatName`. I still understand that we could keep this function name to be more aligned with existent RDataSource API, though I see little relevance with the other RDataFrame constructors that use TTree as the data format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7561#issuecomment-817863318:1775,clear,clearly,1775,https://root.cern,https://github.com/root-project/root/issues/7561#issuecomment-817863318,1,['clear'],['clearly']
Usability,"/sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooSimultaneous` has a feature where if the internal pdfs are themselves `RooSimulteneous`, the pdf is flattened in a single level `RooSimulteneous` with a `RooSuperCategory` as index.; When generating such a pdf from prototype data, the prototype needs to contain all the subcategories of the super-category, and it does so by checking the super-category servers. ; However, recently `RooSuperCategory` was changed to contain a `RooMultiCategory` internally, and the only reported direct server is the internal multi-category. This leads to a wrong generation (the prototype data is ignored, the gen context refers to the current labels). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Proto data works even with nested RooSimultaneous. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1). c1 = ROOT.RooCategory('c1', '', {'c11': 0}); c2 = ROOT.RooCategory('c2', '', {'c21': 0}). u = ROOT.RooUniform('u', '', x); s1 = ROOT.RooSimultaneous('s1', '', {'c11': u}, c1); s2 = ROOT.RooSimultaneous('s2', '', {'c21': s1}, c2). proto = ROOT.RooDataSet('proto', '', {c1, c2}); for i in range(100):; proto.add({c1, c2}). proto.table(c1).Print(""V""); proto.table(c2).Print(""V""). ROOT.RooMsgService.instance().addStream(ROOT.RooFit.INFO). # correct; context = s1.genContext(ROOT.RooArgSet(x), proto, ROOT.nullptr, True); print(context.ClassName()); context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12020:1130,clear,clear,1130,https://root.cern,https://github.com/root-project/root/issues/12020,1,['clear'],['clear']
Usability,"/test/module.modulemap:3:33: error: cannot emit module dataframe_splitcoll_arrayview: size must be explicitly specified for missing header file ""TwoFloats.h"" ; - [2022-04-02T22:06:39.010Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tree/dataframe/test/module.modulemap:3:33: error: cannot emit module dataframe_splitcoll_arrayview: size must be explicitly specified for missing header file ""TwoFloats.h"" ; - [2022-04-02T22:08:03.499Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tree/dataframe/test/module.modulemap:10:37: error: cannot emit module dataframe_simple: size must be explicitly specified for missing header file ""MaxSlotHelper.h"" ; - [2022-04-02T22:08:03.499Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tree/dataframe/test/module.modulemap:11:36: error: cannot emit module dataframe_simple: size must be explicitly specified for missing header file ""SimpleFiller.h"" ; - [2022-04-02T22:08:03.499Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tree/dataframe/test/module.modulemap:11:36: error: cannot emit module dataframe_simple: size must be explicitly specified for missing header file ""SimpleFiller.h"" ; - [2022-04-02T22:08:03.499Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tree/dataframe/test/module.modulemap:10:37: error: cannot emit module dataframe_simple: size must be explicitly specified for missing header file ""MaxSlotHelper.h"" . ### Warnings:; - [2022-04-02T22:04:44.206Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:186:21: warning: moving a local object in a return statement prevents copy elision [-Wpessimizing-move] ; - [2022-04-02T22:06:05.513Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-04-02T22:06:33.480Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1086732485:1539,Simpl,SimpleFiller,1539,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1086732485,1,['Simpl'],['SimpleFiller']
Usability,"0,; ""Do not recover from input errors"", nullptr, nullptr); OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Print this help text"", nullptr, nullptr); OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,; ""Add directory to library search path"", ""<directory>"", nullptr); OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,; ""Load a library before prompt"", ""<library>"", nullptr); OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,; ""Set the meta command tag, default '.'"", nullptr, nullptr); OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,; ""Set the meta command tag, default '.'"", nullptr, nullptr); OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Do not show startup-banner"", nullptr, nullptr); OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr); OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Enable injection of pointer validity checks"", nullptr, nullptr); OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Print the compiler version"", nullptr, nullptr); OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Enable verbose output"", nullptr, nullptr); #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {; const char *Name;; unsigned Value;; };. struct SimpleEnumValueTable {; const SimpleEnumValue *Table;; unsigned Size;; };; static const SimpleEnumValueTable SimpleEnumValueTables[] = {};; static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);; #endif // SIMPLE_ENUM_VALUE_TABLE; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14628#issuecomment-1933795392:3574,Simpl,SimpleEnumValue,3574,https://root.cern,https://github.com/root-project/root/pull/14628#issuecomment-1933795392,7,['Simpl'],"['SimpleEnumValue', 'SimpleEnumValueTable', 'SimpleEnumValueTables', 'SimpleEnumValueTablesSize']"
Usability,"07f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so; #5 <signal handler called>; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so; #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /hom",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14037:2790,simpl,simplifyFunctionCFGImpl,2790,https://root.cern,https://github.com/root-project/root/issues/14037,2,"['Simpl', 'simpl']","['SimplifyCFGOptions', 'simplifyFunctionCFGImpl']"
Usability,"1) Fine, I'll try a PR next time. However, since I already published in issue here, maybe someone will fix that (there is an assignee chosen).; 2) I found the User's Guide more comprehensive, but I'll try the Manual as well. I can't find a pdf version of the manual on its page, is there any?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284#issuecomment-785864812:166,Guid,Guide,166,https://root.cern,https://github.com/root-project/root/issues/7284#issuecomment-785864812,1,['Guid'],['Guide']
Usability,"1. Detect and support Edge as recognized browser `--web=edge`; 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled; 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work; 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows; 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox; 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16663:160,learn,learn,160,https://root.cern,https://github.com/root-project/root/pull/16663,1,['learn'],['learn']
Usability,"1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values; 2. Protect GetMinimum method for case of log scale; 3. Improve pads options:; 3.1. Always ensure that subpad is clear when drawing stack histograms; 3.2. Reuse existing subpads, no need to divide canvas again; 3.3. Use TPad::Add() method to add histograms to subpads",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15931:220,clear,clear,220,https://root.cern,https://github.com/root-project/root/pull/15931,1,['clear'],['clear']
Usability,1. Fix error with copy and destroy of `TLatex::fTabSize`. Now it is `std::vector` and can be easily copied - if necessary. Also using as stack is much more convenient - just by using `emplace_back` and `pop_back`; 2. Fix bug in `TPie` copy constructor; 3. Fix memory leak with `TGaxis::fModLabs`. Array was never deleted and never copied properly. Extra problem because it may have pointer on list of labels from `TAxis`. Provide workaround for `TGaxis` objects stored before in ROOT files.; 4. Use stack variables while painting - no need to call `new/delete` for simple objects like `TLine` or `TMarker`; 5. Fix memory leak reading old version of TPolyLine; 6. Use `TString::Form` instead of `snprinf`; 7. Use `nullptr`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10843:565,simpl,simple,565,https://root.cern,https://github.com/root-project/root/pull/10843,1,['simpl'],['simple']
Usability,"1. Fix leak with using TGraph2DPainter; 2. Fix leak with ""cont list"" draw option; 3. Use `std::unique_ptr` for all objects created and managed by hist painter, ensure proper deletion; 4. Use `std::vector` instead of plain C arrays, avoid any potential memory leak; 5. Replace plain `Form()` by `TString::Format()`; 6. Simplify some `TIter` loops; 7. Use more `nullptr`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10823:318,Simpl,Simplify,318,https://root.cern,https://github.com/root-project/root/pull/10823,1,['Simpl'],['Simplify']
Usability,"1. Fix problem with fragmented websocket messages - some browsers can split messages on 120KB chunks. Now message merged together before delivered to the user.; 2. Solve problem with Google Chrome run in headless mode. ; Now chrome browser can run in headless mode without any special debugging flags, which opens some http ports. Now THttpServer provides special ""dummy"" script, which timedout until batch job is not finished.; 3. Try to correctly handle situation when browser hangs and does not reply for a long time. After pre-configured timeout (default 50 sec) such browser application will be closed.; 4. Let identify connecting websocket at the very beginning - with the first connect request. Allows to reject not allowed connection. Also for the future simplifies re-connection.; 5. In TWebWindow clearly identify batch job connection, let reuse if for consequent jobs, close it after 20 sec of idle time; 6. Use std::recursive_mutex in WebWindowsManager to protect methods which creates THttpServer / creates new window / starts new web browser. Comment out special manager guard - useless without special threading functionality; 7. Correspondent changes in JSROOT. ; 8. Special handling of 2d/3d canvas when producing PNG images - now is more consistent, no need to use THREE.SVGRenderer for that; 9. Add canvas size to the RPadDisplayItem class, used only in batch mode to configure image size; 10. Use workaround with static mutex to protect I/O in canvas painter in multi-threaded environment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2603:763,simpl,simplifies,763,https://root.cern,https://github.com/root-project/root/pull/2603,2,"['clear', 'simpl']","['clearly', 'simplifies']"
Usability,"1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets.; 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed; 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects.; 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes; 5. Let store geometry viewer settings in root macro, which may include geometry itself.; 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server; 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time; 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12463:100,clear,cleared,100,https://root.cern,https://github.com/root-project/root/pull/12463,3,"['Clear', 'clear']","['Clear', 'ClearOnClose', 'cleared']"
Usability,1. Introduce new `EvalBackend()` command argument that will supersede `BatchMode()`; 2. Improve documentation of `RooAbsPdf::fitTo()` and `createNLL()`; 3. Make it clear what functions need to be overload when one wants to customize the behavior of `RooAbsPdf::fitTo()` and `createNLL()` polymorphically; 4. Add documentation for the new `EvalBackend()` command argument. More detail in the commit descriptions. This is how the new documentation on the evaluation backends will look like in the doxygen (I fixed the word-order-typo in the first sentence after taking the screenshot...):. ![eval_backend](https://github.com/root-project/root/assets/6578603/f23ef6e1-2cd2-4291-b5f5-da731e5883fd),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12716:164,clear,clear,164,https://root.cern,https://github.com/root-project/root/pull/12716,1,['clear'],['clear']
Usability,"1. Let run batch job without creating temporary HTML files. File content preserved in memory and just loaded directly into browser.; - in CEF one need special resource handler; - in QWebEngine HTML code can be directly loaded into browser; 2. Support PDF file creation in CEF and QWebEngine; 3. Simplify custom http handling in CEF, no need to use custom scheme handler singleton. Now many THttpServer instances can be used with CEF.; 4. Update JSROOT with latest fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6275:295,Simpl,Simplify,295,https://root.cern,https://github.com/root-project/root/pull/6275,1,['Simpl'],['Simplify']
Usability,"1. Memory leak - when ""pie"" draw option is used, created TPie object is not destroyed; 2. When tf3 draw option provided to histogram, it crashes `h3->Draw(""tf3"")` ; 3. ""TF3"" and ""ISO"" strings does not correctly suppressed from options when decoded; 4. TF3 pointer remains in global variable and not cleared when TF3 is deleted",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4943:299,clear,cleared,299,https://root.cern,https://github.com/root-project/root/pull/4943,1,['clear'],['cleared']
Usability,"1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` ; 2. Remove minified scripts - no real gain in performance, only extra step in deployment; 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. ; 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well; 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: ; 1. Fix more problems with `python3` - see attached image from my notebook; ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png); 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12484:820,usab,usable,820,https://root.cern,https://github.com/root-project/root/pull/12484,1,['usab'],['usable']
Usability,"1. Provide in RWebWindow methods to correctly work with connections, provided by master; 2. Introduce public `RWebWindow::GetConnections()` method, simplify reply logic; 3. Handle reply to multiple clients from geometry hierarchy widget - change top or change search should be handled",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12933:148,simpl,simplify,148,https://root.cern,https://github.com/root-project/root/pull/12933,1,['simpl'],['simplify']
Usability,"1. String always used as storage for `RColor`. Following values are supported:; * `#00FF00` - which is standard RGB ; * `#00FF0088` - standard RGBA; * `grey` - color name; * `[0.5]` - ordinal value to select color from current palette ; * `auto` - automatic color, calculated on client side using current palette and drawable index; 2. By this change simplify CSS syntax - now any color value can be assigned as; ```; line_color: blue; fill_color: auto; marker_color: [0.3]; ``` ; 3. Introduce `RAttrOnFrame`. It has extra `onframe` attribute which indicates where drawable drawn. ; Implement first for `RLine` class, which can be now inside or outside frame; 4. Support user coordinates for drawable inside frame, provide testing with `RLine` in draw_frame.cxx tutorial; 5. Let configure all margins with single parameter, called `margin_all` in CSS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8109:351,simpl,simplify,351,https://root.cern,https://github.com/root-project/root/pull/8109,1,['simpl'],['simplify']
Usability,"1. Support linear and radial gradients in JSROOT; 2. Extend `TColor::GetColor()` methods to use optional alpha parameter; 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects; 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case; 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary.; 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT.; 7. Use inherited constructors for gradient classes; 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14002:207,simpl,simplify,207,https://root.cern,https://github.com/root-project/root/pull/14002,2,"['Simpl', 'simpl']","['Simplify', 'simplify']"
Usability,"1. This automatically provides setter/getter methods and simplifies; access to fields. Now `RLine` inherit from `RAttrLine` and API changes are:; before: `line->AttrLine().SetWidth(10)`; now: `line->SetLineWidth(10)`; One still can do: `line1->AttrLine() = line2->AttrLine()` while RAttrLine class still provides method like; `RAttrLine& AttrLine() { return *this; }` . 2. Same done for RAttrFill, RAttrText, RAttrMarker and with used classes.; 3. Adjust tutorials and JSROOT code.; 4. Change RLegend class - split RLegend::REntry on two subclasses",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8274:57,simpl,simplifies,57,https://root.cern,https://github.com/root-project/root/pull/8274,1,['simpl'],['simplifies']
Usability,1. Use hex string for RGB like 01FFC5; 2. Use also hex for color alpha like FF; 3. Make easier to compose result color; 4. Support plain SVG names - need to provide predefined list; 5. Reintroduce methods for HLS; 6. Provide different Setter/Getter/Clear methods; 7. Move RColor testing to correspondent library; 8. Update JSROOT code - for RColor but also recent fixes in v6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4456:249,Clear,Clear,249,https://root.cern,https://github.com/root-project/root/pull/4456,1,['Clear'],['Clear']
Usability,"1. With the CEF instead of http/https local scheme handler is used. Means, THttpServer used without opening real HTTP port. ; 2. Use provided CEF messaging for direct communication between ROOT application and JS code. This channel if bidirectional and replaces websocket, used with normal browser. Longpoll remains as fallback solution.; 3. Enable batch mode with the CEF. When root started with ""root -b"" flag, rendering performed in memory - no any window is created. Not really clear which graphical libraries required - seems to be Xorg is still need to be linked. ; 4. First draft for Canvas::SaveAs() method for image creation. Both SVG and PNG are supported, several others (BMP/JPEG) can be provided. Worked in the same way for batch and gui mode. ; 5. draw_v6.cxx macro from tutorial works both in gui and batch mode and show usage of new Canvas::SaveAs() method",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/797:482,clear,clear,482,https://root.cern,https://github.com/root-project/root/pull/797,1,['clear'],['clear']
Usability,"1. Y-axis range with histogram without content; 2. Do not create title when not required (especially for TGraph); 3. Provide ""Clear canvas"", ""Clear pad"" and ""Interrupt"" menu items; 4. Editing line attributes in GED - correctly update on ROOT side; 5. Handling of complex TLatex like `{a}_{b}^{e}^{2}`; 6. Adjust several tutorials; 7. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11705:126,Clear,Clear,126,https://root.cern,https://github.com/root-project/root/pull/11705,2,['Clear'],['Clear']
Usability,"1.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection; 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer; 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator; ```; for `-O0`, while for `-O1`:; ```; 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator; 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection; 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions; 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer; 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer; 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler; 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots; 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing; 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis; 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6; 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7; 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4; 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3; 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5; 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2; 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement; 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination; 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization; ```; -> mostly register allocation and `instco",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9312#issuecomment-976463242:1501,Simpl,Simple,1501,https://root.cern,https://github.com/root-project/root/issues/9312#issuecomment-976463242,1,['Simpl'],['Simple']
Usability,"1.Special handling of `RFrame` - when drawable required such object, it autoamitically created and inserted in list of primitives before such drawable . 2. Introduce `RPaletteDrawable`. It contains own instance of `RPalette`. `RHistDrawable` use such palette when it appears in list of priitives. `RHistDrawable` also controls drawing of `RPalette`. `RPalette` can be invisible. Position of `RPaletteDrawable` defined relatively to `RFrame` . 3. Provide drawing of `RPalette` in JSROOT. Fully redesign code how palette used in JSROOT - now it is much simpler compare to v6. 4. Provide `draw_rh2_colz.cxx` example which demonstrates palette drawing. One can see produced output on the image.; ![Canvas](https://user-images.githubusercontent.com/4936580/76108743-6d08ef00-5fdb-11ea-89de-299f2d64f1dc.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5098:551,simpl,simpler,551,https://root.cern,https://github.com/root-project/root/pull/5098,1,['simpl'],['simpler']
Usability,"14, 1):; p.process_class = i; ROOT.celeritas.to_cstring(p.process_class); ```; I get:. ```txt; to_cstring ImportPhysicsVectorType called with 0 unknown; to_cstring ImportPhysicsVectorType called with 1 linear; to_cstring ImportPhysicsVectorType called with 2 log; to_cstring ImportPhysicsVectorType called with 3 free; to_cstring ImportTableType called with 4 ionisation_subsec; to_cstring ImportTableType called with 5 csda_range; to_cstring ImportTableType called with 6 range; to_cstring ImportTableType called with 7 secondary_range; to_cstring ImportTableType called with 8 inverse_range; to_cstring ImportTableType called with 9 lambda; to_cstring ImportTableType called with 10 sublambda; to_cstring ImportTableType called with 11 lambda_prim; to_cstring ImportProcessType called with 12 ucn; to_cstring ImportProcessClass called with 13 annihilation; ```. i.e. the *same* code line given the *same* data members (and thus always the *same* type), call 3 different overloads over the loop iterations. (Funnily running the loop in reverse order leads to the expected/correct executions). I could not reproduce this instability with my simple example. . ```c++; #include <stdio.h>; #include <string>. enum class EOne; {; a,; b,; c,; d; };. enum class ETwo; {; a = 2,; b,; c,; d; };. enum class EThree; {; a = 3,; b,; c,; d; };. struct Holder; {; EOne one;; ETwo two;; EThree three;. void SetTwo(int value); {; two = (ETwo)value;; }; };. std::string to_string(EOne value); {; fprintf(stderr, ""Calling to_string for enum EOne with %d\n"", (int)value);; std::string name(""One: "");; name += '0'+(int)value;; return name;; }. std::string to_string(ETwo value); {; fprintf(stderr, ""Calling to_string for enum ETwo with %d\n"", (int)value);; std::string name(""Two: "");; name += '0'+(int)value;; return name;; }. std::string to_string(EThree value); {; fprintf(stderr, ""Calling to_string for enum EThree with %d\n"", (int)value);; std::string name(""Three: "");; name += '0'+(int)value;; return name;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7077:1908,simpl,simple,1908,https://root.cern,https://github.com/root-project/root/issues/7077,1,['simpl'],['simple']
Usability,"19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767; #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555; #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115; #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76; #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532; #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663; #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195; #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823; #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096; #28 0x00007fffeebcb862 in clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:7106,Clear,ClearDiagClient,7106,https://root.cern,https://github.com/root-project/root/pull/2776,2,['Clear'],['ClearDiagClient']
Usability,1T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11027#issuecomment-1543945512:1417,simpl,simply,1417,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512,5,['simpl'],['simply']
Usability,"268370ea83e0a99c729 and the commit message does not mention this change explicitly (maybe a consequence of the introduction of the usage of `Voxels`?). The [corresponding line for the non-sampling method is in `TGeoChecker::MakeCheckOverlap` (l.1173) and not commented out](https://github.com/root-project/root/blame/master/geom/geompainter/src/TGeoChecker.cxx#L1173), which would indicate that the intended original usage is still valid. We (CBMROOT) stumbled upon this as we started to find for some of our geometries overlaps with total integrated volume in the order of `10^-6 to 10^-10 cm3` when changing the sampling points number. We first started by adding exceptions in our CI but the list quickly grew as the sampling position is different with each change in the fully assembled geometry volume.; Having/restoring the possibility to ignore the ""really small"" overlaps would cure our problem with a single parameter. Proposed solutions:; - either un-comment the line to re-enable the threshold if it is not bringing other bugs (see simple patch in **Reproducer**).; => This seems to work for me locally with a fresh copy of the master under Ubuntu 20.04; - or at least update the documentation to indicate that the parameter `ovlp` is used only in standard mode and ignored in sampling mode. --------------------------------; Potential related bug: some of these really small overlaps appear only when the number of samples is increased but disappear if it is further increased.; However for a given number the list of overlaps is stabled over re-running the macro (new ROOT session at each time).; The new overlaps also appear mostly in the ""last volumes in the geometry"" to be tested.; So it could be that something is not so stable in the sequence of random points:; - first volume getting always mostly the same points independent of the number of samples ; - while last volume getting set of points depending highly on number of samples. I did not manage to reliably reproduce it howev",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14675:2113,simpl,simple,2113,https://root.cern,https://github.com/root-project/root/issues/14675,1,['simpl'],['simple']
Usability,"28105\include\xutility(546,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Analysis\ValueTracking.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Analysis\LLVMAnalysis.vcxproj] ; - [2021-04-07T10:00:10.394Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/Lex/MacroInfo.h(433,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\InterfaceStubFunctionsConsumer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2021-04-07T10:00:10.394Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility(208,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\SimplifyCFG.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2021-04-07T10:00:15.528Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\bitset(208,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXReplaceImageHandles.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2021-04-07T10:03:59.574Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits(1420,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Analysis\TargetTransformInfo.cpp) [C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7795#issuecomment-814787481:3056,Simpl,SimplifyCFG,3056,https://root.cern,https://github.com/root-project/root/pull/7795#issuecomment-814787481,1,['Simpl'],['SimplifyCFG']
Usability,"2: /usr/lib64/libxml2.so (found version ""2.10.3""); -- Linker detection: GNU ld; -- Performing Test C_SUPPORTS_FPIC; -- Performing Test C_SUPPORTS_FPIC - Success; -- Performing Test CXX_SUPPORTS_FPIC; -- Performing Test CXX_SUPPORTS_FPIC - Success; -- Building with -fPIC; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_WARNINGS'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME; -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW; -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed; -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW; -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed; -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG; -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success; -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG; -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success; -- Performing Test CXX_SUPPORTS_IMPLICIT_FAL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:2424,clear,clearing,2424,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,1,['clear'],['clearing']
Usability,3/1231 Test #367: gtest-tree-dataframe-test-dataframe-histomodels ..................... Passed 19.30 sec; Start 371: gtest-tree-dataframe-test-dataframe-utils; 394/1231 Test #371: gtest-tree-dataframe-test-dataframe-utils ........................... Passed 1.38 sec; Start 372: gtest-tree-dataframe-test-dataframe-report; 395/1231 Test #370: gtest-tree-dataframe-test-dataframe-regression ...................... Passed 12.11 sec; Start 373: gtest-tree-dataframe-test-dataframe-splitcoll-arrayview; 396/1231 Test #372: gtest-tree-dataframe-test-dataframe-report .......................... Passed 0.79 sec; Start 374: gtest-tree-dataframe-test-dataframe-redefine; 397/1231 Test #373: gtest-tree-dataframe-test-dataframe-splitcoll-arrayview ............. Passed 1.07 sec; Start 375: gtest-tree-dataframe-test-dataframe-definepersample; 398/1231 Test #374: gtest-tree-dataframe-test-dataframe-redefine ........................ Passed 3.63 sec; Start 376: gtest-tree-dataframe-test-dataframe-simple; 399/1231 Test #375: gtest-tree-dataframe-test-dataframe-definepersample ................. Passed 3.06 sec; Start 377: gtest-tree-dataframe-test-dataframe-helpers; 400/1231 Test #368: gtest-tree-dataframe-test-dataframe-interface ....................... Passed 21.83 sec; Start 378: gtest-tree-dataframe-test-dataframe-vecops; 401/1231 Test #378: gtest-tree-dataframe-test-dataframe-vecops .......................... Passed 3.95 sec; Start 379: gtest-tree-dataframe-test-dataframe-snapshot; 402/1231 Test #377: gtest-tree-dataframe-test-dataframe-helpers ......................... Passed 8.48 sec; Start 380: gtest-tree-dataframe-test-dataframe-display; 403/1231 Test #365: gtest-tree-dataframe-test-dataframe-cache ........................... Passed 44.39 sec; Start 381: gtest-tree-dataframe-test-dataframe-ranges; Start 382: gtest-tree-dataframe-test-dataframe-leaves; 405/1231 Test #381: gtest-tree-dataframe-test-dataframe-ranges .......................... Passed 2.10 sec; Start 383: gtest-tree-dataf,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:2472,simpl,simple,2472,https://root.cern,https://github.com/root-project/root/pull/10300,1,['simpl'],['simple']
Usability,"304cc8f949e40693d63b855b4b24bc81fa729; # bad: [0f279c7a5c34eaae797c325c18614def21eba921] Revert ""patch"" it wass my mistake inusing git; git bisect bad 0f279c7a5c34eaae797c325c18614def21eba921; # bad: [56d228a14e3631de157ae98dd61d21193e4502d5] [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes; git bisect bad 56d228a14e3631de157ae98dd61d21193e4502d5; # good: [3adb89bb9f8e73c82787babb2f877fece7394770] [ThinLTO] Make cloneUsedGlobalVariables deterministic; git bisect good 3adb89bb9f8e73c82787babb2f877fece7394770; # good: [af4451eb4f38ce492ca38add91c8378f32b93eca] [NFC] Make TrailingObjects non-copyable/non-movable; git bisect good af4451eb4f38ce492ca38add91c8378f32b93eca; # good: [3c4cdd0b6a6fd760707be9b5dec32378ec55c549] [mlir] ExecutionEngine needs special handling for COFF binaries; git bisect good 3c4cdd0b6a6fd760707be9b5dec32378ec55c549; # good: [ab5b00ada9e77437ed2c76f73cfb8481bb9826a5] Revert ""[Driver][Windows] Support per-target runtimes dir layout for profile instr generate""; git bisect good ab5b00ada9e77437ed2c76f73cfb8481bb9826a5; # first bad commit: [56d228a14e3631de157ae98dd61d21193e4502d5] [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes; ```. ```; 56d228a14e3631de157ae98dd61d21193e4502d5 is the first bad commit; commit 56d228a14e3631de157ae98dd61d21193e4502d5; Author: Juneyoung Lee <aqjune@gmail.com>; Date: Tue Feb 23 11:46:59 2021 +0900. [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes. This is a simple patch to update SimplifyCFG's passingValueIsAlwaysUndefined to inspect more attributes. A new function `CallBase::isPassingUndefUB` checks attributes that imply noundef. Reviewed By: spatel. Differential Revision: https://reviews.llvm.org/D97244. llvm/include/llvm/IR/InstrTypes.h | 11 +++++++++++; llvm/lib/Transforms/Utils/SimplifyCFG.cpp | 6 +++---; llvm/test/Transforms/SimplifyCFG/UnreachableEliminate.ll | 10 ++++++----; 3 files changed, 20 insertions(+), 7 deletions(-); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9547#issuecomment-1011201311:3187,Simpl,SimplifyCFG,3187,https://root.cern,https://github.com/root-project/root/issues/9547#issuecomment-1011201311,5,"['Simpl', 'simpl']","['SimplifyCFG', 'simple']"
Usability,"5 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer; 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection; 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization; 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass; ```; for `-O0`, while for `-O1`:; ```; 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions; 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection; 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer; 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler; 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator; 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis; 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing; 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3; 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2; 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6; 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5; 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4; 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7; 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination; 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare; 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting; 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation; 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interproced",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9312#issuecomment-976463242:3680,Simpl,Simple,3680,https://root.cern,https://github.com/root-project/root/issues/9312#issuecomment-976463242,1,['Simpl'],['Simple']
Usability,62-opt/lib/libCore.so; #3 0x00007f6cdecd061c in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #4 <signal handler called>; #5 0x0000000001209080 in ?? (); #6 0x00007f6cdec52005 in TList::FindObject(TObject const*) const () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #7 0x00007f6cdec5237c in TList::Clear(char const*) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #8 0x00007f6cdec50a01 in THashTable::Clear(char const*) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #9 0x00007f6cdec504dd in THashList::Clear(char const*) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #10 0x00007f6cdec9d1a7 in TListOfDataMembers::Unload() () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #11 0x00007f6cdec7f2d0 in TClass::SetUnloaded() () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #12 0x00007f6cdec4a574 in ROOT::RemoveClass(char const*) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #13 0x00007f6cdec9926e in ROOT::TGenericClassInfo::~TGenericClassInfo() () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15964#issuecomment-2202499805:1856,Clear,Clear,1856,https://root.cern,https://github.com/root-project/root/issues/15964#issuecomment-2202499805,1,['Clear'],['Clear']
Usability,"7 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::Gl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1973#issuecomment-394348081:1474,clear,clearing,1474,https://root.cern,https://github.com/root-project/root/pull/1973#issuecomment-394348081,8,['clear'],['clearing']
Usability,"705/commits/365bd46563c025a5341b48e6d199b2aa4be76c4e. I think we need to collect the prefix stack if we want to be able to filter out, for example, messages from MnLineSearch that happen inside MnMigrad, but not those that happen inside MnHesse. That's why I think the prefix stack should stay. It is also fast, since only a couple of pointers are copied around. However, there is no need to show the full stack of prefixes. By default, MnPrint could just show the prefix from the innermost scope. I added the static method `MnPrint::ShowPrefixStack(bool yes)` to toggle showing the full prefix or not. The default is off so that the messages are not too long. I also now implemented filtering of messages based on the value of the prefix stack. When no filters are set, all messages are shown. Once a filter is set, only messages that match the filter are shown. This is done with strings, using `MnPrint::AddFilter` and `MnPrint::ClearFilter` to reset the filters. Filtering works like `grep` on the full prefix, the message is shown if any of the filter strings match. To only see messages from `MnHesse`, one can do:; ```c++; MnPrint::AddFilter(""MnHesse"");; ```; To only see messages from `MnHesse` called from VariableMetrixBuilder, one can do:; ```c++; MnPrint::AddFilter(""VariableMetricBuilder:MnHesse"");; ```; To only match the beginning of the prefix string, use ""^"". For example,; ```c++; MnPrint::AddFilter(""^MnHesse"");; ```; only matches direct execution of MnHesse, but not MnHesse called by MnMigrad. It also works with substrings. To see all messages from any Gradient calculator, one can do:; ```c++; MnPrint::AddFilter(""Gradient"");; ```; to match AnalyticalGradientCalculator, Numerical2PGradientCalculator, and InitialGradientCalculator. Filtering is not implemented in a very efficient way to keep the code simple, but the performance drop is opt-in. If no filters are used, then there is no performance loss. The filters work correctly whether or not the full prefix is displayed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-733046580:2010,simpl,simple,2010,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-733046580,1,['simpl'],['simple']
Usability,8-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! . ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory_py/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runatlasaod](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runatlasaod/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runcms310](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runcms310/); - [projectroot.roottest.root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-589606883:1218,simpl,simple,1218,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-589606883,1,['simpl'],['simple']
Usability,"8079454f8 <col:64, line:180:5>; `-BinaryOperator 0x5578079454d0 <line:179:7, col:29> 'enum cling::Value::EStorageType' lvalue '='; |-MemberExpr 0x557807945498 <col:7, col:13> 'enum cling::Value::EStorageType' lvalue .m_StorageType 0x5578079450f8; | `-DeclRefExpr 0x557807945470 <col:7> 'class cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'; `-DeclRefExpr 0x5578079453f8 <col:29> 'enum cling::Value::EStorageType' EnumConstant 0x557807945428 'kUnsupportedType' 'enum cling::Value::EStorageType'; CXXMethodDecl 0x55780793f4a0 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:270:5, line:272:5> line:270:7 imported in Cling_Runtime_Extra.Value.h hidden simplisticCastAs 'T (void) const'; `-CompoundStmt 0x557807945ac0 <col:32, line:272:5>; `-ReturnStmt 0x557807945aa8 <line:271:7, col:36>; `-CallExpr 0x557807945a70 <col:14, col:36> '<dependent type>'; |-CXXDependentScopeMemberExpr 0x557807945578 <col:14, col:26> '<dependent type>' lvalue ->cast; `-UnaryOperator 0x557807945558 <col:31, col:32> 'const class cling::Value' lvalue prefix '*'; `-CXXThisExpr 0x557807945518 <col:32> 'const class cling::Value *' this; CXXConstructorDecl 0x55780793fb58 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:161:5, line:165:5> line:161:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (void *, class cling::Interpreter &, enum cling::Value::EStorageType)'; |-ParmVarDecl 0x55780793fd60 <col:11, col:17> col:17 imported in Cling_Runtime_Extra.Value.h hidden used QualTypeAsOpaquePtr 'void *'; |-ParmVarDecl 0x55780793fde0 <col:38, col:51> col:51 imported in Cling_Runtime_Extra.Value.h hidden used Interp 'class cling::Interpreter &'; |-ParmVarDecl 0x55780793fe58 <col:59, col:72> col:72 imported in Cling_Runtime_Extra.Value.h hidden used stType 'enum cling::Value::EStorageType'; |-CXXCtorInitializer Field 0x557807944c50 'm_Storage' 'union cling::Value::Storage'; | `-CXXConstructExpr 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2859#issuecomment-433234889:11073,simpl,simplisticCastAs,11073,https://root.cern,https://github.com/root-project/root/pull/2859#issuecomment-433234889,1,['simpl'],['simplisticCastAs']
Usability,"8510). The inital check for the compiler was. enable_language(Fortran OPTIONAL). This does not set the the CMAKE_Fortran_COMPILER variable (or sets it to; NOTFOUND) if a Fortran compiler is not found, but still marks the; Fortran language as being enabled for the current project. This broke; the settings for BLAS/LAPACK. The second attempt (bb40ede3941d0b4f2db4e23d5f9c32b221eb5fac) was to use. check_language(Fortran); if(CMAKE_Fortran_COMPILER); enable_language(Fortran); endif(). This does not find the Fortran compiler corresponding to the used C++; compiler. Cmake has some mechanism that if the C++ compiler is a GNU; compiler, it would also prefer GNU Fortran compilers. However, as the; check_language test is running in a separate process it would not know; about the C++ compiler. This is a problem in a set-up with executables; like:. /opt/newgcc/g++; /opt/newgcc/gfortran; /usr/bin/f95 (link to gfortran); /usr/bin/g++; /usr/bin/gfortran. Two versions of GCC are installed, one by the system, and one more; recent version in a separate directory. The directory to the newer; version is in the environment variable PATH before /usr/bin. In this; case the test from above (second attempt) would use /usr/bin/f95 as the; Fortran compiler, because Cmake usually prefers the executable f95 over; gfortran. This causes problems in case the two Fortran compilers are not; ABI compatible, i.e., gfortran 4.4 installed by the system vs. 4.9 as a; slightly more recent version. A simple enable_language (as in the; initial version) would correctly use /opt/newgcc/gfortran in this case.; This had to be worked around by setting the environment variable; FC=gfortran before running Cmake. To fix this, check_language is only used to determine whether a Fortran; compiler exists at all. If a compiler is found, then the; CMAKE_Fortran_COMPILER variable is reset, and enable_language again; performs a search of the compiler, this time prefering a compiler from; the same vendor as the C++ compiler.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/891:1895,simpl,simple,1895,https://root.cern,https://github.com/root-project/root/pull/891,1,['simpl'],['simple']
Usability,": ‘%s’ directive output may be truncated writing up to 63 bytes into a region of size 61 [-Wformat-truncation=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:696:48: warning: ‘%s’ directive output may be truncated writing up to 1024 bytes into a region of size 64 [-Wformat-truncation=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] . And 179 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.cling.dict.ROOT-9185.roottest_cling_dict_ROOT_9185_ROOT9185](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.cling.dict/ROOT-9185/roottest_cling_dict_ROOT_9185_ROOT9185/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1851#issuecomment-408947574:2306,clear,clearing,2306,https://root.cern,https://github.com/root-project/root/pull/1851#issuecomment-408947574,1,['clear'],['clearing']
Usability,"::initialize (this=0x8ea890, JD=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/LLJIT.cpp:215; #12 0x00007fffeeace5f9 in llvm::orc::LLJIT::initialize (this=0x8eb360, JD=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:155; #13 0x00007fffeeaccc6c in cling::IncrementalJIT::runCtors (this=0xfffffffffffffe00) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalJIT.h:74; #14 cling::IncrementalExecutor::runStaticInitializersOnce (this=0x698d80, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:260; #15 0x00007fffeea63d43 in cling::Interpreter::executeTransaction (this=<optimized out>, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1714; #16 0x00007fffeea6da53 in cling::IncrementalParser::commitTransaction (this=0x4f6670, PRT=..., ClearDiagClient=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:675; #17 0x00007fffeea5dd71 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffb0c0) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:116; #18 cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffb0c0) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:106; #19 0x00007fffee9f9d90 in ClingMemberIterInternal::DCIter::DCIter (this=0x7fffffffb140, DC=<optimized out>, interp=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TClingMemberIter.cxx:33; #20 0x00007fffee9f649b in TClingMemberIter::TClingMemberIter (this=0x7fffffffb128, interp=0x0, DC=0x80) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TClingMemberIter.h:145; #21 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffffb128, interp=0x0, DC=0x80, selection=TDictionary::EMemberSelection::kAlsoUsingDecls) at /home/jhahnfel/ROOT/llvm13/src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1097659822:4423,Clear,ClearDiagClient,4423,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1097659822,1,['Clear'],['ClearDiagClient']
Usability,":InitStreaming() and BuildOld for BeamFlux; in BuildOld look at base User::TrackerVtxBase (and record pointer value in baseclass); calls Init on the TStreamerElement base; this triggers the creation of the TClass for User::TrackerVtxBase; but BuildOld kept a stale pointer to the old TClass (was baseclass variable).; ```. Solution: replace raw pointer by a TClassRef. TCompInfo::Update did a TClass::GetClass for all type that were not classes :(; Usually it is just a waste of time.; In this case, one such type is User::TContext::Time (an enum) use as part; of User::TContext .. Consequently, before the dictionary TClass for User::TContext was constructed,; another class requested the update of the emulated StreamerInfo for the (still); emulated User::TContext, this in turn provoked the (unnecessary) call to; TClass::GetClass on ‘User::TContext::Time’ which provoked the creation of; the TClass for User::TContext … one of the steps is to absorb the existing; StreamerInfo (including the one being updated) and clear them (i.e. delete; the TCompInfo array) … upon return the result of the TClass::GetClass (a nullptr); is stored in deleted memory. Solution: Don’t call TClass::GetClass on non-type. ```; User::TDatum is loaded; provokes update of a StreamerInfo with a TTrueParticle; *spurrious* InitStreaming provoke need for TTrueParticle TClass; start consuming the TTrueParticle TProtoClass; needs the TTrueVertex TClass; provokes update of a StreamerInfo with a TBaseObject; *spurrious* InitStreaming provoke need for TBaseObject TClass; needs the TTrueParticle TClass; Consumes the TTrueParticle TProtoClass; return fine with a good TTrueVertex TClass; continue using the already “cleared” TTrueParticle TProtoClass; ```. Solution: significant update of TStreamerElement::Update and TStreamerBase::Update; to call TStreamerBase::InitStreamer if and only if there was a change in the base; class pointer, and to call TClass::GetClass only if there is a chance of finding; a new TClass ….",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4389:2316,clear,cleared,2316,https://root.cern,https://github.com/root-project/root/pull/4389,2,['clear'],['cleared']
Usability,":char_traits<char>, std::allocator<char> >)::{lambda()#1}, void>::Callbacks () from /usr/lib/llvm/11/lib64/libLLVM-11.so; (gdb) bt; #0 0x00007fffee8b09a4 in llvm::detail::UniqueFunctionBase<llvm::Expected<unsigned long>>::CallbacksHolder<llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}, llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}, void>::Callbacks () from /usr/lib/llvm/11/lib64/libLLVM-11.so; #1 0x00007fffe3871543 in std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) () from /usr/lib/root/6.24/lib/libCling.so; #2 0x00007fffe38610dd in cling::IncrementalExecutor::getPointerToGlobalFromJIT(llvm::StringRef) const () from /usr/lib/root/6.24/lib/libCling.so; #3 0x00007fffe37e8176 in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) () from /usr/lib/root/6.24/lib/libCling.so; #4 0x00007fffe3738a79 in TCling::TCling(char const*, char const*, char const* const*) () from /usr/lib/root/6.24/lib/libCling.so; #5 0x00007fffe373a9a1 in CreateInterpreter () from /usr/lib/root/6.24/lib/libCling.so; #6 0x00007ffff05eaafd in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8180:1662,Simpl,SimpleCompiler,1662,https://root.cern,https://github.com/root-project/root/issues/8180,2,['Simpl'],['SimpleCompiler']
Usability,"; std::cout << i << "" memory usage "" << pinfo.fMemResident; << "" "" << pinfo.fMemVirtual << std::endl;; }; if (i==0); startMemResident=pinfo.fMemResident;; if (i==(niters-1)); endMemResident=pinfo.fMemResident;; }. int deltaMem=endMemResident-startMemResident;; double avgMem=(double)deltaMem/niters;; cout << endl << ""Memory increase = "" << deltaMem << endl;; cout << ""Avg increase per iteration = "" << avgMem << endl;; }; ```. The increase can be completely eliminated by not using the memory pool for RooDataSet. It is remarkable that the memory pool itself doesn't seem to be the problem. In fact, one can replace `RooDataSet::operator new` and `RooDataSet::operator delete` such that the memory pool is still active, but we don't use the addresses it gives us and pretend to deallocate immediately after allocating. This can be achieved by substituting the following code in [RooDataSet.cxx](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooDataSet.cxx#L143):. ```C++; void* RooDataSet::operator new (size_t bytes) {; // pretend we use the memory pool to demonstrate the pool itself is not the problem; memPool()->deallocate(memPool()->allocate(bytes));. return ::operator new(bytes);; }. void RooDataSet::operator delete (void* ptr) { ::operator delete(ptr); }; ```. With this change, the memory increase is completely gone, at least for my setup. To me it is not clear why using the memory pool causes the memory increase. The memory increase happens about every 5000 iterations and is exactly 624 bytes. However, these events are uncorrelated with special events in the memory pool, i.e. adding a new arena to the memory pool. Could it be that without using the addresses suggested by the default allocator, we get some heap fragmentation which causes the memory reserved by the process to go up, while we don't have an actual increase of allocated memory?. The solution is probably to avoid using the memory pool for RooDataSet. My setup is ROOT master on Arch Linux.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8323:2592,clear,clear,2592,https://root.cern,https://github.com/root-project/root/issues/8323,1,['clear'],['clear']
Usability,"<!--; A clear and concise description of what the wrong behavior is.; -->. Hi ROOTers!. I've recently encountered some issues with using TMVA in JupyROOT ([here is an example notebook](https://nbviewer.jupyter.org/github/iml-wg/tmvatutorials/blob/master/TMVAinJupyter_FullTutorial.ipynb), I haven't found much documentation besides this). I'm basically able to follow the structure of this example, but I run into issues when calling `TMVA.DataLoader.AddSignalTree()`. Since I'm working with a Jupyter notebook, I'll provide a plaintext version of the code below, followed by the error, but I'm also including links to the relevant files for running this -- the input file, the notebook file, and Yaml and plaintext files detailing the `conda` setup used to create the environment. I can set up a Notebook Viewer if that would be helpful, though I think that requires hosting the notebook somewhere like in a GitHub repo. **Files:**; [Input file](https://drive.google.com/file/d/1j-oDBQo4RlSvzS4Ved7oRWTpetGBzgF1/view?usp=sharing); [Notebook file](https://drive.google.com/file/d/1se_HHE1YcwhwEsrihEeFq2llPNtEo9xc/view?usp=sharing); [YAML file for conda](https://drive.google.com/file/d/1cFovrs1n3A3ap-n9TDjvcJCXtQvNkRSY/view?usp=sharing) (made via `conda env export --name ENVNAME > envname.yml`); [TXT file for conda](https://drive.google.com/file/d/1vi96YXfesiLvO9lvm7fPix8CY3s4JDlS/view?usp=sharing) (made via `conda list --explicit > pkgs.txt`, so this is OS-specific). **Text version of code:**; ```; import ROOT as rt; # ipywidgets for nice visualizations, as per tutorial setup; !jupyter nbextension enable --py widgetsnbextension; # now let's enable JsMVA; %jsmva on. outputFile = rt.TFile( ""TMVA.root"", 'RECREATE' ); rt.TMVA.Tools.Instance(); factory = rt.TMVA.Factory(""TMVAClassification"", TargetFile=outputFile,; V=False, Color=True, DrawProgressBar=True, Transformations=[""I"", ""D"", ""P"", ""G"", ""D""],; AnalysisType=""Classification""). dataset = ""tmva_class_example"" #the dataset name; loader ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6657:8,clear,clear,8,https://root.cern,https://github.com/root-project/root/issues/6657,1,['clear'],['clear']
Usability,"<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6; #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29; #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386; #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65; #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174; #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126; #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256; ===========================================================. Root > ; ```; ### Expected behavior; Do not crash if there is nothing to undo. ### To Reproduce; Start root prompt. Press the undo shortcut. (CTRL+_). ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10180:6566,undo,undo,6566,https://root.cern,https://github.com/root-project/root/issues/10180,2,['undo'],['undo']
Usability,"= 5000; ROOT.RDataFrame(nentries).Define(""b1"", ""42"")\; .Define(""b2"", ""42"")\; .Define(""b3"", ""42"")\; .Snapshot(treename, filename, [""b1"", ""b2"", ""b3""], opts). histoproxies_spark = [; SparkDF(treename, filename, sparkcontext=sparkconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies_dask = [; DaskDF(treename, filename, daskclient=daskconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies = histoproxies_spark + histoproxies_dask. # Before triggering the computation graphs values are None; for proxy in histoproxies:; assert proxy.proxied_node.value is None. RunGraphs(histoproxies). # After RunGraphs all histograms are correctly assigned to the; # node objects; for proxy in histoproxies:; histo = proxy.proxied_node.value; assert isinstance(histo, ROOT.TH1D); assert histo.GetEntries() == nentries; assert histo.GetMean() == 42. os.remove(filename). def main():; test_rungraphs_sparkanddask_3histos(*connection()). if __name__ == ""__main__"":; raise SystemExit(main()); ```. And here is a bash script that runs the previous Python script in a loop until it fails; ```; counter=0; while test $? -eq 0; do ; counter=$(($counter+1)); echo -e ""\nRunning test $counter\n""; CLING_DEBUG=1 python test.py; done. # Remove leftover file from the test when it fails; rm 2clusters.root; ```. ### Setup. ROOT [master@b13756d](https://github.com/root-project/root/commit/b13756d544d91803e31c7b6aa0c32ae05481e7f8); Python 3.10.7; Java 19; pyspark 3.3.0; dask/distributed 2022.7.1. ROOT built with:; ```; cmake -GNinja -Dccache=ON -Dminimal=ON -Dtesting=ON -Droottest=ON -Dpyroot=ON -Ddataframe=ON -Dxrootd=ON -Dtest_distrdf_pyspark=ON -Dtest_distrdf_dask=ON -DCMAKE_BUILD_TYPE=Debug -Dimt=ON; ```. ### Additional context. I am tentatively assigning this also to @Axel-Naumann @vgvassilev @jalopezg-r00t who may have an easier time at understanding the output from gdb and help in creating a simpler reproducer",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:15206,simpl,simpler,15206,https://root.cern,https://github.com/root-project/root/issues/11515,1,['simpl'],['simpler']
Usability,"=""1"">NP_norm</ConstraintTerm>; ```. Constraint terms can be removed from `OverallSys` modifiers, but the same method does not seem to work for `HistoSys` modifiers (and the setting seems to be silently ignored). Constraint term ""removal"" can be achieved by changing the constraint term to be uniform, but `RooStats::HistFactory::Measurement::AddNoSyst` also provides an alternative method. The xml created from that seems to be incompatible with `hist2workspace`, as the xml uses `NoSyst` and `hist2workspace` seems to (at least parse) `NoConstraint` instead, but crashes for `NoSyst`. ### Expected behavior; I expect constraint term editing to work for both `OverallSys` and `HistoSys` modifiers. Both approaches of changing the constraint term to be uniform and removing it completely should work with `hist2workspace`. . ### To Reproduce; Download the required input files from https://cernbox.cern.ch/index.php/s/AO4ruN3G7LNtcRo. They contain a minimal HistFactory workspace specification (xml + ROOT file with histograms) and a simple script to fit the workspace. #### Baseline for comparisons; To establish the baseline behavior, run `hist2workspace` on the provided HistFactory workspace (xml + ROOT) and perform a fit:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; The relevant best-fit parameter values are:; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -4.66233e-01; 2 alpha_NP_shape -1.70517e-01; 3 mu 1.04248e+00; ```. #### `OverallSys` with uniform constraint [working as expected]. To see the behavior of the `OverallSys` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration. The measurement should then look like this:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; </Measurement>; ```; Repeat the works",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9070:1281,simpl,simple,1281,https://root.cern,https://github.com/root-project/root/issues/9070,1,['simpl'],['simple']
Usability,"=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch.; After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:; ```; JUPYTER_PATH=ROOTSYS/etc/notebook; JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook; ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The correct environment variables would be; ```; JUPYTER_PATH=/usr/local/etc/root/notebook; JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook; ```; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; 1. Build and install `latest-stable` branch; 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51; 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`; 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: 6.24/00; 2. Operating system: openSUSE Tumbleweed -- release: 20210606; 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]; 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with op",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8435:1169,clear,clear,1169,https://root.cern,https://github.com/root-project/root/issues/8435,1,['clear'],['clear']
Usability,"> (Most likely) To reproduce build with https://github.com/root-project/root/commit/3e03f7891c07828b32cf7efe4382202ecdca1a79 and then rebuild the same directory commit https://github.com/root-project/root/commit/7f006742bb1d1786d2a8c7c06e4e20cf8900e777 (llvm 18). Incremental rebuilds across LLVM upgrades are (intentionally) not supported - too many things move around. This has always been clearly communicated and I propose to close this issue as ""not planned"" (and I misclicked)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16668#issuecomment-2440788615:392,clear,clearly,392,https://root.cern,https://github.com/root-project/root/issues/16668#issuecomment-2440788615,1,['clear'],['clearly']
Usability,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example; > ; > ```python; > # If you do this in your local RDataFrame script; > ROOT.gInterpreter.Declare(""my_code""); > df.Define(...); > ; > # Do this in distributed RDF; > ROOT.RDF.Distributed.DistributeCode(""my_code""); > df.Define(...); > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16309#issuecomment-2317916267:473,clear,clear,473,https://root.cern,https://github.com/root-project/root/pull/16309#issuecomment-2317916267,2,"['clear', 'guid']","['clear', 'guide']"
Usability,> * It looks good. Thanks.; > * I think for THistPainter::PaintErrors() it is simply missing. Now the offsets are also implemented for THistPainter::PaintErrors().,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9015#issuecomment-923877185:78,simpl,simply,78,https://root.cern,https://github.com/root-project/root/pull/9015#issuecomment-923877185,1,['simpl'],['simply']
Usability,"> * Revert changes to `emitLLVMUsed`: clearing the vectors `LLVMUsed` and `LLVMCompilerUsed` does not seem; > needed because `CodeGenerator::StartModule` will swap the entire `CodeGenModule`.; > . Makes sense to me. > * Revert changes to `SourceManager::isBeforeInTranslationUnit`: if assertions are enabled `llvm_unreachable` has the same effects as `assert(0)`. As we don't see this assertion in recent times, this change is probably not relevant anymore. The problem is generated (synthesized) code which have no source location information. Then when you have an error resulting in multiple overloads we will need to compare their source locations to order the diagnostics. This patch makes this codes to work while the llvm_unreachable makes it crash in production. > ; > * Revert change in `SourceLocation::isBeforeInTranslationUnitThan`: I believe that all locations have a `SourceManager` nowadays, even from the command line. That was probably relevant for the PCH and rootmaps?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13181#issuecomment-1621492471:38,clear,clearing,38,https://root.cern,https://github.com/root-project/root/pull/13181#issuecomment-1621492471,1,['clear'],['clearing']
Usability,"> * why does Linux seem to be ok?. See my previous reply (I will debug myself on Linux next week to give you the correct answer). > * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. Because, as already explained, the `TThreadExecutor` is created **after** `Internal::MakeClusters`, which is calling `ROOT::GetImplicitMTPoolSize()`, which is calling `ROOT::Internal::TPoolManager::GetPoolSize()`, and since the constructor of ROOT::Internal::TPoolManager has not yet been created (by the `TThreadExecutor` constructor), its `fgPoolSize` default value is 0: `UInt_t TPoolManager::fgPoolSize = 0;`; The purpose of this patch is to move the constructor of `TThreadExecutor` **before** the use of `ROOT::Internal::TPoolManager::GetPoolSize()`. I'm a but puzzled about all the discussions around this one line change, and I don't know how to explain better such an easy and obvious issue. Feel free to do anything about it, I know how to fix it on Windows, and I can still disable the failing test if you (I mean all of you) can't find a proper solution to this issue.; And [#4947](https://github.com/root-project/root/pull/4947) was simply another way of initializing the `TPoolManager` before using it.; And sorry if I'm not clear enough about this issue, but it becomes obvious simply by looking at the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4953#issuecomment-583759945:1251,simpl,simply,1251,https://root.cern,https://github.com/root-project/root/pull/4953#issuecomment-583759945,3,"['clear', 'simpl']","['clear', 'simply']"
Usability,"> 23.2.2 . fair enough. thanks. > switch all these vectors for std::list and see if there is any benefit. unlikely, since the 'search' for the right entry will be more costly than the cost of false sharing. (Using a vector<T**> would be a closer 'race' still likely lost to the simpler version).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2708#issuecomment-425186453:278,simpl,simpler,278,https://root.cern,https://github.com/root-project/root/pull/2708#issuecomment-425186453,1,['simpl'],['simpler']
Usability,> 3. Move the `find_package(OpenSSL) from inside `builtins/xrootd/CMakeLists.txt`to it inclusion point in`SearchInstalledSoftware.cmake`. Sounds like a good and simple solution to me!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16374#issuecomment-2330908221:161,simpl,simple,161,https://root.cern,https://github.com/root-project/root/issues/16374#issuecomment-2330908221,1,['simpl'],['simple']
Usability,"> ; > Comments?. This looks awesome!. > A few caveats:; > ; > * `PagedVector` is a bad name, I agree. Suggestions are welcome. We did not come up with a better name. Ours was `SparseVector`. Just to confirm, we do not pre-allocate the entire vector but we deterministically allocate the slabs. That is, if I hardcoded an offset `101` in my code and the pre-allocation allocated just a slab [0-100), then when I do PagedVector[101] it would put what I need where I need it, right?. > ; > * At the moment the implementation allows generic callbacks for ranges, however as I said we only need default initialisation. Removing such flexibility should buy another 1 MB from my test. If it is not needed, let's keep it simple. It would be easier to go through the upstream llvm reviews. > ; > * In case `DeclID*` and `QualType` can default to all 0, one could probably achieve the same result in a more elegant way using calloc / realloc. Can we make the API of the `PagedVector` such that it becomes a drop-in replacement? I have not looked deeply in the PR but I see some work being done on the users side. > ; > * There are probably other vectors which can be optimised in the same way, in particular IdentifiersLoaded as already mentioned by @vgvassilev. The source locations offset would be a major source of improvement if this technique flies there. PP: It seems llvm has some facility along these lines: https://llvm.org/doxygen/classllvm_1_1SparseBitVector.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1716088321:713,simpl,simple,713,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1716088321,1,['simpl'],['simple']
Usability,"> > > @Nowakus: if this change is merged, you will most likely need to slightly adjust your code. Just to make it clear that there is absolutely no problem with adjusting my code to your changes for the time being. ; (as long as I am able to make it still work that is 😄)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13219#issuecomment-1630954373:114,clear,clear,114,https://root.cern,https://github.com/root-project/root/pull/13219#issuecomment-1630954373,1,['clear'],['clear']
Usability,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows?; > > ; > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that.; > ; > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?. Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12561#issuecomment-1491725885:533,clear,clear,533,https://root.cern,https://github.com/root-project/root/pull/12561#issuecomment-1491725885,1,['clear'],['clear']
Usability,"> > > @jalopezg-git Yes, can you open a PR?; > > ; > > ; > > @ferdymercury as you are the original author of #13217, do you want to take care of the backport?; > ; > I could do it, but I have never done it before, so I need some guidelines. Should I use rebase on some XY branch and then cherry-picking only my commit or sth like that?. Assuming that the remote `origin` refers to upstream and `ferdymercury` to `https://github.com/ferdymercury/root/`, the simplest way is to; ```bash; $ git fetch origin v6-28-00-patches:v6-28-00-patches; $ git checkout -b TDirectoryFile-ls-v6.28 v6-28-00-patches; $ git cherry-pick ... # your commit(s) here - I think it was 2 commits; mention them in order here; $ git push ferdymercury TDirectoryFile-ls-v6.28; ```; , and then open a PR to be merged against the `v6-28-00-patches` branch. I'll let you try; if you don't manage, I'll do it instead :slightly_smiling_face:.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13182#issuecomment-1643640639:229,guid,guidelines,229,https://root.cern,https://github.com/root-project/root/issues/13182#issuecomment-1643640639,2,"['guid', 'simpl']","['guidelines', 'simplest']"
Usability,"> > > Could it be that the issue is TBranch now has Experimental::Internal::TBulkBranchRead as a member?; > > ; > > ; > > Yes! Very likely.; > ; > That's actually it. If I remove the Experimental namespace and simply use Internal::TBulkBranchRead, it does not load the other Experimental bits either. However, that in practice shows a more generic design problem in the clang modules system. That is, then we make a lookup of a namespace identifier clang (rightfully) tries to collect all namespace partitions from all reachable modules. This has to do with things like overload resolution. Due to the autoloading system, ROOT essentially considers all modules reachable and thus loads them. The only reliable way to fix this is to make the clang module loads a no-op which is a bit of a challenge…",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1615514852:210,simpl,simply,210,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1615514852,1,['simpl'],['simply']
Usability,"> > > Is that with or without opening the file? My expectation is that root.exe -l -b -q will take a lot less rss.; > > > ping.; > ; > With the file. I meant to ping on the stats without a file. > to be clear, as I said above, the profile changed, however the total sum for cling initialisation is still at 70MB. Can you share the new profile?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1630908477:203,clear,clear,203,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1630908477,1,['clear'],['clear']
Usability,"> > > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > > ; > > ; > > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well.; > ; > Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?. Can you add to cling -fno-rtti? I don’t think this can be done automatically it is not automatic for compilers as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1193095859:176,simpl,simplest,176,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193095859,1,['simpl'],['simplest']
Usability,"> > > Thanks for noticing, @bellenot! I think that the suggestion should also fix it (and is simpler) slightly_smiling_face.; > > ; > > ; > > You're right, thanks!; > ; > Can we squash the changes in a single commit on merge? Many thanks!. Indeed!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11782#issuecomment-1327943698:93,simpl,simpler,93,https://root.cern,https://github.com/root-project/root/pull/11782#issuecomment-1327943698,1,['simpl'],['simpler']
Usability,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org?; > ; > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7446#issuecomment-796556844:567,guid,guidance,567,https://root.cern,https://github.com/root-project/root/pull/7446#issuecomment-796556844,1,['guid'],['guidance']
Usability,"> > @grasph please fork also [roottest](https://github.com/root-project/roottest) to prevent timeouts on the Windows build nodes. Thanks; > ; > Done. Do I need to create a branch with the same name ?. Thanks. And no, simply forking is good enough",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8717#issuecomment-885523144:217,simpl,simply,217,https://root.cern,https://github.com/root-project/root/pull/8717#issuecomment-885523144,1,['simpl'],['simply']
Usability,"> > @jalopezg-git Yes, can you open a PR?; > ; > @ferdymercury as you are the original author of #13217, do you want to take care of the backport?. I could do it, but I have never done it before, so I need some guidelines. Should I use rebase on some XY branch and then cherry-picking only my commit or sth like that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13182#issuecomment-1643431150:211,guid,guidelines,211,https://root.cern,https://github.com/root-project/root/issues/13182#issuecomment-1643431150,1,['guid'],['guidelines']
Usability,"> > @pcanal has suggested leveraging the old behavior to disable optimizations before, so I would wait for his ok before merging.; > EDIT: just to be clear, I am convinced the old behavior is a bug. The old behavior was:; ```; +g -> -g (and default compiler optimization); +O -> -O3 (or more exactly the optimization level select at ROOT configuration time); +gO -> -g (and default compiler optimization); + -> -g or -O3 depending on whether ROOT was build in debug mode ... except that this is broken since the move to CMake :( so actually always -O3; ```; The new behavior seems to be:; ```; +g -> -g (and default compiler optimization); +O -> -O3 (or more exactly the optimization level select at ROOT configuration time); +gO -> -g -O3 ; + -> -g or -O3 depending on whether ROOT was build in debug mode ... except that this is broken since the move to CMake :( so actually always -O3; ```; So this is fine as we **MUST** have a way to completely disable optimization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7382#issuecomment-791547695:150,clear,clear,150,https://root.cern,https://github.com/root-project/root/pull/7382#issuecomment-791547695,1,['clear'],['clear']
Usability,"> > @pcanal, this paves our way towards removing the deprecated -r. Could you take a look.; > ; > Could expand on how this paves the way to the removal?. It simplifies and makes the code related to `-r` more explicit. Removal should just delete the if-stmts conditional to `gOptIgnoreExistingDict`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5223#issuecomment-607089555:157,simpl,simplifies,157,https://root.cern,https://github.com/root-project/root/pull/5223#issuecomment-607089555,1,['simpl'],['simplifies']
Usability,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'?; > ; > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch; or; b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14439#issuecomment-1944051025:26,guid,guidelines,26,https://root.cern,https://github.com/root-project/root/issues/14439#issuecomment-1944051025,2,['guid'],"['guideline', 'guidelines']"
Usability,"> > Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier.; > ; > Okay, so I created a pull request [wlav/cppyy#207](https://github.com/wlav/cppyy/pull/207) as you suggested. But I am not sure how to backport the commit here. Would you be able to guide me how to do it?. Once you get a review upstream then we can merge the same commit here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14293#issuecomment-1866800936:358,guid,guide,358,https://root.cern,https://github.com/root-project/root/pull/14293#issuecomment-1866800936,1,['guid'],['guide']
Usability,"> > Could it be that the issue is TBranch now has Experimental::Internal::TBulkBranchRead as a member?; > ; > Yes! Very likely. That's actually it. If I remove the Experimental namespace and simply use Internal::TBulkBranchRead, it does not load the other Experimental bits either.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1615245128:191,simpl,simply,191,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1615245128,1,['simpl'],['simply']
Usability,"> > Could you have that ""survive"" in this / a PR and propose the other one upstream?; > ; > I've opened [civetweb/civetweb#1056](https://github.com/civetweb/civetweb/pull/1056) to upstream the fix into `civetweb`. My plan would be to wait a few days, the maintainer seems to be very responsive. If we cannot get it in, I'll back out the other fix to get that merged. Merged on Friday, I've updated the PR to move the `#include` where I put it for upstream.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9969#issuecomment-1054112351:283,responsiv,responsive,283,https://root.cern,https://github.com/root-project/root/pull/9969#issuecomment-1054112351,1,['responsiv'],['responsive']
Usability,"> > Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say std::vector where some entries of the vector are available and some not (how would that even make sense?).; > ; > It is happening when combining 2 columns from 2 distincts collection:; > ; > ```; > tree->Draw(""vec_1.px + Alt$(vec_2.delta_px, 0)"");; > ```; > ; > where `vec_1.size()` happens to be different from `vec_2.sizeI()` but we still want to plot the data for all element of `vec_1`; > ; > A completely related recent post on the forum: https://root-forum.cern.ch/t/dealing-with-columns-of-different-lengths-in-rdf/61642/2. This use case is fairly simple with RDataFrame and has been supported for a very long time, also it is really unrelated to this PR. Here is an example of how to deal with such cases:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RVec.hxx>; #include <TFile.h>; #include <TTree.h>. struct Dataset; {; constexpr static auto filename{""myfile.root""};; constexpr static auto treename{""mytree""};; Dataset(); {; TFile f{filename, ""recreate""};; TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};; std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);; t.Branch(""vec2"", &vec2);; t.Fill();; t.Write();; }. ~Dataset(); {; std::remove(filename);; }; };. int main(); {; Dataset dataset;; ROOT::RDataFrame df{dataset.treename, dataset.filename};; auto display = df.Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2); { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}); .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});; display->Print();; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15641#issuecomment-2352201431:681,simpl,simple,681,https://root.cern,https://github.com/root-project/root/pull/15641#issuecomment-2352201431,1,['simpl'],['simple']
Usability,"> > Do you mean the header of the Canvas? Because I tried this and it is unable to render the symbols. (See the top of the window); > ; > No I mean in the comments, the header of the macro, the markdown part, where you put the comments which will then appear on the web in the root reference guide. You add a comment saying ""The formula is ... bla bla ... "" then you put the formula like:; > \f$ the_formula_in_Latex_format \f$. Ohh ok. So I should remove the formula from the programm and add it to the markdown part?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7801#issuecomment-816638539:292,guid,guide,292,https://root.cern,https://github.com/root-project/root/pull/7801#issuecomment-816638539,1,['guid'],['guide']
Usability,"> > Good Morning Mr. @couet . I just realized that the paint method of TFeynman is never being called. When I call the draw > > > method, do I want to run the paint method first before ´AppendPad`?; > ; > The Paint() method is called automatically for you when the Pad will be display. You do not need to call it. See the figure in TPad ref guide . Ah ok. And when I want to add a TFeynmanEntry to the TList, how can I do that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7820#issuecomment-820333544:341,guid,guide,341,https://root.cern,https://github.com/root-project/root/pull/7820#issuecomment-820333544,1,['guid'],['guide']
Usability,"> > I am almost certain that non-critical changes won’t make it back upstream.; > ; > I think all of us appreciate the time and brain power Vincenzo invests in improving the code. I bet it's useful to propose changes coming out of this upstream where relevant, @sudo-panda ?. Hi @Axel-Naumann ,. I am really grateful to @vepadulano for investing his precious time in reviewing this PR and suggesting changes to improve it. If not for his suggestions about the `namespace NumbaExt` code, I wouldn't have been able to simplify it. On the other hand, @vgvassilev is right about the global statements being a non-critical change and wouldn't be accepted upstream. And I am sure when he said that, he didn't mean that Vincenzo's efforts were wasteful. Finally, AFAIU Vincenzo thinks that global statements are unnecessary because the code acts in the same way whether you keep them or not. I have a few counterpoints to this:. 1. It gives programmers an idea about where the variable was initialized before use. Modifying the code provided by Vincenzo:. ```python; cache = {}. def foo():; .....; .... Many lines of code ...; .....; cache[""foo""] = 1. .....; .... Many lines of code ...; ..... def bar():; .....; .... Many lines of code ...; .....; cache[""bar""] = 2; ```. I hope you can see it becomes difficult to understand where did cache come from. A `global cache` statement at the top of the function or before its use clarifies the intent. 2. Removing the `global` statement doesn't affect the scope of the variable. It is purely meant to [guide Python for the code block it is used in.](https://docs.python.org/3/reference/simple_stmts.html#the-global-statement). 3. ROOT already uses `global` keyword in [JupyROOT](https://github.com/root-project/root/blame/a90d76b7798dc4332425d29794089fceaebccb60/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L126 ). So unless ""we should never use `global`"" is a new convention being followed in ROOT, I believe it doesn't seem to track. 4. As seen in this [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11096#issuecomment-1603484912:516,simpl,simplify,516,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1603484912,1,['simpl'],['simplify']
Usability,"> > I take it from the warnings that I might have to add the other FindObject method (that accepts a TObject pointer) to satisfy the builds? Please confirm and I can do this.; > ; > Exactly. Something like `auto ptr = dynamic_cast<const RooAbsArg*>; return ptr ? find(*ptr) : nullptr;` should do it.; > ; > Could you include a one-line doxygen-readable comment (`///`) to avoid having two undocumented functions? Also note that `find(RooAbsArg&)` will find objects with the same name, not necessarily with the same pointer. You should decide with @guitargeek if that's actually desired when called from the Python side. In a second sentence, you should document whether that function will find objects with the same name (= equivalent objects as far as RooFit is concerned) or if it should only find the exact same object. Indeed I thought about having `auto arg = dynamic_cast<const RooAbsArg*>(obj); return (arg && containsInstance(*arg)) ? obj : nullptr;` but given the 'find' method matches by name I think for consistency the FindObject should behave the same for these classes, unless there is some additional benefit to FindObject(obj) returning obj??",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8177#issuecomment-841340893:389,undo,undocumented,389,https://root.cern,https://github.com/root-project/root/pull/8177#issuecomment-841340893,1,['undo'],['undocumented']
Usability,"> > I think almost everything is there now. I've tested it in both Ubuntu 20.04 LTS and Windows 10. Can we let @phsft-bot build it on other systems?; > ; > No, it is not, see my comments about the coordinates ... how do you define them ?. I added Doxygen comments on the parameters of the methods. The coordinates are like this:. For AddItem you provide x1, y1 which is the starting coordinate and x2, y2 which is the stopping coordinate and labelX and labelY whihc is where the label is. I'm trying to figure out a way where you don't need to set the coordinates, but that may take a while. For AddPair, you simply provide the x and y coordinate of the center of the arc. The labels are positioned automatically. For AddCurved, You also only provide the x and y coordinate of the center of the arc, along with phimin and phimax angles. I'm also trying to find a way to reduce the amount of parameters here (like in TikZ). The problem is that the main type of feynman Diagram, is one where you have the fermions at the left and right side, and a boson + virtual particles (in pairs) in the middle. If this were the only type of feynman diagram, I could do this easily, however sometimes there are other ""irregular"" diagrams, which would be harder to implement. Is there a way, where the particles can be positioned automatically, and then checked to make sure there is no overlapping?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7820#issuecomment-829968031:609,simpl,simply,609,https://root.cern,https://github.com/root-project/root/pull/7820#issuecomment-829968031,1,['simpl'],['simply']
Usability,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :); > ; > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ?. They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-654934046:595,simpl,simply,595,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-654934046,1,['simpl'],['simply']
Usability,"> > I thought deprecation in 6.30 and removal 6.32, but whatever you think is best; > ; > I see more clearly what you were trying to do now. In that case I will have to say I don't agree. We cannot deprecate a feature and backport the deprecation of the feature to an already released branch. What we can do is to deprecate the build option for 6.32 and then remove it in 6.34 👍 Sorry for my confusion :). Your plan sounds good to me, too. I was just thinking of backporting the deprecation because this option is broken from the very beginning. So just for speeding up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14395#issuecomment-1924196571:101,clear,clearly,101,https://root.cern,https://github.com/root-project/root/pull/14395#issuecomment-1924196571,1,['clear'],['clearly']
Usability,"> > I thought you wanted to support non-explicit linking, too.; > ; > Yes, true. But the explicit linking case is seemingly broken now. Yes, it is broken because when calling `rootcling -lib-list-prefix` (and no `-cxxmodule`) we do not load any modules and [this code](https://github.com/root-project/root/blob/master/core/dictgen/src/rootcling_impl.cxx#L561-L562) is dead. We should implement some new option in rootcling which says preload all modules because ROOT/ACLiC is in `runtime_cxxmodules` mode but we do not intend to build a module (via `-cxxmodule` flag.). > ; > > we should just get all loaded libraries and append them. Just to be clear, I was not proposing to go that route, but in principle we could filter out ""user"" libraries... > ; > That is where we started a long time and ago and led to spurrious failures. For example:; > ; > ```; > root; > root [] .L A.C+; > root [] .L B.C+; > root [] .q; > rm A.C A_C*; # User give up on A.C; > root; > root [] .L B.C+; > // linking error complaining about A_C.so not found.; > ```; > ; > > By symbol you mean clang::Decl?; > ; > Not sure. I meant that during parsing, 'missing' symbols provoke call to 'auto-parsing' mechanism that get info from the rootmap file (humm I realize that this is not necessary quite an accurate description :( ); > ; > > That is the power of the new dynamic loader.; > ; > It works solely if it is loaded though :). Nope, it is able to visit the elf/mach-o binary format and extract whatever information is needed without dlopening the library. > ; > We do have users that use ACLiC to generate libraries (from a Makefile) to be used to link to a main executable. I thought we have coverage for that case. I would recommend to go forward with this approach to fix the bug while I am working on fixing the explicit linking in general.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-607811483:646,clear,clear,646,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-607811483,1,['clear'],['clear']
Usability,"> > I wonder, whether all the `new TList` should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))?; > ; > Yes, this is a fair point. Feel free to open another PR with that further simplification. Hi @pcanal,. I started to look into this. And; ```cpp; #ifdef R__LESS_INCLUDES; class TList;; #else; #include ""TList.h""; #endif; ```; in `TTask.h` would need to be changed to a plain `#include ""TList.h""`. That sounds like it contradicts the `R__LESS_INCLUDES` movement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13840#issuecomment-1760285333:116,Guid,Guidelines,116,https://root.cern,https://github.com/root-project/root/pull/13840#issuecomment-1760285333,2,"['Guid', 'simpl']","['Guidelines', 'simplification']"
Usability,"> > Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out.; > ; > I guess we should ask the experiments about this, since this change proposal came from them. Personally, I'm not sure how much this would help, given that we would just move the naming problem to the enum values rather than the classes. I agree that we should discuss it with the API reviewers. The advantage I see is that I find it easier to be verbose in the enum constant names (e.g., `kOwnedByCaller`, `kOwnedByROOT`) than in the class name. Especially, if the non-owning view is the default value. E.g. ```; auto v1 = reader->GetView<float>(...);; auto v2 = reader->GetView<float, EViewType::kOwnedByCaller>(...); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16363#issuecomment-2337820694:230,clear,clearly,230,https://root.cern,https://github.com/root-project/root/pull/16363#issuecomment-2337820694,1,['clear'],['clearly']
Usability,"> > Moving towards a generic explicit implementation based on a markers is; > ; > I cannot follow - who's proposing to move to something, which explicit markers? I'm arguing that the status quo (last top-level expression's value is printed if missing trailing semicolon) should be kept for consistency and simplicity reasons.; > ; > Let's hear some other opinions here, e.g. @SimeonEhrig @jalopezg-uc3m @pcanal ?. After reading the discussion, I have no clear opinion, but... What about preserving the current behavior plus the one that @vgvassilev suggests, i.e. a marker (e.g. NullStmt) can be used to indicate that the previous expression should be printed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6644#issuecomment-713537805:306,simpl,simplicity,306,https://root.cern,https://github.com/root-project/root/issues/6644#issuecomment-713537805,2,"['clear', 'simpl']","['clear', 'simplicity']"
Usability,"> > Moving towards a generic explicit implementation based on a markers is; > ; > I cannot follow - who's proposing to move to something, which explicit markers? I'm arguing that the status quo (last top-level expression's value is printed if missing trailing semicolon) should be kept for consistency and simplicity reasons.; > ; > Let's hear some other opinions here, e.g. @SimeonEhrig @jalopezg-uc3m @pcanal ?. I do realize my post was terse. Here is more text as the discussion went in another direction. Since early days, as you already mentioned, the rule seems to be ""the last expression without a trailing semicolon should print"". If that is the rule, then it clearly does not handle short-hand operators. Namely, `if (x) expr`. That rule does not extend to your examples `do 1 while(true)` as `while` is not really an user-defined expression. `if (x) { expr }` does not fall there either as it is in a compound statement. It is pretty clear where we stop. The construct `if(x) expr`, as shown in the example, enables an interactive programming pattern wrt error handling where in case of an error we can just ask cling to print details. > I'd prefer to keep value printing simple. The implementation of what I propose requires 2-3 lines [here](https://github.com/vgvassilev/cling/blob/856f8e92f82f9037b3dbb27ae7f94add2ed6121f/lib/Utils/AST.cpp#L141-L152). And actually makes the value printing rule more comprehensible. It took me some time to realize what's wrong and I implemented it, so I'd say it would be less comprehensible to other people. > and instead invest where it's relevant: devtoolset, debug symbols, llvm upgrade (to llvm 11!), etc. This is a trade-off we should consciously do, and given that this is the first time I hear a request for value printing within nested blocks . We have had that in the past. I do not think having not user requests should be an argument against this bug. > I'm not yet convinced that it's worth the effort (and yes, that's an additional counter ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6644#issuecomment-713756223:306,simpl,simplicity,306,https://root.cern,https://github.com/root-project/root/issues/6644#issuecomment-713756223,3,"['clear', 'simpl']","['clear', 'clearly', 'simplicity']"
Usability,"> > My version of os/compiler/valgrind seems to work better and I got some useful information.; > > For `root.exe -b -l -q callfuncbench.cxx+(1000)`.; > > The new code is a big faster: `42,696,463,692` instead of `45,892,859,389`; > > Some of the calculation are shifted to `Value::Value`: `5,000,000,988` vs `3,100,001,703` (it grows by 2 billions when the overall goes down by 3 billions).; > > The gains comes from the disappearance of `TClingCallFunc::InitRefAndExec` (minus 3.8 billions) and the simplifications of `std::function_handler (removed) and TClingCallFunc::exec` (minus 1.2 billions).; > > So it is getting better and `Value::Value` is a potential source of further optimization (see related comment).; > > [callgrind-callfund.tar.gz](https://github.com/root-project/root/files/9665974/callgrind-callfund.tar.gz); > ; > Thanks for the details. I've pushed the further optimization of `Value::Value`. Can you remeasure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1262860929:501,simpl,simplifications,501,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1262860929,1,['simpl'],['simplifications']
Usability,"> > Now there are new failures associated with this change; > ; > Can you point me to one or two of those failures?; > ; > > [45c0f48](https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160) fixed a bug in the template argument printing,; > ; > For up-streaming that, it probably would need to become a policy switch.; > ; > If I understand correctly; > ; > [45c0f48](https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160) : remove suffix in template parameter (However the fix seems counter-intuitive, I am not sure what that code change really does). It is a long discussion, you can find more information [here](https://reviews.llvm.org/D77598#inline-1057607). The idea is when we print the values of integral types, we should print them as they were written. Here is an example where this does not happen https://godbolt.org/z/MGK5s734G so this patch should be easy to upstream. > ; > [4417a2c](https://github.com/root-project/root/commit/4417a2cd34effdc6ea59797c2d86b6ef8ca8717a) : add default template parameter to the printing. Is `SuppressDefaultTemplateArgs` a new option? If it is not, is it new that it was set to true by default? (we always needed the default parameter to be printed ... and actually in most case, we 'worked' at making sure that all the component are explicitly included (with the right spelling, i.e. for 'opaque' typedef), (see Utils/AST.cpp and the partial desugaring). That was my take as well but without this switch we get failures like this one https://github.com/root-project/root/pull/10294#issuecomment-1135181954. Here are more details from my local builds:. <details>. ```. diff -u ../root-release-master/./math/genvector/G__GenVector.cxx ../root-release-llvm13/./math/genvector/G__GenVector.cxx; --- ../root-release-master/./math/genvector/G__GenVector.cxx	2022-05-08 08:38:55.942037418 +0300; +++ ../root-release-llvm13/./math/genvector/G__GenVector.cxx	2022-05-08 09:17:42.965205197 +0300; @@ -2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1136423157:553,intuit,intuitive,553,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157,1,['intuit'],['intuitive']
Usability,"> > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > ; > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well. Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1193060988:174,simpl,simplest,174,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193060988,1,['simpl'],['simplest']
Usability,"> > Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue.; > ; > That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to _understand_ `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`. Ok then let's use the `constexpr` correctly here. So with what @jalopezg-r00t said, the correct fix is to also add the definition even if it looks strange? If you go for that, please also add a comment explaining why the line is necessary so it is not accidentally removed because it looks superfluous. As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. [1] https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-make_unique",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10263#issuecomment-1081652232:972,guid,guidelines,972,https://root.cern,https://github.com/root-project/root/pull/10263#issuecomment-1081652232,1,['guid'],['guidelines']
Usability,"> > Thanks for noticing, @bellenot! I think that the suggestion should also fix it (and is simpler) slightly_smiling_face.; > ; > You're right, thanks!. Can we squash the changes in a single commit on merge? Many thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11782#issuecomment-1327939751:91,simpl,simpler,91,https://root.cern,https://github.com/root-project/root/pull/11782#issuecomment-1327939751,1,['simpl'],['simpler']
Usability,"> > Thanks for the tips. I will try to do this. 😄; > ; > ; > ; > Of course any comments or criticism on what I suggested are welcome :-). Thanks. So if I understand correctly, instead of plotting the TLine, TArrow etc one adds them to the TFeynman object and then draws everything at once? I looked into the code for TLegend, and this is what I understand:. - The legend entries are added to a TList; - The Draw method takes an Option_p and appends it to the TPad. What is this option_p?. My apologies if these are simple questions",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7820#issuecomment-818692727:515,simpl,simple,515,https://root.cern,https://github.com/root-project/root/pull/7820#issuecomment-818692727,1,['simpl'],['simple']
Usability,"> > Upstream is taking a different route in [llvm/llvm-project#107638](https://github.com/llvm/llvm-project/pull/107638) Let's hope soon we can drop this huge and messy workaround we have...; > ; > That hasn't landed yet and even if it did today, it's still multiple versions of SDK down the road. So why are we seeing problems _now_ that nobody else has? And where do we see them at all, because our CI is green?. Simply because our use of C++ modules is on the bleeding edge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2367412416:415,Simpl,Simply,415,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2367412416,1,['Simpl'],['Simply']
Usability,"> > and- in its current implementation - a working ROOT build as part of the version update. > Why is/was that?. Ouch that's wrong, that was true in the past, before I had replaced the ROOT script writing out the version number with a Python script. But the motivation for this PR is still there: instead of running a magic build step to update the version files we can now simply edit the header file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13620#issuecomment-1713698917:374,simpl,simply,374,https://root.cern,https://github.com/root-project/root/pull/13620#issuecomment-1713698917,1,['simpl'],['simply']
Usability,> > do you have any intuition about what could have gone wrong that causes these failures in the execCheckClusterRange test because of different file sizes?; > ; > Not yet. It could be that some leaf type changed or a `StreamerInfo` changed (for that reverting just the `LinkDef` should be sufficient). That could be it! I have removed the changes from the LinkDef files from this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14268#issuecomment-1863638811:20,intuit,intuition,20,https://root.cern,https://github.com/root-project/root/pull/14268#issuecomment-1863638811,1,['intuit'],['intuition']
Usability,"> > it will not be automatically added to the 6.30 Release Notes because it was already released; > ; > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing?. Thanks for the message.; True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14439#issuecomment-1947883057:970,clear,clearly,970,https://root.cern,https://github.com/root-project/root/issues/14439#issuecomment-1947883057,1,['clear'],['clearly']
Usability,"> @SClarkPhysics that's also with friends and multi-threading, and disappearing if you don't use friends or turn off multi-threading (or both)?. No, my issue seems a bit different and I am still investigating to see when it happens. I am **not** using multiprocessing or friends but am still getting the error "" Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy. ""; Not exactly sure how to recreate the error yet so I need to do some investigating on my own, but it definitely doesn't happen on every file I run over and it seems that it may be related to one of the custom cpp functions I am using to define a new column. Can report back when I learn a bit more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9106#issuecomment-944305281:669,learn,learn,669,https://root.cern,https://github.com/root-project/root/issues/9106#issuecomment-944305281,1,['learn'],['learn']
Usability,"> @agheata I am a bit hesitant to have one TGeoManager with materials created with different systems of units....; > ; We can use 2 different TGeoManager, deleting in between, and caching the results in a struct. > Concerning the comparison: if PDG == TROOTMaterial and PDG == TGeant4Material then also: TROOTMaterial == TGeant4Material; > ; > Clearly both tests must succeed. AFAICT you only compare to PDG with some tolerance, but it is essential that the equality above is strict between TROOTMaterial == TGeant4Material",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11060#issuecomment-1198051219:344,Clear,Clearly,344,https://root.cern,https://github.com/root-project/root/pull/11060#issuecomment-1198051219,1,['Clear'],['Clearly']
Usability,"> @bellenot I should directly fork this right?; > Or should this be pulled to a particular location?; > Thank you for your inputs. Yes, simply forking is enough, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7141#issuecomment-775225994:136,simpl,simply,136,https://root.cern,https://github.com/root-project/root/pull/7141#issuecomment-775225994,1,['simpl'],['simply']
Usability,"> @bellenot `build/win/cl.sh build/win/f77.sh build/win/ld.sh build/win/makelib.sh build/win/makeresource.sh` seems to have only been using in the `Makefile` and seem no longer used. Would we be able to simply removed them?. Well, they can still be used by people using cygwin (if any...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16271#issuecomment-2298741171:203,simpl,simply,203,https://root.cern,https://github.com/root-project/root/pull/16271#issuecomment-2298741171,1,['simpl'],['simply']
Usability,"> @cxwx please do not try to find workarounds when I try to find the source of the issues; we really don't want our users to pile up workarounds. sorry for that. > Can you explain why you don't want to use homebrew's build of ROOT? This seems much simpler than building ROOT yourself - unless you want to help develop ROOT, of course! ;-). I thought Josiah1 may meet the same problem, The home-brew root is still ver6.26.06(not upgrade), ; brew install --build-from-source also failed with the old version.; when using rootcling to generate DICTIONARY, it cause . ```; In file included from input_line_1:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.sdk/usr/include/c++/v1/new:93:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.sdk/usr/include/c++/v1/cstdlib:135:9: error: no member named 'at_quick_exit' in the global namespace; using ::at_quick_exit _LIBCPP_USING_IF_EXISTS;; ~~^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.sdk/usr/include/c++/v1/cstdlib:136:9: error: no member named 'quick_exit' in the global namespace; using ::quick_exit _LIBCPP_USING_IF_EXISTS;; ~~^; In file included from input_line_1:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.sdk/usr/include/c++/v1/new:94:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.sdk/usr/include/c++/v1/exception:85:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.sdk/usr/include/c++/v1/type_traits:485:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.sdk/usr/include/c++/v1/__type_traits/is_pod.h:29:38: error: no template named 'is_trivially_default_constructible'; did you mean; 'is_nothrow_default_constructible'?; :",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12648#issuecomment-1523361441:248,simpl,simpler,248,https://root.cern,https://github.com/root-project/root/issues/12648#issuecomment-1523361441,1,['simpl'],['simpler']
Usability,"> @dpiparo, since you wrote this code last year: #13532; > ; > You have any idea why `Py_GetProgramName` was necessary?. I think I was simply trying to evolve the existing Python 2 code existing at the time, there is no sophisticated strategy behind. If the usage of the deprecated function can be avoided, great.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16785#issuecomment-2446725220:135,simpl,simply,135,https://root.cern,https://github.com/root-project/root/pull/16785#issuecomment-2446725220,1,['simpl'],['simply']
Usability,"> @ferdymercury is that library already used in ROOT?. I don't think it's used yet in ROOT, but @henryiii could confirm. . > Considering it's 10k loc, I'd not count it as ""simplifying"" unless we decided to use it in multiple places (ideally all our cpp executables). True. My experience is that there are many places doing CLI parsing over and over again within ROOT, so if we would replace everywhere, then we would remove more than 10k from ROOT's codebase, and reduce maintenance / bugs on ROOT's side, so it would be worth it. Or at least for new interfaces, see e.g. https://github.com/root-project/root/pull/14038. > Also, we must make sure that the argument parsing logic remains backward-compatible, which is not very clear to me if it would be the case with that lib. That lib has many customization options, so a derived parser class could probably do it, but yeah, it's hard to say for sure in advance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16090#issuecomment-2244874004:172,simpl,simplifying,172,https://root.cern,https://github.com/root-project/root/pull/16090#issuecomment-2244874004,2,"['clear', 'simpl']","['clear', 'simplifying']"
Usability,"> @guitargeek Maybe commit a comment on how to create the reference file above the test. Sorry that I didn't do that already. The way I did this was simply to open the v4 file with a newer ROOT version, use the copy constructor of RooDataHist and save the copied object. Is this the way that you would document, or is there an easier way?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8090#issuecomment-832034444:149,simpl,simply,149,https://root.cern,https://github.com/root-project/root/pull/8090#issuecomment-832034444,1,['simpl'],['simply']
Usability,"> @hageboeck Thanks for the correction. The build failure looks like it has something to do with a Git test, but it’s not clear to me what went wrong. No worries, that's somebody else who messed up a setup. I think we are ready to merge, thanks for taking the time!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6172#issuecomment-675429807:122,clear,clear,122,https://root.cern,https://github.com/root-project/root/pull/6172#issuecomment-675429807,1,['clear'],['clear']
Usability,"> @hahnjo I did not want to let this sit for too long and as days ahead are even busier for me I invested now some more time on this. The good news is that I can pretty confidently say that the memory leak reported [above in the left plot](https://github.com/root-project/root/issues/14055#issuecomment-1814642915) has nothing to do with ROOT 🎉 and it was an unlucky coincidence which made me think it is due to ROOT. 😓 I still have to understand this memory behaviour in detail, but it is off-topic here. 🙈. Ok, thanks for cross-checking!. > I was about simply closing the issue, when I remembered checking old issues in our project that our tests were just passing with ROOT `v6.26` and started to fail reporting the above mentioned sanitiser complaint from `v6.28`. I now checked and these failure occur as well with `v6.30` and `v6.32`. As far as I understand from our exchange above, we can safely suppress these adding `leak:libCling'` to `lsan-root.supp` file (I would not exclude more than the bare minimum in order to avoid suppress potential real problems/errors in the future). Yes, I believe from an application point of view, you can treat `libCling` as a black box. > However, I would like to ask you a feedback about the fact this suppression was not necessary in `v6.26`. Is this expected for you? 🤔. If the leaks are about `TemplateId` (as they were in the log file(s) you shared), then yes this is a problem we introduced in v6.28. It was eventually fixed in https://github.com/root-project/root/pull/16150 which will appear in v6.34 (later this year). Sorry for not recognizing this as a real problem earlier (the fix was also made difficult because it was ""caused"" by an upstream change in LLVM/Clang when we upgraded).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-2382239702:555,simpl,simply,555,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-2382239702,2,"['feedback', 'simpl']","['feedback', 'simply']"
Usability,"> @hahnjo thanks a lot, I wanted to ask if TBB_USE_CAPTURED_EXCEPTION is limited to particular version of TBB?. My understanding is that `TBB_USE_CAPTURED_EXCEPTION` is the fallback if TBB cannot determine that it can properly forward exceptions from the workers. In my setup, this happens with the packaged version TBB 2018 on CentOS 8 when compiling with Clang (because that advertises compatibility with GCC 4.2.1 and only 2019.U4 learned to ignore this).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8169#issuecomment-842963722:434,learn,learned,434,https://root.cern,https://github.com/root-project/root/pull/8169#issuecomment-842963722,1,['learn'],['learned']
Usability,"> @lmoneta the reason why this is not merged is not clear to me: could you clarify?. Ah, now I remember!. This would be a backwards incompatible change, because it changes the meaning of. ```c++; TVectorD{5};; ```; Before, this created a vector with 5 zero elements. With this PR, it will create a vector with a single 5!. This is way too backwards incompatible to be merged. @hageboeck maybe came to the same conclusion, and for that reason decided to not continue working on this PR anymore. Making it work in a backwards compatible way is probably not worth the effort for a legacy pre-STL class like `TVector`. I would instead suggest to change the interfaces of for example TGraph so that they can take initializer lists directly without going over the `TVectorT`. We can also wait for C++26 [1], which will introduce a `std::span` constructor from initializer list. Then we also have the option to use `std::span` in the interfaces to cover this usecase without losing generality: a TVectorT can probably be converted to a `std::span` too. [1] https://en.cppreference.com/w/cpp/container/span/span",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9968#issuecomment-2076889507:52,clear,clear,52,https://root.cern,https://github.com/root-project/root/pull/9968#issuecomment-2076889507,1,['clear'],['clear']
Usability,"> @marsupial, I can make the inclusion of ConvertUTF.h conditionally included if LLVM_UTF8 is set. It is not clear to me what would be the benefit, though. It already is conditional. Look a few lines below the include to see it. The benefit is to use the C++ lib to do conversion when it can so client conversion will match, as well as not allocate 4x the string length which is what the LLVM routines do. > Can you give an example of which case you are thinking go?. Have a memory of virtual file names being inserted into the cache so clang thinks it already hold a buffer to them, which would make the following not work:; ```; $ int Val = 5; // input_line_1; $ #include ""input_line_1"" // input_line_2; $ #include ""input_line_3"" // input_line_3; $ #include ""input_line_5"" // input_line_4; $ Val = 6; // input_line_5; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/589#issuecomment-305206910:109,clear,clear,109,https://root.cern,https://github.com/root-project/root/pull/589#issuecomment-305206910,1,['clear'],['clear']
Usability,"> @mxxo @jblomer This work will be resumed soon as we suspect that not reusing addresses is affecting RDMA data transfers (which has an impact on the measured throughput in the DAOS backend). Specifically, we need to confirm that not reusing addresses that appear in the IOVs array in `daos_obj_{fetch,update}()` is related to a higher overhead due to RDMA MR registration. Also, as discussed with @jblomer, this is a separate problem that will be addressed in a separate PR if need be (CC: also FYI, @glmiotto :-)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8634#issuecomment-1424850942:35,resume,resumed,35,https://root.cern,https://github.com/root-project/root/pull/8634#issuecomment-1424850942,1,['resume'],['resumed']
Usability,"> @olantwin have you checked the reference Guide too ? That's where ALL the information should be. I have looked, but I failed to find much by navigating manually and by searching in the top right corner. But maybe I wasn't looking in the right place.; The only other information I found that touches on splitlevels are a few paragraphs in the [TTree documentation](https://root.cern/doc/v626/classTTree.html) (which has disappeared in [6.28](https://root.cern/doc/v628/classTTree.html)?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12551#issuecomment-1485396977:43,Guid,Guide,43,https://root.cern,https://github.com/root-project/root/pull/12551#issuecomment-1485396977,1,['Guid'],['Guide']
Usability,"> @phsft-bot build!; > ; > Could you update the commit message to something like:; > ""[rootcling] Don't generate dictionary to throw it away when called with -r; > ; > This patch should speed up rootcling -r and simplify some of the conditional logic."". It's just cosmetics, but could you maybe shorten the first line a bit more? In github, the `-r` starts to fall into the next line.; ""[rootcling] Suppress dictionary when called with -r.""; Then, the ""throwing away"" part etc can go into the body.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5223#issuecomment-606481867:212,simpl,simplify,212,https://root.cern,https://github.com/root-project/root/pull/5223#issuecomment-606481867,1,['simpl'],['simplify']
Usability,> @phsft-bot build. Ahha I dont have that power. I saw the build failed and that this branch was waay behind the master branch so simply merged in the current version of the protject-root/master,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4141#issuecomment-778647982:130,simpl,simply,130,https://root.cern,https://github.com/root-project/root/pull/4141#issuecomment-778647982,1,['simpl'],['simply']
Usability,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9301#issuecomment-973325971:116,feedback,feedback,116,https://root.cern,https://github.com/root-project/root/pull/9301#issuecomment-973325971,1,['feedback'],['feedback']
Usability,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it?. If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6532#issuecomment-722648289:20,simpl,simplifying,20,https://root.cern,https://github.com/root-project/root/pull/6532#issuecomment-722648289,3,['simpl'],"['simple', 'simplify', 'simplifying']"
Usability,"> AFAIK the new autoloading is not available for COFF?; > ; > Do we understand (as in reproduced and debugged) where the original issue is coming from? Let's _first_ do that and _then_ try to repair, please. We do have coff support in symbol resolution and it is default already: https://github.com/vgvassilev/cling/blob/329af99e47a39526df49c27abd10d3306fbc7c9b/lib/Interpreter/DynamicLibraryManagerSymbol.cpp#L933. I think there is a pretty clear explanation where this comes from in the commit history. We could not load `gRandom`. That was with the very old dyld-based approach to loading symbols. This PR checks if the new approach has the same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10330#issuecomment-1089868124:442,clear,clear,442,https://root.cern,https://github.com/root-project/root/pull/10330#issuecomment-1089868124,1,['clear'],['clear']
Usability,"> Actually, it *is* clear. I'm an experimentalist. ;-) Thanks for the info, Wim! I'll implement something along those lines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7290#issuecomment-786153005:20,clear,clear,20,https://root.cern,https://github.com/root-project/root/pull/7290#issuecomment-786153005,1,['clear'],['clear']
Usability,"> After the discussion at #8828 I have the impression that this shouldn't get merged. We might want to have an `Error()` call or similar instead. @hahnjo what's your opinion?. Yes, I wasn't sure either. I think Cling shouldn't crash (fixed for now with #9093), but because of the ambiguity of `std::ns` and `::ns`, I agree it would be more ""user-friendly"" to directly error out if a user tries to define a namespace that exists below `std::`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9089#issuecomment-950711308:341,user-friendly,user-friendly,341,https://root.cern,https://github.com/root-project/root/pull/9089#issuecomment-950711308,1,['user-friendly'],['user-friendly']
Usability,"> Also (I probably missed something) are we replacing the current multi-level gDebug by a simple bool? (I.e. either nothing or a flood of a data)?. There are verbosity levels (fatal...debug), both global and per ""channel"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6875#issuecomment-735623932:90,simpl,simple,90,https://root.cern,https://github.com/root-project/root/pull/6875#issuecomment-735623932,1,['simpl'],['simple']
Usability,"> Also some time ago we discuss functionality to resize left area in the SplitApp (where files list is shown). Did you found correspondent components?. Yes and no, the component that you showed me on the demo was a very big and complex component that would have need a complete refactor of a lot of things. https://openui5.hana.ondemand.com/entity/sap.f.tutorial.fiori2/sample/sap.f.tutorial.fiori2.12 . The other solution that i found that would have been custom resize will not fit also because of the Tree table :. https://openui5.hana.ondemand.com/entity/sap.tnt.ToolPage/sample/sap.tnt.sample.ToolPage. So for now i don't think this is possible with a UI5 component, i thinks that we can recode the functionality of the SplitApp using just a Splitter, but it will be complexe for the Responsive",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4646#issuecomment-575607722:789,Responsiv,Responsive,789,https://root.cern,https://github.com/root-project/root/pull/4646#issuecomment-575607722,1,['Responsiv'],['Responsive']
Usability,"> Also, it seems to me that indeed in the case of a templated move constructor, the AST generated by clang simply does not report it in the class definition data, see [this example](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DIApACYAQuYukl9ZATwDKjdAGFUtAK4sGIAMykrgAyeAyYAHI%2BAEaYxCAA7KQADqgKhE4MHt6%2BASlpGQKh4VEssfFJdpgOmUIETMQE2T5%2BgVU1AnUNBMWRMXGJtvWNzbltwz1hfWUDCQCUtqhexMjsHAoExF4OANQAgiYJVhp7O2c7YQQ7LAdHkmaHACIm/sen53sQczuHVgnPJ3O%2BwgaAYG325gAbN8Xo8dlh6ARMC83kCkSxkgYkS83AQAJ7JRisTA7AAqP38cMuL2wJkBHwgpyhUJhRyedNuz1eHMuO34qEZOyYFLhtz%2Bj1ZFh2xEwBGWDCFADobiifv8ORwFrROABWXh%2BDhaUioThuazWHYKJYrEnmfw8UgETSahYAaxAZh1%2Bk4kn1zuNnF4ChAGkdzoWcFgSDQGLocXIlBjyTj8WQBiMXEhGiYCiUjT4dCRxGDEGi/uiYQaeM4DorzGIeIA8tFtNUndxeDG2IJGwxaNXDbwsNEvMA3GJaMGO6QsCxDMBxIOZ3gZTUAG6YKdGzCqapeJE13iXTDape0PDRYhVjxYf2bPAsQ8LKgGYAKABqeEwAHdG4SDQ6/CCCIYjsFIMiCIoKjqEuuhcPo84oOalj6BewaQAsqDJI4AhTrwqAbsQxB4Fg6FfLYJ5tpkLgMO4ngtBIZhBLRvSlOUICQvk6Q4Vk9G5FwTGpNxmSsf08Sce0PFdCMfF%2BAJFH2FJEyiTM4lDN0oxyUxGzdCp7HQosyyrBIWq6n6S4mhwOyqAAHJCAC0kKSDsabzjsmaKhonk7BAOZ5jxCjfBAuCECQPxmPacy8O2WhzG6HpeqevqkAaRqWUGIZhoOEYwIgIBLAQyT7gmIKoLG9DEBExKcLZDlOTswDIMg7n%2BIqZi8Jg%2BBEMR6B6EBwiiOI4H9VBaj%2BnBpDfleyRPt6HB6il/qWY2%2B5FVcqBUNZdmOc5rlGO5kKed5vm5nEAVBR45VxOFkXReG8VcIqCTPTqZhmAAnP4OrPe9NmZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsmCYMTGimfNQP4Zwezgp%2BP7XbVO0uem6MeV5WMnf5eNBSF3U3fBOyXcmFVe1FWWxfFkg2W1b2SM9GhOW9GhcDZc3JalpscBlobg3Fc3tYtFkgxnCyEekziSEAA%3D). There, by commenting the template declaration of the move constructor, one can see the corresponding AST definition data being filled, i.e. from; > ; > ```; > | | |-MoveConstructor; > ```; > ; > to; > ; > ```; > | | |-MoveConstructor exists non_trivial user_declared; > ```; > ; > I am surely not expert enough in this area, but I noticed that when the constructor is t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14426#issuecomment-1918556597:107,simpl,simply,107,https://root.cern,https://github.com/root-project/root/pull/14426#issuecomment-1918556597,1,['simpl'],['simply']
Usability,"> Although the ProgressBar won't be a progress bar when we don't know the number of events ... You're right, better name pending (`AddProgressIndicator`?). > It would actually be amazing if I could get access to the LoopManager, because then I could just register the callback using RLoopManager::RegisterCallback. Yes that's a great idea, there are actually several advantages:. - as you mention, in the callback you wouldn't have to discard a partially evaluated result anymore; - `AddProgressIndicator` wouldn't need to return anything, it can just do what it says without users having to deal with the returned object; - probably the biggest: we wouldn't have to do any magic to make sure that the method is called _on the head node_ (because if you call it on a `Filter`, now you are updating the progress bar every N _filtered_ entries) . Now -- of course we don't just expose the `RLoopManager` to _anyone_, but we trust you, so you can add a `ROOT::Internal::ExtractLoopManager` function as a friend of `RInterface` that just returns `interface.fLoopManager`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8675#issuecomment-880538021:38,progress bar,progress bar,38,https://root.cern,https://github.com/root-project/root/pull/8675#issuecomment-880538021,2,['progress bar'],['progress bar']
Usability,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```; new TCanvas(); // assign gPad - unreliable; ...; histo->Draw(); ```. I want to avoid gPad - for that I need to write now:; ```; auto c1 = new TCanvas();; ...; if (c1->GetListOfPrimitives()) {; c1->GetListOfPrimitives()->Add(histo);; c1->Modified();; }; ```. This is main pattern for 90% of graphical tutorials which I want to be looking:; ```; auto c1 = new TCanvas();; ...; c1->Add(histo);; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15822#issuecomment-2162904388:253,simpl,simple,253,https://root.cern,https://github.com/root-project/root/pull/15822#issuecomment-2162904388,1,['simpl'],['simple']
Usability,"> And also, apologies for this, should we rename TCutInfo to RCutInfo before making it writeable? I think we simply forgot to rename that ancillary class when TDataFrame was renamed into RDataFrame... This class has been in the public namespace for years, so I don't think we can do that. What we can do is we can make an `RCutInfo` class, then alias `using TCutInfo = RCutInfo;`. How does that sound?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14833#issuecomment-1966233201:109,simpl,simply,109,https://root.cern,https://github.com/root-project/root/pull/14833#issuecomment-1966233201,1,['simpl'],['simply']
Usability,"> And it seem that there is no ""Issues"" tab in this repository. I have got some suspicious places and > I'm not sure how to fix them. Indeed we only use github for merge request. Issues are being tracked in JIRA at:. https://sft.its.cern.ch/jira/issues/?jql=project%20%3D%20ROOT. To create an issue: https://sft.its.cern.ch/jira/secure/CreateIssue.jspa?pid=10010&issuetype=1. See also https://root.cern.ch/guidelines-submitting-bug",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/249#issuecomment-248249682:406,guid,guidelines-submitting-bug,406,https://root.cern,https://github.com/root-project/root/pull/249#issuecomment-248249682,1,['guid'],['guidelines-submitting-bug']
Usability,"> And that about clang-tidy analyzer errors?. They are not related to this PR of course but it looks like (in first approx) they need to be fixed/looked-at. > It complains that virtual methods like SysOpen called in constructor - how it could works at all?. It works because it calls what the virtual table shows 'so-far' and essentially it is equivalent to a call to TFile::SysOpen, we probably ought to make it clear and do the substitution explicitly in the code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4253#issuecomment-523471856:413,clear,clear,413,https://root.cern,https://github.com/root-project/root/pull/4253#issuecomment-523471856,1,['clear'],['clear']
Usability,"> And what about something simpler and faster to execute (no need for a TGraph2D) moreover with this new version the peaks appears much better on the 3D view. Ah yes, this looks much smoother, Thank you :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7801#issuecomment-816567262:27,simpl,simpler,27,https://root.cern,https://github.com/root-project/root/pull/7801#issuecomment-816567262,1,['simpl'],['simpler']
Usability,"> Another question is if gGeometryLocked should be a member of the TGeoManager and the; > TGeoElement checks via the gGeoManager->SetDefaultUnits(...), but this sure is a change of; > behavior and also not so simple to implement rigorously. It would however bind units to an instance of the TGeoManager. I'm not sure we want to support the complications coming from handling 2 geometries in memory with different systems of units. If we bump into a real use case that cannot live without this, we may change this later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11789#issuecomment-1329220374:209,simpl,simple,209,https://root.cern,https://github.com/root-project/root/pull/11789#issuecomment-1329220374,1,['simpl'],['simple']
Usability,> Approving. Could you still open a new PR (probably on roottest) to explicitly test the multi library setups for both simple types and complex type. Thanks. Once more: There is nothing to test for complex types wrt `TDataType::GetType` - it's not handled anyway.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7776#issuecomment-831409669:119,simpl,simple,119,https://root.cern,https://github.com/root-project/root/pull/7776#issuecomment-831409669,1,['simpl'],['simple']
Usability,"> Are now the partial files in the /tmp or equivalent directory? . Because the intermediary files could be large or numerous, if we rely on a shared directory we ought to create them in a user-specific subdirectory. However using a shared directory may cause problem in itself. On some system /tmp is small and /var/tmp should be used (or maybe simply use what TMPDIR says). All in all, it might even be better to use a (subdirectory of the) output directory which is, per se, guaranteed to be writeable by the user (or the output can not be done). However, whether it has enough space for twice the final output size is a (small) concern.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/491#issuecomment-293284209:345,simpl,simply,345,https://root.cern,https://github.com/root-project/root/pull/491#issuecomment-293284209,1,['simpl'],['simply']
Usability,"> Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon?. Hi @taehyounpark! We have recently upgraded the cppyy frontend in ROOT, which will be part of ROOT 6.32:; https://github.com/root-project/root/pull/14507. However, it doesn't fix this reproducer. I suspect that this also requires to synchronize the [cppyy-backend](https://github.com/wlav/cppyy-backend/tree). The problem is that this backend is a fork of ROOT itself, including cling. And then, cppyy made patches to this fork of cling/ROOT for e.g. better lambda support and other advanced C++ features and details of the type system. The problem is that we can't take these patches 1 to 1 back to ROOT, because ROOT also used Cling for other things like IO, and the patches in cppyy did not have to consider compatibility with that. We try to make cppyy independent of cling on the long term to solve this conundrum. In the meantime, I can see what we are exactly missing in upstream ROOT or Cling to make the reproducer in this issue work. Maybe it is an uncontroversial patch. This will also take some time though. I worked a lot on PyROOT in the last weeks and have to work on other responsibilities in the next weeks before coming back to this. Or maybe @wlav has a hint?. > In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work?. Unfortunately not. In ROOT, we don't use complicated template code with type traits in user interfaces. That's maybe my recommendation to you: can you simplify the user-facing interface and hide the templated stuff maybe behind some type-erased types or simplify it a bit? IMHO, templates are great for efficient implementations, but for user interfaces it can be a nightmare (think only about the error messages...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15062#issuecomment-2022342966:1546,simpl,simplify,1546,https://root.cern,https://github.com/root-project/root/issues/15062#issuecomment-2022342966,2,['simpl'],['simplify']
Usability,"> Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'?. I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14439#issuecomment-1924166327:24,guid,guidelines,24,https://root.cern,https://github.com/root-project/root/issues/14439#issuecomment-1924166327,2,['guid'],"['guideline', 'guidelines']"
Usability,"> As a logical extension, the same happens for any additional branch that later files have, for example:. Thanks for the example. I simplified it further down to:. ```; #include ""TTree.h""; #include ""TFileMerger.h""; #include ""TFile.h""; #include ""TFileMergeInfo.h"". void printBranches(TTree *const tree) {; printf(""PrintBranches:\n"");; for (auto *branch : TRangeDynCast<TBranch>(tree->GetListOfBranches())) {; printf("" %s\n"", branch->GetName());; }; }. void ROOT_4716() {; TTree atree(""tree"", ""title"");; int value;; atree.Branch(""a"", &value);; printBranches(&atree);. TTree abtree(""tree"", ""title"");; abtree.Branch(""a"", &value);; abtree.Branch(""b"", &value);; value = 42;; abtree.Fill();; printBranches(&abtree);. TTree dummy;; TList treelist;; treelist.Add(&atree);; treelist.Add(&abtree);; std::unique_ptr<TFile> file(TFile::Open(""c.root"", ""RECREATE""));; TFileMergeInfo info(file.get());; dummy.Merge(&treelist, &info);; printBranches(&dummy);. treelist.Clear();; treelist.Add(&abtree);; std::unique_ptr<TFile> file2(TFile::Open(""d.root"", ""RECREATE""));; TFileMergeInfo info2(file2.get());; atree.Merge(&treelist, &info2);; printBranches(&atree);; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14558#issuecomment-2022610545:132,simpl,simplified,132,https://root.cern,https://github.com/root-project/root/issues/14558#issuecomment-2022610545,2,"['Clear', 'simpl']","['Clear', 'simplified']"
Usability,"> As a side remark, it sounds expensive to recreate all managers and passes for every module. Is this also what upstream does if it runs on multiple input files?. I agree that it might not be very efficient to recreate all managers/passes for every module. I've been looking upstream and couldn't find any instance where populating pass/analysis managers and running passes are separated (unlike the legacy pass manager). . I used this as a reference for this PR: https://reviews.llvm.org/D123425. [This issue](https://discourse.llvm.org/t/segmentation-faults-running-the-new-llvm-modulepassmanager-with-default-pipeline/59105) is what I think happened with the failing tests for us. From the thread, they recommend using a new instance every time we perform codegen as the analyses might not be cleared. I could also try using the clear() method instead,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1864281326:796,clear,cleared,796,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1864281326,2,['clear'],"['clear', 'cleared']"
Usability,"> As far as I can tell this requires the user code to be thread safe, which does not seem to be the case of the example. Yes the example is meant to be single threaded. If users run the analysis on multiple threads they have to make sure the callback can be called by multiple threads concurrently. > it is not clear whether the call back will see the global partial result or the partial result so far on the 'current' thread. No guarantees there: it's going to be a ""partial result"".; If it's ""thread-local partial"" or ""global partial"" depends on what each action's `PartialUpdate` method will do in practice. For some kind of actions it might be fine in terms of RAM and runtime to expose the ""global"" partial result, for others it could be an issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331171774:311,clear,clear,311,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331171774,1,['clear'],['clear']
Usability,"> As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. This guideline entry talks about construction, ie `auto q = make_unique<Foo>(7);`. Here we already have `weightVar` constructed and want to assign to it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10263#issuecomment-1081654215:88,guid,guidelines,88,https://root.cern,https://github.com/root-project/root/pull/10263#issuecomment-1081654215,2,['guid'],"['guideline', 'guidelines']"
Usability,"> Awesome, @AniqJaved - thanks a lot for all your work!; > ; > * Could you please reduce the number of commits to something like 5 max? I'm happy to. show you how to rewrite the commit history.; > ; > * `.github/workflows/root-ci-config/__pycache__/build_utils.cpython-39.pyc`, `patch.txt`, and `.github/workflows/root-ci-config/test_file.py` won't be needed in the repo, please don't add them.; > ; > * `.github/workflows/test-coverage.yml` needs only one platform iiuc? Why does it have e.g. `build-macos`?; > ; > ; > I will have a closer look at the code after we chat tomorrow :-). Thank you for your help along the way @Axel-Naumann 💯 🙌,; I have made the proposed changes relating to the files, but I am not sure how to decrease the number of commits, would love to have your guidance on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13394#issuecomment-1665533318:781,guid,guidance,781,https://root.cern,https://github.com/root-project/root/pull/13394#issuecomment-1665533318,1,['guid'],['guidance']
Usability,"> BTW, why doing this test ? we have something working with all bash versions, simply use it. good point. I just changed it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1081930311:79,simpl,simply,79,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1081930311,1,['simpl'],['simply']
Usability,"> Bertrand, In my mind, after PR #9669 merged, one simply can remove build/win directory from includes at all - also inside ROOT. Nope, it doesn't work. It would require more changes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9671#issuecomment-1019957172:51,simpl,simply,51,https://root.cern,https://github.com/root-project/root/pull/9671#issuecomment-1019957172,1,['simpl'],['simply']
Usability,"> But how do you solve the modules.idx creation, can you link to a patch?. The build is actually cross-compiling as requested in the `conda-forge.yml` file (e.g. [here](https://github.com/conda-forge/root-feedstock/blob/1987df5fb087fb149f114dab14f6dd5f99e3156d/conda-forge.yml#L4)). Then the conda forge CI is able to automatically detect that an executable e.g. `rootcling_stage1` that is being invoked during the build was built for a different target platform than the build one. In such cases, it runs that executable via `qemu` (which in turn is enabled by `binfmt_misc`). There's some hint of it in the CI files such as https://github.com/conda-forge/root-feedstock/blob/1987df5fb087fb149f114dab14f6dd5f99e3156d/.azure-pipelines/azure-pipelines-linux.yml#L90-L96 (these are generated automatically by conda-forge). This does not explain alone the fact that there is also a patch to disable `hsimple.root` generation in the conda forge ROOT feedstock. At some point in the past that was generating some other problem at build time (unclear whether that was only fault of ROOT or also a bug in qemu itself, see [this bug report](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=999421)), so that patch was added. IMHO clearly the better approach is to have less patches and walk towards a fully cross-compilable ROOT build, albeit this PR might be just a very small step.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15930#issuecomment-2205465973:1223,clear,clearly,1223,https://root.cern,https://github.com/root-project/root/pull/15930#issuecomment-2205465973,1,['clear'],['clearly']
Usability,> But how it not recognize such simple error?. Likely because the includes happen to be ordered such that `vector` etc are included before that header gets included.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4380#issuecomment-530800769:32,simpl,simple,32,https://root.cern,https://github.com/root-project/root/pull/4380#issuecomment-530800769,1,['simpl'],['simple']
Usability,"> But there are many scenario's where inspecting the set can provide better arguments to BestViableFunction(). Yes, that's what you explained. > I'm doing expression-based invocation already. OK excellent, then I don't see an issue. Note that you *cannot* spell the scope of hidden friends, i.e. you cannot invoke them by anything but expressions. It wasn't clear from what you said whether you were aware of that. And the fact that it's not a concern now is of no concern to me, as we should plan for C++20 and up, not the past. We'll come up with an interface proposal and run that by you (problem as usual isn't so much brain but time). Until then: I hope you agree that #6389 is an incremental improvement, happy to hear your comments there as it also touches cppyy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-697616097:358,clear,clear,358,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-697616097,1,['clear'],['clear']
Usability,"> But yes i can implement those button if you want !. It is simplest solution for now, later you can try do it better",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4646#issuecomment-575622826:60,simpl,simplest,60,https://root.cern,https://github.com/root-project/root/pull/4646#issuecomment-575622826,1,['simpl'],['simplest']
Usability,"> By the way, from the new ROOT website, I do not see what is the clicks-series leading to the Old Users Guide. Yes, it seems the problem arises mainly when googling. The first two results lead you to the deprecated users guide. ![image](https://user-images.githubusercontent.com/10653970/172875715-28ccea27-c989-4658-80e8-7ef7bcb437ea.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10722#issuecomment-1151216488:105,Guid,Guide,105,https://root.cern,https://github.com/root-project/root/issues/10722#issuecomment-1151216488,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"> Can we at least make EndOfProcessCleanups truly a no-op if it's not the first time it's been called? . Well, maybe, maybe not. If it is currently not a true no-op then it might be either. * (a bug) some list is not properly cleared; * (a feature) some items are added to the to-be-cleaned list between the 2 calls. > This should let Python call it before point (5) above, then when it's going to get called by the TApplication it won't bother RDF. . It *must* be called (by python) during point (1) (which maybe what you meant) and RDF should not be doing anything after (5) so it should *already* not bother RDF. But maybe I am missing something. I.e. is the second call to `EndOfProcessCleanups` a red-herring that 'just' looks suspicious and the problem is ""first call affecting RDF"" or is it really the 2nd call that is creating a problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10753#issuecomment-1155649950:226,clear,cleared,226,https://root.cern,https://github.com/root-project/root/pull/10753#issuecomment-1155649950,1,['clear'],['cleared']
Usability,"> Can we not have a more simple standard way to get a such identifier ?. I commited a fix, would you mind giving it a try ?. Thanks! :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1081646859:25,simpl,simple,25,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1081646859,1,['simpl'],['simple']
Usability,"> Can we simply add const TROOT *&GetROOTPtrRef(), in the source file of where gROOT is injected in the list of globals?. Question - should this function be public? ; And that about other gInterpreter and gClient?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3208#issuecomment-457718764:9,simpl,simply,9,https://root.cern,https://github.com/root-project/root/pull/3208#issuecomment-457718764,1,['simpl'],['simply']
Usability,"> Can you come up with a reproducer for what you see?. @Axel-Naumann : The following simple test case; ```; #include <TROOT.h>; int main(int argc, char** argv) {; gROOT->GetInterpreter();; return 0;; }; ```; compiled via; `c++ -o test -O0 -ggdb `root-config --libs` -I`root-config --incdir` -std=c++17 test.cpp /usr/lib64/libgandiva.so`; yields the error for me. I have a system installation of arrow with gandiva. If I remove the libgandiva.so from the command line, it works fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4689#issuecomment-566586924:85,simpl,simple,85,https://root.cern,https://github.com/root-project/root/pull/4689#issuecomment-566586924,1,['simpl'],['simple']
Usability,"> Can you elaborate a bit: what is the purpose of this change or the benefits/changes to the code using views?. Sure, `RNTupleGlobalRange` and `RNTupleClusterRange` before this PR are defined as forward ranges. So they can basically be used in a range-for loop and for STL algorithms, but they will use slower versions in some cases, because of the less capable iterator category. A good example is that `std::distance(globalRange.begin(), globalRange.end())` unnecessarily has linear complexity, although it could easility be constant. This effects us a lot as well for the parallel STL. E.g. spanning a parallel index space:; ```c++; std::for_each(std::execution::par, globalRange.begin(), globalRange.end(), [](NTupleSize_t i) { ... });; ```; This has unnecessary complex setup time, because partitioning the index space has linear complexity due to the iterator category. The support for C++20 ranges is orthogonal to these usuability improvements, but should fall out for free. Allowing the refactored types to be used with ranges is just a cherry-on-top to allow the client using the RNTuple API to combine it with a larger set of the C++ standard library. So this changeset is mainly about broadening the usability of these types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12140#issuecomment-1410407239:1212,usab,usability,1212,https://root.cern,https://github.com/root-project/root/pull/12140#issuecomment-1410407239,1,['usab'],['usability']
Usability,"> Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier. Okay, so I created a pull request https://github.com/wlav/cppyy/pull/207 as you suggested. But I am not sure how to backport the commit here. Would you be able to guide me how to do it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14293#issuecomment-1866699281:331,guid,guide,331,https://root.cern,https://github.com/root-project/root/pull/14293#issuecomment-1866699281,1,['guid'],['guide']
Usability,> Congrats @AdvaitDhingra !. Thank you 😊. And thank you to everyone for their help (especially @eguiraud). I have learned a lot and will continue to contribute to this project 😀. Have a nice weekend.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-782457854:114,learn,learned,114,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-782457854,1,['learn'],['learned']
Usability,"> Could it be related to empty base class optimization, or in this case the lack thereof due to multiple inheritance? But in this case, why is the padding missing for `std::variant<X>`, with `struct X {int i; bool b;};`?. So it turns out this is due to EBCO, or rather its non-happening: The reason is that both `std::variant` and `std::optional` inherit from `__sfinae_ctor_base` and `__sfinae_assign_base` and EBCO is not allowed to optimize two empty types at the same offset. That's why the inner type has to have at least one byte of padding, which increases to 4 bytes offset due to alignment. A simplified example is; ```c++; class Empty {};; class Inner : private Empty {; int i;; };; class Outer1 {; Inner i;; };; class Outer2 : private Empty {; Inner i;; };. static_assert(sizeof(Outer1) == 4);; static_assert(sizeof(Outer2) == 8);; ```; (https://godbolt.org/z/6dGdTK6ha) where `Outer2` mimics the case of `std::variant<std::optional<...>>`. Naturally, `struct X` on the other hand does not inherit from the same empty base classes and doesn't need the padding. The problem for RNTuple code is that this can happen for other STL (value) containers as well; we should probably check `std::pair`, `std::tuple` and maybe also maps (not familiar with the implementation). `std::vector`s should be fine because we only need to locate the pointer. (Edit: after further investigation, it appears that this problem is specific to the combination of `std::variant` and `std::optional` that are the only ones using the `__sfinae_*` base classes). ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15534#issuecomment-2133063596:602,simpl,simplified,602,https://root.cern,https://github.com/root-project/root/issues/15534#issuecomment-2133063596,1,['simpl'],['simplified']
Usability,"> Could some text be added to explain why the subtraction was needed and is no longer needed? (i.e. It was clearly intentional and the reason it was there may or may not be relevant anymore). The subtraction was never needed, this was a way to cast a pointer into an integer via a `ptrdiff_t`. I can elaborate on this, but I'm not sure this really adds value to archeological investigations that might ever come across this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9969#issuecomment-1060995959:107,clear,clearly,107,https://root.cern,https://github.com/root-project/root/pull/9969#issuecomment-1060995959,1,['clear'],['clearly']
Usability,> Did you make any performance studies?. I wanted to see with rootbench. I did a simple `root hsimple.C` comparison where I neither expected nor saw noticeable differences.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8804#issuecomment-893758696:81,simpl,simple,81,https://root.cern,https://github.com/root-project/root/pull/8804#issuecomment-893758696,1,['simpl'],['simple']
Usability,"> Did you make sure it works for -Dcxxmodules=On?. How I can check it? I cannot compile current master when specifying `-Dcxxmodules=On`.; Same will be after I merge this PR. There is simple error which can be fixed in graf2s/mathtext/inc/mathrenderer.h, but it does not solve general compilation errors with cxxmodules. I test both on mac and linux platforms",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5791#issuecomment-640223995:184,simpl,simple,184,https://root.cern,https://github.com/root-project/root/pull/5791#issuecomment-640223995,1,['simpl'],['simple']
Usability,"> Do we need to keep the credential file around during the time that the build happens? Or can we delay the creation of this file until after the build? Or remove it before the build starts? I understand that the CI workflow can be maliciously changed - but a change to the CI workflow is a very visible change, more than a simple addition of `print some credential file` as part of the build system... You're saying that having the file available at certain steps such as in the workflow definition and right before uploading is managable but that that it should be unavailable while e.g. cmake is running?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12201#issuecomment-1412402025:324,simpl,simple,324,https://root.cern,https://github.com/root-project/root/pull/12201#issuecomment-1412402025,1,['simpl'],['simple']
Usability,"> Do you mean that the sanitiser report when running the following unit test; > ; > ```c++; > #include ""vir/test.h"" // This include has to be first -> https://github.com/mattkretz/virtest; > ; > TEST(){ std::cout << ""Hello world\n""; }; > ```; > ; > compiled linking to ROOT is about the leakage you usually suppress? 🤔. I just tried and with this simple example I don't see anything, which is totally expected because it doesn't even initialize ROOT. The other reports that you provided before were the leakage we know about, or in the case of `TemplateIdAnnotation` are fixed by https://github.com/root-project/root/pull/16150. > Still [the reported leakage above](https://github.com/root-project/root/issues/14055#issuecomment-1814642915) is a real one which appeared in `v6.28` and was not there in `v6.26`. Yes, that's why I didn't close the issue back then and came across this when re-evaluating open issues. I totally understand that creating a reproducer takes time, but I fear without it there isn't much we can do without it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-2371254649:347,simpl,simple,347,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-2371254649,1,['simpl'],['simple']
Usability,"> Do you mean the header of the Canvas? Because I tried this and it is unable to render the symbols. (See the top of the window). No I mean in the comments, the header of the macro, the markdown part, where you put the comments which will then appear on the web in the root reference guide. You add a comment saying ""The formula is ... bla bla ... "" then you put the formula like:; \f$ the_formula_in_Latex_format \f$",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7801#issuecomment-816637869:284,guid,guide,284,https://root.cern,https://github.com/root-project/root/pull/7801#issuecomment-816637869,1,['guid'],['guide']
Usability,> Does that sound ok?. Yes this is clear. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1065#issuecomment-334540195:35,clear,clear,35,https://root.cern,https://github.com/root-project/root/pull/1065#issuecomment-334540195,1,['clear'],['clear']
Usability,"> Doesn't [root-project/cling#430](https://github.com/root-project/cling/issues/430) require a simpler fix by adding libSerialization to the list of linked libraries?. That wouldn't be sufficient at least for linking to a shared library LLVM.so. When LLVM is built this way (`-DLLVM_BUILD_LLVM_DYLIB=ON`, which is what LLVM recommends over `BUILD_SHARED_LIBS=ON` these days, the many lib*.so of LLVM are all gone and everything is in a single `LLVM.so` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563#issuecomment-2121573684:95,simpl,simpler,95,https://root.cern,https://github.com/root-project/root/pull/15563#issuecomment-2121573684,1,['simpl'],['simpler']
Usability,> DrawClone draws in in the SelectedPad see https://root.cern/doc/master/classTObject.html#a7cd0f76ae1791c469f9472a9d4c8d6f9; > It was initially meant to be used interactively to draw an object from a pad to the selected one.; > The question is more: Why do we need DrawClone in these examples (a simple Draw should be fine) ? I do not have FITS installed right now. I will need to make a new ROOT install with it to try. The problem is described at [link](https://root-forum.cern.ch/t/bug-report-drawclone/39558),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5680#issuecomment-633401928:297,simpl,simple,297,https://root.cern,https://github.com/root-project/root/pull/5680#issuecomment-633401928,1,['simpl'],['simple']
Usability,"> EDIT: ah we use them for the call to SetCacheEntryRange, and they are not really global but they are relative to the task-specific chain uhm....it feels like some simplification is possible, if they are relative to the task-specific chain can't they be calculated from the rest?. Yes exactly, they are not global global, but global to the local partial chain that the task needs to process. That's why I say you just strictly need `globalstart, globalend, filelist, treesnentries`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8646#issuecomment-895362702:165,simpl,simplification,165,https://root.cern,https://github.com/root-project/root/pull/8646#issuecomment-895362702,1,['simpl'],['simplification']
Usability,"> Evolve == break for current users. Not _necessarily_, right?. It shouldn't be a breaking change to e.g. have `ROOT_GENERATE_DICTIONARY` automatically call the appropriate `configure_file` or `target_include_directory`..?. P.S.; just so we are clear, I'm not suggesting to break anything for users :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8308#issuecomment-856227664:245,clear,clear,245,https://root.cern,https://github.com/root-project/root/issues/8308#issuecomment-856227664,1,['clear'],['clear']
Usability,> Excellent notes. Do we want to include brief mentions of the PoW items which were addressed (clearly w/o linking to the PoW). We should mention the zero-copy bulk read option,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15630#issuecomment-2129035749:95,clear,clearly,95,https://root.cern,https://github.com/root-project/root/pull/15630#issuecomment-2129035749,1,['clear'],['clearly']
Usability,"> Failure to meet that signature leads to an explosion of template instantiation failures with gcc. We should have better SFINAE code that provides clearer errors. > Show how to do a parallel for using Map()?. I think `Foreach` should be used for that, see my comment at #7872",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7871#issuecomment-819540665:148,clear,clearer,148,https://root.cern,https://github.com/root-project/root/issues/7871#issuecomment-819540665,1,['clear'],['clearer']
Usability,"> Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)].; > ; > For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here). Ah ok. I recently learned what rebase -i is, so I'll use that next time. Thanks for the tip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8425#issuecomment-865186362:239,simpl,simplify,239,https://root.cern,https://github.com/root-project/root/pull/8425#issuecomment-865186362,2,"['learn', 'simpl']","['learned', 'simplify']"
Usability,"> For bench-marking the change can you run and compare with and without the PR:; > ; > ```; > #include ""TChain.h""; > ; > void callfuncbench(int repeat = 1000) ; > {; > TChain ch(""ntuple""); ; > for(int i = 0 ; i < repeat; ++i); > ch.Draw(""TMath::TanH(px)"", """", ""goff""););; > }; > ```; > ; > This demonstrates a simple common (indirect) usage of CallFunc.; > ; > Thanks, Philippe.; > ; > They are also usage of CallFunc in Signal/Slot mechanism and QT. I used `ctest --output-on-failure -R .*treefor.*` and `ctest -j12 --output-on-failure -R .*callfunc.*` to benchmark. I noticed around 20% slowdown and I decided to go with the enum implementation which I just pushed. Now with it we seem to be consistent with what we used to have but I am still looking how to make it faster. That benchmark runs more or less for the same time (0.16 +-2):. ```; root-callfunc-master/release $ /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1251821611:310,simpl,simple,310,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611,1,['simpl'],['simple']
Usability,"> For the `TObject` documentation I would add something along the line of:; > ; > ```; > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly.; > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15469#issuecomment-2151703325:400,clear,clear,400,https://root.cern,https://github.com/root-project/root/pull/15469#issuecomment-2151703325,1,['clear'],['clear']
Usability,"> Found it! As it turns out, it is a ""simple"" 2 line fix: [stephanlachnit@65ae229](https://github.com/stephanlachnit/root/commit/65ae229c6ba458c610f0a41d32b798a132f385e4); > ; > We need to set `LLVM_LINK_LLVM_DYLIB=OFF` for clang, this will prefer static libs. I'm surprised that this helps. I remember trying using a static-only build of LLVM to fix this with no success.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1668344363:38,simpl,simple,38,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1668344363,1,['simpl'],['simple']
Usability,"> Good Morning Mr. @couet . I just realized that the paint method of TFeynman is never being called. When I call the draw > > > method, do I want to run the paint method first before ´AppendPad`?. The Paint() method is called automatically for you when the Pad will be display. You do not need to call it. See the figure in TPad ref guide .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7820#issuecomment-820332500:333,guid,guide,333,https://root.cern,https://github.com/root-project/root/pull/7820#issuecomment-820332500,1,['guid'],['guide']
Usability,"> Great, thanks! Can you update the commit message (`git commit --amend; git push -f`) to include these findings? That makes the motivation for the change much clearer!. Done. thanks @Axel-Naumann ! Is it OK like this now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5474#issuecomment-629076607:160,clear,clearer,160,https://root.cern,https://github.com/root-project/root/pull/5474#issuecomment-629076607,1,['clear'],['clearer']
Usability,"> Having them there with the wrong signature and returning nullptr is actually worse than not having them, though. . Not having them leads to hard to track memory allocation/deletion mismatch in some cases. The best is indeed to have an implementation but a clear error (maybe throwing would be even better) is 'better' :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1393#issuecomment-347858369:258,clear,clear,258,https://root.cern,https://github.com/root-project/root/pull/1393#issuecomment-347858369,1,['clear'],['clear']
Usability,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ?. Dear @eguiraud; I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++.; Note that for simple models I have no problems.; It happens only for multidimensional multicomponent model, when I draw projecton; - first draw data set with `Invisible` flag ; - draw fit components; - draw data with normal vizibility ; ; And it segfaults at the second step. ; The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so; #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so; #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so; #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474#issuecomment-864062658:302,simpl,simple,302,https://root.cern,https://github.com/root-project/root/issues/8474#issuecomment-864062658,1,['simpl'],['simple']
Usability,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits.; > ; > I addressed all of your comments, but for one comment I'm not sure if I made the right choice.; > ; > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice?. The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > ; > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself.; Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class?. NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7344#issuecomment-792681797:936,simpl,simple,936,https://root.cern,https://github.com/root-project/root/pull/7344#issuecomment-792681797,1,['simpl'],['simple']
Usability,"> Hi @xvallspl, @lmoneta , what's the status of this PR? It looks like a nice simplification to me. Since there was no answer I rebased the PR on master and solved the conflicts. Maybe seeing now the CI results will help us to make a decision on how to continue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7002#issuecomment-1848739574:78,simpl,simplification,78,https://root.cern,https://github.com/root-project/root/pull/7002#issuecomment-1848739574,1,['simpl'],['simplification']
Usability,"> Hi Bertrand, what's the stacktrace for df017_vecOpsHEP.py? it's a very simple tutorial, so if that doesn't work i'm thinking no RDF program should work. `error code: Exit code 0xc0000374`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10721#issuecomment-1151028323:73,simpl,simple,73,https://root.cern,https://github.com/root-project/root/pull/10721#issuecomment-1151028323,1,['simpl'],['simple']
Usability,"> Hi Hanna, thank you very much for the PR!; > ; > Code changes look fine, but can you please change the commit message to explain why it was possible to use `setValFast` in `setBin`? That it's redundant to do the range, check in `getVal`, because the value you pass to `setBin` is a bin center which is in the variable range by definition anyway. Thank you for the comment, I hope the new commit message is clearer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11090#issuecomment-1202401228:408,clear,clearer,408,https://root.cern,https://github.com/root-project/root/pull/11090#issuecomment-1202401228,1,['clear'],['clearer']
Usability,"> Hi! No that's alright, we don't enforce the formatting of old code. Also a rebase is not necessary, since the tests all passed and the PR would merge fine.; > ; > Just a note: probably the PR was unattended for so long because the usecase for this feature was not clear (or you needed it in your project?). Now that we have it, we might as well merge it, but for the future try to focus more on addressing concrete use needs or improving the ROOT developer experience (like you did in many other PRs). Thanks for the feedback!. It was a feature needed for my project. Because it took long, I used a workaround with a TGLabel class, so I did not insist much either, but for the future I will make it more clear what the usecase is :). Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9156#issuecomment-1812527084:266,clear,clear,266,https://root.cern,https://github.com/root-project/root/pull/9156#issuecomment-1812527084,3,"['clear', 'feedback']","['clear', 'feedback']"
Usability,"> Hi, I don't understand what temporary gcc's message refers to?; > ; > * `GetColumnType` returns a `string` by value that is taken in as a `const string &` by `TypeName2TypeID`, so everything should be fine there; > ; > * `TypeName2TypeID` returns a `const type_info &` that is conditionally assigned to a `const auto &` and that should also be ok: the `const type_info &` is produced by expressions such as `typeid(bool)` and that value should have static lifetime; > ; > ; > Help?. GCC13 has not been officially released yet. It comes with the [new `-Wdangling-reference` diagnostic](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=106393), which I think still provides many false positives, e.g. [see this](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=107532). In particular, this warning seems absolutely bogus. It can be reproduced with this simple excerpt (compile with `g++ -Werror=dangling-reference`).; ```c++; #include <string>; #include <typeinfo>. const std::type_info &f(const std::string &);; void g() {; // A `std::string` temporary is implicitly constructed passing the string literal ""foo"" to the ctor.; // Apparently, this triggers one of the patterns in GCC's new `[-Wdangling-reference]`. ; const auto &ti = f(""foo"");; }; ```. IMO, this warning is totally bogus (and might be seen in other parts of ROOT). Thus, I would suggest not changing the code but conditionally ignoring it,; _(a)_ Either in this translation unit only; ```c++; #pragma GCC diagnostic ignored ...; ```; , or _(b)_ most likely for all ROOT (appending `-Wno-dangling-reference` from CMake). I would go for `_(b)_`, at least until the feature becomes mature enough and does not yield false positives. What do you think, @linev, @eguiraud?. Also CC: @Axel-Naumann and @hahnjo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12085#issuecomment-1403615900:845,simpl,simple,845,https://root.cern,https://github.com/root-project/root/pull/12085#issuecomment-1403615900,1,['simpl'],['simple']
Usability,"> Hmmh, so you don't want to give me an active directory? :). For the moment there is no direct support of such feature with `RWebWindow`.; But can be provided - if really necessary. In my mind, solution with direct access of font files via `currentdir/` path is much clear.; And does not require any extra threads locking. You always can implement active directory - but does it necessary with fonts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2177936944:268,clear,clear,268,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2177936944,1,['clear'],['clear']
Usability,"> How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info. The I/O still needs to be informed of this. The simplest is to a ClassDef with version 0 and generate the dictionary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3222#issuecomment-452066958:153,simpl,simplest,153,https://root.cern,https://github.com/root-project/root/pull/3222#issuecomment-452066958,1,['simpl'],['simplest']
Usability,"> How does it mess things up?. IIUC, if I have `class MyClass{} m;` on the prompt, currently we will recognize the `class` token and we will ask clang to compile it as is. With the new PR we will be playing with the lookup rules (hideDecl and more) to make sure if we unload it in future it would rewire correctly the declarations and the definitions.; > ; > > with no tests; > ; > As I said that won't be the case.; > ; > > to improve the less used feature of unloading; > ; > I don't understand this part - do you mean unloading isn't used a lot? That's totally incorrect - it's the major missing feature of cling for physicists. Not even talking about all of cling's notebook users here. I proposed to enable it for physicists within ROOT. I am opposed to enabling it by default for cling standalone with no usage experience gathered neither through the physicists nor via the notebook users. . > ; > > make this feature configurable; > ; > Do you really believe we need a flag beyond `.rawInput`? Could you argue for this, please? Too many options kill usability... As I said, I am not sure if the implementation does not force the regular person (not using unloading) to pay for something he does not use. Secondly, while I understand the test will come at some point in future, I cannot judge on the implementation without any test. Those are two points which we should always consider when enabling something of this size by default for cling standalone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4214#issuecomment-532596881:1057,usab,usability,1057,https://root.cern,https://github.com/root-project/root/pull/4214#issuecomment-532596881,1,['usab'],['usability']
Usability,"> How?. Sorry, I simply meant `std::byte b{};`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15787#issuecomment-2154673614:17,simpl,simply,17,https://root.cern,https://github.com/root-project/root/pull/15787#issuecomment-2154673614,1,['simpl'],['simply']
Usability,"> However, I think both clipping and skipping can be very dangerous. I'm about to change the behavior to simply erroring out when the values are not in the range, with the possibility to manually change that behavior to skipping or clipping if desired. Like that, there are no bad surprises. Any thoughts on that?. That sounds very reasonable. I would have intuitively assumed that the values are skipped, but if the clipping behavior also exists in the interface others might have assume that. Then it's probably best to force the users to decide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10447#issuecomment-1110909383:105,simpl,simply,105,https://root.cern,https://github.com/root-project/root/issues/10447#issuecomment-1110909383,2,"['intuit', 'simpl']","['intuitively', 'simply']"
Usability,"> However, ROOT accepts the code without complaint.; > That actually is the issue. In your original post, you mention that the behaviour you expect to see is that both parameters should be usable. Implementing this would mean openly violating C++ standard (even further than CINT already did at the time of ROOT 5.34). On the other hand, a proper fix would be raising a compiler error. I am unsure whether providing such a fix for CINT is what we want, cling already works properly and it's just a matter of updating the ROOT version. I will leave to @Axel-Naumann the final say on this. In any case, isn't it possible for you to declare functions on your application side that do not have a trailing comma?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12840#issuecomment-1570855626:189,usab,usable,189,https://root.cern,https://github.com/root-project/root/issues/12840#issuecomment-1570855626,1,['usab'],['usable']
Usability,"> I agree that we should use a ""proper"", existing option parsing library; I very much like that change! 50 lines less of our code is strictly better, hurray!; > ; > We should use that option parsing for all of ROOT's binaries. I'm extremely hesitant to select llvm's option parsing for that purpose: we want to hide llvm's symbols; only libCling and rootcling are able to access them. But that means we cannot use the same option parsing for all of ROOT - and we'll be back in an inconsistent state where everyone and their binary will roll their own. Using e.g. the head-only http://optionparser.sourceforge.net or https://github.com/jarro2783/cxxopts . root.exe argument parsing is a lot simpler (eg, we need to handle -l -b -q and hardly something more complex). The advantage of using `llvm::cl` in rootcling is that we can encapsulate the arguments in data structures which are compatible with cling. For instance, after rootcling parses the arguments it can call a future overload of `cling::Interpreter::Interpreter(llvm::cl...` where it will pass already the processed arguments. Currently we have to convert back to `const char **argv`. This would be a drawback if we use a library different than `llvm::cl`. In theory, we can make `llvm::cl` work with the argument parser of root.exe by compiling the symbols of libLLVMSupport with -fvisibility=hidden (or instruct the linker to hide them). This way we will not leak symbols outside. Having that said, the value of this PR is the refactoring itself and not the library we use. As long as the library we chose as flexible as the `llvm::cl` we can easily migrate away from it if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4171#issuecomment-524868233:690,simpl,simpler,690,https://root.cern,https://github.com/root-project/root/pull/4171#issuecomment-524868233,1,['simpl'],['simpler']
Usability,"> I also have a general comment,; > ; > https://github.com/root-project/root/blob/5d2c835d1c707dbbb9d7f1a82425c0567d5527dd/tree/ntuple/v7/doc/specifications.md?plain=1#L341-L342; > ; > it's not yet clear what are the expectation around these strings, my hunch is at write-time they come from reflection, and at read-time ROOT's internal compiler will be used to restore the field to a known (maybe user-defined) C++ type. However, in principle all the logical layout of data and types are encoded without these strings, so my questions are:; > ; > 1. for non-ROOT reader, can these be safely ignored (e.g. instead of getting back a named data struct, you get an anonymous struct by ignoring the type name); > ; > 2. for non-ROOT writer, if these are left empty, can ROOT figure out based on primitive types and compositions?. This is a good question. If you omit the type name for structs or collections, they become untyped structs or untyped collections. RDF can deal with this fully, the `RNTupleReader` currently only with untyped collections (transparently cast to an `std::vector`). In general, C++/framework code is likely to have problems with untyped structs because there is no class to read data into... Still, untyped structs and untyped collections are valid RNTuple data. For basic types, we cannot omit the type because the column only specify the on-disk type while the field type information gives the in-memory type. The two don't have to be identical (e.g. `double` in memory and `Real32` on disk). I thought we already documented the allowed combinations of POD type and column types but I now realized we didn't. We'll update the docs in a follow-up PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13779#issuecomment-1820886920:198,clear,clear,198,https://root.cern,https://github.com/root-project/root/pull/13779#issuecomment-1820886920,1,['clear'],['clear']
Usability,"> I also just checked the manual now, and branch splitting is not covered in similar detail. May be that's for @pcanal in that case to decide what should be added in the manual ... @olantwin have you checked the reference Guide too ? That's where ALL the information should be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12551#issuecomment-1485328091:222,Guid,Guide,222,https://root.cern,https://github.com/root-project/root/pull/12551#issuecomment-1485328091,1,['Guid'],['Guide']
Usability,"> I am not sure that we should increment the number of fNRuns and log as if everything went fine if an exception was thrown during the event loop. a different message might be warranted. Indeed this could be a good idea, to further clarify that the RDF is not usable anymore and should just be thrown away",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13546#issuecomment-1707966075:260,usab,usable,260,https://root.cern,https://github.com/root-project/root/pull/13546#issuecomment-1707966075,1,['usab'],['usable']
Usability,"> I am seeing a similar issue with TSystem.h, TSeqCollection *fTimers{nullptr}; //List of timers. I think we should tackle this in a separate PR. The simplest solution though is to always create the fTimers (i.e. move its creation to the constructor or init routine) and to mark it as a 'thread safe' collection:; ```; fTimers->UseRWLock();; ```; thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8379#issuecomment-857765612:150,simpl,simplest,150,https://root.cern,https://github.com/root-project/root/pull/8379#issuecomment-857765612,1,['simpl'],['simplest']
Usability,"> I am sure it is not. There is really no functional changes introduces by the commit, just a tad bit of timing difference that might make it harder to stumble upon it. Ok, I will wait for your feedback, but the difference between the versions is that one relies on the variable `done` to break out of the outer loop, while the changed version breaks out directly. I cannot see how this can be any worse than before, and since we immediately break out of both loops, I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/583#issuecomment-302389835:194,feedback,feedback,194,https://root.cern,https://github.com/root-project/root/pull/583#issuecomment-302389835,1,['feedback'],['feedback']
Usability,> I appreciate the build option! Though I'm a little concerned that the name of the build option is not self explanatory enough for everyone. Why not `-Daddress-sanitizer` or so to make it very clear?. Can be done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5066#issuecomment-592453596:194,clear,clear,194,https://root.cern,https://github.com/root-project/root/pull/5066#issuecomment-592453596,1,['clear'],['clear']
Usability,"> I believe the current failures are related to the roottest branch not being up-to-date with the latest master. Close but not quite. What is happening in the reverse. Once the CI test are started they pin the `ROOT master` commit that will be use to test. If one simply ""re-run"" the tests they will (this is intentional) use that same commit. To take in consideration new commits in the new CI build we need to do either of these 3 actions:; * Rebase the master onto the new PR branch.; * Add a new commit to the PR branch.; * Close and re-open the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14967#issuecomment-2046265770:264,simpl,simply,264,https://root.cern,https://github.com/root-project/root/pull/14967#issuecomment-2046265770,1,['simpl'],['simply']
Usability,"> I can imagine that we can make change this function to return a string and then call it when we called the `.gh` command?. Sounds great, as long as the 'stacktrace' logic does not clear it internally, once it has printed it to terminal before calling `.gh bug`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10366#issuecomment-1122636569:182,clear,clear,182,https://root.cern,https://github.com/root-project/root/pull/10366#issuecomment-1122636569,1,['clear'],['clear']
Usability,> I can't see the exact reason for clang-format error which is reported above. It simply fails for all PRs. No idea why,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9643#issuecomment-1017950333:82,simpl,simply,82,https://root.cern,https://github.com/root-project/root/pull/9643#issuecomment-1017950333,1,['simpl'],['simply']
Usability,"> I could probably write some for sqlite . It would be grate! ; As far as I know, sqllite can be squeezed in one file. If you can create such small data base (~100KB) with all supported data types and provide simple test macro for reading - it would be really grate! With mysql I am not sure how to do this easily.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3707#issuecomment-484375382:209,simpl,simple,209,https://root.cern,https://github.com/root-project/root/pull/3707#issuecomment-484375382,1,['simpl'],['simple']
Usability,> I did not look into but I thought you said this would be blocking progress in TBufferText and TBufferFile optimizations. Now I check it more precisely - TBufferSQL cannot support objects or even simple TString in TBasketSQL. Therefore it can be used even when we change streamer actions.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1817#issuecomment-378675077:197,simpl,simple,197,https://root.cern,https://github.com/root-project/root/pull/1817#issuecomment-378675077,1,['simpl'],['simple']
Usability,"> I do not understand why you have to have your FindROOT.cmake. We do provide ROOTConfig.cmake and this should be sufficient. If it is not, then this is a bug. **Be as native CMake as possible and of not try to complicate things by building additional interfaces.**. What we do in the `FindROOT.cmake` is as native and cmake idiomatic as it gets. [find_package](https://cmake.org/cmake/help/v3.0/command/find_package.html) has two modes. The one used here is the config mode which is intended to be used to find and include your package config file (`ROOTConfig.cmake`). > The functions like `ROOT_LINKER_LIBRARY` where intended for internal consumption. Does that mean you will not support usage in external projects? Or do you consider it now to support? If not, I suggest putting it in a different module, so its clearer which macros are meant to be for public use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/916#issuecomment-326541844:816,clear,clearer,816,https://root.cern,https://github.com/root-project/root/pull/916#issuecomment-326541844,1,['clear'],['clearer']
Usability,"> I don't agree with these changes for two reasons:; > ; > * The default is `cuda=OFF`, and if the user passes `cuda=ON` explicitly, it can be annoying if it is switched off at compile time because for example some environment variables were missing. We had complaints about this in the past. That's why I suggested to not have this fallback for features that are by default `OFF`. See also: [[cmake] Some improvements related to feature detection #14834](https://github.com/root-project/root/pull/14834).; > ; > * I would argue that it's not correct to set `cuda=ON` if `all=ON`. Enabling cuda disables TMVA CPU, so clearly you don't get `all` features but different ones. That's why many distros like Arch Linux have a separate `root` and `root-cuda` package. Unless this is fixed, I think the right solution to the problem is to not switch cuda on if `all=ON`. Indeed, I was wrong with the second bullet point here. I remembered it wrongly because when building with `tmva-gpu`, some tutorials use the GPU backend of TMVA by default. This first argument still holds though!. I made an alternative suggestion: https://github.com/root-project/root/pull/15155. This one also fixes the problem that the `cuda` flag is checked before it is set. It simplifies the logic also a bit: the `cuda` flag is not determining anymore if CMake will look for the CUDA language and add it to the project. It only determines if ROOTs CUDA sources are actually built.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15149#issuecomment-2039816688:617,clear,clearly,617,https://root.cern,https://github.com/root-project/root/pull/15149#issuecomment-2039816688,2,"['clear', 'simpl']","['clearly', 'simplifies']"
Usability,"> I don't agree with these changes for two reasons:; > ; > * The default is `cuda=OFF`, and if the user passes `cuda=ON` explicitly, it can be annoying if it is switched off at compile time because for example some environment variables were missing. We had complaints about this in the past. That's why I suggested to not have this fallback for features that are by default `OFF`. See also: [[cmake] Some improvements related to feature detection #14834](https://github.com/root-project/root/pull/14834).; > ; > * I would argue that it's not correct to set `cuda=ON` if `all=ON`. Enabling cuda disables TMVA CPU, so clearly you don't get `all` features but different ones. That's why many distros like Arch Linux have a separate `root` and `root-cuda` package. Unless this is fixed, I think the right solution to the problem is to not switch cuda on if `all=ON`. This sounds like a perfectly legitimate solution",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15149#issuecomment-2039583205:617,clear,clearly,617,https://root.cern,https://github.com/root-project/root/pull/15149#issuecomment-2039583205,1,['clear'],['clearly']
Usability,"> I don't think ROOT is at fault here for relying on this feature of CMake. As described in the blob post by a CMake maintainer (emphasis is mine):. > Even if find_package() were only redefined once though, it would still be relying on **undocumented** CMake behavior which may be modified or removed completely in a future version. Reliance on such behavior should be discouraged and as the above discussion shows, the technique is not safe to use in general. It's mostly sad that vcpkg did the same trick, making ROOT incompatible with it. Given the circumstances I think this cannot be fixed at the moment, since neither ROOT nor vcpkg can easily change and I also don't expect CMake to make such behavior defined and allow overriding build-ins multiple times. So I guess we need to close this is won't-fix?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633#issuecomment-898355331:238,undo,undocumented,238,https://root.cern,https://github.com/root-project/root/issues/8633#issuecomment-898355331,1,['undo'],['undocumented']
Usability,"> I don't think `#if __arm64__` will work. Should be `#ifdef __aarch64__`. Oh yes, my bad, I simply copied from the line above which is for Apple / macOS. Thanks for catching, fixing, and confirming that the approach works. Then we can merge this and backport for 6.28/02 :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12353#issuecomment-1437462950:93,simpl,simply,93,https://root.cern,https://github.com/root-project/root/pull/12353#issuecomment-1437462950,1,['simpl'],['simply']
Usability,"> I don't think it's good enough. Some header files have to be found by ROOT, and there are quite a few more packages than those two IIRC... Yeah, this wont be as simple as I thought it would be 😅 . I'll come up with a solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8732#issuecomment-886601097:163,simpl,simple,163,https://root.cern,https://github.com/root-project/root/pull/8732#issuecomment-886601097,1,['simpl'],['simple']
Usability,"> I don't understand why we would want to allow older versions than we did in the past. The reason why we restrict version - we were not testing for `json_fwd.hpp`. ; With 3.11.x version such simple restriction no longer working. But now we testing `json_fwd.hpp` and can use it, and restriction making no sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11268#issuecomment-1245012584:192,simpl,simple,192,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1245012584,1,['simpl'],['simple']
Usability,"> I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still _could_ be useful, at least partially.; > UPD: I opened a feature request for `doxygen`. Yes it takes time to generate the full documentation. But ROOT is huge. I never do it fully. Only the nightlies build it completely regularly. It takes several hours. As said [here](https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation) look at the list of folders scanned to build the reference guide. It is quite big. When I modify a piece of documentation I shorten this list to generate only what I am working on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7295#issuecomment-787906738:607,guid,guide,607,https://root.cern,https://github.com/root-project/root/issues/7295#issuecomment-787906738,1,['guid'],['guide']
Usability,"> I just checked issues with optional and they are caused because rootcling_stage1 runs in C++14 mode, but no C++17. Currently I don't see where you set a language options for rootcling_stage1. Apriori it is the same place inside cling .... Are you sure it is not simply that our clang version is too old?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/522#issuecomment-298981827:264,simpl,simply,264,https://root.cern,https://github.com/root-project/root/pull/522#issuecomment-298981827,1,['simpl'],['simply']
Usability,"> I just tried and with this simple example I don't see anything, which is totally expected because it doesn't even initialize ROOT. The other reports that you provided before were the leakage we know about, or in the case of TemplateIdAnnotation are fixed by https://github.com/root-project/root/pull/16150. Thanks. I guess what I get from the sanitiser is what you suppress. This clarifies further the situation. > I totally understand that creating a reproducer takes time, but I fear without it there isn't much we can do without it... Fair enough. I will try to find some spare hours for this. In the best case scenario ROOT `6.34` does not show the problem and I can leave here a comment and close the issue... 🤞",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-2371268142:29,simpl,simple,29,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-2371268142,1,['simpl'],['simple']
Usability,"> I mean once this option goes to the rootling, it will be off by default. It is clear how to activate it when building with CMake. But I did not find any documentation on modifying the cling invocation options for ACLIC compilation of macros. That is a tough one. [Here](https://github.com/root-project/root/blob/master/core/base/src/TSystem.cxx#L3556-L3571) we configure the rootcling invocation which ACLiC does. [Here](https://github.com/root-project/root/blob/master/config/rootrc.in#L376-L391) we have a set of customization rules for ACLiC. We may want to extend this and if that configuration is set then we can call rootcling differently. On your side, you will 'just' need to alter the `.rootrc` configuration after building ROOT. Alternatively, if your framework qualifies everything and does not require `using namespace std` we may work towards a global cmake option `-Dstrict=On` where we delete all `using namespace std` cases [here](https://github.com/root-project/root/blob/master/core/dictgen/src/rootcling_impl.cxx#L4344) and [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1278). This may require additional changes in ROOT and more investment in time but it is the right way to go IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5296#issuecomment-609575899:81,clear,clear,81,https://root.cern,https://github.com/root-project/root/pull/5296#issuecomment-609575899,1,['clear'],['clear']
Usability,"> I might be missing something, but I think the C++ logic can be simplified by removing RTypeErasedMergeables: we should be able to just return a RMergeableVariations<T> (cast to RMergeableValueBase, from which it could inherit) from RVariedAction::GetMergeableValue. What do you think?. My understanding is as follows: `RVariedAction::GetMergeableValue`'s signature is `std::unique_ptr<RMergeableValueBase> GetMergeableValue() const` . Inside the implementation of this function, I have no typename `T` with which I could construct internally a `std::vector<std::unique_ptr<RDFDetail::RMergeableValue<T>>>`. Thus, I need a struct that holds a `std::vector<std::unique_ptr<RDFDetail::RMergeableValueBase>>` (keep in mind that any subclass of `RActionImpl` defined in `ActionHelpers.hxx` has a method `std::unique_ptr<RMergeableValueBase> GetMergeableValue() const`, so inside `RVariedAction`'s `GetMergeableValue` I don't have any information about the concrete mergeable value type).; I would also just return a `std::vector<std::unique_ptr<RDFDetail::RMergeableValueBase>>` directly from this method, but then I would break the pattern of passing around unique ptrs to `RMergeableValueBase` and I would need to change the interface just for `RVariedAction`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9942#issuecomment-1061744458:65,simpl,simplified,65,https://root.cern,https://github.com/root-project/root/pull/9942#issuecomment-1061744458,1,['simpl'],['simplified']
Usability,"> I noticed that by default everything is linked using the static libraries from LLVM. As I [said](https://github.com/root-project/root/issues/12156#issuecomment-1662255320):; > if we link the static libraries we don't want to *also* link the shared library. And we prefer static libs. And what you suggest:; > In `llvm-config`, one needs to pass `--link-static`, and that's about it. Will try it... sounds both plausible and simple :-) Let us know, please!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1666916384:426,simpl,simple,426,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1666916384,1,['simpl'],['simple']
Usability,"> I reworded the documentation and commit message accordingly, can you have another look if it's clear(er) now?. To me the description in ""Ownership Model"" section is now clear. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15246#issuecomment-2069794311:97,clear,clear,97,https://root.cern,https://github.com/root-project/root/pull/15246#issuecomment-2069794311,2,['clear'],['clear']
Usability,"> I see https://github.com/root-project/root/pull/11311. This was not merged and does not reflect that actual content of the file. Somehow in your environment the code snippet I copy/pasted is failing. We need to understand if:; * If the code snippet works in (your) C++20 (expected behavior); * Why is the code snippet failing in (your) C++23 (never tested by us). This should be testable with a simple source file containing just:; ```; #include <span>; #include ""ROOT/RRangeCast.hxx""; ```; (and another test with just the second one).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13042#issuecomment-1595284979:397,simpl,simple,397,https://root.cern,https://github.com/root-project/root/issues/13042#issuecomment-1595284979,1,['simpl'],['simple']
Usability,"> I still don't see the advantage in deviating from the standard (i.e., either #include <cstddef> instead of stddef.h or just #define NULL nullptr). Let's see whether all implementations provide it as prescribed and simply remove it from ROOT (in a new PR). Once that works I'll close this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/665#issuecomment-309975411:216,simpl,simply,216,https://root.cern,https://github.com/root-project/root/pull/665#issuecomment-309975411,1,['simpl'],['simply']
Usability,> I still don't understand this. All discussions we had so far ended with agreeing that the LLVM upgrade will change nothing wrt the JSON library. After LLVM upgrade we can use `json.hpp` directly in header files.; Thus one can simply avoid complication with `json_fwd.hpp`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11268#issuecomment-1230211903:228,simpl,simply,228,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1230211903,1,['simpl'],['simply']
Usability,"> I still think that the suffix Ptr is a bit misleading due to the fact that operator-> is/can-be a very heavy operation and as such we may want to consider TResultHandle. I think `TResultHandle` would suffer from the same problems as `TResultProxy`: the name is too generic, the average physicist will not know how to use it, it's not clear if I can make a `std::vector` of those, default construct one, assign one, copy.... `operator->` will be heavy for the first time the first result is accessed, and that is _the one thing_ to know about TDataFrame: event loop runs upon first access to one of the results.; Subsequent usages of `operator->` will be fast.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1855#issuecomment-381100053:336,clear,clear,336,https://root.cern,https://github.com/root-project/root/pull/1855#issuecomment-381100053,1,['clear'],['clear']
Usability,"> I strongly believe we should have a similar approach as with our LLVM fork. We need to have some ""source of truth"" that is a certain cppyy/CPyCPPyy tag from upstream and then a clear way to reach the status of our fork from there, i.e. a series of patches that can be applied without conflicts. This PR goes in that direction but doesn't implement it fully as the sync script refers to a repository outside of our organisation. Ideally we would have separate repositories (one for cppyy and one for CPyCppyy) that we can refer to. Thanks for raising this point. The situation will be improved in the next weeks, I'll try to get as many patches merged to upstream as possible. Then, based on how many differences are left, we can decide if we want to go with one (or multiple) separate repositories, or we stay with the patch files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14507#issuecomment-2007655575:179,clear,clear,179,https://root.cern,https://github.com/root-project/root/pull/14507#issuecomment-2007655575,1,['clear'],['clear']
Usability,"> I suspect we could reduce the code of the landau pullback quite a lot. I'm not sure there is still room for much improvement: I have already simplified a lot in my initial PR. Maybe we can merge it, and if you and @vaithak feel like simplifying the pullbacks manually, you can do so in a follow-up PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15501#issuecomment-2120812575:143,simpl,simplified,143,https://root.cern,https://github.com/root-project/root/pull/15501#issuecomment-2120812575,2,['simpl'],"['simplified', 'simplifying']"
Usability,"> I take it from the warnings that I might have to add the other FindObject method (that accepts a TObject pointer) to satisfy the builds? Please confirm and I can do this. Exactly. Something like `auto ptr = dynamic_cast<const RooAbsArg*>; return ptr ? find(*ptr) : nullptr;` should do it. Could you include a one-line doxygen-readable comment (`///`) to avoid having two undocumented functions? Also note that `find(RooAbsArg&)` will find objects with the same name, not necessarily with the same pointer. You should decide with @guitargeek if that's actually desired when called from the Python side. In a second sentence, you should document whether that function will find objects with the same name (= equivalent objects as far as RooFit is concerned) or if it should only find the exact same object.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8177#issuecomment-841335386:373,undo,undocumented,373,https://root.cern,https://github.com/root-project/root/pull/8177#issuecomment-841335386,1,['undo'],['undocumented']
Usability,"> I think TResultHandle would suffer from the same problems as TResultProxy: the name is too generic, the average physicist will not know how to use it, it's not clear if I can make a std::vector of those, default construct one, assign one, copy.... One could give the exact same argument against TResultPtr ;) .... One difference with a pointer is the life-time of the pointee. > the average physicist will not know how to use it,. A lot of the frameworks have the concept of 'Handle' already to indicate this kind of delay-loaded accessor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1855#issuecomment-381102689:162,clear,clear,162,https://root.cern,https://github.com/root-project/root/pull/1855#issuecomment-381102689,1,['clear'],['clear']
Usability,"> I think it should live in InternalTreeUtils?. I was thinking this is generic enough that we may want to use it in places that do not strictly depend from `libTree`, but maybe I'm just overthinking. > How can we be sure that this function returns the same files in the same order as the previous one in all cases?. I hope we already get a (very good?) degree of certainty by not breaking existing test cases. I can come up with a few more just to add extra safety. Irrespective of this, the function is taken verbatim from the logic in `TChain::Add`. Do you see any part of the function that intuitively might lead to different results? I was thinking about this and the only place that remotely gives me a slight doubt is using `std::sort` instead of `TList::Sort`, but I really hope that doesn't introduce a different behaviour. > the new one throws if a directory cannot be opened. Yes indeed that's a different behaviour. The existing logic never throws. In case `dir == nullptr`, which I guess happens if the expanded directory cannot be found/opened (?), then it will just fall to the end of the `TChain::Add` method and `return nf`, where `nf` will be zero since no files have been added. In this regard I see two options:. 1. The new function throws (because subjectively is the correct behaviour). Then in `TChain::Add` we can keep the old behaviour, by catching the error and not re-raising it.; 2. The new function can return an empty vector, in case `dir == nullptr`. This is more similar in spirit with the old behaviour.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13160#issuecomment-1619057225:593,intuit,intuitively,593,https://root.cern,https://github.com/root-project/root/pull/13160#issuecomment-1619057225,1,['intuit'],['intuitively']
Usability,"> I think my fix is actually could be right, can you check it please again?. Your fix simply removes usage of semi-standard pthread_setname_np function on linux.; It is not right solution in my mind. Unfortunately, I cannot test with clang8. ; With clang-6.0.1 I see no problems. That you always can do - try to compile following simple program:. #include ""civetweb.h"". int main(int argc, char **argv); {; return 0;; }. Just copy it into net/http/civetweb directory and call:. clang -pthread civetweb.c main.c -ldl -o test . Can you reproduce your error message?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2581#issuecomment-418737656:86,simpl,simply,86,https://root.cern,https://github.com/root-project/root/pull/2581#issuecomment-418737656,2,['simpl'],"['simple', 'simply']"
Usability,"> I think that is sufficient efficient evidence albeit there is one more simple test to do, is to introduce a synchronization point every once in a while to insure that the queue is actually filled/used and then later emptied. Right; for this I went back to the variant of the benchmark that has perfectly balanced time per event and fills identical data into 10 branches. Then I added barriers around the call to `TBufferMergerFile::Write()` to make sure there is as much synchronization and contention as possible. With that, only the run with 64 threads on `/data/ssdext4` is measurably slower (4m16s instead of 3m57s, 9%), lower numbers of threads show very similar performance within noise. However, I then realized that the second barrier after the call to `Write()` is actually not necessary since we want contention when going into the merging / queuing, but the second barrier prevents threads that exit merging early from making further progress. With *only one barrier* before the call to `TBufferMergerFile::Write()` the version without any queuing is consistently faster at higher thread counts. I think this supports my hypothesis that things will balance out automagically. Finally, on `/data/hddext4/` I cannot measure any difference at all outside of noise.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14034#issuecomment-1823482567:73,simpl,simple,73,https://root.cern,https://github.com/root-project/root/pull/14034#issuecomment-1823482567,1,['simpl'],['simple']
Usability,"> I think there is a pretty clear explanation where this comes from in the commit history. We could not load `gRandom`. That was with the very old dyld-based approach to loading symbols. This PR checks if the new approach has the same problem. Note that:; - We can still not reproduce the issue; - With this change, I got the following test failure on Windows (not tested in our CI):; ```; 988: Processing C:/Users/sftnight/git/master/tutorials/rcanvas/symlog.cxx...; 988: IncrementalExecutor::executeFunction: symbol '_imp_?gRandom@@3PAVTRandom@@A' unresolved while linking function '_GLOBAL__sub_I_cling_module_5'!; 988: You are probably missing the definition of _imp_?gRandom@@3PAVTRandom@@A; 988: Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10330#issuecomment-1091405727:28,clear,clear,28,https://root.cern,https://github.com/root-project/root/pull/10330#issuecomment-1091405727,1,['clear'],['clear']
Usability,"> I think this is already clear enough. To the person that wrote the code i'm sure it is! :smile: Concretely maybe ""extra arguments to be used by the wrapper object when receiving a call."" could be e.g. ""extra arguments that will be forwarded to `_wrapper_class`'s init method""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10341#issuecomment-1094768654:26,clear,clear,26,https://root.cern,https://github.com/root-project/root/pull/10341#issuecomment-1094768654,1,['clear'],['clear']
Usability,"> I think we need to think about mapping and the view interface, which uses `RField<T>::Map()` where available. I'd be in favor of ignoring read callbacks for mapping. Mapping should be the interface to get the fastest possible performance. Of course, that would break views on simple types with read callback. One way to deal with it is to simply not allow creating a view on a field with a mappable type and a read callback. Good point; I agree on that :+1:. However, given that any `RField<T>` instance that has an on-disk field ID set (such as the one internally kept by `RNTupleView`) can be connected to a page source, additional bookkeeping is required somewhere else. (**EDIT:** see the pull request description - everything discussed there)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11731#issuecomment-1334547546:278,simpl,simple,278,https://root.cern,https://github.com/root-project/root/pull/11731#issuecomment-1334547546,2,['simpl'],"['simple', 'simply']"
Usability,"> I thought deprecation in 6.30 and removal 6.32, but whatever you think is best. I see more clearly what you were trying to do now. In that case I will have to say I don't agree. We cannot deprecate a feature and backport the deprecation of the feature to an already released branch. What we can do is to deprecate the build option for 6.32 and then remove it in 6.34 :+1: Sorry for my confusion :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14395#issuecomment-1924170430:93,clear,clearly,93,https://root.cern,https://github.com/root-project/root/pull/14395#issuecomment-1924170430,1,['clear'],['clearly']
Usability,"> I understand this will be simplified when we can pass a configuration object to RDataFrame where we specify the range. When reading trees/chains, I'm not sure the configuration object will allow anything more than what we can already do with TEntryLists?. IIUC the redundant info is that `globalend = globalstart + (localends - localstarts).sum()` (i.e. we could avoid passing `globalend`). However: do you still need `globalstart` and `globalend` at all when using TEntryLists?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8646#issuecomment-895318380:28,simpl,simplified,28,https://root.cern,https://github.com/root-project/root/pull/8646#issuecomment-895318380,1,['simpl'],['simplified']
Usability,> I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Apriori it does not intend have an effect on that. > Indeed I now notice that it's enough to simply do:. What is the change (increase of the cache size or explicit cache learning or both)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16640#issuecomment-2406995100:199,simpl,simply,199,https://root.cern,https://github.com/root-project/root/pull/16640#issuecomment-2406995100,2,"['learn', 'simpl']","['learning', 'simply']"
Usability,"> I will try to get rid of ThreadFileMerger by just fusing its functionality into TFileMergeServer. At this point, I don't think that is necessary. That class is in one the use case (i.e. using a ROOT collection). So unless it is clear that replacing THashTable with an equivalent stl collection is much more performant, there is no need to waste time changing the code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/533#issuecomment-299450733:230,clear,clear,230,https://root.cern,https://github.com/root-project/root/pull/533#issuecomment-299450733,1,['clear'],['clear']
Usability,"> I wonder, whether all the new TList should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))?. Yes, this is a fair point. Feel free to open another PR with that further simplification.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13840#issuecomment-1760218445:112,Guid,Guidelines,112,https://root.cern,https://github.com/root-project/root/pull/13840#issuecomment-1760218445,2,"['Guid', 'simpl']","['Guidelines', 'simplification']"
Usability,"> I would be happier of you could replace the #includes both for cling and the compiler by forward declarations where possible. Done. > we should reduce the asymmetry between cling and compiler, not increase it. Problem to keep external includes in such plugins - one never knows if such includes still there or at same place as they were before. Therefore if possible - I prefer to hide them from interpreter.; Also long time ago cint simply was not able to parse all them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5255#issuecomment-606468116:436,simpl,simply,436,https://root.cern,https://github.com/root-project/root/pull/5255#issuecomment-606468116,1,['simpl'],['simply']
Usability,"> I would just say `ImportError: cannot import module 'pyspark'. Please see the Spark documentation for installation instructions.`. Why referring to pip or conda? Probably people prefer apt, dnf, pacman, whatever? I'd keep it simple :). Alright, latest commit uses this wording :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7705#issuecomment-810153069:227,simpl,simple,227,https://root.cern,https://github.com/root-project/root/pull/7705#issuecomment-810153069,1,['simpl'],['simple']
Usability,"> I would propose to change the title to ""[ci] Further speedup mac and linux builds by caching dependencies"". The word ""instead"" can be misleading. Our goal is to have feedback from the CI as soon as possible. Having several nodes, allows to scale horizontally. We are not increasing the number of nodes in the CI because we are lazy, we just need many nodes AND fast CI, e.g. through caches or quicker tests :). The proposed rename works for me. It's not only for mac and linux, it covers any platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14987#issuecomment-2001954686:168,feedback,feedback,168,https://root.cern,https://github.com/root-project/root/issues/14987#issuecomment-2001954686,1,['feedback'],['feedback']
Usability,"> I would rather make only only canvas with the two plot next to each other for a better comparison and a better display on the reference guide. Other wise it looks like a good example. Okay, i'll do that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7801#issuecomment-815696117:138,guid,guide,138,https://root.cern,https://github.com/root-project/root/pull/7801#issuecomment-815696117,1,['guid'],['guide']
Usability,"> I'd leave the backport decision up to you. We can patch this into our user environments without a backport too. Ok, I prefer backports over people patching ROOT :slightly_smiling_face: There is a very low risk of breaking something here, since the PF only affects the case where `exe` contains qemu, which simply didn't work before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14251#issuecomment-1860177688:308,simpl,simply,308,https://root.cern,https://github.com/root-project/root/pull/14251#issuecomment-1860177688,1,['simpl'],['simply']
Usability,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9271#issuecomment-968052222:234,clear,clear,234,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222,1,['clear'],['clear']
Usability,"> IIUC a NullStmt would mean `if (true) {1;;}`.; > ; > I'd prefer to keep value printing simple and instead invest where it's relevant: devtoolset, debug symbols, llvm upgrade (to llvm 11!), etc. This is a trade-off we should consciously do, and given that this is the first time I hear a request for value printing within nested blocks I'm not yet convinced that it's worth the effort (and yes, that's an additional counter argument). And I'm not just talking dev time but also long-term maintenance: more code, more clang interfaces used. I agree with Axel. A smarter value printer is nice to have but we have enough more important issues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6644#issuecomment-713643650:89,simpl,simple,89,https://root.cern,https://github.com/root-project/root/issues/6644#issuecomment-713643650,1,['simpl'],['simple']
Usability,"> IIUC, ACLiC is kind of interpreting code before generating so files to get the list of libraries that need to be loaded beforehand by passing all rootmap files to rootcling, right? If so, maybe we can do the same with modules by interpreting code beforehand, get a callback from cling and make a list of dependency libraries. We can keep this list and load them just before loading hsimple_C.so?. Yes (where there later is simply changing the input and output of the rootcling invocation in CompileMacro, and tweaking rootcling to handle this new input/output). > Anyway, these discussions are addressed (or not addressed) in another PR. I want to revert ""not generating rootmapfiles"" patch for now. Fair enough :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2187#issuecomment-396920577:425,simpl,simply,425,https://root.cern,https://github.com/root-project/root/pull/2187#issuecomment-396920577,1,['simpl'],['simply']
Usability,"> IIUC, if I have `class MyClass{} m;` on the prompt, currently we will recognize the `class` token and we will ask clang to compile it as is. With the new PR we will be playing with the lookup rules (hideDecl and more) to make sure if we unload it in future it would rewire correctly the declarations and the definitions. I am not sure if IIUC your comment, but if I did, you are worried because it manually patches lookup tables so that old definitions cannot be found. That was the only way AFAIK (without a patch to Clang's SemaLookup), to invalidate old declarations so that a unqualified lookup is not ambiguous. Also, please see https://github.com/root-project/cling/issues/259 for some background on this feature. > I proposed to enable it for physicists within ROOT. I am opposed to enabling it by default for cling standalone with no usage experience gathered neither through the physicists nor via the notebook users. As suggested, I have disabled this feature for Cling standalone. It is manually enabled in TCling, so that it remains usable from the ROOT prompt and Jupyter notebooks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4214#issuecomment-532870917:1047,usab,usable,1047,https://root.cern,https://github.com/root-project/root/pull/4214#issuecomment-532870917,1,['usab'],['usable']
Usability,"> IMHO clearly the better approach is to have less patches. Sure, so can we just remove the patch from the conda forge and see what happens? It's still not clear to me why it is needed. > walk towards a fully cross-compilable ROOT build, albeit this PR might be just a very small step. I agree, but I don't see the bigger picture here: how do you want to achieve this with all of `rootcling` for dictionary and module generation? Personally I don't see a value of starting at the easy leaves with no clear plan how to actually tackle the hard parts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15930#issuecomment-2205481182:7,clear,clearly,7,https://root.cern,https://github.com/root-project/root/pull/15930#issuecomment-2205481182,3,['clear'],"['clear', 'clearly']"
Usability,"> IMHO https://github.com/root-project/root/issues/13815#issuecomment-1759250811 clearly shows that the underlying problem. I would agree if it was not the fact that this is being triggered by a benign and wildely used class ... i.e. `std::pair` ... . Consequently, it my opinion we are almost guaranteed to have this problem appear almost immediately in the wild (i.e. code and code flow that worked before will now fail)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13815#issuecomment-1768955888:81,clear,clearly,81,https://root.cern,https://github.com/root-project/root/issues/13815#issuecomment-1768955888,1,['clear'],['clearly']
Usability,"> IMHO, for the purpose of TEntryList, we have already TTreeReader::SetEntryRange. `SetEntryRange` is small subset of the feature/use of `TEntryList`. The main intent of the `TEntryList` is to store the result of a selection (so a more or sparse list entry numbers) so that further analysis step can read only the already select entries. > TEntryList is definitely not usable in production contexts as it only scales well for a few entries for its purpose. I am not sure I understand 'why'. For `TTree::Draw`, this is not the case as far as I remember. Does `TEventList` scale better for the case you are talking about? (if that is the case we would need to NOT deprecated either of them). Side note: the main intent of `TEntryList` over `TEventList` is that `TEntryList` is supposed to scale better with chain with large number of files. > Indeed, and I hope we are not going to develop the same feature. Humm ... it does not have to be implemented in `RNTuple` and could be implemented in `RDataFrame`; but why don't we want to have the ability to 'store' the result of computational heavy selection to speed-up further analysis by reducing the number of entries needed to be used?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16074#issuecomment-2245984573:369,usab,usable,369,https://root.cern,https://github.com/root-project/root/pull/16074#issuecomment-2245984573,1,['usab'],['usable']
Usability,"> If I read correctly the code, it means that in the pch we could have had garbage anytime in the past, even without VC. Is this correct? If yes, is it only by chance that everything worked?. No, by design. I just screwed up patching the PCH writer; this is a fairly well-controlled piece of clang that I broke. I broke it in a very safe way (because the PCH is safe by design), wasting lots of bytes. > Would we have seen this with valgrind/memory sanitiser if we had given a pass to rootcling generating the pch? If yes, perhaps it makes sense to do it when generating pcms. No. It's all valid memory, we have just been writing and reading long buffers out of which only a few leading bytes were actually needed. Additionally, this broken original patch of mine is pending review with clang, and they would have definitely pinpointed this bug. But we were first!. So I don't really think there's anything to learn or improve here. Please move on ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/848#issuecomment-321400176:910,learn,learn,910,https://root.cern,https://github.com/root-project/root/pull/848#issuecomment-321400176,1,['learn'],['learn']
Usability,"> If the `TChain` had a name then that would be the correct name to assign. Yes.; (I didn't know `TChain`'s could have a name. I thought they were conceptually just concatenations of trees). > 1. Get the name of the first tree in the first file of the chain, and assign that irrespective of the names of the other trees in the chain. That sounds too deliberate to me. > 2. Check that all trees of the chain have the same name (the first one), and assign that. I think this would be the only sensible solution. But I don't kow how big `TChain`s can get and whether such a check would become expensive at some point. > If this is not the case, fallback to assigning the first name anyway ?. Again, I think this is too deliberate. > 3. Invent a new name for the imported RNTuple which will always be applied in case the user is importing from an un-named `TChain`. This could be anything from something simple like `MyRNTuple` to something more unique and complicated like `R__IMPORTED_RNTUPLE`. That is the the status quo, as observed by me. The name picked is `ROOT::Experimental::RNTuple`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13088#issuecomment-1606956482:900,simpl,simple,900,https://root.cern,https://github.com/root-project/root/issues/13088#issuecomment-1606956482,1,['simpl'],['simple']
Usability,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:; * python support is enabled ; * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run); * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:; * `X11` support is enabled.; * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code); * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15212#issuecomment-2052136735:415,clear,clearly,415,https://root.cern,https://github.com/root-project/root/issues/15212#issuecomment-2052136735,1,['clear'],['clearly']
Usability,"> If you are deleting an object that is contained in a `TCollection`, you must remove it from that collection, otherwise the collection has a dangling pointer (that it will use during certain operations, including `Clear` but could be any other operation, etc `ls()` ). Ok, that makes sense, and indeed, it is impossible to do the other way around (i.e. `delete obj` before and `Remove(obj)` from the list after) as there is no obvious way to know if the object has been deleted. So, there is little you can do from the ROOT side. > Maybe setting the content of the dangling TList pointer to NULL just after delete helps ?. It would break the recursive structure of the `deleteTCollections` function, which we'll need to rethink. . Thanks for the clarifications and for your time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14504#issuecomment-1919802758:215,Clear,Clear,215,https://root.cern,https://github.com/root-project/root/issues/14504#issuecomment-1919802758,1,['Clear'],['Clear']
Usability,"> Important that canvas should be stored/restored from I/O. That might actually indicated that there is (also) a problem in the I/O. Does it also fail if you store/restore from a ROOT file (instead of a JSON file)?. And indeed. With some instrumentation, `Clear` see this the first time:; ```; TList::Clear for 0x5da71f0 see 0x59fab50 live must clean up; TList::Clear for 0x5da71f0 see 0x5debc10 live must clean up; TList::Clear for 0x5da71f0 see 0x59fab50 live must clean up; ```; and this after the I/O:; ```; TList::Clear for 0x5ff4e20 see 0x5fef530 live must clean up; TList::Clear for 0x5ff4e20 see 0x5ff4e90 live; TList::Clear for 0x5ff4e20 see 0x5ff5940 live must clean up; TList::Clear for 0x5ff4e20 see 0x5ff4e90 deleted; ```. Where the lack of 'MustClean' in leading to the second one not being cleaned-up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13506#issuecomment-1692193723:256,Clear,Clear,256,https://root.cern,https://github.com/root-project/root/pull/13506#issuecomment-1692193723,8,['Clear'],['Clear']
Usability,"> In `AddColumnsFromField` and `CollectColumns` we now produce both, the vector of `RColumnInfo` records and the `RCluster::ColumnSet_t`. To me it seems that the source of truth is the `RColumnInfo` vector, and it may be clearer to generate and `RCluster::ColumnSet_t` from the `RColumnInfo` vector. It was a small optimization to avoid looping over all columns twice and get all the data we need at once. I can separate the loops if you prefer, it should make little difference.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15954#issuecomment-2210678615:221,clear,clearer,221,https://root.cern,https://github.com/root-project/root/pull/15954#issuecomment-2210678615,1,['clear'],['clearer']
Usability,"> In my mind, we should provide real implementation ; > ```; > TSQLStatement::SetTimestamp(Int_t, const TTimeStamp&); > TSQLStatement::GetTimestamp(Int_t, TTimeStamp&); > ```; > Otherwise these methods will be non-usable for other SQL plugins; > In principle, `TPgSQLStatement::GetTimestamp` could be just copy into `TSQLStatement`; > And same approach used for `SetTimestamp`. Unfortunately, it is impossible to implement these functions directly in TSQLStatement for all cases (database management systems: MySQL, PostgreSQL, Oracle...) because of the following important reasons:; 1. The one possible function with fractions of a second which can be used in TSQLStatement to set and get TTimeStamp; `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`; has the last parameter defined everywhere as a fraction of a second without strict specification what fraction means: milliseconds, microseconds, nanoseconds...; For example, PostgreSQL returns microseconds, but MySQL supports and can return nanoseconds in timestamp value, So, if i don't know what a fraction i get via the function, i can't set TTimeStamp with nanoseconds.; 2. TTimeStamp class has timezone value (opposed to TDatime) and i must specify whether it is in UTC in the TTimeStamp constructor:; `TTimeStamp (UInt_t year, UInt_t month, UInt_t day, UInt_t hour, UInt_t min, UInt_t sec, UInt_t nsec=0, Bool_t isUTC=kTRUE, Int_t secOffset=0)`; But I don't know what timezone returns from the function above (in 1.). In PostgreSQL - TPgSQLStatement it is in UTC, in MySQL - TMySQLStatement it is not UTC. If it is specified that ""virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)"" function always returns microseconds in the last field (indeed, it is better in nanoseconds) and always in UTC format for all plugins/DBMS, new functions could be copied to TSQLStatement. Sorry for t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3961#issuecomment-506253921:214,usab,usable,214,https://root.cern,https://github.com/root-project/root/pull/3961#issuecomment-506253921,1,['usab'],['usable']
Usability,"> In particular, I tried to add a trivial unit test file [...] and compiling as the other ones, i.e. linking it to [...] makes the sanitiser running the test still complain as above. Depending on how you compile it, you might get `-fsanitize=address` from the ROOT C++ flags. But in general yes, the libraries are sanitized and will operate no matter if your application itself is built with sanitizers or not. > I guess I could create a standalone hello-world C++ code and compile it with the sanitiser linking to ROOT as our unit test does and I should get the same report. Let me know if you need so. That would be as expected, so I don't think it's worth the effort. > Now, this behaviour (leaking just linking) should make it not too difficult to locate the issue. Do you do something [with globals or static variables](https://stackoverflow.com/a/8353892/14967071)? Or do you have [a `_init` and/or `_fini` function](https://stackoverflow.com/a/6412445/14967071)?. As explained before, what the AddressSanitizer is complaining about is well understood and it also doesn't explain growing memory usage when not interacting with ROOT. This latter is what needs a clear reproducer to dig out the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-1818478493:1167,clear,clear,1167,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-1818478493,1,['clear'],['clear']
Usability,"> In principle `begin` can absolutely return a raw pointer (I _think_ LLVM's SmallVector was designed like that for simplicity, to avoid having to define a custom iterator type). But raw pointers make for fine iterators 😄 Seems like a bug in PyROOT?. I just had a quick look, but it seems to me that this is a corner case which doesn't trigger any mechanic for a proper pythonization, which enables the `for x in rvec` syntax in Python. Let's see, the final word is not yet spoken ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-806482531:116,simpl,simplicity,116,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-806482531,1,['simpl'],['simplicity']
Usability,"> In principle, it is clear what needs to happen, but I would like some input from @pcanal how throwing exceptions in these older parts of ROOT can best be handled (for the newer parts we use `ROOT::Experimental::RException`, but we cannot use this here). I think ""Fatal"" is the recommended way, see https://github.com/root-project/root/pull/14627#discussion_r1492987421. I just proposed a PR with that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14552#issuecomment-1952072544:22,clear,clear,22,https://root.cern,https://github.com/root-project/root/issues/14552#issuecomment-1952072544,1,['clear'],['clear']
Usability,"> In the end, the reason is much simpler: my fix for the dictionary build is simply too narrow. . Great :) Just for kicks, can you verify that the following trivial example works as expected:. ```; root [0] template <typename T, typename Q=const T> struct Example {};; root [1] TClass::GetClass(""Example<Double32_t>"")->GetName(); (const char *) ""Example<Double32_t,const Double32_t>""; root [2] TClass::GetClass(""Example<Double32_t,Float16_t>"")->GetName(); (const char *) ""Example<Double32_t,Float16_t>""; ```. Thanks,; Philippe. eg. Copy/paste this on the ROOT prompt:. ```; template <typename T, typename Q=const T> struct Example {};; TClass::GetClass(""Example<Double32_t>"")->GetName(); TClass::GetClass(""Example<Double32_t,Float16_t>"")->GetName(); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1137193958:33,simpl,simpler,33,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1137193958,2,['simpl'],"['simpler', 'simply']"
Usability,"> In the original reproducer, the __getitem__ attribute check is done for the instance, so this wouldn't help there right?. Right, I know no way around that. Also, it'd be fine for those cases where a pointer is known to be an array, but like the example above, would fail cases where it's simply *likely* to be an array, as a `__getitem__` would be returned. > https://gitlab.cern.ch/atlas/athena/-/merge_requests/70435/diffs. That will give you different answers depending on whether the sequence has 0 or N elements, though. But there are plenty more worrisome things in that code. :). I'm looking at the implementation of `PySequence_Check`, which is:. ```; int; PySequence_Check(PyObject *s); { ; if (PyDict_Check(s)); return 0; ; return Py_TYPE(s)->tp_as_sequence &&; Py_TYPE(s)->tp_as_sequence->sq_item != NULL;; }; ```. The default `__getitem__` is added to the class as part of the `tp_methods` set and I guess it ends up there. A bit strange, though, as `sq_item` is limited to indexing with Py_ssize_t and that's not specified in the method list (only `METH_O`). But it may give us something to work with as `mp_subscript` is also available. Would have to see whether C++-side `operator[]` properly overrides that and still makes `PySequence_Check` work. It's not directly clear to me that it would, but can give it a try.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15161#issuecomment-2057955720:290,simpl,simply,290,https://root.cern,https://github.com/root-project/root/issues/15161#issuecomment-2057955720,2,"['clear', 'simpl']","['clear', 'simply']"
Usability,"> In what situation is `R__HAS_STD_SPAN` not sufficient? If `ROOT` has been configured to build in C++20 mode and properly installed, it must be set in `RConfigure.h`. If it is not set, this means that the `ROOT` code will use an alternative to `std::span` (because at configure and build time, it detected it was not available). In fact, I have a project that uses C++20, and uses ROOT compiled with C++17, and I encountered compilation errors in the ROOT header file RSpan.hxx as mentioned (redefinition of std::span). However, once the restriction of this preprocessor macro is resolved, the compilation could pass, and no related problems have been encountered for the time being. I also checked RStringView.hxx, this header file also uses a similar technique, so I submitted this patch. I believe that I may not be considerate about this in depth, but I hope that the issues of ""mixing standards"", which seems not to be issues, can be solved. If there are indeed many restrictions/issues on this issue, I admit that this is not such simple...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11311#issuecomment-1252761771:1038,simpl,simple,1038,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1252761771,1,['simpl'],['simple']
Usability,"> Indeed, you are right. I still want to give some hints though. How about; > ; > ```; > ImportError: cannot import module 'pyspark'. Try installing it with `pip install pyspark` or `conda install pyspark`. Refer to the PySpark documentation for more details.; > ```. I would just say `ImportError: cannot import module 'pyspark'. Please see the Spark documentation for installation instructions.`. Why referring to pip or conda? Probably people prefer apt, dnf, pacman, whatever? I'd keep it simple :). People *will* just write `pip/conda install pyspark` if you write this and may not result in a proper configuration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7705#issuecomment-810141972:493,simpl,simple,493,https://root.cern,https://github.com/root-project/root/pull/7705#issuecomment-810141972,1,['simpl'],['simple']
Usability,"> Instead of -Wl,-w (which suppress all warnings), an undocumented options seems to be -Xlinker -no_fixup_chains (humm I guess actually maybe -Wl,-no_fixup_chains). I am afraid that older linkers will not know `-no_fixup_chains` as that seems to be a new concern. So `-w` it is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12045#issuecomment-1386778190:54,undo,undocumented,54,https://root.cern,https://github.com/root-project/root/pull/12045#issuecomment-1386778190,1,['undo'],['undocumented']
Usability,> Is it clear what ratioplot1->Close() is supposed to mean?. It is just method which is called when canvas closed in interactive mode.; I put it here to demonstrate problem. ; Calling canvas destructor will cause the same seg fault. I tried to fix the problem in #14861 but facing much more problems. ; `RecursiveRemove` is not a solution.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14855#issuecomment-1976051222:8,clear,clear,8,https://root.cern,https://github.com/root-project/root/issues/14855#issuecomment-1976051222,1,['clear'],['clear']
Usability,"> Is it possible to disable the Internet connection with an option during the cmake (and later build) phase?. Well, no, you can simply unplug (or disable) the internet connection. You can also use the `-Dminimal=ON` flag to reduce the number of packages",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8742#issuecomment-887583333:128,simpl,simply,128,https://root.cern,https://github.com/root-project/root/issues/8742#issuecomment-887583333,1,['simpl'],['simply']
Usability,"> Is the intention perhaps that for all other `TFile` subclasses than `TDavixFiles` and `TNetXNGFiles` (and `TFile`) itself the `RRawFileTFile` is used?. Yes, that's what I want to say. I will think about a clearer formulation... (or maybe you have a proposal?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15246#issuecomment-2059405769:207,clear,clearer,207,https://root.cern,https://github.com/root-project/root/pull/15246#issuecomment-2059405769,1,['clear'],['clearer']
Usability,> It does not hit the cache because the unloading clears the memory buffers behind the FileID. This means we have cache but it is unreachable after unloading by design. Fair enough. Which part of the new code make it unreacheable? [I am distracted by LookupHelper.cpp line 87/88 that get an Invalid flag but 'only' assert on it],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2483#issuecomment-413992581:50,clear,clears,50,https://root.cern,https://github.com/root-project/root/pull/2483#issuecomment-413992581,1,['clear'],['clears']
Usability,"> It is already in mathmore. The license is simply not FOSS (read it carefully if you care). Where? The header and source ""seems"" to be saying GPL.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13688#issuecomment-1728435744:44,simpl,simply,44,https://root.cern,https://github.com/root-project/root/pull/13688#issuecomment-1728435744,1,['simpl'],['simply']
Usability,"> It is at the same level of usage and encouragement as TTree. . I sincerely hope not. TEntryList is definitely not usable in production contexts as it only scales well for a few entries for its purpose. For RDataFrame we had to move away from it exactly for this reason. . > And if I remember correctly we do not have yet a RNTuple replacement/equivalent). Indeed, and I hope we are not going to develop the same feature. IMHO, for the purpose of `TEntryList`, we have already `TTreeReader::SetEntryRange` and we should have similar interfaces (private/internal) for modern I/O systems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16074#issuecomment-2242293382:116,usab,usable,116,https://root.cern,https://github.com/root-project/root/pull/16074#issuecomment-2242293382,1,['usab'],['usable']
Usability,"> It is not clear why `ApMon.h` does not include `unistd.h` in the first place. It actually does, but only later in the the compilation unit. I think this is some weird SunOS heritage (sigh). I am trying to see if I can simply get rid of that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12762#issuecomment-1535844840:12,clear,clear,12,https://root.cern,https://github.com/root-project/root/issues/12762#issuecomment-1535844840,2,"['clear', 'simpl']","['clear', 'simply']"
Usability,"> It is old logic that `TBrowser` does not starts without `DISAPLAY` variable set or simply in batch mode. One can solve this, but with some fine-tuning in ""normal"" `TBrowser`/`TBrowserImp` classes. If @bellenot has nothing against it - I can propose PR. Thanks @linev ! Feel free to open a PR if you want 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10748#issuecomment-1159421157:85,simpl,simply,85,https://root.cern,https://github.com/root-project/root/issues/10748#issuecomment-1159421157,1,['simpl'],['simply']
Usability,"> It is really simple to check what gets linked in with a debugger if you have the setup done already. If I can get ssh access to a node somewhere I can do that. Unfortunately I don't have a public instance where you get ssh into. I created a simple example that links against ROOT and a different LLVM version, that worked without issue. While doing that I noticed that by default everything is linked using the static libraries from LLVM. This is probably what we want?. In `llvm-config`, one needs to pass `--link-static`, and that's about it. Will try it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1666915077:15,simpl,simple,15,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1666915077,2,['simpl'],['simple']
Usability,"> It is unclear whether havoc will break. Actually, it _is_ clear. A priori your implementation as-is can't work, but if it did, remember that e.g. Gaudi/Athena like to expose only the interfaces and not the actual classes, so with this, you kill their use case. You're roughly on the right path, though, but you have to make this an optional feature. I.e. track a boolean parameter, with a default value that keeps the old behavior, through the full chain, and only add the class name if a) it is possible (this you're missing even above) and b) it is requested. Works like a charm in cppyy (already released).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7290#issuecomment-786085845:60,clear,clear,60,https://root.cern,https://github.com/root-project/root/pull/7290#issuecomment-786085845,1,['clear'],['clear']
Usability,"> It removes the requirement for version 3.9. Technically code works with all 3.x versions of `nlohmann/json.hpp`. I add requirement for 3.9 recently just because we were not using and not testing for `json_fwd.hpp`. Now version restriction is not necessary. > It worsens the error message in case json_fwd.h when it is required for recent versions. They were written based on feedback from upstream, so I would like to keep the detailed messages. `json_fwd.hpp` now always required - not only for 3.11. Just as workaround for time been we allow to use [3.10 .. 3.11] versions without it. After LLVM upgrade we could completely skip usage of `json_fwd.h`. I hope it will happen before 6.28 release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11268#issuecomment-1230200939:377,feedback,feedback,377,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1230200939,1,['feedback'],['feedback']
Usability,"> It wasn't clear from what you said whether you were aware of that. There are zounds of things that I'm not aware of, but as said, the kind of C++ that folks outside of HEP expect to ""just work"" with cppyy is rather more advanced that the basic C++98 that most folk in HEP still use. Heck, you guys are even still hung up on Python2.7! Anyway, the reason I changed the implementation is b/c it is already not working _today_. C++20 (which Clang5 doesn't support anyway) is just gravy. As for #6389, I'm too far diverged from since I forked ROOT/meta to apply it, so have no interest in it. I'm also not familiar with how the ""special functions"" boil upward. Note that, going back to the initiation of this thread: there was/is no issue with constructors for cppyy proper on Windows: both 32b and 64b, work fine. So, I see no benefit even in trying it out. I'm currently fixing that crash in lookupHelper with unnamed namespaces. Seems the solution is upgrading Cling _and_ a judiciously placed `Interpreter::PushTransactionRAII` (the crash is actually an abort b/c of an open transaction). Then still modules, have to see how Windows looks now; after that, this change to lookupHelper's handling of templates is high on my list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-697676086:12,clear,clear,12,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-697676086,1,['clear'],['clear']
Usability,"> It works because it calls what the virtual table shows 'so-far' and essentially it is equivalent to a call to > TFile::SysOpen, we probably ought to make it clear and do the substitution explicitly in the code. Probably, one should clearly use `TFile::SysOpen()` calls here and check that none of subclasses tries to use that TFile constructor. . > They are not related to this PR . Yes, error message has nothing to do with PR. ; Changes are minimal and looking very promissing. ; Probably, one should check if BIT(9) was used in older ROOT versions with TFile.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4253#issuecomment-523486256:159,clear,clear,159,https://root.cern,https://github.com/root-project/root/pull/4253#issuecomment-523486256,2,['clear'],"['clear', 'clearly']"
Usability,> Just a comment. The fact we still have to use naked new and things like Clone to make the graphics work looks really bad in tutorials. Main problem is ownership of histograms. They are destroyed by `DF` handle at the end and cannot be used for graphics.; The only chance to draw them - is to clone them. And `new TLegend` required while it referencing same histograms again. ; `TLegend::DrawClone()` is simply wrong - while it will clone all referenced objects and loos reference to original histograms. . I see no other chance to correctly create `THStack` and `TLegend` in such situation.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15758#issuecomment-2149433058:405,simpl,simply,405,https://root.cern,https://github.com/root-project/root/pull/15758#issuecomment-2149433058,1,['simpl'],['simply']
Usability,"> Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out. I guess we should ask the experiments about this, since this change proposal came from them. ; Personally, I'm not sure how much this would help, given that we would just move the naming problem to the enum values rather than the classes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16363#issuecomment-2337593312:228,clear,clearly,228,https://root.cern,https://github.com/root-project/root/pull/16363#issuecomment-2337593312,1,['clear'],['clearly']
Usability,"> Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields?. This is a very good point, I've only considered the reading side of things. I would be in favor of the last possibility and just completely disallow creating writers from models with registered subfields.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16693#issuecomment-2443706354:195,intuit,intuitively,195,https://root.cern,https://github.com/root-project/root/pull/16693#issuecomment-2443706354,1,['intuit'],['intuitively']
Usability,"> Many thanks for the contribution, @jiangyilism! 🙂; > ; > In principle, LGTM, but I will defer the approval to @vgvassilev. Could you apply the included suggestions in the interim?; > . Sure. Thanks for the feedback.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11286#issuecomment-1401028920:208,feedback,feedback,208,https://root.cern,https://github.com/root-project/root/pull/11286#issuecomment-1401028920,1,['feedback'],['feedback']
Usability,> May be @bellenot might knows why the arrow keys are not responsive. It works for me on Windows... I'll check on Linux as soon as I can,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7184#issuecomment-778190837:58,responsiv,responsive,58,https://root.cern,https://github.com/root-project/root/pull/7184#issuecomment-778190837,1,['responsiv'],['responsive']
Usability,"> May be you can deactivate the zoombox in `TPad::ExecuteEventAxis` and see if the artifact remains ?. If I deactivate the 'removal' of the zoombox after button release, I get this on Ubuntu 20:; ![image](https://user-images.githubusercontent.com/10653970/151999027-9261c038-1725-42d9-bb89-4aa43333c7fd.png). I can move around with the zoombox, make it smaller, etc. and the artifact is still there. Touching on the canvas does not clear the artifacts, which surprises me!. ![image](https://user-images.githubusercontent.com/10653970/151999166-f26ae15b-53d9-4b9e-a08d-fe6afa784214.png). Only if I right click on the box, ""Delete"", the artifacts go away. (without having to click on the canvas)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9763#issuecomment-1027002365:432,clear,clear,432,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1027002365,1,['clear'],['clear']
Usability,"> Maybe we can just make RPageSource::UnsealPage a public method?. In principle yes, I guess for now it's ok to keep it private as it's not clear (to me at least) which use cases in the open this method would cater to. So we can avoid exposing an interface that we might want to take back/change at a later stage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14403#issuecomment-1912119472:140,clear,clear,140,https://root.cern,https://github.com/root-project/root/pull/14403#issuecomment-1912119472,1,['clear'],['clear']
Usability,"> Moving towards a generic explicit implementation based on a markers is. I cannot follow - who's proposing to move to something, which explicit markers? I'm arguing that the status quo (last top-level expression's value is printed if missing trailing semicolon) should be kept for consistency and simplicity reasons. Let's hear some other opinions here, e.g. @SimeonEhrig @jalopezg-uc3m @pcanal ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6644#issuecomment-713518912:298,simpl,simplicity,298,https://root.cern,https://github.com/root-project/root/issues/6644#issuecomment-713518912,1,['simpl'],['simplicity']
Usability,"> My general comment is that I would try to avoid doing a plain copy of code that is somewhere else.; > ; > I checked `rootx/src/rootx.cxx` and it not only parses `--notebook`, but also several other options such as `-b`, `-l`, etc. This makes me wonder: is `rootx/src/rootx.cxx` the right place to parse options or it's not?; > ; > Also, is there a place where options are parsed no matter the platform? If yes, we should put there the code for `--notebook`, shouldn't we?. `rootx` is used to create the `root` executable, which then may call `root.exe`. One cannot do that on Windows, we can only have one root executable, which is `root.exe`. Now, if someone find another, better solution, fine with me. As I said, this is the simplest and less intrusive solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9142#issuecomment-946778407:730,simpl,simplest,730,https://root.cern,https://github.com/root-project/root/pull/9142#issuecomment-946778407,1,['simpl'],['simplest']
Usability,"> My question was: is it possible to modify the ROOT-cmake-find script, so that it only forces the nlohmann-json-dependency if you are going to use ROOT7 classes? So to say, that depending on the `REQUIRED COMPONENTS` that you use in the `find_package` statement in your user code, it is more or less 'requiring'. That's an interesting question. 🤔 CMake project's can't easily do this. I mean, nothing is impossible, but it's not simple to do. As long as externals are handled through imported library targets (which I'm not sure the nlohmann_json dependency is used with 😕), one would need to tweak the behaviour of CMake in a pretty fundamental way for this. 🤔 You see, when you tell in (in this case) ROOT's build that library `Foo` needs to publicly link against library `Bar::bar`, CMake exports this information in the `ROOTConfig-targets.cmake` file. (That is a file generated fully by CMake itself.) It will say that `Foo` depends on `Bar::bar`. So at that point `ROOTConfig.cmake` has to produce `Bar::bar` in some way. Even if the user's code itself never wants to use the `Foo` library. Because CMake will not like it that it has the `Foo` library defined (even if unused by others), without all of its requirements met. So even if `ROOTConfig.cmake` itself doesn't look for nlohmann_json, if any of the CMake code depends on the `nlhmann::json` target (yes, there is such a target in CMake 😄), the CMake configuration would still fail. With a complaint about `nlohmann::json` not being known. 😦. So generally, projects that publicly depend on something else, always look for all of those dependencies with [find_dependency(...)](https://cmake.org/cmake/help/latest/module/CMakeFindDependencyMacro.html). Regardless of which parts of the project the user wants to use. 🤔",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14188#issuecomment-1845002083:430,simpl,simple,430,https://root.cern,https://github.com/root-project/root/issues/14188#issuecomment-1845002083,1,['simpl'],['simple']
Usability,"> My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```; struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };; .L lib/libStrip.so ; Marker m2;; gInterpreter->AutoParse(""SiStripCluster"");; .undo 2; SiStripCluster obj;; ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```; struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };; .L lib/libStrip.so ; SiStripCluster obj;; ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there?. It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:; ```; commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms); Author: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2852#issuecomment-434478365:741,undo,undo,741,https://root.cern,https://github.com/root-project/root/pull/2852#issuecomment-434478365,2,"['simpl', 'undo']","['simplified', 'undo']"
Usability,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue?. In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15211#issuecomment-2050660691:506,simpl,simple,506,https://root.cern,https://github.com/root-project/root/issues/15211#issuecomment-2050660691,1,['simpl'],['simple']
Usability,"> My version of os/compiler/valgrind seems to work better and I got some useful information.; > ; > For `root.exe -b -l -q callfuncbench.cxx+(1000)`.; > ; > The new code is a big faster: `42,696,463,692` instead of `45,892,859,389`; > ; > Some of the calculation are shifted to `Value::Value`: `5,000,000,988` vs `3,100,001,703` (it grows by 2 billions when the overall goes down by 3 billions).; > ; > The gains comes from the disappearance of `TClingCallFunc::InitRefAndExec` (minus 3.8 billions) and the simplifications of `std::function_handler (removed) and TClingCallFunc::exec` (minus 1.2 billions).; > ; > So it is getting better and `Value::Value` is a potential source of further optimization (see related comment).; > ; > [callgrind-callfund.tar.gz](https://github.com/root-project/root/files/9665974/callgrind-callfund.tar.gz). Thanks for the details. I've pushed the further optimization of `Value::Value`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1262680556:507,simpl,simplifications,507,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1262680556,1,['simpl'],['simplifications']
Usability,> Nice change. I proposed a simplification. The tests seem to fail because the change does what it is supposed to do and the reference would need to be adapted. Thanks! We're on it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10928#issuecomment-1947918617:28,simpl,simplification,28,https://root.cern,https://github.com/root-project/root/issues/10928#issuecomment-1947918617,1,['simpl'],['simplification']
Usability,"> No test was broken in the incrementals: perhaps we can give it a try in the nightlies?. I was hoping getting some feedback from @krasznaa before merging, but I guess we can merge and we'll see afterwards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14474#issuecomment-1923285964:116,feedback,feedback,116,https://root.cern,https://github.com/root-project/root/pull/14474#issuecomment-1923285964,1,['feedback'],['feedback']
Usability,"> No, that will not work. As i said protoc is actually configured correctly already. The issue is that /opt/homebrew/include is prepended to the search path for headers. I managed to fix it by doing [alisw@526782c](https://github.com/alisw/root/commit/526782cfe8b7a7fffa90ae0395521b01ae902cf7) which will make sure that my own protobuf comes earlier than the one from homebrew. I see in master protobuf will use a config file, so maybe I can simply patch it in my own build. So if it works we can implement it in ROOT. @lmoneta what do you think? Can you give it a try?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14207#issuecomment-1851925257:442,simpl,simply,442,https://root.cern,https://github.com/root-project/root/issues/14207#issuecomment-1851925257,1,['simpl'],['simply']
Usability,"> No; ordinal as in ""the value on the palette axis"" with a range 0..1. I see the number is also used for interpolation between the defined colors ... not quite clear for the doc but fine ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1130#issuecomment-334249148:160,clear,clear,160,https://root.cern,https://github.com/root-project/root/pull/1130#issuecomment-334249148,1,['clear'],['clear']
Usability,"> Not easy to read/parse but fair enough. I gave a fully compiled C++ reproducer, clearly the syntax can get as simple as. ```cpp; df.Define(""vec3"", ""vec1 + Take(vec2, vec1.size(), 99)"").Display({""vec3""});; ```. Getting quite close to TTree::Draw's compactness. Although, for the sake of completeness, let me state that it is personally not my preferred way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15641#issuecomment-2354009946:82,clear,clearly,82,https://root.cern,https://github.com/root-project/root/pull/15641#issuecomment-2354009946,2,"['clear', 'simpl']","['clearly', 'simple']"
Usability,"> Not exactly the same. Sorry, I meant it's the same in the context that I mentioned: the computation graph is left in a state that at least I do not completely understand and I cannot guarantee is fully usable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13546#issuecomment-1707994347:204,usab,usable,204,https://root.cern,https://github.com/root-project/root/pull/13546#issuecomment-1707994347,1,['usab'],['usable']
Usability,"> Note that at this point, you could also make a PR yourself... Good point, hehhe. I did not do it in the beginning because I was not sure what path to follow (if circular TTree or external class). Your solution with just a std::vector looks neat and simple. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7170#issuecomment-776759665:251,simpl,simple,251,https://root.cern,https://github.com/root-project/root/pull/7170#issuecomment-776759665,1,['simpl'],['simple']
Usability,> Note that concurrent access to different elements of a std::vector is guaranteed to be safe. Do you have a reference and/or clear explanation :) ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2708#issuecomment-425180877:126,clear,clear,126,https://root.cern,https://github.com/root-project/root/pull/2708#issuecomment-425180877,1,['clear'],['clear']
Usability,"> Note that we might still face the problem with DLLs loaded from somewhere else, and for which there is no .lib,. Yes, I agree. This is clearly a problem/risk. > but it looks like an overkill to me, especially if I have to search all volumes (imagine NFS). Why ""all"" volumes? Wouldn't we be limited with the set of ""directory of the dll"" and directorys in %PATH% and other path variables?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6156#issuecomment-672220061:137,clear,clearly,137,https://root.cern,https://github.com/root-project/root/pull/6156#issuecomment-672220061,1,['clear'],['clearly']
Usability,"> Note: at least on Intel architectures, a single 64bit pointer cannot be split into more than one cache line due to alignment of 8 bytes (i.e. it's thread-safe to read it). . Even-though this might be true, the C++ standard explicit says that it is undefined behavior to read a value concurrently with an update with any explicit synchronization mechanism (for example std::atomic). In practice, this means that the same 'happenstance' you describe might not be true on other platforms. Furthermore the compiler is also allowed to re-order code in 'surprising ways' that would thwart/foil the assumption on the happenstance you describe. Thus our policy, consistent with the standard is that if a value can be updated while being read, it either must be an atomic or both the read and write must be protected by a lock. [This is not meant to preclude any other means of synchronization to achieve the same goal]. > Therefore, any thread will either see fBase == nullptr and acquire a lock to create the list of bases, or it will find the value already computed and return it immediately. In this case this true simply due to the fact that fBase is already an std::atomic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/957#issuecomment-327819102:1112,simpl,simply,1112,https://root.cern,https://github.com/root-project/root/pull/957#issuecomment-327819102,1,['simpl'],['simply']
Usability,"> Now that I see this issue (https://its.cern.ch/jira/projects/ROOT/issues/ROOT-8915) can we perhaps also provide a template for the commit messages, and close the issue?. Yes, this seems like a nice addition. The points raised by Philippe in the comments are still valid, we can either only provide it as an opt-in template that people themselves have to add locally as a commit template, or we have to enforce it somehow in the CI. I'm not sure the latter is desirable as it would turn the guidelines into rules. I don't know if this would be possible, but what could be nice is a 'commit format checker' in the CI that doesn't immediately turn red if it doesn't succeed but rather points the contributor to the guidelines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14410#issuecomment-1916621891:492,guid,guidelines,492,https://root.cern,https://github.com/root-project/root/pull/14410#issuecomment-1916621891,2,['guid'],['guidelines']
Usability,"> Now there are new failures associated with this change. Can you point me to one or two of those failures?. > https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160 fixed a bug in the template argument printing,. For up-streaming that, it probably would need to become a policy switch. If I understand correctly. 45c0f48f3c3c631d291e0a7a32fd1ba292e79160 : remove suffix in template parameter (However the fix seems counter-intuitive, I am not sure what that code change really does). https://github.com/root-project/root/commit/4417a2cd34effdc6ea59797c2d86b6ef8ca8717a : add default template parameter to the printing. Is `SuppressDefaultTemplateArgs` a new option? If it is not, is it new that it was set to true by default? (we always needed the default parameter to be printed ... and actually in most case, we 'worked' at making sure that all the component are explicitly included (with the right spelling, i.e. for 'opaque' typedef), (see Utils/AST.cpp and the partial desugaring). So, so far, my best guess (because I don't understand 'what' it really does) is that 45c0f48f3c3c631d291e0a7a32fd1ba292e79160 has the side effect of destroying/replacing the partial desugaring. I would have expected the change to be much closer to part that generate the (partial) output for this kind of type/value and/or to be an extension in the partial desugaring routines. (As a side note, I have a vague memory that we already solved a similar problem in the past but can not find (yet?) the solution (if any) in the repository)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1136396468:454,intuit,intuitive,454,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136396468,1,['intuit'],['intuitive']
Usability,> Now you just have to find all includes that could also be handled with a forward declaration. ;-). I do not intend to touch such cases. There are many good reasons to have them as is.; But I just looked through the code (with Eclipse help) and tried to exclude heavy includes like `TMath.h` or `TVirtualX.h` there they simply not used,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5080#issuecomment-593406650:321,simpl,simply,321,https://root.cern,https://github.com/root-project/root/pull/5080#issuecomment-593406650,1,['simpl'],['simply']
Usability,"> Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > ; > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred. You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1193060626:172,simpl,simplest,172,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193060626,1,['simpl'],['simplest']
Usability,"> Ok, let me know if you have other tests which you would like me to do. I was a bit surprised to learn that:. > > Thank you for the nice investigations. What are the next steps? I tried #13139 but that does not help us. I see a different memory profile, but the extra memory due to ROOT is stil around 70MB (even a bit more with that PR, AFAICT).; > ; > Is that with or without opening the file? My expectation is that `root.exe -l -b -q` will take a lot less rss. ping. > One more question for my understanding. Are those big vectors actually needed at all when reading a file? If not why aren't they swapped out to disk either implicitly via some madvise or by simply caching to disk the results? The latter might even give some startup advantage, assuming they are offsets to the pcms and they do not change (not the basic root ones, at least). They are not needed upon module loads. We tried to implement some sparse vectors to mitigate this issue. However, I feel like we did not have the persistence to make it work. That is, we can implement a lazy vector structure that behaves just like vector but the reserve operation does not allocate. Instead, we allocate slabs around the access pattern (we override the subscript operator, etc). This would help us avoid eager allocations and hopefully, depending on whether there is a clear access pattern to optimize things. Our implementation seems to be still [here](https://github.com/Teemperor/llvm/commit/a06b21cbc55c6d2f1d2bf6f39771411ccc17342b). Another easier thing to try is reviving https://reviews.llvm.org/D89749",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1629035353:98,learn,learn,98,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1629035353,3,"['clear', 'learn', 'simpl']","['clear', 'learn', 'simply']"
Usability,"> Ok, the code is broken beyond repair, let's just kill it with fire. Yes, getting the code to work properly is 'hard' and thus the work has not been completely. If you have analyzed each of those lines and deemed that indeed it is not semantically possible to cleanups those things at the end of the process, then please replace the (unactivated) deletion code with a clear explanation of why it is impossible to delete (and saying 'it is hard' or 'broken beyond repair' is not quite enough of an explanation :) :) ). So unless, somebody actually investigate each of those lines, please leave them as a guide of what still needs to be investigated. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/794#issuecomment-317278853:369,clear,clear,369,https://root.cern,https://github.com/root-project/root/pull/794#issuecomment-317278853,4,"['clear', 'guid']","['clear', 'guide']"
Usability,"> One general point regarding the overall design. I wonder if the `RVecDS` data source can be made to have a map/vector of `RVec`s as data member instead of `void *` . Thanks for the review! I have changed the `RVecDS` to take a map to `RVecs`, and not pointers to it. > and those RVecs should be views on the numpy arrays. This would make the design intent clearer and possibly remove the need for a custom deleter that calls into a Python function. This is not possible right now, because RVecs are not true ""views on the numpy arrays"" in the sense that their existence keeps the numpy array alive. This is only hacked into the Python side by adding an `__adopted__` member to the RVec python proxy:; https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rvec.py#L135. As soon as the RVec gets passed to the C++ side we are losing this reference. So we can't work around a custom deleter in the `RVecDS`. Well, there would be a way, which is to implement a similar mechanism of implementing a deleter that calls to the Python side in RVec itself! But maybe that's not for this PR :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15031#issuecomment-2018028002:358,clear,clearer,358,https://root.cern,https://github.com/root-project/root/pull/15031#issuecomment-2018028002,1,['clear'],['clearer']
Usability,> Only lingering question is whether a `out.reserve(strlen(in)*2)` would be useful ... (it is not clear if it would). It would be really strange.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7463#issuecomment-796811095:98,clear,clear,98,https://root.cern,https://github.com/root-project/root/pull/7463#issuecomment-796811095,1,['clear'],['clear']
Usability,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results!. > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15778#issuecomment-2154412824:266,clear,clearly,266,https://root.cern,https://github.com/root-project/root/issues/15778#issuecomment-2154412824,1,['clear'],['clearly']
Usability,"> Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. Is CppInterOp the future of Cling (that is, will it eventually obsolete it?). I remember reading about some effort integrating Cling or some clang-repl into the LLVM project itself, which would be simplest for users/distributors down the line. As for my use-case, I tried expounding on the rationale here: https://github.com/root-project/root/pull/15563#issuecomment-2125969791",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563#issuecomment-2125981292:396,simpl,simplest,396,https://root.cern,https://github.com/root-project/root/pull/15563#issuecomment-2125981292,1,['simpl'],['simplest']
Usability,"> Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of; > total runtime is due to allocations in `RPageSource::UnsealPage`. @mxxo @jblomer This work will be resumed soon as we suspect that not reusing addresses is affecting RDMA data transfers (which has an impact on the measured throughput in the DAOS backend). Specifically, we need to confirm that not reusing addresses that appear in the IOVs array in `daos_obj_{fetch,update}()` is related to a higher overhead due to RDMA MR registration. Therefore, this PR might actually have some other side benefits besides reducing memory allocations and heap fragmentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8634#issuecomment-1300054951:175,resume,resumed,175,https://root.cern,https://github.com/root-project/root/pull/8634#issuecomment-1300054951,1,['resume'],['resumed']
Usability,"> Seems to me the error is not cryptic at all. It makes it clear that `main()` already exists. Newbie users do not know what TApplication is, and how that should be related with main(). See https://stackoverflow.com/questions/74247557/warning-failed-to-call-main-to-execute-the-macro/74445395#74445395",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11707#issuecomment-1315414134:59,clear,clear,59,https://root.cern,https://github.com/root-project/root/issues/11707#issuecomment-1315414134,1,['clear'],['clear']
Usability,"> Side question. If you try opening the Cmakelists with QtCreator, does it run well, too?. Well, that QtCreator is still a bit weird to me. I opened the `CMakeLists.txt` file from `documentation/doxygen` but then it is not clear at all what to do . I prefer to concentrate on debugging the batch way which will be the one used at the end. Note: I get this:; <img width=""1217"" alt=""Screenshot 2022-03-30 at 10 47 14"" src=""https://user-images.githubusercontent.com/4697738/160791054-b9f80406-79fe-4389-a8fc-a2d7410254ba.png"">",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1082799915:223,clear,clear,223,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1082799915,1,['clear'],['clear']
Usability,"> Simpler tests that go straight to the point are easier to debug when they break. That's a good point yes. I will modify the reproducer for the linked issue. I prefer to keep the reproducer of the cloning issue because it's also mimicking the extra machinery involved in creating different tasks, changing the RDF spec and cloning the actions in a specific way",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13787#issuecomment-1745141219:2,Simpl,Simpler,2,https://root.cern,https://github.com/root-project/root/pull/13787#issuecomment-1745141219,1,['Simpl'],['Simpler']
Usability,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar?. The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14865#issuecomment-1973063708:81,clear,clear,81,https://root.cern,https://github.com/root-project/root/pull/14865#issuecomment-1973063708,1,['clear'],['clear']
Usability,"> So `R__SUGGEST_CLASS` and `R__SUGGEST_FUNCTION` are now renamed to `R__SUGGEST_FASTER_...`? It's not always about speed, I actually prefer the original names. Agreed.; > Can we spell the diagnostic as `it has a superior alternative` such that we do not need to distinguish class/ function anymore?. Done. The distinction has to be made, though, because compilers provide a plethora of function attributes, but very few class attributes. For that reason (we wanted to make the `is deprecated` disappear from the message), the function macro is fundamentally different from the class macro.; > And the maybe simply `R__SUGGEST` or `R__USE_INSTEAD`?. Yes, that would be nice. However, in my opinion it's more annoying to see the class deprecation warnings than the function warnings. Just check what the bots are saying when the CI finishes. You should at least check a clang and gcc build. Currently, it's `R__SUGGEST_NEW_INTERFACE`, but that enables both class and function warnings. *PS*:; I added the do not merge label because I enabled the warnings in RooChebychev. When we are happy, I would like to remove that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3100#issuecomment-455564165:608,simpl,simply,608,https://root.cern,https://github.com/root-project/root/pull/3100#issuecomment-455564165,1,['simpl'],['simply']
Usability,"> So somehow -vfsoverlay is triggering the false positive warning detection (it is not clear for me why, maybe it is clang bug. There are much more options.; May be some of them mix up system include files. Especially following option is very suspicious:. -isystem /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-slc6-gcc62-opt/include . Could you try compilation of my simple example without all these extra includes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2581#issuecomment-418887676:87,clear,clear,87,https://root.cern,https://github.com/root-project/root/pull/2581#issuecomment-418887676,2,"['clear', 'simpl']","['clear', 'simple']"
Usability,"> So the BranchTypes part of the template was simply not used?. yup, I think at some point we needed it (or I thought we needed it) to delay the instantiation of the template method, but it doesn't seem to be the case anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5208#issuecomment-603091343:46,simpl,simply,46,https://root.cern,https://github.com/root-project/root/pull/5208#issuecomment-603091343,1,['simpl'],['simply']
Usability,"> So you mean extern template the new ExecImp?. Yes, this what I meant. > because you still have to instantiate the ""front-facing"" template . it is a trivial function, that we could even mark as 'force inline' to make it disappear. > Maybe, but I doubt that it actually achieves the goal of reducing compile time .... and neither [of the functions] seems particularly expensive to generate. . I started from the assumption that the existing code was there for a reason. Indeed if the functions are also simple/trivial, the extern template are not needed, however then the git log need to be enhanced to justify/explain that the existing optimization was in fact not needed (assuming this is the case :) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16176#issuecomment-2271543583:503,simpl,simple,503,https://root.cern,https://github.com/root-project/root/pull/16176#issuecomment-2271543583,1,['simpl'],['simple']
Usability,"> So, I think it is better to make it clear a Clone is needed to avoir deletion. Then this object is drawn ... but the primary thing is to avoid deletion. OK, then I think, the std::unique_ptr should not be used at least in this tutorial, I would close this pr and try another one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5680#issuecomment-633546122:38,clear,clear,38,https://root.cern,https://github.com/root-project/root/pull/5680#issuecomment-633546122,1,['clear'],['clear']
Usability,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable?. Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request.; ; > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way.; ; > I think that fail-on-missing is only relevant in case there would be a non built-in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870570029:31,clear,clear,31,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870570029,1,['clear'],['clear']
Usability,"> Some further debugging (but really just dumping notes from some experiments):; > ; > * The problem of `histhistdrawv7testUnit` can be simplified, in some approximation, to:; > ; > ; > ```; > root [0] TClass::GetClass(""ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>""); > root.exe: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:4120: unsigned int clang::FunctionDecl::getODRHash() const: Assertion `hasODRHash()' failed.; > ```; > ; > * Even simpler, just trying to create an object of that template instantiation fails:; > ; > ; > ```; > root [0] ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty> h;; > root.exe: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:4120: unsigned int clang::FunctionDecl::getODRHash() const: Assertion `hasODRHash()' failed.; > ```; > ; > * Funnily enough, the `using RH1D = RHist<1, double, RHistStatContent, RHistStatUncertainty>` works just fine; same if I remove the second `STAT` template and only leave `RHistStatContent`. I've been stumbling upon these before: this is not simple as it has some template parameter pack expansion as part of the class inheritance chain...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1419265262:136,simpl,simplified,136,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1419265262,3,['simpl'],"['simple', 'simpler', 'simplified']"
Usability,"> Sorry - I'm missing why updating builtin tbb unconditionally is off the table? Is it?. Not really, for continuity this was a first proposal, also linked to some discussions in the LIM. The overall cost of maintaining just one TBB version would be much lower and I personally would be in favour of simplifying the configuration, if possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13724#issuecomment-1736762182:299,simpl,simplifying,299,https://root.cern,https://github.com/root-project/root/pull/13724#issuecomment-1736762182,1,['simpl'],['simplifying']
Usability,"> Sorry, I simply meant `std::byte b{};`. Oh, right, stupid me...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15787#issuecomment-2154679564:11,simpl,simply,11,https://root.cern,https://github.com/root-project/root/pull/15787#issuecomment-2154679564,1,['simpl'],['simply']
Usability,"> TDirectoryFile::BuildImp ... give them slightly different names. I call them `BuildDirectory` and `BuildDirectoryFile`, and use these names in TROOT and TFile constructors respectively. > Even-though it is not necessary, I would keep the fully qualified name (clearer to read). Done in last commit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4305#issuecomment-526230058:262,clear,clearer,262,https://root.cern,https://github.com/root-project/root/pull/4305#issuecomment-526230058,1,['clear'],['clearer']
Usability,"> Tell me though: An RDF (= RNode I think?) doesn't take callbacks. I need a `RResultPtr`, correct? Do I have to attach a dummy result or did I miss something?. OK, I had a look, and it would actually be amazing if I could get access to the LoopManager, because then I could just register the callback using `RLoopManager::RegisterCallback` (cannot link to docs because undocumented functions don't get an anchor in doxygen, any more 🤷‍♂️ ).; I don't see a way to get to the [LoopManager](https://root.cern.ch/doc/master/classROOT_1_1Detail_1_1RDF_1_1RLoopManager.html), though. ... and it would be cool because I wouldn't need to throw away the payload of the resultptr, because I'm not using it anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8675#issuecomment-880524867:370,undo,undocumented,370,https://root.cern,https://github.com/root-project/root/pull/8675#issuecomment-880524867,1,['undo'],['undocumented']
Usability,"> Thank you for the addition @ferdymercury ! I believe this is better than `std::tuple_cat` as it doesn't need the input arguments to be `tuples` and it already returns the formatted string. Can I ask you to provide a couple of tests for the new feature?. Thanks! I just wrote a couple of tests, but I am not very familiar with the GTest infrastructure, I usually use CTest. So I will need some guidance from you ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13299#issuecomment-1723612261:395,guid,guidance,395,https://root.cern,https://github.com/root-project/root/pull/13299#issuecomment-1723612261,1,['guid'],['guidance']
Usability,"> Thank you for this PR.; > Since we include I agree we should use `std::sqrt` instead simple `sqrt` that is defined in; > ; > We should probably change other similar files in the genvector package.; > ; > For this PR, it would be nice if you cleanup the commit history and squash the commits in a single one to have a cleaner history; > Thank you; > ; > Lorenzo. Sure, will do.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7909#issuecomment-822314822:87,simpl,simple,87,https://root.cern,https://github.com/root-project/root/pull/7909#issuecomment-822314822,1,['simpl'],['simple']
Usability,"> Thank you for your reminders, I will for sure follow the procedure once I am convinced this works fine for all ALICE usecases. Having a PR on the v6-28-00-patches branch merely simplifies sharing something which can be immediately used in the ALICE software stack. Yes understood :). > Could you please advise regarding the data structure to use? I could not find one that fits the needed sparseness. I'm not sure there is one already, but it has some comments to make about `std::vector` (because I saw you mentioning `std::pmr::vector`. If there is none yet (but I think Vassil mentioned one? maybe it's not listed in that document), it should likely be added to LLVM's ADT library first and then used in Clang. > On a separate note, are the tests supposed to be green?. Yes, and from a quick look it seems ~all builds are failing with; ```; Assertion `Index < TypesLoaded.size() && ""Type index out-of-range""' failed.; ```; which very much sounds like it is caused by the changes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13641#issuecomment-1719042201:179,simpl,simplifies,179,https://root.cern,https://github.com/root-project/root/pull/13641#issuecomment-1719042201,1,['simpl'],['simplifies']
Usability,> Thank you very much!. Thank you for your help. I learn something new with every PR :D,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8425#issuecomment-865182237:51,learn,learn,51,https://root.cern,https://github.com/root-project/root/pull/8425#issuecomment-865182237,1,['learn'],['learn']
Usability,"> Thanks Jonas! We might have to call some ROOT clean-up routine that is usually called by the ROOT-injected exit handler to make sure TFiles are closed correctly and similar. @pcanal might know if there is a simple way to do that. I think that's `gSystem->Exit(0)` that was used before. You can pass a second parameter (called `mode` and effectively undocumented AFAICT) that makes it call `_exit()` instead of `exit()`. However, I'm not sure if we need to close `TFile`s because the workers don't open them, the parent should handle them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7075#issuecomment-764677587:209,simpl,simple,209,https://root.cern,https://github.com/root-project/root/pull/7075#issuecomment-764677587,2,"['simpl', 'undo']","['simple', 'undocumented']"
Usability,"> Thanks for noticing, @bellenot! I think that the suggestion should also fix it (and is simpler) 🙂. You're right, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11782#issuecomment-1327938951:89,simpl,simpler,89,https://root.cern,https://github.com/root-project/root/pull/11782#issuecomment-1327938951,1,['simpl'],['simpler']
Usability,"> Thanks for the patch, Advait!; > ; > My thoughts: If the function is added to ROOT as is, I'd implement it in the header and simply `return a==b`. The C/C++ cast from `bool` to `int` is effectively a Kronecker Delta.; > ; > That said, I'm not sure if the function as such does in practice what users expect. Floating point values are hardly ever exactly equal, but usually one tests for them to be equal within +/ epsilon.; > ; > I'll assign to @lmoneta. Ahh yes , I see what you mean.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8719#issuecomment-886482916:127,simpl,simply,127,https://root.cern,https://github.com/root-project/root/pull/8719#issuecomment-886482916,1,['simpl'],['simply']
Usability,"> Thanks for the review! No, there is no unit test for this IO rule, but I tested it locally.; > ; > I don't think it's worth it to include a test for this simple IO rule, because such a test also always needs a file storing an object of the old class version, and I think it's not good to have too many binary files in the repository without strong reasons. Actually, if I may @guitargeek 🙂:; Some of the biggest grievances some users had in RF's ""dormant time"" was a non-functioning schema evolution, which prevented users from moving to a newer ROOT version. You lose these users, as they have to disconnect from ROOT's evolution. Therefore, I strongly suggest having schema evolution tests in master. These files only consume a few kB, and they will never be altered.; This becomes even more important if a specific class version was in use for a long time, because the number of workspaces in the wild will scale with the time that a class version was in master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10909#issuecomment-1181856704:156,simpl,simple,156,https://root.cern,https://github.com/root-project/root/pull/10909#issuecomment-1181856704,1,['simpl'],['simple']
Usability,"> Thanks for your comments! . Thanks for the discussion. I think many students learn C++ from root examples so it matters.; ; Thanks for the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super!; b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: ; ```cpp; //my_subtrounes.C. // my_subroutines.C; void my_subroutine(shared_ptr<TH1> &x) {; x.reset(); // not needed for TH1F, but safer in general.; x.reset(new TH1F());; // .. do something with it.; }; ```; ```cpp; //make_th1.C; #include <ROOT/RDirectory.hxx> // one extra line ;); #ifdef __CINT__; // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here...; #endif. void make_th1() {; shared_ptr<TH1> x,y,z;; my_subroutine(x);; my_subroutine(y);; my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:; #ifdef __CINT__ // I wouldn't leave the globals in compiled code. ; RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control.; RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;); RDirectory::Heap().Add(""test3"",z); // ; #endif; }; ```; I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-791104038:79,learn,learn,79,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-791104038,3,['learn'],"['learn', 'learned']"
Usability,"> Thanks! Very nice work, @glmiotto :slightly_smiling_face:!; > ; > I have added some comments that we have to address before merging. Great feedback @jalopezg-r00t, thanks as always! I'll get right on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10720#issuecomment-1152255768:141,feedback,feedback,141,https://root.cern,https://github.com/root-project/root/pull/10720#issuecomment-1152255768,1,['feedback'],['feedback']
Usability,"> Thanks. Sounds like a good idea. Or maybe step and offset. (default 1 and 0). I prefer to set the ""start value"" it is more clear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10588#issuecomment-1128913760:125,clear,clear,125,https://root.cern,https://github.com/root-project/root/pull/10588#issuecomment-1128913760,1,['clear'],['clear']
Usability,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`?; > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:; ```; root [0] auto func = [](const double doub) {; doub += 1.;; }; ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'; doub += 1.;; ~~~~ ^; ROOT_prompt_0:1:29: note: variable 'doub' declared const here; auto func = [](const double doub) {; ~~~~~~~~~~~~~^~~~; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6526#issuecomment-702104810:191,clear,clearly,191,https://root.cern,https://github.com/root-project/root/pull/6526#issuecomment-702104810,1,['clear'],['clearly']
Usability,"> That's the user's guide... it is deprecated ... you should not use it. Hi, I am not using it, but forum users are doing, see https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue. So my suggestion is to put a big label on top informing anyone that it is deprecated. The results still appear when googling, so it seems useful to add some deprecated mark",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10722#issuecomment-1151136310:20,guid,guide,20,https://root.cern,https://github.com/root-project/root/issues/10722#issuecomment-1151136310,1,['guid'],['guide']
Usability,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction.; > ; > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-777286355:850,clear,clear,850,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-777286355,1,['clear'],['clear']
Usability,"> The I/O still needs to be informed of this. The simplest is to a ClassDef with version 0 and generate the dictionary. Thanks Philippe, I had tried the ClassDef( ,0), but I forgot to mention it in the LinkDef.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3222#issuecomment-452207570:50,simpl,simplest,50,https://root.cern,https://github.com/root-project/root/pull/3222#issuecomment-452207570,1,['simpl'],['simplest']
Usability,"> The `###` to `#` or `##`. It complains that there is a `subsubsection` with no parent 'section'. Ah ok ... but that looks ugly (I tried) the headers are far too big. I guess we never use ""#"" only in the root ref guide. So fixing the main page might be not enough . The same problem might show with other pages. For instance here: https://github.com/root-project/root/blob/8a63f78a3f910b3bb8b7758a5af06a80d09e567f/hist/hist/src/TH1.cxx#L139",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-910444480:214,guid,guide,214,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-910444480,1,['guid'],['guide']
Usability,"> The cache mechanics looks good, but I think we need to discuss it a little more:; > ; > * I don't think a thread-local page cache works. In `UnzipClusterImpl()` we allocate pages in (TBB) tasks.; > . Oh, you are absolutely right! I didn't thought enough about the implications of this; it might actually happen that pages are returned by a totally different thread (not TBB's). Simplest thing would be to go for a locked data structure (while trying to keep the critical section small). > * I think we should pass a pre-allocated page to `UnsealPage()` instead of the column id. That would result in symmetric appearance of the cache page allocator for allocation an deallocation. I agree that it would result in symmetric use; however, `UnsealPage()` has to reserve an additional buffer for unpacking the page, if needed. Thus, I would leave it as-is or pass a page allocator as an additional (maybe template) argument.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12279#issuecomment-1428033452:380,Simpl,Simplest,380,https://root.cern,https://github.com/root-project/root/pull/12279#issuecomment-1428033452,1,['Simpl'],['Simplest']
Usability,"> The commit fixes a bug but it looks like we have no test for this case. This being TTree, I would warmly suggest a test is added for this case. Well ... that was of course useful ... as thinking about it more made it clear that there more similar cases. See https://github.com/root-project/roottest/pull/487",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5342#issuecomment-612209494:219,clear,clear,219,https://root.cern,https://github.com/root-project/root/pull/5342#issuecomment-612209494,1,['clear'],['clear']
Usability,"> The first large gap (just before 4s) seems longer in the 'after'. Do we know where the other threads are stopped (and what the running thread does) both in the before and the after. Yes, that's the point at which `LoadClassInfo()` gets called. One thread works on that, while others are waiting for it to finish. That particular gap only happens once. > Do we know where (some of) the gaps are stopped in the main regime?. These stops are on the global lock at several points of the code, it's not a single type of wait. >> TBufferMerger random number generation test on my machine (Core i7 6700).; > Is that with or without the lock removed (both test are needed to get a clear view). I wanted to test the impact of your changes, so that means this branch against master (i.e., no, the lock was not removed). I will test with the lock removed tomorrow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1251#issuecomment-343755018:675,clear,clear,675,https://root.cern,https://github.com/root-project/root/pull/1251#issuecomment-343755018,1,['clear'],['clear']
Usability,"> The fix is 'simple':. Well yes, see https://github.com/root-project/root/pull/9089 and discussion",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8828#issuecomment-2373131937:14,simpl,simple,14,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-2373131937,1,['simpl'],['simple']
Usability,"> The idea was to explicitly take out the relatively complicated conversion step from the tutorials in order to not drive away users. So I think we don't want to add this as another tutorial. Yes, I agree that having a simple tutorials for reading is better. If we expect user to have-to/want to convert TTree into RTNtuple then we should consider have a tutorials, shouldn't we?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6096#issuecomment-666504824:219,simpl,simple,219,https://root.cern,https://github.com/root-project/root/pull/6096#issuecomment-666504824,1,['simpl'],['simple']
Usability,"> The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-795003958:592,simpl,simple,592,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-795003958,2,"['intuit', 'simpl']","['intuitive', 'simple']"
Usability,"> The last commit undoes the first. I could make an new PR if you think it is necessary. Yes, please create new PR, removing these commits",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9005#issuecomment-922042561:18,undo,undoes,18,https://root.cern,https://github.com/root-project/root/pull/9005#issuecomment-922042561,1,['undo'],['undoes']
Usability,"> The simplest solution though is to always create the fTimers . Also I noted that TOrdCollection (the type of fTimes at the moment) has not been upgraded yet to support ```UseRWLock()``` (it will silently ignore it), so we will need to also change the type to ```TList```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8379#issuecomment-857772652:6,simpl,simplest,6,https://root.cern,https://github.com/root-project/root/pull/8379#issuecomment-857772652,1,['simpl'],['simplest']
Usability,"> The way I did this was simply to open the v4 file with a newer ROOT version, use the copy constructor of RooDataHist and save the copied object. Is this the way that you would document, or is there an easier way?. Ah, right. That will work. I thought you re-engineered that RooDataHist to document it in the style of:; https://github.com/root-project/root/blob/ef483dd32765470c702d72adf387d68663e28842/roofit/roofitcore/test/testProxiesAndCategories.cxx#L59-L80. In this case, it was probably this, but I don't remember:; https://github.com/root-project/root/blob/ef483dd32765470c702d72adf387d68663e28842/roofit/roofitcore/test/testRooDataHist.cxx#L242-L248",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8090#issuecomment-832043953:25,simpl,simply,25,https://root.cern,https://github.com/root-project/root/pull/8090#issuecomment-832043953,1,['simpl'],['simply']
Usability,"> There is only one thing I couldn't figure out -- how to link against libpng ... so I just added -lpng into cmake file for graf3d/gl/. Please help me figure out how to do this correctly. Not so simple. Sometime ROOT uses system-wide `libpng`, sometime - builtin version included in `ASImage`.; And they can conflict with each other. Major problem - builtin with ASImage is not available from outside. You have to ensure that your code not linked with `ASImage`. And provide in your CMakeLists.txt file construct like; ```; find_Package(PNG); # handle include directories; ```; Because you may need to use custom include directories. See [here](https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L403-L410)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2172410620:195,simpl,simple,195,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2172410620,1,['simpl'],['simple']
Usability,"> They have the same name. We would probably ""just"" need to also tag roottest as `latest_stable`, and update the tag whenever we update root.git's `latest_stable`. That is one of the possible solutions. The other is to add additional code in `CMakeLists.txt` to checkout the corresponding branch of `roottest`, if `latest-stable` has been checked out in the `root` repository, i.e. something similar to; ```; $ git for-each-ref --points-at=latest-stable^2 --format='%(refname:short)'; v6-24-06; ```; And then checkout `v6-24-06` in `roottest`, which is what `latest-stable` points to. For the sake of a simpler release procedure, I vote for this option given that it should only require 3 additional lines in `CMakeLists.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8783#issuecomment-925104676:603,simpl,simpler,603,https://root.cern,https://github.com/root-project/root/issues/8783#issuecomment-925104676,1,['simpl'],['simpler']
Usability,> This column type stores floating point values on disk as integers with a user-defined precision (from 3 to 32 bits) and a user-defined value range. . This sounds very similar to Double32 ... We will need to explain clearly the differences and advantages ....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16390#issuecomment-2352913035:217,clear,clearly,217,https://root.cern,https://github.com/root-project/root/pull/16390#issuecomment-2352913035,1,['clear'],['clearly']
Usability,"> This latter is what needs a clear reproducer to dig out the problem. I agree. This is actually what I was meaning by making an hello-world program **that does not use ROOT**, compile it linking to ROOT and with sanitiser on, and see if the same leak report is given. I would expect so and, if not, then there is something I definitely do not get in our application. 🙈",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-1818495744:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-1818495744,1,['clear'],['clear']
Usability,"> This should be ""upstreamable""; printing `int i [[deprecated(""reason\n"")]];` seems a valid test case. I doubt there's something I don't know, anyway by applying this patch, tests below in LLVM failed:; ```; Failed Tests (23): ; Clang :: AST/ast-dump-attr.cpp ; Clang :: AST/ast-dump-attr.m ; Clang :: AST/ast-dump-c-attr.c ; Clang :: AST/ast-dump-color.cpp ; Clang :: AST/ast-dump-wasm-attr-export.c ; Clang :: AST/ast-dump-wasm-attr-import.c ; Clang :: AST/ast-print-attr.c; Clang :: AST/attr-swift_attr.m; Clang :: AST/attr-swift_bridge.m; Clang :: AST/category-attribute.m; Clang :: AST/pragma-attribute-cxx-subject-match-rules.cpp; Clang :: AST/pragma-attribute-objc-subject-match-rules.m; Clang :: AST/pragma-multiple-attributes.cpp; Clang :: Misc/pragma-attribute-cxx.cpp; Clang :: Misc/pragma-attribute-objc.m; Clang :: Misc/pragma-attribute-strict-subjects.c; Clang :: OpenMP/assumes_codegen.cpp; Clang :: OpenMP/assumes_print.cpp; Clang :: OpenMP/assumes_template_print.cpp; Clang :: Sema/ast-print.c; Clang :: Sema/attr-availability-swift.c; Clang :: SemaCXX/cxx11-attr-print.cpp; Clang :: SemaTemplate/attributes.cpp; ```. A broken example like:; ```; /home/jun/dev/llvm-project/clang/test/AST/ast-print-attr.c:14:11: error: CHECK: expected string not found in input ; // CHECK: int fun_asm() asm(""test""); ; ^ ; <stdin>:3:46: note: scanning from here ; using C = int ((*))() __attribute__((cdecl)); ; ^ ; <stdin>:4:1: note: possible intended match here ; int fun_asm() asm(R""ATTRDUMP(test)ATTRDUMP""); ; ```. > You can use `R` or `ATTRDUMP`. I just like the freedom we have of using more telling raw string delimiters than `R`. It's also not clear whether such a chance (from `ATTRDUMP` to `R`) is worth the churn. So I guess if `R` is enough for ROOT, maybe we can drop `ATTRDUMP`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10830#issuecomment-1168753106:1653,clear,clear,1653,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1168753106,1,['clear'],['clear']
Usability,"> This use case is fairly simple with RDataFrame and has been supported for a very long time, also it is really unrelated to this PR. Here is an example of how to deal with such cases: .... Not easy to read/parse but fair enough.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15641#issuecomment-2353530365:26,simpl,simple,26,https://root.cern,https://github.com/root-project/root/pull/15641#issuecomment-2353530365,1,['simpl'],['simple']
Usability,"> To do so we need an additional public API:; GetDatasetInfo, returns string like /path/to/file:name, TBD. > We also want a dedicated GetDataSourceInfo, because we have either fDataSet->GetLabel(), if there's a fDataSource, or a TTree/TChain type if there is a df.GetTree or it's a simple dataframe aka RDataFrame(N) if none if this is true. Alright so I have different opinions for both things. First off, I would like to have a common nomenclature that we agree upon, and we can use as reference in the future for our users. This is what my mind first thinks off when reads the following different names:; * `data format` is the identifier name of the logical or in-memory layout of the dataset. For example, `TTree`, `RNTuple`, `CSV`, `Apache Arrow`. The data format specification also imposes some extra constraints, like a CSV table does not have an embedded name, while a TTree does.; * `dataset` is the concrete representation of the information carried by data contained somewhere in some data format, e.g. a flat table or a table with possible n-dimensional cell elements for our usecases.; * `data source` is kind of more blurred, but I see it as a combination of the two above. You can't have a source of data without a dataset and you need a data format to be able to reason about the dataset and run computations on it. The nomenclature above might not be always true, but I still think it's worth to bring up the point that we should agree on one. It stems from my personal reasoning that:; * While I understand the utility of `GetDatasetInfo`, I see a lot of possible drawbacks which I described in [this comment](https://github.com/root-project/root/issues/7828#issuecomment-817820448) to what we currently call `GetDataSourceInfo` discussion; * I would more clearly understand `GetDataSourceInfo` if it were called `GetDataFormat` or `GetDataFormatName`. I still understand that we could keep this function name to be more aligned with existent RDataSource API, though I see little re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7561#issuecomment-817863318:282,simpl,simple,282,https://root.cern,https://github.com/root-project/root/issues/7561#issuecomment-817863318,1,['simpl'],['simple']
Usability,"> To show better in the ref guide it is preferable to put the two plots vertically instead of horizontally.; > Therefore you should change the TCanvas and Divide lines to:; > ; > ```; > TCanvas *c1 = new TCanvas(""c1"", ""Schroedinger's Hydrogen Atom"", 750, 1500);; > c1->Divide(1, 2);; > ```; > ; > That will be the last changes. After that we can merge it. Okay, thank you for you help",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7801#issuecomment-816712227:28,guid,guide,28,https://root.cern,https://github.com/root-project/root/pull/7801#issuecomment-816712227,1,['guid'],['guide']
Usability,> Usability. The drawing options are the more common entity to be accessed. I will add a DrawAndGetDrawable in a future revision. Yes but it is counter intuitive ... Add a drawable and get back an option ... will have to see in tutorials what it looks like ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1130#issuecomment-334249466:2,Usab,Usability,2,https://root.cern,https://github.com/root-project/root/pull/1130#issuecomment-334249466,2,"['Usab', 'intuit']","['Usability', 'intuitive']"
Usability,> Use a unique_ptr which guarantees the reference to stay valid for as long as the referencee is alive. But it changes the cardinality ... where there was a guarantee to have only one there is no one per SectionMemoryManager. ; Is that okay? If it is why wasn't that simpler pattern used (by llvm) in the first place?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7343#issuecomment-789911011:267,simpl,simpler,267,https://root.cern,https://github.com/root-project/root/pull/7343#issuecomment-789911011,1,['simpl'],['simpler']
Usability,"> Very nice! A few nits, in particular whole line comments in the code should use the `//` style (which makes it easier to comment blocks including comments with `/* */`).; > ; > I leave the final approval up to @jalopezg-r00t. Thanks for the feedback and suggestions, @jblomer! Block comments will be used more judiciously from now on :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10720#issuecomment-1152096497:243,feedback,feedback,243,https://root.cern,https://github.com/root-project/root/pull/10720#issuecomment-1152096497,1,['feedback'],['feedback']
Usability,"> Very nice! Initially, I thought that `includeSubFields` means that a matching fields counts with the size of its subtree. Perhaps the true meaning can be made more clear with `searchInSubfields`. Ah, good point! Yes, that sounds like a better name.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13331#issuecomment-1655666693:166,clear,clear,166,https://root.cern,https://github.com/root-project/root/pull/13331#issuecomment-1655666693,1,['clear'],['clear']
Usability,"> Very nice! Interactive rebase is awesome once you learn how to use it!. Yeah, it is. Feels like I've been living under a rock hehe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8426#issuecomment-862436434:52,learn,learn,52,https://root.cern,https://github.com/root-project/root/pull/8426#issuecomment-862436434,1,['learn'],['learn']
Usability,"> We did not come up with a better name. Ours was SparseVector. Just to confirm, we do not pre-allocate the entire vector but we deterministically allocate the slabs. That is, if I hardcoded an offset 101 in my code and the pre-allocation allocated just a slab [0-100), then when I do PagedVector[101] it would put what I need where I need it, right?. No, you would need first to register the range [100, 200) via addEmptyRange(). I could try to modify it for that behaviour, if you prefer. Maybe it would allow me to get rid of the logarithmic lookup, actually (basically, one less vector to worry about). > If it is not needed, let's keep it simple. It would be easier to go through the upstream llvm reviews. Ok, I will clean it up a bit more. > Can we make the API of the PagedVector such that it becomes a drop-in replacement? I have not looked deeply in the PR but I see some work being done on the users side. Yes, users would need to addEmptyRange where they now do resize(). I guess I could actually hide addEmptyRange inside the resize. Is it allowed to use std::pmr::vector in the llvm codebase?. > The source locations offset would be a major source of improvement if this technique flies there. I couldn't find the source locations vector anymore. Could you point it to me?. > PP: It seems llvm has some facility along these lines: https://llvm.org/doxygen/classllvm_1_1SparseBitVector.html. I will have a look.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1717037288:644,simpl,simple,644,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1717037288,1,['simpl'],['simple']
Usability,> We don't need (a) as we're no longer even generating rootmap files. Humm ... Was it made clear/decided that moving to use module **requires** that the user upgrade to using explicit-linking or is there a plan to migrate this feature of the rootmap file to something else?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394474495:91,clear,clear,91,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394474495,1,['clear'],['clear']
Usability,"> We have a clear path to deal with this behaviour. Although there is a workaround, people hit by this bug will not necessarily know right away why their ROOT doesn't work and may waste their time trying to debug it. I think it's worth looking at a fix. It used to work before even with the compiler wrappers. Note also that the problem reported by @xkzl happens for a similar reason, but is not quite the same as the one reported here, as in https://github.com/root-project/root/issues/10556#issuecomment-1931464549 ccache is not involved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10556#issuecomment-1968623162:12,clear,clear,12,https://root.cern,https://github.com/root-project/root/issues/10556#issuecomment-1968623162,1,['clear'],['clear']
Usability,> We have root7 enabled on mac1014/cxx17. What make you think we don't?. But how it not recognize such simple error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4380#issuecomment-530800499:103,simpl,simple,103,https://root.cern,https://github.com/root-project/root/pull/4380#issuecomment-530800499,1,['simpl'],['simple']
Usability,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html; > Without your change the axis titles appear as you see on the reference guide online.; > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```; charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));; ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts?; ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8235#issuecomment-847929734:153,guid,guide,153,https://root.cern,https://github.com/root-project/root/pull/8235#issuecomment-847929734,1,['guid'],['guide']
Usability,"> We measure an ~18% decrease when applied to CMS's NanoAOD compressed with LZ4. My expectation, that simple approach gives 10% or maybe more - while it much more efficient in terms of produced data size. Therefore I would recommend to try it first - it is really very simple.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1003#issuecomment-332284056:102,simpl,simple,102,https://root.cern,https://github.com/root-project/root/pull/1003#issuecomment-332284056,2,['simpl'],['simple']
Usability,"> We measured that sweeping a dataset with 59 files on eos within CERN network checking entries numbers in trees took ~.3s per file. Isn't this perf hit too large?. I am not 'too' worried about the user side (albeit, some TChain may have 1000s of files) but on the server side (i.e. trying to avoid a denial-of-services attack on the server). I still strongly recommend that we do not open all the files at once we 'stop'/'throttle' once you reach the number of task/threads you are going to have (then take a pause, start the actual tasks/jobs and then restart 'slowly' to get the rest of the information).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3051#issuecomment-442089455:510,pause,pause,510,https://root.cern,https://github.com/root-project/root/pull/3051#issuecomment-442089455,1,['pause'],['pause']
Usability,> We should really have a test for this... I absolutely agree! @scott-snyder how involved is the failing test in the ATLAS framework? If it's not too complicated to boil it down to a simple reproducer it would be really helpful here. Otherwise I can try to sketch one myself and then you can tell us how closely it represents your original case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14887#issuecomment-1980364814:183,simpl,simple,183,https://root.cern,https://github.com/root-project/root/pull/14887#issuecomment-1980364814,1,['simpl'],['simple']
Usability,"> We strive/want to have the name of the column to be usable identifiers. Thank you Philippe, I've just pushed a new commit for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8227#issuecomment-846119670:54,usab,usable,54,https://root.cern,https://github.com/root-project/root/pull/8227#issuecomment-846119670,1,['usab'],['usable']
Usability,"> We will need once to discuss this PR and #5249 . Do you have preferred solution? :). Personally I find more clear #5249, but I get the point of @etejedor who prefers this, so I'm working mainly on this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5261#issuecomment-607779478:110,clear,clear,110,https://root.cern,https://github.com/root-project/root/pull/5261#issuecomment-607779478,1,['clear'],['clear']
Usability,"> Well not quite, it broke clean builds on the `master` branch on basically all platforms... Not clear why, investigating. Where did you see that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12149#issuecomment-1661819517:97,clear,clear,97,https://root.cern,https://github.com/root-project/root/pull/12149#issuecomment-1661819517,1,['clear'],['clear']
Usability,"> Well, no, you can simply unplug (or disable) the internet connection. Not really a good idea. I tried to run cmake for windows, but got some errors here as well, unfortunately stopping my attempts to build ROOT and especially to build the documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8742#issuecomment-887610171:20,simpl,simply,20,https://root.cern,https://github.com/root-project/root/issues/8742#issuecomment-887610171,1,['simpl'],['simply']
Usability,"> Well, what I'm doing here i prevent the following example: The class `TVector3` has a method `Orthogonal()` returning a `TVector3`, which as a method `Orthogonal()`, and so on. It's maybe not optimal, but it's a good compromise between not browsing any `TMethodBrowsable` and having infinite recursion. That being said, feel free to propose a better solution (it's @pcanal code anyway wink). At the end of the day, IIUC, what we need is to be able to (even partially) browse methods to be able to draw something... Yes, I see. However, while the case `Orthogonal()->Orthogonal()` is seldomly useful, other simple cases like `Orthogonal()->Px()` might be useful. . So I do actually wonder why the infinite recursion is an issue — I'm with @pcanal 's comment from #13233 here, i.e. since the recursion is real, and given that the populating is already done lazily (i.e. triggered by the user clicking), it does not break anything technically (unless I missed something). . In other words: Is JIRA issue [#9260](https://sft.its.cern.ch/jira/browse/ROOT-9260) actually a bug? In my opinion, this would be intended behaviour (if I click on a method which returns something not really useful from the mathematical / physics point of view, ROOT has no way to know and gives me exactly what I asked for :wink: ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13284#issuecomment-1642563861:608,simpl,simple,608,https://root.cern,https://github.com/root-project/root/pull/13284#issuecomment-1642563861,1,['simpl'],['simple']
Usability,"> What Cling is really crashing on is the definition of `art::ensurePointer` or more precisely any function definition with a `try`-`catch` block as body (which I just learned is valid C++...). The problem can be seen with; > ; > ```c++; > .rawInput; > void f() try { } catch (...) { }; > ```; > ; > (on the ROOT prompt). Yeah, that's a common pitfall, where the assumption that the function's body is a CompoundStmt is incorrect. I suspect the fix is trivial?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9664#issuecomment-1021074174:168,learn,learned,168,https://root.cern,https://github.com/root-project/root/issues/9664#issuecomment-1021074174,1,['learn'],['learned']
Usability,> What about DrawCopy instead of DrawClone (keeping the simple cd) ?. DrawCopy could only used with TH1::; The TImage and TGraph do not have member function of DrawCopy,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5680#issuecomment-633524404:56,simpl,simple,56,https://root.cern,https://github.com/root-project/root/pull/5680#issuecomment-633524404,1,['simpl'],['simple']
Usability,"> What about replacing them with a free alternative?. Yes, I think it will be simpler",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8357#issuecomment-946590814:78,simpl,simpler,78,https://root.cern,https://github.com/root-project/root/issues/8357#issuecomment-946590814,1,['simpl'],['simpler']
Usability,> What happens if you simply remove the DEPENDENCY. Then rule executed only once when target file is not exists.; Any following changes in source will have no effect,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9804#issuecomment-1029083072:22,simpl,simply,22,https://root.cern,https://github.com/root-project/root/pull/9804#issuecomment-1029083072,1,['simpl'],['simply']
Usability,"> What is the change (increase of the cache size or explicit cache learning or both)?. Doing the caching at all. I thought prefetching was part of it, but apparently it is not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16640#issuecomment-2407188475:67,learn,learning,67,https://root.cern,https://github.com/root-project/root/pull/16640#issuecomment-2407188475,1,['learn'],['learning']
Usability,"> Which bug report is that? Which link is broken exactly? I found one that we can _improve_ - #7307. https://github.com/root-project/web/issues/510. The link ""You can find in the reference documentation page pointers to reference manuals for all ROOT versions."" is http://root.cern/guides/reference-guide, and it redirects to that same page.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7295#issuecomment-787091629:282,guid,guides,282,https://root.cern,https://github.com/root-project/root/issues/7295#issuecomment-787091629,2,['guid'],"['guide', 'guides']"
Usability,"> While thinking about collisions and the index storage, one thought that crossed my mind is to template the index based on the index field type(s). I'm not sure if that's a good idea, one of the immediate question being ""do we want `RNTupleIndex<std::string>` and `RNTupleIndex<std::uint64_t>` to be different types?"" But still maybe something to consider, it might simplify the field value storage (if needed) and the entire hashing business... This is how I initially implemented it. Indeed it makes the index itself much more straightforward. However, when I started prototyping the actual join/unaligned friends it really didn't work without making that interface overly complicated so in the end I opted for a non-templated version. Perhaps there's some template trickery to still make it play nice with the foreseen interface (or allow for a slightly different but still simple enough interface), I will think about it for a bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15116#issuecomment-2285578132:367,simpl,simplify,367,https://root.cern,https://github.com/root-project/root/pull/15116#issuecomment-2285578132,2,['simpl'],"['simple', 'simplify']"
Usability,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test; > ... but; > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:; > ; > ```; > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):; > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified.; > Call Stack (most recent call first):; > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY); > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY); > ```; > ; > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > ; > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > ; > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before.; > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY; > ; > ```cmake; > IF(TARGET ${dictionary}); > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>); > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>); > ENDIF(); > ```; > ; > ```cmake; > IF(TARGET ${dictionary}); > target_sources(${dictionary} PRIVATE ${gensrcdict}); > ENDIF(); > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5019#issuecomment-587581863:174,simpl,simply,174,https://root.cern,https://github.com/root-project/root/pull/5019#issuecomment-587581863,1,['simpl'],['simply']
Usability,"> Yes but we do not need to have consecutive ranges and I think encoding the following way is clearer:; > ""xy"" -> [0, 1000]; > ""X"" -> [2000, 3000]; > ""y"" -> [4000, 5000]. I think, it is also ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1553#issuecomment-360485904:94,clear,clearer,94,https://root.cern,https://github.com/root-project/root/pull/1553#issuecomment-360485904,1,['clear'],['clearer']
Usability,"> Yes that's what is said in the DrawClone documentation. But what about using simply Draw instead of DrawClone in these examples ?. In fact, the older version is using simple Draw without std::unique_ptr; the latest version is using std::unique_ptr instead of simple pointer, this would deconstruct at the end of program. so DrawClone must be used",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5680#issuecomment-633415717:79,simpl,simply,79,https://root.cern,https://github.com/root-project/root/pull/5680#issuecomment-633415717,3,['simpl'],"['simple', 'simply']"
Usability,"> Yes they need to be fixed. I could tell you - but what I'd recommend (look, we're teaching you here :-) ) is to copy the warning text, search the Internet, and pick the most helpful posting on StackOverflow: that'll explain you what to do. And it's a key pattern to become a successful developer, it's how all of us fix our warnings. Ahh hehe. Okay, I'll try to fix it :D . Thanks for the learning opportunity",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8426#issuecomment-862486337:391,learn,learning,391,https://root.cern,https://github.com/root-project/root/pull/8426#issuecomment-862486337,1,['learn'],['learning']
Usability,"> Yes this is a way towards this. There are more steps (TFile, TKey and adding custom streamers for the TProto* classes and a few others) so not simple but likely straight-forward. @pcanal, would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6532#issuecomment-722617999:145,simpl,simple,145,https://root.cern,https://github.com/root-project/root/pull/6532#issuecomment-722617999,2,['simpl'],"['simple', 'simplifying']"
Usability,"> Yes, but on that web page, there is no module for MacOS14 yet. That might be the cause of the problem because when I build it from sources on my MacOS 14 machine I have no problem with TBrowser. The version for macOS14 should come soon. Meanwhile, you can try to build from the sources if you want. I'm sorry if I didn't make myself clear. I also build it from sources on my MacOS 14 machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13834#issuecomment-1756960653:335,clear,clear,335,https://root.cern,https://github.com/root-project/root/issues/13834#issuecomment-1756960653,1,['clear'],['clear']
Usability,"> Yes, it seems the problem arises mainly when googling. The first two results lead you to the deprecated users guide. We need to watermark them in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10722#issuecomment-1151221786:112,guid,guide,112,https://root.cern,https://github.com/root-project/root/issues/10722#issuecomment-1151221786,1,['guid'],['guide']
Usability,"> Yes. But this is *wonderful*! This is a fantastic approach imho! Can I just throw in another suggestion then. Since we are introducing these new API methods from scratch and they do not belong already to any of the base classes of `TVirtualPad`, maybe we can take the opportunity to give them some more meaningful name. For example, `Add` could be `RegisterDrawable` or `AdoptDrawable` or just `Register`/`Adopt`. I would be in this sense very much in favour of having `Adopt(std::shared_ptr<TObject> obj)` so that the memory ownership is clear. This would for example enable any use case where the drawable object is not registered with the list of global cleanups. In the same spirit, I don't see (yet) the need for `AddFirst` and `Remove`. What are the user-side reasons for these?; In the current changes:; * `AddFirst` is defined in the class but never used anywhere else, so it should be removed.; * `Remove` is used only for internal purposes and could be made a private method.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15822#issuecomment-2162805726:541,clear,clear,541,https://root.cern,https://github.com/root-project/root/pull/15822#issuecomment-2162805726,1,['clear'],['clear']
Usability,"> You see that after deleting the dataset gives exactly the same memory as after having created the dataset, so there is a problem, isn't it ?!?. I'm not convinced by this yet because I don't completely understand the output at this point. Yes, you are right, memory doesn't decrease, but starting from the third toy it also doesn't *increase* when `generate()` is called, right? So these numbers don't make sense to me to begin with, and I would rather not conclude that there is a memory leak based on . But anyway, I managed to convince myself by generating many more toys, and observing a steady memory increase over time. I did this with a simplified version of your reproducer:; ```C++; void Minimum2(); {; using namespace RooFit;; using namespace RooStats;. ProcInfo_t procinfo;; const float toMB = 1.f / 1024.f;. std::unique_ptr<TFile> f_ws{TFile::Open(""WS-YY-resonant_500_For_Comb.root"", ""READ"")};. auto *ws = f_ws->Get<RooWorkspace>(""combWS"");; auto *mc = static_cast<ModelConfig *>(ws->obj(""ModelConfig""));; auto *pdf = static_cast<RooSimultaneous *>(mc->GetPdf());. for (std::size_t index_toy = 1; index_toy < 500; index_toy++) {. const RooArgSet *Observables = (RooArgSet *)mc->GetObservables();; std::vector<std::unique_ptr<RooDataSet>> toyDatas;; std::map<string, RooDataSet *> toyDataMap;. RooCategory channellist{""channellist"", ""channellist""};. // generate each category; for (auto const &item : pdf->indexCat()) {; channellist.defineType(item.first.c_str());; RooAbsPdf *pdftmp = pdf->getPdf(item.first.c_str());. RooArgSet obstmp;; pdftmp->getObservables(Observables, obstmp);. toyDatas.emplace_back(static_cast<RooDataSet *>(pdftmp->generate(obstmp, Extended())));; toyDataMap[item.first.c_str()] = toyDatas.back().get();; }. RooRealVar wt(""wt"", ""wt"", 1);; RooDataSet toyData{""toyData"", """", {*Observables, wt}, Index(channellist), Import(toyDataMap), WeightVar(wt)};. if (index_toy % 10 == 0) {; gSystem->GetProcInfo(&procinfo);; std::cout << index_toy << "": "" << procinfo.fMemResi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8984#issuecomment-1387712730:645,simpl,simplified,645,https://root.cern,https://github.com/root-project/root/issues/8984#issuecomment-1387712730,1,['simpl'],['simplified']
Usability,"> You should probably just delete that commit from the branch history, e.g. with an interactive rebase (`git rebase -i master` + `git push --force`). Isn't ""squash and merge"" good enough? Otherwise I will simply make another PR, so I'm sure not to screw up ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11892#issuecomment-1351098247:205,simpl,simply,205,https://root.cern,https://github.com/root-project/root/pull/11892#issuecomment-1351098247,1,['simpl'],['simply']
Usability,> `!entry == true` if `entry == 0`: `0` is fals-y in C++. Ohh I didn't know that. Then maybe one could simply check if entry is undefined. Or does that cause the same error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8425#issuecomment-861667463:103,simpl,simply,103,https://root.cern,https://github.com/root-project/root/pull/8425#issuecomment-861667463,1,['simpl'],['simply']
Usability,"> ```c++; > auto progbar = ROOT::RDF::MakeProgressBar(df, everyNEvents, nEvents); // last 2 args are optional; > ```. Although the ProgressBar won't be a progress bar when we don't know the number of events ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8675#issuecomment-880514090:154,progress bar,progress bar,154,https://root.cern,https://github.com/root-project/root/pull/8675#issuecomment-880514090,1,['progress bar'],['progress bar']
Usability,"> `core/clib/res/mmprivate.h` is ours. I'm relatively sure this also comes from somewhere, judging by the occurrences that I found with a quick web search ;-). > Could you have that ""survive"" in this / a PR and propose the other one upstream?. I've opened https://github.com/civetweb/civetweb/pull/1056 to upstream the fix into `civetweb`. My plan would be to wait a few days, the maintainer seems to be very responsive. If we cannot get it in, I'll back out the other fix to get that merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9969#issuecomment-1050635411:409,responsiv,responsive,409,https://root.cern,https://github.com/root-project/root/pull/9969#issuecomment-1050635411,1,['responsiv'],['responsive']
Usability,"> `root [1] auto firstTwo2 = Take(v, 2);`. This resolves correctly to `ROOT::VecOps::Take()` after a `using namespace ROOT::VecOps;`, which is what appears in the example referenced above. Thus, the following works:; ```c++; root [0] ROOT::VecOps::RVec v{2., 3., 1.};; root [1] using namespace ROOT::VecOps;; root [2] auto firstTwo = Take(v, 2); (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }; ```. I cannot tell whether the names in `ROOT::VecOps` were directly available for unqualified lookup in the past. @Axel-Naumann? . Anyways, I agree that the interpreter should be more clear about unresolved names (instead of partially dumping the AST). I can dedicate some spare cycles in the first week of December for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9261#issuecomment-966475070:588,clear,clear,588,https://root.cern,https://github.com/root-project/root/issues/9261#issuecomment-966475070,1,['clear'],['clear']
Usability,"> and ~~be done with it~~ never protect TFile::ReadProcessID. Thus obviously leading to random crash (simple conclusion from reading the code). > TTreeProcessorMT::Process respects (and if not, it's a bug and not intentional) the ""one file, one thread"" rule. As I rediscovered the protection are for that case. . From what I can infer the ""limitation"" of the protection to 'just' the TTreeProcessorMT::Process is a bad thing. So I propose:. - Remove TParTreeProcessingRAII and friends; - Replace R__RWLOCK_ACQUIRE_WRITE/READ by the regular R__WRITE/READ_LOCKGUARD; - Remove fgRwLock; - Refind test case containing and using TRef or TRefArray (thus exercising TFile::ReadProcessID and co); - Test with both TTreeProcessorMT::Process and RDF. @etejedor Do you still have (and/or remember) the test files you used to develop/test this code?. [Comment left on queue for a while :( ]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5288#issuecomment-610506869:102,simpl,simple,102,https://root.cern,https://github.com/root-project/root/pull/5288#issuecomment-610506869,1,['simpl'],['simple']
Usability,> but at this point our priority is to get something usable in for the existing REve applications. Then I propose to reduce number of fonts - one or two for now. And think how one can allow to use external fonts - in this PR or may be later.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2162185672:53,usab,usable,53,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2162185672,1,['usab'],['usable']
Usability,"> but the same callback; might be invoked concurrently by different worker threads if implicit multi-threading; is enabled. As far as I can tell this requires the user code to be thread safe, which does not seem to be the case of the example. Also, in the blur, in it is not clear whether the call back will see the global partial result or the partial result so far on the 'current' thread. The case 'global partial result' requires merging of the thread's histograms in the case there is one histo copy per thread/worker.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331163715:275,clear,clear,275,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331163715,1,['clear'],['clear']
Usability,"> but then it is not clear at all what to do. - Click on ""Configure Project"".; - After that, you can override the default DOCU_INPUT or DOCU_THREADS, or DOXYGEN_EXECUTABLE, as you consider. (under Projects, Build settings).; - Finally click on the Build icon (hammer).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1083459839:21,clear,clear,21,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1083459839,1,['clear'],['clear']
Usability,"> cause it says nothing about its meaning,. True. > fStreamingElement. It is indeed clearer. I am hesitant because we don't use this wording anywhere else (and have use fElement in TBranchProxy, albeit there it is clearer/more straightforward what the member is about). fStreamerElement could have work (if it was not just one character away from the type ...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3463#issuecomment-468646611:84,clear,clearer,84,https://root.cern,https://github.com/root-project/root/pull/3463#issuecomment-468646611,2,['clear'],['clearer']
Usability,"> changing the flags for the release builds is not an option, right?. It certainly is, but we have not received any request from an experiment, and you are the first user ever to mention this :-) Given these statistics I'd prefer to keep our build system simpler rather than adding complexity, especially as you can always build your own ROOT if needed, with the flags that you prefer!. > would a patch that assures all constants in TColor::RGB2HLS are float an acceptable solution?. I'll assign this to @couet so he can decide whether that's useful!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677#issuecomment-713600538:255,simpl,simpler,255,https://root.cern,https://github.com/root-project/root/issues/6677#issuecomment-713600538,1,['simpl'],['simpler']
Usability,"> cling startup scripts are different from rootlogon.C and rootrc . rootrc is a config file while .clingrc is a regular cling script. cling startup scripts are executed also in invocation of standalone cling binary (not from root interpreter).; > ; > Question:; > ; > 1. Renaming `.cling_profile` and `.clingrc` with suffix `.C` ?; > ; > 2. Rename `.clingrc` to something else so that `.clingrc` can be reserved for cling config file in the future (if any)?; > Making it a config file instead of a cling script aligns with rootrc but not with bashrc, zshrc.; > ; > 3. Drop `.clingrc` for now and keep `.cling_profile` only ? If a cling script can easily tell if it is in interactive mode then keeping only 1 script makes sense. Otherwise it is better to keep both to align with bash and other interpreter inspired by bash design. By easily telling I mean a macro like `CLING_INTERACTIVE` or something simple that does not access `gCling`. How about a `~/.cling.d` folder where we glob all files and execute?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11262#issuecomment-1255476176:901,simpl,simple,901,https://root.cern,https://github.com/root-project/root/pull/11262#issuecomment-1255476176,1,['simpl'],['simple']
Usability,> couldn't we simply use a vector<char> as a byte buffer here?. I guess so.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2420#issuecomment-409973833:14,simpl,simply,14,https://root.cern,https://github.com/root-project/root/pull/2420#issuecomment-409973833,1,['simpl'],['simply']
Usability,"> ctually, for me it does not seem to improve the code quality. The advantage is that the next time we refactor the code we will not forget the delete statements (this is what happened here) and make it clearer that the ownership is not delegated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2361#issuecomment-409641166:203,clear,clearer,203,https://root.cern,https://github.com/root-project/root/pull/2361#issuecomment-409641166,1,['clear'],['clearer']
Usability,> do you have any intuition about what could have gone wrong that causes these failures in the execCheckClusterRange test because of different file sizes?. Not yet. It could be that some leaf type changed or a `StreamerInfo` changed (for that reverting just the `LinkDef` should be sufficient).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14268#issuecomment-1863174237:18,intuit,intuition,18,https://root.cern,https://github.com/root-project/root/pull/14268#issuecomment-1863174237,1,['intuit'],['intuition']
Usability,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```; root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'; Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }; ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15891#issuecomment-2180639835:160,clear,clear,160,https://root.cern,https://github.com/root-project/root/pull/15891#issuecomment-2180639835,1,['clear'],['clear']
Usability,"> generate RConfigure.h in special directory; > Do we agree on this?. Yes!!! It's better to put them simply into {{${CMAKE_CURRENT_BUILD_DIR} }} (or whatever it's called), and add it to the allheaders target so cmake copies it into {{include/}}. I verified with the modules folks: we have no problem with building against headers in `module/inc` and running without that header around.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5170#issuecomment-600632638:101,simpl,simply,101,https://root.cern,https://github.com/root-project/root/pull/5170#issuecomment-600632638,1,['simpl'],['simply']
Usability,"> he really new thing (although maybe not a product, but side-effect) is the p. But p stays null. F(x) is stored to a temporary variable, p is not set to F(x). > (if it really calculates them inside, that is quite surprising). It does. It's a technical workaround to have both paths to follow the same code. > It's just that if there is a default argument, normally it represents a frequent use case, so it brings attention while learning about a given method. Here it brings confusion (to me and to my student at least). I agree with you. So I would suggest to remove from your title ""add new method to handle this case"".; Making it non-default would force everyone to pass an argument. If one wants the old behavior, it will pass nullptr and get the bin edges as before, so no new extra method is needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16784#issuecomment-2444656410:430,learn,learning,430,https://root.cern,https://github.com/root-project/root/issues/16784#issuecomment-2444656410,1,['learn'],['learning']
Usability,"> how confident are we that (simple) files with that option are indeed 'reproducible' (i.e. is there more field to handle?). I testing file with TH1 and with TTree (10K entries, 4 branches). ; Binary compare shows no difference.; Once option is there, we can try to apply it in several places in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4253#issuecomment-525010216:29,simpl,simple,29,https://root.cern,https://github.com/root-project/root/pull/4253#issuecomment-525010216,1,['simpl'],['simple']
Usability,"> how will users find out about the feature now?. Indeed I wouldn't remove it, but we can discuss where we place it. What's the intended use case of `AsRNode`, pass an RDF object to C++ for further processing?. > good for me (EDIT: as long as we still clearly state that it's Python-only). Yes that's the case already in the current text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9611#issuecomment-1016848413:252,clear,clearly,252,https://root.cern,https://github.com/root-project/root/pull/9611#issuecomment-1016848413,1,['clear'],['clearly']
Usability,"> if (gDebug > 0) Info(...) does not have that issue. To be correct, gDebug (and it's replacement) should be an atomic. Also (I probably missed something) are we replacing the current multi-level gDebug by a simple bool? (I.e. either nothing or a flood of a data)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6875#issuecomment-735477104:208,simpl,simple,208,https://root.cern,https://github.com/root-project/root/pull/6875#issuecomment-735477104,1,['simpl'],['simple']
Usability,"> if someone will still try use pyroot_experimental => CMake should help user to switch to pyroot option? . Do you think this is really necessary? Isn't it enough to say clearly in the release notes that `pyroot_experimental` does not exist anymore, and that `pyroot_legacy` has been added? It seems to me that otherwise we are carrying old options that we do not use anymore. But I don't know what has been the policy for deprecated CMake options in the past. > As well do we need to provide message that if user uses pyroot option, CMake should notify that it is ex pyroot_experimental?. But PyROOT experimental will cease to exist as such, we will have PyROOT (which will be a new one) and then the legacy. Again I think that release notes can help explain this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5772#issuecomment-638171977:170,clear,clearly,170,https://root.cern,https://github.com/root-project/root/pull/5772#issuecomment-638171977,1,['clear'],['clearly']
Usability,"> in this sense, my understanding is that the situation is the same as before. Not exactly the same, consider the following repro taken from Danilo's new test. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RDFHelpers.hxx>; #include <memory>; #include <TTreeReader.h>; #include <iostream>. class SimpleActionHelper : public ROOT::Detail::RDF::RActionImpl<SimpleActionHelper> {; public:; using Result_t = int;. private:; std::shared_ptr<Result_t> fValue;; int &fTestVal;. public:; static constexpr int fgRefVal = 42;; SimpleActionHelper(int &testVal) : fValue(new int), fTestVal(testVal) {}; SimpleActionHelper(SimpleActionHelper &&) = default;; SimpleActionHelper(const SimpleActionHelper &) = delete;; std::shared_ptr<int> GetResultPtr() const { return fValue; }; void Initialize() {}; void InitTask(TTreeReader *, unsigned int) {}; template <typename... ColumnTypes>; void Exec(unsigned int, ColumnTypes...); {; }; void Finalize() { fTestVal = SimpleActionHelper::fgRefVal; }; std::string GetActionName() { return ""SimpleAction""; }; };. int main(); {; auto exceptionThrower = [](ULong64_t ievt) {; if (ievt == 4) {; throw std::invalid_argument(""Time to throw."");; }; return int(0);; };. int testVal = 123;; std::cout << ""Testing value "" << testVal << std::endl;; SimpleActionHelper helper(testVal);; auto rdf = ROOT::RDataFrame(8).Define(""dummy"", exceptionThrower, {""rdfentry_""});; auto valRes = rdf.Book<int>(std::move(helper), {""dummy""});. try{; valRes.GetValue();; } catch (...){. }. std::cout << ""Testing value "" << testVal << std::endl;; }; ```; Then. ```; ./repro_628.out ; Testing value 123; RDataFrame::Run: event loop was interrupted; Testing value 123; ```; ```; ./repro_danilo_patch.out ; Testing value 123; RDataFrame::Run: event loop was interrupted; Testing value 42; ```. Still, this is probably not something to write in the docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13546#issuecomment-1707964693:304,Simpl,SimpleActionHelper,304,https://root.cern,https://github.com/root-project/root/pull/13546#issuecomment-1707964693,10,['Simpl'],"['SimpleAction', 'SimpleActionHelper']"
Usability,"> main: Yes, we should. It is indeed currently very inconsistent (none, by-itself, surrounded by arbitrary `#if[n]def`, hidding by `__CLING__`). Yes we should have guidelines? I'm in principle fine with the change but I think we should clarify whether or not we want `main` in the tutorials. If we do, we should change all the RNTuple tutorials.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6337#issuecomment-692295741:164,guid,guidelines,164,https://root.cern,https://github.com/root-project/root/pull/6337#issuecomment-692295741,1,['guid'],['guidelines']
Usability,"> or the expected usage. humm ... here it is. ```; gInterpreter->Calc("" ..... ""); Take Read Lock x N times; Take Write Lock x M times; suspend before calling User Code; UserCode; start multiple threads; Take WriteLock *** DEAD LOCK here without this infrastructure; ReleaseWriteLock; restore mutex state; Release Write Lock x M times; Release Read Lock x N times; ```; The recurse count is for this case (simplified to show just the salient point); ```; gInterpreter->SomeEntry("" ..... ""); Take Write Lock; Snapshot 1; Take Write Lock x M times; gInterpreter->Load("" ..... ""); Take Write Lock; Snapshot 2; Take Write Lock x N times; gInterpreter->Calc("" ..... ""); Take WriteLock; Snapshot 3; suspend before calling User Code; restore mutex state; Forget 3; Release Write Lock; Release Write Lock x N times; Forget 2; Release Write Lock; Release Write Lock x M times; Forget 1; Release Write Lock; ```; (I don't recall the exact set of possible re-entry points into the interpreter, so this one is inaccurate but in the spirit); where essentially Snapshot 2 and 3 needs to be ignored, i.e. we need to rewind to the top; but also we need to remember to skip the ""Forget 2"" and ""Forget 3""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6301#issuecomment-687294851:405,simpl,simplified,405,https://root.cern,https://github.com/root-project/root/pull/6301#issuecomment-687294851,1,['simpl'],['simplified']
Usability,"> probably due to filtering and skimming using a software that has the new persistency. CloneTree currently can only handle schema evolution if the 'fast' option is selected. For slow cloning it does not (yet?) deal well with the fact that the on-file and in-memory representation does not match (the reading part is 'sorta' fine but the writing part is confused because the cloned branches are (for now) the exact same as the input and thus we are now in the case were we attempt to write in a different format than the one in memory. The ""Info"" above are clear/exact that some data is lost because those field are no longer in memory (but they still have a branch for them on the output, so behavior will be strange). I am unclear why this leads to the behavior I have seen/reported but it might be linked. Thanks to your new file (that I can clone to a smaller if I make sure to load none of the pluto libraries), I seem to be back on track. thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7754#issuecomment-966525290:557,clear,clear,557,https://root.cern,https://github.com/root-project/root/issues/7754#issuecomment-966525290,1,['clear'],['clear']
Usability,"> so I think the appropriate fix would be to simply use a smaller value than the current 2^33 on 32bit machines, rather than switching to long long. I agree.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10302#issuecomment-1092976574:45,simpl,simply,45,https://root.cern,https://github.com/root-project/root/pull/10302#issuecomment-1092976574,1,['simpl'],['simply']
Usability,> so if you could try to compare before/after by running something simple using data at CERN. CMS currently does not mount CERN's eos through fuse at FNAL and does not export (without grid certificate) any data.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1309267711:67,simpl,simple,67,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1309267711,1,['simpl'],['simple']
Usability,"> sorry it was not clear to me that you were actually asking for this change. done. Thanks, but I was just asking if you wanted me to do it, not for you to do it... 😉 sorry for the misunderstanding...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5276#issuecomment-607696223:19,clear,clear,19,https://root.cern,https://github.com/root-project/root/pull/5276#issuecomment-607696223,1,['clear'],['clear']
Usability,"> sounds both plausible and simple :-) Let us know, please!. I struggle a bit to find out exactly where CMake gets the LLVM library, unfortunately it doesn't look like it uses `llvm-config --libs`...; Will look around though",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1666920625:28,simpl,simple,28,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1666920625,1,['simpl'],['simple']
Usability,"> t is clear that that inner track isn't iterating anywhere nearly as much as it should be. What is the actual difference? How much is expected vs how much is gotten? Is it for the exact same file? What code is your colleague using? Did you consider using RDataFrame?. In the code shown above, the only relevant number are `AutreeData.GetEntries()` and the set of `AutreeData.tracknumber`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14215#issuecomment-1851592415:7,clear,clear,7,https://root.cern,https://github.com/root-project/root/issues/14215#issuecomment-1851592415,1,['clear'],['clear']
Usability,"> the APPLE system SDK has changed. @cxwx I agree. But I can't figure out why you can build successfully by turning off some options, but I can't. I also updated the command line tool to 14.3, did you?. > When using the non-homebrew cmake, make sure you removed the previous CMakeCache.txt. As a brutal measure you can temporarily rename/ops/homebrew; that should also move it out of the way... @Axel-Naumann Sure. I cleared all files when I built. It may work but I need to install the dependencies manually, which is also an annoying thing. ; And I do think there is something new happening for these building errors other than homebrew things. rootfit and glew errors are always there no matter if I use external dependencies or builtins. I have never encountered these errors before. >Can you explain why you don't want to use homebrew's build of ROOT? This seems much simpler than building ROOT yourself - unless you want to help develop ROOT, of course! ;-). It really isn't necessary, it's just a habit. In addition to macos, I also use root on various versions of linux servers. For the latter, in most cases, I can only compile it myself. And we have many codes that depend on root, so we hope that root's compilation options can be mastered by ourselves. As for contributing to the development of root, I hope that I can do it in the future, but at present more is to use root to complete physical analysis. Thank you for your invaluable contributions!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12648#issuecomment-1523586633:417,clear,cleared,417,https://root.cern,https://github.com/root-project/root/issues/12648#issuecomment-1523586633,2,"['clear', 'simpl']","['cleared', 'simpler']"
Usability,> the problem is likely to be either at ... To be clearer. I suspect that __PRETTY_FUNCTION__ is returning for icc is different form that the one expected in TTypeNameExtractionBase::GetImpl and thus needs to be adjusted for it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1389#issuecomment-347637331:50,clear,clearer,50,https://root.cern,https://github.com/root-project/root/pull/1389#issuecomment-347637331,1,['clear'],['clearer']
Usability,"> turning by default a feature which messes up with the lookup tables. How does it mess things up?. > with no tests. As I said that won't be the case. > to improve the less used feature of unloading. I don't understand this part - do you mean unloading isn't used a lot? That's totally incorrect - it's the major missing feature of cling for physicists. Not even talking about all of cling's notebook users here. > make this feature configurable. Do you really believe we need a flag beyond `.rawInput`? Could you argue for this, please? Too many options kill usability...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4214#issuecomment-532585952:560,usab,usability,560,https://root.cern,https://github.com/root-project/root/pull/4214#issuecomment-532585952,1,['usab'],['usability']
Usability,"> using SO_LoadedLast (which is somewhat counter-intuitive to our use case) seems to work. I agree `SO_LoadedLast` shouldn't be what your after especially if it works with `SO_LoadedFirst` here.; Diff-ing my PR1 vs your JITRTLD_LOCAL shows something went screwy, in particular:; DynamicLibrary.h@91 should be:; ```; enum SearchOrdering {; /// SO_Linker - Search as a call to dlsym(dlopen(NULL)) would when; /// DynamicLibrary::getPermanentLibrary(NULL) has been called or; /// search the list of explcitly loaded symbols if not.; SO_Linker,; /// SO_LoadedFirst - Search all loaded libraries, then as SO_Linker would.; SO_LoadedFirst,; /// SO_LoadedLast - Search as SO_Linker would, then loaded libraries.; /// Only useful to search if libraries with RTLD_LOCAL have been added.; SO_LoadedLast,; /// SO_LoadOrder - Or this in to search libraries in the ordered loaded.; /// The default bahaviour is to search loaded libraries in reverse.; SO_LoadOrder = 4; };; ```. > Thanks for helping me out to sort this out!. No problem, but lets sort if it can be accomplished with `SO_LoadedFirst`. > My personal opinion is that it should be the default, being close to the old behavior. I understand that but do my examples or the fact the old behavior completely breaks down on Windows give you no pause?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313811536:49,intuit,intuitive,49,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313811536,2,"['intuit', 'pause']","['intuitive', 'pause']"
Usability,> what to do with the doc in the User's Guide . Should it be moved to the Reference Guide ? . Some of the information is still relevant (beside the mention of TThread) in particular 25.2. The rest looks like it is all not longer recommended to use.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7216#issuecomment-1057548923:40,Guid,Guide,40,https://root.cern,https://github.com/root-project/root/issues/7216#issuecomment-1057548923,2,['Guid'],['Guide']
Usability,"> why are all these super-important methods undocumented?. 'because' the code is ancient :( .... and there is some sparse documentation. TLeaf::GetLen has a one len documenation and GetLenStatic is trivial get for fLen (yes, the name don't match :( ) which has a documentation line. In summary the extent of the doc is:. ```; GetLenStatic : Number of fixed length elements.; GetLen : Return the number of effective elements of this leaf.; ```; And effectively we have the relationship:; ```; GetLen() == ( GetLenStatic() * variableDimensionSize ); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1532#issuecomment-359049449:44,undo,undocumented,44,https://root.cern,https://github.com/root-project/root/pull/1532#issuecomment-359049449,1,['undo'],['undocumented']
Usability,"> why should the RVec cast of the ""jets"" column work if it is in fact an std::vector<float>. I understand why it currently doesn't, but I believe we agree that reading any collection as an RVecs via RNTupleDS _should_ work. I think we agreed to:; - [ ] throw an exception from RNTupleDS in case type on disk and type requested do not match -- this will make the bug noisy instead of silent and will possibly catch other issues in the future; - [x] wait for the RVec redesign that adds a small vector optimization and then provide a type-erased deserialization function for RVecs which RNTupleDS can take advantage of -- the redesign will make it simpler to implement such a function in a robust way",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6347#issuecomment-692682651:646,simpl,simpler,646,https://root.cern,https://github.com/root-project/root/issues/6347#issuecomment-692682651,1,['simpl'],['simpler']
Usability,"> yes, I am a Git novice, (in ATLAS we use GitLab and merge), so I used several commit, merge commands. How do I use rebase?. No problem! We are here to help. In your case, the easiest way is to checkout your branch, and do a `git rebase -i master`. That will put you into an editor with a list of commits, more or less like this:. ```; pick ede15457be Adding new option to set MaxVirtualSize to a negative value causing one cluster of baskets kept in memory; pick 3035c73a31 Adding new option to set MaxVirtualSize to a negative value causing that many clusters of baskets kept in memory; pick 275d909504 Adding new option to set MaxVirtualSize to a negative value causing that many clusters of baskets kept in memory Just some indentation changes.; pick c25ea30332 Make some clang format changes; pick dae3241bee Fix whitespace; pick baa80f53a4 Fix memory leak; pick a8324c92ee Undo TBranch version change, thanks Philippe.; ```. Then, you can change the commits you want to fuse from `pick` to `fixup`, which will combine them with the previous commit, like this:. ```; pick ede15457be Adding new option to set MaxVirtualSize to a negative value causing one cluster of baskets kept in memory; fixup 3035c73a31 Adding new option to set MaxVirtualSize to a negative value causing that many clusters of baskets kept in memory; fixup 275d909504 Adding new option to set MaxVirtualSize to a negative value causing that many clusters of baskets kept in memory Just some indentation changes.; fixup c25ea30332 Make some clang format changes; fixup dae3241bee Fix whitespace; fixup baa80f53a4 Fix memory leak; fixup a8324c92ee Undo TBranch version change, thanks Philippe.; ```. Then you save and quit, and git will rebase for you, leaving you with a single commit:. ```; commit 304f38e812556a7d8c4dcaaf5a71fca4d3ba9bf2; Author: Peter van Gemmeren <gemmeren@anl.gov>; Date: Tue Jul 18 17:47:58 2017 -0500. Adding new option to set MaxVirtualSize to a negative value causing one cluster of baskets kept in m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/796#issuecomment-317761739:880,Undo,Undo,880,https://root.cern,https://github.com/root-project/root/pull/796#issuecomment-317761739,1,['Undo'],['Undo']
Usability,"> you can calculate them from globalstart, globalend, filelist, treesnentries. yes if you pass all files and all tree entries. currently iirc we are only passing the file names and the tree entries for the files and trees that will be actually touched by the task. otoh i'm still thinking that `globalstart` and `globalend` could go away, what do we need them for?. EDIT: ah we use them for the call to `SetCacheEntryRange`, and they are not really global but they are relative to the task-specific chain uhm....it feels like some simplification is possible, if they are relative to the task-specific chain can't they be calculated from the rest?. EDIT 2: Ideally the call to `SetCacheEntryRange` should not be needed at all, `TTreeProcessorMT` and `TTreeReader` should take care of it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8646#issuecomment-895350585:531,simpl,simplification,531,https://root.cern,https://github.com/root-project/root/pull/8646#issuecomment-895350585,1,['simpl'],['simplification']
Usability,">; Serialization of ROOT objects in python using `dill` is broken for `python3`, but it works ok for `python2`.; ; ( `dill` serialization is vital for the proper paralllel and distributive python calculations using `pathos` suite. The functionality of ; regular paralell python `pp` and `multiprocessing` module is very limited due to limitations of `pickle`` serialization, ; and it is a moment when `dill`/`pathos` enters the game, significantly extending the functionality; . ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Similar behaviour for `python2` and `python3` is expected ; b ut it works for `python2` and fails for `python3`; ; ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. to reproduce see this very simple gist ; https://gist.github.com/VanyaBelyaev/278074969f2f940f180885be35f04db9 . It has been tested with different LCG releases from LCG_94 to LCG_97a; and it always works for `pytjon2` and fails for `python3`. for `python3` one gets an error; ```; Traceback (most recent call last):; File ""./test_dill.py"", line 13, in <module>; hh = dill.loads ( dill.dumps ( h ) ); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 294, in dumps; dump(obj, file, protocol, byref, fmode, recurse)#, strictio); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 287, in dump; pik.dump(obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 437, in dump; self.save(obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 549, in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370:1094,simpl,simple,1094,https://root.cern,https://github.com/root-project/root/issues/6370,1,['simpl'],['simple']
Usability,">> Is it so?. > Yes, as written in the manual. . I still do not see reason why dictionary is necessary here. ; It is really question for @pcanal. ; Is there special handling of `std::unique_ptr<T>` for the types derived from `TObject`? ; In dictionary for transient members? ; And how one gets such information for the class which does not appears in header files?. As I mention - there is much simpler workaround with plain pointer.; But once I implement it - one immediately forgets about the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1638477128:395,simpl,simpler,395,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1638477128,1,['simpl'],['simpler']
Usability,">Though I do wonder how much I want to become involved in tweaking the ROOT configuration... There are many things that I'd love to change about the current ROOT CMake configuration (I find it pretty bad that target properties are used so sparsely in the configuration, using directory level configurations in most cases instead.), but I wouldn't have time to propose an update for those that I'd like... Hi Attila, thank you for the PR. Restructuring the build system is part of my work plan for the next year, so it's good to know that this is something that experiments will see as beneficial. I agree with you that we should be using target properties to propagate include directories and other settings that will allow dependent projects to simply add a `target_link_libraries()` call. This is one of the major motivations that we have for restructuring the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466#issuecomment-351951349:746,simpl,simply,746,https://root.cern,https://github.com/root-project/root/pull/1466#issuecomment-351951349,1,['simpl'],['simply']
Usability,">simplify frame layout. seems like one step in the right direction in terms of trimming down number of ""speed bumps"" in reading things!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13779#issuecomment-1822922214:1,simpl,simplify,1,https://root.cern,https://github.com/root-project/root/pull/13779#issuecomment-1822922214,1,['simpl'],['simplify']
Usability,"@AntoniMarcinek I have made a PR implementing the functionality you requested. ; Only the support for `_chg_truncated`, but it is not clear to me exactly what is it and what is your use case for this ; Cheers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7332#issuecomment-876389035:134,clear,clear,134,https://root.cern,https://github.com/root-project/root/issues/7332#issuecomment-876389035,1,['clear'],['clear']
Usability,"@Axel-Naumann , @vgvassilev Could you provide some feedback?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11262#issuecomment-1251040944:51,feedback,feedback,51,https://root.cern,https://github.com/root-project/root/pull/11262#issuecomment-1251040944,1,['feedback'],['feedback']
Usability,"@Axel-Naumann ,. ""This isn't going to ever work - C++ lookup is waaay too complex. And even if it were to work, we would be duplicating a large amount of (complex) functionality, and would have to update it with future language standards."". Except that a) it does work today (I think you're truly missing how much cppyy has evolved in functionality from the limited bindings that PyROOT offers, with portable binaries on all major platforms to boot), and b) most of the new language features are resolved in a way that is invisible to the bindings. A case like this PR is very rare. Neither this decl stuff nor the slowness of TClass and friends are material at this point (and simple to replace). What hurts cppyy much more, and what is taking up much more workaround code, is where ROOT/meta breaks things, like removing std::, or tries too hard to be smart, like with template instantiations or overload matching, where it doesn't even follow C++'s rules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3579#issuecomment-478652670:678,simpl,simple,678,https://root.cern,https://github.com/root-project/root/pull/3579#issuecomment-478652670,1,['simpl'],['simple']
Usability,"@Axel-Naumann : I have to admit I have been stupid and my last posts have been wrong.; I did built root without builtin_llvm, so this could not have worked by designed.; I have rebuilt now with builtin_llvm and with your patch, and now I am only getting the warning message; ```; Error in <UnknownClass::InitInterpreter()>: LLVM SYMBOLS ARE EXPOSED TO CLING! This will cause problems; please hide them or dlopen() them after the call to TROOT::InitInterpreter()!; ```; But this is clear, since ROOT just checks for the presence of the LLVM symbols.; I am now rebuilding the ALICE software with this ROOT and checking whether the segfaults are gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4689#issuecomment-570267436:481,clear,clear,481,https://root.cern,https://github.com/root-project/root/pull/4689#issuecomment-570267436,1,['clear'],['clear']
Usability,@Axel-Naumann ; Disregard of moduls requirements - it is much clear now.; One do not have long lists of different dirs in CXX flags and in dependencies. If try to make opposite approach - when only source dirs are used - one will have super long list of all ROOT subdirs with includes. It is definitely a worse scenario.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5170#issuecomment-600570372:62,clear,clear,62,https://root.cern,https://github.com/root-project/root/pull/5170#issuecomment-600570372,1,['clear'],['clear']
Usability,@Axel-Naumann ; In case simple `-m profile` can be helpful:. ```; ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) ; ... ; real	0m14.144s; user	0m10.412s; sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ); ... real	0m45.779s; user	0m36.429s; sys	0m4.734s. ```; output files: ; [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70); [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11927#issuecomment-1361002552:24,simpl,simple,24,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1361002552,1,['simpl'],['simple']
Usability,"@Axel-Naumann @eguiraud One of my dataframe tests fails because of this:; ```; 27/155 Test #1500: roottest-root-dataframe-test_snapshot .........................***Failed 13.13 sec; ...; --- /srv/root/src/roottest/root/dataframe/test_snapshot.ref	Tue Mar 17 09:11:36 2020; +++ /srv/root/build/roottest/root/dataframe/test_snapshot.log	Fri Apr 23 09:56:40 2021; @@ -1,4 +1,5 @@; ; +cling::DynamicLibraryManager::loadLibrary():/srv/root/build/roottest/root/dataframe/par:cannotdynamicallyloadposition-independentexecutable; ----Nowwithatreeintherootdirectory; Branch:b1; Branch:b1_square. -- END OUTDIFF OUTPUT --; CMake Error at /srv/root/build/RootTestDriver.cmake:264 (message):; compare 'stdout' error: 1; ```; Somehow ROOT should address the case of binaries built with -fpie, as at least Gentoo has enabled that by default in GCC to improve security. Other distros may do the same in the future. See e.g. https://docs.fedoraproject.org/en-US/packaging-guidelines/#_pie",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-825474655:956,guid,guidelines,956,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-825474655,1,['guid'],['guidelines']
Usability,"@Axel-Naumann Many thanks for the detailed and friendly reply! :+1: . > Do you have a proposal for the latter? We can add a new boolean constructor argument, `failOnUnknownArgs = false` which we set to `true` in ROOT. Indeed, I believe the additional constructor argument is best. ; The only other solution which comes to mind (if it would not be possible to add a parameter) would be to (once more) use magic numbers for the `numOptions` parameter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported option",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10090#issuecomment-1064634456:721,clear,clearly,721,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456,1,['clear'],['clearly']
Usability,"@Axel-Naumann as discussed privately. I think I actually can easily support new and old versions of arrow, so I would suggest we do to simplify porting also in the ALICE framework.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5393#issuecomment-616127096:135,simpl,simplify,135,https://root.cern,https://github.com/root-project/root/pull/5393#issuecomment-616127096,1,['simpl'],['simplify']
Usability,"@Axel-Naumann, @couet pointed out that my read file was basically a simpler version of h1draw.C and that it would be better to just clarify some things in that file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8699#issuecomment-884186832:68,simpl,simpler,68,https://root.cern,https://github.com/root-project/root/pull/8699#issuecomment-884186832,1,['simpl'],['simpler']
Usability,"@AxelKrypton any updates on this? Looking over the past discussion, we are aware of the (intentional) memory leaks in `libCling` (even though we fixed one case in https://github.com/root-project/root/pull/16150 that was a mistake; the fix will appear in 6.34). I still have trouble understanding how just linking to ROOT and not using it should introduce a memory leak in the application... Lacking more feedback, I would propose to close this issue for the moment...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-2370819124:404,feedback,feedback,404,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-2370819124,1,['feedback'],['feedback']
Usability,"@ChristianTackeGSI As @oshadura said, the error comes from a timeout (after 4 hours) while trying to checkout [roottest](https://github.com/root-project/roottest). This is due to a bug (?) in CI/git on Windows:; ```; 12:24:10 * Connection #0 to host github.com left intact; 12:24:10 bash: /dev/tty: No such device or address; 16:23:23 Cancelling nested steps due to timeout; 16:23:23 Sending interrupt signal to process; 16:23:30 ^CTerminate batch job (Y/N)? ; 16:23:30 ^Cscript returned exit code -1073741510; ```; Simply forking [roottest](https://github.com/root-project/roottest) prevent this timeout",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7031#issuecomment-809942554:516,Simpl,Simply,516,https://root.cern,https://github.com/root-project/root/pull/7031#issuecomment-809942554,1,['Simpl'],['Simply']
Usability,"@Falcort This is simple solution for row._bHasChildren, also for layout",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4628#issuecomment-555477812:17,simpl,simple,17,https://root.cern,https://github.com/root-project/root/pull/4628#issuecomment-555477812,1,['simpl'],['simple']
Usability,@GiacomoXT thanks for the feedback. Let us know how that goes!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16774#issuecomment-2447782541:26,feedback,feedback,26,https://root.cern,https://github.com/root-project/root/issues/16774#issuecomment-2447782541,1,['feedback'],['feedback']
Usability,@Linev The first(2cf3535) and the last commit(3262d53) should be deleted. The last commit undoes the first. I could make an new PR if you think it is necessary.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9005#issuecomment-920572223:90,undo,undoes,90,https://root.cern,https://github.com/root-project/root/pull/9005#issuecomment-920572223,1,['undo'],['undoes']
Usability,"@MarkusFrankATcernch ; it's all clear now, nothing is missing. with the ROOT changes should be integrating fine.; thank you :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8955#issuecomment-915152676:32,clear,clear,32,https://root.cern,https://github.com/root-project/root/pull/8955#issuecomment-915152676,1,['clear'],['clear']
Usability,"@MrCarroll do not worry. These things happen, especially when one is under heavy load at work. Never hesitate to report issues as you encounter them, feedback is very important for us!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14138#issuecomment-1832630669:150,feedback,feedback,150,https://root.cern,https://github.com/root-project/root/issues/14138#issuecomment-1832630669,1,['feedback'],['feedback']
Usability,"@ShamrockLee there is already a `Browser.ExpandDirectories` entry in `system.rootrc`, you can simply set it to false. Otherwise I can also add something like:; ```; // always prevent expanding the parent directory tree on nix/store; if (first == ""nix"" && second == ""store""); expand = kFALSE;; ```; But I would prefer not to add such special case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7213#issuecomment-779734329:94,simpl,simply,94,https://root.cern,https://github.com/root-project/root/issues/7213#issuecomment-779734329,1,['simpl'],['simply']
Usability,"@StephanTLavavej FYI, the upgrade of LLVM 13 is done, and this is now fixed in ROOT master (i.e. the workaround has been removed). Thanks again for your feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10875#issuecomment-1346236983:153,feedback,feedback,153,https://root.cern,https://github.com/root-project/root/issues/10875#issuecomment-1346236983,1,['feedback'],['feedback']
Usability,"@Triple-S ; I see your points about posters. One simple way to bypass this issue is or course to use filled markers with seems to me are better any way. But I can understand you need hollow markers. As you may need only a few line widths may be 2, 3 and 4 simply adding new makers makes sense. Given the usually small size of markers, having any possible line widths does not make sense (you will rapidly get big ""blobs"" not understandable). So I am not sure a coding convention is necessary. The different look of the maker 3 should be fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4721#issuecomment-573597757:49,simpl,simple,49,https://root.cern,https://github.com/root-project/root/pull/4721#issuecomment-573597757,2,['simpl'],"['simple', 'simply']"
Usability,"@acampove,; > Thanks contacting us. We should probably wait for @eguiraud for a final answer, but I'd like to give my two cents about this.; > ; > > Instances of RDataFrame objects are meant to be treated like trees.; > ; > I am curious about this first sentence. I have never got this impression, neither reading docs / toying with tutorials or doing more complex analyses with RDF. the first line of the [RDF docs](https://root.cern/doc/master/classROOT_1_1RDataFrame.html) says `ROOT's RDataFrame offers a high level interface for analyses of data stored in TTree, CSV's and other data formats. `. Just by the fact that I can read and process other formats than TTree I would say that in general RDF is not meant to be treated like a TTree. Otherwise I would also have to say that RDF is meant to be treated like a CSV file or something similar. I did not refer to the documentation but to how people would actually use this class. 99% of people do not read CSV files with ROOT and `RDataFrame` will be mostly used to interact in a simple and quick way with trees. > ; > > there should be a function that allows us to merge them; > ; > If I have to think about this function you propose, I don't see it going much further than the example you already have above. Since RDataFrame **is not** the dataset itself, but just an interface to it, it still needs to open the file where the dataset is contained and read data from it. Thus, merging two RDF objects would still involve ` opening each file and saving them. Then loading them again and merging, then saving again` as you say above. Or at least the loading, merging and saving again part, if we consider that the part of your example where you create two files from scratch and save data into them with RDF could also just have been opening already existing files written by some other application before the merging. In fact the solution you provide follows exactly these steps:; > ; > ```python; > # Opening files and loading pre-existing dat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-927331768:1084,simpl,simple,1084,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-927331768,1,['simpl'],['simple']
Usability,@agheata ; I am a bit hesitant to have one TGeoManager with materials created with different systems of units.... Concerning the comparison:; if PDG == TROOTMaterial and PDG == TGeant4Material then also: TROOTMaterial == TGeant4Material. Clearly both tests must succeed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11060#issuecomment-1198041487:238,Clear,Clearly,238,https://root.cern,https://github.com/root-project/root/pull/11060#issuecomment-1198041487,1,['Clear'],['Clearly']
Usability,"@alja Should I merge it?; The only small doubt I have - probably we should use `override` specifier when implementing such ""complex"" interfaces. Otherwise at some point simple mistake in list of args will lead to error, which could be detected by compiler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4030#issuecomment-509813570:169,simpl,simple,169,https://root.cern,https://github.com/root-project/root/pull/4030#issuecomment-509813570,1,['simpl'],['simple']
Usability,"@amadio , I have tested running the executable `tmva/sofie/test/emitFromONNX` on the machine directly. ; With the current master, I don't have the PCH dependency and I have : ; ```; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ rm ../../../etc/allDict.cxx.pch; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted (core dumped); ```; with your PR I have instead: ; ```; sftnight@SFT-ubuntu-1804-3:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; error: unable to read PCH file /mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch: 'No such file or directory'; fatal error: PCH file '/mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch' not found: module file not found; Segmentation fault (core dumped); ```. I think before merging, it would be nice to understand why after your changes in CMAKE affecting only libCore, a simple executable not using the ROOT I/O requires the PCH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10690#issuecomment-1403728768:1102,simpl,simple,1102,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1403728768,1,['simpl'],['simple']
Usability,@amadio ; As idea: ; Can we provide build option which enables maximal-available c++ standard and root7 when at least c++14 is there? Or simply enable root7 an all platforms where it make sense? ; Otherwise it always a chalenge to test root7 features on Jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3831#issuecomment-493590447:137,simpl,simply,137,https://root.cern,https://github.com/root-project/root/pull/3831#issuecomment-493590447,1,['simpl'],['simply']
Usability,"@amadio @dpiparo what do you think, should we or should we not support `Filter(""x>0 //with a comment"")`? If yes, it's a crippled feature because people have to be careful not to use column names or ""return"" in the comment text. If not, should we check for comments and warn if they are present?. I don't know what's best. For sure we have to clearly state in the docs what's supported and what's not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1103#issuecomment-333880251:342,clear,clearly,342,https://root.cern,https://github.com/root-project/root/pull/1103#issuecomment-333880251,1,['clear'],['clearly']
Usability,"@amadio Thank you for the feedback. I will fix the indentation issue. The reason for misalignment of `*` was that I had written the original code with 2 spaces of indentation and later changed them all to 3. Regarding the `clang-format-diff`. I tried to get it working, but it does not seem to work. Especially, it is unable to capture filenames correctly from `git diff`. Details can be seen in the bug filed with clang here [https://bugs.llvm.org/show_bug.cgi?id=33759](https://bugs.llvm.org/show_bug.cgi?id=33759)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/778#issuecomment-316009181:26,feedback,feedback,26,https://root.cern,https://github.com/root-project/root/pull/778#issuecomment-316009181,1,['feedback'],['feedback']
Usability,"@amadio `v[{true,false}]` is returning only the first element of a two-elements RVec. Users are not expected to write that, but it's what something like `v[v > 0]` boils down to. I think this syntax is nice to have. Now my understanding is that _if_ we also want to allow `v[idxs]` where `idxs` is a list of indeces which select part of `v`, we need a way to distinguish between boolean masks and integer masks, hence `RStrongBool`.; But the use-case for `v[idxs]` is not as clear to me as I thought. @dpiparo what is an example of this? (and what do you think about `Take(v, {1,2})`?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2147#issuecomment-395704533:475,clear,clear,475,https://root.cern,https://github.com/root-project/root/pull/2147#issuecomment-395704533,1,['clear'],['clear']
Usability,"@amadio afaik, the build dirs for PRs are cleared before each build, or is something else broken?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793#issuecomment-319057815:42,clear,cleared,42,https://root.cern,https://github.com/root-project/root/pull/793#issuecomment-319057815,1,['clear'],['cleared']
Usability,"@amadio not a problem, let's just make it very clear in the docs what can and cannot be done with expression strings. Both `Define` and `Filter`'s doxygen docs should be updated with the new feature actually :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1103#issuecomment-333877675:47,clear,clear,47,https://root.cern,https://github.com/root-project/root/pull/1103#issuecomment-333877675,1,['clear'],['clear']
Usability,"@amadio, can we try maybe with a simpler fix for png in asimage? Then I can merge my part and as a second iteration could be https://github.com/root-project/root/pull/1571 What you think about?. Thank you!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1527#issuecomment-362375643:33,simpl,simpler,33,https://root.cern,https://github.com/root-project/root/pull/1527#issuecomment-362375643,1,['simpl'],['simpler']
Usability,"@axel, It is just a few lines to be removed in [documentation/users-guide/Trees.md](https://github.com/root-project/root/pull/12551#diff-117cc7b0ab6e57e24e841291453a0649b39771247133629bd536ebd0212a3510) (not a complete file).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12551#issuecomment-1485324939:68,guid,guide,68,https://root.cern,https://github.com/root-project/root/pull/12551#issuecomment-1485324939,1,['guid'],['guide']
Usability,"@bbockelm ; My proposal (which actually not my) is not orthogonal - it solves similar problem in much more compact way. And only if it fails, one could try your approach. Do you have estimation in overall compression gain?; It could be, that after applying simple algorithm such gain will be negligible on realistic data.; And probably one could just skip your changes in TBasket raw format. ; As you could see - Victor algorithm does not change format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1003#issuecomment-332276146:257,simpl,simple,257,https://root.cern,https://github.com/root-project/root/pull/1003#issuecomment-332276146,1,['simpl'],['simple']
Usability,"@bbockelm @pcanal This patch copies the code of signal handling in CMSSW. It avoids async-unsafe functions in signal handler functions. . For reference, see the link https://github.com/bbockelm/cmssw/blob/stacktrace_handler_revisit/FWCore/Services/src/InitRootHandlers.cc. I tried this patch with some simple multi-thread test cases and it worked fine. Is there any complicated test cases I can run? I think this patch is not very ready to merge, but it achieved basic functions. Any criticisms are welcome.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/97:302,simpl,simple,302,https://root.cern,https://github.com/root-project/root/pull/97,1,['simpl'],['simple']
Usability,@bbockelm I accidentally deleted my previous work last night. But good news is I figured out the issue I was facing when I try to reproduce my work today.; Now everything is working. I uploaded roottest repo in my github and generated the unit test as a commit. My current test simply follows the sample code in https://sft.its.cern.ch/jira/browse/ROOT-7588.; Let me know if something is not correct.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/84#issuecomment-174810100:278,simpl,simply,278,https://root.cern,https://github.com/root-project/root/pull/84#issuecomment-174810100,1,['simpl'],['simply']
Usability,"@bellenot . > isn't there any simpler solution. I have no idea. While it is not real standard, each linux/mac flawor has own way to provide function to read `/dev/random` or ; `/dev/urandom`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14908#issuecomment-1985836713:30,simpl,simpler,30,https://root.cern,https://github.com/root-project/root/pull/14908#issuecomment-1985836713,1,['simpl'],['simpler']
Usability,@bellenot : The new executables are signed. ; ![image](https://github.com/root-project/root/assets/73365079/89bf755e-dfd3-4bcd-a70f-e58d6d23b5d4); But they still present an issue. The certificate used to sign was not issued by a trusted root authority. ; ![image](https://github.com/root-project/root/assets/73365079/e101fbfa-4bad-473d-b197-e274431d1147); Code signing certificates must be provided by a Windows approved certificate authority. [They have them listed here](https://learn.microsoft.com/en-us/windows-hardware/drivers/dashboard/code-signing-cert-manage#get-or-renew-a-code-signing-certificate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15896#issuecomment-2213690136:481,learn,learn,481,https://root.cern,https://github.com/root-project/root/issues/15896#issuecomment-2213690136,1,['learn'],['learn']
Usability,"@bellenot If I understand correctly, what @dpiparo is suggesting is a simple. ```cmake; set(ROOT_CXX_STANDARD @CMAKE_CXX_STANDARD@); ```; somewhere in `ROOTConfig.cmake.in`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7644#issuecomment-1833527467:70,simpl,simple,70,https://root.cern,https://github.com/root-project/root/issues/7644#issuecomment-1833527467,1,['simpl'],['simple']
Usability,"@bellenot Please check if it is ok. I tried to simplify code, avoid many intermediate and duplicated classes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3759#issuecomment-487943921:47,simpl,simplify,47,https://root.cern,https://github.com/root-project/root/pull/3759#issuecomment-487943921,1,['simpl'],['simplify']
Usability,@bellenot `build/win/cl.sh			build/win/f77.sh		build/win/ld.sh			build/win/makelib.sh		build/win/makeresource.sh` seems to have only been using in the `Makefile` and seem no longer used. Would we be able to simply removed them?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16271#issuecomment-2298682153:207,simpl,simply,207,https://root.cern,https://github.com/root-project/root/pull/16271#issuecomment-2298682153,1,['simpl'],['simply']
Usability,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:; ```; (compiling source file '../BUILTIN_CFITSIO/eval_y.c'); ; C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]; (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'); ```; This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:; https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15508#issuecomment-2112196842:695,UX,UX,695,https://root.cern,https://github.com/root-project/root/pull/15508#issuecomment-2112196842,2,['UX'],['UX']
Usability,"@bendavid do you have anything against renaming `{S,G}etTaksPerWorker` to `{S,G}etMaxTasksPerWorker`? So it's clear that it's not a precise setting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7106#issuecomment-770832284:110,clear,clear,110,https://root.cern,https://github.com/root-project/root/pull/7106#issuecomment-770832284,1,['clear'],['clear']
Usability,"@bluehood Argh, this is the fallback solution for `RVec<bool>`? I think we should simply use `push_back` for all containers... `bool` is evil and should be treated so ;). Edit: Indeed, `std::vector<bool>` is the master of evil template specializations. Sry little `bool`!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3135#issuecomment-446347338:82,simpl,simply,82,https://root.cern,https://github.com/root-project/root/pull/3135#issuecomment-446347338,1,['simpl'],['simply']
Usability,@bluehood pointed out that the internals could be simplified with `TPython.h` features (without changing the user facing workflow). Let's have a look!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488#issuecomment-468662849:50,simpl,simplified,50,https://root.cern,https://github.com/root-project/root/pull/3488#issuecomment-468662849,1,['simpl'],['simplified']
Usability,"@bluehood, I'd like to do that but let's merge this PR. We are swamped by other issues at the moment. I'd prefer to come back to that when it we have time (by simply reverting locally) or what's more probable when the issue pops up again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2706#issuecomment-425197874:159,simpl,simply,159,https://root.cern,https://github.com/root-project/root/pull/2706#issuecomment-425197874,1,['simpl'],['simply']
Usability,"@bluehood, it is in incrementals (""Continuous dashboard"") but name in CDash is just the same as simple build: master-x86_64-slc6-gcc62-opt - http://cdash.cern.ch/viewBuildError.php?buildid=571554 (I will fix anming tomorrow).; I am checking in Mattermost channel for now ;) https://mattermost.web.cern.ch/root/channels/builds",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2742#issuecomment-426772448:96,simpl,simple,96,https://root.cern,https://github.com/root-project/root/pull/2742#issuecomment-426772448,1,['simpl'],['simple']
Usability,"@cjones051073, I spent some time to investigate your header inclusion problem and here is a fix. Please let me know if you have any comments about this PR. Using this pattern, we can easily vectorize the rest of the Math package by simply turning all qualified ids of vectorizable functions to unqualified (eg. std::sqrt -> sqrt). @lmoneta, this was the fix I was talking about earlier this week. The code example in the PR was developed with @Axel-Naumann. PS: The key changes are done in math/mathcore/inc/Math/Math.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/445#issuecomment-287654476:232,simpl,simply,232,https://root.cern,https://github.com/root-project/root/pull/445#issuecomment-287654476,1,['simpl'],['simply']
Usability,"@couet - it seems that the html version is still updated. What do you mean by ""The ROOT user guide is consider as frozen""? Do you plan to stop supporting it?. I still find it the best documentation about ROOT. This is pretty detailed and written better than class documentation would be (this is a manual for reading, not a technical reference of existing functions).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7279#issuecomment-785861978:93,guid,guide,93,https://root.cern,https://github.com/root-project/root/issues/7279#issuecomment-785861978,1,['guid'],['guide']
Usability,@couet Could you have a look over the plotting code? I'm not sure whether the plotting could be simplified.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5108#issuecomment-597137033:96,simpl,simplified,96,https://root.cern,https://github.com/root-project/root/pull/5108#issuecomment-597137033,1,['simpl'],['simplified']
Usability,"@couet That you for your feedback. I will add some documentation and move the folder to bin/graphics. My thought process was that this could potentially be better than TikZ, as this is built completely using ROOT components and it can be changed over time. This class is also quite easy for beginners to contribute to, which would encourage more people to contribute.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7820#issuecomment-817615979:25,feedback,feedback,25,https://root.cern,https://github.com/root-project/root/pull/7820#issuecomment-817615979,1,['feedback'],['feedback']
Usability,@couet any feedback on this PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8681#issuecomment-946557019:11,feedback,feedback,11,https://root.cern,https://github.com/root-project/root/pull/8681#issuecomment-946557019,1,['feedback'],['feedback']
Usability,@davidlt Could you update to apply the clang-format recommendation (here it seems simply to use 3 characters for indentation rather than 2).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/523#issuecomment-296787374:82,simpl,simply,82,https://root.cern,https://github.com/root-project/root/pull/523#issuecomment-296787374,1,['simpl'],['simply']
Usability,"@dennisklein, thanks a lot for the quick feedback. @hahnjo, let's move forward with this then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10529#issuecomment-1118610993:41,feedback,feedback,41,https://root.cern,https://github.com/root-project/root/pull/10529#issuecomment-1118610993,1,['feedback'],['feedback']
Usability,"@dpiparo , we could start some simple APIs and I hope we could validate that ~3% does be caused by TTaskGroup.Run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-330704409:31,simpl,simple,31,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-330704409,1,['simpl'],['simple']
Usability,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/590#issuecomment-304902488:85,simpl,simply,85,https://root.cern,https://github.com/root-project/root/pull/590#issuecomment-304902488,1,['simpl'],['simply']
Usability,"@dpiparo I don't see the comments. Besides, after further development, I found the need also make the lock re-entrant from Read to Write lock making it relatively heavy so I am planning to actually separate the simple RW lock from the re-entrant one. So once I find (and address) the comments, I will close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/596#issuecomment-308034317:211,simpl,simple,211,https://root.cern,https://github.com/root-project/root/pull/596#issuecomment-308034317,1,['simpl'],['simple']
Usability,"@dpiparo I don't think so! However, I'll write more proper doxygen markup so that the arguments get more clear. Then it should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2329#issuecomment-405835584:105,clear,clear,105,https://root.cern,https://github.com/root-project/root/pull/2329#issuecomment-405835584,1,['clear'],['clear']
Usability,"@dudarboh the friend tree has less entries than the main tree. I think that's what's causing the problem. We should definitely have better diagnostics for this (i.e. give you a clear error message rather than the error you see), but this is not a supported usecase. . I could not reproduce the issue when truncating the tree in `test_default.root` to the same amount of entries as the friend. Can you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9106#issuecomment-944297935:177,clear,clear,177,https://root.cern,https://github.com/root-project/root/issues/9106#issuecomment-944297935,1,['clear'],['clear']
Usability,"@egpbos Given my [comment](https://github.com/root-project/root/pull/8385#issuecomment-870570029) in your previous merge request, I am quite disappointed to learn that this has been merged as enabled by default when it depends on a yet unreleased version of ZeroMQ. This, for example, has caused failures in pretty much all the LCG builds today: https://cdash.cern.ch/index.php?project=LCGSoft&date=2021-11-29. Please disable `roofit_multiprocess` by default and re-enable it only when a *released version* of ZeroMQ has the functionality you need, adding the proper version in your call to `find_package()`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-981617370:157,learn,learn,157,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-981617370,1,['learn'],['learn']
Usability,"@eguiraud , thanks for the feedback!. Ineed I have tried my reproducer with `/cvmfs/sft.cern.ch/lcg/views/LCG_103/x86_64-centos7-gcc11-opt/setup.sh`; and everything seems to work properly!. So I assume something magical happened between; `root 6.26.06` and `root 6.28.00`; or between; `Python 3.9.10` and `Python 3.9.12`. I will close the issue then. Thanks for your time investigating this :pray:.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564653938:27,feedback,feedback,27,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564653938,1,['feedback'],['feedback']
Usability,"@eguiraud ; > Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than; > ; > ```; > #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";; > ```; > ; > ?; > ; > Do we need a test?. Actually, #5530 *does have* this problem.; http://cdash.cern.ch/testDetails.php?test=85254326&build=868739. It's not fatal, since the typedef and the things that it's `typedef`ed to are strictly identical, so all tests proceed normally. However, the warning shows up.; A follow-up question of this is whether gtests should have a failregex or something so we see warnings popping up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5536#issuecomment-623958983:106,simpl,simply,106,https://root.cern,https://github.com/root-project/root/pull/5536#issuecomment-623958983,1,['simpl'],['simply']
Usability,"@eguiraud Sorry about the issue, I had selected wrong rebase version while trying to squash commits, my bad.; PR is Fixed now and in accordance with the suggested clang-format.; I will definitely improve my PRs for future contributions, grateful for your guidance and suggestions. Thanks for your inputs !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7142#issuecomment-779138913:255,guid,guidance,255,https://root.cern,https://github.com/root-project/root/pull/7142#issuecomment-779138913,1,['guid'],['guidance']
Usability,"@eguiraud Thank you for your detailed response!. I currently create some TDirectories representing different stages of seloctions, and write histograms into it. For some reason, I would like to have TTree output also in some of the stages, and for that I need to use the `Snapshot` method. The way I had thought of (haven't tested yet, sorry) would be creating all the directories first and close the file, snapshotting to that file (not sure if the sub-directory could be, specified), and then open it for histogram writing. I have little knowledge about multi-threading, and was just (naïvely) looking for an RDataFrame anology of creating a TTree inside a TDirectory. It simply seemed strange to have to close the file and reopen. If feasible, it would be great if the (official) way to create a snapshot and to store into a certain sub-directory of a TFile, along with the multi-threading consideration, could be documented, so that users switching from the imperative pattern would be easier to understand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9225#issuecomment-958037006:674,simpl,simply,674,https://root.cern,https://github.com/root-project/root/issues/9225#issuecomment-958037006,1,['simpl'],['simply']
Usability,"@eguiraud concerning .O1, should i change in MetaSema ; (not yet implemented) --> (implemented only for 0 and 1 ?) -->changed; And should I add (not yet implemented) to .undo or .U ? --> it seems to work for me. Also, I see that '.include' is implemented, but not documented. Should I add it? --> added; .stats and .fileEx are documented but not sure what they do.; What else from the CINT table above should be added that has been lost during the translation?; For example, .g still prints global variables, but .l does no longer print local variables.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10065#issuecomment-1067891493:170,undo,undo,170,https://root.cern,https://github.com/root-project/root/issues/10065#issuecomment-1067891493,1,['undo'],['undo']
Usability,"@eguiraud while i agree with you, my thinking actually was also along having a common code base and also ""a la python"" usage: while there is the option of having an executable doing ""import module, run main function"" one can also do ""python -m module module_args"". so, my proposal was from a point of view of code (common code base, maybe also usable programatically in macros, as part maybe of some generic ROOT toolbox) and the second point of view was of actual usage where maybe `root -verb verb_args` could be easier and clearer to use than `root[verb] args` .. but in the end my proposal was more on the lines of ""wouldn't you (devs) be interested in such a usage/point of view ?"" ; and getting back to python: yes, it is exactly (also) a swiss-army knife like python :) and beside some bash script that i converted to python, i started to see a point of/play with having root scripts (with root in shebang ;) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8447#issuecomment-862518127:344,usab,usable,344,https://root.cern,https://github.com/root-project/root/issues/8447#issuecomment-862518127,2,"['clear', 'usab']","['clearer', 'usable']"
Usability,"@eguiraud: I simply *assumed* that you should always be able to program against TTEx, but you cannot. You have to `ifdef` - otherwise, you cannot compile. Or worse, you can actually compile albeit having committed wrong code, because in the `true` branch of your `ifdef`, you did everything right, but in the `false` branch (as happened in this PR), you have stuff that won't even compile.; Therefore, I never even remotely considered the possibility to put `ifdef`s concerning IMT into RooFit. Now that you mention it, it could obviously be done, but I'd rather have those in TTEx - single point of failure - than in `<insert everywhere where TTEx could be in use>`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6298#issuecomment-686577803:13,simpl,simply,13,https://root.cern,https://github.com/root-project/root/pull/6298#issuecomment-686577803,1,['simpl'],['simply']
Usability,"@en. > Hi Ivan, thank you, I have some doubts about the changes:; > ; > * I don't think calling GetEntries more than once is actually expensive: the result is cached after the first call; > * the error message was listing the entry range in the usual start-inclusive/end-exclusive way (same as what happens in typical for loops), I'm not sure the patch is less ambiguous. Maybe we can say instead ""Start entry (X) must be lower than the available entries (Y). Ignoring entry range."".; > ; > Minor other thing, the commit message should use `[treereader]` insteadof `[DF]`. @eguiraud noted! This PR now only gives a clearer error message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10705#issuecomment-1148590657:615,clear,clearer,615,https://root.cern,https://github.com/root-project/root/pull/10705#issuecomment-1148590657,1,['clear'],['clearer']
Usability,"@etejedor @bbocjelm I think a simple way to do it is to remove the differences in this pull request that touch PyROOT— my contributions. Then this pull request can concentrate on only the TBranch/TBasket/TBufferFile modifications in C++ and we can later add code to AsMatrix to make use of it. A year ago, AsMatrix didn't exist, so the Numpy interface was a one-off. Now that there's AsMatrix, there's a natural place to put it. Nothing in git is every lost— Enric can see how I implemented it and copy that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519#issuecomment-419064045:30,simpl,simple,30,https://root.cern,https://github.com/root-project/root/pull/2519#issuecomment-419064045,1,['simpl'],['simple']
Usability,"@etejedor, you can merge this PR. And after that I will try to simplify code",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6169#issuecomment-673293838:63,simpl,simplify,63,https://root.cern,https://github.com/root-project/root/pull/6169#issuecomment-673293838,1,['simpl'],['simplify']
Usability,"@ferdymercury ; > One trick would be to set: WARN_NO_PARAMDOC to YES in the Doxyfile, to find all undocumented params. That was not the point. This fixes properly document the class members (sorry ""parameters"" was not the right word) with the `///<` tag.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9673#issuecomment-1020117649:98,undo,undocumented,98,https://root.cern,https://github.com/root-project/root/pull/9673#issuecomment-1020117649,1,['undo'],['undocumented']
Usability,"@ferdymercury is that library already used in ROOT? Considering it's 10k loc, I'd not count it as ""simplifying"" unless we decided to use it in multiple places (ideally all our cpp executables).; Also, we must make sure that the argument parsing logic remains backward-compatible, which is not very clear to me if it would be the case with that lib.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16090#issuecomment-2244858400:99,simpl,simplifying,99,https://root.cern,https://github.com/root-project/root/pull/16090#issuecomment-2244858400,2,"['clear', 'simpl']","['clear', 'simplifying']"
Usability,"@ferdymercury thanks for the links. I fully agree with Axel's proposal of trying to make all ROOT binaries consistent in their argument parsing and make them POSIX (while keeping the legacy `-long` options valid but hidden). Having never used it, I don't have a strong opinion on the CLI11 library yet. On one hand it seems well maintained and tested on all platforms, which is great, and being header-only certainly makes it convenient to use. On the other hand it's quite big and I wonder if we need enough features from it as to justify its size. . In any case I think we should revive the topic and understand if there were any blockers to it or if it was simply not picked up by anyone in the past 3 years.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16090#issuecomment-2245114452:660,simpl,simply,660,https://root.cern,https://github.com/root-project/root/pull/16090#issuecomment-2245114452,1,['simpl'],['simply']
Usability,@ferdymercury thanks to let me know. See the bottom of https://root.cern/doc/master/ . 1.9.3 is already the doxygen version used to build the ROOT reference guide. So we can close this issue ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1008843828:157,guid,guide,157,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1008843828,1,['guid'],['guide']
Usability,@ferdymercury you can simply use a `TGPictureButton` with your own enabled/disabled LED pictures,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7156#issuecomment-775978601:22,simpl,simply,22,https://root.cern,https://github.com/root-project/root/issues/7156#issuecomment-775978601,1,['simpl'],['simply']
Usability,"@fylux thank you very much for your work! It is a very nice idea! I will start from simple comment: can you please remove ZSTD part (it is not a purpose of this PR as I understood), because you have it actually here https://github.com/root-project/root/pull/3947. Then code will become much more cleaner so we can actually see your changes related to other compression algorithms. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4037#issuecomment-508366062:84,simpl,simple,84,https://root.cern,https://github.com/root-project/root/pull/4037#issuecomment-508366062,1,['simpl'],['simple']
Usability,@guitargeek @wlav awesome! Thanks for the quick feedback on this! :). I'll mark that item as done! :tada:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14824#issuecomment-1964640642:48,feedback,feedback,48,https://root.cern,https://github.com/root-project/root/issues/14824#issuecomment-1964640642,1,['feedback'],['feedback']
Usability,"@guitargeek While addressing your comments, I started thinking that there's perhaps a better design. 1. I don't think we should have a default parameter at all, but only one ctor with the offset parameters. In real life current cases, these classes are always used from MinuitFcnGrad and they always share offsets with one or two other Likelihood* objects. The only cases where no shared offsets are necessary is in unit tests, but in those cases it's easy to just create a dummy offset vector.; 2. All the offset management is distracting a bit from the core Likelihood logic. I think it may be nicer to make a simple wrapper class `LikelihoodOffset` that holds the shared_ptrs to the vectors, does the swapping, and a few other things. This also makes it easier to create, because the unwieldy types that you also rightly point out would then only be contained within `LikelihoodOffset`. I will start working on point 1 at least, and in the meantime will consider (and allow you to comment on ;) ) point 2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202#issuecomment-2091419386:612,simpl,simple,612,https://root.cern,https://github.com/root-project/root/pull/12202#issuecomment-2091419386,1,['simpl'],['simple']
Usability,@guitargeek any feedback on this one? Shall I rebase and run clang-format? Thanks in advance!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9156#issuecomment-1812203134:16,feedback,feedback,16,https://root.cern,https://github.com/root-project/root/pull/9156#issuecomment-1812203134,1,['feedback'],['feedback']
Usability,"@hageboeck @lmoneta : these are super simple additional classes. following up on our discussion on the ""RooAbsPdf"" vs. ""RooAbsReal"" business: do you think it would be useful for me to template these classes in such a way as to meet my suggestion of avoiding code duplication?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4015#issuecomment-507052809:38,simpl,simple,38,https://root.cern,https://github.com/root-project/root/pull/4015#issuecomment-507052809,1,['simpl'],['simple']
Usability,"@hageboeck Thanks for the correction. The build failure looks like it has something to do with a Git test, but it’s not clear to me what went wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6172#issuecomment-675412995:120,clear,clear,120,https://root.cern,https://github.com/root-project/root/pull/6172#issuecomment-675412995,1,['clear'],['clear']
Usability,"@hageboeck Thanks for the extensive review! I will implement some changes based on that and @guitargeek's comments today. In the meantime, perhaps it would be useful to check out #8596 as well. That PR introduces the second concrete MinimizerFcn. Possibly, seeing `RooAbsMinimizerFcn` ""in action"" through that new class (`RooGradMinimizerFcn`) will shed a different light on the design choices for this abstract class. Basically, we previously just had two classes, `RooMinimizerFcn` and `RooGradMinimizerFcn` (and then later on **another** one, which will be introduced in another PR this week) with tons of code duplication. `RooAbsMinimizerFcn` simply factors that stuff out into one class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8569#issuecomment-874002788:648,simpl,simply,648,https://root.cern,https://github.com/root-project/root/pull/8569#issuecomment-874002788,1,['simpl'],['simply']
Usability,"@hageboeck Thanks for the feedback! I am trying to work on this PR in phases, so first I removed some of the (now unnecessary) commits.. and then I am now trying to incorporate your comment here - https://github.com/root-project/root/pull/5297#discussion_r410364571 ; Sorry, if the new commit was misleading - please review this code once I remove the [WIP] tag. ; Would it be better to close this PR and then open it up again once I am done making all relevant changes (based on your comments and the meeting)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5297#issuecomment-628512610:26,feedback,feedback,26,https://root.cern,https://github.com/root-project/root/pull/5297#issuecomment-628512610,1,['feedback'],['feedback']
Usability,"@hageboeck thanks for another Herculean reviewing effort :) Your comments make total sense; indeed, all the copy-pasted stuff still has to be merged with all the modernization and optimization work that was done in the past two years. I will go through as much of your suggestions as I can before I will be on leave after tomorrow for three weeks. After that, if anyone else has time to work on some of the issues, I'd of course welcome the help. As you know, my time on the project is running out, so I probably won't have time to integrate everything. For instance, Manos' mini computation library I have only learned about in the last few months and don't know it in enough detail to make any kind of sensible estimate of how to do it, let alone how much time this would take. Let's discuss detailed plans in our meeting at 14:00 today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-884045031:612,learn,learned,612,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-884045031,1,['learn'],['learned']
Usability,"@hageboeck the DataHandling ERROR you proposed is indeed the correct solution for this, but I would encourage the inclusion of documentation as well to make clear to users that there is no way to properly assign `wgtError` without calling the `StoreError` command arg in the constructor without relying on noticing a print statement at run time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4167#issuecomment-519959496:157,clear,clear,157,https://root.cern,https://github.com/root-project/root/pull/4167#issuecomment-519959496,1,['clear'],['clear']
Usability,"@hahnjo At least Alma9 + gcc11 (both in compiled and interpreted mode). Simple reproducer:; ```; {; struct Derived : public TObject { Derived() = default; };; auto obj = new Derived{};; if (! obj->IsOnHeap()); throw ""TObject::IsOnHeap is broken for MyType"";; delete obj;; }; ```; The 'more' than expected is that the defaulted constructor includes the execution of a `bzero` (or `memset`) on the object's memory. This does not violate the C++ standard but make the ""undefined behavior"" that `IsOnHeap` relies to not longer 'work'. @dpiparo I think it is indeed possible to add `Clang` based code in `rootcling` to detect if the constructors are defaulted.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16218#issuecomment-2286884946:72,Simpl,Simple,72,https://root.cern,https://github.com/root-project/root/pull/16218#issuecomment-2286884946,1,['Simpl'],['Simple']
Usability,"@hahnjo Hi, I finally found some time to get this building, the branch now seems to somewhat work. Few things:; - it seems not to break the linux build; - seems to work for now, in whatever simple scenarios I have tested it till now; - the TThread tests crap out saying the _REENTRANT macro is not defined (I think it should be by -pthread which is enabled), probably needs some attention by an expert.; - there is an issue with library unload order vs the thread local dtor calling. Not a dealbreaker but the FreeBSD __cxa_thread_call_dtors is a bit verbose and prints warnings to stderr about that. Also here there is quite some room for experts to look at since there already are mitigations to similar issues in the code. (__cxa_thread_call_dtors: dtr 0x82b2c78f0 from unloaded dso, skipping); - actually a lot more tests fail - what is the general state of the test results on the master branch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12787#issuecomment-1585584886:190,simpl,simple,190,https://root.cern,https://github.com/root-project/root/issues/12787#issuecomment-1585584886,1,['simpl'],['simple']
Usability,"@hahnjo I did not want to let this sit for too long and as days ahead are even busier for me I invested now some more time on this. The good news is that I can pretty confidently say that the memory leak reported [above in the left plot](https://github.com/root-project/root/issues/14055#issuecomment-1814642915) has nothing to do with ROOT 🎉 and it was an unlucky coincidence which made me think it is due to ROOT. 😓 I still have to understand this memory behaviour in detail, but it is off-topic here. 🙈 . I was about simply closing the issue, when I remembered checking old issues in our project that our tests were just passing with ROOT `v6.26` and started to fail reporting the above mentioned sanitiser complaint from `v6.28`. I now checked and these failure occur as well with `v6.30` and `v6.32`. As far as I understand from our exchange above, we can safely suppress these adding `leak:libCling'` to `lsan-root.supp` file (I would not exclude more than the bare minimum in order to avoid suppress potential real problems/errors in the future). However, I would like to ask you a feedback about the fact this suppression was not necessary in `v6.26`. Is this expected for you? 🤔",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-2379654469:520,simpl,simply,520,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-2379654469,2,"['feedback', 'simpl']","['feedback', 'simply']"
Usability,"@hahnjo Thanks for the comment! I can move it there, but do I really need to derive from TRandomEngine? The parent methods are for double Rndm(), which does not seem very useful to me.; This generator is a binary register generator, so rather a quite different structure, and it is not intended to be used as a normal generator, but rather as a test scenario or helper math functions for electronics testing. It also is inherently templated, etc. It returns an array rather than just a number Rndm(). See https://github.com/root-project/root/pull/8798/files#diff-2e848ceefaff2e24c9b2970fb86a8da1d3d00603fc4f48f920421e603198fab2. Wrt tests, I will 'copy' the mentioned tutorial as 'test' once it's clear where this class should go. Thanks for the review!! :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8798#issuecomment-2078772470:697,clear,clear,697,https://root.cern,https://github.com/root-project/root/pull/8798#issuecomment-2078772470,1,['clear'],['clear']
Usability,"@hahnjo for `vector<char>` it's all fine, there is actually a test for it [here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/stl_vector.py#L18) and it succeeds, meaning that our pythonization for `std::vector` runs fine. The fact that `value_type` for `vector<char>` in Python is the Python string `""char""` is due to another pythonization injected by cppyy itself [here](https://github.com/root-project/root/blob/07932d78211d0ac5fdb198ac2260c35530cb9647/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L1159). Simple test:. ```python; >>> import ROOT; >>> a = ROOT.std.vector['char'].value_type; >>> a; 'char'; >>> type(a); <class 'str'>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11592#issuecomment-1282453903:552,Simpl,Simple,552,https://root.cern,https://github.com/root-project/root/pull/11592#issuecomment-1282453903,1,['Simpl'],['Simple']
Usability,"@iarspider Did your tests indicate that this is a regression introduced by that commit specifically, or that this issue was simply not there yet at the time of that commit and it could be any commit since then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14793#issuecomment-1983530703:124,simpl,simply,124,https://root.cern,https://github.com/root-project/root/issues/14793#issuecomment-1983530703,1,['simpl'],['simply']
Usability,"@jblomer : thanks a lot for your comments, I will address them shortly!; ; >One thing I'd like to discuss before merging is how we can unit test the code. If there is a stable, publicly available XRootD >service with test data, we can use the RRawFileDavix unit test as a blueprint. Otherwise, given that we have access to the xrootd >library, perhaps we can spawn a simple ad-hoc server in another thread. Well, I think one nice thing that we could do is to have an XRootD server with an HTTP plugin exporting same files with both root and HTTP protocols. Then we could simply run all the tests you currently have for the `RRawFileDavix` also for `RRawFileNetXNG`. If you have some stress tests we could even use them to benchmark the two protocols.; Could we use `root.cern.ch` to do this? Otherwise, I can create a small testing service, I would need to see what machine I can get.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9012#issuecomment-922713482:367,simpl,simple,367,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922713482,2,['simpl'],"['simple', 'simply']"
Usability,"@kgertsenberger ; As you can see, I merged your PR and fix several compiler warnings afterwards - see #4017 ; If you can implement methods for other plugins - it would be grate. ; Even better if one could provide testing in roottest - one could use SQLite, which is very simple to handle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3961#issuecomment-507209448:271,simpl,simple,271,https://root.cern,https://github.com/root-project/root/pull/3961#issuecomment-507209448,1,['simpl'],['simple']
Usability,"@kgizdov the problem is the two cases are non-exhaustive: For versions before 3.11.0, our own forward declaration will always work. Starting with 3.11.2, `json_fwd.hpp` is always available. But in between, for 3.11.0 and 3.11.1, we can hit an ""external"" version of the library without `json_fwd.hpp` where our own forward declaration doesn't work (because of https://github.com/nlohmann/json/pull/3590). It's not clear to me how to make this case work, but I also don't think it's really that important.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1218222161:413,clear,clear,413,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1218222161,1,['clear'],['clear']
Usability,"@ktf (I can reproduce the problem now). Commit b2c6904bf458d5149e3955881d0054ba256a4110 seems to have broken the expectation of only one basket in flight, I also wonder how it interact with the interface, in particular, it is clear that this PR removes the crashs but does it lead to correct data being read through the bulk interface?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16640#issuecomment-2400792247:226,clear,clear,226,https://root.cern,https://github.com/root-project/root/pull/16640#issuecomment-2400792247,1,['clear'],['clear']
Usability,@linev - is your concern that we break ABI with ROOT versions that are greater than 5 years old? Has there ever been a promise that applications predating ROOT 6.02 will be able to link against ROOT 6.22 without recompilation?. There's no intent to have performance gains here: the intent is to have clearer interfaces.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4060#issuecomment-510887484:300,clear,clearer,300,https://root.cern,https://github.com/root-project/root/pull/4060#issuecomment-510887484,1,['clear'],['clearer']
Usability,"@linev @Axel-Naumann . my apologies, now slowly reducing amount of flags used for C++ modules build I see that modulemap.overlay file with libc and stl modulemap files is causing these problem. I think it is missing pthead modulemap file, I am testing it..; ```; -ivfsoverlay /mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include/modulemap.overlay.yaml; ```; So somehow -vfsoverlay is triggering the false positive warning detection (it is not clear for me why, maybe it is clang bug):; ```; [sftnight@lcgapp-slc6-x86-64-32 civetweb]$ clang -DHTTP_WITHOUT_FASTCGI -DNO_SSL_DL -DUSE_WEBSOCKET -I/mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include -I/cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-slc6-gcc62-opt/lib/cmake/VecCore/../../../include -isystem /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-slc6-gcc62-opt/include -Qunused-arguments -fcolor-diagnostics -pipe -m64 -Wall -W -pthread -fmodules -fmodules-cache-path=/mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include/pcms/ -fno-autolink -fdiagnostics-show-note-include-stack -Wno-module-import-in-extern-c -ivfsoverlay /mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include/modulemap.overlay.yaml -Xclang -fmodules-local-submodule-visibility -g -fPIC -pthread civetweb.c example.c -ldl -o test; civetweb.c:2701:8: warning: implicit declaration of function 'pthread_setname_np' is invalid in C99 [-Wimplicit-function-declaration]; (void)pthread_setname_np(pthread_self(), threadName);; ^; 1 warning generated.; example.c:3:14: warning: unused parameter 'argc' [-Wunused-parameter]; int main(int argc, char **argv); ^; example.c:3:27: warning: unused parameter 'argv' [-Wunused-parameter]; int main(int argc, char **argv); ^; 2 warnings generated. ```. We will investigate why and",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2581#issuecomment-418769386:505,clear,clear,505,https://root.cern,https://github.com/root-project/root/pull/2581#issuecomment-418769386,1,['clear'],['clear']
Usability,"@linev I could check how to do that, but isn't there any simpler solution?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14908#issuecomment-1985811465:57,simpl,simpler,57,https://root.cern,https://github.com/root-project/root/pull/14908#issuecomment-1985811465,1,['simpl'],['simpler']
Usability,"@linev I'm trying rebuilding from scratch now. I'm afraid I don't have enough battery, so I can't give feedback until some time after my current meeting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16129#issuecomment-2255350691:103,feedback,feedback,103,https://root.cern,https://github.com/root-project/root/pull/16129#issuecomment-2255350691,1,['feedback'],['feedback']
Usability,@linev Please check. This is a simple backport with change in digits rendering in RenderCore.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15411#issuecomment-2093332127:31,simpl,simple,31,https://root.cern,https://github.com/root-project/root/pull/15411#issuecomment-2093332127,1,['simpl'],['simple']
Usability,"@linev thanks for implementing my suggestions. I really think it doesn't hurt to learn a bit the language and do it yourself, that's why I made the effort to explain the Python coding style changes in my comments. Also, next time it will be faster if you fully read my comments so I don't have to repeat myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5209#issuecomment-604992532:81,learn,learn,81,https://root.cern,https://github.com/root-project/root/pull/5209#issuecomment-604992532,1,['learn'],['learn']
Usability,@lmoneta - Could you please have a look at this?. It would be helpful for extern Minuit2 users like us in iminuit if it's simple to extract and update to the latest version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1677#issuecomment-384271097:122,simpl,simple,122,https://root.cern,https://github.com/root-project/root/pull/1677#issuecomment-384271097,1,['simpl'],['simple']
Usability,"@lmoneta Actually out of the above the most pressing is `SetMode(const double* mode)`, because this is the only one for which I don't have a workaround (I need to use `DistSampler` not `TUnuran` in the respective code). I can provide a pull request with mode data member being a `std::vector<double>` and `SetMode(const double mode)` setting a single entry and both 1D and ND setters clearing any previous entries. Should I provide the PR or do you prefer to implement it yourself (I guess this is faster than actual review of the PR and merging)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7332#issuecomment-864844142:384,clear,clearing,384,https://root.cern,https://github.com/root-project/root/issues/7332#issuecomment-864844142,1,['clear'],['clearing']
Usability,"@lmoneta I've changed the commit message accordingly (force-pushed to overwrite the previous commit with the old commit message). Anyway, thank you both for your feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5368#issuecomment-614711534:162,feedback,feedback,162,https://root.cern,https://github.com/root-project/root/pull/5368#issuecomment-614711534,1,['feedback'],['feedback']
Usability,"@lmoneta I've implemented the conditional tests for the keras method. As well, this commit fixes the py2/py3 compatibility issue for the `find_python_module` function in `RootNewMacros.cmake` (simply a py2-only print statement buried in the code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/280#issuecomment-253523265:193,simpl,simply,193,https://root.cern,https://github.com/root-project/root/pull/280#issuecomment-253523265,1,['simpl'],['simply']
Usability,"@lmoneta Regarding the method parameters, it is fine to pass them through the string API. The point is that this should be clearly documented in `TUnuran` doxygen and for the `TUnuranSampler` doxy it should be mentioned and redirected to `TUnuran` doxy. Right now the information is hidden in tutorials and the code. I am not sure if there is an elegant way to add methods to `TUnuranSampler`/`TUnuran` that would set the parameters. Maybe something like; ```; SetParameter(const TString& name); SetParameter(const TString& name, const double value); ```; that would build the string passed to the string API when `Init()` is called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7332#issuecomment-844076534:123,clear,clearly,123,https://root.cern,https://github.com/root-project/root/issues/7332#issuecomment-844076534,1,['clear'],['clearly']
Usability,@lmoneta any feedback on the PR ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8143#issuecomment-946555747:13,feedback,feedback,13,https://root.cern,https://github.com/root-project/root/pull/8143#issuecomment-946555747,1,['feedback'],['feedback']
Usability,@lmoneta at this point I think it would be wise for you to finish it off. I clearly have other priorities as this has been open for a year. Thanks for offering to refactor it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1533#issuecomment-458600502:76,clear,clearly,76,https://root.cern,https://github.com/root-project/root/pull/1533#issuecomment-458600502,1,['clear'],['clearly']
Usability,@lmoneta the reason why this is not merged is not clear to me: could you clarify?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9968#issuecomment-2076533633:50,clear,clear,50,https://root.cern,https://github.com/root-project/root/pull/9968#issuecomment-2076533633,1,['clear'],['clear']
Usability,"@makortel . > In CMSSW; > ; > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB; > ; > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call; > ; > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call; > ; > ; > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled?. Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14807#issuecomment-1965963868:115,usab,usable,115,https://root.cern,https://github.com/root-project/root/pull/14807#issuecomment-1965963868,1,['usab'],['usable']
Usability,"@makortel apparently the technical term that I was looking for is ""dynamic type"". I reworded the documentation and commit message accordingly, can you have another look if it's clear(er) now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15246#issuecomment-2068873320:177,clear,clear,177,https://root.cern,https://github.com/root-project/root/pull/15246#issuecomment-2068873320,1,['clear'],['clear']
Usability,"@marsupial using `SO_LoadedLast` (which is somewhat counter-intuitive to our use case) seems to work. I've greenlit D33529 but give Lang couple of hours/days to give feedback. My personal opinion is that it should be the default, being close to the old behavior. If not, could you point us what to modify to set it [here](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L1945). Thanks for helping me out to sort this out!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313809522:60,intuit,intuitive,60,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313809522,2,"['feedback', 'intuit']","['feedback', 'intuitive']"
Usability,"@marsupial, I can make the inclusion of `ConvertUTF.h` conditionally included if `LLVM_UTF8` is set. It is not clear to me what would be the benefit, though. There is more information about the virtual file changes here: https://reviews.llvm.org/D33275. I do not expect to mess up anything and I do not see any failures wrt to it. Can you give an example of which case you are thinking og?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/589#issuecomment-305095243:111,clear,clear,111,https://root.cern,https://github.com/root-project/root/pull/589#issuecomment-305095243,1,['clear'],['clear']
Usability,"@martinmine, it is not clear why that last is green, it failed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/458#issuecomment-288747669:23,clear,clear,23,https://root.cern,https://github.com/root-project/root/pull/458#issuecomment-288747669,1,['clear'],['clear']
Usability,@moneta I would keep it for the time being (it is not clear what has been taken and what not...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/745#issuecomment-458609974:54,clear,clear,54,https://root.cern,https://github.com/root-project/root/pull/745#issuecomment-458609974,1,['clear'],['clear']
Usability,"@moneta maybe simply `shape.push_back(1);` instead of `shape.insert(shape.end() + 1 + idx, 1);` would do it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13325#issuecomment-1651741707:14,simpl,simply,14,https://root.cern,https://github.com/root-project/root/issues/13325#issuecomment-1651741707,1,['simpl'],['simply']
Usability,"@ntadej I tried to cherry-pick, but it only worked with three of the four fixes. Also, I only know that *merging* worked at the moment, but it's not clear whether it compiles or if tests work.; I will let it run and see, but to get the full fixes, you will have to wait for ROOT 6.22. The good news is that we will branch off the release candidate this week, so you could use the tag v6-22-00-rc1 or so when it's available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5466#issuecomment-624594499:149,clear,clear,149,https://root.cern,https://github.com/root-project/root/pull/5466#issuecomment-624594499,1,['clear'],['clear']
Usability,"@olantwin how did you find this? (Tells us what we need to remove.). > In principle, the user's guide is frozen. @couet should we remove this file then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12551#issuecomment-1485286794:96,guid,guide,96,https://root.cern,https://github.com/root-project/root/pull/12551#issuecomment-1485286794,1,['guid'],['guide']
Usability,"@olifre this was an oversight so it does not appear in the release notes. I totally agree that we should avoid wasting other people time trying to debug the same thing, but the release notes of 6.20 may not be the first place people look, in particular since this affects several versions. I was thinking to put a short description of the incompatibility and fix in the reference guide of [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) since this is the class where the users will actually see the different behaviour. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9383#issuecomment-987815314:380,guid,guide,380,https://root.cern,https://github.com/root-project/root/issues/9383#issuecomment-987815314,1,['guid'],['guide']
Usability,@omazapa yes the code is part of the Deep Learning module PR. I will close this,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/778#issuecomment-332544140:42,Learn,Learning,42,https://root.cern,https://github.com/root-project/root/pull/778#issuecomment-332544140,1,['Learn'],['Learning']
Usability,"@oshadura @Axel-Naumann ; Dear Mentors,; Here's my pull request for the issue https://github.com/root-project/root/issues/6635.; Can you please review this. Please excuse any instances where the timeout parameter has been added unnecessarily as it wasn't clear to me how to test this. Since the desired interval for `TIMEOUT` hadn't been mentioned, I have added it as 600 s.; I'll fix any incorrect changes as soon as review comments and suggestions are added. I will squash the commits after the review. Thanks in advance !",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7136:255,clear,clear,255,https://root.cern,https://github.com/root-project/root/pull/7136,1,['clear'],['clear']
Usability,"@oshadura, according to [this cmake docu](https://cmake.org/cmake/help/git-stage/guide/importing-exporting/index.html#creating-a-package-configuration-file), one have to add something like `find_dependency(nlohmann_json)` into ROOTConfig.cmake. I did not found any example of usage of this macro in ROOT. ; I tried to use your code around `builtin_glew`, but it does not work.; `nlohmann_json` does not appear in exported targets.; Also direct call like; ```; export(TARGETS nlohmann_json::nlohmann_json NAMESPACE nlohmann_json:: APPEND FILE ${PROJECT_BINARY_DIR}/ROOTConfig-targets.cmake); ```; fail while `nlohmann_json::nlohmann_json` is not build and cmake does not allow to export it. Should I try with `find_dependency(nlohmann_json)`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6784#issuecomment-724615880:81,guid,guide,81,https://root.cern,https://github.com/root-project/root/issues/6784#issuecomment-724615880,1,['guid'],['guide']
Usability,"@pamputt Cool, thanks for the feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-880610339:30,feedback,feedback,30,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-880610339,1,['feedback'],['feedback']
Usability,"@pcanal - the local caching mechanism in `TFilePrefetch` is permanent cache -- it lives on the local disk beyond the lifetime of the actual process. This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This allows us to do latency hiding for the duration of the running process. It does *not* cache the data beyond the lifetime of the running process. It is much simpler than the `TFilePrefetch` mechanism as the buffering is only done on demand. Overall, it's a pretty useful improvement - a modest improvement, admittedly - that we've used for many years in CMS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/146#issuecomment-327365789:470,simpl,simpler,470,https://root.cern,https://github.com/root-project/root/pull/146#issuecomment-327365789,1,['simpl'],['simpler']
Usability,@pcanal ; ```; static Transaction* latestTransaction;; if (latestTransaction != m_Interpreter->getLatestTransaction()) {; latestTransaction = const_cast<Transaction*>(m_Interpreter->getLatestTransaction());; findFunctionProtoCache.clear();; }; ```; Is your suggestion something like this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2434#issuecomment-411490304:231,clear,clear,231,https://root.cern,https://github.com/root-project/root/pull/2434#issuecomment-411490304,1,['clear'],['clear']
Usability,"@pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib); /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner); /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/319:387,simpl,simply,387,https://root.cern,https://github.com/root-project/root/pull/319,1,['simpl'],['simply']
Usability,"@pcanal @bbockelm I think there are two possible refactoring approaches.; 1. I could extract all signal handling related functions and attributes out from TSystem(.h,.cxx) and modify both TUnixSystem and TWinNT; 2. I create SignalHandling class in another class and add it as an class member in TUnixSystem. In that sense, I need to overwrite all signal handling functions and point them to the corresponding functions in new class SignalHandling.; Which one is better? The first one is more clear to me but I am not sure how it will impact the windows machine. Zhe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/97#issuecomment-170733479:492,clear,clear,492,https://root.cern,https://github.com/root-project/root/pull/97#issuecomment-170733479,1,['clear'],['clear']
Usability,"@pcanal @jblomer, I agree with @vgvassilev - we had a chat today and it looks could be a pretty simple solution without any downsides and hacks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6532#issuecomment-721663576:96,simpl,simple,96,https://root.cern,https://github.com/root-project/root/pull/6532#issuecomment-721663576,1,['simpl'],['simple']
Usability,"@pcanal How should we proceed?; Is it goes in right direction?; If yes, should we extend `TClass::HasDefaultConstructor(bool testio=false)` or add new method `TClass::HasIOConstructor()`?; Also problem with array of objects is not clear for me",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5133#issuecomment-597828998:231,clear,clear,231,https://root.cern,https://github.com/root-project/root/pull/5133#issuecomment-597828998,1,['clear'],['clear']
Usability,"@pcanal I have thought of a ""solution"". If we remove the default value, set `event` to 0 in the method itself and simply warn the user that he/she has not provided a value for `event`, the user will know and other classes that rely on the default value of 0 still work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8425#issuecomment-861618831:114,simpl,simply,114,https://root.cern,https://github.com/root-project/root/pull/8425#issuecomment-861618831,1,['simpl'],['simply']
Usability,"@pcanal I reworked the error message for unimplemented merges in 0ccd1d3, thank you for the feedback :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6008#issuecomment-663685527:92,feedback,feedback,92,https://root.cern,https://github.com/root-project/root/pull/6008#issuecomment-663685527,1,['feedback'],['feedback']
Usability,"@pcanal I tested with RDataFrame `Snapshot` and a hand-written usage of `TBufferMerger`, writing a quite simple tree. Any ideas what else to test, do we have a more complex benchmark / a production use case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14034#issuecomment-1803962285:105,simpl,simple,105,https://root.cern,https://github.com/root-project/root/pull/14034#issuecomment-1803962285,1,['simpl'],['simple']
Usability,"@pcanal I would claim the check is simply spurious with the current implementation. The whole method could actually be folded in GetBulkEntries, if one simply adds a fallback to the ReadBasketFast call.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6558#issuecomment-703886881:35,simpl,simply,35,https://root.cern,https://github.com/root-project/root/pull/6558#issuecomment-703886881,2,['simpl'],['simply']
Usability,"@pcanal I wrote a testing program on my own. For compression, it basically reads the root file given in your ticket and compress all the trees in it and write out to another file. For decompression, it simply iterates all entries in the compressed file. I used TStopWatch to measure the performance. I did not use TTreePerfStats in my program.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/81#issuecomment-142029158:202,simpl,simply,202,https://root.cern,https://github.com/root-project/root/pull/81#issuecomment-142029158,1,['simpl'],['simply']
Usability,@pcanal This is just a documentatioon update. Can you please decide to merge or not ? ; It is clear the test failures have nothing to do with the PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1534#issuecomment-458600001:94,clear,clear,94,https://root.cern,https://github.com/root-project/root/pull/1534#issuecomment-458600001,1,['clear'],['clear']
Usability,"@pcanal a simple work-around would be to check whether `gEnv` and / or `gROOT` are `nullptr` in `DefaultErrorHandler`, and if so, to assume sane defaults rather than initializing ""the system"". Comments, opinions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7418#issuecomment-795128879:10,simpl,simple,10,https://root.cern,https://github.com/root-project/root/issues/7418#issuecomment-795128879,1,['simpl'],['simple']
Usability,@pcanal it is simple infrastructure fail..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1059#issuecomment-332306910:14,simpl,simple,14,https://root.cern,https://github.com/root-project/root/pull/1059#issuecomment-332306910,1,['simpl'],['simple']
Usability,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15355#issuecomment-2082181170:397,simpl,simply,397,https://root.cern,https://github.com/root-project/root/pull/15355#issuecomment-2082181170,1,['simpl'],['simply']
Usability,@pcanal what's the difference between `GetLenStatic` and `GetLen`? why are all these super-important methods undocumented?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1532#issuecomment-359027718:109,undo,undocumented,109,https://root.cern,https://github.com/root-project/root/pull/1532#issuecomment-359027718,1,['undo'],['undocumented']
Usability,"@pcanal, do you have any intuition about what could have gone wrong that causes these failures in the `execCheckClusterRange` test because of different file sizes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14268#issuecomment-1863121010:25,intuit,intuition,25,https://root.cern,https://github.com/root-project/root/pull/14268#issuecomment-1863121010,1,['intuit'],['intuition']
Usability,"@pcanal, regarding your requirements:; * I've already run `clang-format` on my laptop. If the CI version behaves differently, I am of course happy to fix further stuff.; * The documentation is on par with `TCsvDS`, given I copied most of it from there. I am happy to improve it further in a subsequent PR.; * The tests are on par with `datasource_csv`, given I simply adapted it to my case. I will of course add more as I experiment more with it myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-371615688:361,simpl,simply,361,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-371615688,1,['simpl'],['simply']
Usability,"@pcanal, thank you for feedback. Actually, I was talking about fastcloning test in roottest.git. I found in it's Makefile exactly the same macros and bash scripts including also dt_RunDrawTest.sh and dt_DrawTest.C. I tried to port it to CMake but code requires a lot of fixes and doesn't work out of the box. I have WIP PR https://github.com/root-project/roottest/pull/290 with commented out part including dt_RunDrawTest.sh and dt_DrawTest.C since it was not running for long time. Do you think I can remove in roottest PR https://github.com/root-project/roottest/pull/290 outdated code in favour of proposed solution in your comment - (a), b), c) steps?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3270#issuecomment-460264298:23,feedback,feedback,23,https://root.cern,https://github.com/root-project/root/pull/3270#issuecomment-460264298,1,['feedback'],['feedback']
Usability,"@pcanal, this is a bit of a pain for CMS as we have to put an ""undo commit"" on all our 6.24 and master branches, e.g.:; https://github.com/cms-sw/root/commit/425ac414ef564c1cdc5fa490967d95d63df3b8eb. We probably have several incarnation of this undo in various branches :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-948087157:63,undo,undo,63,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-948087157,2,['undo'],['undo']
Usability,@pcanal. If it is any help I reference here a simple cmssw module [1]. When compile it with FWLite (built with root master) you can reproduce the crash. Below is the binary from the test module and the sample file:; test-bname-for.exe /eos/cms/store/group/phys_muon/dmytro/tmp/BPH-RunIIAutumn18DRPremix-00015.root. Crash is the line https://github.com/alja/OssTests/blob/root-test/BranchAddr/bin/test-bname-for.cc#L95. [1] https://github.com/alja/OssTests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-948203246:46,simpl,simple,46,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-948203246,1,['simpl'],['simple']
Usability,@petrstepanov : Thank you for the contribution that now is merged!; I forgot to mention you that next time it would be better to merge together simple commits and have more meaningful commit log messages. ; Thanks again!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10780#issuecomment-1192647873:144,simpl,simple,144,https://root.cern,https://github.com/root-project/root/pull/10780#issuecomment-1192647873,1,['simpl'],['simple']
Usability,@phsft-bot build just on slc6/clang_gcc62 with flags -Dcxxmodules=On; @vgvassilev had to clear the build queue as something screwed up and made the PR by @xvallspl get built 8 times,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/470#issuecomment-290209174:89,clear,clear,89,https://root.cern,https://github.com/root-project/root/pull/470#issuecomment-290209174,1,['clear'],['clear']
Usability,"@phsft-bot build!. Could you update the commit message to something like:; ""[rootcling] Don't generate dictionary to throw it away when called with -r. This patch should speed up rootcling -r and simplify some of the conditional logic.""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5223#issuecomment-604382871:196,simpl,simplify,196,https://root.cern,https://github.com/root-project/root/pull/5223#issuecomment-604382871,1,['simpl'],['simplify']
Usability,"@pseyfert - to be clear though, you're talking about a different algorithm, right? (LZMA versus LZ4)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/81#issuecomment-170018187:18,clear,clear,18,https://root.cern,https://github.com/root-project/root/pull/81#issuecomment-170018187,1,['clear'],['clear']
Usability,"@saisoma123, I have squashed the commits. In future we should do these changes in a single commit to have a clearer history.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10936#issuecomment-1185376282:108,clear,clearer,108,https://root.cern,https://github.com/root-project/root/pull/10936#issuecomment-1185376282,1,['clear'],['clearer']
Usability,"@silverweed could you please propose a simple pr checking for the mold version? I know it's perhaps a niche use case, but also restoring an optimal user experience for it seems rather cheap...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15473#issuecomment-2258724184:39,simpl,simple,39,https://root.cern,https://github.com/root-project/root/issues/15473#issuecomment-2258724184,2,"['simpl', 'user experience']","['simple', 'user experience']"
Usability,"@smuzaffar, thanks a lot for the prompt feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9592#issuecomment-1018284184:40,feedback,feedback,40,https://root.cern,https://github.com/root-project/root/pull/9592#issuecomment-1018284184,1,['feedback'],['feedback']
Usability,"@stephanlachnit I know you come from the Debian side, and I remember you have a private package of ROOT that builds successfully. Any idea what might go wrong on Ubuntu?. Otherwise I'm tempted to close this because it's basically not reproducible standalone, and I could simply argue it's a problem in the packaging system...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777#issuecomment-1205188390:271,simpl,simply,271,https://root.cern,https://github.com/root-project/root/issues/10777#issuecomment-1205188390,1,['simpl'],['simply']
Usability,"@stwunsch : The machine running the installation of the reference guide is root-ubuntu-2004-2. I logged on this machine and simply tried (stupidly) to type ""pyspark"". I know nothing about this tool but surprisingly I got an answer saying it seems wrongly installed there ... Dod you have an idea about that ? what should be done ? A Python expert might know better. ```; sftnight@root-ubuntu-2004-2:~$ pyspark; Could not find valid SPARK_HOME while searching ['/home', '/usr/local/bin']. Did you install PySpark via a package manager such as pip or Conda? If so,; PySpark was not found in your Python environment. It is possible your; Python environment does not properly bind with your package manager. Please check your default 'python' and if you set PYSPARK_PYTHON and/or; PYSPARK_DRIVER_PYTHON environment variables, and see if you can import; PySpark, for example, 'python -c 'import pyspark'. If you cannot import, you can install by using the Python executable directly,; for example, 'python -m pip install pyspark [--user]'. Otherwise, you can also; explicitly set the Python executable, that has PySpark installed, to; PYSPARK_PYTHON or PYSPARK_DRIVER_PYTHON environment variables, for example,; 'PYSPARK_PYTHON=python3 pyspark'. /usr/local/bin/pyspark: line 24: /bin/load-spark-env.sh: No such file or directory; /usr/local/bin/pyspark: line 68: /bin/spark-submit: No such file or directory; sftnight@root-ubuntu-2004-2:~$ . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7802#issuecomment-822528404:66,guid,guide,66,https://root.cern,https://github.com/root-project/root/issues/7802#issuecomment-822528404,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,@stwunsch I simplified the docs to avoid repetition by referencing the documentation on base classes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6293#issuecomment-685789931:12,simpl,simplified,12,https://root.cern,https://github.com/root-project/root/pull/6293#issuecomment-685789931,1,['simpl'],['simplified']
Usability,"@stwunsch sorry for not being too responsive.; the PR looks good to me and it should solve a recent jira ticket, [ROOT-9546](https://sft.its.cern.ch/jira/browse/ROOT-9546).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2344#issuecomment-407298545:34,responsiv,responsive,34,https://root.cern,https://github.com/root-project/root/pull/2344#issuecomment-407298545,1,['responsiv'],['responsive']
Usability,@stwunsch uninformed question: couldn't we simply use a `vector<char>` as a byte buffer here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2420#issuecomment-409946830:43,simpl,simply,43,https://root.cern,https://github.com/root-project/root/pull/2420#issuecomment-409946830,1,['simpl'],['simply']
Usability,"@vepadulano , not clear from the conversation to me, but is the comment above about the suppression file and how cling allocates addressing your original issue? If yes,could you close this item?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13130#issuecomment-1926398466:18,clear,clear,18,https://root.cern,https://github.com/root-project/root/issues/13130#issuecomment-1926398466,1,['clear'],['clear']
Usability,@vepadulano . All information is in the description of the PR.; THttpServer implements different kind of http requests.; Most of them described here:. https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html#data-access-from-command-shell. This PR adds one more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14614#issuecomment-1931846997:182,guid,guides,182,https://root.cern,https://github.com/root-project/root/pull/14614#issuecomment-1931846997,1,['guid'],['guides']
Usability,"@vepadulano @Axel-Naumann with the last commit the situation is now the following:. explicit column list passed, a necessary size branch was omitted:; - compiled Snapshot throws an exception with a (hopefully) clear error message; - jitted Snapshot silently adds the required size branches. explicit column list passed, a necessary size branch is listed _after_ the branch that needs it:; - compiled and jitted Snapshot both work. no explicit column list passed:; - this is only possible with jitted Snapshots and this now works despite the fact that Snapshot reorders the column names in alphabetical order (which might put a size branch after the branch that needs it). In a subsequent PR I'll try to go back to Snapshot using the same ordering for the output columns as the ordering of the input columns -- it's not super straightforward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10934#issuecomment-1190273501:210,clear,clear,210,https://root.cern,https://github.com/root-project/root/pull/10934#issuecomment-1190273501,1,['clear'],['clear']
Usability,"@vepadulano @pcanal I just noticed that all the 31 bit ugly stuff was due to an outdated documentation. It's no longer the case, minor and major have now independent variables both 64-bits. So this simplifies things significantly.; See https://github.com/root-project/root/commit/19b0ca55fe1643eb07c9bca362b64a4d2111674f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14967#issuecomment-2013036145:198,simpl,simplifies,198,https://root.cern,https://github.com/root-project/root/pull/14967#issuecomment-2013036145,1,['simpl'],['simplifies']
Usability,"@vepadulano thanks for the reply! (got caught up with some other work in the meantime). the simpler reproducer does not throw any errors, and removing the extra outfile.Close() no longer does as well. I had rebooted my computer and re-sourced thisroot.sh, so maybe there was something bad being referenced? Not sure. Hopefully issues doesn't arise again. Thanks for the help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11823#issuecomment-1347823222:92,simpl,simpler,92,https://root.cern,https://github.com/root-project/root/issues/11823#issuecomment-1347823222,1,['simpl'],['simpler']
Usability,"@vepadulano the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users that want to reimplement parts thereof. I'm admittedly not sure if that's a clear enough distinction to warrant the use of the `Internal` namespace; we certainly want the public API to guide the regular user as much as possible to the correct usage of RNTuple and I think ""power"" users are fine with navigating the internals if they need to solve a very specific problem. ; I don't know if @jblomer has more to say about this, but I don't have a strong opinion either way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16786#issuecomment-2446318660:179,clear,clear,179,https://root.cern,https://github.com/root-project/root/pull/16786#issuecomment-2446318660,2,"['clear', 'guid']","['clear', 'guide']"
Usability,@vgvassilev - is there a short guide on writing gtests within ROOT? I just barely got caught up with doing `roottest` stuff...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/146#issuecomment-312723725:31,guid,guide,31,https://root.cern,https://github.com/root-project/root/pull/146#issuecomment-312723725,1,['guid'],['guide']
Usability,@vgvassilev - not clear why you mentioned me in the above comment? Did you mean to address Oksana instead?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1189#issuecomment-337095457:18,clear,clear,18,https://root.cern,https://github.com/root-project/root/pull/1189#issuecomment-337095457,1,['clear'],['clear']
Usability,"@vgvassilev : Your idea sounds nice. Implementation of such a system is, however, not realistic for us at the moment and it would also go far far beyond the simple step here. Of course, we'd be happy to address smaller comments (naming of things, etc.) if there are any.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12613#issuecomment-1514749749:157,simpl,simple,157,https://root.cern,https://github.com/root-project/root/pull/12613#issuecomment-1514749749,1,['simpl'],['simple']
Usability,"@vgvassilev ; > Why didn’t you move this check in maybeMangleName?. Well, it's simpler here (and only needed for globals anyway)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3590#issuecomment-479822505:79,simpl,simpler,79,https://root.cern,https://github.com/root-project/root/pull/3590#issuecomment-479822505,1,['simpl'],['simpler']
Usability,"@vgvassilev I think most dependent PRs are merged, so this PR could be simplified...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5443#issuecomment-620030802:71,simpl,simplified,71,https://root.cern,https://github.com/root-project/root/pull/5443#issuecomment-620030802,1,['simpl'],['simplified']
Usability,"@vgvassilev In theory, everybody with commit access can review and approve patches. In practice Lang's commits didn't touch the instruction selection, and I'd really prefer to get feedback from an expert on this. I'll ping the patch probably tomorrow, people might have been off last week.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7757#issuecomment-813881052:180,feedback,feedback,180,https://root.cern,https://github.com/root-project/root/pull/7757#issuecomment-813881052,1,['feedback'],['feedback']
Usability,"@vgvassilev Indeed trailing space are not allowed in neither code nor comments ... . In this case the output from travis showed **also** other type of changes (including alignment) and since the trailing spaces were **not** **highlighted**, it was **very** easy to overlook them ... (see for example the result of git diff that makes it very clear).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/553#issuecomment-300005435:342,clear,clear,342,https://root.cern,https://github.com/root-project/root/pull/553#issuecomment-300005435,1,['clear'],['clear']
Usability,"@vgvassilev Let me clarify the disconnect. The title says ""Add **a** module for experimental/string_view""; The commit says:. That should fix a recent nightly failure with gcc11 avoiding to require; module ""bits/ranges_base.h"" in C++20 context. The code says:; ```; module ""experimental/string_view"" {; export *; header ""experimental/algorithm""; }; ```; ; The commit content as-is seems completely unrelated to the commit log as far as I could tell (without doing research on the relationship between `range_base`, `string_view` and `algorithm`.; ; So I pondered whether the fix was the right fix for a problem I did not know anything about ... ; ; The right thing to do would have probably be have been to request a complete explanation of what the original problem was, what was the mechanism leading to the error and why this solution was the best solution. This was obviously much more than this seemingly simple fix required. So instead I thought to ask for a very low cost, straight forward solution: simply copy/pasting the error with no additional effort to explain in detail. > Can you suggest a commit message which adds enough information which makes me happy as well?. That requires to paraphrase the error and add a few more details. ```; That should fix a recent nightly failure with gcc11. The failure presented during dictionary generation in a C++14 and C++17 build and incorrectly complained about needing the 'cplusplus20' feature for the 'std.bits/ranges_base.h' module. The issue was triggered by an inclusion of `<bits/ranges_base.h>` from `string_view`. This issue exists on gcc11 and gcc12 (and I guess any gcc that made changes to libstdc++ and the experimental/string_view header file). . It seems the issue is solved by exporting `algorithm` as part of the `string_view` module.; ```. Actually, I still don't know why adding `algorithm` fixes a problem with `range_base.h`, so I can't add that to the commit ... maybe it is something like ""... by avoiding to use the module m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1430326540:909,simpl,simple,909,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1430326540,1,['simpl'],['simple']
Usability,@vgvassilev Re: **778b83c Create a virtual file entry for each input line.**; Here's a simple failure:; ```; ./bin/cling -Xclang -verify; [$]for (int i=0;i<1;++i) { val; } // expected-error {{use of undeclared identifier 'val'}}; [$].q; fatal error: cannot open file 'input_line_3': No such file or directory; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/589#issuecomment-307291410:87,simpl,simple,87,https://root.cern,https://github.com/root-project/root/pull/589#issuecomment-307291410,1,['simpl'],['simple']
Usability,"@vgvassilev Sorry, I got busy in my mid term examinations, so couldn't reply. I rebased my branch and my commits of this PR are there in the master branch of root. But `TMVAUserGuide.pdf` is not updated with respect to changes in tex files. Should I open a separate PR for updating TMVA User Guide pdf? ; cc: @lmoneta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/316#issuecomment-287604751:292,Guid,Guide,292,https://root.cern,https://github.com/root-project/root/pull/316#issuecomment-287604751,1,['Guid'],['Guide']
Usability,@vgvassilev Test is added. Please help resume github pipeline.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11286#issuecomment-1268422584:39,resume,resume,39,https://root.cern,https://github.com/root-project/root/pull/11286#issuecomment-1268422584,1,['resume'],['resume']
Usability,"@vgvassilev Upon reflection, I think this is the simplest/easier fix...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6551#issuecomment-704231127:49,simpl,simplest,49,https://root.cern,https://github.com/root-project/root/pull/6551#issuecomment-704231127,1,['simpl'],['simplest']
Usability,"@vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue https://github.com/root-project/root/issues/9312 to keep track.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9301#issuecomment-972998223:114,feedback,feedback,114,https://root.cern,https://github.com/root-project/root/pull/9301#issuecomment-972998223,1,['feedback'],['feedback']
Usability,"@wlav ; ""So the only upside there seems to be is removing of this teeny-weeny inconvenience of having to setup PYTHONPATH if you install in /usr/local. But A) most from-source builders don't do that, they use bin/thisroot.sh, which sets up PYTHONPATH; and B) installing in /usr/local is not recommended to begin with, b/c of the same problem with remnants."". A) it's also valid when installing as user to ~/.local (like when you install a python module with --user); B) of course, users shouldn't install anything to /usr[/local] without using package management, but it will simplify packaging too by not having to install an ugly script somewhere that sets PYTHONPATH. As for the downsides, I think this solution is just simpler (not mentioning cleaner), maybe this will get you less bug reports.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/73#issuecomment-138831372:576,simpl,simplify,576,https://root.cern,https://github.com/root-project/root/pull/73#issuecomment-138831372,2,['simpl'],"['simpler', 'simplify']"
Usability,"@wolfv great to see you down here :smile: thank you for the snippet!; @SylvainCorlay let's be clear (haven't clarified it enough during the discussion in Sarajevo) that `RTensor` is not xtensor2, it is not meant to have broadcasting nor lazy execution, and it's nowhere near an expression system. It's there because the machine learning classes were missing a multidimensional container with shape information, which they obviously terribly need. I completely agree with @stwunsch that adopting xtensor is an larger, more complex, _ongoing_ discussion :smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2593#issuecomment-421270850:94,clear,clear,94,https://root.cern,https://github.com/root-project/root/pull/2593#issuecomment-421270850,2,"['clear', 'learn']","['clear', 'learning']"
Usability,"@xvallspl Any feedback on the implementation ? Also, how to tackle the issue mentioned in the last comment ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-400992798:14,feedback,feedback,14,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-400992798,1,['feedback'],['feedback']
Usability,A RooAddPdf needs to have always a normalization set defined when evaluating. ; If this set is not defined it evaluates the component pdf without a normalization. This can cause an ambiguous definition of the coefficients and therefore a different shape of the pdf given the same coefficient values. ; See problem reported in ROOT-10814. This PR just add a warning message to warn users to not evaluate the pdf without having provided first a normalization set. . This simple code shows the problem: ; https://cernbox.cern.ch/index.php/s/iosEw6qHq51SLbi,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7129:469,simpl,simple,469,https://root.cern,https://github.com/root-project/root/pull/7129,1,['simpl'],['simple']
Usability,A maybe minor change of behavior would be when there is time-dependent static initialization. If the ‘script’ has a static init that gets the current time or looks for files on disk the behavior of the unloading will be unexpected if:. .L script.C; .undo 1; .L script.C. doesn’t rerun static init.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4465#issuecomment-538779696:250,undo,undo,250,https://root.cern,https://github.com/root-project/root/pull/4465#issuecomment-538779696,1,['undo'],['undo']
Usability,"A more simple reproducer here shows the same effect on Ubuntu 18:; ```; TCanvas* c = new TCanvas(); TH1* h = new TH1F(""h"",""h"",100,0,10); c->SetFillStyle(0); h->Draw(); ```. ![image](https://user-images.githubusercontent.com/10653970/151991662-805da339-fd11-4490-9d08-631526798254.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9763#issuecomment-1026929100:7,simpl,simple,7,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1026929100,1,['simpl'],['simple']
Usability,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7201#issuecomment-805982843:619,simpl,simply,619,https://root.cern,https://github.com/root-project/root/issues/7201#issuecomment-805982843,1,['simpl'],['simply']
Usability,"A possible fix is https://github.com/root-project/roottest/pull/610, which simply removes the inbuilt pytest and requires an external version. Edit: Checked, is fixed by a piped pytest version and the linked PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6597#issuecomment-706215684:75,simpl,simply,75,https://root.cern,https://github.com/root-project/root/issues/6597#issuecomment-706215684,1,['simpl'],['simply']
Usability,"A possible implementation, that could go in some ROOT::Math classes:. ```; #include <bitset>; #include <cmath>; #include <array>; #include <set>; #include <iostream>. using std::bitset;; using std::array;; using std::vector;; using std::set;; using std::cout;; using std::endl;. /**; * @brief Generation of pseudo-random bits using a linear feedback shift register (LFSR), until a register value is repeated (or maxPeriod is reached); * @tparam k the length of the LFSR, or the order of the monic polynomial PRBS-k (last exponent); * @tparam nTaps the number of taps; * @param start the start value of the LFSR; * @param taps the taps that will be XOR-ed to calculate the new bit. They are the exponents of the monic polynomial. Ordering is unimportant.; * @param wrapping if true, allow wrapping until maxPeriod or start is reached; * @param verbose if true, print the lfsr and new bit on each step; * @note Shift direction of the register is to the left <<, the newBit is set at bit position 0 (right); * @return the array of pseudo random bits, or an empty array if input was incorrect; * @see https://en.wikipedia.org/wiki/Monic_polynomial; * @see https://en.wikipedia.org/wiki/Linear-feedback_shift_register; * @see https://en.wikipedia.org/wiki/Pseudorandom_binary_sequence; */; template <size_t k, size_t nTaps>; vector<bool>; LFSR(const bitset<k> start, const array<uint16_t, nTaps> taps, const bool wrapping = false, const bool verbose = false); {; vector<bool> result;; //Sanity-checks; if(taps.size()<2); {; cerr << ""At least two taps are needed"" << endl;; return result;; }; for(auto tap : taps); {; if(tap > k); {; cerr << ""Out of range tap "" << tap << endl;; return result;; }; }; if(start.none()); {; cerr << ""A non-zero start value is needed"" << endl;; return result;; }. const uint32_t maxPeriod = pow(2,k) - 1;; result.reserve(maxPeriod);. set<uint32_t> lfsrHistory;; bitset<k> lfsr(start);; uint32_t i = 0;; do; {; // XOR of all the tapped bits. We use -1 because an exponent N in t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8199#issuecomment-843369054:341,feedback,feedback,341,https://root.cern,https://github.com/root-project/root/issues/8199#issuecomment-843369054,1,['feedback'],['feedback']
Usability,"A priori Python code is protected by the GIL, so this access wouldn't be an issue for threaded code (GIL release is ever only on the actual call into C++, not on any setup code to reach that point). Additionally, this is a workaround for ROOT/meta's buggy handling of enums. Since that is now fixed, this particular workaround is no longer necessary and can simply be removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6566#issuecomment-704347919:358,simpl,simply,358,https://root.cern,https://github.com/root-project/root/issues/6566#issuecomment-704347919,1,['simpl'],['simply']
Usability,"A reproducer. A simple macro. Is:; ```; void testTH3Label() {. TRandom3 r;; int nBins = 3;; int nEvents = 100000;; double minRange = 1; double maxRange = 5;; TH3D* h4 = new TH3D(""h4"", ""h4-Title"",; 2*nBins, minRange, maxRange,; nBins , minRange, maxRange,; nBins , minRange, maxRange);. std::vector<TString> labels = {""a1"",""b1"",""c1"",""a2"",""b2"",""c2""};; for ( Int_t e = 0; e < nEvents; ++e ) {; TString label = labels[r.Uniform(0,labels.size())];; Double_t x = r.Uniform(0.9 * minRange, 1.1 * maxRange);; Double_t y = r.Uniform(0.9 * minRange, 1.1 * maxRange);; Double_t z = r.Uniform(0.9 * minRange, 1.1 * maxRange);; h4->Fill(label, y, z, 1.0);; }; h4->Draw();; /// h4->GetXaxis()->SetNdivisions(-1); // This line fixes the issue; h4->GetXaxis()->GetLabels()->ls();; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6381#issuecomment-694888116:16,simpl,simple,16,https://root.cern,https://github.com/root-project/root/issues/6381#issuecomment-694888116,1,['simpl'],['simple']
Usability,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp; #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");; }; ```. ```; root -l testio.cpp ; root [0] ; Processing testio.cpp...; Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved; root [1] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9371#issuecomment-997463726:42,simpl,simpler,42,https://root.cern,https://github.com/root-project/root/issues/9371#issuecomment-997463726,1,['simpl'],['simpler']
Usability,"A simple `interp.declare(""#pragma once"")` should be enough. The original case was a header that got embedded verbatim in a dictionary, through genreflex, iirc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10826#issuecomment-1167247909:2,simpl,simple,2,https://root.cern,https://github.com/root-project/root/pull/10826#issuecomment-1167247909,1,['simpl'],['simple']
Usability,A simple workaround that does not involve modifying the TTimeStamp code is provided o the ROOT forum.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12569#issuecomment-1561019614:2,simpl,simple,2,https://root.cern,https://github.com/root-project/root/issues/12569#issuecomment-1561019614,1,['simpl'],['simple']
Usability,"A simpler reproducer, after digging what triggers the problem in the cppyy code:. ```python; # tree generated in C++; import ROOT. df = ROOT.RDataFrame('tree', 'file.root'); hist = df.Histo1D('x'). ROOT.gROOT.GetType(""std::string"") # this triggers the issue. print(hist.GetEntries()); ```. So it does not seem a PyROOT problem. @Axel-Naumann and perhaps @vgvassilev any comments on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7169#issuecomment-776819414:2,simpl,simpler,2,https://root.cern,https://github.com/root-project/root/issues/7169#issuecomment-776819414,1,['simpl'],['simpler']
Usability,"A simpler reproducer, generating a tree with:. ```cpp; void generate_tree() {; TFile f(""file.root"", ""RECREATE"");; TTree t(""tree"", ""tree"");; std::string x(""foo"");; t.Branch(""x"", &x);; t.Fill();; f.Write();; f.Close();; }; ```. and then running:; ```python; # tree generated in C++; import ROOT. df = ROOT.RDataFrame('tree', 'file.root'); hist = df.Histo1D('x'). ROOT.std.string. print(hist.GetEntries()); ```. triggers the same error. The culprit here is the lookup of `std::string`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7169#issuecomment-776729215:2,simpl,simpler,2,https://root.cern,https://github.com/root-project/root/issues/7169#issuecomment-776729215,1,['simpl'],['simpler']
Usability,"A simpler reproducer:; ```bash; cd ./roottest/root/meta/cmsUnload/; make cleantest V=1. cat scripts/case3.script; ```. ```cpp; struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };; .L lib/libStrip.so ; Marker m2;; gInterpreter->AutoParse(""SiStripCluster"");; .undo 2; SiStripCluster obj;; ```. ```bash; root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script; ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```; ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'; SiStripCluster obj;; ^; libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'; ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;; ^; ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there?. PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2852#issuecomment-433640932:2,simpl,simpler,2,https://root.cern,https://github.com/root-project/root/pull/2852#issuecomment-433640932,2,"['simpl', 'undo']","['simpler', 'undo']"
Usability,"A soft-break would require the effort of fixing the wild card import just to drop it afterwards.... There is a structural problem with Python 3.11 that prevents the wildcard import with the lazy lookup to work. Upstream CPyCppyy dropped that feature even:; https://github.com/wlav/CPyCppyy/commit/64fd89050a66bf8cb119f236cadd365efa07b005; Quote:; > As of py3.11, there is no longer a lookup function pointer in the dict object to replace. Since this feature is not widely advertised, it's simply droped. The dropped `SetCppLazyLookup()` function is exactly the one we used for `from ROOT import *`.; https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L162. @vepadulano, given this new information that it will never work with Python 3.11 onward, maybe we should remove the code path for `import ROOT *`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7669#issuecomment-1926805717:489,simpl,simply,489,https://root.cern,https://github.com/root-project/root/issues/7669#issuecomment-1926805717,1,['simpl'],['simply']
Usability,"A workaround has been introduced in xrootd and will be part of xrootd-5.3.1 release. See above referenced issue in xrootd repo. Similar workaround has already been there for XrdCl::File destruction that is also happening after libXrdCl has been unloaded. @Axel-Naumann do you think it's worth introducing something like TROOT::CleanupLeftovers() and call it from TApplication::Terminate() just before calling gSystem->Exit()? The same function can still be called from ~TROOT for cases when TApplication is not instantiated ... and if it is called beforehand, the lists will simply be empty at ~TROOT time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8767#issuecomment-889666524:575,simpl,simply,575,https://root.cern,https://github.com/root-project/root/issues/8767#issuecomment-889666524,1,['simpl'],['simply']
Usability,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301; #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539; #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395; #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516; #7 <signal handler called>; #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268; #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217; #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142; #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112; ===========================================================; ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14569:2874,simpl,simpleStudy,2874,https://root.cern,https://github.com/root-project/root/issues/14569,1,['simpl'],['simpleStudy']
Usability,"AMPE MC Event nTuple Tree *; *Entries : 30000 : Total = 42024515 bytes File Size = 5331016 *; * : : Tree compression factor = 7.90 *; ******************************************************************************; *Br 0 :NUD_total_ADC : nud_total_adc/D *; *Entries : 30000 : Total Size= 241261 bytes File Size = 7509 *; *Baskets : 8 : Basket Size= 32000 bytes Compression= 32.06 *; *............................................................................*; ```. ```; DmpMCEvtNtup->Draw(""NUD_total_ADC""); ```; works, while; ```; root [13] TTreeReader r(DmpMCEvtNtup);; root [14] TTreeReaderValue<double> rv(r, ""NUD_total_ADC"");; root [15] r.Next(); Error in <TTreeReaderValueBase::GetBranchDataType()>: The branch NUD_total_ADC was created using a leaf list and cannot be represented as a C++ type. Please access one of its siblings using a TTreeReaderArray:; Error in <TTreeReaderValueBase::GetBranchDataType()>: NUD_total_ADC.nud_total_adc; Error in <TTreeReaderValueBase::CreateProxy()>: The branch NUD_total_ADC contains data of type {UNDETERMINED TYPE}, which does not have a dictionary.; (bool) false; ```. does not. `TTreeReader` instead requires the full leaf name:. ```; root [1] TTreeReader r(DmpMCEvtNtup);; root [2] TTreeReaderValue<double> rv(r, ""NUD_total_ADC.nud_total_adc"");; root [3] r.Next(); (bool) true; root [4] *rv; (double) -999.00000; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `TTreeReader` should support the same set of ""valid branch names"" that `TTree::Draw` supports. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. Reproduced with 6.22/02 and master@4ea4d8943 . ### Additional context; <!--; Add any other context about the problem here.; -->. This looks similar to https://sft.its.cern.ch/jira/browse/ROOT-7984 and it is (at least part of) the cause of https://sft.its.cern.ch/jira/browse/ROOT-9558 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6881:2177,clear,clear,2177,https://root.cern,https://github.com/root-project/root/issues/6881,1,['clear'],['clear']
Usability,AXEL DEBUG: null workspace; Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5360-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77596/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77596/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77596/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77596/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5360#issuecomment-617094622:384,simpl,simple,384,https://root.cern,https://github.com/root-project/root/pull/5360#issuecomment-617094622,2,['simpl'],['simple']
Usability,AXEL DEBUG: null workspace; Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5395-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77548/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77548/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77548/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77548/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5395#issuecomment-617046782:882,simpl,simple,882,https://root.cern,https://github.com/root-project/root/pull/5395#issuecomment-617046782,2,['simpl'],['simple']
Usability,AXEL DEBUG: null workspace; Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5411-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77564/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77564/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77564/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77564/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5411#issuecomment-617073790:384,simpl,simple,384,https://root.cern,https://github.com/root-project/root/pull/5411#issuecomment-617073790,2,['simpl'],['simple']
Usability,AXEL DEBUG: null workspace; Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5412-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77580/console).; ### Warnings:; - [2020-04-21T09:26:20.442Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/math/foam/test/testTFoam.cxx:14:23: warning: unused parameter 'nDim' [-Wunused-parameter] . ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77580/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77580/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77580/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5412#issuecomment-617073738:1087,simpl,simple,1087,https://root.cern,https://github.com/root-project/root/pull/5412#issuecomment-617073738,2,['simpl'],['simple']
Usability,AXEL DEBUG: null workspace; Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5412-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77620/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77620/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77620/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77620/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5412#issuecomment-617160440:384,simpl,simple,384,https://root.cern,https://github.com/root-project/root/pull/5412#issuecomment-617160440,2,['simpl'],['simple']
Usability,AXEL DEBUG: null workspace; Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5413-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77588/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77588/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77588/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77588/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5413#issuecomment-617085149:882,simpl,simple,882,https://root.cern,https://github.com/root-project/root/pull/5413#issuecomment-617085149,2,['simpl'],['simple']
Usability,AXEL DEBUG: null workspace; Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5415-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77612/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77612/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77612/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77612/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5415#issuecomment-617102090:882,simpl,simple,882,https://root.cern,https://github.com/root-project/root/pull/5415#issuecomment-617102090,2,['simpl'],['simple']
Usability,"About drawing with two axes. . Web graphics supports drawing of axes on both sides.; Therefore one can simplify drawing just doing:; ```; graph->Draw(""APL"");; graphPerCore->Draw(""PLX+Y+"");; ```. No need for extra transparent pads, no need for axis drawing emulation.; I attach macro and produced output. Also see `graph->GetXaxis()->SetNdivisions(nodes.size());` - as many divisions are required. [scaling_new.C.txt](https://github.com/root-project/root/files/12724374/scaling_new.C.txt); [scaling_new.pdf](https://github.com/root-project/root/files/12724375/scaling_new.pdf)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13707#issuecomment-1734979113:103,simpl,simplify,103,https://root.cern,https://github.com/root-project/root/issues/13707#issuecomment-1734979113,1,['simpl'],['simplify']
Usability,"About naming: although `std::strtok` does a simple string splitting, tokenization is often understood as a more complex operation than string splitting, involving some lexing, see e.g. https://docs.python.org/3/library/tokenize.html (vs the simple Python string split mentioned above) and https://github.com/ArashPartow/lexertk . I would suggest to just call this `Split`, if other people share this ""tokenizing sounds more complex than just splitting"" feeling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8807#issuecomment-895069093:44,simpl,simple,44,https://root.cern,https://github.com/root-project/root/issues/8807#issuecomment-895069093,2,['simpl'],['simple']
Usability,"Actually it worked for you because you centred the X title. In the previous macro, remove the X title centring and go to log scale in Y and you will get the problem you discovered. So that's not a regression. The bug fix simply revealed a problem (?) which was hidden by the bug generated by the X title centring. To make it short, with a ROOT version without the patch, try:; ```; {; auto c1 = new TCanvas(""c1"",""multigraph"",700,500);; c1->SetGrid();; auto *mg = new TMultiGraph();; std::vector<double> x1;; std::vector<double> sig1;; std::vector<double> sig2;; for (double E=1e-4;E<2e7;E*=1.1) {; x1.push_back(E);; sig1.push_back(10*pow(E,-0.1));; sig2.push_back(15*pow(E,-0.15));; }; auto g1 = new TGraph(x1.size(), x1.data(), sig1.data());; mg->Add(g1);; auto g2 = new TGraph(x1.size(), x1.data(), sig2.data());; mg->Add(g2);; mg->SetTitle(""; E (eV);#sigma (b)"");; mg->Draw(""AL"");; gPad->Update();; c1->SetLogy();; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9011#issuecomment-957859532:221,simpl,simply,221,https://root.cern,https://github.com/root-project/root/issues/9011#issuecomment-957859532,1,['simpl'],['simply']
Usability,Actually my apologies ... changing the default seems to warrant its own commit so that it is clearly marked/seen in short git logs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4839#issuecomment-577677791:93,clear,clearly,93,https://root.cern,https://github.com/root-project/root/pull/4839#issuecomment-577677791,1,['clear'],['clearly']
Usability,"Actually, I found the old behaviour of root just ignoring unknown options extremely useful.; It allowed users to simply add their own command line options and parsing them in `.rootlogon.C`; A simple example I have been using for 15+ years:; ```; 	int argc = gApplication->Argc();; 	char** argv = gApplication->Argv();; 	for (int i=1; i<argc; i++) {; 		TString arg = argv[i];; 		if (arg == ""--browser"") {; 			new TBrowser();; 		}; 	}; ```. I can see the the arguments for the recent change, nevertheless I would very much like to keep the old behaviour.; My suggestion would be to add a command line option `--ignore-unknown`, after which all unknown options are ignored.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8850#issuecomment-1079188278:113,simpl,simply,113,https://root.cern,https://github.com/root-project/root/issues/8850#issuecomment-1079188278,2,['simpl'],"['simple', 'simply']"
Usability,"Actually, I think that the correct behavior should be to clear the undo history after accepting a new input line (which also follows what GNU-readline does).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10182#issuecomment-1073909757:57,clear,clear,57,https://root.cern,https://github.com/root-project/root/issues/10182#issuecomment-1073909757,2,"['clear', 'undo']","['clear', 'undo']"
Usability,"Actually, I tried moving the target_include_directories after and it doesn't work. Either that was broken by some more recent commit or it didn't work before, but we didn't notice any problem. Something that needs to be debugged, because I did try to make the properties be usable even when the target_include_directories command is added later. Maybe it's something that only works within ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8308#issuecomment-856013049:274,usab,usable,274,https://root.cern,https://github.com/root-project/root/issues/8308#issuecomment-856013049,1,['usab'],['usable']
Usability,"Actually, it's probably not a good idea to introduce this progress bar, because it will break the logging to files, which is done a lot in batch jobs. Hence, I close this PR, which is superseded by another PR:; * https://github.com/root-project/root/pull/14309",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10509#issuecomment-1881730104:58,progress bar,progress bar,58,https://root.cern,https://github.com/root-project/root/pull/10509#issuecomment-1881730104,1,['progress bar'],['progress bar']
Usability,"Ad 1) With all the other modifications, I think in the end it is just simpler to build all the fields upfront. We'd save a bit of memory doing it on demand, but it will possibly take a little longer because we need to traverse the schema tree more often (for every leaf, we have to figure out again what are the parents). Ad 2) I'm fine with a squash on merge. I'd prefer not to squash individual commits, it's a long history and a partial rewrite will get it as wrong as the full history. Let me know if you like the squash commit over the rebase.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6700#issuecomment-797527506:70,simpl,simpler,70,https://root.cern,https://github.com/root-project/root/pull/6700#issuecomment-797527506,1,['simpl'],['simpler']
Usability,Add 3 new tutorials for TMVA deep learning:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5441:34,learn,learning,34,https://root.cern,https://github.com/root-project/root/pull/5441,1,['learn'],['learning']
Usability,Add Deep Learning GPU for TMVA Regression tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8573:9,Learn,Learning,9,https://root.cern,https://github.com/root-project/root/pull/8573,1,['Learn'],['Learning']
Usability,"Add a number of functions that could replace the way user interacts with the C++ elements of the distributed, fully pythonic RDF analysis, so that this is more natural and clear as well as less error prone compared to the previous method. ; The new functions are: ; - DeclareHeaders; - DeclareSharedLibs ; - DeclareFiles ; - DeclareCppCode. The functions work with both Spark and Dask backends. . The tests are introduced in roottest PR: https://github.com/root-project/roottest/pull/1177",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16309:172,clear,clear,172,https://root.cern,https://github.com/root-project/root/pull/16309,1,['clear'],['clear']
Usability,Add a simple contributing file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/839:6,simpl,simple,6,https://root.cern,https://github.com/root-project/root/pull/839,1,['simpl'],['simple']
Usability,Add a very simple circular buffer allowing to automatically compute and display the mean of last N values when enabling the mean mark with `EnableMeanMark()`. The size of the buffer can be changed with `SetBufferSize()`. Thanks to @ferdymercury for the suggestion,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7170:11,simpl,simple,11,https://root.cern,https://github.com/root-project/root/pull/7170,1,['simpl'],['simple']
Usability,"Add an (almost) `root-config` equivalent script for Windows, but unfortunately not usable to compile code in a terminal, since command substitution doesn't work in the Windows command prompt...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6733:83,usab,usable,83,https://root.cern,https://github.com/root-project/root/pull/6733,1,['usab'],['usable']
Usability,Add clearer wrt ownership interface to produce TInterpreterValue,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2795:4,clear,clearer,4,https://root.cern,https://github.com/root-project/root/pull/2795,1,['clear'],['clearer']
Usability,"Add several methods to RCanvas like `IsShown`, `ClearShown`, `CreateJSON`. In python part:; * set special ""jupyter"" kind of web display; * detect if RCanvas compiled; * like with TCanvas, extract list of RCanvas after each cell; * use RCanvas methods to create JSON and then display it. This enables offline functionality of `RCanvas` like for `TCanvas`. As next step, one could try real __online__ mode - `jupyter` provides communication channel between cells and server.; But lets do first step",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8638:48,Clear,ClearShown,48,https://root.cern,https://github.com/root-project/root/pull/8638,1,['Clear'],['ClearShown']
Usability,"Add tree inference backend using jitted evaluation of the forest. Preliminary benchmarks look promising and show a clear improvement due to the jitting (100 trees, depth 3, 100k events):. ```; XGB: 2.30692 microsec/event; BranchlessForest: 0.962279 microsec/event; BranchlessJittedForest: 0.67292 microsec/event; ```. WIP: Still needs some error-handling and doxygen markup.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4476:115,clear,clear,115,https://root.cern,https://github.com/root-project/root/pull/4476,1,['clear'],['clear']
Usability,"Add yet another fence in TClass::GetClass to avoid lookups and memory consumption. This PR aims to fix #9029. Give the sophisticated implementation of TClass::GetClass, perhaps it would be good to collect some feedback, especially by @pcanal . # This Pull request:; This PR avoids lookups and parsing in some cases.; One of the principles of the TClass::GetClass method implementation is to avoid as much as possible. . ## Changes or fixes:; This commit adds yet another fence in TClass::GetClass, checking if the name in input is the name of a known fundamental type or typedef to it.; In order to avoid code duplication, a routine previously available within the implementation of TClassEdit has been made available with a public API. ## Checklist:. - [v ] tested changes locally; - [v ] updated the docs (if necessary). This PR fixes #9029",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13341:210,feedback,feedback,210,https://root.cern,https://github.com/root-project/root/pull/13341,1,['feedback'],['feedback']
Usability,Added also possibility to set gpu_options. ; Added options `session.gpu_options.allow_growth= True` neded for running cuDNN on new RTX cards; See https://www.tensorflow.org/guide/using_gpu#allowing_gpu_memory_growth ; and solution described here for RTX cards: ; https://github.com/tensorflow/tensorflow/issues/24496,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2566#issuecomment-460601891:173,guid,guide,173,https://root.cern,https://github.com/root-project/root/pull/2566#issuecomment-460601891,1,['guid'],['guide']
Usability,"Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11773:143,simpl,simple,143,https://root.cern,https://github.com/root-project/root/pull/11773,2,['simpl'],['simple']
Usability,"Added some simple fixes to `ROOT::TFile`, to make it build with Xcode/Clang 9.0 on macOS High Sierra in C++14 mode. This is to fix the build problem described in https://sft.its.cern.ch/jira/browse/ROOT-9072. (I just thought that I might as well propose a fix, since I fixed it for my local installation anyway.). I imagine that cherry-picking the fix into the master branch would not be up to me anymore... (Should've read the contribution guidelines... 😛)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1220:11,simpl,simple,11,https://root.cern,https://github.com/root-project/root/pull/1220,2,"['guid', 'simpl']","['guidelines', 'simple']"
Usability,"Added tests for the C++ mechanisms, and attempt at fixing the ubuntu18 failure (see last commit) with a much more simplified approach w.r.t. https://github.com/root-project/root/pull/12981, which should not be needed anymore (let's see what the CI thinks).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12363#issuecomment-1585596942:114,simpl,simplified,114,https://root.cern,https://github.com/root-project/root/pull/12363#issuecomment-1585596942,1,['simpl'],['simplified']
Usability,Adding a very simple example (as we were showing in the student course) to showcase the difference between running the event loop vs running it multiple times. . This PR fixes #13440.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16532:14,simpl,simple,14,https://root.cern,https://github.com/root-project/root/pull/16532,1,['simpl'],['simple']
Usability,"Additional mention of the original issue (chained lookups): https://developer.apple.com/forums/thread/719961, https://github.com/python/cpython/issues/97524 ; and https://openradar.appspot.com/radar?id=5536824084660224. Instead of `-Wl,-w` (which suppress all warnings), an undocumented options seems to be `-Xlinker -no_fixup_chains` (humm I guess actually maybe `-Wl,-no_fixup_chains`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12045#issuecomment-1385813529:274,undo,undocumented,274,https://root.cern,https://github.com/root-project/root/pull/12045#issuecomment-1385813529,1,['undo'],['undocumented']
Usability,Address request on forum:. https://root-forum.cern.ch/t/draw-option-for-mollweide-projection/55574. Also simplify a bit code in projection handling in hist painter,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13206:105,simpl,simplify,105,https://root.cern,https://github.com/root-project/root/pull/13206,1,['simpl'],['simplify']
Usability,Addresses some of the feedback in https://sft.its.cern.ch/jira/browse/ROOT-10889 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5984:22,feedback,feedback,22,https://root.cern,https://github.com/root-project/root/pull/5984,1,['feedback'],['feedback']
Usability,"Adds a new constructor to the RNTuple RDF data source that takes an ntuple name and a list of files. The data source then treats these files as a chain. Slightly simplifies the prototype construction in the RNTuple data source: instead of constructing full column reader prototypes, only the corresponding field prototypes are constructed. Multi-threaded work scheduling is as follows:. - As long as there are more files than slots: every slots get a file; - For the tail: slots get distributed over the remaining files and align on cluster boundaries. Some optimizations for follow-up PRs:. - Load the next ranges in the background. In particular that would open the next batch of files in the backgound; - Clone page sources without reopening the file; - The next set of ranges currently gives up to number of slots ranges. However, it would make more sense to use resource constraints such as available memory or number of open file descriptors as a limit and let slots work on more ranges at a time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13329:162,simpl,simplifies,162,https://root.cern,https://github.com/root-project/root/pull/13329,1,['simpl'],['simplifies']
Usability,Adds a simple comparison technique for multiclass classifiers.; 1-vs-rest will do a binary comparison between given class; considered signal and all others collectively considered; background. 1-vs-1 will do pair-wise binary comparisons. Output is in TMVA::Factory::EvaluateAllMethods,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/597:7,simpl,simple,7,https://root.cern,https://github.com/root-project/root/pull/597,1,['simpl'],['simple']
Usability,Adds infrastructure to instrument code parts with counters and timers -- either thread-safe atomics or simple integers. Adds a few key counters to the raw page source.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4300:103,simpl,simple,103,https://root.cern,https://github.com/root-project/root/pull/4300,1,['simpl'],['simple']
Usability,"After #10005 is merged, a couple of tests will fail due to a `heap-use-after-free`:; * `pyunittests-pyroot-pyz-rdataframe-makenumpy`; * `pyunittests-pyroot-numbadeclare`; * `gtest-tree-dataframe-test-dataframe-friends`; * `gtest-tree-dataframe-test-dataframe-cache`; * `gtest-tree-dataframe-test-dataframe-simple`; * `gtest-tree-dataframe-test-dataframe-snapshot`; * `gtest-tree-dataframe-test-datasource-more`; * `gtest-tree-dataframe-test-datasource-trivial`; * `gtest-tree-dataframe-test-dataframe-concurrency` (`RJittedDefine`); * `pyunittests-dataframe-misc` (`RJittedDefine`); * `pyunittests-dataframe-histograms` (`RJittedDefine`); * `pyunittests-dataframe-cache`; * `pyunittests-dataframe-merge-results`; * `tutorial-dataframe-df019_Cache`; * `tutorial-tmva-tmva003_RReader`; * `tutorial-dataframe-df000_simple-py` (`RJittedDefine`); * `tutorial-dataframe-df002_dataModel-py` (`RJittedDefine`); * `tutorial-dataframe-df003_profiles-py`; * `tutorial-dataframe-df007_snapshot-py` (`RJittedDefine`); * `tutorial-dataframe-df010_trivialDataSource-py` (`RJittedDefine`); * `tutorial-dataframe-df014_CSVDataSource-py` (`RJittedDefine`); * `tutorial-dataframe-df016_vecOps-py` (`RJittedDefine`); * `tutorial-dataframe-df017_vecOpsHEP-py` (`RJittedDefine`); * `tutorial-dataframe-df019_Cache-py`; * `tutorial-dataframe-df021_createTGraph-py` (`RJittedDefine`); * `tutorial-dataframe-df024_Display-py`; * `tutorial-dataframe-df031_Stats-py` (`RJittedDefine`); * `tutorial-dataframe-df103_NanoAODHiggsAnalysis-py` (`RJittedDefine`); * `tutorial-dataframe-df105_WBosonAnalysis-py` (`RJittedDefine`); * `tutorial-dataframe-df106_HiggsToFourLeptons-py` (`RJittedDefine`); * `tutorial-dataframe-df107_SingleTopAnalysis-py` (`RJittedDefine`); * `tutorial-pyroot-pyroot004_NumbaDeclare-py` (`RJittedDefine`); * `tutorial-rcanvas-df105-py` (`RJittedDefine`); ; According to the stack traces, `~RDefineBase` / `~RJittedDefine` calls `RLoopManager::Deregister` on an already freed `RLoopManager`. Note: There may",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10007:306,simpl,simple,306,https://root.cern,https://github.com/root-project/root/issues/10007,1,['simpl'],['simple']
Usability,After #9673 compilation in `dev` mode is broken - warnings are converted to errors. Plus update Oracle code to use namespace clearly - should help for Doxygen documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9674:125,clear,clearly,125,https://root.cern,https://github.com/root-project/root/pull/9674,1,['clear'],['clearly']
Usability,"After being notified that beginners were unable to label the axes of a; histogram, I revised the TH1 documentation a bit, such that the words; ""axis labels"" can now be found on the doxygen page.; Some lvl4 headers were converted in lvl2, so there is a bit more; structure, and a simple table of contents was added. Unfortunately,; doxygen doesn't support an automatic table of contents in class; documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6355:279,simpl,simple,279,https://root.cern,https://github.com/root-project/root/pull/6355,1,['simpl'],['simple']
Usability,"After discussion, we decided to go back to the original simpler design for this PR, which effectively accounts for the following usecase: user wants to open a file, write some stuff to it or read objects and get information from them, in an ""encapsulated"" environment, finally closing the file. The ROOT objects attached to the file will be `None`ified at the end of the context, but they can be detached with the `SetDirectory` method. The other use case imagined, where a user wants to `cd` into some file to get objects from it and then let those objects survive while returning to the previous directory, is addressed by #10167 . Notably, that behaviour will keep the file alive, so that also the special objects like TTree and RNTuple can properly survive the `with` context",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9947#issuecomment-1072702588:56,simpl,simpler,56,https://root.cern,https://github.com/root-project/root/pull/9947#issuecomment-1072702588,1,['simpl'],['simpler']
Usability,"After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15401:62,simpl,simplified,62,https://root.cern,https://github.com/root-project/root/pull/15401,1,['simpl'],['simplified']
Usability,"After messing up my git repository, I closed pull request 796 and re-created this one with the same changes. This pull request is the result of work done by David Clark as a summer intern at Argonne:; To prepare for multi-threaded workflows, a preloading and retaining clusters feature is introduced. This change will prevent additional reads from occurring when reading events out of sequence.; By setting TTree::SetClusterPrefetch(), an entire clusters will be loaded into memory, rather than single baskets.; By setting the MaxVirtualSize of the tree to a negative value, previous clusters will be retained - the absolute value of MaxVirtualSize indicates how many additional clusters will be kept in memory. If TTree CacheDoClusterPrefetch is set to true, GetEntry() will load the entire cluster into memory, not just the first basket. For this, GetBasket() is modified to call a new function GetFreshCluster(). This function is responsible for returning a new basket and clearing out clusters from memory. Because clusters can have varying numbers of baskets, GetFreshCluster() reuses the first basket and clear the rest of the baskets. Reusing all baskets may be more efficient, but adds significant complexity and would not affect the typical case where each cluster only contains a single basket (all the baskets will be reused here). To test the performance of the change, I read 1000 entries (about 1 GB) from a tree of randomly generated data consisting of 2000 branches. Every read had a 2.5% chance of reading 10 entries back or a 2.5% chance of reading 10 entries forward from the current entry.; Without the change enables there were 1.5 GB read in 31102 read calls.; With MaxVirtualSize set to -1 and CacheDoClusterPrefetch true, there were 1.1 GB read in 90 read calls.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1065:976,clear,clearing,976,https://root.cern,https://github.com/root-project/root/pull/1065,2,['clear'],"['clear', 'clearing']"
Usability,"After more investigation, it is less clear to me how the valgrind report and the `AddDataset` function are related. Still, the logic of the function seems faulty any way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14433#issuecomment-1910477019:37,clear,clear,37,https://root.cern,https://github.com/root-project/root/issues/14433#issuecomment-1910477019,1,['clear'],['clear']
Usability,After positive feedback from user I merging this PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7885#issuecomment-841061484:15,feedback,feedback,15,https://root.cern,https://github.com/root-project/root/pull/7885#issuecomment-841061484,1,['feedback'],['feedback']
Usability,"After some investigation, it seems this issue is due to the priority level assigned to the two overloads. Specifically, the logic at https://github.com/root-project/root/blob/896940ef8c0936ad394a1cf6b98d1d8fbaabbfff/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L408-L412. seems to aim at assigning higher priority to class types that have a deeper inheritance chain. In the reproducer above, this should translate to class `B` having priority 1 (because it has 1 base class `A`) and class `C` having priority 2 (because it has 2 base classes `A,B`). The function this logic relies on ([GetNumBases](https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1212)) in turn calls [TClass::GetListOfBases](https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/core/meta/src/TClass.cxx#L3620) which does not return all the bases in the full inheritance chain of the class, rather just the direct bases of a class. So in this case:; ```; >>> import ROOT; >>> ROOT.gInterpreter.Declare(; ... '''; ... class A {};; ... class B: public A {};; ... class C: public B {};; ... '''); True; >>> c = ROOT.TClass.GetClass(""C""); >>> b = ROOT.TClass.GetClass(""B""); >>> len(c.GetListOfBases()); 1; >>> len(b.GetListOfBases()); 1; ```. In this case, if TClass:GetListOfBases returned a list of size 2 for class `C`, the correct overload would get assigned a higher priority and thus would be chosen at runtime. There is no clear general solution, but it is worth highlighting the cause of the issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8817#issuecomment-897023454:1533,clear,clear,1533,https://root.cern,https://github.com/root-project/root/issues/8817#issuecomment-897023454,1,['clear'],['clear']
Usability,"Ah that makes sense. Extending the defintion of strings to add metadata to paths (globbing, the `#` syntax in `TFile::Open`, ...) is always going to be error prone. > but probably we want to have a more authoritative list of all the tokens that should make the file name not be parsed as a glob. This feels like an impossible task to define. Maybe a simplier solution would be to not support `?` when globbing and only apply globbing to the text before the query string? Or maybe just have a dedicated method (or argument type) for creating a RDataFrame from a glob rather than relying on huristics?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16475#issuecomment-2366982360:350,simpl,simplier,350,https://root.cern,https://github.com/root-project/root/issues/16475#issuecomment-2366982360,1,['simpl'],['simplier']
Usability,"Ah, no, actually that first part can also be non-increasing, for instance if the reception of tasks on the queue for some reason pauses half way through, so e.g. you could get:; 1 [ reception pauses on queue here ]; 0 [ reception continues now, 2 comes in ]; 2 [ while executing 2, everything else is received ]; 9; 8; 7; 6; ... And that is still valid. I will just push one more update with a refactoring to not have this complicated expectation correction code duplicate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11627#issuecomment-1330826120:129,pause,pauses,129,https://root.cern,https://github.com/root-project/root/pull/11627#issuecomment-1330826120,2,['pause'],['pauses']
Usability,"Ah, one more thing before merging: could you perhaps squash your two commits? Unless there's a clear motivation to keep them separate, but it appears to be both are related to schema compliance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14690#issuecomment-1943375342:95,clear,clear,95,https://root.cern,https://github.com/root-project/root/pull/14690#issuecomment-1943375342,1,['clear'],['clear']
Usability,"Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The GL geometry viewer allows ""picking"" the center of view for a drawn geometry. This is not working correctly on Mac.; In a different context: TGeo ray-tracing relies on pixel-to-model coordinates conversion to create rays in the model coordinate system for each viewport pixel and then intersect the model. The ray-traced image on mac shows ""gaps"" (see below) compared to the Linux version, likely due to an unaccounted screen scaling factor. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; In the GL geometry viewer, the tab ""Guides/Camera center"" allows to ""Pick center"" with the mouse, which will change the default center of view to the 2D mouse coordinates of the clicked point on the 3D coordinates of the drawn model. The ""depth"" is chosen such that the point on the drawn object surface below the mouse is picked. For ray-tracing, expect a correct ""solid"" drawing of the drawn volume. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Run the macro `$ROOTSYS/tutorials/geom/rootgeom.C; root[0] gGeoManager->GetVolume(""R"")->Draw(""ogl"");; Rotate the drawn ""R"", then go to tab ""Guides"" and select [Camera center]/Show; A marker should appear in the default center of view.; Now click on ""Pick center"", then click somewhere on the drawn letter ""R""; On linux, the center of view moves on the surface of ""R"" just below the mouse, and you can freely rotate about this; O",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12035:1038,Guid,Guides,1038,https://root.cern,https://github.com/root-project/root/issues/12035,1,['Guid'],['Guides']
Usability,"All columns created during late model extension need to have their page and column ranges synthesized during reading. However, only *deferred* columns (i.e., principal columns of top-level fields) also require zero pages. This change aims to make this distinction more clear. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15786:269,clear,clear,269,https://root.cern,https://github.com/root-project/root/pull/15786,1,['clear'],['clear']
Usability,"All comments above have been implemented, the code simplified and better commented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2518#issuecomment-426547221:51,simpl,simplified,51,https://root.cern,https://github.com/root-project/root/pull/2518#issuecomment-426547221,1,['simpl'],['simplified']
Usability,All feedback integrated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3746#issuecomment-487528334:4,feedback,feedback,4,https://root.cern,https://github.com/root-project/root/pull/3746#issuecomment-487528334,1,['feedback'],['feedback']
Usability,"All green now, besides an unrelated failure that @egpbos should learn about",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15376#issuecomment-2099245931:64,learn,learn,64,https://root.cern,https://github.com/root-project/root/pull/15376#issuecomment-2099245931,1,['learn'],['learn']
Usability,All this circling to end up with a simplified TPoolManager,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5582#issuecomment-638329846:35,simpl,simplified,35,https://root.cern,https://github.com/root-project/root/pull/5582#issuecomment-638329846,1,['simpl'],['simplified']
Usability,"Allow Book to be used with RDataFrame without explicitly specifying the column types. This re-uses as much as possible the machinery which was already in place to do this for Fill, Histo1D, etc. Template overloads are also simplified for Fill, which allows the jitted version at least to be called from python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630:223,simpl,simplified,223,https://root.cern,https://github.com/root-project/root/pull/7630,1,['simpl'],['simplified']
Usability,Allow the training to be done multiple times for the BDT by setting a flag to false.; Clear the methods map in VariableImportance to allow for the next training to be made.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/286:86,Clear,Clear,86,https://root.cern,https://github.com/root-project/root/pull/286,1,['Clear'],['Clear']
Usability,"Along the way, this PR removes the `RFieldFuse` helper class. Instead, the RField class knows its field ID where available. This simplifies connecting fields to a page storage and gives the process more flexibility. The PR also adds an `RRecordField` for untyped `struct`s. @mxxo That should fix the problem you saw with NanoAOD printing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7341:129,simpl,simplifies,129,https://root.cern,https://github.com/root-project/root/pull/7341,1,['simpl'],['simplifies']
Usability,"Alright, I think I understand what's going on (even though it's not fully clear to me why the story changes to an error in C++20): `REntry::GetPtr<T>` instantiates `RField<T>::TypeName()` to check the type name and despite the `if constexpr (std::is_void_v<T>)` check, it seems the compiler does ""something"" with `RField<void>`. In this PR, as mentioned above, the base class destructor changes to `virtual ~RFieldBase() = default;` in the header so the compiler sees it and apparently tries to instantiate also `GenerateValue`. There are a couple of solutions: First we can move `~RFieldBase()` back into the source file:; ```diff; diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx; index deb9d5f4a3..cd0b5dd89e 100644; --- a/tree/ntuple/v7/inc/ROOT/RField.hxx; +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx; @@ -570,7 +570,7 @@ public:; RFieldBase(RFieldBase&&) = default;; RFieldBase& operator =(const RFieldBase&) = delete;; RFieldBase& operator =(RFieldBase&&) = default;; - virtual ~RFieldBase() = default;; + virtual ~RFieldBase();; ; /// Copies the field and its sub fields using a possibly new name and a new, unconnected set of columns; std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;; diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx; index ef04fec76c..41d4962ac5 100644; --- a/tree/ntuple/v7/src/RField.cxx; +++ b/tree/ntuple/v7/src/RField.cxx; @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi; {; }; ; +ROOT::Experimental::RFieldBase::~RFieldBase(); +{; +}; +; std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const; {; std::string result = GetFieldName();; ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:; ```diff; diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx; index 1f3ec47095..b7b70b24cb 100644; --- a/tree/ntuple/v7/inc/ROOT/RE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14468#issuecomment-1916371964:74,clear,clear,74,https://root.cern,https://github.com/root-project/root/pull/14468#issuecomment-1916371964,1,['clear'],['clear']
Usability,"Alright, I'm building a simpler reproducer then! Good to have one anyway for a unit test. Strange, at least getting a pointer to the workspace works for me also without the ATLAS RooFit extensions (indeed, the workspace contains some custom ATLAS classes)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1085634160:24,simpl,simpler,24,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1085634160,1,['simpl'],['simpler']
Usability,"Alright, issue was cleared by @etejedor and I was able to put in a test that works around it.; I think this can be merged if jenkins is green.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1857#issuecomment-381656522:19,clear,cleared,19,https://root.cern,https://github.com/root-project/root/pull/1857#issuecomment-381656522,1,['clear'],['cleared']
Usability,"Alright, so the only test failing is `roottest/dataframe/test_glob.C`. It is not clear to me why the interpreter does not find methods like `TDataFrameImpl::Book`. Changing roottest to pass `test_glob.C+` rather than `test_glob.C` solves the problem on my machines. That is actually how the other macros are processed in `roottest/root/dataframe`. I am not sure whether this is expected behavior, so I am not sure how to proceed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/423#issuecomment-286704453:81,clear,clear,81,https://root.cern,https://github.com/root-project/root/pull/423#issuecomment-286704453,1,['clear'],['clear']
Usability,"Alright, thank you very much! That's very nice you chose ROOT to contribute to!. If you need any guidance on what you could help with, just ask me. Sometimes it's not easy to find the issues that are actually easy to work on, as the code is quite complex. Are you looking only Python-related issues, or would you also be interested in doing some C++ contributions to beef up your C++ skills and experience?. As for this PR, I'll merge it if the CI bot tests pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10853#issuecomment-1170576376:97,guid,guidance,97,https://root.cern,https://github.com/root-project/root/pull/10853#issuecomment-1170576376,1,['guid'],['guidance']
Usability,"Alright, thanks again for the feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12653#issuecomment-1507275282:30,feedback,feedback,30,https://root.cern,https://github.com/root-project/root/issues/12653#issuecomment-1507275282,1,['feedback'],['feedback']
Usability,"Alright, thanks for all the details and clarifications. Let me try to bring this PR a conclusion.; The original question was: is it right, at least for the usecases of the function `GetFriendInfo`, to retrieve the name of any friend chain via the following?; ```; const auto *realName = chainFiles->First()->GetName();; ```; Let me try to make (simple) examples of tree/chain friends and how RDataFrame deals with them. Let's say my final goal is to have this dataset. | parent.x | friend.x |; |----------|----------|; | 0 | 0 |; | 1 | 1 |; | 2 | 2 |; | 3 | 3 |; | 4 | 4 |; | 5 | 5 |; | 6 | 6 |; | 7 | 7 |; | 8 | 8 |. I can do that through:; 1. Two TTrees, each with 9 entries, each saved to one single file.; 2. Two TChains, each chain has 9 total entries, each chain is made of three files, each file has internally one TTree with 3 entries.; 3. One TTree with 9 entries saved to one file, plus one TChain with 9 total entries, three files each with a TTree with 3 entries. In each scenario I will create the datasets, read the files back, add one of the two datasets as a friend to the other. Finally, I will try to print the columns both with `TTree::Print` and rdf's `Display`. Plus, I will also use `TTree::Scan` to get more information on the internal structure of the tree and its friend. # Case 1; This is the code I use to recreate the scenario. ```cpp; void write_tree(std::string_view filename, std::string_view treename); {; int x{};. TFile file{filename.data(), ""recreate""};; TTree tree{treename.data(), ""test friend trees""};; tree.Branch(""x"", &x, ""x/I"");. for (int i = 0; i < 9; i++); {; x = i;; tree.Fill();; }; tree.Write();; }; ; int main(){; write_tree(""treeparent.root"", ""treeparent"");; write_tree(""treefriend.root"", ""treefriend"");; TFile parentfile{""treeparent.root"", ""read""};; TFile friendfile{""treefriend.root"", ""read""};. std::unique_ptr<TTree> parenttree{parentfile.Get<TTree>(""treeparent"")};; std::unique_ptr<TTree> friendtree{friendfile.Get<TTree>(""treefriend"")};. parenttree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-816500613:345,simpl,simple,345,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-816500613,1,['simpl'],['simple']
Usability,"Alright, thanks for all the feedback! I think that it will be better to break this PR into smaller pieces, so I will close this one, rework the commits according to the feedback received, and push new PRs soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/709#issuecomment-313038913:28,feedback,feedback,28,https://root.cern,https://github.com/root-project/root/pull/709#issuecomment-313038913,2,['feedback'],['feedback']
Usability,"Also I am confused about the fact that `TBranch::GetEntriesSerialized` will simply ignore destructive DeserializeType as well. ```; 1512 if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {; 1513 Error(""GetEntriesSerialized"", ""Encountered a branch with destructive deserialization; failing.\n"");; 1514 return -1;; ```. so my question remains: how can I bulk read a bunch of `int`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520#issuecomment-703566990:76,simpl,simply,76,https://root.cern,https://github.com/root-project/root/issues/6520#issuecomment-703566990,1,['simpl'],['simply']
Usability,"Also libc++ has a noexcept __cxa_atexit, see https://root-forum.cern.ch/t/libc-issue-on-linux/52433 . Simple ask the compiler.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12047:102,Simpl,Simple,102,https://root.cern,https://github.com/root-project/root/pull/12047,1,['Simpl'],['Simple']
Usability,"Also simplify LinkDef.h file for TGraph2DPainter.; One can use ClassDef(TGraph2DPainter,0) to avoid complication by dictionary generation.; Class is not intend to be stored in the ROOT file",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4954:5,simpl,simplify,5,https://root.cern,https://github.com/root-project/root/pull/4954,1,['simpl'],['simplify']
Usability,Also simply running `rline.cxx` macro in the docker also works.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14750#issuecomment-1953657976:5,simpl,simply,5,https://root.cern,https://github.com/root-project/root/pull/14750#issuecomment-1953657976,1,['simpl'],['simply']
Usability,"Am skeptical this could ever have worked even in older releases, because looking at the code I see the method ""MakeSingleChannelWorkspace"" where the measurement object is passed, and therefore it is assuming any parameter in the constant list *must* be present in the channel???. Tomas do you get the same error message about ""cannot find the variable"" in 6.28, but it succeeds? It might be blind luck that it did. . If so the fix is a simple one to just skip over said variable if its not found in the channel.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14225#issuecomment-1858155447:436,simpl,simple,436,https://root.cern,https://github.com/root-project/root/issues/14225#issuecomment-1858155447,1,['simpl'],['simple']
Usability,"Amadio: I removed const and variable name in catches when just rethrowing the initial exception.; About splitting the patch, I don't know how to do this simply without redoing the whole stuff.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1435#issuecomment-350868297:153,simpl,simply,153,https://root.cern,https://github.com/root-project/root/pull/1435#issuecomment-350868297,1,['simpl'],['simply']
Usability,"An attempt to make Vary() documentation more clear and consistent (given we have 11 overloads) and up to date, as requested on the forum. . I built the website locally to check if everything looks ok.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14437:45,clear,clear,45,https://root.cern,https://github.com/root-project/root/pull/14437,1,['clear'],['clear']
Usability,"An even simpler example which doesn't depend on RDF:. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper); print(res); ```. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. Output (again with centos stream 8, root 6.26/10):; ```; declare ret True; creating helper; IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'!; You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const; Maybe you need to load the corresponding shared library?; 18446744073709551615; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854#issuecomment-1341802449:8,simpl,simpler,8,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1341802449,1,['simpl'],['simpler']
Usability,"And also, apologies for this, should we rename TCutInfo to RCutInfo before making it writeable? I think we simply forgot to rename that ancillary class when TDataFrame was renamed into RDataFrame...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14833#issuecomment-1965918042:107,simpl,simply,107,https://root.cern,https://github.com/root-project/root/pull/14833#issuecomment-1965918042,1,['simpl'],['simply']
Usability,"And for this I think the problem is ""just"" the checks on ```TClass::IsLoaded()``` at. https://github.com/root-project/root/blob/702e1ee22ce472508d0ab2de7f51b85e6613b55d/io/io/src/TStreamerInfo.cxx#L384; https://github.com/root-project/root/blob/702e1ee22ce472508d0ab2de7f51b85e6613b55d/io/io/src/TStreamerInfo.cxx#L580; https://github.com/root-project/root/blob/702e1ee22ce472508d0ab2de7f51b85e6613b55d/io/io/src/TStreamerInfo.cxx#L592. Since the state of the TClass object is ```kInterpreted``` in this case. Not sure what the best solution here is. On the one hand being able to persist interpreted classes is extremely useful (especially for the case of templates which are only instantiated from PyROOT), but it's also clear that one can shoot themselves in the foot here if the interpreted class changes in a way that breaks the IO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9371#issuecomment-997467808:723,clear,clear,723,https://root.cern,https://github.com/root-project/root/issues/9371#issuecomment-997467808,1,['clear'],['clear']
Usability,"And maybe @couet can give feedback too, since this is related to hbook/PAW (if I remember correctly)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1643#issuecomment-366731539:26,feedback,feedback,26,https://root.cern,https://github.com/root-project/root/pull/1643#issuecomment-366731539,1,['feedback'],['feedback']
Usability,"And one more thing: if it's not hard for users, maybe a recipe could be added to THtml (or to the page with all reference guides) on how to generate ROOT documentation using `doxygen`?; UPD: found the recipe https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7295#issuecomment-787077972:122,guid,guides,122,https://root.cern,https://github.com/root-project/root/issues/7295#issuecomment-787077972,1,['guid'],['guides']
Usability,And refactor the code to make it clearer and ready to accommodate cheaply new cases if needed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2753:33,clear,clearer,33,https://root.cern,https://github.com/root-project/root/pull/2753,1,['clear'],['clearer']
Usability,And simplify the code whenever possible.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1884:4,simpl,simplify,4,https://root.cern,https://github.com/root-project/root/pull/1884,1,['simpl'],['simplify']
Usability,And we need some feedback on performance of this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1242#issuecomment-344890377:17,feedback,feedback,17,https://root.cern,https://github.com/root-project/root/pull/1242#issuecomment-344890377,1,['feedback'],['feedback']
Usability,"And what about something simpler and faster to execute (no need for a TGraph2D) moreover with this new version the peaks appears much better on the 3D view. ```; /// \file; /// \ingroup tutorial_graphics; /// \notebook; /// Plot the Amplitude of a Hydrogen Atom.; ///; /// Visualize the Amplitude of a Hydrogen Atom in the n = 2, l = 0, m = 0 state.; /// Demonstrates how TH2F can be used in Quantum Mechanics.; ///; /// \macro_image; /// \macro_code; ///; /// \author Advait Dhingra. #include <cmath>. double WaveFunction(double x, double y) {; double r = sqrt(x *x + y*y);. double w = (1/pow((4*sqrt(2*TMath::Pi())* 1), 1.5)) * (2 - (r / 1)*pow(TMath::E(), (-1 * r)/2)); // Wavefunction formula for psi 2,0,0. return w*w; // Amplitude. }. void schroedinger_hydrogen() {; TH2F *h2D = new TH2F(""Hydrogen Atom"",; ""#Psi^{2}_{200} i.e. n = 2, l = 0, m = 0; Position in x direction; Position in y direction"",; 200, -10, 10, 200, -10, 10);. for (float i = -10; i < 10; i += 0.01) {; for (float j = -10; j < 10; j += 0.01) {; h2D->Fill(i, j, WaveFunction(i, j));; }; }. gStyle->SetPalette(kCividis);; gStyle->SetOptStat(0);. TCanvas *c1 = new TCanvas(""c1"", ""Schroedinger's Hydrogen Atom"", 1500, 750);; c1->Divide(2, 1);. auto c1_1 = c1->cd(1);; c1_1->SetRightMargin(0.14);; h2D->GetXaxis()->SetLabelSize(0.03);; h2D->GetYaxis()->SetLabelSize(0.03);; h2D->GetZaxis()->SetLabelSize(0.03);; h2D->SetContour(50);; h2D->Draw(""colz"");. TLatex *l = new TLatex(-10, -12.43, ""The Electron is more likely to be found in the yellow areas and less likely to be found in the blue areas."");; l->SetTextFont(42);; l->SetTextSize(0.02);; l->Draw();. auto c1_2 = c1->cd(2);; c1_2->SetTheta(42.);. TH2D *h2Dc = (TH2D*)h2D->Clone();; h2Dc->SetTitle(""3D view of probability amplitude;;"");; h2Dc->Draw(""surf2"");; }; ```. If you agree I let you commit this new version. I made several cosmetics changes also.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7801#issuecomment-816540524:25,simpl,simpler,25,https://root.cern,https://github.com/root-project/root/pull/7801#issuecomment-816540524,1,['simpl'],['simpler']
Usability,"And what we've learned from the past 15 years: ""modularization"" means 100 different things, and not the same for any pair of people talking about it :-) Which is why I use the term ""lazy building"" for your ""build parts of ROOT later"" and you could use ""libdep"" or ""builddep"" for reducing or fixing/formalizing the library or build dependencies. Or ""incldep"" for header/including dependencies. Just a couple of ideas, I'm not suggesting that you should follow them (this is not a PR review)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2425#issuecomment-410166279:15,learn,learned,15,https://root.cern,https://github.com/root-project/root/pull/2425#issuecomment-410166279,1,['learn'],['learned']
Usability,"And when building with gcc and only asan like:; ```; cmake -DCMAKE_BUILD_TYPE=""Release"" -Dasan=ON -Dtesting=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 /home/linev/git/webgui ; ```; I getting failure by simply starting ROOT: . ```; ==11405==ERROR: AddressSanitizer: use-after-poison on address 0x621000160c68 at pc 0x7fae6dbe9aa1 bp 0x7fff179941b0 sp 0x7fff179941a8; READ of size 8 at 0x621000160c68 thread T0; #0 0x7fae6dbe9aa0 in clang::LookupResult::configure() (/home/linev/build/asan/lib/libCling.so+0x9be9aa0) (BuildId: b992d84f780d9cdfaac57feecd814f7d11e56300); #1 0x7fae66c6d0ec in clad::plugin::CladPlugin::CheckBuiltins() [clone .part.0] (/home/linev/build/asan/lib/libCling.so+0x2c6d0ec) (BuildId: b992d84f780d9cdfaac57feecd814f7d11e56300); ```. Full error output: [start_log.txt](https://github.com/root-project/root/files/10519690/start_log.txt)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11629#issuecomment-1406573290:199,simpl,simply,199,https://root.cern,https://github.com/root-project/root/issues/11629#issuecomment-1406573290,1,['simpl'],['simply']
Usability,"Another ""simple"" approach to compile ROOT is specify `-Droot7=OFF`. This will disable eve7 compilation which has such problem with forward declarations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1218228421:9,simpl,simple,9,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1218228421,1,['simpl'],['simple']
Usability,"Another minor related point:; ```; - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);; + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);; ```; I guess this gives us what, a TH1F*? (auto doesn't add clarity); Isn't it better to use the base class?; ```; TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);; ```; assuming that works, or if not, this does:; ```; unique_ptr<TH1> test; ; void the_routine () {; //...; test.reset(new TH1F());; }; ```; This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-789295272:693,clear,clear,693,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-789295272,1,['clear'],['clear']
Usability,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:; ```cpp; template <typename T>; int some_template_function(const T &x) {; return x.size();; }; ```. test.py:; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()); print(""res0"", res0). res1 = ROOT.some_template_function(0.0); print(""res1"", res1); ```. output:; ```; declare ret True; res0 0; Traceback (most recent call last):; File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>; res1 = ROOT.some_template_function(0.0); TypeError: Template method resolution failed:; int ::some_template_function(const vector<double>& x) =>; TypeError: could not convert argument 1; Failed to instantiate ""some_template_function(double)""; ```; ; Compare to the same in c++ ; ```; #include ""test.h"". const int res = some_template_function(0.0);; ```; ; Then the output of clang++ with nice error message is:; ```; In file included from test.cpp:1:; ./test.h:3:11: error: member reference base type 'const double' is not a structure or union; return x.size();; ~^~~~~; test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here; const int res = some_template_function(0.0);; ^; 1 error generated.; ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854#issuecomment-1410720055:13,simpl,simple,13,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1410720055,1,['simpl'],['simple']
Usability,Any feedback? @oshadura @bbockelm @pcanal @Axel-Naumann,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4037#issuecomment-508253313:4,feedback,feedback,4,https://root.cern,https://github.com/root-project/root/pull/4037#issuecomment-508253313,1,['feedback'],['feedback']
Usability,Any further feedback on this PR ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9629#issuecomment-1040393898:12,feedback,feedback,12,https://root.cern,https://github.com/root-project/root/pull/9629#issuecomment-1040393898,1,['feedback'],['feedback']
Usability,"Any plan when this can be addressed, at least for v6-26-00-patches? The LCG nightlies are not very usable at the moment.; Can I suggest to revet the patch for v6-26-00-patches and re-port it when it is fixed on the master ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1017324188:99,usab,usable,99,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1017324188,1,['usab'],['usable']
Usability,"Apologies for joining the party only after it's over. My opinion:. `ptr` is fine because I don't see how (regular) people would notice / care *when* the cost occurs, this should be opaque to them. If they ever notice, they can be told and learn. `TTree::Draw()` sort of suffers from a similar mismatch of interface announcement (""register in the pad"") and runtime cost that `ptr` has in this case. And we survived. I find the argument convincing that `ptr`, unlike `handle`, conveys the usage: `handle` often means ""opaque thing that you don't know what to do with but someone else will"" and is thus not very helpful for interfaces. I find the usage cost for separating trigger and value access too high.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1855#issuecomment-381906840:239,learn,learn,239,https://root.cern,https://github.com/root-project/root/pull/1855#issuecomment-381906840,1,['learn'],['learn']
Usability,"Apologies for making this an annoying bug report :cry:, ; but I unfortunately, so far, wasn't able to create a small self-contained reproducer that triggers the bug. . But with LCG_99 and the following snippet I can at least show the problem. ; ```py; import cppyy; cppyy.cppdef(r""""""; using vec = SmartRefVector<DataObject>;; using ref = SmartRef<DataObject>;; """"""). vec = cppyy.gbl.vec(); ref = cppyy.gbl.ref(); vec.push_back(ref); vec.size(); print(vec[0]); print(vec.at(0)); ```. Running:; ```shell; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh; python test.py; ```; will print: ; ```; <cppyy.gbl.SmartRefVector<DataObject> object at 0x83e0f00>; <cppyy.gbl.SmartRef<DataObject> object at 0xcf6b7c0>; ```. If you try the same on an older ROOT version e.g. with LCG_97a (`source /cvmfs/sft.cern.ch/lcg/views/LCG_97a/x86_64-centos7-gcc9-opt/setup.sh`), this will print:; ```; <ROOT.SmartRef<DataObject> object at 0xaac7ac0>; <ROOT.SmartRef<DataObject> object at 0xaac7ac0>; ```. So in ROOT 6.22 the `operator[]` in python somehow doesn't work correctly for this class.; Now as I said, I wish I could have provided an easier reproducer, and I'll have another go at it tomorrow, but for now this is the best I could come up with. ; The `SmartRefVector` is part of the `Gaudi` project and can be found [here](https://gitlab.cern.ch/gaudi/Gaudi/-/blob/master/GaudiKernel/include/GaudiKernel/SmartRefVector.h). ; I've tried creating a simplified version of the `SmartRefVector`, but that didn't exhibit the same problem so it's apparently not as simple as blaming it on the inheritance on `std::vector` which of course isn't ideal... :see_no_evil:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7179:1462,simpl,simplified,1462,https://root.cern,https://github.com/root-project/root/issues/7179,2,['simpl'],"['simple', 'simplified']"
Usability,"Apparently xrootd 5.3.1 have a different sha256 hash (not clear how it could happened or if maybe in PR I was using old). Failure was detected on centos8 rootbench machine (https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/):; ```; -- verifying file...; file='/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz'; -- SHA256 hash of; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz; does not match expected value; expected: '1194ba435dc1e243f3cdb8273f6385407183799faf7622a582a828f4aff6807d'; actual: '0800b4c6444591a6514c5b81b2c4c79439875136ab2267ce4bed99cb94ead6e6'; -- Hash mismatch, removing...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9103:58,clear,clear,58,https://root.cern,https://github.com/root-project/root/pull/9103,1,['clear'],['clear']
Usability,"Apparently, this is due to a flaw in the implementation of `RColumn::AppendV()` (whose only current user seems to be `RField<std::string>`). The following simple excerpt reproduces the problem:; ```c++; auto model = RNTupleModel::Create();; auto str = model->MakeField<std::string>(""str"");. RNTupleWriteOptions options;; options.SetApproxUnzippedPageSize(16);; {; auto ntuple = RNTupleWriter::Recreate(std::move(model), ""ntuple"", ""/tmp/out.ntuple"", options);; *str = ""01234567890123456789012"";; ntuple->Fill();; *str = ""012"";; ntuple->Fill();; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12742#issuecomment-1529137927:155,simpl,simple,155,https://root.cern,https://github.com/root-project/root/issues/12742#issuecomment-1529137927,1,['simpl'],['simple']
Usability,"Apply [D41416](https://reviews.llvm.org/D41416) to reduce template specialization deserializations. This patch decreases the memory footprint of root startup by approx 17%. We deserialize 2 times less record types. See details [here](https://www.diffchecker.com/L2m1FE76). We cannot land D41416 in clang's trunk because in essence it replaces a liner algorithm with a quadratic one. We see the compilation time being approx 2 times slower clearly in one of the Google modules builds with approx 1000 modules with a lot of lazy specializations. While I am working on a better version of this patch, land it in our codebase because we do not have such extreme usage scenarios (yet?).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1526:439,clear,clearly,439,https://root.cern,https://github.com/root-project/root/pull/1526,1,['clear'],['clearly']
Usability,"Applying the patch causes a crash when cloning a `THnD`. Here is a simple code reproducing this:; ```; int bins[] = {10}; double xmin[] = {0}; double xmax[] = {10}; ; auto h = new THnD(""h"",""h"",1,bins,xmin,xmax);; h->Sumw2();; h->Clone();; ```. @pcanal , any idea what could be the problem ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11409#issuecomment-1255079351:67,simpl,simple,67,https://root.cern,https://github.com/root-project/root/pull/11409#issuecomment-1255079351,1,['simpl'],['simple']
Usability,"Are you talking about JSROOT or ROOT itself? And if it is ROOT, would that be really simpler than a single self-extracting executable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7012#issuecomment-759308690:85,simpl,simpler,85,https://root.cern,https://github.com/root-project/root/issues/7012#issuecomment-759308690,1,['simpl'],['simpler']
Usability,"As @jalopezg-git mentioned, bool(foo) appears as a declaration (bool foo). The following simple C++ code also fails to compile with a re-declaration error and I think that should be the expected behavior.; ```C++; #include<iostream>; int main() {; int i = 54;; bool(i);; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8304#issuecomment-1943877354:89,simpl,simple,89,https://root.cern,https://github.com/root-project/root/issues/8304#issuecomment-1943877354,1,['simpl'],['simple']
Usability,"As I pointed out in https://sft.its.cern.ch/jira/browse/ROOT-7567?focusedCommentId=108747&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-108747 :. > we should keep ROOT7 graphics open enough for people to be able to write it themselves if they wish. Given that there is no way we will do this (we don't have the resources and this is simply not important enough) I'd suggest we close this?. That hasn't changed, which only leaves [this](https://sft.its.cern.ch/jira/browse/ROOT-7567?focusedCommentId=109658&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-109658) open for @linev . > Just to help potential users interested in implementing this drawing option, could you tell us in which classes the drawing is done in ROOT7?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6682#issuecomment-713430893:365,simpl,simply,365,https://root.cern,https://github.com/root-project/root/issues/6682#issuecomment-713430893,1,['simpl'],['simply']
Usability,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284#issuecomment-785870186:44,guid,guide,44,https://root.cern,https://github.com/root-project/root/issues/7284#issuecomment-785870186,5,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"As a completely anecdotical evidence, I have been running on the `root-ubuntu-2004-1` machine the distributed RDF test which used to fail, which included calls to DefinePerSample. After applying this patch, currently ~1800 iterations of the test passed without failures. ```; test_all.py::TestPropagateExceptions::test_runtime_error_is_propagated <- check_backend.py PASSED; test_all.py::TestDefinePerSample::test_definepersample_simple <- check_definepersample.py PASSED; test_all.py::TestDefinePerSample::test_definepersample_withinitialization <- check_definepersample.py PASSED; =============================== warnings summary ===============================; test_all.py::TestPropagateExceptions::test_runtime_error_is_propagated; /home/sftnight/vpadulan/rootproject/rootbuild/master-like-jenkins/lib/ROOT/_facade.py:154: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations; return _orig_ihook(name, *args, **kwds). test_all.py::TestPropagateExceptions::test_runtime_error_is_propagated; /usr/local/lib/python3.8/dist-packages/dask_jobqueue/core.py:20: FutureWarning: tmpfile is deprecated and will be removed in a future release. Please use dask.utils.tmpfile instead.; from distributed.utils import tmpfile. -- Docs: https://docs.pytest.org/en/latest/warnings.html; ==================== 3 passed, 2 warnings in 32.72 seconds =====================. Running test 1864; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13787#issuecomment-1744852013:1123,guid,guidance,1123,https://root.cern,https://github.com/root-project/root/pull/13787#issuecomment-1744852013,1,['guid'],['guidance']
Usability,"As a quick summary:; The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc; * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages; * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959#issuecomment-387726565:471,simpl,simple,471,https://root.cern,https://github.com/root-project/root/pull/1959#issuecomment-387726565,2,['simpl'],['simple']
Usability,"As a side note, C++ already has a notion of onload so another option could be for the user to simply use:; ```; int anyfunction( .... ) { ... }; int execthefunctonload = anyfunction();; ```; (and on-unload can also be done (using a class destructor for example) but requires a bit more scaffolding)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11299#issuecomment-1235433090:94,simpl,simply,94,https://root.cern,https://github.com/root-project/root/issues/11299#issuecomment-1235433090,1,['simpl'],['simply']
Usability,"As a side note, the feature of ""snapshot merging""/""peeping at results in the making"" is something we had already in the first implementation of TThreadedObject (see https://root.cern/doc/master/mt201__parallelHistoFill_8C.html). This was a rudimental building block, which needed the user to asynchronously invoke a method. I see this functionality as something quite interesting. In general, ""callbacks""/""hooks"" of different sorts are a fundamental piece of data processing frameworks of which TDF is de facto an example. I welcome this feature warmly, also when thinking about the direction we have taken with the datasource, which consists in giving users the possibility to customise the usage of TDF according to their needs - we provide a rocksolid platform to solve their problems in an optimised way. A Crazy (?) example: right now we would be able to:; - Write a datasource that reads measurements coming from an oscilloscope/simple detector; - TDF loops and processes these measurements; - Histograms are produced, among other kind of data, and shown while refreshing in real time; - A file with the data acquired and manipulated is produced",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331348710:935,simpl,simple,935,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331348710,1,['simpl'],['simple']
Usability,"As discussed in [ROOT-10409](https://sft.its.cern.ch/jira/browse/ROOT-10409), these accessors are very dangerous and aren't backed by a clear use case right now. Therefore, @Axel-Naumann and I think it's best to just remove them for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4708:136,clear,clear,136,https://root.cern,https://github.com/root-project/root/pull/4708,1,['clear'],['clear']
Usability,"As discussed with @Axel-Naumann, in the interest of more concise RNTuple tutorials this PR removes the ifdef around `R__LOAD_LIBRARY`. The library is simply always loaded.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6149:150,simpl,simply,150,https://root.cern,https://github.com/root-project/root/pull/6149,1,['simpl'],['simply']
Usability,"As explained in 85c5cb4e3f, it was planned to make the RooFitDriver a public class to greatly improve the developer experience when working on the GPU backend of RooFit. Before, it was only possible to use the GPU backend in the likelihood evaluation, and with this commit it can be used from any context. This makes it possible to run the script listed in the description of PR #13389. To be more clear in what the new class does, which is purely focusing on the evaluation of computation graphs, it got renamed from RooFitDriver to `RooFit::Evaluator`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13530:398,clear,clear,398,https://root.cern,https://github.com/root-project/root/pull/13530,1,['clear'],['clear']
Usability,"As measured, there is an improvement if the expansion of `R__ASSERT()` is out of the inlined code path due to slighly more compact code.; Additionally, the `R__ASSERT(count > 0)` has been removed, given that `ClusterSize_t::ValueType` is an unsigned integral type. This was seen during the evaluation of the relative overhead of RField's post-read callbacks, which for reference I provide below. Two different tests were carried out: _(i)_ 4 fields of type `std::uint32_t`; and _(ii)_ 2 fields of type `std::uint32_t` + 2 fields of a user-defined struct, where:; - BASE refers to the current `master` with `RFieldBase::Read()` slightly changed to not support read callbacks.; - [1] refers to the current `master` + the changes in this PR; - [2] refers to the current `master` where `RFieldBase::InvokeReadCallbacks()` is also outlined by moving it to RField.cxx. All tests used a Release `-O3` build, 40M entries and 505 compression; results in $us$, averaged over 10 executions. _(i)_ 4 fields of type `std::uint32_t`:; ```; | Average | Rel. increase; ---------------------------+-----------+--------------; BASE | 871502.4 |; No callbacks [1] | 867523.1 | 0.9954; No callbacks [1][2] | 878027.7 | 1.0075; 1 callback | 1068704.3 | 1.2263; 2 callbacks | 1233821.7 | 1.4157; ```; _(ii)_ 2 fields of type `std::uint32_t` + 2 user-defined structs:; ```; | Average | Rel. increase; ---------------------------+-----------+--------------; BASE | 2500244.7 |; No callbacks [1] | 2688342.6 | 1.0752; No callbacks [1][2] | 2746363.6 | 1.0984; 1 callback | 2883271.0 | 1.1532; 2 callbacks | 3016407.0 | 1.2064; ```. As noted in test _(ii)_ for 'No callbacks [1]', non-simple fields have an overhead due to the additional branch. Still, the change in this PR is beneficial. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13487:1659,simpl,simple,1659,https://root.cern,https://github.com/root-project/root/pull/13487,1,['simpl'],['simple']
Usability,"As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed.; Example:; ```; root [0] gSystem->ListLibraries(""Core""); ; Loaded shared libraries; =======================; -----------------------; 0 libraries loaded; =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE); ; Loaded shared libraries; =======================; /Users/couet/git/couet-root-bin/lib/libCore.so; /Users/couet/git/couet-root-bin/lib/libMathCore.so; -----------------------; 2 libraries loaded; =======================; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11776:455,simpl,simple,455,https://root.cern,https://github.com/root-project/root/pull/11776,1,['simpl'],['simple']
Usability,"As noted in GitHub issue #7103, the interpolation code 3 is the same as code 2 in the `FlexibleInterpVar` and the `PiecewiseInterpolation` classes. According to some comments in the source code, interpolation code 3 was meant to be ""a parabolic version of log-normal"". There were two options to fix this:. 1) Actually implement this parabolic interpolation with linear; extrapolation, analogous to code 2 but in log space. 2) Clearly mark interpolation code 3 as non-existing. This commit implements solution 2, because the interpolation code 3 is not mentioned anywhere outside the ROOT source code. Especially not is the HistFactory paper:; https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf. Implementing a new interpolation scheme that apparently was not needed in the last 10 years anyway would increase the burden on the user to understand all these different settings unnecessarily. Closes #7103.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13809:426,Clear,Clearly,426,https://root.cern,https://github.com/root-project/root/pull/13809,1,['Clear'],['Clearly']
Usability,As per C++ core guidelines.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10849:16,guid,guidelines,16,https://root.cern,https://github.com/root-project/root/pull/10849,1,['guid'],['guidelines']
Usability,"As per a conversation with @jblomer on 16/11/2022 (and probably also related to https://github.com/root-project/root/pull/11628#discussion_r1023123773), it would be useful to provide a way for users to set a per-field callback function to be invoked after reading a value object. As an alternative to the (yet to be supported) manual schema evolution rules, this can be used as a simple way to inspect/modify the value object after reading. ### Describe the solution you'd like; Something similar to `RFieldBase::SetReadCallback(void (*)(RFieldValue&))` might be part of the `RFieldBase` public interface in order to allow users to set such callback.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11730:380,simpl,simple,380,https://root.cern,https://github.com/root-project/root/issues/11730,1,['simpl'],['simple']
Usability,"As per a conversation with @jblomer on 16/11/2022, and ROOT I/O meeting on 25/11/2022 (and probably also related to https://github.com/root-project/root/pull/11628#discussion_r1023123773), this pull request adds support for per field post-read callback functions to be invoked after reading a value object.; Such callbacks can be used to inspect/modify the value object after reading, e.g. to initialize transient members. The conclusion of a previous discussion is that we should not allow views on fields with a mappable type and that have a read callback.; The signature of a read callback function is; ```c++; void callback_func(RFieldValue &);; ```. ## Changes of fixes:; - Fields with a mappable type need to be distinguished from ""simple"" fields (i.e. those that have no additional actions after reading). Thus, the `kTraitMappable` trait is introduced in this PR; it is set for fields of fundamental types that can be directly mapped via `RField<T>::Map()`. These fields also map as-is to a single column.; The `fIsSimple` member now takes a different meaning: a field is simple if it is both mappable (i.e. kTraitMappable) and has no post-read callback.; - Read callbacks are managed via the _protected_ member functions `RFieldBase::{Add,Remove}ReadCallback()`.; - `RFieldBase::Read()` calls the read callbacks as appropriate. The fast path still only calls `fPrincipalColumn->Read()`.; Callbacks should be relatively rare; thus, the branch is marked as `R__unlikely()`, as it provides a small performance increase for non-mappable types that have no read callback.; - As discussed, views are disallowed on fields with a mappable type and a read callback. ## Experimental measurements; The overhead of the changes in this PR was measured in a synthetic test case. The schema is comprised of 4 fields of fundamental data types + 2 fields referring to user-defined `struct`s (containing 4 and 8 members of fundamental data types, respectively). The test program reads all fields across 10000k ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11731:738,simpl,simple,738,https://root.cern,https://github.com/root-project/root/pull/11731,1,['simpl'],['simple']
Usability,As reported in #7412. Most of them use of `strcpy` and nullptr in `strchr`; Also several unused variables removed; Simplify TFolder::FindObject,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7420:115,Simpl,Simplify,115,https://root.cern,https://github.com/root-project/root/pull/7420,1,['Simpl'],['Simplify']
Usability,"As reported in ROOT-9463, the result of GetColumnNames is redundant. A simple reproducer:; ```; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; int a;; t.Branch(""a"", &a);; a = 42;; t.Fill();; t.Write();; f.Close();; ROOT::RDataFrame df(""t"", ""f.root"");. for (auto x : df.GetColumnNames()); std::cout <<x <<std::endl;; ```. This redundancy is now not exposed to the user. **It would be nice** to have more tests on real use cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2443:71,simpl,simple,71,https://root.cern,https://github.com/root-project/root/pull/2443,1,['simpl'],['simple']
Usability,"As reported in [ROOT-10490](https://sft.its.cern.ch/jira/browse/ROOT-10490), the way we currently merge histogram statistics in `Add(RHist, RHist)` yields incorrect results. Following discussion with @Axel-Naumann, this PR proposes to resolve this problem by reducing the scope of histogram merging, only accepting the merging of histograms with the same axis configuration (more precisely with identical axis binning), which allows use of a much simpler statistics summation rule. Once accepted, it will resolve [ROOT-10490](https://sft.its.cern.ch/jira/browse/ROOT-10490). cc @rete",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4974:447,simpl,simpler,447,https://root.cern,https://github.com/root-project/root/pull/4974,1,['simpl'],['simpler']
Usability,"As said in the forum, this can be reproduced doing a simple zoom on the X axis of a THStack plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6991#issuecomment-755354821:53,simpl,simple,53,https://root.cern,https://github.com/root-project/root/issues/6991#issuecomment-755354821,1,['simpl'],['simple']
Usability,"As said in this old forum post https://root-forum.cern.ch/t/thstack-th2-with-negative-values/16161/5, stacking a histogram with negative bin content does not make sense. This issue is not relevant https://github.com/root-project/root/issues/15740. But it is goo to make it clear in the documentation and to prevent adding such histograms in a stack. That's what this PR is doing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15766:273,clear,clear,273,https://root.cern,https://github.com/root-project/root/pull/15766,1,['clear'],['clear']
Usability,"As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:; ```; if (fPrimitives); fPrimitives->Clear();; if (fView) {; if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;; fView = nullptr;; }; if (fFrame) {; if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;; fFrame = nullptr;; }; ```; is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11747:120,Clear,Clear,120,https://root.cern,https://github.com/root-project/root/issues/11747,2,['Clear'],['Clear']
Usability,"As suggested by Philippe, there is no reason to have genData returning a const pointer, since the class ; contains non-const pointer to RooAbsData. ; I would go for the simplest solution and change the function to be . RooAbsData * RooMCStudy::genData	(Int_t 	sampleNum	)	const. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1721#issuecomment-375732063:169,simpl,simplest,169,https://root.cern,https://github.com/root-project/root/pull/1721#issuecomment-375732063,1,['simpl'],['simplest']
Usability,As suggested here: https://root-forum.cern.ch/t/root-reference-guide-broken/45741,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8627:63,guid,guide-broken,63,https://root.cern,https://github.com/root-project/root/pull/8627,1,['guid'],['guide-broken']
Usability,"As the current path for the reference guide would be ""/doc/v624/..."", there needs to be an extra ""v"" in the constructed path for the reference document.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8025:38,guid,guide,38,https://root.cern,https://github.com/root-project/root/pull/8025,1,['guid'],['guide']
Usability,"As there is one RLoopManager per computation graph, when aliases; were managed by RLoopManager they were computation-graph-wide.; It is desirable to make Alias definitions behave coherently with; Defines instead, i.e. have Aliases be only accessible in the branch; of the computation graph in which they were defined, and only in; nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph; branch, not globally"". In particular, in this commit:; - move alias management from RLoopManager to RBookedColumns; - remove alias-managing logic from RLoopManager; - refactor several functions so they only take RBookedColumns as input; rather than a list of defined names plus a map of aliases; (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,; GetValidatedColumnNames, BookFilterJit, FindUsedColumns,; ParseRDFExpression); - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function; - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that; relied on this global definition of Aliases. We expect this to be an; exceedingly rare usecase, and if such code exists it will produce a; clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9496:1263,clear,clear,1263,https://root.cern,https://github.com/root-project/root/pull/9496,1,['clear'],['clear']
Usability,"As we saw this should not be needed; ruby was deprecated *for* 6.16, I simply failed to remove it properly in 362b7d82e7914d5bdbd93b505f21dca16b158d18. I suggest we close this, and we create a PR that rips out the remainders of ruby?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3133#issuecomment-445264677:71,simpl,simply,71,https://root.cern,https://github.com/root-project/root/pull/3133#issuecomment-445264677,1,['simpl'],['simply']
Usability,Ask clang-format for feedback.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/367#issuecomment-290126485:21,feedback,feedback,21,https://root.cern,https://github.com/root-project/root/pull/367#issuecomment-290126485,1,['feedback'],['feedback']
Usability,"Assuming that `page_size` is a power of 2, the calculation of the base address of the page can be simplified and avoid a division. According to POSIX, either `MS_SYNC` or `MS_ASYNC` must be specified when calling `msync()`. Failure to include one of these flags will cause `msync()` to fail on some systems. When `msync()` returns -1, the pointer is only considered invalid when errno is set to `ENOMEM`. In principle, the other possible values for errno won't happen, but if they do, that should be considered an error, hence the assert condition needed an update. `EBUSY` shouldn't happen since we do not add `MS_INVALIDATE` to flags, and `EINVAL` shouldn't happen because we always pass a multiple of the page size to msync(). `EFAULT` is only used in Linux 2.4.18 and earlier instead of `ENOMEM`. See #4136 for more information.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4159:98,simpl,simplified,98,https://root.cern,https://github.com/root-project/root/pull/4159,1,['simpl'],['simplified']
Usability,"At some point we want people to migrate to the new iterators, becuase as Stephan showed in the past, they are also faster. As far as feedback goes, there is quite a long time to receive it. Now, we have about 1 year until the release of ROOT 6.32 where pro users will see the warnings in `master`, and then another year the warning would be in the released ROOT 6.32. The warning explicitly states that the legacy iterators will be removed in 6.34. So if this deprecation is really a problem, people will complain and we can ""un-deprecate"" if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14071#issuecomment-1816447278:133,feedback,feedback,133,https://root.cern,https://github.com/root-project/root/pull/14071#issuecomment-1816447278,1,['feedback'],['feedback']
Usability,"At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing; https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465; to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14061:230,usab,usable,230,https://root.cern,https://github.com/root-project/root/issues/14061,1,['usab'],['usable']
Usability,"At the time, it was not clear how to introduce the new interfaces for the expression of parallelism within ROOT. This is also why the effort started from within the `Experimental` namespace. As correctly underlined above, the class is not really used nor needed, and it's good that these changes were proposed: thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14856#issuecomment-1971063315:24,clear,clear,24,https://root.cern,https://github.com/root-project/root/pull/14856#issuecomment-1971063315,1,['clear'],['clear']
Usability,"Ater merging https://github.com/root-project/root/pull/8324, I verified that the memory increase as reported in this PR is gone. Both with the code from the initial post and also with the simple reproducer that I wrote.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9196#issuecomment-1092547617:188,simpl,simple,188,https://root.cern,https://github.com/root-project/root/issues/9196#issuecomment-1092547617,1,['simpl'],['simple']
Usability,"BTW, why doing this test ? we have something working with all bash versions, simply use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1081920556:77,simpl,simply,77,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1081920556,1,['simpl'],['simply']
Usability,"Back to an alternative... Myself, I do the following to find out whether a C++ class had an `operator[]`: https://github.com/wlav/CPyCppyy/blob/master/src/Pythonize.cxx#L38 , but it may not work for you as-is, b/c an important point of that code is to not search for `__getitem__` in base classes, which I think you do want. Maybe something much simpler would be something along these lines:. ```; import cppyy; import cppyy.types. cppyy.cppdef(""""""\; struct MyStruct1 {};; struct MyStruct2 {; int operator[](int) { return 42; }; };. #include ""CPyCppyy/API.h"". bool CheckSequence(PyObject* obj, PyObject* base) {; if (CPyCppyy::Instance_Check(obj)) {; PyObject* gi1 = PyObject_GetAttrString((PyObject*)Py_TYPE(obj), ""__getitem__"");; PyObject* gi2 = PyObject_GetAttrString(base, ""__getitem__"");; bool ret = gi1 && gi1 != gi2;; Py_XDECREF(gi2);; Py_XDECREF(gi1);; return ret;; }; return false;; }; """"""). print(cppyy.gbl.CheckSequence(cppyy.gbl.MyStruct1(), cppyy.types.Instance)); print(cppyy.gbl.CheckSequence(cppyy.gbl.MyStruct2(), cppyy.types.Instance)); ```. (Where you'd import `cppyy.types.Instance` on the C-side, not pass it as an argument, but this Q&D code was simpler.). This can be greatly simplified/sped up, by explicitly adding `op_getitem` as a method for `tp_as_sequence` and then do a straight-up pointer comparison. Can probably also expose it as a `CPyCppyy::Sequence_Check` in the API.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15161#issuecomment-2058191558:346,simpl,simpler,346,https://root.cern,https://github.com/root-project/root/issues/15161#issuecomment-2058191558,3,['simpl'],"['simpler', 'simplified']"
Usability,"Backporting some PRs to avoid test failures in the nightlies:; * https://github.com/root-project/root/pull/12693; * https://github.com/root-project/root/pull/13712; * https://github.com/root-project/root/pull/13718; * https://github.com/root-project/root/pull/13765; * https://github.com/root-project/root/pull/13524; * https://github.com/root-project/root/pull/13525; * https://github.com/root-project/root/pull/13613. After these trivial backports, the only PR that needs to be backported to fix the remaining failures is this one:; * https://github.com/root-project/root/pull/13533. However, this would not be a simple conflict-less backport because the changes interact with new feature development for ROOT 6.30. It's maybe better if @lmoneta takes care of this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13777:615,simpl,simple,615,https://root.cern,https://github.com/root-project/root/pull/13777,1,['simpl'],['simple']
Usability,"Based on some confusion in today's ROOT IO meeting, update the documentation in `TLeaf` to clear up `fLen` vs `fNdata` vs `fLeafCount`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1534:91,clear,clear,91,https://root.cern,https://github.com/root-project/root/pull/1534,1,['clear'],['clear']
Usability,"Based on the discussion, it's not clear to me if there's anything left to be done. Can we close this? @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1850068597:34,clear,clear,34,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1850068597,1,['clear'],['clear']
Usability,"Batch mode, which is now only supported by Chrome, allows to run; JS code loaded from file and dump result to output file - no any; communication with host application required. Now extra headless mode is introduced, which allows to run client; code in the headless browser and communicate with it. It was original; way to produce batch images, therefore need to rename some methods; to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified.; In such case macro waits until 200 round-trip packets arrived and automatically ends.; Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7839:387,clear,clearly,387,https://root.cern,https://github.com/root-project/root/pull/7839,1,['clear'],['clearly']
Usability,Before llvm 13 it was not possible to parse `nlohmann/json.hpp` include. Therefore `json_fwd.hpp` was used. . But it was missing on several platforms where external `nlohmann/json.hpp` has to be used. Now after llvm upgrade it is not necessary to use it.; This should simplify ROOT building and usage on platforms with installed `nlohmann/json.hpp`. Also should fix #14634,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14643:268,simpl,simplify,268,https://root.cern,https://github.com/root-project/root/pull/14643,1,['simpl'],['simplify']
Usability,Before llvm 13 it was not possible to parse nlohmann/json.hpp include. Therefore json_fwd.hpp was used. But it was missing on several platforms where external nlohmann/json.hpp has to be used. Now after llvm upgrade it is not necessary to use it.; This should simplify ROOT building and usage on platforms with installed nlohmann/json.hpp. Porting of changes in 6.30 branch from #14643 to master,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14663:260,simpl,simplify,260,https://root.cern,https://github.com/root-project/root/pull/14663,1,['simpl'],['simplify']
Usability,"Before this commit, RDataSource columns were treated like a special; kind of Defined columns: they were registered in RBookedCustomColumn; and their contents were accessed via RCustomColumn::Get. This commit removes the logic that was Define'ing ad-hoc columns; corresponding to the RDS columns. Instead, we store the RDS column value; pointers in a dedicated std::map and teach RDSColumnReader to directly; use that. Logic is simpler, we avoid an extra function call and an extra; copy upon data-source value accesses, and we move closer to implementing; column readers specialized for a given RDS implementation. Sorry for the large commit, unfortunately changing how datasource columns _work_ requires touching a lot of different places and I am not sure it makes sense to split the commit in smaller pieces.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6208:427,simpl,simpler,427,https://root.cern,https://github.com/root-project/root/pull/6208,1,['simpl'],['simpler']
Usability,"Before this commit, the logic in SnapshotHelper did not take into; account the case of RVecs that are being read from an input TTree; (that was not possible until v6.26). Because of how the logic was; structured, that meant that Snapshot was trying to write out those; RVecs as C-style arrays instead, obviously badly failing at it. This patch tries to make the flow of this logic a bit more readable; and fixes the problem mentioned above by treating input branches; of RVec type the same way we already treat std::vectors. This fixes https://github.com/root-project/root/issues/10225. @pcanal the logic in this commit could be simplified if instead of ""if it's not every other case, it must be a C-style array"" I could do instead ""if it's not a C-style array, then it must be one of the other cases"". But I'm not sure how to check for ""branch is a C-style array"", see https://mattermost.web.cern.ch/root/pl/4n1qbh363tdfjc1hs3khe6y84o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10268:629,simpl,simplified,629,https://root.cern,https://github.com/root-project/root/pull/10268,1,['simpl'],['simplified']
Usability,"Before this patch, aliases of defined columns were jitted in namespace; __rdfX with X monotonously increasing. That is strictly unnecessary,; as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager.; The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5354:298,simpl,simplify,298,https://root.cern,https://github.com/root-project/root/pull/5354,1,['simpl'],['simplify']
Usability,"Bertrand,; In my mind, after PR #9669 merged, one simply can remove build/win directory from includes at all - also inside ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9671#issuecomment-1019956657:50,simpl,simply,50,https://root.cern,https://github.com/root-project/root/pull/9671#issuecomment-1019956657,1,['simpl'],['simply']
Usability,"Binary data has to be transferred as separate data packet; This makes logic complicated especially when many small raw packets should be used; Using `JSON_base64` marker in class info, one can insert raw data in ROOT JSON and ; use such binary at the place. This significantly simplifies data handling. ; Same approach can be later used for eve7",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4146:277,simpl,simplifies,277,https://root.cern,https://github.com/root-project/root/pull/4146,1,['simpl'],['simplifies']
Usability,"Both limitation/feature are present at the moment because of the ""simplest to implement factor"". I guess adding the code to simplify the name when possible should be straight-forward-ish. Switching from a fixed columns size by default to ""fit the name of all the columns"" should also be clear/straight-forward [albeit it might need a up to a reasonable maximum ...]; In case the name is truncated it might be usefull to add trailing dots .. but that might actually be slightly more complicated",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6473#issuecomment-700874559:66,simpl,simplest,66,https://root.cern,https://github.com/root-project/root/issues/6473#issuecomment-700874559,3,"['clear', 'simpl']","['clear', 'simplest', 'simplify']"
Usability,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft11.dyndns.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12018#issuecomment-1380914798:765,simpl,simple,765,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380914798,2,['simpl'],['simple']
Usability,Build failed on ROOT-fedora27/noimt.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67062/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67062/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-527806081:192,simpl,simple,192,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-527806081,2,['simpl'],['simple']
Usability,Build failed on ROOT-fedora27/noimt.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67422/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67422/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-529337927:192,simpl,simple,192,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-529337927,2,['simpl'],['simple']
Usability,Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67063/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67063/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-527803650:194,simpl,simple,194,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-527803650,2,['simpl'],['simple']
Usability,Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67423/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67423/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-529331416:194,simpl,simple,194,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-529331416,2,['simpl'],['simple']
Usability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-1.cern.ch:/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5426-ROOT-fedora30-cxx14&date=2020-04-22).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77828/console).; ### Warnings:; - [2020-04-22T09:54:00.538Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-04-22T10:03:39.303Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5426#issuecomment-617692111:516,clear,clearing,516,https://root.cern,https://github.com/root-project/root/pull/5426#issuecomment-617692111,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/98801/console).; ### Warnings:; - [2020-10-12T10:36:12.315Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-10-12T10:46:02.906Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6614#issuecomment-707053494:356,clear,clearing,356,https://root.cern,https://github.com/root-project/root/pull/6614#issuecomment-707053494,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5615-ROOT-fedora30-cxx14&date=2020-05-14).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82058/console).; ### Warnings:; - [2020-05-14T11:00:37.189Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-05-14T11:07:00.384Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.meta.roottest_root_meta_expressiveErrorMessages](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82058/testReport/projectroot.roottest.root/meta/roottest_root_meta_expressiveErrorMessages/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5615#issuecomment-628570271:530,clear,clearing,530,https://root.cern,https://github.com/root-project/root/pull/5615#issuecomment-628570271,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5685-ROOT-fedora30-cxx14&date=2020-05-24).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83317/console).; ### Warnings:; - [2020-05-24T21:12:13.842Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-05-24T21:18:34.559Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5685#issuecomment-633304650:530,clear,clearing,530,https://root.cern,https://github.com/root-project/root/pull/5685#issuecomment-633304650,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5692-ROOT-fedora30-cxx14&date=2020-05-25).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/console).; ### Warnings:; - [2020-05-25T10:19:25.159Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-05-25T10:26:03.641Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.basic.roottest_python_basic_operator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_operator/); - [projectroot.roottest.python.basic.roottest_python_basic_overloa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5692#issuecomment-633509680:530,clear,clearing,530,https://root.cern,https://github.com/root-project/root/pull/5692#issuecomment-633509680,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5692-ROOT-fedora30-cxx14&date=2020-05-25).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83430/console).; ### Warnings:; - [2020-05-25T13:06:41.453Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-05-25T13:07:19.903Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.io.tuple.roottest_root_io_tuple_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83430/testReport/projectroot.roottest.root.io/tuple/roottest_root_io_tuple_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5692#issuecomment-633570667:530,clear,clearing,530,https://root.cern,https://github.com/root-project/root/pull/5692#issuecomment-633570667,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5716-ROOT-fedora30-cxx14&date=2020-05-27).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83727/console).; ### Errors:; - [2020-05-27T10:02:25.808Z] FAILED: tree/dataframe/test/dataframe_splitcoll_arrayview ; - [2020-05-27T10:02:25.808Z] collect2: error: ld returned 1 exit status . ### Warnings:; - [2020-05-27T09:53:43.857Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-05-27T10:00:15.862Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5716#issuecomment-634560707:706,clear,clearing,706,https://root.cern,https://github.com/root-project/root/pull/5716#issuecomment-634560707,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5716-ROOT-fedora30-cxx14&date=2020-05-27).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83783/console).; ### Warnings:; - [2020-05-27T15:48:29.537Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-05-27T15:54:50.524Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5716#issuecomment-634773927:530,clear,clearing,530,https://root.cern,https://github.com/root-project/root/pull/5716#issuecomment-634773927,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5730-ROOT-fedora30-cxx14&date=2020-05-28).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84017/console).; ### Warnings:; - [2020-05-28T18:07:04.046Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-05-28T18:14:42.664Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5730#issuecomment-635523428:530,clear,clearing,530,https://root.cern,https://github.com/root-project/root/pull/5730#issuecomment-635523428,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5731-ROOT-fedora30-cxx14&date=2020-05-28).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84033/console).; ### Warnings:; - [2020-05-28T19:00:02.821Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-05-28T19:00:44.651Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5731#issuecomment-635541385:530,clear,clearing,530,https://root.cern,https://github.com/root-project/root/pull/5731#issuecomment-635541385,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5748-ROOT-fedora30-cxx14&date=2020-05-29).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84258/console).; ### Warnings:; - [2020-05-29T17:37:04.729Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-05-29T17:45:09.837Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5748#issuecomment-636110134:530,clear,clearing,530,https://root.cern,https://github.com/root-project/root/pull/5748#issuecomment-636110134,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-6271-ROOT-fedora30-cxx14&date=2020-08-28).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94060/console).; ### Warnings:; - [2020-08-28T11:23:46.094Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-08-28T11:31:00.825Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6271#issuecomment-682482962:530,clear,clearing,530,https://root.cern,https://github.com/root-project/root/pull/6271#issuecomment-682482962,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/101392/console).; ### Warnings:; - [2020-11-09T13:44:17.560Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-11-09T13:57:44.970Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6782#issuecomment-724047732:371,clear,clearing,371,https://root.cern,https://github.com/root-project/root/pull/6782#issuecomment-724047732,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/114303/console).; ### Warnings:; - [2021-04-14T11:03:20.855Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2021-04-14T11:10:29.086Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7870#issuecomment-819446975:371,clear,clearing,371,https://root.cern,https://github.com/root-project/root/pull/7870#issuecomment-819446975,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/114424/console).; ### Warnings:; - [2021-04-15T08:33:00.572Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2021-04-15T08:40:21.736Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7884#issuecomment-820253733:371,clear,clearing,371,https://root.cern,https://github.com/root-project/root/pull/7884#issuecomment-820253733,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115423/console).; ### Warnings:; - [2021-04-22T18:04:52.119Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2021-04-22T18:12:25.124Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7972#issuecomment-825088829:371,clear,clearing,371,https://root.cern,https://github.com/root-project/root/pull/7972#issuecomment-825088829,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115591/console).; ### Warnings:; - [2021-04-26T09:53:09.957Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2021-04-26T09:59:59.673Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7994#issuecomment-826711414:371,clear,clearing,371,https://root.cern,https://github.com/root-project/root/pull/7994#issuecomment-826711414,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/98913/console).; ### Warnings:; - [2020-10-12T17:59:07.743Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-10-12T18:07:15.273Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-9185.roottest_cling_dict_ROOT_9185_ROOT9185](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/98913/testReport/projectroot.roottest.cling.dict/ROOT-9185/roottest_cling_dict_ROOT_9185_ROOT9185/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6614#issuecomment-707278634:370,clear,clearing,370,https://root.cern,https://github.com/root-project/root/pull/6614#issuecomment-707278634,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/98938/console).; ### Warnings:; - [2020-10-13T08:58:48.277Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-10-13T08:59:31.573Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-9185.roottest_cling_dict_ROOT_9185_ROOT9185](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/98938/testReport/projectroot.roottest.cling.dict/ROOT-9185/roottest_cling_dict_ROOT_9185_ROOT9185/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6614#issuecomment-707605773:370,clear,clearing,370,https://root.cern,https://github.com/root-project/root/pull/6614#issuecomment-707605773,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5260)[See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/74284/console).; ### Warnings:; - [2020-03-31T14:18:15.280Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-03-31T14:28:22.117Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5260#issuecomment-606682987:401,clear,clearing,401,https://root.cern,https://github.com/root-project/root/pull/5260#issuecomment-606682987,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5281)[See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/74840/console).; ### Warnings:; - [2020-04-02T16:53:56.363Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-04-02T17:04:10.487Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/74840/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5281#issuecomment-607985104:401,clear,clearing,401,https://root.cern,https://github.com/root-project/root/pull/5281#issuecomment-607985104,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5281)[See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/74921/console).; ### Warnings:; - [2020-04-03T08:09:45.001Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-04-03T08:19:39.771Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5281#issuecomment-608311989:401,clear,clearing,401,https://root.cern,https://github.com/root-project/root/pull/5281#issuecomment-608311989,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71055/console).; ### Warnings:; - CMake Warning at /build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.test.test_stressgraphics_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71055/testReport/projectroot/test/test_stressgraphics_interpreted/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-547064701:347,clear,clearing,347,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-547064701,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71095/console).; ### Warnings:; - CMake Warning at /build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.bindings.pyroot_experimental.PyROOT.ROOT.test.pyunittests_pyroot_cppcallable](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71095/testReport/projectroot.bindings.pyroot_experimental.PyROOT.ROOT/test/pyunittests_pyroot_cppcallable/); - [projectroot.test.test_stressgraphics_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71095/testReport/projectroot/test/test_stressgraphics_interpreted/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-547113818:347,clear,clearing,347,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-547113818,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71167/console).; AXE### Warnings:; - CMake Warning at /build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.bindings.pyroot_experimental.PyROOT.ROOT.test.pyunittests_pyroot_cppcallable](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71167/testReport/projectroot.bindings.pyroot_experimental.PyROOT.ROOT/test/pyunittests_pyroot_cppcallable/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-547314147:350,clear,clearing,350,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-547314147,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71191/console).; AXEL DEBUG: logParserAction errors=0, warnings=18; ### Warnings:; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - /build/workspace/root-pullrequests-build/root/gui/webdisplay/inc/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - /build/workspace/root-pullrequests-build/root/gui/webdisplay/inc/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - /build/workspace/root-pullrequests-build/root/gui/webdisplay/inc/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - /build/workspace/root-pullrequests-build/root/gui/webdisplay/inc/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - include/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - include/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - include/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - include/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - include/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] . And 8 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4585#issuecomment-547370533:288,clear,clearing,288,https://root.cern,https://github.com/root-project/root/pull/4585#issuecomment-547370533,1,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71207/console).; ### Warnings:; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - /build/workspace/root-pullrequests-build/root/gui/webdisplay/inc/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - /build/workspace/root-pullrequests-build/root/gui/webdisplay/inc/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - /build/workspace/root-pullrequests-build/root/gui/webdisplay/inc/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - /build/workspace/root-pullrequests-build/root/gui/webdisplay/inc/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - include/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - include/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - include/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - include/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - include/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] . And 8 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4585#issuecomment-547432803:237,clear,clearing,237,https://root.cern,https://github.com/root-project/root/pull/4585#issuecomment-547432803,1,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71215/console).; ### Warnings:; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4555#issuecomment-547440899:237,clear,clearing,237,https://root.cern,https://github.com/root-project/root/pull/4555#issuecomment-547440899,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71223/console).; ### Warnings:; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4561#issuecomment-547460410:237,clear,clearing,237,https://root.cern,https://github.com/root-project/root/pull/4561#issuecomment-547460410,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71239/console).; ### Warnings:; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4497#issuecomment-547495482:237,clear,clearing,237,https://root.cern,https://github.com/root-project/root/pull/4497#issuecomment-547495482,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71264/console).; ### Warnings:; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4594#issuecomment-547578379:237,clear,clearing,237,https://root.cern,https://github.com/root-project/root/pull/4594#issuecomment-547578379,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71544/console).; ### Warnings:; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4604#issuecomment-548454582:237,clear,clearing,237,https://root.cern,https://github.com/root-project/root/pull/4604#issuecomment-548454582,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/72947/console).; ### Warnings:; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4680#issuecomment-564124989:237,clear,clearing,237,https://root.cern,https://github.com/root-project/root/pull/4680#issuecomment-564124989,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/73011/console).; ### Warnings:; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4680#issuecomment-564657347:237,clear,clearing,237,https://root.cern,https://github.com/root-project/root/pull/4680#issuecomment-564657347,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/73541/console).; ### Warnings:; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4697#issuecomment-566489140:237,clear,clearing,237,https://root.cern,https://github.com/root-project/root/pull/4697#issuecomment-566489140,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75446/console).; ### Warnings:; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4820#issuecomment-576312361:237,clear,clearing,237,https://root.cern,https://github.com/root-project/root/pull/4820#issuecomment-576312361,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75702/console).; ### Warnings:; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4835#issuecomment-577277715:237,clear,clearing,237,https://root.cern,https://github.com/root-project/root/pull/4835#issuecomment-577277715,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76255/console).; ### Warnings:; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4835#issuecomment-578723175:237,clear,clearing,237,https://root.cern,https://github.com/root-project/root/pull/4835#issuecomment-578723175,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76407/console).; ### Warnings:; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4873#issuecomment-578851973:237,clear,clearing,237,https://root.cern,https://github.com/root-project/root/pull/4873#issuecomment-578851973,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76632/console).; ### Warnings:; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4884#issuecomment-579557450:237,clear,clearing,237,https://root.cern,https://github.com/root-project/root/pull/4884#issuecomment-579557450,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76738/console).; ### Warnings:; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4884#issuecomment-579922714:237,clear,clearing,237,https://root.cern,https://github.com/root-project/root/pull/4884#issuecomment-579922714,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76762/console).; ### Warnings:; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4893#issuecomment-579936036:237,clear,clearing,237,https://root.cern,https://github.com/root-project/root/pull/4893#issuecomment-579936036,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78912/console).; ### Warnings:; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5027#issuecomment-587174733:237,clear,clearing,237,https://root.cern,https://github.com/root-project/root/pull/5027#issuecomment-587174733,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79192/console).; ### Warnings:; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_execCheckClusterRange](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79192/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5038#issuecomment-588335594:237,clear,clearing,237,https://root.cern,https://github.com/root-project/root/pull/5038#issuecomment-588335594,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79916/console).; ### Warnings:; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5067#issuecomment-591975497:237,clear,clearing,237,https://root.cern,https://github.com/root-project/root/pull/5067#issuecomment-591975497,2,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora32/default.; Running on root-fedora32-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115159/console).; ### Warnings:; - [2021-04-20T17:41:07.506Z] ginclude/tbb/concurrent_hash_map.h:131:76: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115159/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115159/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115159/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-823498058:374,clear,clearing,374,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-823498058,1,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora32/default.; Running on root-fedora32-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115296/console).; ### Warnings:; - [2021-04-21T16:53:52.297Z] ginclude/tbb/concurrent_hash_map.h:131:76: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115296/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115296/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115296/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-824222731:374,clear,clearing,374,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-824222731,1,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora32/default.; Running on root-fedora32-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115313/console).; ### Warnings:; - [2021-04-21T17:35:44.121Z] ginclude/tbb/concurrent_hash_map.h:131:76: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115313/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115313/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115313/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-824249820:374,clear,clearing,374,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-824249820,1,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora32/default.; Running on root-fedora32-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115314/console).; ### Warnings:; - [2021-04-21T20:32:03.524Z] ginclude/tbb/concurrent_hash_map.h:131:76: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115314/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115314/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115314/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-824351593:374,clear,clearing,374,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-824351593,1,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora32/default.; Running on root-fedora32-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115411/console).; ### Warnings:; - [2021-04-22T15:26:47.027Z] ginclude/tbb/concurrent_hash_map.h:131:76: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2021-04-22T15:28:51.056Z] math/unuran/unuran-1.8.0-root/src/methods/mvtdr_init.ch:886:17: warning: argument 1 value ‘18446744073709551608’ exceeds maximum object size 9223372036854775807 [-Walloc-size-larger-than=] . ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115411/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115411/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115411/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-824971382:374,clear,clearing,374,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-824971382,1,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora32/default.; Running on root-fedora32-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115420/console).; ### Warnings:; - [2021-04-22T16:40:55.816Z] ginclude/tbb/concurrent_hash_map.h:131:76: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2021-04-22T16:41:34.121Z] math/unuran/unuran-1.8.0-root/src/methods/mvtdr_init.ch:886:17: warning: argument 1 value ‘18446744073709551608’ exceeds maximum object size 9223372036854775807 [-Walloc-size-larger-than=] . ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115420/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115420/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115420/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-825024680:374,clear,clearing,374,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-825024680,1,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora32/default.; Running on root-fedora32-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117068/console).; ### Warnings:; - [2021-05-06T20:26:40.917Z] ginclude/tbb/concurrent_hash_map.h:131:76: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2021-05-06T20:28:24.470Z] math/unuran/unuran-1.8.0-root/src/methods/mvtdr_init.ch:886:17: warning: argument 1 value ‘18446744073709551608’ exceeds maximum object size 9223372036854775807 [-Walloc-size-larger-than=] . ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117068/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117068/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117068/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-833862493:374,clear,clearing,374,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-833862493,1,['clear'],['clearing']
Usability,"Build failed on ROOT-fedora34/default.; Running on root-fedora34-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/console).; ### Warnings:; - [2021-10-04T15:57:57.930Z] /home/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runaliceesd](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runaliceesd/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9066#issuecomment-933646782:435,clear,clearing,435,https://root.cern,https://github.com/root-project/root/pull/9066#issuecomment-933646782,1,['clear'],['clearing']
Usability,Build failed on ROOT-performance-centos7-multicore/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67061/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67061/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-527796413:215,simpl,simple,215,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-527796413,2,['simpl'],['simple']
Usability,Build failed on ROOT-performance-centos7-multicore/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67421/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67421/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-529325990:215,simpl,simple,215,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-529325990,2,['simpl'],['simple']
Usability,Build failed on ROOT-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65282/console).; ### Failing tests:; - [projectroot.roottest.root.hist.misc.roottest_root_hist_misc_runownership](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65282/testReport/projectroot.roottest.root.hist/misc/roottest_root_hist_misc_runownership/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65282/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65282/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.io.xml.roottest_root_io_xml_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65282/testReport/projectroot.roottest.root.io/xml/roottest_root_io_xml_make/); - [projectroot.roottest.root.meta.autoloading.roottest_root_meta_autoloading_execTypeinfo_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65282/testReport/projectroot.roottest.root.meta/autoloading/roottest_root_meta_autoloading_execTypeinfo_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65282/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.core.metacling.test.gtest_core_metacling_test_coremetaclingtestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65282/testReport/projectroot.core.metacling/test/gtest_core_metacling_test_coremetaclingtestUnit/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4230#issuecomment-521946252:1323,simpl,simple,1323,https://root.cern,https://github.com/root-project/root/pull/4230#issuecomment-521946252,2,['simpl'],['simple']
Usability,Build failed on ROOT-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67424/console).; ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_exectsinclude](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67424/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_exectsinclude/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67424/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-529332052:425,simpl,simple,425,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-529332052,2,['simpl'],['simple']
Usability,Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/console).; ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175130897:1491,simpl,simple,1491,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175130897,2,['simpl'],['simple']
Usability,"Build failed on ROOT-ubuntu2004/python3.; Running on root-ubuntu-2004-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/console).; ### Warnings:; - [2023-08-31T18:23:40.513Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2023-08-31T18:29:46.289Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_pythonizations](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_pythonizations/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13577#issuecomment-1701582600:378,clear,clearing,378,https://root.cern,https://github.com/root-project/root/pull/13577#issuecomment-1701582600,2,['clear'],['clearing']
Usability,"Build failed on ROOT-ubuntu2004/soversion.; Running on root-ubuntu-2004-3.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/127729/console).; ### Warnings:; - [2021-10-21T13:48:06.579Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2021-10-21T13:54:54.096Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9157#issuecomment-948660830:380,clear,clearing,380,https://root.cern,https://github.com/root-project/root/pull/9157#issuecomment-948660830,2,['clear'],['clearing']
Usability,"Build failed on ROOT-ubuntu2204/cxx17.; Running on root-ubuntu-2204-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166598/console).; ### Warnings:; - [2023-02-01T13:46:58.435Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12187#issuecomment-1412117260:437,clear,clearing,437,https://root.cern,https://github.com/root-project/root/pull/12187#issuecomment-1412117260,1,['clear'],['clearing']
Usability,"Build failed on ROOT-ubuntu2204/cxx17.; Running on root-ubuntu-2204-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166784/console).; ### Warnings:; - [2023-02-02T16:04:19.482Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12211#issuecomment-1414055652:437,clear,clearing,437,https://root.cern,https://github.com/root-project/root/pull/12211#issuecomment-1414055652,1,['clear'],['clearing']
Usability,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28889/console).; ### Errors:; - collect2: error: ld returned 1 exit status . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2141#issuecomment-394388968:1534,clear,clearing,1534,https://root.cern,https://github.com/root-project/root/pull/2141#issuecomment-394388968,1,['clear'],['clearing']
Usability,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32357/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2319#issuecomment-405050428:512,clear,clearing,512,https://root.cern,https://github.com/root-project/root/pull/2319#issuecomment-405050428,1,['clear'],['clearing']
Usability,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32748/console).; ### Errors:; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/src/TClingUtils.cxx:3377:82: error: ‘interpreter’ was not declared in this scope . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2331#issuecomment-405843696:1638,clear,clearing,1638,https://root.cern,https://github.com/root-project/root/pull/2331#issuecomment-405843696,1,['clear'],['clearing']
Usability,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34737/console).; ### Errors:; - ERROR in cling::CIFactory::createCI(): ; - Error: Error loading the default header files. . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406#issuecomment-409554854:1581,clear,clearing,1581,https://root.cern,https://github.com/root-project/root/pull/2406#issuecomment-409554854,1,['clear'],['clearing']
Usability,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37008/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-412504856:1474,clear,clearing,1474,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-412504856,1,['clear'],['clearing']
Usability,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37035/console).; ### Errors:; - ERROR in cling::CIFactory::createCI(): ; - Error: Error loading the default header files. . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406#issuecomment-412837784:1581,clear,clearing,1581,https://root.cern,https://github.com/root-project/root/pull/2406#issuecomment-412837784,1,['clear'],['clearing']
Usability,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37062/console).; ### Errors:; - ERROR in cling::CIFactory::createCI(): ; - Error: Error loading the default header files. . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406#issuecomment-412940246:1581,clear,clearing,1581,https://root.cern,https://github.com/root-project/root/pull/2406#issuecomment-412940246,1,['clear'],['clearing']
Usability,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37071/console).; ### Errors:; - ERROR in cling::CIFactory::createCI(): ; - Error: Error loading the default header files. . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406#issuecomment-412957016:1581,clear,clearing,1581,https://root.cern,https://github.com/root-project/root/pull/2406#issuecomment-412957016,1,['clear'],['clearing']
Usability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55340/console).; ### Errors:; - FAILED: net/http/CMakeFiles/RHTTP.dir/src/THttpLongPollEngine.cxx.o ; - /build/jenkins/workspace/root-pullrequests-build/root/net/http/src/THttpLongPollEngine.cxx:109:7: error: use of undeclared identifier 'Error' ; - /build/jenkins/workspace/root-pullrequests-build/root/net/http/src/THttpLongPollEngine.cxx:132:7: error: use of undeclared identifier 'Error' ; - /build/jenkins/workspace/root-pullrequests-build/root/net/http/src/THttpLongPollEngine.cxx:158:7: error: use of undeclared identifier 'Error' ; - /build/jenkins/workspace/root-pullrequests-build/root/net/http/src/THttpLongPollEngine.cxx:191:7: error: use of undeclared identifier 'Fatal' ; - /build/jenkins/workspace/root-pullrequests-build/root/net/http/src/THttpLongPollEngine.cxx:194:7: error: use of undeclared identifier 'Error' ; - FAILED: net/http/CMakeFiles/RHTTP.dir/src/THttpServer.cxx.o ; - /build/jenkins/workspace/root-pullrequests-build/root/net/http/src/THttpServer.cxx:155:10: error: no member named 'Warning' in the global namespace; did you mean simply 'Warning'?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3545#issuecomment-473229251:1171,simpl,simply,1171,https://root.cern,https://github.com/root-project/root/pull/3545#issuecomment-473229251,1,['simpl'],['simply']
Usability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67065/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67065/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-527799410:186,simpl,simple,186,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-527799410,2,['simpl'],['simple']
Usability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67357/console).; ### Errors:; - 957/1991 Test #866: tutorial-v7-concurrentfill.cxx ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.92 sec ; - 969/1991 Test #878: tutorial-v7-perf.cxx ..............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.06 sec ; - 970/1991 Test #879: tutorial-v7-perfcomp.cxx ..........................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.03 sec ; - 972/1991 Test #880: tutorial-v7-simple.cxx ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.09 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_v7_concurrentfill.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67357/testReport/projectroot/runtutorials/tutorial_v7_concurrentfill_cxx/); - [projectroot.runtutorials.tutorial_v7_perf.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67357/testReport/projectroot/runtutorials/tutorial_v7_perf_cxx/); - [projectroot.runtutorials.tutorial_v7_perfcomp.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67357/testReport/projectroot/runtutorials/tutorial_v7_perfcomp_cxx/); - [projectroot.runtutorials.tutorial_v7_simple.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67357/testReport/projectroot/runtutorials/tutorial_v7_simple_cxx/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67357/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4354#issuecomment-528910405:778,simpl,simple,778,https://root.cern,https://github.com/root-project/root/pull/4354#issuecomment-528910405,1,['simpl'],['simple']
Usability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/console).; ### Errors:; - 958/1991 Test #866: tutorial-v7-concurrentfill.cxx ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.01 sec ; - 969/1991 Test #878: tutorial-v7-perf.cxx ..............................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.91 sec ; - 971/1991 Test #879: tutorial-v7-perfcomp.cxx ..........................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.00 sec ; - 972/1991 Test #880: tutorial-v7-simple.cxx ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.01 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_v7_concurrentfill.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_concurrentfill_cxx/); - [projectroot.runtutorials.tutorial_v7_perf.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_perf_cxx/); - [projectroot.runtutorials.tutorial_v7_perfcomp.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_perfcomp_cxx/); - [projectroot.runtutorials.tutorial_v7_simple.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_simple_cxx/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/); - [projectroot.roottest.root.meta.enums.roottest_root_meta_enums_enumsInNamespaces](,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4358#issuecomment-528926777:778,simpl,simple,778,https://root.cern,https://github.com/root-project/root/pull/4358#issuecomment-528926777,1,['simpl'],['simple']
Usability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67395/console).; ### Errors:; - 961/1991 Test #866: tutorial-v7-concurrentfill.cxx ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.99 sec ; - 971/1991 Test #878: tutorial-v7-perf.cxx ..............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.73 sec ; - 972/1991 Test #879: tutorial-v7-perfcomp.cxx ..........................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.78 sec ; - 974/1991 Test #880: tutorial-v7-simple.cxx ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.89 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_v7_concurrentfill.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67395/testReport/projectroot/runtutorials/tutorial_v7_concurrentfill_cxx/); - [projectroot.runtutorials.tutorial_v7_perf.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67395/testReport/projectroot/runtutorials/tutorial_v7_perf_cxx/); - [projectroot.runtutorials.tutorial_v7_perfcomp.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67395/testReport/projectroot/runtutorials/tutorial_v7_perfcomp_cxx/); - [projectroot.runtutorials.tutorial_v7_simple.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67395/testReport/projectroot/runtutorials/tutorial_v7_simple_cxx/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67395/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4358#issuecomment-529028304:778,simpl,simple,778,https://root.cern,https://github.com/root-project/root/pull/4358#issuecomment-529028304,1,['simpl'],['simple']
Usability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67407/console).; ### Errors:; - 961/1991 Test #866: tutorial-v7-concurrentfill.cxx ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 2.16 sec ; - 971/1991 Test #878: tutorial-v7-perf.cxx ..............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.43 sec ; - 972/1991 Test #879: tutorial-v7-perfcomp.cxx ..........................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.69 sec ; - 973/1991 Test #880: tutorial-v7-simple.cxx ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.65 sec,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3760#issuecomment-529046076:778,simpl,simple,778,https://root.cern,https://github.com/root-project/root/pull/3760#issuecomment-529046076,1,['simpl'],['simple']
Usability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67425/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67425/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-529338522:186,simpl,simple,186,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-529338522,2,['simpl'],['simple']
Usability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67527/console).; ### Errors:; - 962/1991 Test #866: tutorial-v7-concurrentfill.cxx ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.84 sec ; - 971/1991 Test #878: tutorial-v7-perf.cxx ..............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.20 sec ; - 973/1991 Test #879: tutorial-v7-perfcomp.cxx ..........................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.28 sec ; - 975/1991 Test #880: tutorial-v7-simple.cxx ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.82 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_v7_concurrentfill.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67527/testReport/projectroot/runtutorials/tutorial_v7_concurrentfill_cxx/); - [projectroot.runtutorials.tutorial_v7_perf.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67527/testReport/projectroot/runtutorials/tutorial_v7_perf_cxx/); - [projectroot.runtutorials.tutorial_v7_perfcomp.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67527/testReport/projectroot/runtutorials/tutorial_v7_perfcomp_cxx/); - [projectroot.runtutorials.tutorial_v7_simple.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67527/testReport/projectroot/runtutorials/tutorial_v7_simple_cxx/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4358#issuecomment-529553525:778,simpl,simple,778,https://root.cern,https://github.com/root-project/root/pull/4358#issuecomment-529553525,1,['simpl'],['simple']
Usability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/73239/console).; ### Errors:; - /ec/build/workspace/root-pullrequests-build/root/core/imt/src/TPoolManager.cxx:75:48: error: no member named 'NLogicalCores' in namespace 'ROOT'; did you mean simply 'NLogicalCores'?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4684#issuecomment-565376935:302,simpl,simply,302,https://root.cern,https://github.com/root-project/root/pull/4684#issuecomment-565376935,1,['simpl'],['simply']
Usability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74836/console).; ### Failing tests:; - [projectroot.hist.hist.test.gtest_hist_hist_test_TGraphMultiErrorsTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74836/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_TGraphMultiErrorsTests/); - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treetreeplayertestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74836/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treetreeplayertestUnit/); - [projectroot.roottest.python.stl.roottest_python_stl_stl](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74836/testReport/projectroot.roottest.python/stl/roottest_python_stl_stl/); - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74836/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.const.roottest_root_io_const_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74836/testReport/projectroot.roottest.root.io/const/roottest_root_io_const_make/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74836/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execResolveTypedef_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74836/testReport/projectroot.roottest.root.meta/naming/roottest_root_meta_naming_execResolveTypedef_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74836/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4758#issuecomment-573843824:1754,simpl,simple,1754,https://root.cern,https://github.com/root-project/root/pull/4758#issuecomment-573843824,2,['simpl'],['simple']
Usability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75345/console).; ### Failing tests:; - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treetreeplayertestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75345/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treetreeplayertestUnit/); - [projectroot.roottest.python.stl.roottest_python_stl_stl](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75345/testReport/projectroot.roottest.python/stl/roottest_python_stl_stl/); - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75345/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.const.roottest_root_io_const_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75345/testReport/projectroot.roottest.root.io/const/roottest_root_io_const_make/); - [projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execResolveTypedef_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75345/testReport/projectroot.roottest.root.meta/naming/roottest_root_meta_naming_execResolveTypedef_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75345/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75345/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rstandardscaler](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75345/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rstandardscaler/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4812#issuecomment-576029522:1302,simpl,simple,1302,https://root.cern,https://github.com/root-project/root/pull/4812#issuecomment-576029522,2,['simpl'],['simple']
Usability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75362/console).; ### Failing tests:; - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treetreeplayertestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75362/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treetreeplayertestUnit/); - [projectroot.roottest.python.stl.roottest_python_stl_stl](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75362/testReport/projectroot.roottest.python/stl/roottest_python_stl_stl/); - [projectroot.roottest.root.io.const.roottest_root_io_const_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75362/testReport/projectroot.roottest.root.io/const/roottest_root_io_const_make/); - [projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execResolveTypedef_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75362/testReport/projectroot.roottest.root.meta/naming/roottest_root_meta_naming_execResolveTypedef_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75362/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75362/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4812#issuecomment-576245066:1094,simpl,simple,1094,https://root.cern,https://github.com/root-project/root/pull/4812#issuecomment-576245066,2,['simpl'],['simple']
Usability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79011/console).; ### Failing tests:; - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treetreeplayertestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79011/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treetreeplayertestUnit/); - [projectroot.roottest.python.stl.roottest_python_stl_stl](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79011/testReport/projectroot.roottest.python/stl/roottest_python_stl_stl/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79011/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79011/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-587500257:628,simpl,simple,628,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-587500257,2,['simpl'],['simple']
Usability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79453/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79453/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory_py/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79453/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79453/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79453/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-589663474:834,simpl,simple,834,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-589663474,2,['simpl'],['simple']
Usability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79541/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_v7_histops.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79541/testReport/projectroot/runtutorials/tutorial_v7_histops_cxx/); - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79541/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory_py/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79541/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79541/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79541/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-589931013:1014,simpl,simple,1014,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-589931013,2,['simpl'],['simple']
Usability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79581/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_v7_histops.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79581/testReport/projectroot/runtutorials/tutorial_v7_histops_cxx/); - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79581/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory_py/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79581/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79581/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79581/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-590256364:1014,simpl,simple,1014,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-590256364,2,['simpl'],['simple']
Usability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80131/console).; ### Failing tests:; - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treetreeplayertestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80131/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treetreeplayertestUnit/); - [projectroot.roottest.python.stl.roottest_python_stl_stl](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80131/testReport/projectroot.roottest.python/stl/roottest_python_stl_stl/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80131/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80131/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5082#issuecomment-593825152:628,simpl,simple,628,https://root.cern,https://github.com/root-project/root/pull/5082#issuecomment-593825152,2,['simpl'],['simple']
Usability,Build failed on mac1015/cxx17.; Running Allocate node on root-jenkins-01.cern.ch:/var/lib/jenkins/workspace/root-pullrequests-build; Running Allocate node on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5412-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77699/console).; ### Failing tests:; - [projectroot.math.foam.test.gtest_math_foam_test_testTFoam](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77699/testReport/projectroot.math.foam/test/gtest_math_foam_test_testTFoam/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77699/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77699/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77699/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5412#issuecomment-617254612:785,simpl,simple,785,https://root.cern,https://github.com/root-project/root/pull/5412#issuecomment-617254612,2,['simpl'],['simple']
Usability,Build failed on mac1015/cxx17.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5219-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77710/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77710/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77710/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77710/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5219#issuecomment-617284554:955,simpl,simple,955,https://root.cern,https://github.com/root-project/root/pull/5219#issuecomment-617284554,2,['simpl'],['simple']
Usability,Build failed on mac1015/cxx17.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5342-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77744/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77744/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77744/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77744/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77744/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5342#issuecomment-617429874:1182,simpl,simple,1182,https://root.cern,https://github.com/root-project/root/pull/5342#issuecomment-617429874,2,['simpl'],['simple']
Usability,Build failed on mac1015/cxx17.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5423-mac1015-cxx17&date=2020-04-22).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77775/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77775/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77775/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77775/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5423#issuecomment-617452035:955,simpl,simple,955,https://root.cern,https://github.com/root-project/root/pull/5423#issuecomment-617452035,2,['simpl'],['simple']
Usability,Build failed on mac1015/cxx17.; Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5342-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77703/console).; ### Failing tests:; - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77703/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77703/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77703/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77703/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5342#issuecomment-617307490:676,simpl,simple,676,https://root.cern,https://github.com/root-project/root/pull/5342#issuecomment-617307490,2,['simpl'],['simple']
Usability,Build failed on mac1015/cxx17.; Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5391-mac1015-cxx17&date=2020-04-22).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77759/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77759/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77759/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77759/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77759/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5391#issuecomment-617457400:449,simpl,simple,449,https://root.cern,https://github.com/root-project/root/pull/5391#issuecomment-617457400,2,['simpl'],['simple']
Usability,Build failed on mac1015/cxx17.; Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5398-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77751/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77751/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77751/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77751/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5398#issuecomment-617431954:449,simpl,simple,449,https://root.cern,https://github.com/root-project/root/pull/5398#issuecomment-617431954,2,['simpl'],['simple']
Usability,Build failed on mac1015/cxx17.; Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5418-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77718/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77718/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77718/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77718/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5418#issuecomment-617355629:449,simpl,simple,449,https://root.cern,https://github.com/root-project/root/pull/5418#issuecomment-617355629,2,['simpl'],['simple']
Usability,Build failed on mac1015/cxx17.; Running on root-jenkins-01.cern.ch:/var/lib/jenkins/workspace/root-pullrequests-build; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5391-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77638/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77638/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77638/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77638/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77638/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5391#issuecomment-617175571:1168,simpl,simple,1168,https://root.cern,https://github.com/root-project/root/pull/5391#issuecomment-617175571,2,['simpl'],['simple']
Usability,Build failed on mac1015/cxx17.; Running on root-jenkins-01.cern.ch:/var/lib/jenkins/workspace/root-pullrequests-build; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5417-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77647/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77647/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77647/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77647/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5417#issuecomment-617185813:443,simpl,simple,443,https://root.cern,https://github.com/root-project/root/pull/5417#issuecomment-617185813,2,['simpl'],['simple']
Usability,Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5030-mac1015-cxx17&date=2020-04-06).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75331/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75331/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75331/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75331/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-609768242:854,simpl,simple,854,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-609768242,2,['simpl'],['simple']
Usability,Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5030-mac1015-cxx17&date=2020-04-06).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75332/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75332/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory_py/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75332/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75332/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75332/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75332/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-609794009:1304,simpl,simple,1304,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-609794009,2,['simpl'],['simple']
Usability,Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5030-mac1015-cxx17&date=2020-04-07).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75611/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75611/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75611/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75611/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-610418457:854,simpl,simple,854,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-610418457,2,['simpl'],['simple']
Usability,Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5030-mac1015-cxx17&date=2020-04-17).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/76835/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/76835/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/76835/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/76835/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-615170450:356,simpl,simple,356,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-615170450,2,['simpl'],['simple']
Usability,Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5342-mac1015-cxx17&date=2020-04-20).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77447/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77447/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77447/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77447/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5342#issuecomment-616817622:854,simpl,simple,854,https://root.cern,https://github.com/root-project/root/pull/5342#issuecomment-616817622,2,['simpl'],['simple']
Usability,Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5391-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77480/console).; ### Failing tests:; - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77480/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77480/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77480/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77480/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5391#issuecomment-616855956:583,simpl,simple,583,https://root.cern,https://github.com/root-project/root/pull/5391#issuecomment-616855956,2,['simpl'],['simple']
Usability,Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5395-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77512/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77512/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77512/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77512/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5395#issuecomment-616956457:854,simpl,simple,854,https://root.cern,https://github.com/root-project/root/pull/5395#issuecomment-616956457,2,['simpl'],['simple']
Usability,Build failed on mac11/cxx14.; Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174396/console).; ### Errors:; - [2023-05-11T12:52:41.022Z] FAILED: core/CMakeFiles/G__Core.dir/G__Core.cxx.o ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11027#issuecomment-1543945512:525,simpl,simply,525,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512,3,['simpl'],['simply']
Usability,Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174395/console).; ### Errors:; - [2023-05-11T12:18:54.188Z] FAILED: core/CMakeFiles/G__Core.dir/G__Core.cxx.o ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11027#issuecomment-1543894216:541,simpl,simply,541,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216,3,['simpl'],['simply']
Usability,Build failed on mac12arm/cxx20.; Running on 194.12.161.128:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/197157/console).; ### Errors:; - [2024-03-01T02:45:13.661Z] FAILED: interpreter/llvm-project/llvm/tools/clang/lib/Serialization/CMakeFiles/obj.clangSerialization.dir/ASTWriterDecl.cpp.o ; - [2024-03-01T02:45:13.661Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm-project/clang/lib/Serialization/ASTWriterDecl.cpp:2440:3: error: use of undeclared identifier 'DeclSpecializationsAbbrev' ; - [2024-03-01T02:45:14.375Z] FAILED: interpreter/llvm-project/llvm/tools/clang/lib/Serialization/CMakeFiles/obj.clangSerialization.dir/ASTWriter.cpp.o ; - [2024-03-01T02:45:14.375Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:3898:29: error: no member named 'endianness' in namespace 'llvm'; did you mean simply 'endianness'? ; - [2024-03-01T02:45:14.375Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:3914:28: error: no member named 'endianness' in namespace 'llvm'; did you mean simply 'endianness'? ; - [2024-03-01T02:45:14.375Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:3922:28: error: no member named 'endianness' in namespace 'llvm'; did you mean simply 'endianness'? ; - [2024-03-01T02:45:14.375Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:3993:29: error: use of undeclared identifier 'DeclSpecializationsAbbrev',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1972366916:1014,simpl,simply,1014,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1972366916,3,['simpl'],['simply']
Usability,Build failed on ubuntu16/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16312/console).; ### Failing tests:; - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16312/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.simple.roottest_root_io_simple_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16312/testReport/projectroot.roottest.root.io/simple/roottest_root_io_simple_make/); - [projectroot.roottest.root.io.set.roottest_root_io_set_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16312/testReport/projectroot.roottest.root.io/set/roottest_root_io_set_make/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseRead_11](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16312/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseRead_11/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16312/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseRead_12](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16312/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseRead_12/); - [projectroot.roottest.root.io.newdelete.roottest_root_io_newdelete_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16312/testReport/projectroot.roottest.root.io/newdelete/roottest_root_io_newdelete_make/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_arrTemplMemberWrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16312/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_arrTemplMemberWrite/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1591#issuecomment-363262262:390,simpl,simple,390,https://root.cern,https://github.com/root-project/root/pull/1591#issuecomment-363262262,2,['simpl'],['simple']
Usability,"Build failed on windows10/cxx14.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/119078/console).; ### Warnings:; - [2021-06-02T09:28:56.271Z] ghprbPullLongDescription=Warning like:\r\n```\r\ngeom/geom/src/TGeoManager.cxx:521:4: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\r\n 521 | if (fHashVolumes) fHashVolumes-&gt;Clear(\""nodelete\""); SafeDelete(fHashVolumes);\r\n``` ; - [2021-06-02T10:19:30.580Z] ghprbPullLongDescription=Warning like:\r\n```\r\ngeom/geom/src/TGeoManager.cxx:521:4: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\r\n 521 | if (fHashVolumes) fHashVolumes-&gt;Clear(\""nodelete\""); SafeDelete(fHashVolumes);\r\n```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8316#issuecomment-852950636:452,Clear,Clear,452,https://root.cern,https://github.com/root-project/root/pull/8316#issuecomment-852950636,2,['Clear'],['Clear']
Usability,"Build failed on windows10/cxx14.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126788/console).; ### Warnings:; - [2021-10-05T07:51:00.677Z] ghprbPullLongDescription=Should fix the following compilation warnings with `gcc 11` and the current `builtin_tbb`:\r\n```\r\nIn file included from ginclude/tbb/tbb.h:48,\r\n from /home/vpadulan/Programs/rootproject/root/core/imt/src/TThreadExecutor.cxx:10:\r\nginclude/tbb/concurrent_hash_map.h: In constructor 'tbb::interface5::internal::hash_map_base::hash_map_base()':\r\nginclude/tbb/concurrent_hash_map.h:131:24: warning: 'void* memset(void*, int, size_t)' clearing an object of type 'struct tbb::interface5::internal::hash_map_base::bucket' with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]\r\n 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));\r\n | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nginclude/tbb/concurrent_hash_map.h:93:16: note: 'struct tbb::interface5::internal::hash_map_base::bucket' declared here\r\n 93 | struct bucket : tbb::internal::no_copy {\r\n | ^~~~~~\r\n```\r\n . ### Failing tests:; - [projectroot.roottest.python.function.roottest_python_function_function](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126788/testReport/projectroot.roottest.python/function/roottest_python_function_function/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9067#issuecomment-934265717:713,clear,clearing,713,https://root.cern,https://github.com/root-project/root/pull/9067#issuecomment-934265717,1,['clear'],['clearing']
Usability,"Build failed on windows10/cxx14.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154362/console).; ### Errors:; - [2022-09-14T15:02:59.017Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\tuple(74,90): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\TargetLoweringObjectFileImpl.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-14T15:02:59.017Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(1274,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\SimplifyCFG.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-09-14T15:02:59.017Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(841,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\SimplifyIndVar.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-09-14T15:02:59.017Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility(389,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\TailDuplication.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-14T15:02:59.017Z] C:\build\workspace\root-pullreque",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11366#issuecomment-1246914758:944,Simpl,SimplifyCFG,944,https://root.cern,https://github.com/root-project/root/pull/11366#issuecomment-1246914758,1,['Simpl'],['SimplifyCFG']
Usability,"But did you add the '?' before each command, as in the example ?. The guide says:; `Use ? to get help on all ‘‘raw’’ interpreter commands`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10056#issuecomment-1060855729:70,guid,guide,70,https://root.cern,https://github.com/root-project/root/issues/10056#issuecomment-1060855729,1,['guid'],['guide']
Usability,But why does the guide tell you to put those question marks then?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10056#issuecomment-1060858993:17,guid,guide,17,https://root.cern,https://github.com/root-project/root/issues/10056#issuecomment-1060858993,1,['guid'],['guide']
Usability,"By any means I am not against this change. However, since such overhead is a significant problem for your O(N) microservices and saving a few calls makes a difference, have you considered using checkpointing to cache ROOT startup operations altogether? A very simplistic way to achieve the checkpointing is to implement a core dump. That would probably yield better results AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12613#issuecomment-1496294487:260,simpl,simplistic,260,https://root.cern,https://github.com/root-project/root/pull/12613#issuecomment-1496294487,1,['simpl'],['simplistic']
Usability,"By setting a new bit in the TTree object, `kFlushAtCluster`, one can enter the ""one basket per event cluster"" mode. This forces baskets to line up with event clusters, at the cost of extra memory use. This new mode simplifies the basket layout within the file, reducing the amount of time handling special cases for the bulk IO mode. Because the baskets *must* grow to the size of an event cluster, we do not invoke `OptimizeBaskets` when one-basket-per-cluster mode is enabled. As this mode is expected to cause increased memory usage (the memory utilized by the `TTree` is more strongly tied to the variations in event size), we combine this with a technique borrowed from a CMS patchset to more aggressively shrink basket sizes after very large objects. The new basket shrinking algorithm will trigger whenever the basket is flushed. If the actual object size in the last clusters is significantly below the buffer size, then the basket will be shrunk. Given this tradeoff, I do not currently see this being enabled by default. The ideal ratio of `(basket buffer size)/(occupied buffer size)` is controlled by a new tunable in the `TTree`, defaulting to 1.1. A lower setting reduces overall memory usage at the cost of extra allocations; a higher setting increases aggregate memory usage. In writing out a 10k event CMS file (total CPU time is 32 minutes):. - Base case (without this patch):; - 888MB RSS; - 30 reallocations (shrinking of baskets due to low occupancy).; - 0.173ms taken for reallocation.; - New shrinking algorithm (this patch with defaults):; - 866MB RSS; - 4434 reallocations; - 97.0ms; - One basket per cluster mode with new shrinking algorithm:; - 902MB RSS; - 2882 reallocations; - 93.6ms. The CPU-time cost of the reallocation is 0.005% of total runtime (considering the file has to be read also, maybe 0.01% of output time?). This patch purposely leaves in the code that measures reallocation time in order to allow others to experiment; the intent is to disable / remove th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774:215,simpl,simplifies,215,https://root.cern,https://github.com/root-project/root/pull/774,1,['simpl'],['simplifies']
Usability,"By the way, from the new ROOT website, I do not see what is the clicks-series leading to the Old Users Guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10722#issuecomment-1151205866:103,Guid,Guide,103,https://root.cern,https://github.com/root-project/root/issues/10722#issuecomment-1151205866,1,['Guid'],['Guide']
Usability,"By the way, the TETRIS example seems broken, at least in Linux. It runs but it is not responsive to the keyboard (not able to move the parts). And Pause erases the screen momentarily.. ![image](https://user-images.githubusercontent.com/10653970/107710210-8e1a9b00-6c94-11eb-8427-dd66a3ae42d6.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7184#issuecomment-777854927:86,responsiv,responsive,86,https://root.cern,https://github.com/root-project/root/pull/7184#issuecomment-777854927,2,"['Pause', 'responsiv']","['Pause', 'responsive']"
Usability,"By the way, you are referring to the old ""User's Guide"". This Guide is now out dated. We do not update it anymore. The two main sources of documentation are the [Reference Guide](https://root.cern/doc/master/index.html) and the [Manual](https://root.cern/manual/). If some update is needed I guess it should be done in the[ reference of TThread](https://root.cern/doc/master/classTThread.html). May be the TThread part of the user guide should be updated and move into the reference guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7216#issuecomment-844170711:49,Guid,Guide,49,https://root.cern,https://github.com/root-project/root/issues/7216#issuecomment-844170711,5,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"By using std::apply, now available after moving to C++17, the implementation can be greatly simplified. # This Pull request:. ## Changes or fixes:; The way the value of a std::ntuple is printed. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; Nothing, it reduces the overall maintenance cost of the root codebase by simplifying it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13619:92,simpl,simplified,92,https://root.cern,https://github.com/root-project/root/pull/13619,2,['simpl'],"['simplified', 'simplifying']"
Usability,"By using std::apply, now available after moving to C++17, the implementation can be greatly simplified. # This Pull request:. This is a BP of https://github.com/root-project/root/pull/13619. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13887:92,simpl,simplified,92,https://root.cern,https://github.com/root-project/root/pull/13887,1,['simpl'],['simplified']
Usability,"C++ headers in '/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0:/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/x86_64-unknown-linux-gnu:/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/backward' at runtime.; -- And then fallback to: 'g++'; CMake Error: Could not open file for write in copy operation //nix/store/vqlvh9dv2prsrmk6lng8n66wgfpvra1j-llvm-13.0.1-lib/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. Possible source of the issue:; https://github.com/root-project/root/blob/master/interpreter/cling/cmake/modules/CMakeLists.txt#L4-L5. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; 1. The configurations works, just as it does on the 6.26 branch.; 2. If not feasible, the build error should at least guide the user / package aintainer the configuration option to solve the issue or where to find the solution. ### To Reproduce. 1. Build against the master branch (6.27, 0fafc31efb5a94472af2a6b35ded27796cb141c8) with CMake Flag `-Dbuiltin_llvm=OFF`.; (See the external context for steps to reproduce the behavior with the Nix package manager and Nixpkgs.); 2. See error. ### Setup; <!--; 1. ROOT version; 3. Operating system; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.27.* on the master branch (f9d15227e4c92eac7c6499379912d1ed24d0142b).; 2. Operating system: NixOS (Linux), on a x86_64 machine.; - system: `""x86_64-linux""`; - host os: `Linux 5.10.156, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `n",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:1844,clear,clear,1844,https://root.cern,https://github.com/root-project/root/issues/11920,1,['clear'],['clear']
Usability,"Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python; import array; import ROOT. def create():; f = ROOT.TFile(""dummy.root"", 'RECREATE'); t = ROOT.TTree(""tree"", 'A tree'); a = array.array('f', [42]); br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):; a[0] = x; t.Fill(). t.Write(); f.Close(). def test(typecode='f'):; f = ROOT.TFile(""dummy.root"", 'READ'); t = f.Get('tree'); a = array.array(typecode, [0]); status = t.SetBranchAddress('a', a); print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):; t.GetEntry(i); print(""a = %s"" % (a[0], )). create(); test(""f""); test(""d""); ```. Before this commit, the output would be like this:; ```txt; Status = 4; a = 21.0; a = 42.0; a = 1337.0; Status = 4; a = 5.442276803e-315; a = 5.483722033e-315; a = 5.690664868e-315; ```. With this commit, you get a clear error:; ```txt; Status = 0; a = 21.0; a = 42.0; a = 1337.0; Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a; Status = -2; a = 0.0; a = 0.0; a = 0.0; ```. Closes the following JIRA ticket:; https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16171:1367,clear,clear,1367,https://root.cern,https://github.com/root-project/root/pull/16171,1,['clear'],['clear']
Usability,"Can one of the threading people cross-check that this does what it's supposed to do? I don't have a good, simple test case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/892:106,simpl,simple,106,https://root.cern,https://github.com/root-project/root/pull/892,1,['simpl'],['simple']
Usability,"Can we simply add `const TROOT *&GetROOTPtrRef()`, in the source file of where `gROOT` is injected in the list of globals?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3208#issuecomment-457495268:7,simpl,simply,7,https://root.cern,https://github.com/root-project/root/pull/3208#issuecomment-457495268,1,['simpl'],['simply']
Usability,"Can we split the formatting commit of the existing code into a separate commit, please, such that everything "".help"" (and only that) is in a single commit? @couet should be able to help you with that. It makes reviewing much simpler, and I will review once this is done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4203#issuecomment-523858865:225,simpl,simpler,225,https://root.cern,https://github.com/root-project/root/pull/4203#issuecomment-523858865,1,['simpl'],['simpler']
Usability,"Can you add this to a super simple test, just to make sure we compile this case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9818#issuecomment-1031394700:28,simpl,simple,28,https://root.cern,https://github.com/root-project/root/pull/9818#issuecomment-1031394700,1,['simpl'],['simple']
Usability,Can you just add the two commits fixing the test? I have #15236 adding already xgboost and scikit-learn,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15237#issuecomment-2056871254:98,learn,learn,98,https://root.cern,https://github.com/root-project/root/pull/15237#issuecomment-2056871254,1,['learn'],['learn']
Usability,Can you please modify your code to follow the documentation guide lines described here https://root.cern.ch/how/formatting-comments-doxygen ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1327#issuecomment-344612301:60,guid,guide,60,https://root.cern,https://github.com/root-project/root/pull/1327#issuecomment-344612301,1,['guid'],['guide']
Usability,Can you suggest a PR and an expert of that part of ROOT will examine it ? Several things you mentioned here do not work or are not clear to me.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10065#issuecomment-1067013995:131,clear,clear,131,https://root.cern,https://github.com/root-project/root/issues/10065#issuecomment-1067013995,1,['clear'],['clear']
Usability,"Can't we just move the tests needing this infrastructure to roottest which is serving is pretty well for comparing to golden output, and which makes it much simpler to add such tests? That way we would not even need this ""common"" library for root.git's tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5297#issuecomment-615061213:157,simpl,simpler,157,https://root.cern,https://github.com/root-project/root/pull/5297#issuecomment-615061213,1,['simpl'],['simpler']
Usability,"Can't we simply take `vector<double>`s instead of `int size, double*`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7151#issuecomment-779333149:9,simpl,simply,9,https://root.cern,https://github.com/root-project/root/issues/7151#issuecomment-779333149,1,['simpl'],['simply']
Usability,Can't you simply use the `-Dbuiltin_xrootd=ON` option?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11750#issuecomment-1339375009:10,simpl,simply,10,https://root.cern,https://github.com/root-project/root/issues/11750#issuecomment-1339375009,1,['simpl'],['simply']
Usability,Capture CTRL+L in ROOT prompt to clear,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10057:33,clear,clear,33,https://root.cern,https://github.com/root-project/root/issues/10057,1,['clear'],['clear']
Usability,Change Log:; - Enable RFileDialog through REveManager; - Add checks for validity of table and filter expressions; - Clear unnecessary REveManager printouts,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8333:116,Clear,Clear,116,https://root.cern,https://github.com/root-project/root/pull/8333,1,['Clear'],['Clear']
Usability,"Change the buffer management in the new RooFit BatchMode such that; queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get; when doing different fits in one go with different numbers of events,; such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10736:79,clear,cleared,79,https://root.cern,https://github.com/root-project/root/pull/10736,1,['clear'],['cleared']
Usability,Change the comments format to make them visible in the ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7238:59,guid,guide,59,https://root.cern,https://github.com/root-project/root/pull/7238,1,['guid'],['guide']
Usability,"Changing the definition of infinity in RooFit from `1e30` to `std::numeric_limits<double>::infinity()`, and making some other changes that ensure no evaluation errors are logged with this new definition. * Code-format RooNumber.h and RooNumber.cxx; * Inline infinity constant and checks in `RooNumber`; * Make `TMath::AreEqualAbs()` return `true` when comparing `inf`; * Define infinity as `std::numeric_limits<double>::infinity()`; * RooTruthModel: local `xmin` and `xmax` to make code more readable; * Avoid `sin` or `cos` of infinity in RooTruthModel integral code; * Note change of infinity definition in RooFit. More details in the commit descriptions. With the increased use of inlined code and simpler comparisons in `RooNumber`, this is also speeding up RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12016:701,simpl,simpler,701,https://root.cern,https://github.com/root-project/root/pull/12016,1,['simpl'],['simpler']
Usability,Clear data row every time add a row to principal,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1475:0,Clear,Clear,0,https://root.cern,https://github.com/root-project/root/pull/1475,1,['Clear'],['Clear']
Usability,Clearer CMake output when Python2 is not found but Python3 is,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8084:0,Clear,Clearer,0,https://root.cern,https://github.com/root-project/root/issues/8084,1,['Clear'],['Clearer']
Usability,Clearly a bug. I am investigating. Something should have changed since 6.24. You can see it is ok here:; https://root.cern/doc/v624/classRooChi2Var.html,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8519#issuecomment-866780686:0,Clear,Clearly,0,https://root.cern,https://github.com/root-project/root/issues/8519#issuecomment-866780686,1,['Clear'],['Clearly']
Usability,Clearly not fully awake yet... :crossed_fingers: this actually works on *both* Linux *and* macOS!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1180200053:0,Clear,Clearly,0,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1180200053,1,['Clear'],['Clearly']
Usability,"Clearly, the original developers didn't care about IO for these classes. It's likely that you will run into other problems. If yes, please let me know here!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11876#issuecomment-1384366976:0,Clear,Clearly,0,https://root.cern,https://github.com/root-project/root/issues/11876#issuecomment-1384366976,1,['Clear'],['Clearly']
Usability,"Client code can use `auto*` to make it explicit that a pointer is returned. However `TFile::Get` is so common in ROOT, and so idiomatic, that I don't think the ambiguity will be a disturbance.; Also, the doxygen doc will clearly show that a `T*` is returned in the signature.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3501#issuecomment-469727804:221,clear,clearly,221,https://root.cern,https://github.com/root-project/root/pull/3501#issuecomment-469727804,1,['clear'],['clearly']
Usability,"Closing because the usecase is gone, and the features is probably impossible to implement in cppyy. Without a clear usecase, we should not go into this rabbit hole.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13875#issuecomment-1991844247:110,clear,clear,110,https://root.cern,https://github.com/root-project/root/issues/13875#issuecomment-1991844247,1,['clear'],['clear']
Usability,Closing the PR after some discussion. The added benefit of having a more robust usage of namespaces and clearer definition of the classes being used in the headers is not worth w.r.t. having to rebase larger PRs on top of these changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12981#issuecomment-1585597579:104,clear,clearer,104,https://root.cern,https://github.com/root-project/root/pull/12981#issuecomment-1585597579,1,['clear'],['clearer']
Usability,"Closing, because at this point it's not clear to me whether the functionality should be in TPython or in CPyCppyy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16019#issuecomment-2388756085:40,clear,clear,40,https://root.cern,https://github.com/root-project/root/pull/16019#issuecomment-2388756085,1,['clear'],['clear']
Usability,"Code from ROOT R project,; -> New features added. now you can use R functions in C++ very easy using the class TRFunctionImport, that have overloaded operators to use objects like functions that receives template arguments and return TRObjects.; -> Documentation updated in http://oproject.org/tiki-index.php?page=ROOT+R+Users+Guide#Import. Best Regards",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/74:327,Guid,Guide,327,https://root.cern,https://github.com/root-project/root/pull/74,1,['Guid'],['Guide']
Usability,Col2 option is a bitmap Representation of the histogram to make the col option very fast when the histogram has many bins and the bin size is close to one pixel. But this bitmap graphics and ps and pdf are vector graphics. So col2 produces an empty plot. This is not a bug. This feature is explained in the THistPainter reference guide (look at it) in the COL Option section.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6822#issuecomment-728770705:330,guid,guide,330,https://root.cern,https://github.com/root-project/root/issues/6822#issuecomment-728770705,1,['guid'],['guide']
Usability,"Commit df0b689 simplified the search for the C++ include directories and; tried to use a locale independent regex. However this regex doesn't work for all locales, for example in German; the string in the output is not. ```; #include <...> search starts here:; ```. but the word order is switched and we have. ```; Suche für »#include <...>« beginnt hier:; ```. As such I propose to go back to C-locale for this query to be completely; safe against weird locale settings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5547:15,simpl,simplified,15,https://root.cern,https://github.com/root-project/root/pull/5547,1,['simpl'],['simplified']
Usability,"Complete code reformatted to use JS classes.; Makes layout more clear and compact.; Optimize io code - use more internal constants, which; very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script; Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9779:64,clear,clear,64,https://root.cern,https://github.com/root-project/root/pull/9779,1,['clear'],['clear']
Usability,"Concerning the ScientificColourMaps, more than having 'all of them', it would be useful to have them in a 'classified manner', clearly identified in the TColor documentation. Or maybe have one of each type. - Centric value type (only use when symmetric bin contents) + ""Inverted variant""; - Sequential type (usual case) + ""Inverted variant""; - Discrete variants; Here the full description: https://www.nature.com/articles/s41467-020-19160-7/figures/6. Another option I was thinking was that one could follow the approach of ""Themes"" used in many programs to define their color set. If a user downloads some themes from ScientificColourMaps and puts them in $HOME/.config/root/color-palettes/. then gStyle->SetPalette(""batlow"") would automatically load that one, if existing, using something like the script I posted above. This would make it pretty flexible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8098#issuecomment-832859001:127,clear,clearly,127,https://root.cern,https://github.com/root-project/root/issues/8098#issuecomment-832859001,1,['clear'],['clearly']
Usability,Continue Jolly's work to Generate the reference guide with Makefile and Github Actions. This initial PR is:. https://github.com/root-project/root/pull/15337,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15769:48,guid,guide,48,https://root.cern,https://github.com/root-project/root/pull/15769,1,['guid'],['guide']
Usability,"Cool, good to hear that the PR goes in the right direction then!. > It is still not entirely clear in advance which features require connectivity. All features of builtins that do require network note this in their description:; * https://root.cern/install/build_from_source/#all-build-options; * https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L87. I agree that `builtin_openui5` should explicitly say that it requires network if `OFF`. For the confusing name with `builtin_`, do you have a suggestion to make this clearer? I don't think there are many options there, we meant of course builtin to the ROOT build, not the source tree :slightly_smiling_face: . About the pre-populating of FetchContent locations: I was facing the same problem recently for nix packages. I fixed it in the end by patching the CMake code of ROOT:; https://github.com/NixOS/nixpkgs/pull/308497",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11603#issuecomment-2102765857:93,clear,clear,93,https://root.cern,https://github.com/root-project/root/issues/11603#issuecomment-2102765857,2,['clear'],"['clear', 'clearer']"
Usability,"Cool, thanks for the feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7352#issuecomment-799383258:21,feedback,feedback,21,https://root.cern,https://github.com/root-project/root/pull/7352#issuecomment-799383258,1,['feedback'],['feedback']
Usability,"Cool, thanks! I don't have a strong opinion on it either, but if it works this should be the simplest solution to avoid replacing `find_package` and we can close #8633.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16274#issuecomment-2298776505:93,simpl,simplest,93,https://root.cern,https://github.com/root-project/root/pull/16274#issuecomment-2298776505,1,['simpl'],['simplest']
Usability,"Copy the code for the `--notebook` option from `rootx/src/rootx.cxx`, which is for X11 and Cocoa only (i.e. Not built on Windows). This is the simplest (and less intrusive) way of fixing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9142:143,simpl,simplest,143,https://root.cern,https://github.com/root-project/root/pull/9142,1,['simpl'],['simplest']
Usability,"Correct - and I wanted to start small (`vector`, `string`) and see what roottest has to say about that. I did expect some test failures?! That would guide me what else we should expose. Which makes me wonder whether this works at all - nope, it doesn't. Let me fix that...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11027#issuecomment-1192710542:149,guid,guide,149,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1192710542,1,['guid'],['guide']
Usability,"Correct, RDF was not used at all -- flamegraphs show the full call stacks. These are Jakob's I/O benchmarks from ACAT 2017, which showed TTreeReader's excessive overhead for the first time (as far as I know). There is a version that uses RDF but I did not run it, this is TTree vs TTreeReader (pre- and post-patch). It would be great if you could confirm that there is no sensible difference in performance with the patch, at least for this benchmark. A simplified version of Jakob's setup with (hopefully clear enough) instructions in the README can be found in my rootonly branch that I linked above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3216#issuecomment-456478794:454,simpl,simplified,454,https://root.cern,https://github.com/root-project/root/pull/3216#issuecomment-456478794,2,"['clear', 'simpl']","['clear', 'simplified']"
Usability,"Could you expand a little more the commit message and the PR description. I fail to capture the intent. In general, ROOT_GENERATE_DICTIONARY is very complex and needs to be simplified and refactored, unless this is fixing a real issue I'd be reluctant to make it more complex than it already is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5172#issuecomment-600574122:173,simpl,simplified,173,https://root.cern,https://github.com/root-project/root/pull/5172#issuecomment-600574122,1,['simpl'],['simplified']
Usability,"Could you please make the file name to contain the ROOT version? When I download ""Complete User's Guide in A4 format"" from http://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuideA4.pdf, I've no idea whether it was changed in 2018 or in 2021.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7279#issuecomment-785698708:98,Guid,Guide,98,https://root.cern,https://github.com/root-project/root/issues/7279#issuecomment-785698708,3,"['Guid', 'guid']","['Guide', 'guide', 'guides']"
Usability,Crash when setting `LearningRateSchedule` for training Keras model on TMVA,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9624:20,Learn,LearningRateSchedule,20,https://root.cern,https://github.com/root-project/root/issues/9624,2,['Learn'],['LearningRateSchedule']
Usability,"Current screenshot:. ```; root [0] .?. Cling (C/C++ interpreter) meta commands usage; All commands must be preceded by a '.', except; for the evaluation statement { }; ==============================================================================================; Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with; 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file; '>' or '1>'		- Redirects the stdout stream only; '2>'			- Redirects the stderr stream only; '&>' (or '2>&1')		- Redirects both stdout and stderr; '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,; 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3); 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level).; 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels).; 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style; 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics; 				 as well as a list of their names. .g <var>				- Prints out information about global variable; 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the; 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes; 				 and the late binding. .debug <level>		- ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10121#issuecomment-1084927674:735,undo,undo,735,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674,1,['undo'],['undo']
Usability,"Currently RDF reads all column values via a single RColumnValue type,; which knows how to deal with TTreeReaderValues, TTreeReaderArrays,; datasource columns and defined columns. Not only that's too many hats; for a single type, but this design requires some runtime logical branching; to decide which path to take that can be simplified.; Finally and most importantly, going forward we want smarter integration; with RDataSource, and we will require RDataSource-specialized column readers.; In order to allow this latter use-case and simplify some logical; branching, instead of a single RColumnValue type we add specialized; column reader types. RDefineReader reads values of Defined columns, RTreeColumnReader reads values; via TTreeReaderValues or TTreeReaderArrays depending on the class specialization,; and RDSColumnReader reads values from a datasource.; A given computation graph will only make use of one between; RTreeColumnReader and RDSColumnReader. The new column readers bring two main advantages:; - logical branching has been reduced (for now, at the cost of introducing a; virtual call); - the new design makes it simpler to insert datasource-specific column; readers",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6170:327,simpl,simplified,327,https://root.cern,https://github.com/root-project/root/pull/6170,3,['simpl'],"['simpler', 'simplified', 'simplify']"
Usability,"Currently http/webgui/eve7 tutorials are vetoed because of many reasons; But main reason - such tutorials designed so that `THttpServer` should runs forever ; that user can test them in the web browsers. This can be changed.; All tutorials used in ROOT testing started with arguments `root -b -l -q tutorial_name.C`; In tutorials itself one could detect that using something like:; ```; bool test_mode = gApplication->Argn() > 3 &&; !strcmp(gApplication->Argv(1),""-b"") && ; !strcmp(gApplication->Argv(2),""-l"") && ; !strcmp(gApplication->Argv(3),""-q"");; ```; Especially `-q` argument is clear sign that macro should not be running forever. Alternatively, one can set special environment variable and test it inside tutorials with:; ```; bool test_mode = gSystem->Getenv(""ROOT_TESTING"") != nullptr;; ```; But this requires that ROOT_TESTING environment variable should be set before. In any case - if such `test_mode` detected, macro should behaves differently:; 1. Do not start real http server while it most probably will conflict with other tutorials running in parallel.; 2. Run macro for only limited number of loops for ~3 seconds.; 3. Check production of png images - for most of these tutorials `THttpServer` or `RCanvas` or `REve` can generate image",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6651:586,clear,clear,586,https://root.cern,https://github.com/root-project/root/issues/6651,1,['clear'],['clear']
Usability,"Currently, `gSystem->GetHomeDirectory()` will prefer to use the value from `etc/passwd` on Linux systems. In the Snap packaging, this causes issues due to the sandboxing permissions and is currently worked around by using LD_PRELOAD to hijack `getpwuid()` and force it to respect $HOME. From what I see, every other instance in the ROOT repository already prefers the $HOME variable, apart from this one instance here. I wouldn't expect most users to notice this patch, but I would expect users who might have a need to change this value to assume simply changing $HOME is sufficient and expect this behaviour, which can be done without any real complexities; rather than changing /etc/passwd which is a much more involved task and relies upon legacy knowledge of Unix systems.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7083:548,simpl,simply,548,https://root.cern,https://github.com/root-project/root/pull/7083,1,['simpl'],['simply']
Usability,"Currently, jitted actions spawn into existence right before the event; loop (at jitting time). This makes it impossible or unnecessarily complex to:; 1) let RResultPtrs own actions; 2) let actions own their previous node; 3) detect that an action has been booked before the event loop has run. Points 1 and 2 are required by ROOT-9416.; Point 3 is required by several graph-traversing features, e.g. ROOT-9458. The solution is to align the jitted action logic with jitted filters and; defines, and use a placeholder RJittedAction object that sits into the; computation graph and forwards all relevant calls to the concrete, jitted; action which will be created at a later time. RResultPtr logic is also greatly simplified since its action pointer can now always be set at construction time and is always guaranteed to be valid (it points to the RJittedAction owned by the RLoopManager).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2398:711,simpl,simplified,711,https://root.cern,https://github.com/root-project/root/pull/2398,1,['simpl'],['simplified']
Usability,"Currently, when I visited any page hosted at root.cern (but not root.cern.ch...) I get a big scary warning (on Firefox) which directs me to https://transparencyreport.google.com/safe-browsing/search?url=http:%2F%2Froot.cern%2F. ![image](https://user-images.githubusercontent.com/9206569/94927540-0b810400-0488-11eb-995d-0eb9ac4e9faf.png). This started this morning. I assume this will eventually be fixed, but as a workaround to make the documentation usable it might be worth changing all the internal links to point to root.cern.ch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6539:452,usab,usable,452,https://root.cern,https://github.com/root-project/root/issues/6539,1,['usab'],['usable']
Usability,"Custom ranges seemed to be supported for analytical integration in; RooNDKeysPdf, but the code was not activated. Numerical integration was; always used for custom ranges. Unfortunately, using the existing code for analytical integration with; custom ranges gives the wrong result. This commit suggests how this can; be done with new and simpler code that has a logic similar to; RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8019:338,simpl,simpler,338,https://root.cern,https://github.com/root-project/root/pull/8019,1,['simpl'],['simpler']
Usability,Cxxmodules simplify lib registration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3798:11,simpl,simplify,11,https://root.cern,https://github.com/root-project/root/pull/3798,1,['simpl'],['simplify']
Usability,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do; ``` ; g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe ; ./arrow.exe; ```; and get. ```; $ ./arrow.exe . *** Break *** floating point exception. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc; entry=0x7ffc45f54860, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408; #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275; #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85; ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same.; Then the code divides over their difference which is 0. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6513#issuecomment-702670088:1632,simpl,simple,1632,https://root.cern,https://github.com/root-project/root/pull/6513#issuecomment-702670088,1,['simpl'],['simple']
Usability,"Dear @couet ,; > so I guess that's fine.. . OK. I've put [Do not merge] to the title, as I don't see if there is a label for such requests. . >clearly faulty code in a PR. My fault. I've replaced that with suggestion from @pcanal. >This sounds like an ""obvious thing"" ...padsave is equal to gPad on line 780... did I missed soothing ?. Maybe that is because of cast. I was trying to pay with it, but w/o much success. The IsBatch() was logical and did the job for that separate case... Will have a look soon. Best regards,. Andrii. Edit: but for the proper cast one should replace C-like cast with something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6469#issuecomment-704330700:143,clear,clearly,143,https://root.cern,https://github.com/root-project/root/pull/6469#issuecomment-704330700,1,['clear'],['clearly']
Usability,"Dear @couet thank you very much. Is this something that could be implemented soon in ROOT. If it's a simple change to add the copy CTOR to the API it would avoid us in CMSSW to have to create a custom-made wrapper for TH2Poly.; Many thanks in advance, Pedro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13075#issuecomment-1891586098:101,simpl,simple,101,https://root.cern,https://github.com/root-project/root/issues/13075#issuecomment-1891586098,1,['simpl'],['simple']
Usability,"Dear @etejedor ; I have no local built of ROOT - it is too heavy for me - I am always rely on LCG releases or nightlies. ; The problem appeared not earlier than a week ago. There was a few days break in tests of my project, ; and restarting tests after this pause, couple of days ago, I've observed this behaviour.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8152#issuecomment-839744359:258,pause,pause,258,https://root.cern,https://github.com/root-project/root/issues/8152#issuecomment-839744359,1,['pause'],['pause']
Usability,"Dear @guitargeek ,; thanks a lot for your fast feedback! Indeed, v6-32-00-patches builds fine.; I'm building root as part of the ALICE software stack with custom build options. Using pre-packaged versions will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15585#issuecomment-2123267444:47,feedback,feedback,47,https://root.cern,https://github.com/root-project/root/issues/15585#issuecomment-2123267444,1,['feedback'],['feedback']
Usability,"Dear @guitargeek . ... and I have one more problem with another test no my project. It also hangs.. ; Unforunately it i not so simple to isolate,(that's why I am not reporting this problem; since I have no simple reproducer) but since it also involves C++ virtual functions ; reimplemented in python, migth be the unnderlying reason is the same..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15085#issuecomment-2036734953:127,simpl,simple,127,https://root.cern,https://github.com/root-project/root/issues/15085#issuecomment-2036734953,2,['simpl'],['simple']
Usability,"Dear @jan-busa , @lmoneta : it is not clear to me from the conversation if this is still an issue. If not, can this be closed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12770#issuecomment-1926372761:38,clear,clear,38,https://root.cern,https://github.com/root-project/root/issues/12770#issuecomment-1926372761,1,['clear'],['clear']
Usability,"Dear @mmaneyro ,. Thank you for your report. I take it that `Event.NParticles` is a sub-branch of the `Event` branch. What you describe is not really surprising, as `Redefine` is meant to substitute the values of the full column of the RDataFrame (column==branch). The difference in behaviour between non-jitted and jitted code is more surprising though. As a fast workaround, you could be more explicit about the columns you want to save in your output TTree by adding the list of column names to the `Snapshot` call. ```cpp; auto snap = df2.Snapshot(""LHEF"", ""out_snapshot.root"", {""Event.NParticles""});; ```. In order for me to better reproduce your problem though, I believe I would also need some instructions on how to generate the dictionaries for the classes in your file. Meanwhile, I can try to come up with a simpler reproducer, but having also your scenario would help. Cheers,; Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13846#issuecomment-1760263815:818,simpl,simpler,818,https://root.cern,https://github.com/root-project/root/issues/13846#issuecomment-1760263815,1,['simpl'],['simpler']
Usability,"Dear @xkzl ,. Indeed, I can see the same thing with the following simple example ; ```cpp; // myheader.hxx; #ifndef myheader; #define myheader. enum class MyEnum; {; kFirst,; kSecond,; kThird; };. template <MyEnum T>; class MyClass; {; };. #endif ; ```. ```cpp; // LinkDef.h; #ifdef __CLING__; #pragma link C++ enum MyEnum;; #pragma link C++ class MyClass < MyEnum::kFirst> + ;; #pragma link C++ class MyClass < MyEnum::kSecond> + ;; #pragma link C++ class MyClass < MyEnum::kThird> + ;; #endif; ```. ```; $: rootcling -f myheaderdict.cxx myheader.hxx LinkDef.h -rmf myheader.rootmap; ```. ```; # myheader.rootmap; { decls }; template <MyEnum> class MyClass;. [ ]; # List of selected classes; class MyClass<(MyEnum)0>; class MyClass<(MyEnum)1>; class MyClass<(MyEnum)2>; class MyClass<MyEnum::kFirst>; class MyClass<MyEnum::kSecond>; class MyClass<MyEnum::kThird>; # List of selected enums and outer classes; enum MyEnum; ```. I am unsure whether we are missing some different configuration or spelling. @pcanal might be able to help here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16496#issuecomment-2365069147:66,simpl,simple,66,https://root.cern,https://github.com/root-project/root/issues/16496#issuecomment-2365069147,1,['simpl'],['simple']
Usability,"Dear @xkzl ,. Thank you for your report. From the stack trace you provided (formatted on two lines):; ```; error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ; ""filter expression returns a type that is not convertible to bool""; ```. The error seems quite clear to me. You have some function or expression passed to a call to `df.Filter` somewhere that does not respect the filter signature, i.e. it does not return `bool`. Let me know if you find out where this is happening. Otherwise, you can post here the full program you are trying to compile and I can try to help you. Cheers,; Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13656#issuecomment-1722875388:292,clear,clear,292,https://root.cern,https://github.com/root-project/root/issues/13656#issuecomment-1722875388,1,['clear'],['clear']
Usability,"Dear @xkzl ,. Thanks for your report. As a first attempt at fixing it, could you try specifying the pragma for the enum as simply. ```; #pragma link C++ enum MyEnum;; ```. Note the removal of the `class` keyword.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16496#issuecomment-2365047420:123,simpl,simply,123,https://root.cern,https://github.com/root-project/root/issues/16496#issuecomment-2365047420,1,['simpl'],['simply']
Usability,"Dear Denys,. Thanks for the logs and for the information. So if you cannot use c++17, why not simply use c++14 and disable root7?. Cheers, Bertrand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12492#issuecomment-1473275035:94,simpl,simply,94,https://root.cern,https://github.com/root-project/root/issues/12492#issuecomment-1473275035,1,['simpl'],['simply']
Usability,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap ; You can see the actual (failing) test code in ; https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py; It does not rely any external data - all data is produced internally ; It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. ; But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474#issuecomment-864243565:42,simpl,simple,42,https://root.cern,https://github.com/root-project/root/issues/8474#issuecomment-864243565,1,['simpl'],['simple']
Usability,"Dear Jonas. A huge thank you for your investigation on this, and kind explanation. Almost everything on what you explained is clear to me. But let me give you a tiny point where I don't completely understand. **About the <55 instead of <=55. You are right : I made a mistake there in my minimum example. But the principle of the comment stay. I made the fix in order to ""synchronize"" with the numerical values that you gave in your kind answer (I deduced that you made the fix). -->ok for that. **Case option_normalize_hist=1. Your comment : ""n_times_pdf_continuum->getVal()*bin_width=0.0181818 : here n_times_pdf_continuum is a RooAddPdf, which automatically normalizes itself. You create it from the continuum with 55 bins and bin width one, so I'd expect 1/55 which is indeed 0.0181818""; -->I disagree : my pdf is not just ""pdf_continuum"" : I put *n* times pdf_continuum where n is here the number of bkg : n=2200.; So I would expect that n times pdf should be 2200 * (1/55) = 40. **n_times_pdf_continuum is a RooAddPdf (with one element in the addition) with one parameter of yield, and one parameter of shape, so it is a extended pdf : n_bkg * times a pdf.**. **Case option_normalize_hist=0.; From your log, you changed a bit my code since in my code, I was putting, for the case not normalize :; if (option_normalize_hist); value_pdf=nb_events*pdf->getVal()*bin_width;; else; value_pdf=pdf->getVal()*bin_width;. But I understood your point (and it is clear)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7991#issuecomment-826815525:126,clear,clear,126,https://root.cern,https://github.com/root-project/root/issues/7991#issuecomment-826815525,2,['clear'],['clear']
Usability,"Dear ROOT developers,. we have met with a problem reading more than 2-dimensional arrays in TTrees using MakeClass. The problem appears only on the **Windows ROOT 6 version** (same code works on ROOT 6 on Linux, as well as on ROOT 5 in Windows). The code to reproduce is simple:. A tree is created by:; ```; TFile f(""newtree.root"", ""NEW"");; TTree t(""MyTree"", ""Test tree"");; double x[5][5][5];; t.Branch(""x"", x, ""x[5][5][5]"");; t.Fill();; t.Write();; f.Close();; ```; Then produce MakeClass from the tree: ```MyTree->MakeClass()```. Finally, try to read that tree via the class MyTree:; ```; .L MyTree.C; MyTree t;; t.Loop(); // crashes with bad-memory-allocation message (or silently); t.b_x->GetAddress(); // also crashes; ```. No problem is seen when using 2D or 1D arrays, nor simple numbers. Thanks, Pavel",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8833:271,simpl,simple,271,https://root.cern,https://github.com/root-project/root/issues/8833,2,['simpl'],['simple']
Usability,"Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro); ```c++; TGeoManager::Import(""Geometry.root""); gGeoManager->GetMasterVolume()->Draw(""ogl""); ```; and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed?. My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6556:1067,simpl,simple,1067,https://root.cern,https://github.com/root-project/root/issues/6556,2,['simpl'],['simple']
Usability,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn!. What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, ; Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13846#issuecomment-1760467268:911,simpl,simple,911,https://root.cern,https://github.com/root-project/root/issues/13846#issuecomment-1760467268,2,"['learn', 'simpl']","['learn', 'simple']"
Usability,"Dear Wolf,. there was a strange interval of time between the submission of the patch and its acceptance. I now merged this PR and the three patches you proposed on the root forum: thanks a lot - your and Paul's code represents a clear added value for ROOT! I am still ironing out some issues with the file here https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880#p100922 .; I cannot unfortunately comment on the pending invitation since I am not involved in the organisation of the IML meetings. Cheers,; Danilo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/327#issuecomment-280628922:229,clear,clear,229,https://root.cern,https://github.com/root-project/root/pull/327#issuecomment-280628922,1,['clear'],['clear']
Usability,"DeclUnloader was trying to unload template instantiations whose point of (first) instantiation was the PCH. This caused problems with the code below. In particular, the class specialization `std::vector<int>` was instantiated in the PCH as part of `std::stack<...>`, which in turn was required by the STL <regex> header.; ```; root [0] std::vector<int> foo, bar;; root [1] std::swap(foo, bar);; root [2] .undo 1; root [3] std::swap(foo, bar);; IncrementalExecutor::executeFunction: symbol '_ZSt15__alloc_on_swapISaIiEEvRT_S2_' unresolved while linking [cling interface function]!; ```. This PR fixes the issue avoiding the unload of decls instantiated in the PCH.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4447:405,undo,undo,405,https://root.cern,https://github.com/root-project/root/pull/4447,1,['undo'],['undo']
Usability,Deep Learning Module,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/817:5,Learn,Learning,5,https://root.cern,https://github.com/root-project/root/pull/817,1,['Learn'],['Learning']
Usability,Deep learning code from Peter; with some fixes. Best; Omar,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/145:5,learn,learning,5,https://root.cern,https://github.com/root-project/root/pull/145,1,['learn'],['learning']
Usability,"Diagnostic findings:. Parameters are not saved unless there is a constraint due to [this line](https://root.cern.ch/doc/v624/RooMCStudy_8cxx_source.html#l00197). The documentation makes no mention of the need for constraints, and the use case without constraints is clear. . *External* constraints do not work because of the [use](https://root.cern.ch/doc/v624/RooMCStudy_8cxx_source.html#l00189) of `RooAbsPdf::getAllConstraints`, which does not account for external constraints, to determine the existence of constraints.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9490#issuecomment-1003615961:266,clear,clear,266,https://root.cern,https://github.com/root-project/root/issues/9490#issuecomment-1003615961,1,['clear'],['clear']
Usability,"Directory` set the path to its `fName` and `fTitle`.; * `TSystemDirectory::GetListOfFiles()` gets the path of the directory from its title (`fTitle`), and returns a `TList *`, each element in which represents the child item (with basename `file` and path `sdirpath`) inside the directory the following ways:; * If the element is a directory, it would be `new TDirectory(file, sdirpath)`; * If the element is a file, it would be `new TFile(file, fTitle)`. Which results in the following bugs:. * If an element of `TSystemDirectory::GetListOfFiles()` is a file, its `IsDirectory()` will try to look for the file basename in the *current working directory* and produce the wrong result.; * As its perfectly legal to cast `TSystemDirectory *` to `TSystemFile *`, a `TSystemFile *tsysfFoo` with name ""foo"" and title ""foo"" could mean either; * A file with path `foo/foo`; * A directory with path `foo`, which was originally an instance of `TSystemDirectory *`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The name-title interface of both `TSystemFile` and `TSystemDirectory` is unified. Due to the inconsistency of the original interface, there's no fully-backward-compatible solution. The possible interface would be one of the followings:. | Name | Title | Pros | Cons |; |-|-|-|-|; | basename | dirname | the most informative and good-looking; closer to what GetListOfFiles() tries to output | incompatible to the original `TSystemFile` and `TSystemDirectory` interfaces |; | basename | full path | closer to the original `TSystemDirectory` interface | incompatible to the original `TSystemDirectory` interface |; | full path | dirname | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | basename | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | full path | closer to the original `TSystemFile` and",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12350:1517,clear,clear,1517,https://root.cern,https://github.com/root-project/root/issues/12350,1,['clear'],['clear']
Usability,"Disclaimer: I am not sure whether this is:; * 0 bug report (intented / wontfix),; * 1 or 2 bug reports. . Depending on feedback, We can close and / or I can create dedicated bugs. . ### Observations; There are two changes in 6.26.00:; * `TRint` exits hard for unknown arguments. ; * `TRint` crashes when instantiated with `*argc = nullptr` and / or `argv = nullptr` which are the default values for `TApplication` and hence may be used by existing users of the `TRint` constructor. . ### Affected use cases; Applications may do something like:; ```cpp; TRint *app = new TRint(""app"", 0, NULL);; ...; app->Run(kTRUE);; ```; Applications may also use `TRint` during operation. One existing model some applications I use are employing is:; * Create a `TRint` shortly after startup, passing in `argc` and `argv`. ; * Allow the user to drop to a ROOT interpreter prompt. This is then done by calling `app->Run(kTRUE);`. A user can use the interpreter to inspect state of the analysis software, and exit it again to let the software continue. . The latter approach is extremely useful for example to shell out after analysis software startup, or inside an event, such that the user can interactively analyze objects right from a ROOT interpreter shell. . ### Questions; * Is the use case ""use TRint as class to drop into the interpreter"" supported? ; The changelog of 6.26.00 reads like `TRint` is meant for internal use by `root.exe` only, but there seems to be no easy alternative. ; Depending on the reply, this could be a separate bug report, or a ""wontfix"". ; * If the use case is / should be supported, It would be useful to be able to allow unsupported arguments to pass through, for use in applications which are not `root.exe`. ; * For improved backwards compatibility and safety, not crashing when being passed `*argc = nullptr` and / or `argv = nullptr` would be nice. . In case somebody else is hit by this, I am right now using this hack as workaround:; ```cpp; int dargc = 1;; char** dargv = &a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10090:119,feedback,feedback,119,https://root.cern,https://github.com/root-project/root/issues/10090,1,['feedback'],['feedback']
Usability,"Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way!. ### Explain what you would like to see improved; At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved; As far as I can tell, what happens is this:. ```; THistPainter::Paint() is called; -> PaintInit() is called, this populates the Hparam structure with the old axis ranges; -> PaintFrame() is called; -> RecalculateRange() is called; -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal; -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel; -> The frame is painted with the old axis ranges; -> The histogram is drawn with old ranges; ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce; Simple macro - try zooming on the lower axis:; `; {; TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);; hist->FillRandom(""gaus"", 10000);; TF1 *func = new TF1(""func"", ""gaus"");; hist->Fit(func);; TRatioPlot *plot = new TRatioPlot(hist);; plot->Draw();; }; `. ### Setup; 1. ROOT 6.25/01; 2. macOS 11.4; 3. build from git. ### Additional context; There is a comment ; ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize""; in TRatioPlot.cxx so I assume at least one other person knows about this behavior",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9263:970,simpl,simply,970,https://root.cern,https://github.com/root-project/root/issues/9263,2,"['Simpl', 'simpl']","['Simple', 'simply']"
Usability,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise; 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8295#issuecomment-852277296:240,simpl,simple,240,https://root.cern,https://github.com/root-project/root/issues/8295#issuecomment-852277296,1,['simpl'],['simple']
Usability,"Discussion with @eguiraud and @vepadulano:; - Rename DataSource to Dataset; - Add type and name of dataset; - Add type of datasource; - Number of slots; - Make ""Numbers of ..."" and other information a simple table; - Add it to the cheat sheet. To do so we need an additional public API:; - GetDatasetInfo, returns string like `/path/to/file:name`, TBD. I may put in all information except the dataset info first and update the output of `Describe` later. `Describe` is API-wise fixed but it's documented that the content of the returned string can change since it's meant for interactive usage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7561#issuecomment-817629082:201,simpl,simple,201,https://root.cern,https://github.com/root-project/root/issues/7561#issuecomment-817629082,1,['simpl'],['simple']
Usability,Do I understand correctly this affects only scoped enums within a vector? Can I simply fix it on my side by moving to `enum class Foo : int {}`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16312#issuecomment-2320321003:80,simpl,simply,80,https://root.cern,https://github.com/root-project/root/issues/16312#issuecomment-2320321003,1,['simpl'],['simply']
Usability,"Do not skip the condition to avoid to build a normalization ratio integrals for the composite terms of the conditional RooProdPdf. The code which was avoid to create the ratio of integrals when the provided range is equal to the default range of the variables was skipped. Not clear why, it is now re-added. This seems to fix the performance issue observed in ; https://root-forum.cern.ch/t/bug-range-command-enforces-numerical-integral/43350.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7178:277,clear,clear,277,https://root.cern,https://github.com/root-project/root/pull/7178,1,['clear'],['clear']
Usability,"Do we need to keep the credential file around during the time that the build happens? Or can we delay the creation of this file until after the build? Or remove it before the build starts? I understand that the CI workflow can be maliciously changed - but a change to the CI workflow is a very visible change, more than a simple addition of `print some credential file` as part of the build system...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12201#issuecomment-1412357738:322,simpl,simple,322,https://root.cern,https://github.com/root-project/root/pull/12201#issuecomment-1412357738,1,['simpl'],['simple']
Usability,"Do you really want to destroy the arrays ? It is not better to leave the space allocated in memory to be filled back by other points, like clear() on a std::vector ? ; Otherwise, I think this function is not needed. There is already a TGraph::Set(0). Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/39#issuecomment-64431855:139,clear,clear,139,https://root.cern,https://github.com/root-project/root/pull/39#issuecomment-64431855,1,['clear'],['clear']
Usability,Do you see the same memory usage?. Also notice that the issue with the first reproducer might simply be some issue with my attempt to swap the arrow buffers for the std::vector.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11853#issuecomment-1343199135:94,simpl,simply,94,https://root.cern,https://github.com/root-project/root/issues/11853#issuecomment-1343199135,1,['simpl'],['simply']
Usability,Do you understand why the PR is not marked as solved? I can't see any unmerged commits. I simply closed it by hand.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/280#issuecomment-253759853:90,simpl,simply,90,https://root.cern,https://github.com/root-project/root/pull/280#issuecomment-253759853,1,['simpl'],['simply']
Usability,Doc for `RInterface::Take` isn't clear about `column` parameter,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16487:33,clear,clear,33,https://root.cern,https://github.com/root-project/root/issues/16487,1,['clear'],['clear']
Usability,Document current coding style guidelines.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2298:30,guid,guidelines,30,https://root.cern,https://github.com/root-project/root/pull/2298,1,['guid'],['guidelines']
Usability,Doesn't https://github.com/root-project/cling/issues/430 require a simpler fix by adding libSerialization to the list of linked libraries?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563#issuecomment-2119129084:67,simpl,simpler,67,https://root.cern,https://github.com/root-project/root/pull/15563#issuecomment-2119129084,1,['simpl'],['simpler']
Usability,"DrawClone also create a new object object see line 225 [here](https://root.cern/doc/master/TObject_8cxx_source.html#l00219) . The problem with DrawClone is that it will go in the SelectedPad, not in the Pad define by cd()... They may coincide sometime but not always. So, I think it is better to make it clear a Clone is needed to avoir deletion. Then this object is drawn ... but the primary thing is to avoid deletion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5680#issuecomment-633535272:304,clear,clear,304,https://root.cern,https://github.com/root-project/root/pull/5680#issuecomment-633535272,1,['clear'],['clear']
Usability,DrawClone draws in in the SelectedPad see https://root.cern/doc/master/classTObject.html#a7cd0f76ae1791c469f9472a9d4c8d6f9; It was initially meant to be used interactively to draw an object from a pad to the selected one.; The question is more: Why do we need DrawClone in these examples (a simple Draw should be fine) ? I do not have FITS installed right now. I will need to make a new ROOT install with it to try.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5680#issuecomment-633400581:291,simpl,simple,291,https://root.cern,https://github.com/root-project/root/pull/5680#issuecomment-633400581,1,['simpl'],['simple']
Usability,"During ROOT's build of Core.pcm, byproduct modules are built. rootcling was complaining about some headers not appearing in Core.pcm, despite them ending up in the byproduct pcms. Simply don't complain about headers not in the pcm if these headers are actually in a byproduct. In the same vein, do not forcefully include them in teh pcm, as they are already included in the byproduct which should be sufficient. This circumvents the warnings:. ```; [2751/6001] Generating G__Core.cxx, ../lib/Core.pcm; Warning in <CheckModuleValid>: after creating module ""Core"" the following headers are not part of that module:; strlcpy.h (already part of top-level module ""ROOT_Foundation_C""); snprintf.h (already part of top-level module ""ROOT_Foundation_C""); ESTLType.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TClassEdit.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); ThreadLocalStorage.h (already part of top-level module ""ROOT_Foundation_C""); ROOT/RStringView.hxx (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TIsAProxy.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TVirtualIsAProxy.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12067:180,Simpl,Simply,180,https://root.cern,https://github.com/root-project/root/pull/12067,1,['Simpl'],['Simply']
Usability,"During ROOT's build of Core.pcm, byproduct modules are built. rootcling was complaining about some headers not appearing in Core.pcm, despite them ending up in the byproduct pcms. Simply don't complain about headers not in the pcm if these headers are actually in a byproduct. In the same vein, do not forcefully include them in teh pcm, as they are already included in the byproduct which should be sufficient. This circumvents the warnings:. ```; [2751/6001] Generating G__Core.cxx, ../lib/Core.pcm; Warning in <CheckModuleValid>: after creating module ""Core"" the following headers are not part of that module:; strlcpy.h (already part of top-level module ""ROOT_Foundation_C""); snprintf.h (already part of top-level module ""ROOT_Foundation_C""); ESTLType.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TClassEdit.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); ThreadLocalStorage.h (already part of top-level module ""ROOT_Foundation_C""); ROOT/RStringView.hxx (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TIsAProxy.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TVirtualIsAProxy.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); ```. (cherry picked from commit a12ef5cf047445a952108763adc66908a17649ba). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12097:180,Simpl,Simply,180,https://root.cern,https://github.com/root-project/root/pull/12097,1,['Simpl'],['Simply']
Usability,"During ROOT's build of Core.pcm, byproduct modules are built.; rootcling was complaining about some headers not appearing in Core.pcm,; despite them ending up in the byproduct pcms. Simply don't complain about headers not in the pcm if these headers; are actually in a byproduct. In the same vein, do not forcefully include; them in teh pcm, as they are already included in the byproduct which should; be sufficient. This circumvents the warnings:. ```; [2751/6001] Generating G__Core.cxx, ../lib/Core.pcm; Warning in <CheckModuleValid>: after creating module ""Core"" the following headers are not part of that module:; strlcpy.h (already part of top-level module ""ROOT_Foundation_C""); snprintf.h (already part of top-level module ""ROOT_Foundation_C""); ESTLType.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TClassEdit.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); ThreadLocalStorage.h (already part of top-level module ""ROOT_Foundation_C""); ROOT/RStringView.hxx (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TIsAProxy.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TVirtualIsAProxy.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); ```. (cherry picked from commit a12ef5c)# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12098:182,Simpl,Simply,182,https://root.cern,https://github.com/root-project/root/pull/12098,1,['Simpl'],['Simply']
Usability,"During the upgrade to LLVM 18, we enabled JITLink for AArch64 on Linux, because we had to (there were problems with RuntimeDyld that we could not solve). In order to switch x86 as well, we need a solution for `CLING_DEBUG` and `CLING_PROFILE`. It's not clear to me how this works with JITLink, does it have an equivalent interface to `registerJITEventListener`? Maybe @lhames can comment...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14209#issuecomment-2342696358:253,clear,clear,253,https://root.cern,https://github.com/root-project/root/issues/14209#issuecomment-2342696358,1,['clear'],['clear']
Usability,"E, &OBJ);			\; if (br == nullptr ) {					\; Error(APPNAME, ""Could not create branch \""%s\"""", NAME);	\; return 1;							\; }								\; } while(false). int main() {. // The name of the application.; static const char* APPNAME = ""arrayWrite"";. // Open the output file.; static const char* FILENAME = ""arrays.root"";; std::unique_ptr<TFile> ofile(TFile::Open(FILENAME, ""RECREATE""));; if ((!ofile) || ofile->IsZombie()) {; Error(APPNAME, ""Could not open output file \""%s\"""", FILENAME);; return 1;; }; Info(APPNAME, ""Opened output file \""%s\"""", FILENAME);. {; // Create a TTree in the output file.; auto otree = std::make_unique<TTree>(""arrays"", ""Tree with arrays"");; otree->SetDirectory(ofile.get());. // Add vectors of arrays to it.; std::array<float, 3> arr1;; MAKE_BRANCH(""arr1"", arr1);; std::vector<std::array<float, 3> > vec1;; MAKE_BRANCH(""vec1"", vec1);. // Fill a few entries into the tree.; for (Int_t i = 0; i < 10; ++i) {; vec1.clear();; arr1 = {static_cast<float>(i),; static_cast<float>(i + 1),; static_cast<float>(i + 2)};; for (Int_t j = 0; j < i; ++j) {; vec1.push_back({static_cast<float>(j),; static_cast<float>(j + 1),; static_cast<float>(j + 2)});; }; if (otree->Fill() <= 0) {; Error(APPNAME, ""Failed to record entry %i"", i);; return 1;; }; }. // Make sure that the tree is saved.; otree->AutoSave();; }; Info(APPNAME, ""Finished writing \""%s\"""", FILENAME);. // Return gracefully.; return 0;; }; ```. Building and running this example gets me:. ```; [bash][celeborn]:arrayWrite > make; c++ -pthread -std=c++17 -m64 -I/home/krasznaa/software/root/6.26.06/x86_64-ubuntu2204-gcc11-opt/include -c -o arrayWrite.o arrayWrite.cpp; rootcint -f Dictionary.cpp LinkDef.h; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with __GLIBCXX__ '20220324'; Extraction of runtime standard library version was: '20220421'; c++ -pthread -std=c++17 -m64 -I/home/krasznaa/software/root/6.26.06/x86_64-ubuntu2204-gcc11-opt/include -c -o Dictionary",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12007:4578,clear,clear,4578,https://root.cern,https://github.com/root-project/root/issues/12007,1,['clear'],['clear']
Usability,"E.g. ubu16 uses it. I like to attribute who wrote the patch. Learned that from llvm, still like it :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3866#issuecomment-496149925:61,Learn,Learned,61,https://root.cern,https://github.com/root-project/root/pull/3866#issuecomment-496149925,1,['Learn'],['Learned']
Usability,"EDIT: to merge if nightlies are green for master. This resolves ROOT-9456, ""[Jenkins][DF] Sporadic failures in test_snapshotNFiles"". The issue is due to interleaved TBB task execution in the same thread. When nested task spawning is present (i.e. when TBB tasks spawn other; TBB tasks and the thread pool contains at least three threads), the TBB; task stealing mechanism makes it possible that a thread starts executing; a new instance of the ""parent"" tasks before it finishes the execution of; the previous parent task (this happens when the thread is waiting for a; ""stolen"" child task to finish, so it steals another threads' parent; task). In the case of a multi-thread snapshot, one needs to write at least two; branches for the multi-thread branch writing to kick in and have nested; task spawning. The crash was caused by a new parent task overwriting the output TTree; of the previous parent task in a given thread. When the previous parent; task resumed execution, it ended up trying to flush out the contents of; the deleted output TTree. The solution adopted is to use thread-local stacks of output TTrees (as; opposed to single output TTrees), that tasks push and pop when they; start and finish respectively.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2228:956,resume,resumed,956,https://root.cern,https://github.com/root-project/root/pull/2228,1,['resume'],['resumed']
Usability,"Each RDrawable can get assigned RStyle object via `weak_ptr`; At the moment when display items are created, all RStyle object are temporary locked and streamed to the client. On the client side one can use three kinds of selectors:; - by id, which can be assigned to any RDrawable ; - by class, which is again arbitrary value for each RDrawable ; - by type, which is simple text like ""box"" for RBox, ""line"" for RLine and so on; For the moment very simple CSS evaluation is supported. test and tutorials macros for RStyle are provided. Also adjust other tutorials/v7/ macros. To be done: creating RStyle from parsing text CSS files and storing RStyle as text",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4481:367,simpl,simple,367,https://root.cern,https://github.com/root-project/root/pull/4481,2,['simpl'],['simple']
Usability,Enable Viewing HTML Reference Guide offline and in IDE,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9525:30,Guid,Guide,30,https://root.cern,https://github.com/root-project/root/pull/9525,1,['Guid'],['Guide']
Usability,Enabling clang-format feedback.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/137#issuecomment-289756288:22,feedback,feedback,22,https://root.cern,https://github.com/root-project/root/pull/137#issuecomment-289756288,1,['feedback'],['feedback']
Usability,Errors above were due to some options unrecognized by `root` were actually necessary for other callables in the test. Last commit moves the check to `TRint` and also now checks if there are multiple unrecognized options issued by the user:. ```; $ root --random -z --nonexistingoption; root: unrecognized option '--random'; root: unrecognized option '-z'; root: unrecognized option '--nonexistingoption'; Try 'root --help' for more information.; ```. Also changed to using `std::cerr` for simplicity. Before merging we can discuss the correct output stream,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8868#issuecomment-902501605:489,simpl,simplicity,489,https://root.cern,https://github.com/root-project/root/pull/8868#issuecomment-902501605,1,['simpl'],['simplicity']
Usability,Evaluate using Profile-Guided Optimization (PGO) for optimizing Root's performance,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15778:23,Guid,Guided,23,https://root.cern,https://github.com/root-project/root/issues/15778,1,['Guid'],['Guided']
Usability,Eve-7 Add simple window management and improve message log,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9515:10,simpl,simple,10,https://root.cern,https://github.com/root-project/root/pull/9515,1,['simpl'],['simple']
Usability,Eve-7 Clear out ownership of axis in REveCaloData,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6804:6,Clear,Clear,6,https://root.cern,https://github.com/root-project/root/pull/6804,1,['Clear'],['Clear']
Usability,Eve7: simplify generation of composite shape,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3148:6,simpl,simplify,6,https://root.cern,https://github.com/root-project/root/pull/3148,1,['simpl'],['simplify']
Usability,"Even if I remove all icons from build directory - it does not crash for me.; Seems to be warning about missing icon is not direct cause of the segfault,. From the backtrace it is not clear at which moment ROOT crashes.; Can you try to run in the debugger?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14247#issuecomment-1898343006:183,clear,clear,183,https://root.cern,https://github.com/root-project/root/issues/14247#issuecomment-1898343006,1,['clear'],['clear']
Usability,"Even simpler reproducer, that doesn't depend on `TObject` at all (sorry for the noise); ```py; import ROOT. ROOT.gInterpreter.Declare(; '''; class A {};; class B: public A {};; class C: public B {};. void myfunc(const B &b){; std::cout << ""B"" << std::endl;; }. void myfunc(const C &c){; std::cout << ""c"" << std::endl;; }. '''). ROOT.myfunc(ROOT.B()); ROOT.myfunc(ROOT.C()); ```. output:; ```; B; B; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8817#issuecomment-896106638:5,simpl,simpler,5,https://root.cern,https://github.com/root-project/root/issues/8817#issuecomment-896106638,1,['simpl'],['simpler']
Usability,"Even though the `RooResolutionModel` inherits from RooAbsPdf, it is; special because it has it's own overload of `getValV`. This is; problematic for the new RooFit batch mode, because it doesn't use; `getValV` but instead `RooAbsReal::evaluate()` directly. Then for pdfs; it does the normalization, and for non-pdfs it doesn't. The `RooResolutionModel::getValV` is implemented such that the; resolution model behaves like a pdf when used on it's own (i.e., it will; be normalized), but when used for an analytical convolution via; `RooAbsAnaConvPdf`, it is not normalized. In this commit, the function `RooResolutionMode::selfNormalized` is; implemented to return `true` if the resolution model is used in a; convolution. Like this, it's behavior as a pdf is consistent with the; `getValV` implementation and the batch mode had no problems using that; class anymore. One complication after this change was the integral code in; `RooAbsAnaConvPdf`. In that code, the RooResolutionModel's integral; value is retrieved by getting it's normalization integral, but now that; the resolution model is proclaiming to be self-normalized the integral; is always trivially one. This problem is solved by getting the; normalization integral directly via `getNormObj` from the normalization; integral cache manager, in which case the check for self-normalization; is not done. In fact, this has already been done before in the case of; ranged fits, so the change in this commit is actually a simplification; of the code because it removes a code branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9212:1479,simpl,simplification,1479,https://root.cern,https://github.com/root-project/root/pull/9212,1,['simpl'],['simplification']
Usability,"Events handling was not correct with log axes.; `x0,y0` values where not converted and interpreted wrong during mouse moving. Also simplify pad name handling in TPad::SavePrimitive. And apply few other clang-tidy warnings from #7432",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7535:131,simpl,simplify,131,https://root.cern,https://github.com/root-project/root/pull/7535,1,['simpl'],['simplify']
Usability,"Exactly, It looks like a bug in `nbconvert`. This polite the ref guide build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10428#issuecomment-1105055702:65,guid,guide,65,https://root.cern,https://github.com/root-project/root/pull/10428#issuecomment-1105055702,1,['guid'],['guide']
Usability,"Example of failure:``` java.lang.IllegalArgumentException: Could not instantiate {delegate={$class=XUnitBuilder, testTimeMargin=3000, thresholdMode=1, thresholds=[{$class=FailedThreshold, failureNewThreshold=0, failureThreshold=0, unstableNewThreshold=0, unstableThreshold=0}, {$class=SkippedThreshold, failureNewThreshold=, failureThreshold=, unstableNewThreshold=, unstableThreshold=}], tools=[{$class=CTestType, deleteOutputFiles=true, failIfNotNew=false, pattern=build/Testing/*/Test.xml, skipNoTestFiles=false, stopProcessingIfError=true}]}} for org.jenkinsci.plugins.workflow.steps.CoreStep: java.lang.UnsupportedOperationException: no known implementation of interface jenkins.tasks.SimpleBuildStep is named XUnitBuilder ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7901#issuecomment-829093239:690,Simpl,SimpleBuildStep,690,https://root.cern,https://github.com/root-project/root/pull/7901#issuecomment-829093239,1,['Simpl'],['SimpleBuildStep']
Usability,Excellent notes. Do we want to include brief mentions of the PoW items which were addressed (clearly w/o linking to the PoW),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15630#issuecomment-2128825206:93,clear,clearly,93,https://root.cern,https://github.com/root-project/root/pull/15630#issuecomment-2128825206,1,['clear'],['clearly']
Usability,"Excellent reason. It's also likely only needed in very specific situations, i.e. usability is not really a concern here. I'll do a review the patch; looked good on a first quick glimpse!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/130#issuecomment-170829394:81,usab,usability,81,https://root.cern,https://github.com/root-project/root/pull/130#issuecomment-170829394,1,['usab'],['usability']
Usability,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854#issuecomment-1455544084:101,simpl,simply,101,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1455544084,2,['simpl'],"['simplifies', 'simply']"
Usability,Externally visible changes:; - Supports multiclass and regression.; - Supports booking more than one method.; - Supports random splitting for kfolds; - Improvements to tutorials. Internal changes:; - Simplify much of CVSplit and friends,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1579:200,Simpl,Simplify,200,https://root.cern,https://github.com/root-project/root/pull/1579,1,['Simpl'],['Simplify']
Usability,"FDATA_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_EH'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_RTTI'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'.; Call Stack (most recent call first):; /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION); CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin; -- Looking for os_signpost_interval_begin - not found; -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""); -- Performing Test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:6630,clear,clearing,6630,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,1,['clear'],['clearing']
Usability,FIx TMVA Deep Learning for builds without IMT and/or BLAS + tutorials fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5519:14,Learn,Learning,14,https://root.cern,https://github.com/root-project/root/pull/5519,1,['Learn'],['Learning']
Usability,"FLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='; See also; /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log; ```; the log file says; ```; build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode.""; ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0; make[7]: *** read jobs pipe: Bad file descriptor. Stop.; make[7]: *** Waiting for unfinished jobs....; In file included from ../../src/tbb/concurrent_hash_map.cpp:17:; ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:; ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]; 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));; | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here; 93 | struct bucket : tbb::internal::no_copy {; | ^~~~~~; make[6]: *** [Makefile:28: tbb] Error 2; ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says; ```; [I] No git repository info found. Trying to interpret VERSION_INFO; [I] The XrdVersion.hh file already exists; gmake[7]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[7]: *** Waiting for unfinished jobs....; gmake[6]: *** [Makefile:136: all] Error 2; CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14520:1526,clear,clearing,1526,https://root.cern,https://github.com/root-project/root/issues/14520,1,['clear'],['clearing']
Usability,"FUD? The new way of finding python in 6.20 required python-dev, breaking conda builds. The introduction of modules, not disabled by minimal, broke mac-debug and Windows builds. In the core libraries, new code appeared that casted pointer types to long, causing more Win64 breakage. Not that ROOT runs on Win64 at all and requires the exact same compiler on the user's end on Win32. Users can also not trivially switch C++ versions unless they rebuild from source, this on any platform. Several of these issues were also reported on the ROOT forum. What you are showing is that *you* are able to build ROOT on some carefully prepared machines with your carefully selected set of compilers. In that list of nightlies, you are not even building binaries on one machine and running them on others. Again, this is why I forked: you obviously have different goals in mind when you dismiss clear problems as ""FUD."" I can't work in such an environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-703676872:883,clear,clear,883,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-703676872,1,['clear'],['clear']
Usability,"Fair enough. The LLVM 16 is revealing a part of the problem we had not solved yet :) [Note the simplified example is different from the real use case in that there is no expectation of recovery in that case while inside Core/Meta there is; i.e. once the problem is fixed, the command line reproducer will (and should) still fail ]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13815#issuecomment-1757758714:95,simpl,simplified,95,https://root.cern,https://github.com/root-project/root/issues/13815#issuecomment-1757758714,1,['simpl'],['simplified']
Usability,Fair enough. We need to make that the distinction is clear.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13917#issuecomment-1778121890:53,clear,clear,53,https://root.cern,https://github.com/root-project/root/issues/13917#issuecomment-1778121890,1,['clear'],['clear']
Usability,"Feature: Save training progress to root file, present it in TMVAGui. Add training history object for TMVA, here I incorporate usage to log DNN epoch performance with DNN_CPU and PyKeras. The tool is intended to be general enough that it can be used by any ML algorithm. For example, XGBoost could also record its progress per iteration with this object. A request for this functionality can be found on the root forums; https://root-forum.cern.ch/t/how-to-get-training-history-using-tmva-keras-interface/28799. My solution does not require tensorboard and records are stored within the root file. Test:; ```; . bin/thisroot.sh; cd tutorials/tmva/; make; ./TMVAClassification; root -l; TMVA::TMVAGui(""TMVA.root""); //Click on Training History... See the DNN_CPU_valError and trainingError plotted, not that data points are only added for every epoch printed in MethodDNN.cxx ; .q. cd keras; python ClassificationKeras.py; root -l; TMVA::TMVAGui(""TMVA.root""); //Click on Training History... See Keras training history for PyKeras_val_acc, PyKeras_acc, PyKeras_loss and PyKeras_val_loss; ```. Feedback welcomed",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4337:1089,Feedback,Feedback,1089,https://root.cern,https://github.com/root-project/root/pull/4337,1,['Feedback'],['Feedback']
Usability,"Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8425#issuecomment-865184527:237,simpl,simplify,237,https://root.cern,https://github.com/root-project/root/pull/8425#issuecomment-865184527,1,['simpl'],['simplify']
Usability,"Finally coming back to this one:; -Simplified a little the implementation of ExecPlugin to attempt the ""fast path"" automatically, while also allowing to explicitly provide the types; -replaced gPluginManagerMutex with the internal RWLock of the underlying TList as suggested",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11631#issuecomment-1460756802:35,Simpl,Simplified,35,https://root.cern,https://github.com/root-project/root/pull/11631#issuecomment-1460756802,1,['Simpl'],['Simplified']
Usability,"Fine, I'll open a ticket if I find something in the User's Guide missing in the Manual (or the reference guide). For me this issue is not resolved in this state of things. I would rather simply fix that. However, if your workflow says that you can close that, you can do that - it's your project and your decisions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284#issuecomment-785976241:59,Guid,Guide,59,https://root.cern,https://github.com/root-project/root/issues/7284#issuecomment-785976241,3,"['Guid', 'guid', 'simpl']","['Guide', 'guide', 'simply']"
Usability,"First simple tests:. ### XRD_PARALLELEVTLOOP=4; In theory this should use 4 threads, but there are 10 instead; ```; $ XRD_PARALLELEVTLOOP=4 xrdcp root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root .; [784MB/2.09GB][ 36%][==================> ][11.04MB/s]; ```; ```; $ ps aux | grep xrdcp; vpadulan 2875 14.5 0.4 698364 77920 pts/0 Sl+ 12:15 0:03 xrdcp root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root .; $ ps hH p 2875 | wc -l; 10; ```; ### XRD_PARALLELEVTLOOP=1; This should use 1 thread, I see 7; ```; $ XRD_PARALLELEVTLOOP=1 xrdcp root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root .; [184MB/2.09GB][ 8%][====> ][10.82MB/s]; ```. ```; $ ps aux | grep xrdcp; vpadulan 3000 20.0 0.2 608092 46488 pts/0 Sl+ 12:18 0:00 xrdcp root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root .; $ ps hH p 3000 | wc -l; 7; ```. ### XRD_WORKERTHREADS=1 XRD_PARALLELEVTLOOP=1; I have found another environment variable in the xrootd docs https://xrootd.slac.stanford.edu/doc/xrdcl-docs/xrdcldocs.pdf described as ""Number of threads processing user callbacks."" with default value 3 . Setting both variables to 1 leads to 5 threads. ```; $ XRD_WORKERTHREADS=1 XRD_PARALLELEVTLOOP=1 xrdcp root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root .; [192MB/2.09GB][ 8%][====> ][10.67MB/s]; ```. ```; $ ps aux | grep xrdcp; vpadulan 3036 17.3 0.2 460628 48240 pts/0 Sl+ 12:21 0:00 xrdcp root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root .; $ ps hH p 3036 | wc -l; 5; ```. So for now:; 1. Setting XRD_PARALLELEVTLOOP=1 makes the xrdcp process use 7 thread, of which 3 are explicable by the default value of XRD_WORKERTHREADS, 1 is the event ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7709#issuecomment-847752725:6,simpl,simple,6,https://root.cern,https://github.com/root-project/root/issues/7709#issuecomment-847752725,1,['simpl'],['simple']
Usability,Fix GetZaxis - may fail while dimension was checked before checking histogram. Simplify code - avoid gPad testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14892:79,Simpl,Simplify,79,https://root.cern,https://github.com/root-project/root/pull/14892,1,['Simpl'],['Simplify']
Usability,Fix Multiclass classification for TMVA Deep Learning,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5553:44,Learn,Learning,44,https://root.cern,https://github.com/root-project/root/pull/5553,1,['Learn'],['Learning']
Usability,Fix TTreeCache issue related to learning from ROOT-9773.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3007:32,learn,learning,32,https://root.cern,https://github.com/root-project/root/pull/3007,3,['learn'],['learning']
Usability,Fix also links to the correct Users Guide and keep when needed link to old web site using the correct link : https://tmva.sourceforge.net/old_site/. This PR fixes #7627,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14025:36,Guid,Guide,36,https://root.cern,https://github.com/root-project/root/pull/14025,1,['Guid'],['Guide']
Usability,Fix and simplify copy_headers for Travis,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7434:8,simpl,simplify,8,https://root.cern,https://github.com/root-project/root/pull/7434,1,['simpl'],['simplify']
Usability,Fix compiler warnings and simplify function,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1209:26,simpl,simplify,26,https://root.cern,https://github.com/root-project/root/pull/1209,1,['simpl'],['simplify']
Usability,Fix grammar and typos in Tree Chapter of User's Guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284:48,Guid,Guide,48,https://root.cern,https://github.com/root-project/root/issues/7284,1,['Guid'],['Guide']
Usability,Fix header->dict dependencies.; Simplify core dictionary.; Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3404:32,Simpl,Simplify,32,https://root.cern,https://github.com/root-project/root/pull/3404,3,"['Simpl', 'simpl']","['Simplify', 'simplified']"
Usability,Fix potential crash when quitting ROOT from RBrowser on Windows and simplify the code used to close the TBrowser main Window,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11219:68,simpl,simplify,68,https://root.cern,https://github.com/root-project/root/pull/11219,2,['simpl'],['simplify']
Usability,Fix some minor compiler warnings on various platforms. Simplify the `TIOFeatures::Set` implementation as suggested by @pcanal . I do not believe any of these indicate real bugs. Just some code cleanliness.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1209:55,Simpl,Simplify,55,https://root.cern,https://github.com/root-project/root/pull/1209,1,['Simpl'],['Simplify']
Usability,Fix test tolerance to avoid some failures observed in the last nightly builds ; Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5380:113,simpl,simple,113,https://root.cern,https://github.com/root-project/root/pull/5380,1,['simpl'],['simple']
Usability,"Fix this kind of warnings with gcc8:; Warning: 'void* memset(void*, int, size_t)' clearing an object of non-trivial type 'struct GCValues_t'; use assignment or value-initialization instead",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2877:82,clear,clearing,82,https://root.cern,https://github.com/root-project/root/pull/2877,1,['clear'],['clearing']
Usability,"Fixed in #11553 with the caveat that in order to be able to pass temporaries one should use e.g. `""const RVecF""` in the signature passed to `Numba.Declare` rather than simply `""RVecF""`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11294#issuecomment-1597506324:168,simpl,simply,168,https://root.cern,https://github.com/root-project/root/issues/11294#issuecomment-1597506324,1,['simpl'],['simply']
Usability,"Fixed the Travis build, moved build script, and added the cmake build-and-test test to the tests (Turns out, CMake's own source has lots of examples of that since that's what a test of CMake itself is generally doing). Fixed a bug in the calculation of the standalone directory, and simplified the CMake code a bit. `make package_source` now produces an error if in used in the wrong configuration. I've tried to avoid making any changes to the parts of Travis that are not affected, but there's a bug in the yaml: making a node anchor is also a normal definition; so if no packages are added, they get the default (which includes a non-existent timeout package). I'll see if I can make a separate PR with some improvements for Travis clarity/speed not related to Minuit2. This PR should be ready for review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-375310840:283,simpl,simplified,283,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-375310840,1,['simpl'],['simplified']
Usability,"Fixed the unused variable warnings, and simplified the template overloads so that Book can be called directly from python. (At least in the jitted case. I'm not sure how to call a template function like this from cppyy with partially specified template parameters, and it's not possible to explicitly specify the Helper type because it comes after the parameter pack.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-804399962:40,simpl,simplified,40,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-804399962,1,['simpl'],['simplified']
Usability,Fixes #8305 . 5 places in RootMacros.cmake use regex when a simple string(FIND) suffices,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8306:60,simpl,simple,60,https://root.cern,https://github.com/root-project/root/pull/8306,1,['simpl'],['simple']
Usability,Fixing notfn a bit more clearly,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3432:24,clear,clearly,24,https://root.cern,https://github.com/root-project/root/pull/3432,1,['clear'],['clearly']
Usability,Fixing user guide markdown issues,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7756:12,guid,guide,12,https://root.cern,https://github.com/root-project/root/pull/7756,1,['guid'],['guide']
Usability,"Follow-up from https://github.com/root-project/root/pull/13238#issuecomment-1645247274, see also the three points raised in the linked comment. From a user perspective, a `#pragma link C++ enum` currently produces neither an error nor a warning if the `enum` is not found (this is going to change with LLVM 16). As far as I can tell, `typedef`s to unnamed `enum`s are currently not considered (this was the pattern addressed in https://github.com/root-project/root/pull/13238), it is not clear if they should.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13303:488,clear,clear,488,https://root.cern,https://github.com/root-project/root/issues/13303,1,['clear'],['clear']
Usability,Following Philippe's suggestion for the test (thanks!) it's clear that the current logic is not enough.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8934#issuecomment-908960572:60,clear,clear,60,https://root.cern,https://github.com/root-project/root/pull/8934#issuecomment-908960572,1,['clear'],['clear']
Usability,Following https://root-forum.cern.ch/t/simple-function-working-with-6-28-04-but-not-with-6-30-04/58975,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15227#issuecomment-2053932864:39,simpl,simple-function-working-with-,39,https://root.cern,https://github.com/root-project/root/pull/15227#issuecomment-2053932864,1,['simpl'],['simple-function-working-with-']
Usability,"Following simple code crashes:. ```cpp; TClass *cl = gROOT->GetClass(""ROOT::Experimental::RBox"");; TDataMember *m = cl->GetDataMember(""fAttrBorder"");; printf(""offset = %d\n"", (int) m->GetOffsetCint());; ```. Method is crucial, while used in PyROOT. ; Error trace:; ```; #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so; #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so; #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so; #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so; #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so; #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so; #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so; #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so; #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so; #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so; #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so; #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so; #19 0x00007f261bbf330d in clang:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8547:10,simpl,simple,10,https://root.cern,https://github.com/root-project/root/issues/8547,1,['simpl'],['simple']
Usability,"For RVecs of simple types, do a vector read of the item's principal columns instead of reading items one by one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13590:13,simpl,simple,13,https://root.cern,https://github.com/root-project/root/pull/13590,1,['simpl'],['simple']
Usability,"For a long time, users had to increase their maximum stack size in order; to read RooFit workspaces. Otherwise, the process would simply end; without any message.; The problem is an 8kB stack buffer for the I/O of stl sets, which is; always declared but rarely used. Here, the buffer is replaced with a; heap buffer. This is an analysis of stack frames at -O2 in the moment of a crash:; ```; tot. size call count frame size; 5468960 665 8224 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b; 566576 2083 272 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char**; 307664 2747 112 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer; 133248 2082 64 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config; 131856 2747 48 libRIO.so`TBufferFile::ApplySequence(this sequence obj; 74480 665 112 libRIO.so`TBufferFile::ReadObjectAny(this clCast at; 68064 1418 48 libCore.so`TStreamerBase::ReadBuffer(this b pointer; 42560 665 64 libRIO.so`TGenCollectionStreamer::ReadBufferGeneric(this b obj; 42560 665 64 libRIO.so`TBufferFile::ReadFastArray(this start cl; 31920 665 48 libRIO.so`int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*,; 21280 665 32 libRooFitCore.so`RooAbsArg::Streamer(this R__b at; 14592 152 96 libRooFitCore.so`RooRealVar::Streamer(this R__b at; 1056 22 48 libRooFitCore.so`RooHistFunc::Streamer(this R__b at; 720 15 48 libHistFactory.so`PiecewiseInterpolation::Streamer(this R__b at; ```. and after this fix:; ```; 54400	200	272	 200 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this b 	272; 29792	266	112	 266 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer 	112; 12864	201	64	 201 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config 	64; 12768	266	48	 266 libRIO.so`TBufferFile::ApplySequence(this sequence obj 	48; 8320	65	128	 65 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b 	128; 7280	65	112	 65 libRIO.so`TBufferFile::ReadObjectAny(this clCast at 	112; 6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9470:130,simpl,simply,130,https://root.cern,https://github.com/root-project/root/pull/9470,1,['simpl'],['simply']
Usability,"For all our supported ABIs, all pointers to global / static functions, whatever their type, have the same size. If that ever changes we will have lots and lots of problems. So yes, your solution is correct, while mine is relying on undefined behavior but a lot simpler :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2652#issuecomment-423462064:261,simpl,simpler,261,https://root.cern,https://github.com/root-project/root/pull/2652#issuecomment-423462064,1,['simpl'],['simpler']
Usability,"For bench-marking the change can you run and compare with and without the PR:; ```; #include ""TChain.h"". void callfuncbench(int repeat = 1000) ; {; TChain ch(""ntuple""); ; for(int i = 0 ; i < repeat; ++i); ch.Draw(""TMath::TanH(px)"", """", ""goff""););; }; ```; This demonstrates a simple common (indirect) usage of CallFunc. . Thanks,; Philippe. They are also usage of CallFunc in Signal/Slot mechanism and QT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1251578429:276,simpl,simple,276,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251578429,1,['simpl'],['simple']
Usability,"For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6039:328,simpl,simplification,328,https://root.cern,https://github.com/root-project/root/pull/6039,1,['simpl'],['simplification']
Usability,"For completeness dev3/Fri vs dev3/Thu. ```; ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt ; ...; real	0m45.976s; user	0m36.305s; sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ); ... real	0m31.001s; user	0m12.790s; sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11927#issuecomment-1361014198:780,clear,clearly,780,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1361014198,1,['clear'],['clearly']
Usability,"For completeness, `RNTupleImporter` already allows to supply a tree name:; ```c++; auto imp = ROOT::Experimental::RNTupleImporter::Create(&chain, ""B2HHH~zstd~10x.ntuple"");; imp->SetNTupleName(“DecayTree”);; imp->Import();; ```; My issue is just about an improvement of user experience.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13088#issuecomment-1612018808:269,user experience,user experience,269,https://root.cern,https://github.com/root-project/root/issues/13088#issuecomment-1612018808,1,['user experience'],['user experience']
Usability,For consistency since progress bar is two words we should use it as ProgressBar in all functions - AddProgressBar and PrintProgressBar,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13916:22,progress bar,progress bar,22,https://root.cern,https://github.com/root-project/root/pull/13916,1,['progress bar'],['progress bar']
Usability,For consistency since progress bar is two words we should use it as ProgressBar in all functions - AddProgressBar and PrintProgressBar.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13921:22,progress bar,progress bar,22,https://root.cern,https://github.com/root-project/root/pull/13921,1,['progress bar'],['progress bar']
Usability,"For me, this is not surprising. Imho, proper documentation could make the behaviour clear. and the case of implicit casting seems as well fine to me. noone will write `v[{0, 0, 1, 1}]` and expect a selection (?). Either doing this or breaking the API and inverting the behaviour? We can fix the selection type and let the index type float (but then with the unexpected implicit casting behaviour, which is bad). So this does not seem to be an option. Am I right that there's no other option to solve this in C++?. Last option could be dropping the feature and stick to `Take(v, idx)`, which is already there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2621#issuecomment-421944127:84,clear,clear,84,https://root.cern,https://github.com/root-project/root/pull/2621#issuecomment-421944127,1,['clear'],['clear']
Usability,"For my project (based on PyROOT) I regularly test it against decv LCG nightly builds.; For last days I see a significant degradation in the CPU performance ; e.g. for the very simple simple [script](https://gist.github.com/VanyaBelyaev/66b08ae5b974ae3a279e67ddd0ae33e8); I see a huge factor, almost an order of magnitude, degradation CPU performance with respect to ROOT 6.24 or 6.26.; I've checked the exiting dev3 builds and I see tat while even the earliest (laet week Tue) build is much slower than 6.24&6.26, ; but a factor of 2 in the performance comes from the last Friday build. ; Something bad happens between Thu and Fri slots... . You can find some numbers in the comment; to [this gist](https://gist.github.com/VanyaBelyaev/66b08ae5b974ae3a279e67ddd0ae33e8)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11927:176,simpl,simple,176,https://root.cern,https://github.com/root-project/root/issues/11927,2,['simpl'],['simple']
Usability,"For our users, it's important to fix certain parameters in the likelihood easily with any overhead. So far, this didn't work when using gradients from AD, because the gradients were only produced for the parameters that are floating at the time where the likelihood is created. However, it has no additional runtime overhead in backwards AD mode to simply generate the gradient for **all** parameters, and then filter out the right elements in the the RooMinimizer-related code. This is what is implemented in the second commit of this PR. Some changes in the RooAbsMinimizerFcn were necessary to do this filtering: so far it didn't store any information on all the parameters in order. It only stored two separate lists for floating and constant parameters. The first commit in this PR adds the necessary data members (`_allParams` and `_allParamsInit`) to the RooAbsMinimizerFcn for the filtering of parameters. Furthermore, the previous datamembers that stored the parameters separately are removed to avoid duplication and possible desync of information. On this occasion, the parameter management was completely rewritten to be more concise and robust. This will also help later when we integrate the discrete profiling from CMS combine, where changing the state and filtering of minimization parameters is also relevant. It was validated with the ATLAS and CMS likelihoods from ICHEP 2024 that this PR results in no performance regression, even though we are now generating the gradient for more parameters (roughly up to two times more, because for every floating nuisance parameter there is usually one constant global observable that constrains it).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16750:349,simpl,simply,349,https://root.cern,https://github.com/root-project/root/pull/16750,1,['simpl'],['simply']
Usability,"For simplicity and code reusability, this PR suggests to merge the `EvaluateFuncs.h` header and the `AnalyticalIntegrals.h` header into a single header. Also, use `ROOT::Math::inc_gamma_(c)` directly in RooPoisson implementation. This saves us a few function calls and will also make it easier to implement custom pullbacks for the gradient, since the callstack is not as deep. Also, slightly refactor the code for evaluating the interpolations and improve the AD tests for the RooLandau to get more coverage. This is a part of #15502, factored out because these are already meaningful changes without the update to Clad 1.5.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15557:4,simpl,simplicity,4,https://root.cern,https://github.com/root-project/root/pull/15557,1,['simpl'],['simplicity']
Usability,"For the documentation of the RooFit pythonizations, we wanted to realize; two things:. * A PyROOT block in the doxygen documentation of the C++ class,; indicating the pythonizations for a given class or function. * A new doxygen page with only the content of all the RooFit PyROOT; blocks to have a one-stop place to learn everything about RooFit; pythonizations. This commit proposes a new mechanism to do this, based on the existing; RooFit pythonization mirror class infrastructure:. * Every class or member function that should get a PyROOT block gets; an can be patched with an attribute `_doxygen`, containing the; contents of the PyROOT block; * Member functions can also be patched with the attribute; `cpp_signature`, specifying the C++ overload where the PyROOT block; should go; * A new scipt `print_roofit_pyz_doctrings.py` extracts this; information, and this script is used to create a file; `_roofit.pyzdoc` with all the doxygen source to generate both the; PyROOT blocks in the existing documentation, as well as the separate; page about all the RooFit pythonizations. This is how the RooFit pythonization page would look like with this PR:. ![Screenshot_2021-08-17_15-06-40](https://user-images.githubusercontent.com/6578603/129736827-e2aadfe5-2893-48c0-a7e9-2549a136cd68.png). Writing all the documentation will be done in later PRs by @Harshalzzzzzzz , this PR is just to set up the infrastructure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8856:317,learn,learn,317,https://root.cern,https://github.com/root-project/root/pull/8856,1,['learn'],['learn']
Usability,"For the new RooFit BatchMode, the model pdf had to be ""compiled"" for a; fixed normalization set before being evaluated by the RooFit driver. This step was implemented in a rather hacky way, because it only became; clear gradually how important this step is, as many changes need to be; done to the computation graph before it can be used by the BatchMode. It started by ""unrolling"" the normalization integrals such that they are; separate nodes that can be evaluated by the RooFit driver. Then, it also covered the transformation of every RooProdPdf into a new; object that exposes the full intenal computation graph that is cached by; the RooProdPdf for a given norm set. These two changes where done in separate passes through the compute; graph, and there was also a third pass to figure out dependencies and; normalization sets in the graph, and some more recursive passes the; attach new servers. This all became very compilcated and hard to debug, as the separate; passes through the graph interfered with each other as well. With all the lessons learned, this commit suggests a new more general; way to compile a model for a given normalization set. It is now done in a **single recursive pass through the graph** via the; newly-proposed function; `RooAbsArg::compileForNormSet(RooAbsArg const& normSet, context)`. It's job is to make a clone of the RooAbsArg where the normalization set; is fixed to `normSet`, given some context. Now, the details of unrolling the integrals of a RooAbsPdf and replacing; the RooProdPdfs can be implemented in the overload for this function of; the specific class. There is even an overload for the RooSimultaneous; now, which contains all the logic of making the RooSimultaenous ready; for the NLL creation. There are still some rough edges in the new interface, but it is already; a big step forward that will make debugging much easier because it's now; much less compilcated to understand how the computation graph is set up; by the BatchMode. Also, this m",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12079:214,clear,clear,214,https://root.cern,https://github.com/root-project/root/pull/12079,1,['clear'],['clear']
Usability,"For the record, I have done what I outlined above and updated the PR. I do see some drastic improvements for some of our workflows (250MB out of 1GB) where we have many processes initialising the interpreter. For others, where the usage of ROOT is limited to reading files in a single process, the improvement is not so obvious. Simply opening a file does show improvement as well (I am down to 49MB, when I also patch the FileInfo vector in the HeaderSearch). The PR somehow seems to die with some old memory corruption which I am pretty sure I fixed and I cannot reproduce anymore. Is there any need to clean some cache?. Notice I have also submitted the patch to llvm itself and it passes their CI (https://github.com/llvm/llvm-project/pull/66430#issuecomment-1720164026)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1720185060:329,Simpl,Simply,329,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1720185060,1,['Simpl'],['Simply']
Usability,"For the record, as you might have seen in https://github.com/AliceO2Group/AliceO2/pull/13464, simply changing the types breaks reading back old files (i.e. two shorts are read in an int). Could you comment when do you expect to have a fix for this on your side which applies to 6.32.2 and if it will allow old code to still read new data (and viceversa new code / old data)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16312#issuecomment-2333276845:94,simpl,simply,94,https://root.cern,https://github.com/root-project/root/issues/16312#issuecomment-2333276845,1,['simpl'],['simply']
Usability,"For the record, can you elaborate on why this is a blocker for RooFit development? I imagine you can have a simple `Internal::Foreach(task, args)` function that calls `TThreadExecutor` or falls back to STL algorithms if IMT=OFF or `!ROOT::IsImplicitMTEnabled()`. That's pretty much what RDF does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6298#issuecomment-686548500:108,simpl,simple,108,https://root.cern,https://github.com/root-project/root/pull/6298#issuecomment-686548500,1,['simpl'],['simple']
Usability,"Found it! As it turns out, it is a ""simple"" 2 line fix:; https://github.com/stephanlachnit/root/commit/65ae229c6ba458c610f0a41d32b798a132f385e4. We need to set `LLVM_LINK_LLVM_DYLIB=OFF` for clang, this will prefer static libs. The only disadvantage is that links against *all* LLVM libraries, which means additionally dependencies might need to be installed. In particular LLVM 16 is broken due to https://github.com/llvm/llvm-project/issues/62300.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1666954709:36,simpl,simple,36,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1666954709,1,['simpl'],['simple']
Usability,"From Isabel Goos:. I am just writing because I found a mistake on your reference guide that should be corrected.; On this page: https://root.cern.ch/doc/master/classTRolke.html#a77ed9095b5fe47050eeec195eb3b669d; we see the example ""SetPoissonBkgGaussEff(x,y,em,sde,tau)""; but later ""void 	SetPoissonBkgGaussEff (Int_t x, Int_t y, Double_t em, Double_t tau, Double_t sde)"".; So, in the example sde and tau are interchanged. ; We lost some nerves finding this out :) so, if we can avoid this for someone else, we are happy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12976:81,guid,guide,81,https://root.cern,https://github.com/root-project/root/pull/12976,1,['guid'],['guide']
Usability,"From Timur:. When TGQuartz was developed, retina macs did not exist yet and Cocoa; did not provide any API to access scaling-related information.; After they have introduced this API and released retina MacBooks, our GUI; rendering was just fine and worked out of box, our 'pixmap-based' graphics; was fixed by multiplying pixmaps' geometry (by scaling factor) and also setting; the corresponding scaling CTM on the bitmap context. It appears, all these; years we did not know how expensive this scaling transformation is.; As was noticed recently, even a relatively simple poly-line consisting; of 25K segments takes _forever_ to draw - apparently Quartz is working; hard doing hell knows what under the hood (disabling anti-aliasing does not change; anything, for example). This patch is a possible fix, the proper solution would require a serious redesign; in many places (starting from TVirtualX and TCanvas) - for now we simply cancel; the scaling transformation when rendering potentially complex geometry and scale; coordinates manually instead. A macro reproducing this problem on retina display would be:. {; int n = 5000;; double xx[n];; double yy[n];; TRandom r;; for (int i=0; i<n; i++) {; xx[i] = r.Gaus(-1,0.5);; yy[i] = r.Gaus(1,1.5);; }; TGraph *g = new TGraph(n, xx,yy);; g->Draw(""al"");; }",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1177:567,simpl,simple,567,https://root.cern,https://github.com/root-project/root/pull/1177,2,['simpl'],"['simple', 'simply']"
Usability,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file; [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14584#issuecomment-1943874457:78,clear,clear,78,https://root.cern,https://github.com/root-project/root/issues/14584#issuecomment-1943874457,1,['clear'],['clear']
Usability,"From https://gitlab.cern.ch/will/xroofit,; commit 5a9064e020abe994f01d31a55ebc127454e0d48e. This is just to see how the CI responds to learn what yet needs to be done upstream in xRooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11499:135,learn,learn,135,https://root.cern,https://github.com/root-project/root/pull/11499,1,['learn'],['learn']
Usability,From the test results I learned that we already have a mechanism in ROOT to mark Python non-optional test dependencies:; https://github.com/root-project/root/commit/2917c6e7153c426507227d9fdba1937fca7535aa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15306#issuecomment-2069022427:24,learn,learned,24,https://root.cern,https://github.com/root-project/root/pull/15306#issuecomment-2069022427,1,['learn'],['learned']
Usability,"From this simple reproducer:. ```cpp; #include <TCanvas.h>; #include <TFile.h>; #include <TTree.h>. #include <ROOT/RDataFrame.hxx>; #include <iostream>; #include <string>; #include <vector>. void generateData(const char *filename, int n, double value); {; TFile f{filename, ""RECREATE"", ""file for testing""};. double var1;. TTree tree{""AnalysisTree"", ""AnalysisTree""};; tree.Branch(""column1"", &var1, ""column1/D"");. for (unsigned int i = 0; i < n; i++) {; var1 = value;; tree.Fill();; }. tree.Write();; f.Write();; f.Close();; }. int main(); {; std::vector<std::string> fileNames{""test1.root"", ""test2.root""};; std::vector<double> weights{2, 0.5};. // Create two files with trees for testing; // 10 entries of 0.5; generateData(""test1.root"", 10, 0.5);; // 10 entries of 2; generateData(""test2.root"", 10, 2);. // Create Dataframe from files; ROOT::RDataFrame df(""AnalysisTree"", fileNames);. // Define weights depending on input file; auto df2 =; df.DefinePerSample(""weightbysample"", [&fileNames, &weights](unsigned int, const ROOT::RDF::RSampleInfo &id) {; for (unsigned int i = 0; i < fileNames.size(); i++); if (id.Contains(fileNames[i])); return weights[i];; return -1.;; });. auto s0 = df2.Sum<double>(""weightbysample"");; auto d0 = df2.Display({""weightbysample""}, 20);; std::cout << ""sum of weights: "" << *s0 << ""\n"";; d0->Print();. auto s1 = df2.Sum<double>(""weightbysample"");; auto d1 = df2.Display({""weightbysample""}, 20);; std::cout << ""sum of weights: "" << *s1 << ""\n"";; d1->Print();. }; ```. The `DefinePerSample` operation defines a column of 20 entries, 10 should have value `2`, the following 10 should have value `0.5`. The first set of `Sum` and `Display` operations show the correct behaviour, then the second set of operations reports a wrong result. All the 20 entries of the column are `0.5`:. ```; sum of weights: 25; +-----+----------------+; | Row | weightbysample | ; +-----+----------------+; | 0 | 2.0000000 | ; +-----+----------------+; | 1 | 2.0000000 | ; +-----+----------------+",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12043:10,simpl,simple,10,https://root.cern,https://github.com/root-project/root/issues/12043,1,['simpl'],['simple']
Usability,"Fully exclude source directory from include paths - for dictionary generation and for objects compilation. Significantly reduce list of dirs in CXX flags.; Makes dependency files very clear - `${CMAKE_BINARY_DIR}/include` used in 99%, rest are special includes from `res/` subfolders.; Tested with and without cxx modules",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5170:184,clear,clear,184,https://root.cern,https://github.com/root-project/root/pull/5170,1,['clear'],['clear']
Usability,"Fully implement the `Offset(""bin"")` feature also for RooDataSet, both; with CPU/CUDA BatchMode and the legacy tests statistics. This is done now by introducing a new element in the computation graph:; an ""offset pdf"" that is created as a RooHistPdf from the observed data,; and it is used to get the counterterm in each bin. It was validated with the `rf614` tutorial that this binwise offsetting; is inteed fixing the convergense problems that the simple offsetting by; the initial NLL value can't fix. Closes https://github.com/root-project/root/issues/11965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13665:449,simpl,simple,449,https://root.cern,https://github.com/root-project/root/pull/13665,1,['simpl'],['simple']
Usability,"Further detail: Before CMake 3.10, `LIBXML2_INCLUDE_DIR` was the only variable. Then, after that, both are defined. `LIBXML2_INCLUDE_DIR` is just the libxml include directory, and `LIBXML2_INCLUDE_DIRS` is all the includes, including that one, that libxml needs. In some cases, this can contain extra required directories that are not otherwise picked up. If the DIRS variable is not defined, then it does not hurt to have it here, and listing the same directory twice is okay. I could do, if you prefer,. ```cmake; if(DEFINED LIBXML2_INCLUDE_DIRS); include_directories(${LIBXML2_INCLUDE_DIRS}); else(); # Remove when CMake <3.10 support is dropped; include_directories(${LIBXML2_INCLUDE_DIR}); endif(); ```; Less simple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3381#issuecomment-461411896:714,simpl,simple,714,https://root.cern,https://github.com/root-project/root/pull/3381#issuecomment-461411896,1,['simpl'],['simple']
Usability,"GCC 4.9 only defines '__cplusplus' to the value 201300L and not to; 201402L as expected for C++14. This makes the check for the available; C++ standards in the interpreter fail to enable C++14 (which in turn; means that ROOT cannot be compiled with GCC 4.9 if C++14 was enabled in; Cmake). Similarly, for C++17 apart from the proper value 201703L other; values seems to be floating around (e.g. 201406L as defined by the; version of LLVM included with ROOT). The requirement for '__cplusplus_'; to enable certain C++ standards in the interpreter is made less strict; and just needs to be larger than the previous final value. This basically reinstates commit; 0a62e34aa86b812651cfcf9526ba03b975adaa5c which was undone by commit; 702298d9ad83866d0be62f0422c03ac8ea6687f1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/549:711,undo,undone,711,https://root.cern,https://github.com/root-project/root/pull/549,1,['undo'],['undone']
Usability,"GetDZ returning 0).; This is not expected as it means there are other effects on the Volume aside from the translation/rotation, even when shifting something without leaving its parent volume. Something similar happens if a translation/rotation is applied to a Node which is part of a TGeoVolumeAssembly, but there it probably happens only if the changes leads to part of the assembly exceeding the original boundaries.; We (me and @fuhlig1) suspect that this may partially be recursive (affecting the parent of the aligned volume). This can be cured by forcing the recomputation of the BoundingBox of the affected Volume. ### Expected behavior; After alignment of the nodes, all volumes/nodes are offset/rotated with their other properties valid.; Or if not possible due to performance, a warning should be printout with hint of the proper way to restore/recompute these values. A temporary fix was introduced for now in FairRoot, which is to simply do the recompute for all TGeoVolumeAssembly in the geometry tree, which seems to be fast enough that we do not have to try to track affected Volumes to be more selective. ; This may however not be the case later when applied to complete geometries for experiments like CBM. ### To Reproduce; Steps to reproduce the behavior with the attached files (includes ""ROOT-only"" examples both for problem and for macro-level fix):; 1. Compile a copy of ROOT 6.22.08 (done with FairSoft apr21p2 and FairRoot v18.6.7, should work with any older versions of each and with recent versions of FairRoot, as well as with a standalone version of ROOT); 1. Download [BboxAlignPb_example_2023_02_07.zip](https://github.com/root-project/root/files/10674368/BboxAlignPb_example_2023_02_07.zip) and unzip the macro, the standard container dictionary header and the two root files in a folder; 1. Go to this folder, load your ROOT environment; 1. Run; ```; root -l -b; root [0] .L alignment_map_def.h+; root [1] .x BboxAlignBug.C(""mcbm_beam_2022_05_23_nickel.geo.root"", ""A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12242:1637,simpl,simply,1637,https://root.cern,https://github.com/root-project/root/issues/12242,1,['simpl'],['simply']
Usability,"Glad if this helped someone.; However, I don't understand how users are supposed to learn about this feature (without googling).; There is nothing in the release notes on that. ; https://root.cern/doc/v630/release-notes.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13606#issuecomment-2104829522:84,learn,learn,84,https://root.cern,https://github.com/root-project/root/pull/13606#issuecomment-2104829522,1,['learn'],['learn']
Usability,Good catch! indeed the real one is DistancetoPtrimitve (small t). The ones with capital T in the index file are typos I guess. In particular in the old User guide. I guess we can leave it as this guide is obsolete now and not updated anymore. ; But we can also fix them for clarity. Those with capital T in the TGeo code are more suspect I guess @agheata should have a look.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16087#issuecomment-2244578228:157,guid,guide,157,https://root.cern,https://github.com/root-project/root/issues/16087#issuecomment-2244578228,2,['guid'],['guide']
Usability,"Good idea! I would even suggest further simplifying it, using this header-only parser: https://github.com/CLIUtils/CLI11",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16090#issuecomment-2244826382:40,simpl,simplifying,40,https://root.cern,https://github.com/root-project/root/pull/16090#issuecomment-2244826382,1,['simpl'],['simplifying']
Usability,"Good move. The CI is quite demanding these days. If the change works there AND in the Conda CI, the coverage should be rather good. Clearly, we should add a note in the RN to inform owners of large stacks, e.g. LHC experiments, of this change in case something behaves differently in that context.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15891#issuecomment-2180601848:132,Clear,Clearly,132,https://root.cern,https://github.com/root-project/root/pull/15891#issuecomment-2180601848,1,['Clear'],['Clearly']
Usability,"Great idea, @pcanal - for instance by providing simply a `MemoryBuffer` to clang for the overlay! I'll merge this here now, to unblock CMS, and then we go from there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3179#issuecomment-447882137:48,simpl,simply,48,https://root.cern,https://github.com/root-project/root/pull/3179#issuecomment-447882137,1,['simpl'],['simply']
Usability,"Great simplification, which matches well the PROOF=OFF by default in master: thanks. This is not very important, but could users rely on some other sort of parallelism, e.g. T{Thread/Process}Executor?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14993#issuecomment-2002334241:6,simpl,simplification,6,https://root.cern,https://github.com/root-project/root/pull/14993#issuecomment-2002334241,1,['simpl'],['simplification']
Usability,Great! We should probably squash the N calls (when in multidict mode) into one single call. I am not sure if that should be part of this PR but I think it makes things clearer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4108#issuecomment-514641210:168,clear,clearer,168,https://root.cern,https://github.com/root-project/root/pull/4108#issuecomment-514641210,1,['clear'],['clearer']
Usability,"Great, thanks! Can you update the commit message (`git commit --amend; git push -f`) to include these findings? That makes the motivation for the change much clearer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5474#issuecomment-629037999:158,clear,clearer,158,https://root.cern,https://github.com/root-project/root/pull/5474#issuecomment-629037999,1,['clear'],['clearer']
Usability,"HTTPS seems to be supported just fine for this domain, but there's no 301/302 redirect from HTTP, so as-is this is simply enforcing plaintext on everyone who uses CMake to build, which is... not ideal. The use of SHA256 checksums is a 👍, but doesn't nullify every benefit of using HTTPS where available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1499:115,simpl,simply,115,https://root.cern,https://github.com/root-project/root/pull/1499,1,['simpl'],['simply']
Usability,"Ha, I believe it is simply a problem with this typo https://github.com/vgvassilev/clad/commit/9401215ba3b07ceec26ba460cea6b4a3d128e8c2#r42285026",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6346#issuecomment-691918632:20,simpl,simply,20,https://root.cern,https://github.com/root-project/root/pull/6346#issuecomment-691918632,1,['simpl'],['simply']
Usability,"Ha, that was again a nice rabbit hole. Here's a summary of what I found:; 1. We'll never run into problems with GCC's `libstdc++` since [version 4.5](https://gcc.gnu.org/gcc-4.5/changes.html): ""The default behavior for comparing typeinfo names has changed, so in `<typeinfo>`, `__GXX_MERGED_TYPEINFO_NAMES` now defaults to zero"", which means that `operator==` performs the string comparison in all cases.; 2. `libc++` by now has three different implementations: https://github.com/llvm/llvm-project/blob/066b8f2fc6d584635a017a0a15494ce4460744e3/libcxx/include/typeinfo#L120-L169 For all platforms except Windows and Apple M1, the library ""assume[s] the Itanium C++ ABI and use[s] the Unique implementation"". This may be fine for compiled programs where the linker can unify the `type_info`s, but not if the JIT emits a new copy. I have yet to find an example where this can go wrong, it would be great to have a test that fails if somebody attempts to ""simplify"" things. For this particular method however, the Itanium ABI mandates that the `std::type_info` objects of the checked types live in the run-time support library: https://itanium-cxx-abi.github.io/cxx-abi/abi.html#rtti-emission With exactly one object for those types, even `operator==` cannot mess up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7776#issuecomment-823939722:953,simpl,simplify,953,https://root.cern,https://github.com/root-project/root/pull/7776#issuecomment-823939722,1,['simpl'],['simplify']
Usability,"Hallo Jonas,. thanks a lot for the feedback! My initial interest was to measure the speed of the new implementation. . I have now checked Section 2.3 of [your paper](https://arxiv.org/pdf/2106.02504.pdf) and I have missed this important point! I will add this to my code. . Thanks for the review.; Jirka",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8504#issuecomment-866145966:35,feedback,feedback,35,https://root.cern,https://github.com/root-project/root/issues/8504#issuecomment-866145966,1,['feedback'],['feedback']
Usability,"Happens when try to find and execute static class method without arguments and which returns `void`. First detected with `TPluginHandler`. This is only plugin handler which defined with 0 arguments:; ```; gPluginMgr->AddHandler(""TGeoManagerEditor"", ""*"", ""TGeoManagerEditor"", ""GeomBuilder"", ""LoadLib()"");; ```; ROOT crashes when executed this plugin.; Problem can be cooked down to the reproducer - code which is executed by plugin handler:; ```; {; TClass *cl = TClass::GetClass(""TGeoManagerEditor"");. TString fCtor = ""LoadLib()"";. TString method = fCtor(0, fCtor.Index(""(""));; TString proto = fCtor(fCtor.Index(""("")+1, fCtor.Index("")"")-fCtor.Index(""("")-1);. auto fMethod = cl->GetMethodWithPrototype(method, proto);. auto fCallEnv = new TMethodCall;; fCallEnv->Init(fMethod);. fCallEnv->SetParams();. Longptr_t ret = 0;; fCallEnv->Execute(ret);; }. ```; It crashed when `fCallEnv->Execute` is called. . There is simple workaround:; ```; if (proto.Length() == 0) proto = ""()"";; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11930:913,simpl,simple,913,https://root.cern,https://github.com/root-project/root/issues/11930,1,['simpl'],['simple']
Usability,"Hello @guitargeek @couet , I'd like to contribute to this repository. Can you guide me in going about this issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8758#issuecomment-973032294:78,guid,guide,78,https://root.cern,https://github.com/root-project/root/issues/8758#issuecomment-973032294,1,['guid'],['guide']
Usability,"Hello @philippe554 ,; Indeed, we changed this behaviour a few releases ago, IIRC the reason was that the progressive output implementation had some problems, so we opted for capturing the output and releasing it only at the end, even at the expense of not covering cases such a progress bar.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8989#issuecomment-919060975:278,progress bar,progress bar,278,https://root.cern,https://github.com/root-project/root/issues/8989#issuecomment-919060975,1,['progress bar'],['progress bar']
Usability,"Hello @sinnfashen, thank you very much for your PR!. I have rebased it on master, fixed the conflicts and ran your demo in `PTKDTree.C`. Unfortunately, depending on the number of `MAXN`, the code was either crashing, or the parallelization even resulted in a slowdown. As pointed out by @lmoneta and @dpiparo, to merge this it would be necessary to demonstrate a clear speedup in at least some usecases, and even better to show that these usecases also correspond to real-world problems. Since these concerns were not addressed and there was no further reply to the last comment of @lmoneta, I assume that you, @sinnfashen, have moved on from the project and I'll close this PR. Still, if you ever feel like playing with this again, and you can show that the parallelized algorithms performance scales well with the number of threads and gives the correct results, feel free to reopen this PR or open a new one!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2202#issuecomment-1808849990:363,clear,clear,363,https://root.cern,https://github.com/root-project/root/pull/2202#issuecomment-1808849990,1,['clear'],['clear']
Usability,"Hello Sergey,, Danillo. Thank you for your suggestions (that we took into consideration ), feedback and prompt response. There is a new suggestion on how to solve this issue. Please check:. <https://its.cern.ch/jira/browse/SPI-2532>; its.cern.ch<https://its.cern.ch/jira/browse/SPI-2532>; [X]<https://its.cern.ch/jira/browse/SPI-2532>. We will keep you informed.; Best regards,; Ilias. On 14 Mar 2024, at 09:32, Sergey Linev ***@***.***> wrote:. @cogevito<https://github.com/cogevito>. Can you try to install libbsd-dev on your node?. —; Reply to this email directly, view it on GitHub<https://github.com/root-project/root/issues/14958#issuecomment-1996852848>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ADMB4TR5V47G7UK252MEENDYYFODFAVCNFSM6AAAAABEUNYYK6VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSOJWHA2TEOBUHA>.; You are receiving this because you were mentioned.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14958#issuecomment-1996872551:91,feedback,feedback,91,https://root.cern,https://github.com/root-project/root/issues/14958#issuecomment-1996872551,1,['feedback'],['feedback']
Usability,"Hello both of you!; Thank you so much for the quick reply!; I went through my text again and didn't notice it repeated itself...! Sorry for that!. Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""?. I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use!. Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479#issuecomment-1916915766:412,simpl,simply,412,https://root.cern,https://github.com/root-project/root/issues/14479#issuecomment-1916915766,1,['simpl'],['simply']
Usability,"Hello, Everyone!. My name is Sergey and I am a GSOC student this year. The aim of my project is to implement Multi-Target Regression algorithms to TMVA and to extend the capability of existing ones to handle multiple targets. In this commit I have modified the DecisionTree, allowing it to solve regression problems for multiple targets. The idea was inspired by how it is done in Clus package. (The variance of each subset resulting from a split is simply summed up from variances for each target). I have also extended the capability of BDT method to handle multiple targets (The only boosting method available for it right now is Bagging, but I am planning to implement Multi-target gradient descent based on the paper Boosted multi-task learning (2010) by Olivier Chapelle; Pannagadatta Shivaswamy.; ·",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/681:450,simpl,simply,450,https://root.cern,https://github.com/root-project/root/pull/681,2,"['learn', 'simpl']","['learning', 'simply']"
Usability,"Hello, I can do that. Just to be clear, that applies only to RooEffGenContex.h and cxx, right? Not RooRealIntegral.cxx, which would change a lot with the ROOT format",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12178#issuecomment-1410285135:33,clear,clear,33,https://root.cern,https://github.com/root-project/root/pull/12178#issuecomment-1410285135,1,['clear'],['clear']
Usability,"Hello,. *Two histograms of m_yy are filled with pseudo-data :; -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019); -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :; a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal; a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal; a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf; -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :; *In the case where we don't normalize the RooDataHist,; then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,; -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :; /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem reported here.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7991:163,clear,clearly,163,https://root.cern,https://github.com/root-project/root/issues/7991,1,['clear'],['clearly']
Usability,"Hello,. At the moment, the `ROOT::TLorentzVector` class uses a pseudorapidity-based calculation for the commonly-used DeltaR distance between vectors. For massive objects, such as jets, the rapidity should often be used instead. I have implemented a small switch within the `TLorentzVector::DeltaR` function to allow users to make this calculation with the vector's rapidity, instead of pseudorapidity. This has a default value of `kFALSE`, which means that the current behaviour will be the default one. I have cross-checked this new functionality with the `fastjet::pseudojet::delta_R` implementation and an internal ATLAS one, which all give the same results when performing the rapidity-based calculation. Please let me know if I have violated any contribution guidelines, and I will update this PR accordingly!. 🍻 Matt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7087:765,guid,guidelines,765,https://root.cern,https://github.com/root-project/root/pull/7087,1,['guid'],['guidelines']
Usability,"Hello. I think this issue is quite relevant, not only for distributed execution, but also for PyROOT usability in general. This is why I proposed these changes, in case they turn out to seem useful https://github.com/root-project/root/pull/13803",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13798#issuecomment-1746991396:101,usab,usability,101,https://root.cern,https://github.com/root-project/root/issues/13798#issuecomment-1746991396,1,['usab'],['usability']
Usability,"Here a simple example of this issue:. **py3:**; ```; >>> import ROOT; >>> ROOT.TObject().__contains__; <bound method __contains__ of <ROOT.TObject object (""TObject"") at 0x39895d0>>; >>> type(ROOT.TObject()).__contains__; <bound method __contains__ of <NULL>>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1777#issuecomment-378539088:7,simpl,simple,7,https://root.cern,https://github.com/root-project/root/pull/1777#issuecomment-378539088,1,['simpl'],['simple']
Usability,Here are the failing tests (without the `-fno-threadsafe-statics` flag):; ```; 7 - gtest-core-meta-test-testHashRecursiveRemove (Failed); 104 - gtest-tree-treeplayer-test-treetreeplayertestUnit (Failed); 105 - gtest-tree-treeplayer-test-dataframe-friends (Failed); 106 - gtest-tree-treeplayer-test-dataframe-alias (Failed); 107 - gtest-tree-treeplayer-test-dataframe-cache (Failed); 108 - gtest-tree-treeplayer-test-dataframe-callbacks (Failed); 110 - gtest-tree-treeplayer-test-dataframe-interface (Failed); 112 - gtest-tree-treeplayer-test-dataframe-regression (Failed); 113 - gtest-tree-treeplayer-test-dataframe-simple (Failed); 114 - gtest-tree-treeplayer-test-dataframe-snapshot (Failed); 116 - gtest-tree-treeplayer-test-datasource-more (Failed); 125 - tutorial-dataframe-tdf001_introduction (Failed); 126 - tutorial-dataframe-tdf002_dataModel (Failed); 127 - tutorial-dataframe-tdf003_profiles (Failed); 128 - tutorial-dataframe-tdf004_cutFlowReport (Failed); 129 - tutorial-dataframe-tdf005_fillAnyObject (Failed); 130 - tutorial-dataframe-tdf006_ranges (Failed); 131 - tutorial-dataframe-tdf007_snapshot (Failed); 132 - tutorial-dataframe-tdf008_createDataSetFromScratch (Failed); 133 - tutorial-dataframe-tdf009_FromScratchVSTTree (Failed); 134 - tutorial-dataframe-tdf010_trivialDataSource (Failed); 135 - tutorial-dataframe-tdf011_ROOTDataSource (Failed); 136 - tutorial-dataframe-tdf012_DefinesAndFiltersAsStrings (Failed); ```; With errors like:; ```; 131: Processing C:/Users/bellenot/git/master/tutorials/dataframe/tdf003_profiles.C...; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_header' unresolved while linking function '??__Eid@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@YAXXZcling_module_10_'!; 131: You are probably missing the definition of _Init_thread_header; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1607#issuecomment-364363584:616,simpl,simple,616,https://root.cern,https://github.com/root-project/root/pull/1607#issuecomment-364363584,1,['simpl'],['simple']
Usability,"Here is a implementation that may be naive, but I would argue catches the vast majority of the use cases:; ```c++; constexpr bool compare(float expected, float actual) {; // most simple and most common case; if (actual == expected); return true;. // comparison with an arbitrary small tolerance ; constexpr const float epsilon = std::numeric_limits<float>::epsilon();; const float delta = std::fabs(expected) * epsilon;; if ((actual > expected - delta) and (actual < expected + delta)); return true;; ; return false;; }; ```. If any of the arguments (the weight or the actual increment) is NaN or infinite the function should return `false`, which kind of makes sense in [the above context](https://github.com/root-project/root/issues/6671#issuecomment-2047035457).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-2047770259:179,simpl,simple,179,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-2047770259,1,['simpl'],['simple']
Usability,"Here is a relevant [issue](https://gitlab.kitware.com/cmake/cmake/-/issues/17735) where this is discussed more in depth. One of the [comments](https://gitlab.kitware.com/cmake/cmake/-/issues/17735#note_487572) in this issue explains the rationale behind overriding `find_package` quite well. If there is a better solution that can work the way the current solution does (i.e. works also for LLVM without having to change its calls to `find_package(ZLIB)`, for example), we can implement it. However, so far I have not found a another way to do it. Maybe now that the required version of CMake is newer than 3.11, we may be able to improve things by using the [FetchContent](https://cmake.org/cmake/help/latest/module/FetchContent.html) module. It may also be possible to use [CMAKE_DISABLE_FIND_\<PackageName\>](https://cmake.org/cmake/help/v3.10/variable/CMAKE_DISABLE_FIND_PACKAGE_PackageName.html) to skip checking for packages if that doesn't force packages to be considered not found when `<PackageName_FOUND>` is then also set by hand. The reality, though, is that CMake still kinda sucks for managing optionally bundled dependencies like ROOT wants to support. As for the undocumented nature of the feature, it's sad but, like the [CDash test measurements](https://cmake.org/cmake/help/latest/command/ctest_test.html?#additional-test-measurements) that were undocumented for a long time, if you offer it, people will try to use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633#issuecomment-898406007:1179,undo,undocumented,1179,https://root.cern,https://github.com/root-project/root/issues/8633#issuecomment-898406007,2,['undo'],['undocumented']
Usability,Here is macro which reproduces the problem with simple histogram/latex drawing. [dupl.cxx.txt](https://github.com/root-project/root/files/12418698/dupl.cxx.txt). Important that canvas should be stored/restored from I/O.; Only in such case `ROOT::Detail::HasBeenDeleted` fails,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13506#issuecomment-1689807535:48,simpl,simple,48,https://root.cern,https://github.com/root-project/root/pull/13506#issuecomment-1689807535,1,['simpl'],['simple']
Usability,"Here is the stack trace of the error. Now I just simply use type casting gSystem to TUnixSystem to get rid of defining DispatchTimers() in TSystem. . ```; [zhan0915@hcc-zhan root]$ root -l. A fatal system signal has occurred: segmentation violation error; Thread 1 (Thread 0x7f8b05aa0920 (LWP 10908)):; #0 0x0000003fa220e82d in read () from /lib64/libpthread.so.0; #1 0x00007f8b05fa3c64 in SignalSafeRead (fd=3, inbuf=inbuf; entry=0x7ffd70966680 ""\001"", timeout=timeout; entry=-1, len=1) at /home/bockelman/zhan0915/root/core/unix/src/TUnixSigHandling.cxx:195; #2 0x00007f8b05fa4435 in TUnixSigHandling::StackTraceTriggerThread () at /home/bockelman/zhan0915/root/core/unix/src/TUnixSigHandling.cxx:816; #3 0x00007f8b05fa450c in TUnixSigHandling::DispatchSignals (this=0x1534f70, sig=kSigSegmentationViolation) at /home/bockelman/zhan0915/root/core/unix/src/TUnixSigHandling.cxx:552; #4 <signal handler called>; #5 0x0000003fa1e811a1 in __strlen_sse2 () from /lib64/libc.so.6; #6 0x00007f8b0255f728 in length (__s=0x0) at /opt/rh/devtoolset-2/root/usr/include/c++/4.8.2/bits/char_traits.h:259; #7 assign (__s=0x0, this=0x7ffd70966c40) at /opt/rh/devtoolset-2/root/usr/include/c++/4.8.2/bits/basic_string.h:1131; #8 operator= (__s=0x0, this=0x7ffd70966c40) at /opt/rh/devtoolset-2/root/usr/include/c++/4.8.2/bits/basic_string.h:555; #9 TCling::TCling (this=0x1594620, name=<optimized out>, title=<optimized out>) at /home/bockelman/zhan0915/root/core/meta/src/TCling.cxx:1068; #10 0x00007f8b025602ae in CreateInterpreter (interpLibHandle=<optimized out>) at /home/bockelman/zhan0915/root/core/meta/src/TCling.cxx:578; #11 0x00007f8b05e2daa8 in TROOT::InitInterpreter (this=0x7f8b062a5520 <ROOT::Internal::GetROOT1()::alloc>) at /home/bockelman/zhan0915/root/core/base/src/TROOT.cxx:1821; #12 0x00007f8b05e2de26 in ROOT::Internal::GetROOT2 () at /home/bockelman/zhan0915/root/core/base/src/TROOT.cxx:363; #13 0x00007f8b05f03845 in TApplication::TApplication (this=0x1582e40, appClassName=0x401350 ""Rint""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/134#issuecomment-195488572:49,simpl,simply,49,https://root.cern,https://github.com/root-project/root/pull/134#issuecomment-195488572,1,['simpl'],['simply']
Usability,"Here is the suspected code. ```; static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad; if (tmpGuideLinePad) {; if (object == tmpGuideLinePad) { // in case of funny button click combination.; tmpGuideLinePad->Delete();; tmpGuideLinePad = 0;; return;; }; tmpGuideLinePad->Delete();; tmpGuideLinePad = 0;; }. // Get Primitives; prims = gPad->GetListOfPrimitives();; n = TMath::Min(15,prims->GetSize());; Int_t lineColor = TColor::GetColor(239, 202, 0);. TAttBBox2D *cur = dynamic_cast<TAttBBox2D *>( object );; if (cur) {; //create invisible TPad above gPad; if (!tmpGuideLinePad){; tmpGuideLinePad = new TPad(""tmpGuideLinePad"", ""tmpGuideLinePad"", 0, 0, 1, 1);; Double_t x1, y1, x2, y2;; gPad->GetRange(x1, y1, x2, y2);; tmpGuideLinePad->Range(x1, y1, x2, y2);; tmpGuideLinePad->SetFillStyle(0);; tmpGuideLinePad->SetFillColor(0);; tmpGuideLinePad->Draw();; tmpGuideLinePad->cd();; gPad->GetRange(x1, y1, x2, y2);; }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6511#issuecomment-701383921:87,Guid,Guidelines,87,https://root.cern,https://github.com/root-project/root/pull/6511#issuecomment-701383921,1,['Guid'],['Guidelines']
Usability,Here it is...any kind of feedback welcome :),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/636:25,feedback,feedback,25,https://root.cern,https://github.com/root-project/root/pull/636,1,['feedback'],['feedback']
Usability,"Here you go!; - It checks pdg against TGeoROOT with tolerance; - It checks pdg against TGeoG4 with tolerance; - It checks TGeoROOT against TGeoG4 with numerical tolerance 1e-15 (some math simply is different); ```; $> root.exe test_material_units.C; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 14:22:00 |; | From heads/fix_radlen_g4units@v6-25-01-4723-g1344269685 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing ../test_material_units.C...; Using ROOT system of units. ; Element: SI Z=14 N=28.000000 A=28.085500 [g/mole]; Material Mat_Si_TGeo A=28.0855 Z=14 rho=2.329 radlen=9.35361 intlen=45.7729 index=0; Element: FE Z=26 N=56.000000 A=55.845000 [g/mole]; Material Mat_Fe_TGeo A=55.845 Z=26 rho=7.874 radlen=1.75666 intlen=16.9589 index=4; Element: U Z=92 N=238.000000 A=238.028900 [g/mole]; Material Mat_U_TGeo A=238.029 Z=92 rho=18.95 radlen=0.316948 intlen=11.4473 index=8; Info in <TGeoManager>: Changing system of units to Geant4 units (mm, ns, MeV).; Using Geant4 system of units. ; Element: SI Z=14 N=28.000000 A=28.085500 [g/mole]; Material Mat_Si_G4 A=28.0855 Z=14 rho=2.329 radlen=93.5361 intlen=457.729 index=0; Element: FE Z=26 N=56.000000 A=55.845000 [g/mole]; Material Mat_Fe_G4 A=55.845 Z=26 rho=7.874 radlen=17.5666 intlen=169.589 index=4; Element: U Z=92 N=238.000000 A=238.028900 [g/mole]; Material Mat_U_G4 A=238.029 Z=92 rho=18.95 radlen=3.16948 intlen=114.473 index=8; TEST PASSED Si vs. Mat_Si_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.17 % IntLen: 1.6 % ; TEST PASSED Si vs. Mix_1_Si_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.0015 % IntLen: 1.6 % ; TEST PASSED Si vs. Mix_2_Si_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.17 % IntLen: 1.6 % ; TEST ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11060#issuecomment-1198355345:188,simpl,simply,188,https://root.cern,https://github.com/root-project/root/pull/11060#issuecomment-1198355345,1,['simpl'],['simply']
Usability,"Here's simpler reproducer for https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154832/testReport/projectroot/runtutorials/tutorial_multicore_mp101_fillNtuples/ ; ```; ❯ cat Demo.C; void Demo() {; auto X = ROOT::TSeqI(42);; } ; ```. The error message is:; ```. Processing Demo.C...; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:67:10: error: instantiation of 'ROOT::TSeq<int>' is different in different modules; class TSeq {; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1910:13: error: 'std::__make_signed_selector<int, true, false>::__type' from module 'std.type_traits' is not present in definition of 'std::__make_signed_selector<int, true, false>' provided earlier; using __type; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1901:11: note: definition has no member '__type'; class __make_signed_selector;; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: error: 'std::make_signed<int>' has different definitions in different modules; defined here; struct make_signed; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: note: definition in module 'std.type_traits' is here; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int)'; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/Demo.C:2:12: note: in instantiation of template class 'ROOT::TSeq<int>' requested here; auto X = ROOT::TSeqI(42);; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: note: previous declaration is here; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int, int, int)'; TSeq(T theBegin, T theEnd, T th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1253760320:7,simpl,simpler,7,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320,1,['simpl'],['simpler']
Usability,"Here's the test program for which I'm doing the massif profile:. ```cpp; #include ""ROOT/RDataFrame.hxx""; #include ""ROOT/RVec.hxx""; #include ""ROOT/RDF/RInterface.hxx""; #include ""TH1D.h""; #include ""TCanvas.h"". #include <string>; #include <vector>; #include <iostream>. int main() {; using namespace std;; using namespace ROOT;. RDataFrame df(""Events"", ""DYJetsToLL.root"");. vector<string> cols;; for (auto& col: df.GetColumnNames()) {; const auto type = df.GetColumnType(col);; if (type.find(""RVec<Float_t>"") != string::npos) {; cols.emplace_back(col);; cout << ""Select column "" << col << "" with type "" << type << endl;; }; }. vector<RDF::RResultPtr<TH1D>> hists;; for (auto& col: cols) {; hists.emplace_back(df.Histo1D<RVec<float>>(col));; }. for (auto i = 0u; i < hists.size(); i++) {; auto c = new TCanvas(cols[i].c_str(), cols[i].c_str(), 600, 600);; hists[i]->Draw();; c->SaveAs((cols[i] + "".png"").c_str());; delete c;; }; }; ```. You can find the profile attached, but it's not very clear to me what we can learn from it. We have 3GB from malloc/new, but it's not clear where it's coming from.; [ms_print_cpp.log](https://github.com/root-project/root/files/5437832/ms_print_cpp.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6676#issuecomment-716413931:986,clear,clear,986,https://root.cern,https://github.com/root-project/root/issues/6676#issuecomment-716413931,3,"['clear', 'learn']","['clear', 'learn']"
Usability,"Hey Lorenzo!. Certainly, I will start Right now. This PR is considerably more complex and currently includes copy pasted parts from the merged PRs (I had to do it for temporary tests before we had merged them as the convolutional layer depends on them). As a result a simple rebase and conflict fix would be simple, but would also leave a very messy history. What I can do instead is start a new branch from the updated master and carefully choose the new changes with better messages. I should be able to do that within 1-2 days and it will yield a clean history. Unless w are in a big hurry I plan to go with th me second approach but please let me know if you prefer the first one!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2216#issuecomment-402624497:268,simpl,simple,268,https://root.cern,https://github.com/root-project/root/pull/2216#issuecomment-402624497,2,['simpl'],['simple']
Usability,Hi - this is breaking some more or less urgent ATLAS analyses - if there is any guidance as to what we could test that'd be much appreciated. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8387#issuecomment-861315969:80,guid,guidance,80,https://root.cern,https://github.com/root-project/root/issues/8387#issuecomment-861315969,1,['guid'],['guidance']
Usability,"Hi @AlkaidCheng ,. Thanks for reaching out! I am not sure I understand where the problem stands. You are purposely injecting a different namespace at runtime, so I don't see how the package can act in order to prevent the wrong namespace being used. The error is unfortunately not clear as to which call site is provoking the lookup to `ROOT.Math.Internal`. Judging by your short snippet, I can imagine that one place could be [here](https://github.com/root-project/root/blob/a29e81cb1cd217ca2096a44d01fb273e085b4e8b/bindings/experimental/distrdf/python/DistRDF/HeadNode.py#L457), but as you can see the correct full namespace is being called there. Can you give more context as to what is your use case so I can better understand how to help?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15035#issuecomment-2015329409:281,clear,clear,281,https://root.cern,https://github.com/root-project/root/issues/15035#issuecomment-2015329409,1,['clear'],['clear']
Usability,"Hi @Axel-Naumann ,. > Much of this has no effect on the resulting assembly; they are simply code churn. Some might result in slightly different assembly instructions, but I double they have a visible effect - can you convince us that this is needed?. This would be completely true if the clang would do its job well. Not the case, unfortunately. Therefore . > slightly different assembly instructions. actually matter. . > by including the case that this change fixes. The reproducer should not crash with these changes. >I don't see why this is needed. What I actually did is that I've put 'f' everywhere for the sake of consistency.; I completely agree that at least in some cases the changes will not matter even for clang. . >I'd be in favor of reducing the change to the few lines where it actually has an effect. OK. Revert the comparisons and leave the assignments? Does that sound reasonable?. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6684#issuecomment-715205130:85,simpl,simply,85,https://root.cern,https://github.com/root-project/root/pull/6684#issuecomment-715205130,1,['simpl'],['simply']
Usability,"Hi @Axel-Naumann ,. I would say ""both"". That is an event display from ZEUS, ""ported"" from ROOT5/Make to ROOT6/CMake. The userbase is small, so whenever someone needs it, some smaller of greater issues arise for various reasons (e.g. ROOT/OS/compiler update) and one has to debug them with the people who need that. No clear separation of ""debug"" and ""production"". And well, this event display is kind of small and fast, so there are no reasons to disable debug information ""in production"". Speed is lesser issue than correctness and stability. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677#issuecomment-713672604:318,clear,clear,318,https://root.cern,https://github.com/root-project/root/issues/6677#issuecomment-713672604,1,['clear'],['clear']
Usability,"Hi @Axel-Naumann ,. This is very simple, but seems to be unmerged and 6-24-04 still has this bug. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8778#issuecomment-948526134:33,simpl,simple,33,https://root.cern,https://github.com/root-project/root/issues/8778#issuecomment-948526134,1,['simpl'],['simple']
Usability,"Hi @Axel-Naumann ,. no, I was running just from home directory. But, let me have a look if 1) this behaviour will be seen after the recent updates of root in EPEL; 2)if I'm able to provide a simple reproducer. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8904#issuecomment-908272636:191,simpl,simple,191,https://root.cern,https://github.com/root-project/root/issues/8904#issuecomment-908272636,1,['simpl'],['simple']
Usability,"Hi @Axel-Naumann,. This is not really a pull request but I thought it might be a good way to get feedback from you guys and maybe some help improving it. This is not meant for merging, we are fine with an out of tree patch for now, but we would of course be very happy if something like this becomes upstream eventually. This is a very ""hacky"" try to be able to create ROOT files with; deterministic checksum that is not dependent on timestamp or hostname or; anything: Create a file with the same content twice on different; machines should yield the same checksum (assuming they have the same root file format version and same class definitions ...). We cannot really modify the software using these checksums and it's not just ROOT files but also other files in there so a distinction between ""content checksum"" and ""file checksum"" would be rather tricky. That's why we went for the brutal approach. We need this mostly for small files in a well controlled environment:; The file is created in one place at one time and not incrementally over; a long time, no threads. . So we would be fine with a global flag to not store time dependent information in files but it is of course ugly. A slightly less horrific version might be to have a `TDeterministicFile` which behaves like `TFile` with the only difference that it has a zeros for dates/uuids but I don't know the classes well enough to judge if that is feasible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4083:97,feedback,feedback,97,https://root.cern,https://github.com/root-project/root/pull/4083,1,['feedback'],['feedback']
Usability,"Hi @Dr15Jones @makortel @siliataider, this PR aims to provide a tutorial how we (ROOT) envision frameworks could use the RNTuple API for writing. If you have some time, it would be great if you could check whether it makes sense and demonstrates the relevant use cases. The ""framework code"" is obviously very much simplified and the goal is not to code a full production framework, but I hope it's close enough to what the ""real"" experiment frameworks are doing. Thanks in advance!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16536#issuecomment-2378502691:314,simpl,simplified,314,https://root.cern,https://github.com/root-project/root/pull/16536#issuecomment-2378502691,1,['simpl'],['simplified']
Usability,"Hi @Harshalzzzzzzz ,; ROOT has a high-level data analysis interface called [RDataFrame](https://root.cern/doc/master/classROOT_1_1RDataFrame.html), you can take a look at the docs and try reading and running some of the tutorials [here](https://root.cern/doc/master/group__tutorial__dataframe.html). `RDataFrame` returns results wrapped in the [RResultPtr](https://root.cern/doc/master/classROOT_1_1RDF_1_1RResultPtr.html) type, through which we implement lazy execution (data processing is triggered when a user accesses the contents of a `RResultPtr`, _not_ when they request the result). RResultPtr has interface and semantics similar to [std::shared_ptr](https://en.cppreference.com/w/cpp/memory/shared_ptr), but currently it's missing a way to release ownership of its contents. `RResultPtr<T>::Release` is a simple method that would mimic the semantics of `std::shared_ptr::release`: it must return a `T*` and empty the `RResultPtr`. What needs to be done concretely:. - [x] add the `RResultPtr::Release` method in RResultPtr.hxx. It should be implemented in terms of `fObjPtr.release()` and it should also set `fActionPtr` and `fLoopManager` to null; - [x] add tests for the feature in `tree/dataframe/test/dataframe_resptr.cxx`, in particular making sure that `Release` and the ResultPtr's move-constructor have consistent behavior; - [x] add logic to the current method `RResultPtr::GetValue` to throw an exception if it's called on a null `RResultPtr`. Thank you in advance for any contribution, and feel free to ask more questions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7047#issuecomment-771507725:814,simpl,simple,814,https://root.cern,https://github.com/root-project/root/issues/7047#issuecomment-771507725,1,['simpl'],['simple']
Usability,"Hi @HenryDayHall ,. yes that line is a leftover and #11972 will remove it (thanks to @ferdymercury ). I suggest looking at RCsvDS, RNTupleDS or RArrowDS (ordered from simpler to more complex) for existing implementations of data sources. RRootDS is unused and we might remove it in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11971#issuecomment-1371082629:167,simpl,simpler,167,https://root.cern,https://github.com/root-project/root/issues/11971#issuecomment-1371082629,1,['simpl'],['simpler']
Usability,"Hi @VanyaBelyaev ,; I ran your reproducer with LCG97apython3(ROOT 6.20/06) and LCG98python3(ROOT 6.22/00).; With the latter it seems that the call to `dill.dumps` is executed but I get a different error with a long stacktrace, I report the main parts:; ```; ...; input_line_38:16:29: error: allocating an object of abstract class type 'TInterpreter'; *ret = new (arena) TInterpreter[nary];; ^; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ...; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: TInterpreter; Error in <TClass::New>: cannot create object of class TInterpreter; Error in <TBufferFile::ReadObject>: could not create object of class TInterpreter; TBufferFile::WriteObjectAny:0: RuntimeWarning: since TROOT has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it. <class cppyy.gbl.TH1D at 0x560bc237aa20>. Error in atexit._run_exitfuncs:; Traceback (most recent call last):; File ""/home/vpadulan/Programs/rootproject/rootinstall/v6-22-00-patches/lib/ROOT/__init__.py"", line 119, in cleanup; backend.gROOT.EndOfProcessCleanups(); ReferenceError: attempt to access a null-pointer; ```. The line `<class cppyy.gbl.TH1D at 0x560bc237aa20>` is there because I added a print to your reproducer just to check that `dill.loads` is executed. Actually this is the simplest command to reproduce the same stacktrace:. ```; python -c ""import ROOT; import dill; print(type(dill.loads(dill.dumps(ROOT.TH1D()))))""; ```. So it's possible that something in the new pyroot (default since 6.22) fixes the `dill` issue but triggers this other error.; @etejedor any thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370#issuecomment-696687077:1579,simpl,simplest,1579,https://root.cern,https://github.com/root-project/root/issues/6370#issuecomment-696687077,1,['simpl'],['simplest']
Usability,"Hi @VanyaBelyaev!. Can you use C++17? That would simplify the code with `if constexpr`, and also work in the ROOT nightlies thanks to our [cppyy upgrade](https://github.com/root-project/root/pull/14507) last week:. ```c++; // the same with functions; template <unsigned int K,unsigned int N>; auto fun_2 (A<N>&) {; if constexpr(K < N) return ""ququ"";; else return K;; ```. If this is not a solution for you and you absolutely need to support the reproducer above, please also open this issue also in [cppyy upstream](https://github.com/wlav/cppyy) since its also present there. > If I am not mistaken sometime ago the situations was just an opposite - standalone template functions were OK, but template methods were not OK... but now I am not 100% sure... What do you mean by ""sometime ago""? I checked with ROOT 6.30, and the situation is the same as with ROOT master, meaning the cppyy upgrade didn't cause any regression in this regard. Anyway, I can't encourage you enough to move to C++17, implementing the patterns that you implement there is a nightmare without `if constexpr` :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15085#issuecomment-2025083053:49,simpl,simplify,49,https://root.cern,https://github.com/root-project/root/issues/15085#issuecomment-2025083053,1,['simpl'],['simplify']
Usability,"Hi @VanyaBelyaev, thanks for posting about this!. As explained in [this PR](https://github.com/root-project/root/pull/11909/files) and later also dicussed in [this forum post](https://root-forum.cern.ch/t/retreiving-the-calculation-strategy-of-a-roonll/55715/2), saving test statistics objects to ROOT files like `RooNLLVar` is now prohibited since ROOT 6.28. It only technically seemed to work without error, but in fact the read-back RooNLLVars are corrupted and give wrong results when you read them back even for simple Gaussian cases, as I showed in the description of the linked PR. This and other reasons lead us to the decision to disallow the IO of `RooNLLVar` and other test statistics classes. From your warnings and error messages, it seems like you're trying to do IO of the RooNLLVar. Is there a way you can avoid this in your workflow? As I said it's not allowed anymore and in older ROOT versions it was not reliable. What people usually do is to save the pdf and the datasets in a RooWorkspace, and maybe a `ModelConfig` to simplify the NLL creation when reading back the data and pdf. Is that not an option for your?. Certainly I was not expecting that the removal of this accidental and buggy IO feature would cause some friction with some users, so I'm happy to help you finding an alternative and better solution!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13280#issuecomment-1644053557:517,simpl,simple,517,https://root.cern,https://github.com/root-project/root/issues/13280#issuecomment-1644053557,2,['simpl'],"['simple', 'simplify']"
Usability,"Hi @VanyaBelyaev, yes the stack trace with a debug build is indeed helpful because of the line numbers. Seeing that `RooProdPdf::factorizeProduct` is involved, I am sure that the recently merged PR https://github.com/root-project/root/pull/7907 causes your problem. No need for a C++ producer then, this problem has nothing to do with pyROOT. But even knowing that, I don't know enough about the problem to solve it. Do you mind sharing your RooFit code that produces the problem? Even better of course with the data, but I understand if you can't share it because of the guidelines of your experiment. But even without the data, seeing the RooFit model would be super helpful for me to understand how the RooProdPdf enters the game. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474#issuecomment-864089572:572,guid,guidelines,572,https://root.cern,https://github.com/root-project/root/issues/8474#issuecomment-864089572,1,['guid'],['guidelines']
Usability,"Hi @VanyaBelyaev,. I confirm the following simple commands both work with ROOT 6.22/08 and ROOT master; ```; $ python2 -c ""import ROOT; import dill; print(type(dill.loads(dill.dumps(ROOT.TH1D()))))""; <class cppyy.gbl.TH1D at 0x564a995e04e0>; $ python3 -c ""import ROOT; import dill; print(type(dill.loads(dill.dumps(ROOT.TH1D()))))""; <class cppyy.gbl.TH1D at 0x559369cdb3a0>; ```. They should be similar to your original reproducer, can you confirm this is fixed for you as well now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370#issuecomment-819457468:43,simpl,simple,43,https://root.cern,https://github.com/root-project/root/issues/6370#issuecomment-819457468,1,['simpl'],['simple']
Usability,"Hi @acampove, thanks for reporting this issue!. I have opened a to avoid the overly-verbose printout in the unbinned case:; https://github.com/root-project/root/pull/14309. However, I would refrain from implementing a progress bar, because this makes the output more difficult to digest when reading log files from e.g. grid jobs. So while I agree it would be nice for interactive use, it would do more harm that good in batch jobs. One could maybe hack something that detects the context in which RooFit is used, but these hacks are usually fragile and I would prefer not to do it. I'll close this issue after merging the PR with the log in the unbinned case. If you *really* want this progress bar, feel free to open a new issue about this, but I'm afraid I can't justify giving that one a high priority. Thanks for your understanding!; Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9489#issuecomment-1881439092:218,progress bar,progress bar,218,https://root.cern,https://github.com/root-project/root/issues/9489#issuecomment-1881439092,2,['progress bar'],['progress bar']
Usability,"Hi @amadio, I think I found the problem. We simply need to add dependencies on libVecOps.so. For the dependency of PyROOT on VecOps, we can discuss a solution together with @etejedor. I have an idea on how to solve this relying on the fact that a TVec has the same layout of a vector with a custom allocator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1896#issuecomment-383410777:44,simpl,simply,44,https://root.cern,https://github.com/root-project/root/pull/1896#issuecomment-383410777,1,['simpl'],['simply']
Usability,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly.; * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4953#issuecomment-583762217:435,clear,clear,435,https://root.cern,https://github.com/root-project/root/pull/4953#issuecomment-583762217,1,['clear'],['clear']
Usability,"Hi @bendavid, with this PR we are officially not supporting to build ROOT with these minuit omp or mpi build options anymore:; * https://github.com/root-project/root/pull/12970. I'll close this issue here, because not it's clear that RooFit can't be used with Minuit2 multithreading. You are right that it's not unreasonable to expect that Minuit2 multithreading can be enabled/disabled at runtime, but this is another issue. Given the limited developer time we have, I think we need a better motivation than ""we realized it would be nice to have"" to implement this. If you have any usecase for Minuit 2 multithreading in ROOT that is covered by these flags, then please go ahead and open a new issue whenever :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12940#issuecomment-1796837979:223,clear,clear,223,https://root.cern,https://github.com/root-project/root/issues/12940#issuecomment-1796837979,1,['clear'],['clear']
Usability,"Hi @bernhardmgruber , thank you for reporting this!. I understand the problem, we need to make sure we give a meaningful name to the RNTuple. Regarding your specific example above, I have a doubt about the design. Since the input is a `TChain` with no name, there is no evident unique name to give to the imported RNTuple. If the `TChain` had a name then that would be the correct name to assign. But in this case, we could:. 1. Get the name of the first tree in the first file of the chain, and assign that irrespective of the names of the other trees in the chain.; 2. Check that all trees of the chain have the same name (the first one), and assign that. If this is not the case, fallback to assigning the first name anyway ?; 3. Invent a new name for the imported RNTuple which will always be applied in case the user is importing from an un-named `TChain`. This could be anything from something simple like `MyRNTuple` to something more unique and complicated like `R__IMPORTED_RNTUPLE`. Thoughts? Also inviting @pcanal and @jblomer to comment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13088#issuecomment-1605303317:900,simpl,simple,900,https://root.cern,https://github.com/root-project/root/issues/13088#issuecomment-1605303317,1,['simpl'],['simple']
Usability,"Hi @bluehood , we could indeed be even better than the STL, I agree. In my opinion here the root of all evil is the vector<bool> specialisation which is de facto a completely different class than vector<T> :( We are just paying the consequences of this asymmetry. Said that, let's dive in the things we can change :). I am hesitant to change the behaviour of data. Can there be cases where the instantiation of RVec<bool>(or vector<bool>)::data() takes place and then is not used, i.e. cases where it is better to be able to instantiate the method rather than not to?; The clean-up RAdoptAllocator can also be done: it is working though and it was not for free. In general I could imagine scenarios where it is better to be able to instantiate vector<bool, RAdoptAllocator<bool>> than not to be... but again this is has to be balanced against the overall simplification of the code base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2804#issuecomment-430372940:855,simpl,simplification,855,https://root.cern,https://github.com/root-project/root/pull/2804#issuecomment-430372940,1,['simpl'],['simplification']
Usability,"Hi @bluehood , wouldn't the method to_string be more appropriate in many cases (see http://en.cppreference.com/w/cpp/header/string_view)? We need to back port it but then the PR would be greatly simplified, wouldn't it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/937#issuecomment-327141998:195,simpl,simplified,195,https://root.cern,https://github.com/root-project/root/pull/937#issuecomment-327141998,1,['simpl'],['simplified']
Usability,"Hi @bluehood ,; I'd wait for the master to be green again and then merge. Since the PR is done and #833 and #828 are reviewed and my patch is very simple, I'd go for this ""summary PR"" and close the afore mentioned ones. Great that now we can seamlessly handle nested parallelism with ROOT. This is yet another milestone for the efficient usage of extreme architectures such as KNL.; In addition this work allows the upgrade of TTreeProcessorMT with the the ""locality patch"" of @etejedor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/835#issuecomment-320438735:147,simpl,simple,147,https://root.cern,https://github.com/root-project/root/pull/835#issuecomment-320438735,1,['simpl'],['simple']
Usability,"Hi @breitwieserCern ,; the functionality now looks good. Could you add a test in roottest about the new functionality?; This one should:; - Generate a dictionary with a selection xml; - Have a macro that loads it and checks that the custom streamer works fine; In order to achieve that, you can have a look to https://github.com/root-project/roottest/blob/master/root/meta/genreflex/CMakeLists.txt . Here you find the instructions about how to run tests: https://root.cern.ch/run-tests. In your case the CMake section could be something like:; ```. ROOTTEST_GENERATE_REFLEX_DICTIONARY(customStreamer customStreamer.h SELECTION customStreamer_selection.xml). ROOTTEST_ADD_TEST(customStreamer; MACRO customStreamer.C; OUTREF customStreamer.ref; DEPENDS ${GENERATE_REFLEX_TEST}); ```; This will generate the dictionary from *customStreamer.h* and *customStreamer_selection.xml*. The macro *customStreamer.C* will be then executed and you can check there that your streamer does what is supposed to do (print something? your call :) ). The output will be compared to customStreamer.ref . You can start from a simplified version of the actual classes you are working with.; Do not hesitate to contact me privately if you need more info!. Cheers,; D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/864#issuecomment-325595999:1105,simpl,simplified,1105,https://root.cern,https://github.com/root-project/root/pull/864#issuecomment-325595999,1,['simpl'],['simplified']
Usability,"Hi @bsunanda ,; Can you provide a simple reproducer of your case? Together with some information about your system (how you installed ROOT etc., compiler version etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12370#issuecomment-1443741367:34,simpl,simple,34,https://root.cern,https://github.com/root-project/root/issues/12370#issuecomment-1443741367,1,['simpl'],['simple']
Usability,"Hi @cburgard and @gartrog, thanks a lot for these developments! I have only a few comments inline. Besides that, please do a few things before we can merge (I would like to merge this as soon as possible, tomorrow or on Friday. If you have more you can always do a followup PR):. 1. You moved the `JSONInterface` to a public header now, so it's not a `RooFit::Detail` anymore (I understand now that the user needs the interface to implement custom importers/exporters). But still, it's an interface under heavy development and we need to make that clear to the user that they can't rely too much on the stability of this interface. Therefore, can you please change the namespace to `RooFit::Experimental`?; 2. Please give the PR a meaningful title, and the first commit a good commit message, optimally not only a title but also a body where you explain what you did. When merging, I will squash the commits and only the first commit message will be taken, so please consider that.; 3. Make sure that all C++ sources are formatted with `clang-format` and the python sources with `black --line-length=120`. Let me know when this is done, then we can ask the CI to test once again and then merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9482#issuecomment-1016939443:548,clear,clear,548,https://root.cern,https://github.com/root-project/root/pull/9482#issuecomment-1016939443,1,['clear'],['clear']
Usability,"Hi @couet , @Axel-Naumann ,. would you have a look? This PR was discussed with a lot of details... Not having these fixes at least in nightlies prevents me from looking at other things in the debugged code. ( The stuff I debug simply crashes before ). And I would really like to debug as much as possible so the results would go into 6.24. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6684#issuecomment-716479561:227,simpl,simply,227,https://root.cern,https://github.com/root-project/root/pull/6684#issuecomment-716479561,1,['simpl'],['simply']
Usability,"Hi @couet , @lmoneta , @pcanal ,. here is a reproducer.; ```. #include <TCanvas.h>; #include <TBox.h>; #include <thread>; #include <vector>. TCanvas* C=nullptr;; void test_function(const int& id); {; C->cd(id);; TPad* p= new TPad();; p->Draw();; p->cd();; TBox *x = new TBox( );; for (int i=0; i<10; i++) p->ShowGuidelines(x, kButton1Down, 'l', true );; delete x;; delete p;; return;; }; int main(int argc, char **argv) {; C= new TCanvas(""C"",""C"",1024,768);; const int N=20;; C->Divide(1,N);; std::vector<std::thread> threads;; std::vector<int> ids;; for (int j=0; j<N; j++) ids.push_back(j+1);; for (size_t j=0; j<ids.size(); j++); threads.push_back(std::thread(test_function,ids[j]));; for (auto& th : threads) th.join();; threads.clear();; delete C;; return 0;; }; ```; I do. ```; g++ $(root-config --glibs --cflags ) -g pad9.cxx -o pad9.exe; ./pad9.exe; ````; and get; ```; *** Error in `./pad9.exe': double free or corruption (fasttop): 0x00007f125c001100 ***; *** Error in `./pad9.exe; *** Break *** segmentation violation; Aborted (core dumped); ```; if I comment line with ``p->ShowGuidelines`` everything is fine. ROOT 6.22.02/gcc 4.8.5/CentOS7 x64_64. Best regards,. Andrii. Sorry if there are more crashes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6510#issuecomment-702865715:732,clear,clear,732,https://root.cern,https://github.com/root-project/root/issues/6510#issuecomment-702865715,1,['clear'],['clear']
Usability,"Hi @couet ,. > so it won't be really useful. Yes. But the size is set during the execution of GUI. > By chance do you have a simple reproducer ?. Simple -- no. But in a scope of elimination of this issue I can provide an access to a private github repository with these codes.; The application itself is not large. Would that work for you?. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-692118820:125,simpl,simple,125,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-692118820,2,"['Simpl', 'simpl']","['Simple', 'simple']"
Usability,"Hi @couet ,. I've tested it and it fixes things for me.; I wrote hopefully because I cannot write a simple reproducer. ; Please read it as ""fixes for my case and hopefully for all similar cases"". Concerning the explanation, it looks like two threads are simultaneously in the scope where the pointer is not zero. Then one c deletes the pointer and the other one derefences null pointer. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6511#issuecomment-701382727:100,simpl,simple,100,https://root.cern,https://github.com/root-project/root/pull/6511#issuecomment-701382727,1,['simpl'],['simple']
Usability,"Hi @couet ,. OK. In TPad the problem is a bit more elaborated. ; At first the calculations of the new sizes are done and only after that the results are checked. ; Here is a simple solution that I've tried.; https://github.com/root-project/root/compare/master...andriish:for_zevis?expand=1. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-692129631:174,simpl,simple,174,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-692129631,1,['simpl'],['simple']
Usability,"Hi @couet ,. the reproducer is the same as in #6447 (Which is closed now, I know). But this time the crash happens later, in the destructor.; ```; ./pad4.exe ; Error in <TList::Clear>: A list is accessing an object (0x2b7f740) already deleted (list name = TList). *** Break *** segmentation violation. ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc; entry=0x7ffce938d760, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120; #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411; #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649; #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407; #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620; #7 <signal handler called>; #8 0x0000000000000000 in ?? (); #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782; #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697; #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668; #12 0x00007f9b77",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6537#issuecomment-702879711:177,Clear,Clear,177,https://root.cern,https://github.com/root-project/root/pull/6537#issuecomment-702879711,1,['Clear'],['Clear']
Usability,"Hi @couet ,. yes, sure. `feenableexcept` is not in `<fenv.h>` on Mac. One can add some code to have exceptions handling, but let us keep it simple. Linux is used much wider anyway. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6374#issuecomment-694282020:140,simpl,simple,140,https://root.cern,https://github.com/root-project/root/issues/6374#issuecomment-694282020,1,['simpl'],['simple']
Usability,"Hi @dpiparo , Thank you! Indeed, I'm not very familiar with the ways ROOT do parallel and I just searched in the document and chose a simple one, i.e. this way. I think we could improve that. ; The reason I wrote this is because it was actually a test problem for me on the GSOC this year, ""to parallel the build of TKDTree and compare the speed"". The benefit, obviously, is that the build of TKDTree could be faster. And maybe also benefit to those who use TKDTree. There might be other possible improvement but for now that is all I can see.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2202#issuecomment-397645948:134,simpl,simple,134,https://root.cern,https://github.com/root-project/root/pull/2202#issuecomment-397645948,1,['simpl'],['simple']
Usability,"Hi @dpiparo and @lmoneta, I included an additional gtest suite. I also modified to documentation so that it's clear that whenever b is rectangular, additional memory is allocated to compute a^(-1).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14420#issuecomment-1910617703:110,clear,clear,110,https://root.cern,https://github.com/root-project/root/pull/14420#issuecomment-1910617703,1,['clear'],['clear']
Usability,"Hi @dpiparo and thanks a lot @adriansev for this useful report!. Yes, there is probably even more breakage than before now that the `cppyy` in ROOT is synced more with `cppyy` upstream. More files are expected to collide. The cppyy module is part of ROOT, and if you install it in two different ways in the same environment (standalone and via ROOT), clashes are bound to happen. So the question to @adriansev is really: what's your usecase for installing cppyy in two different ways in the same environment? What does cppyy standalone give you that you won't get with ROOT? And why is the recommended way of dealing with this (virtual environments) not an option for you?. Many Linux distributions even *force* you to use virtual environments and don't allow `pip install --user` outside of virtual environments anymore. E.g. Arch, NixOS, or Ubuntu:; * https://askubuntu.com/questions/1465218/pip-error-on-ubuntu-externally-managed-environment-%C3%97-this-environment-is-extern. So given that your usecase is against good practices and that it's expected that if you install the same library from two different sources you get breakage, I'm in favor of closing this as ""not planned"" unless @adriansev can follow up with a clear motivation :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12635#issuecomment-2314956198:1223,clear,clear,1223,https://root.cern,https://github.com/root-project/root/issues/12635#issuecomment-2314956198,1,['clear'],['clear']
Usability,"Hi @dpiparo,. Ah! That is good to know!. I definitely think this solves one of the problems on the arm platform, could we be talking about different issues?. Regarding the preprocessor protect:; The change really should not make a difference with respect to the output regardless of platform. If the score of the particular cut so bad that this fix makes a difference we either:; - find a better cut value and forget about this one or,; - this is a solution that would not have been chosen without the patch, but both of these solutions are really really really bad so it doesn't matter which ones we choose. So since I don't think it will matter either way, feel free to do as you feel best. One point is that the code flow will be more clear, in my mind, without any preprocessor branching.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/450#issuecomment-287901267:738,clear,clear,738,https://root.cern,https://github.com/root-project/root/pull/450#issuecomment-287901267,1,['clear'],['clear']
Usability,"Hi @etejedor, thanks for your comments!. Enric and I had a meeting that resulted in the following action items for me:. 1. Remove the `test_` prefix from the roofit pythonization test files; 2. Come up with a mechanism that uses all the functions defined in the RooFit pythonization proxy classes for the pythonization, not excluding magic functions (which are often pythonized); 3. Check if the pythonization abstraction in this PR also allows for pythonizations with the C API; 4. Introduce Doxygen documentation for RooFit pyROOT. In my recent updates, I addressed bullet points 1, 2, and 3. 1. Was trivial to address; 2. I use now a combination of `mro()` and `funcname in klass.__dict__` to check if a new member function was defined in the corresponding Python class or any of it's base classes (inspired by [this stackoverflow post](https://stackoverflow.com/questions/5253397/check-if-class-attribute-was-defined-or-derived-in-given-class)); 3. I made a relatively [simple test](https://github.com/root-project/root/commit/96d76be74f347eb36bd4d785d6689efebb17408b) to verify that if one updates the Python classes with the C API, this is propagated as a pythonization to the correct RooFit class.; Indeed, if you make the changes to the code in my test branch, then this code gives the expected behaviour (using pythonized version of `__getattr__`:; ```Python; import ROOT; a = ROOT.RooRealVar(""x"", ""x"", 0, 0, 10.); getattr(a, ""Hello""); ```. 4. For the documentation, I still have to do that later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7753#issuecomment-831297263:974,simpl,simple,974,https://root.cern,https://github.com/root-project/root/pull/7753#issuecomment-831297263,1,['simpl'],['simple']
Usability,"Hi @guitargeek , I have incorporated the comments that you had made earlier. it is unclear to me why why one of the travis CI build fails, please review the current version and provide us your feedback and suggestions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7766#issuecomment-814066020:193,feedback,feedback,193,https://root.cern,https://github.com/root-project/root/pull/7766#issuecomment-814066020,1,['feedback'],['feedback']
Usability,"Hi @guitargeek , I have some local example which I run to see if the Taylor expansion works fine. (simply Taylor expanding a RooFormulaVar around different points). I would like your inputs on the following items,; - What do you want to have as an unit test ? ; - Shall we also have a tutorial in place ?; - the anaytical integral for a polynomial can be written. I am unsure if the analyticalIntegral fully applies to a function of many variables, let me know how we can ; proceed here. :); ; Cheers,; Rahul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9184#issuecomment-951725716:99,simpl,simply,99,https://root.cern,https://github.com/root-project/root/pull/9184#issuecomment-951725716,1,['simpl'],['simply']
Usability,"Hi @guitargeek @lmoneta @dpiparo,; I would really benefit if this feature were merged, as I need it for my project. Any feedback to my observations on https://github.com/root-project/root/pull/8546#issuecomment-1814425550 ?; Thanks in advance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8546#issuecomment-1895306674:120,feedback,feedback,120,https://root.cern,https://github.com/root-project/root/pull/8546#issuecomment-1895306674,1,['feedback'],['feedback']
Usability,"Hi @guitargeek, I've addressed your changes and rebased to master. I've also changed `LogTimings` to `TimingAnalysis` to it is clear that it is different to the existing profiling and allows for a bit more of an in-depth analysis. I did not add the test that you requested yet since I noticed it required some more changes to the `RooFit::MultiProcessing` then simply implementing the test. I am happy to look into this later though, but I think out of the scope of this MR. But for now we have the unit tests of the HeatmapAnalyzer and the ProcessTimer themselves.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11791#issuecomment-1354447607:127,clear,clear,127,https://root.cern,https://github.com/root-project/root/pull/11791#issuecomment-1354447607,2,"['clear', 'simpl']","['clear', 'simply']"
Usability,"Hi @guitargeek, yeah that does sound like a good idea. The reason why I kept the GetName() just as the class name for now is that I wanted to avoid building the full name as a char* to not have to deal with messy c-string concatenation in a very simple function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10043#issuecomment-1058334840:246,simpl,simple,246,https://root.cern,https://github.com/root-project/root/pull/10043#issuecomment-1058334840,1,['simpl'],['simple']
Usability,"Hi @hageboeck, thanks for the feedback!. Okay, I now took the time to hopefully get this range casting also work for the TCollections, so we don't have duplicate code. Actually, there was an `assert` also in the old [TRangeStaticCast implementation](https://github.com/root-project/root/blob/master/core/cont/inc/TCollection.h#L355)! So to stay consistent with TRangeStaticCast, I had to bring the `assert` in so that change request is also addressed now :) And we can also use the existing unit test in `testTypedIteration.cxx`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8769#issuecomment-891218910:30,feedback,feedback,30,https://root.cern,https://github.com/root-project/root/pull/8769#issuecomment-891218910,1,['feedback'],['feedback']
Usability,"Hi @ihrivnac,. I investigate the issue more deeply. It turns out to be a mix of problems between our build system and the v2-4 and v2-7 of vmc/GEANT3. In v2-4 TrackPosition is not defined for Float: https://github.com/vmc-project/geant3/blob/v2-4/TGeant3/TGeant3.h#L677. While it is in v2-7: https://github.com/vmc-project/geant3/blob/v2-7/TGeant3/TGeant3.h#L682. We had a custom version of geant3 that was hiding the problem with ROOT v6-14, when I moved to v6-18 I lost this custom version, going back to use the standard v2-4, that broke the build because it needed TrackPosition(float) to be defined.; ; I am not sure I have been clear enough! But I believe you guys were correct in your code :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3513#issuecomment-516817913:634,clear,clear,634,https://root.cern,https://github.com/root-project/root/pull/3513#issuecomment-516817913,1,['clear'],['clear']
Usability,"Hi @j-mathe , I think you used `clang-format filename1 filename2 ...` instead of `git clang-format --diff ...`, right? because the clang-format commit introduces many formatting changes that are unrelated to the PR and that we should not apply here. It also makes it a bit harder to review the PR. Please remove that commit and only format your changes (e.g. with `git clang-format --diff master kahan | git apply`). I guess you will need to do an interactive git rebase -- you could also take this chance to clean the commit history, leaving only one commit or one for the new implementation plus one for the new tests. That would make it simpler for me to do a last review pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1237232362:640,simpl,simpler,640,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1237232362,1,['simpl'],['simpler']
Usability,"Hi @jalopezg-git et al :). Thank you for your comments and suggestions, I have learnt new things in this PR. In the last commits I implemented the changes suggested by @vepadulano. Note that I have added a new file with the two lines that print the contents of the TTree using a RDF. The topics that would remain open are:; * Extension of README, as stated [here](https://github.com/root-project/root/pull/13205#discussion_r1259443075). I am sorry but that is beyond my knowledge. Please feel free to complement the README of this tutorial or the ROOT documentation.; * The dot at the end of the branch name is not documented, but it is discussed in some forum threads. I would suggest to add the comment from P. Canal [here](https://github.com/root-project/root/pull/13205#discussion_r1265655686) for sake of clarity. Thank you for your time. Best,; Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13205#issuecomment-1673054332:79,learn,learnt,79,https://root.cern,https://github.com/root-project/root/pull/13205#issuecomment-1673054332,1,['learn'],['learnt']
Usability,"Hi @jpherdi, thanks for the report! I suggest the following changes to the tutorials:; https://github.com/root-project/root/pull/14332. Would this address this issue?. Also, note that the RooFit RDF helpers are not feature complete yet:; https://github.com/root-project/root/issues/7223. I didn't continue working on this, because it was not clear to me which features would actually get used by the users. If it's missing something that you need, for example the treatment of weight columns, please comment on the other issue I linked so we can give it higher priority.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14329#issuecomment-1886862091:342,clear,clear,342,https://root.cern,https://github.com/root-project/root/issues/14329#issuecomment-1886862091,1,['clear'],['clear']
Usability,"Hi @klenze ,; thank you for the feedback, I tend to agree, my only doubt is that these days we don't expect the vast majority of users to have to compile ROOT from source, that's something for developers and contributors, who might want to checkout the full repo anyway.; Why do grad students working on their laptops have to compile ROOT from source?. (with that said, I think we would accept a PR that changes the commands as you suggest. Or maybe we can just mention it in a comment. There is a button the bottom-right of each page on our website which opens a new tab where you can suggest changes)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10238#issuecomment-1080355066:32,feedback,feedback,32,https://root.cern,https://github.com/root-project/root/issues/10238#issuecomment-1080355066,1,['feedback'],['feedback']
Usability,"Hi @ktf , the travis log could be clearer, but it indicates how to run the same command it does:. ```; Running clang-format-3.9 against branch master, with hash 7554be95715898fa2a93528254ce3646764ab3d2; clang-format failed.; To reproduce it locally please run; 	git checkout master; 	git-clang-format --commit 7554be95715898fa2a93528254ce3646764ab3d2 --diff --binary /usr/local/clang-5.0.0/bin/clang-format; ```. This system is not perfect and you might have to adapt hashes/paths to your case, but this is it.; If you do not get any corrections you might somehow be overriding ROOT's clang-format configuration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-371771090:34,clear,clearer,34,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-371771090,1,['clear'],['clearer']
Usability,"Hi @ktf, as discussed yesterday the test failures are related to an issue in our incremental builds where Clad is not rebuilt after changes to the Clang headers. This leads to very weird symptoms because some ""stale"" functions access memory where they shouldn't and so on. I was hit by this problem already twice and it's tracked in https://github.com/root-project/root/issues/7977, so one would suppose that I remember by now but evidently I didn't... Apologies for the confusion and the delay it caused in integrating this. I've now synchronized the changes to https://github.com/root-project/llvm-project/releases/tag/ROOT-llvm16-20240116-01, moving the header to `clang/include/clang/Basic` as mentioned yesterday to keep the ability to build against a vanilla version of LLVM). @vgvassilev I put the commit only into `ROOT-llvm16`, not `cling-llvm16` because I think it's not that relevant for Cling standalone. Let me know if you disagree and I can of course move it. Some measurements of this change on my machine: for a simple `./bin/root.exe -q`, it reduces the maximum RSS from 217MB to 192MB and for `./bin/root.exe -q -e ""std::vector<int> v"" -e ""return 0;""` from 255MB to 230MB :clap:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1893308958:1028,simpl,simple,1028,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1893308958,1,['simpl'],['simple']
Usability,Hi @linev! I would suggest to simply delete the line with `x1 = *iter2;` ([here a link to it](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCurve.cxx#L388)). The value of `x2` is already set correctly [a few lines before](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCurve.cxx#L373).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7536#issuecomment-804250769:30,simpl,simply,30,https://root.cern,https://github.com/root-project/root/issues/7536#issuecomment-804250769,1,['simpl'],['simply']
Usability,"Hi @lmoneta @couet . I checked the [current documentation](https://root.cern.ch/root/htmldoc/guides/users-guide/MathLibraries.html#numerical-integration), and the point `15.8.3.1 Using ROOT::Math::IntegratorMultiDim` actually shows an example of the IntegratorMultiDim and the usage of different algorithms. . There is a typo, probably caused by copypasting: `Here is a code example on how to use the ROOT::Math::IntegratorOneDim class`, actually it is an example of `IntegratorMultiDim`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7740#issuecomment-1943742763:93,guid,guides,93,https://root.cern,https://github.com/root-project/root/issues/7740#issuecomment-1943742763,2,['guid'],"['guide', 'guides']"
Usability,"Hi @lmoneta and @hageboeck, thanks for the feedback!. I will open a PR in rootbench with a benchmark based on the hf001_example.C tutorial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10562#issuecomment-1128075811:43,feedback,feedback,43,https://root.cern,https://github.com/root-project/root/pull/10562#issuecomment-1128075811,1,['feedback'],['feedback']
Usability,"Hi @lmoneta, thanks for the review! You are right, it's not a sustainable solution to duplicate the interfaces if we want to accept `std::string` more generally in RooFit. I have updated the PR with a new intermediate class that can be used for the interfaces. The intermediate class, `RooStringView`, is simply a wrapper around `const char*` that can also be constructed from a `std::string`. Note that this is different from `std::string_view`, which is not null-terminated and therefore needs a copy when turned into a `const char*`, so we couldn't use that in RooFit interfaces without introducing superfluous copies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9747#issuecomment-1024992856:305,simpl,simply,305,https://root.cern,https://github.com/root-project/root/pull/9747#issuecomment-1024992856,1,['simpl'],['simply']
Usability,"Hi @lmoneta, the bug I fixed was a failing `testMinimizationCpu` test (in another PR). However, during the analysis of the bug, I've seen some places where the code could be improved. The conversion of LossFunctionEventInfo to a struct was a suggestion by Alex. There is a real bug fix for a memory leak, however, that we should merge, even if the rest of the code changes are discarded. The functionality of the minimizer is not changed, the improvements are in simplicity and readability of the code. For what class do you think I'm missing initializations to data members?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/494#issuecomment-293529688:463,simpl,simplicity,463,https://root.cern,https://github.com/root-project/root/pull/494#issuecomment-293529688,1,['simpl'],['simplicity']
Usability,"Hi @pcanal ,. > We need better understanding of the failure mode. OK, I see. Meanwhile I've simplified the reproducer; ```; #include <TCanvas.h>; #include <TPad.h>; int main(int argc, char **argv) {; TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);; C->cd();; TPad* c= new TPad();; c->cd();; delete c;; delete C;; return 0;; }; ```; Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6576#issuecomment-704919795:92,simpl,simplified,92,https://root.cern,https://github.com/root-project/root/pull/6576#issuecomment-704919795,1,['simpl'],['simplified']
Usability,"Hi @pcanal ,. this is quite a simple PR, would you have a look just to reduce the number of pull requests... Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6740#issuecomment-732759304:30,simpl,simple,30,https://root.cern,https://github.com/root-project/root/pull/6740#issuecomment-732759304,1,['simpl'],['simple']
Usability,"Hi @pcanal : great - really nice. Thanks for diving into this.; I can suggest a test:; ```; using namespace ROOT::Experimental;; using MyVec_t = std::vector<int,VecOps::TAdoptAllocator<int>>;; TDataFrame d(4);; auto sd = d.Define(""v"", [](){return MyVec_t{1,2,3};}).Snapshot<MyVec_t>(""t"",""ofile.root"",{""v""});; auto checker = [](const MyVec_t &v){; EXPECT_EQ(size_t(3), v.size());; EXPECT_EQ(1, v[0]);; EXPECT_EQ(2, v[2]);; EXPECT_EQ(3, v[3]);; };; sd.Foreach(checker, {""v""});; ```; This solution will make the treatment of vectors with custom allocs slightly slower than ""traditional"" vectors, right? (whatever the answer this PR is a clear improvement of course!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1707#issuecomment-371294942:634,clear,clear,634,https://root.cern,https://github.com/root-project/root/pull/1707#issuecomment-371294942,1,['clear'],['clear']
Usability,"Hi @pcanal! I could not produce a simpler reproducer, but I noticed that we have also problematic workspaces that are about 6 times smaller (from the same repo linked above):; ```; auto f = TFile::Open(""toyws/WS-HGam-STXS_xs_toy.root"");; auto w = (RooWorkspace*)f->Get(""combWS"");; ```. With this one, I can reproduce the problem without messing around with the stack size limit. Also, your PR #10230 actually affects also this issue, but it does not resolve it. There is now a different crash with a different stack trace, that looks like there is interference of your changes with some `RooWorkspace::Streamer` hackery:; ```; #0 0x000015555276f34c in __pthread_kill_implementation () from /usr/lib/libc.so.6; #1 0x00001555527224b8 in raise () from /usr/lib/libc.so.6; #2 0x000015555270c534 in abort () from /usr/lib/libc.so.6; #3 0x000015555299e7ee in __gnu_cxx::__verbose_terminate_handler () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #4 0x00001555529aac4c in __cxxabiv1::__terminate (handler=<optimized out>); at /usr/src/debug/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #5 0x00001555529aacb9 in std::terminate () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #6 0x00001555529aba77 in __cxxabiv1::__cxa_deleted_virtual () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/pure.cc:57; #7 0x0000155553413509 in RooWorkspace::Streamer (this=0x55555698ea60, R__b=...); at /home/rembserj/spaces/master/root/src/root/roofit/roofitcore/src/RooWorkspace.cxx:2591; #8 0x0000155554e2df7e in TKey::ReadObj (this=0x555556757fc0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TKey.cxx:834; #9 0x0000155554df25e0 in TDirectoryFile::Get (this=0x5555556e2510, namecycle=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TDirectoryFile.cxx:975; #10 0x0000555555555235 in repro () at repro.C:25; #11 0x00005555555551d9 in main () at /tmp/root-compile/repro/main.cpp:4; ```. Fortunately, the stack trace is shorter now! Does this tell you anyth",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1087909663:34,simpl,simpler,34,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1087909663,1,['simpl'],['simpler']
Usability,"Hi @pcanal,. to complement the answer of @bluehood"" TString tokenises, we are using here a simple lexer.; @bluehood : the suggestion of treating names in strings to jit with a procedure similar to the one adopted for entities in files, ""dynamic scopes"", has not been forgotten.; It is not clear to me how to put it in place though. On the other hand, this step goes in the direction of integrating more cling in the handling of ""code strings"". For example, if the strategy explored in this PR demonstrates to be reliable, we could potentially imagine to hook in the lexer used by clang.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3324#issuecomment-458026173:91,simpl,simple,91,https://root.cern,https://github.com/root-project/root/pull/3324#issuecomment-458026173,2,"['clear', 'simpl']","['clear', 'simple']"
Usability,"Hi @pseyfert , thanks. What is needed is clear - we'll figure out the best way to provide the functionality.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1044#issuecomment-331628955:41,clear,clear,41,https://root.cern,https://github.com/root-project/root/pull/1044#issuecomment-331628955,1,['clear'],['clear']
Usability,"Hi @stwunsch ,; In the last [commit](https://github.com/root-project/root/pull/4071/commits/b44ed0c22c82af51bf7d822a29d5c33b9fbf54f7) I have extended the character limit in one line to 120 as in ROOT coding style guide. Please let me know if you find it better this way, otherwise I can just revert it to standard PEP8 and the other changes discussed will still hold",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4071#issuecomment-511335562:213,guid,guide,213,https://root.cern,https://github.com/root-project/root/pull/4071#issuecomment-511335562,1,['guid'],['guide']
Usability,"Hi @vepadulano, thanks for your comments! I hope my recent commit, that will be squashed before merging, is addressing your concerns. Unfortunately, the new CI is red because I merged a PR that broke incremental builds :( But we should get feedback from Jenkins if this PR still works with my newest change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14098#issuecomment-1887156068:240,feedback,feedback,240,https://root.cern,https://github.com/root-project/root/pull/14098#issuecomment-1887156068,1,['feedback'],['feedback']
Usability,"Hi @vgvassilev,. the fix is a simple *git checkout*, isn't it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/599#issuecomment-308331120:30,simpl,simple,30,https://root.cern,https://github.com/root-project/root/pull/599#issuecomment-308331120,1,['simpl'],['simple']
Usability,"Hi @will-cern, thanks for the report!. I'm a bit surprised by this, because `setData()` on the new likelihoods should already work. I have added a test to also cover this now: https://github.com/root-project/root/pull/16353. But maybe there is a corner case where it doesn't work? Does it have to do something with the global observables in data? For these we have already great test coverage by the way:; https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testGlobalObservables.cxx#L371. I know that data resetting is a bit fragile with the *old* NLL (`EvalBackend(""legacy"")`). Maybe you're doing some workarounds that make it work in that case, but this work around is not applicable to the new NLL where a simple `setData()` call should suffice?. Anyway, please let me know how I can reproduce the issue if it's really there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15763#issuecomment-2322862007:730,simpl,simple,730,https://root.cern,https://github.com/root-project/root/issues/15763#issuecomment-2322862007,1,['simpl'],['simple']
Usability,"Hi @wofr06 ,; Thanks for reporting this and for mentioning the `xhost` workaround.; As said above, version 6.32.00 provide as an opt-in a novel version of the graphics and GUIs, based on web browsers for the rendering. While the `TBrowser` visualisation is to be considered basically production-level, the new web-based graphics still misses some functionality - however, it is quite advanced and could be indeed a solution for you. ; In order to activate it you can:; - start ROOT with the `root --web` command; - invoke programmatically `gROOT->SetWebDisplay()` at the startup of your program; - add the line `Canvas.Name: TWebCanvas` to the `.rootrc` file (which can be in your home directory, a bit like `.bashrc` or similar); ROOT also has a new `TBrowser`, as mentioned above, `ROOT::RBrowser` which is web based. In case you are interested to try, we are very interested in your feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15723#issuecomment-2146597941:886,feedback,feedback,886,https://root.cern,https://github.com/root-project/root/issues/15723#issuecomment-2146597941,1,['feedback'],['feedback']
Usability,"Hi @xvallspl, @lmoneta , what's the status of this PR? It looks like a nice simplification to me",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7002#issuecomment-1802744447:76,simpl,simplification,76,https://root.cern,https://github.com/root-project/root/pull/7002#issuecomment-1802744447,1,['simpl'],['simplification']
Usability,"Hi @ynikitenko, thanks for the request! There are several reasons for not supporting PyPy. PyROOT, which is building on top of cppyy, is very deeply connected to the CPython implementation of CPyCppyy. Just like the CPython version of cppyy, PyROOT consists of a Python module and a compiled CPython extension (`libROOTPythonization`). And you can't use CPython extensions in PyPy. So to support PyPy, we would have to rewrite [all this code](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/src), and work closely with the cppyy team to make sure it's PyPy implementation also provides the interfaces that PyROOT expects. That would be a *huge* amount of work with no usecase to justify it. And there are so many alternative of fast analysis frameworks that people are trying out right now: RDataFrame, NumPy, numba, awkward arrays, etc. And let's not forget that pypy has it's limitations! It only supports a restricted subset of Python, and it would require large efforts to port PyROOT to this. One final point: the future of PyPy development is not very clear. Right now, they don't support Python 3.11 yet, for example. Builds are only available for [Python 3.9 and Python 3.10](https://www.pypy.org/download_advanced.html). So investing in PyPy compatibility is also risky because of that. Imagine we would spend half a year trying to support it, and then PyPy would not be maintained anymore :(. I'll therefore close this issue as ""not planned"". tldr; the HEP community is gravitation towards other C++ native of jit-based Python packages to speed up analysis, and at this point investing in pypy is not worth it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8110#issuecomment-2148504771:1090,clear,clear,1090,https://root.cern,https://github.com/root-project/root/issues/8110#issuecomment-2148504771,1,['clear'],['clear']
Usability,"Hi Axel and Lorenzo,. I have all updated, well tested and ready for merge.; If you want to do other review and you have corrections please let me know. On the other hand I have a question:; I have a users guide in markdown in $ROOTSYS/bindings/r/doc/users-guide and I can see that in the last commits you have the users guides in $ROOTSYS/documentation/users-guide; must I move my users guide there?. Best Regards!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/74#issuecomment-136081750:205,guid,guide,205,https://root.cern,https://github.com/root-project/root/pull/74#issuecomment-136081750,5,['guid'],"['guide', 'guides']"
Usability,"Hi Axel and Lorenzo,. I take the code and I put it in one commit to let review it easy.; In resume the changes are ; -> Now you can use R functions in C++ very easy using the class TRFunctionImport, that have overloaded operators to use objects like functions that receives template arguments and return TRObjects.; -> Documentation updated in http://oproject.org/tiki-index.php?page=ROOT+R+Users+Guide#Import; -> added documentation in doxygen; -> new propieties for TRDataFrame with operators. You can see the output of documentation in; http://files.oproject.org/root/rootdoc/html/group___r.html; users guide in markdown integrate to doxygen ; http://files.oproject.org/root/rootdoc/html/md__home_omazapa_root_bindings_r_doc_users-guide__r_o_o_t_r__users__guide.html. I have the code now in http://github.com/oprojects/root. Best Regards; O.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/83:92,resume,resume,92,https://root.cern,https://github.com/root-project/root/pull/83,3,"['Guid', 'guid', 'resume']","['Guide', 'guide', 'resume']"
Usability,"Hi Axel,. The fixes are ready and the documentation in doxygen is ready ; http://files.oproject.org/root/rootdoc/html/group___r.html; users guide in markdown integrate to doxygen ; http://files.oproject.org/root/rootdoc/html/md__home_omazapa_root_bindings_r_doc_users-guide__r_o_o_t_r__users__guide.html. Best regards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/74#issuecomment-127150589:140,guid,guide,140,https://root.cern,https://github.com/root-project/root/pull/74#issuecomment-127150589,1,['guid'],['guide']
Usability,"Hi Bertrand, what's the stacktrace for df017_vecOpsHEP.py? it's a very simple tutorial, so if that doesn't work i'm thinking no RDF program should work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10721#issuecomment-1151021014:71,simpl,simple,71,https://root.cern,https://github.com/root-project/root/pull/10721#issuecomment-1151021014,1,['simpl'],['simple']
Usability,"Hi Konstantin,. Implementation is relatively simple, but I have no possibility to test the code.; If you can test changed code, I can provide it very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7127#issuecomment-773427043:45,simpl,simple,45,https://root.cern,https://github.com/root-project/root/issues/7127#issuecomment-773427043,1,['simpl'],['simple']
Usability,"Hi Lorenzo, thank you for your feedback 😀! Do you know by any chance if this fix will be included in the next ROOT release? It is important for us to know if we should wait or implement some workaround in our project code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10780#issuecomment-1160231233:31,feedback,feedback,31,https://root.cern,https://github.com/root-project/root/pull/10780#issuecomment-1160231233,1,['feedback'],['feedback']
Usability,"Hi Lorenzo,; Thanks for the constructive feedback, I will soon address the comments and the build warnings and update the PR. Regarding the XML incompatibility, I changed that on purpose so that we always have the same naming. Let me know if I need to revert this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117#issuecomment-398771967:41,feedback,feedback,41,https://root.cern,https://github.com/root-project/root/pull/2117#issuecomment-398771967,1,['feedback'],['feedback']
Usability,"Hi Luca,. ```; some remarks:; ```; - put implementation in TSimpleAnalysis.cxx; - add in .cxx clear description of how this class should be used, give examples; - provide example for tutorials/tree/simpleanalysis.C; - use ROOT coding style; - don't use Italian comments. Cheers, Fons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/222#issuecomment-242022674:94,clear,clear,94,https://root.cern,https://github.com/root-project/root/pull/222#issuecomment-242022674,2,"['clear', 'simpl']","['clear', 'simpleanalysis']"
Usability,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:; 1) Remove all variable names in Italian language; 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file""; 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness.; 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names); 5) ""Invalid argument set"" shall be printed on stderr; 6) The script must be compatible python2 and python3, e.g. for what concerns the print function; 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,; Danilo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/236#issuecomment-245232939:1392,clear,clear,1392,https://root.cern,https://github.com/root-project/root/pull/236#issuecomment-245232939,1,['clear'],['clear']
Usability,"Hi Marcin,. That worked and did some progress in understanding the problem. A potential work-around would be requested the dictionary for the 2 level of namespace/struct that contains the typedef (in the same dictionary). In order to test any solution to the problem I still need a standalone reproducer and I am still having some difficulties. In particular in my attempts to reproduce the dictionary generation the typedef does not appear in the dictionary nor in the rootmap file. Weirder even, when I follow the [instructions](https://atlassoftwaredocs.web.cern.ch/guides/build_release/) to build Athena from scratch (on zeus.lbl.gov; done a couple of weeks ago), I get a different rootmap file (however because the build is currently (for other reason) partially broken I did not try with it):; ```; grep jetlink_t ../atlas_working/build/build/Athena/_CPack_Packages/Linux/RPM/Athena_23.0.17_x86_64-centos7-gcc11-opt/usr/Athena/23.0.17/InstallArea/x86_64-centos7-gcc11-opt/lib/Athena.rootmap; ```; vs; ```; grep jetlink_t /cvmfs/atlas-nightlies.cern.ch/repo/sw/master_Athena_x86_64-centos7-gcc11-opt/2023-03-05T2101/Athena/23.0.20/InstallArea/x86_64-centos7-gcc11-opt/lib/Athena.rootmap; typedef MissingETBase::Types::jetlink_t; ```. So I am not sure what I am doing different in my reproducer and in my local Athena.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12378#issuecomment-1462615809:569,guid,guides,569,https://root.cern,https://github.com/root-project/root/issues/12378#issuecomment-1462615809,1,['guid'],['guides']
Usability,"Hi Oksana, `[Modulariz.]` looks a bit awkward. I'd remove, as the commit message is clear without it. If you want to keep it, maybe consider not abbreviating. We know you are working on modularization, but someone that doesn't know might be more confused than helped by the tag.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2425#issuecomment-410149743:84,clear,clear,84,https://root.cern,https://github.com/root-project/root/pull/2425#issuecomment-410149743,1,['clear'],['clear']
Usability,"Hi Olivier,. I had a similar situation with a Fermilab server and requested computing support to install missing libraries. I do not have a CERN account so can't open a ticket for lxplus9, but it makes sense to install the libraries there to make the machine usable with ROOT. Andrei. ________________________________________; From: Olivier Couet ***@***.***>; Sent: Tuesday, August 15, 2023 9:27 AM; To: root-project/root; Cc: Andrei Gaponenko; Author; Subject: Re: [root-project/root] clip edit in GL viewer is still broken (Issue #13418). Gl does not seem properly installed there:. $ glxgears; libGL error: No matching fbConfigs or visuals found; libGL error: failed to load driver: swrast; Error: glXCreateContext failed. —; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_root-2Dproject_root_issues_13418-23issuecomment-2D1679025586&d=DwMCaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=O47fc5vzDTR2V_gla4Ub0Q&m=pYI_UukDspkvToM08be43rqW1Ini373CaTW7YzYzXvzaAbgFN1hfOxDILOY5LkIt&s=ejeOXHRM6NnnTa4TA470cGD4wj63fFxBITffmOQ02lc&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_AAXVCGSO4HWIKORE7ZRV24LXVOBONANCNFSM6AAAAAA3I665NU&d=DwMCaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=O47fc5vzDTR2V_gla4Ub0Q&m=pYI_UukDspkvToM08be43rqW1Ini373CaTW7YzYzXvzaAbgFN1hfOxDILOY5LkIt&s=Qa0IvEvjeyrinJUtkFkmyfcNPybfsSDQQI7cpx17nBw&e=>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13418#issuecomment-1679169141:259,usab,usable,259,https://root.cern,https://github.com/root-project/root/issues/13418#issuecomment-1679169141,1,['usab'],['usable']
Usability,"Hi Olivier; I propose for the docu:; In THistPainter in table for 2dim options: add a row for ""Z CJUST"" ; with short description and a reference to TPaletteAxis; In TPaletteAxis: description + example macro; In general:; Make a new Pull Request starting from current head (6.19.01??); including code + docu since original PR was based on 6.16; (ignore original PR); Its not clear to me how in the docu handle the since, e.g.; \since **ROOT version 6.09/01**; because I dont know yet when this really gets published. Cheers ; Otto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3552#issuecomment-530720378:374,clear,clear,374,https://root.cern,https://github.com/root-project/root/pull/3552#issuecomment-530720378,1,['clear'],['clear']
Usability,"Hi Oxana, . The configuration files in mathcore/build and mathmore/build genvector/build ands matrix/build are used for stand-alone build of the packages. For just downloading them and building with simple ./configure/make.; I think for the moment it is better to keep them, but in case we remove them, I would not put these commit in this PR but open a separated one for this. Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2737#issuecomment-428859326:199,simpl,simple,199,https://root.cern,https://github.com/root-project/root/pull/2737#issuecomment-428859326,1,['simpl'],['simple']
Usability,"Hi Patrick, thanks for the explanation, things make more sense for me now! Interesting that you also experimented with making the full RooAbsMinimizer templated. I agree that making the RooAbsMinimizer a templated class is not the best solution, but I still think we can even avoid the templated constructor, making the code more clear and reducing compile time/binary size. You already have this nice `FcnMode` enum class which I think is great because enum class is typesafe while enum is not. Taking this enum, you could have a RooMinimizer constructor with the signature:; ```; RooMinimizer(RooAbsReal &function, FcnMode fcnMode);; ```; Then depending on `fcnMode`, you can create the correct function instance. You would not even have to check for the `logic_error`, because with the enum class is is ensured that the value is either `classic` or `gradient`. You would just need a little helper struct to make the `RooMinimizer::create()` function work, something to translate from the function class to the FcnMode:. ```C++; class RooMinimizer { ; ; ... ; private: ; ; template <typename MinimizerFcn ; struct GetFcnMode { ; static const FcnMode value = FcnMode::classic; ; }; ; ; ... ; ; } ; ; ; template<> ; struct RooMinimizer::GetFcnMode<RooGradMinimizerFcn> { ; static const FcnMode value = FcnMode::gradient; ; }; ; ; ; // static function ; template <typename MinimizerFcn> ; std::unique_ptr<RooMinimizer> RooMinimizer::create(RooAbsReal &function) { ; return std::make_unique<RooMinimizer>(function, GetFcnMode<MinimizerFcn>::value); ; } ; ```. Would this approach also work with your upcoming developments?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596#issuecomment-879770741:330,clear,clear,330,https://root.cern,https://github.com/root-project/root/pull/8596#issuecomment-879770741,1,['clear'],['clear']
Usability,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```; TF1 f(""f"",""sinn(x)+cos(x)""); ```. we get ; ```; input_line_11:2:65: error: use of undeclared identifier 'sinn'; Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }; ^; Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid !; (TF1 &) Name: f Title: sinn(x)+cos(x); ```. Before we were getting also an extra message as ; ```; Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s); ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2017#issuecomment-391022050:42,clear,clear,42,https://root.cern,https://github.com/root-project/root/pull/2017#issuecomment-391022050,1,['clear'],['clear']
Usability,"Hi Philippe,. Could you give me a hint of what sort of test this is? It doesn't look like a simple CTest, is it? How should I reproduce this error locally?. Cheers,; Attila",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466#issuecomment-352200372:92,simpl,simple,92,https://root.cern,https://github.com/root-project/root/pull/1466#issuecomment-352200372,1,['simpl'],['simple']
Usability,"Hi Philippe,; I think I don't understand anything about unloading. What is ` (redo of the) autoloading`? Are we ""re dlsym()""ing all libraries after unloading?. ```; // root/meta/cmsUnload/scripts/case3.script; .L lib/libStrip.so ; Marker m1; ; Marker m2; ; gInterpreter->AutoParse(""SiStripCluster""); ; .undo 3; ```; .L lib/libStrip.so is not undo ed, but does it needs to be reloaded or something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2852#issuecomment-435948039:303,undo,undo,303,https://root.cern,https://github.com/root-project/root/pull/2852#issuecomment-435948039,2,['undo'],['undo']
Usability,"Hi Philippe,; thanks for your feedback, I hope that I managed to make the change and add it to the PR correctly. (Even though I don't know GIT very well, I am developing strong feelings about it;).; Cheers, Peter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/369#issuecomment-282802542:30,feedback,feedback,30,https://root.cern,https://github.com/root-project/root/pull/369#issuecomment-282802542,1,['feedback'],['feedback']
Usability,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6889#issuecomment-736290535:312,simpl,simple,312,https://root.cern,https://github.com/root-project/root/issues/6889#issuecomment-736290535,2,['simpl'],['simple']
Usability,"Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. ```; #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";; ```. ?. Do we need a test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5536#issuecomment-623916083:92,simpl,simply,92,https://root.cern,https://github.com/root-project/root/pull/5536#issuecomment-623916083,1,['simpl'],['simply']
Usability,"Hi Vassil,. In this example the library is not unloaded. However the 3 transaction; ```; 1) m1 declaration; 2) m2 declaration; 3) lexing, parsing, etc. of the headers related to 'SiStripCluster' (aka AutoParsing); ```; after the 'undo' the declarations introduced by the 'headers related to SiStripCluster' are (should be) removed from the AST. Upon redoing the action whether it is explicity:; ```; Marker m1; ; Marker m2; ; gInterpreter->AutoParse(""SiStripCluster""); ; ```; or implicitly; ```; Marker m1; ; Marker m2; ; SiStripCluster obj;; ```; we need to end up in a state where the declarations introduced by the 'headers related to SiStripCluster' are (back) into the AST. Cheers,; Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2852#issuecomment-435952826:230,undo,undo,230,https://root.cern,https://github.com/root-project/root/pull/2852#issuecomment-435952826,1,['undo'],['undo']
Usability,"Hi Will!. We try to bring the behavior of the `RooAbsCollection`s closer to the STL containers like [std::vector](https://en.cppreference.com/w/cpp/container/vector). This means that `operator[]` should simply access an element as quickly as possible without any bounds checking for no overhead. That's why it changed from 6.24 to master. Only the `at()` member should do the bounds checking. I still have some work to do here because its behavior is inconsistent with `std::vector` (it returns a `nullptr` if the bounds check fails). So bringing the element-accessing behavior closer to Python behavior would unfortunately bring us further away from the STL behavior, and I would advise against the suggested change. However, I would agree that on the pyROOT side, the `RooAbsCollections` should behave more pythonic and we should absolutely implement a pythonization to support element access from the back with negative indices!. Is that a fair compromise? Did you intend to use the negative indices in C++?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8174#issuecomment-842217657:203,simpl,simply,203,https://root.cern,https://github.com/root-project/root/pull/8174#issuecomment-842217657,1,['simpl'],['simply']
Usability,"Hi Yuka,. This is wrong and will not work on normal platform. Especially MacOS has other signature and I submit appropriate PR #2584 . pthread_setname_np() must be defined in `<pthread.h>` system include.; If it is not there - it is not allowed to use it. I already provide simple app which shows if compilation works or not - see discussion #2581",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2629#issuecomment-422023689:274,simpl,simple,274,https://root.cern,https://github.com/root-project/root/pull/2629#issuecomment-422023689,1,['simpl'],['simple']
Usability,"Hi all,; I still do not see all the advantages of this solution.; The recipe to run the test is on the ROOT website https://root.cern.ch/run-tests and is not exactly niche.; With these commands, from scratch, you can start testing ROOT and you have at disposal roottest for developing tests:; ```; mkdir RootDevelopment; cd RootDevelopment; git clone https://github.com/root-project/root; git clone https://github.com/root-project/roottest; mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON ../root; ```; I wonder if this is still simpler even though the potential of git is not fully exploited.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/599#issuecomment-308217986:562,simpl,simpler,562,https://root.cern,https://github.com/root-project/root/pull/599#issuecomment-308217986,1,['simpl'],['simpler']
Usability,"Hi guys,; * updated PyMVA with support for scikit-learn >= 0.18; * support for python 2 and 3. Best; Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/375:50,learn,learn,50,https://root.cern,https://github.com/root-project/root/pull/375,1,['learn'],['learn']
Usability,"Hi there,. OK, I think that I have found the culprit, but I don't understand the reasons. The main difference of our current 'minitree production' jobs this round is that we included a build of the MCFM physics generator with the build of our analysis code and we use it while running to calculate physics matrix elements for each event. . So to test this, I rebuilt our analysis code without building MCFM, and of course no longer calculate the matrix elements. I submitted this to the BNL site, and we read the files fine:. H4lAnalRun2 INFO processEvents: try to open file: root://dcgftp.usatlas.bnl.gov:1096//pnfs/usatlas.bnl.gov/BNLT0D1/rucio/mc16_13TeV/84/1f/DAOD_HIGG2D1.23315636._000001.pool.root.1; H4lAnalRun2 INFO processEvents: called TFile Open ; H4lAnalRun2 INFO processEvents - opened file 0 root://dcgftp.usatlas.bnl.gov:1096//pnfs/usatlas.bnl.gov/BNLT0D1/rucio/mc16_13TeV/84/1f/DAOD_HIGG2D1.23315636._000001.pool.root.1; H4lAnalRun2 INFO notifyNewFile: Entering. which as you may remember is the TFile::Open on a file which would use xrootd access. The job continues fine, reading 6 files, as one would expect. Now there is no matrix element calculated before we start reading the events. So it must be that somehow linking in the MCFM libraries causes problems for calling the gethostname. I must admit that I have no idea how/why this would 'interfere', since MCFM is not run at all before the TFile::Open. . So I think that we can let this bug report rest for now. If anyone might have ideas on how to check or fix the MCFM problem, suggestions are welcome. But I no longer think that xrootd has a problem. This is clearly a problem in how we have set up our client code. Thanks all for your time spent on this!. see you, RD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760749391:1634,clear,clearly,1634,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760749391,1,['clear'],['clearly']
Usability,"Hi there,. Running root-based reading analysis jobs in ATLAS, we are having problems trying to understand why some jobs fail on certain sites at file open when reading remote files with xrootd. We are using ROOT version 6.18/04. (I don't think that we have problems with 6.16/00, and a few tests indicate that 6.20/06 also had this problem.) . What we see is that for a file open:. std::unique_ptr< TFile > ifile( TFile::Open( file.c_str(), ""READ"" ) );. on a grid site node, the job exits with status code 139, which I believe is SIGURG - Urgent condition on socket (4.2BSD). ; The status code from TApplication::HandleException is 128 + root enum, and 11 is kSigUrgent. ; See:; https://root.cern.ch/doc/master/TApplication_8cxx_source.html#l00602; https://root.cern.ch/doc/master/TSysEvtHandler_8h_source.html#l00107. Running the same program interactively on the same file works fine. And it seems that only some sites with remote reading are failing. So we would like to ask for help in trying to track this down. Currently, there is no stack trace to help understand things, and a simple 'print' just after TFile::Open is not printed. . I tried to add:. gApplication->ExitOnException( TApplication::kDontExit );. thinking that https://root.cern.ch/doc/master/TApplication_8cxx_source.html#l00602. void TApplication::HandleException might throw an exception, but this does not work. So suggestions would be welcome. Is there a way to get a stack trace or more information on what is going on in the I/O part of this file open?. I don't know how to add in watchers for people in ATLAS, or a mailing list. But I did find @krasznaa. thanks much, RD",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948:1085,simpl,simple,1085,https://root.cern,https://github.com/root-project/root/issues/6948,1,['simpl'],['simple']
Usability,"Hi! I think the global caches are a bad idea, I'm still thinking of how to get rid of them without losing cache efficiency. For now, the workaround is to clear the global cache with:; ```C++; RooExpensiveObjectCache::instance().clearAll();; ```; Another solution is to use the RooWorkspace factory pattern to create your model, because then it uses a model local cache in the workspace that gets cleared when the workspace goes out of scope. Hope that helps for now!. edit 1: corrected ""mode local"" to ""model local""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10577#issuecomment-1133924183:154,clear,clear,154,https://root.cern,https://github.com/root-project/root/issues/10577#issuecomment-1133924183,3,['clear'],"['clear', 'clearAll', 'cleared']"
Usability,"Hi! I'm not sure if this is a good idea. The ROOT Fitter is not meant to be inherited from in C++, right? It has no virtual functions, and nowhere do we inherit from it. I'm worried that encouraging users to inherit from the Fitter like this will cause further complications, so maybe it's good that it doesn't work? What is the benefit of this?. If you think this is really necessary, maybe better add a comment to the destructor explaining why it needs to be `virtual` for PyROOT, because when reading the C++ code it's not clear why it should be there and there is the risk that future developers interpret it as an accidentally added keyword and remove it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12397#issuecomment-1448506389:526,clear,clear,526,https://root.cern,https://github.com/root-project/root/pull/12397#issuecomment-1448506389,1,['clear'],['clear']
Usability,"Hi! I'm still not 100 % sure this is the right fix, and I didn't have the time to think more about this so far. I will come back to this, but right now this PR is not ready yet. I'll change it to a draft to make this clear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11228#issuecomment-1270167122:217,clear,clear,217,https://root.cern,https://github.com/root-project/root/pull/11228#issuecomment-1270167122,1,['clear'],['clear']
Usability,"Hi! No that's alright, we don't enforce the formatting of old code. Also a rebase is not necessary, since the tests all passed and the PR would merge fine. Just a note: probably the PR was unattended for so long because the usecase for this feature was not clear (or you needed it in your project?). Now that we have it, we might as well merge it, but for the future try to focus more on addressing concrete use needs or improving the ROOT developer experience (like you did in many other PRs).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9156#issuecomment-1812443312:257,clear,clear,257,https://root.cern,https://github.com/root-project/root/pull/9156#issuecomment-1812443312,1,['clear'],['clear']
Usability,"Hi! Since I didn't get feedback yet, I decided to just merge the refactor to check the consistency without the try-catch hack. If you need the public interface after all, fee free to open a new PR about that once this one is merged :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13748#issuecomment-1816424024:23,feedback,feedback,23,https://root.cern,https://github.com/root-project/root/pull/13748#issuecomment-1816424024,1,['feedback'],['feedback']
Usability,"Hi, . Some time ago, I have had issues when invoking an `RDataFrame` analysis on a `TChain` that consisted of trees with **different names** in the **same file** (the canonical thing is just the other way around...). I first described the problem [here in the ROOT forum, rather long read, not absolutely necessary to understand this issue](https://root-forum.cern.ch/t/really-solved-rdataframe-for-tchain-loaded-with-ttrees-with-different-names/41756). Unluckily only my entire analysis chain was able to trigger the bug; i.e. I was not able to produce a condensed reproducer of the problem. The clearest indicator of the occurring mismatch was the following line repeatedly being printed on the terminal:; ```; Error in <TTreeReader::SetEntriesRange()>: first entry out of range 0..946274; ```. I also found a work-around, but the problem was still bothering me, which is why I invested some time in debugging it:. * The number of the error statement is identical to the number of entries in the *first* tree, which has fewer entries than its partner. It only occurs once `EntryClusters` from the second tree are being processed. I.e. the tree-switch is insufficient.; * The error seems to be caused by the following line:; https://github.com/root-project/root/blob/312dacbfdb2b76bfb1fa7af9532a01b3b08d03f1/tree/treeplayer/src/TTreeProcessorMT.cxx#L143; * Changing it as shown in this diff here seems to solve the problem:; ```; --- a/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:22:19.290883093 +0000; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:32:00.000483321 +0000; @@ -140,8 +140,12 @@; const std::vector<Long64_t> &nEntries, const std::vector<std::vector<Long64_t>> &friendEntries); {; const bool usingLocalEntries = friendInfo.fFriendNames.empty() && entryList.GetN() == 0;; - if (fChain == nullptr || (usingLocalEntries && fileNames[0] != fChain->GetListOfFiles()->At(0)->GetTitle())); + if (fChain == nullptr || ( usingLocalEntries && (; +			 (fileNames[0] != fCh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7143:597,clear,clearest,597,https://root.cern,https://github.com/root-project/root/issues/7143,1,['clear'],['clearest']
Usability,"Hi, ; Thank you for applying the changes in the code and to provide a tutorial and a test program. ; I have one more comment:; I still don't like having to pass a double** in the interface (in this case in the constructor). As you see that makes the code not nice (you see that also Travis complained). Since there is no easy solution for this, I would use std::vector<std::vector>> which gives the advantage that you could make it simply directly from a 2D initializer list. Otherwise my second preference is to use a simple double or float pointer and one assumes a proper order of the data. (e.g. raw major). . I would prefer having std::vector<std::vector<double>> for the contained type instead of std::vector<TArrayD>. . Thank you again for your changes and I hope we can merge this PR soon. Sorry for my delay in reviewing it . Lorenzo; Thank you if you can apply the ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-563254077:432,simpl,simply,432,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-563254077,2,['simpl'],"['simple', 'simply']"
Usability,"Hi, ; There is some documentation in the ROOT Users guide, see ; https://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuide.html#numerical-integration. Maybe it is not too visible, and I agree @couet we should probably include in the DOxygen description of the Integration classes. ; We are also missing a tutorial on the INtegratorMultiDim and we should add one before closing this issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7740#issuecomment-810332566:52,guid,guide,52,https://root.cern,https://github.com/root-project/root/issues/7740#issuecomment-810332566,3,['guid'],"['guide', 'guides']"
Usability,"Hi, ; Yes I was surprised to that they release 2.4 with a backward incompatibility API. ; But the future is clear, it is tensorflow.keras and not a multi backend API",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6793#issuecomment-725915781:108,clear,clear,108,https://root.cern,https://github.com/root-project/root/pull/6793#issuecomment-725915781,1,['clear'],['clear']
Usability,"Hi, Danilo. I missed the inheritance chain comment the first time, although I seriously considered your feedback. My justification for changing the executors in 6.12 is that If we can reduce the damage to user code (e.g. reducing the time a soon to be changed interface is exposed and providing the new one) we should go for it. But I'm not taking a hard stance on this and that's why I opened the PR, to discuss it :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1312#issuecomment-343753485:104,feedback,feedback,104,https://root.cern,https://github.com/root-project/root/pull/1312#issuecomment-343753485,1,['feedback'],['feedback']
