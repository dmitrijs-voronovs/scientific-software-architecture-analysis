quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Security,No validation here. I was satisfied with the validation from the Palantir report and using this as a robustness test to show that GATK4 HC isn't going to fall over. I have a matched list of GVCFs here: /humgen/gsa-hpprojects/dev/gauthier/scratch/newQualHC/check.list @skwalker could you adapt your analysis to run with this list? I'll need to give you a different jar for the GenotypeGVCFs step on my GVCFs since the annotation format is outdated.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4614#issuecomment-380822981:3,validat,validation,3,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4614#issuecomment-380822981,2,['validat'],['validation']
Security,"Not bad, but why can't the BAM be split as multiple objects in the same bucket where the directory is the name of the BAM. I was having this discussion with Dion at the following thread:. https://github.com/googlegenomics/utils-java/issues/62#issuecomment-220444203. You can have a folder in the GS location be the name of the BAM, and even sort them like a distributed B-tree. This way you can even simultaneously process reads as new data is streaming in from the GS location. Since the Google disk IOPS are as follows, based on the following link:. https://cloud.google.com/compute/docs/disks/performance#type_comparison. | Read | Write |; | --- | --- |; | 3000 IOPS | 0 IOPS |; | 2250 IOPS | 3750 IOPS |; | 1500 IOPS | 7500 IOPS |; | 750 IOPS | 11250 IOPS |; | 0 IOPS | 15000 IOPS |. So it all depends on perspective of what folks prefer, which in this case means that we can minimize the 6 min component. Then comes the 1.5 min portion of HDFS, which can occur in parallel and could also be memory-mapped and/or SSD accessed. So there are still ways to improve the access and processing time, but it depends on how fast - or instantaneous - folks want to have the results processed and returned back.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1755#issuecomment-235130868:1021,access,accessed,1021,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1755#issuecomment-235130868,2,['access'],"['access', 'accessed']"
Security,"Not in general, because prefetching isn't always desirable. By its nature it's designed for long sequential reads rather than random accesses. In GATK though there is prefetcher code in a FeatureDataSource constructor, so anyone who uses that one will get the prefetching.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5882#issuecomment-482660586:133,access,accesses,133,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5882#issuecomment-482660586,1,['access'],['accesses']
Security,"Not yet. I am curious about the mathematical details of it. How does it distinguish no dominant clone from contamination or too many infiltrating immune cells? In the meantime, I wrote a small R script. Example output below. This is a sun-exposed skin cancer, hence the enormous mutation burden in whole genome sequencing data. ![image](https://user-images.githubusercontent.com/631218/87098600-08acb380-c28b-11ea-8876-9d9817ab13d7.png)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6674#issuecomment-656391166:239,expose,exposed,239,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6674#issuecomment-656391166,1,['expose'],['exposed']
Security,"Note #4439, which concerns a Picard tool that might also need options for interval merging exposed. Just something to be aware of---I'm guessing that it's probably a bit ambitious to have identical options for all interval inputs to both Picard and GATK tools?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4341#issuecomment-367810395:91,expose,exposed,91,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4341#issuecomment-367810395,1,['expose'],['exposed']
Security,"Note that although all walkers now have comprehensive sequence dictionary validation performed on their inputs (via the GATKTool base class, which is aware of all primary tool inputs and so is able to perform this check automatically), at present we need to do this validation manually in dataflow tools (as I did with BQSR dataflow here) -- but it would be nice if we could get it to happen automatically in a base class as it does on the walker side of things. Created as ticket https://github.com/broadinstitute/hellbender/issues/669",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/668#issuecomment-122948454:74,validat,validation,74,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/668#issuecomment-122948454,2,['validat'],['validation']
Security,"Note: the test failures seem to have a lot of docker ""toomanyrequests: You have reached your pull rate limit. You may increase the limit by authenticating and upgrading"" and are probably not due to these changes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-824459892:140,authenticat,authenticating,140,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-824459892,1,['authenticat'],['authenticating']
Security,"Notes from @kvg :. Manuscript on LdBG details: https://academic.oup.com/bioinformatics/article/34/15/2556/4938484. Reference implementation of the assembler in C: https://github.com/mcveanlab/mccortex; mcveanlab/mccortex. My Java library for accessing and manipulating LdBGs and associated formats: https://github.com/mcveanlab/CortexJDK. A useful starting point is the tests I've written to produce Figure 1 (the one with the pentagram cycle) from the manuscript. Without links: https://github.com/mcveanlab/CortexJDK/blob/4ba64ee268314729c871916dfc9ee7c9c422c5cb/public/java/tests/uk/ac/ox/well/cortexjdk/utils/traversal/TraversalEngineTest.java#L210. With links: https://github.com/mcveanlab/CortexJDK/blob/4ba64ee268314729c871916dfc9ee7c9c422c5cb/public/java/tests/uk/ac/ox/well/cortexjdk/utils/traversal/TraversalEngineTest.java#L229. (Oh and FYI, there's one place where my implementation of the read threading currently doesn't match the McCortex C reference implementation - the handling of sequencing errors and replacing the errorful kmers with kmers from the graph. It's an easy thing to add; I just hadn't gotten around to it because I didn't have the need to do that alignment myself given that all my graphs and links were constructed with McCortex anyway.)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5828#issuecomment-475750843:242,access,accessing,242,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5828#issuecomment-475750843,1,['access'],['accessing']
Security,"ODE VERBOSE --MAX_OUTPUT 100 --IGNORE_WARNINGS false --VALIDATE_INDEX true --IS_BISULFITE_SEQUENCED false --MAX_OPEN_TEMP_FILES 8000 --VALIDATION_STRINGENCY STRICT --COMPRESSION_LEVEL 1 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX false --CREATE_MD5_FILE false --help false --version false --verbosity INFO --QUIET false; [March 9, 2017 7:03:42 PM EST] Executing as gspowley@dna on Linux 3.10.0-514.10.2.el7.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14; Version: Version:4.alpha.2-170-g8d06823-SNAPSHOT; 19:03:42.998 INFO ValidateSamFile - Defaults.BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.COMPRESSION_LEVEL : 1; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - Initializing engine; 19:03:43.000 INFO ValidateSamFile - Done initializing engine; ERROR: Record 9762, Read name 20GAVAAXX100126:7:2:8126:115177, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 24466, Read name 20FUKAA",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:1338,Validat,ValidateSamFile,1338,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,"OK - PedigreeValidationType is now set in the constructor and is final. This does not separate the two intertwined codepaths around PedigreeFile vs. FounderIds, but that was a pre-existing problem. It doesnt doesnt change the pre-existing weirdness around the timing of setting pedigreeFile and/or founderIds within GATKAnnotationPluginDescriptor, where PedigreeAnnotation gets special treatment. I dont think this makes that situation any worse. if you still have concerns on this proposal, I actually think I could make our code work if you simply exposed a protected getPedigreeFile() method on PedigreeAnnotation. I can make the SampleDB instance in my code without needed to share code here. It seemed useful to expose some of that code to avoid duplication, but if it's going to over-complicate we can remove it. Also: that one test failure seems potentially unrelated (https://travis-ci.com/github/broadinstitute/gatk/jobs/510624560)? A compile issue with javadoc?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7277#issuecomment-853986169:550,expose,exposed,550,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7277#issuecomment-853986169,2,['expose'],"['expose', 'exposed']"
Security,"OK, thanks @droazen. I'll go ahead and expose all of them in a branch for now. For my own education, perhaps @jamesemery or @vruano can comment---does turning on DRAGEN sidestep all or some subset of the code paths where the above 3 sets of parameters come into play?. For what it's worth, now that I'm looking at short variants in malaria as a ""novice"" HC/M2 user, the command line options are quite daunting! Many of them are not well documented and it's not always clear which options might interact with each other. Perhaps once the evaluations are in place, it might be worth doing some model ablation to see if we can come up with a more minimal set of options (including the consolidation of the parameters under discussion, if possible).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6863#issuecomment-705096593:39,expose,expose,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6863#issuecomment-705096593,1,['expose'],['expose']
Security,"OK, that's reasonable. I'll dig into the other test changes. I can answer a few:. - Regarding passing the VariantWalker: I agree that's not an improvement by itself, but I would argue it's not that much different than it was. My plan is to pass a VariantEvalContext object, which would obscure any need to have knowledge of the walker. In an attempt to keep this PR simpler, I didnt complete that work. I do expect to make a second PR in relatively short order, once we get this resolved. - With respect to testEvalTrackWithoutGenotypesWithSampleFields and the different reference: I think the issue is that the old version (master GATK branch) didnt validate as strictly. When switching to MultiVariantWalkerGroupedOnStart, the reference is required, and the tool will error if the contigs dont match. VariantEval on the master branch didnt really need the reference for anything, and was apparently more permissive if it didnt line up. It probably preferentially grabbed the dictionary from the VCF header. I will look into those other questions",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-744698072:651,validat,validate,651,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-744698072,1,['validat'],['validate']
Security,"OK. Passes checks. @droazen One final look? I couldn't figure out how to use runCommandLine, because I needed access to my walker instance. Is this OK, or is there a better way to do it?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7695#issuecomment-1089021503:110,access,access,110,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7695#issuecomment-1089021503,1,['access'],['access']
Security,"OK. StratManager is about 80% wired to do the merging this would require. It would require me to implement some existing methods, like VariantEvaluator.combine(), but the basic idea exists today in StratificationManager.combineStrats(). I'd probably propose to expose this via VariantEvalEngine by adding saveToDisk(File targetFile), and restore(List<File> serializedStratManagers) methods. I'd propose to keep interaction with this process protected and only expose the save/restore methods. Alternately, I could expose save, restore (single-object) and combine methods. Regarding actually saving the state of StratificationManager to disk: some form of Jackson-based serialization would probably be easiest. My initial thought would be to make a new class specifically for serializing: SerializedStratificationManager. This would cache the relevant information and be the object that is serialized/deserialized. I would add a new constructor to StratificationManager that accepts this object and restores the state within StratificationManager. I think this could be all be kept internal to GATK. Does that broad outline seem like a concept you might accept in GATK?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-755351932:261,expose,expose,261,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-755351932,3,['expose'],['expose']
Security,"Oh I'm so sorry about that. I ran ValidateVariants on a few samples (running the whole batch now). This is the error I get when I don't specify the --validate-GVCF or --validation-type-to-exclude ALLELES . > A USER ERROR has occurred: Input renamed_seq1trimq10_LHA_AS02_1.raw_variants.g.vcf fails strict validation of type ALL: one or more of the ALT allele(s) for the record at position DS235882:56737 are not observed at all in the sample genotypes. The position in the gvcf. > DS235882 56737 . A T,<NON_REF> 0 . BaseQRankSum=-3.172;DP=29;ExcessHet=3.0103;MLEAC=0,0;MLEAF=0.00,0.00;MQRankSum=-1.507;RAW_MQandDP=97098,29;Re; adPosRankSum=-0.312 GT:AD:DP:GQ:PL:SB 0/0:27,2,0:29:67:0,67,1051,81,1056,1070:13,14,1,1. When I exclude the Alleles, I get no errors for the samples I checked thus far. This error cannot be causing the initial problem because I got the same error (in different position) on some gvcfs that are currently working fine with CombineGVCFs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6913#issuecomment-716710858:34,Validat,ValidateVariants,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6913#issuecomment-716710858,4,"['Validat', 'validat']","['ValidateVariants', 'validate-GVCF', 'validation', 'validation-type-to-exclude']"
Security,"Oh, I hadn't noticed that there was a compilation warning causing the test to fail. ```; /gatk/src/test/java/org/broadinstitute/hellbender/MainTest.java:55: warning: [serial] serializable class ExitNotAllowedExcepion has no definition of serialVersionUID; private static final class ExitNotAllowedExcepion extends SecurityException {; ^; error: warnings found and -Werror specified; ```. Please fix that also :)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4283#issuecomment-361661772:314,Secur,SecurityException,314,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4283#issuecomment-361661772,1,['Secur'],['SecurityException']
Security,"Oh, good point. Maybe we should add a GATKRProtectedRegistrator that first applies the GATKRegistrator and then does additional gatk-protected specific registrations? We'll have to add a way to inject the right one though as well.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2337#issuecomment-272483079:194,inject,inject,194,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2337#issuecomment-272483079,1,['inject'],['inject']
Security,"Oh, that's right, I'd forgotten about the SGA license issue. Since we're; about to move to fermi-lite (hopefully), let's just hold off on checking in; the initialization script until that's done, keeping it in the known bucket; location. On Wed, Mar 8, 2017 at 11:37 AM, Steve Huang <notifications@github.com>; wrote:. > @cwhelan <https://github.com/cwhelan> I was actually debating with myself; > about whether to include the initialization script here, as it was living; > in the bucket referred to in the creation script.; > So we could do this:; > always store the initialization script locally with the creation script; > instead of referring to a script living remotely, and makes that a required; > argument. The good: this makes it easier to track changes; The bad:; > initialization script must be removed from the bucket to avoid tracking; > possible different versions.; >; > A non-technical issue: we are ""delivering"" SGA in the initialization; > script, if that comes in to this repo, legal might have a problem with it.; > On the other hand, it the initialization script lives in a place only we; > can access, we are ""installing SGA for our own use"", which is not a problem; > with the GPL license.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/2435#issuecomment-285093289>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AArTZZPv4WyEYz-yYaZZIIjH8LBMOhZ4ks5rjtlCgaJpZM4MTqFc>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2435#issuecomment-285105258:1117,access,access,1117,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2435#issuecomment-285105258,1,['access'],['access']
Security,"Ok -- caveat for all -- objects in bucket that are accessed via simple API Key need to have: User:allUsers:reader ACL permissions. if you need more complex access control, we'll have to support the ""secretFile"" attribute in `gcloud dataproc` -- not just the apiKey.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1609#issuecomment-228425738:51,access,accessed,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1609#issuecomment-228425738,2,['access'],"['access', 'accessed']"
Security,"Ok @jean-philippe-martin, I have an updated patch that seems to resolve the 503 errors! It's here: https://github.com/droazen/google-cloud-java/tree/dr_retry_CloudStorageReadChannel_fetchSize. Will you have time before you leave on vacation to open a PR against google-cloud-java? If not, let me know and we'll try to sort out our CLA issues and PR it ourselves. I didn't have time to write unit tests, unfortunately, though we're running it now with 1000 concurrent jobs each accessing 11,000 files and not seeing any errors.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3253#issuecomment-315447319:477,access,accessing,477,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3253#issuecomment-315447319,1,['access'],['accessing']
Security,"Ok, thanks for validating that. I'll make a PR for this change (the way those unit tests are written is a little sketchy so I may fix that at the same time). I forgot about the spark failures - can you post the log output for those failures as well ?. Also, to answer your original question, you should generally always be able to work directly from head of master and all tests should pass, though sometimes things like this can slip through. Also, to answer your original question",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5511#issuecomment-446964064:15,validat,validating,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5511#issuecomment-446964064,1,['validat'],['validating']
Security,"Okay, I have a new panel for hg38 here: gs://broad-dsde-methods-davidben/mutect2-2023-panel-of-normals/mutect2-hg38-pon.vcf.gz. It has all the variants of the old panel, plus more that arose in more recent versions of Mutect2. It is also generally somewhat more conservative, with a greater bias toward precision than the previous one. This panel is intended to be used at your own risk. I can vouch that it doesn't wreck the results of our own validations but I do not have time to vet it thoroughly enough to put it in the best practices google bucket. Likewise, I cannot promise that it will improve specificity in any particular set of samples. Within several months I hope we are all running the next version of Mutect and never need to see a panel of normals again.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7921#issuecomment-1430315034:445,validat,validations,445,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7921#issuecomment-1430315034,1,['validat'],['validations']
Security,"Okay, this PR has grown a little bit. Here's what we have now:; - Move CompareSAMs to picard package; - Move most of CompareSAMs logic into a separate util, SamComparison; - Move CompareSAMs unit tests to SamComparisonTest, since they do not fit into the CommandLineProgramTest framework. CompareSAMsTest is now a stub, to be expanded later.; - Added SamAssertionUtils, which contains basic assertions about SAM files (are they valid? are they roughly equal?) that are used by many unit tests, so that we don't have the exact same block of boilerplate validation code in multiple places. ; - Insert `--VERBOSITY ERROR` into CommandLineProgramTest, in a way that can handle immutable input lists",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/171#issuecomment-73972768:552,validat,validation,552,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/171#issuecomment-73972768,1,['validat'],['validation']
Security,"One consideration is that (unlike the GATK) we are supporting reference-less traversals, which makes the requirement to always provide a sequence dictionary for every interval a bit onerous... But if the consensus is that we should still always require validation against a sequence dictionary, but encapsulated within GenomeLoc (eliminating the need for GenomeLocParser), I would support that. I agree that the performance concerns are not worth addressing unless a profiler shows that they are an actual problem.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/100#issuecomment-69813473:253,validat,validation,253,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/100#issuecomment-69813473,1,['validat'],['validation']
Security,"One more thing: I'm also wondering if it would be possible to get a quick, preliminary evaluation of such a process without actually doing the work of adding it into the training tool. It's probably possible to do a slightly more ""manual"" validation split (say, using one or a few chromosomes), run the score tool on that validation set, use some external code to calculate the desired threshold from the resulting scores, and then use that threshold going forward. Actually, now that I've written it out, that sounds a lot cleaner and more flexible! Let me try to hack together the corresponding workflow.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1065543611:239,validat,validation,239,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1065543611,2,['validat'],['validation']
Security,One of the issues:. [Utils] [ERROR] [Error] java.lang.IllegalArgumentException: Invalid interval. Contig:1 start:350001 end:300000; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:730); 	at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); 	at org.broadinstitute.hellbender.utils.SimpleInterval.&lt;init&gt;(SimpleInterval.java:37); 	at org.broadinstitute.hellbender.tools.copynumber.utils.annotatedinterval.AnnotatedIntervalUtilsUnitTest.provideMergeByAnnotation(AnnotatedIntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:178,validat,validateArg,178,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410,2,['validat'],"['validateArg', 'validatePositions']"
Security,"One part of this ticket is done: https://github.com/broadinstitute/gatk/pull/4964 added accessors that allow direct descendants of `GATKTool` to directly access engine datasources, while still forbidding direct access for tools that extend a Walker base class (except for Walker types living in the engine package, which still have access).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4341#issuecomment-483829878:88,access,accessors,88,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4341#issuecomment-483829878,4,['access'],"['access', 'accessors']"
Security,Or rather the sequence-dictionary would have a method to instantiate validated GenomeLocs?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/100#issuecomment-69799988:69,validat,validated,69,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/100#issuecomment-69799988,1,['validat'],['validated']
Security,"Or rather, what needs to happen is the arguments need to be parsed and injected in the constructor for the class at the top of the hierarchy, so that all subclass constructors can use the argument values during initialization.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/107#issuecomment-69779074:71,inject,injected,71,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/107#issuecomment-69779074,1,['inject'],['injected']
Security,"Overriding the defaults would get us most of the way there. Right now, we perform the following check on the IAC and fail if the defaults aren't changed to values that the CNV tools require, which is awkward:. ```; /**; * Validate that the interval-argument collection parameters minimally modify the input intervals.; */; public static void validateIntervalArgumentCollection(final IntervalArgumentCollection intervalArgumentCollection) {; Utils.validateArg(intervalArgumentCollection.getIntervalSetRule() == IntervalSetRule.UNION,; ""Interval set rule must be set to UNION."");; Utils.validateArg(intervalArgumentCollection.getIntervalExclusionPadding() == 0,; ""Interval exclusion padding must be set to 0."");; Utils.validateArg(intervalArgumentCollection.getIntervalPadding() == 0,; ""Interval padding must be set to 0."");; Utils.validateArg(intervalArgumentCollection.getIntervalMergingRule() == IntervalMergingRule.OVERLAPPING_ONLY,; ""Interval merging rule must be set to OVERLAPPING_ONLY."");; }; ```. If we override defaults, we'd still perform the check to make sure the user didn't muck with them, but it'd still be nicer than forcing the user to change the original defaults on their own. However, there are still two more awkward points: 1) there is no value for `-interval-set-rule` that does *nothing* to the incoming intervals (you must either union or intersect), and 2) we have to specify our own `padding` argument in `PreprocessIntervals` that is distinct from `-interval-padding`, since we want to implement our own padding. The first can be easily addressed by adding an option to do nothing to the intervals; I'm not so sure what the best way to handle the second would be, so we can punt on it if it'd be more work than it's worth---these are relatively minor pain points, in the end.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4341#issuecomment-363219857:222,Validat,Validate,222,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4341#issuecomment-363219857,6,"['Validat', 'validat']","['Validate', 'validateArg', 'validateIntervalArgumentCollection']"
Security,Passing VAT from VDS run on Quickstart here: https://app.terra.bio/#workspaces/gvs-dev/GVS%20Quickstart%20v3%20ggrant/job_history/533017b9-2dfb-42ec-83ef-42dfda67f5c1; And a 'passing' (two expected failures) ValidateVat run here:; https://app.terra.bio/#workspaces/gvs-dev/GVS%20Quickstart%20v3%20ggrant/job_history/e0af0c06-c724-4ae2-b821-6a04b558b21e,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8144#issuecomment-1371268610:208,Validat,ValidateVat,208,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8144#issuecomment-1371268610,1,['Validat'],['ValidateVat']
Security,"Per comments on the Slack channel, this can also be used as a component in germline tagging for matched tumor-normal pairs. For the same series above:. Here is the 100% normal run through ModelSegments, which yields 36 segments:; ![N modeled](https://user-images.githubusercontent.com/11076296/76631751-931d1a80-6518-11ea-8c18-2a8f41057ce3.png). Joint segmentation of the 100% normal and the 100% tumor yields 241 segments (up from 130 for the 100% tumor alone, as above). Using this joint segmentation for subsequent ModelSegments runs:. For the 100% normal, this yields 88 segments (up from 36):; ![N-SJS modeled](https://user-images.githubusercontent.com/11076296/76632024-ebecb300-6518-11ea-89ff-109c97970ef0.png). For the 100% tumor, this yields 166 segments (up from 130):; ![T-SJS modeled](https://user-images.githubusercontent.com/11076296/76632125-13dc1680-6519-11ea-9901-0c78809d08ba.png). I haven't performed detailed validations, but some spot checking suggests that this actually mitigate oversegmentation while still increasing sensitivity to shared events. For example, there is a small 13-bin deletion in chr19 that is found when running the 100% normal alone, but gets broken up into two adjacent deletions when running the 100% tumor alone (probably just due to statistical noise in the copy ratios). When running jointly, the deletion does not get broken up. However, as discussed over Slack, we should probably run some scenarios with simulated data to check behavior---for example, how robust is the joint segmentation to some of the samples being noisy/oversegmented?. There are lots of options for restructuring the workflow. We could potentially modify ModelSegments to take in the denoised copy ratios from the normal, when available, and add modeling of the normal and germline tagging to that tool. Or we could break things up into separate tools. @fleharty any opinions?. Note that another benefit of using this joint segmentation for germline tagging is that common breakp",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-598764477:929,validat,validations,929,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-598764477,1,['validat'],['validations']
Security,"Per discussion with @kgururaj, the proposal is to have GenomicsDB expose/document the existing protocol buffers already used internally, along with protobuf-based constructors for both GenomicsDBImporter and GenomicsDBFeatureReader.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3689#issuecomment-336962583:66,expose,expose,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3689#issuecomment-336962583,1,['expose'],['expose']
Security,"Per discussions with @fleharty, we are looking to significantly revamp the automated somatic CNV evaluations in preparation for benchmarking the TH prototype. The existing evaluations use a few unsupported/experimental tools and idiosyncratic/redundant classes (e.g., the `src/main/java/org/broadinstitute/hellbender/tools/copynumber/utils/annotatedinterval` class this issue concerns), the functionality of which we can hopefully move to python-based validation code. . The aforementioned code was purposefully decoupled from supported CNV code, but since then it has been incorporated into `Funcotator` tools and `ValidateBasicSomaticShortMutations`, at least. @jonn-smith @davidbenjamin can we discuss a plan for cleaning this code up? Would it be easy to use an existing TSV/XSV class to handle the functionality needed for these tools?. @jonn-smith perhaps we should also discuss the plan for future `FuncotateSegments` development/integration with @fleharty.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3884#issuecomment-526226506:452,validat,validation,452,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3884#issuecomment-526226506,2,"['Validat', 'validat']","['ValidateBasicSomaticShortMutations', 'validation']"
Security,Picard docs must reflect Picards command line syntax or their syntax as how it gets exposed thru GATK? I.e. ```INPUT=XXX``` or ```-I|--INPUT XXX```?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3853#issuecomment-349489906:84,expose,exposed,84,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3853#issuecomment-349489906,1,['expose'],['exposed']
Security,Please make this option hidden if it's only being kept for testing purposes (and document clearly that that is the case). Users should not have access to options that are not expected to have value.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2231#issuecomment-316842338:144,access,access,144,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2231#issuecomment-316842338,1,['access'],['access']
Security,Prefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:131); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:104); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: java.net.SocketTimeoutException: Read timed out; 	at java.net.SocketInputStream.socketRead0(Native Method); 	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116); 	at java.net.SocketInputStream.read(SocketInputStream.java:171); 	at java.net.SocketInputStream.read(SocketInputStream.java:141); 	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); 	at sun.security.ssl.InputRecord.read(InputRecord.java:503); 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); 	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:930); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:105); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704); 	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1569); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1474); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetH,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300298180:6717,secur,security,6717,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300298180,1,['secur'],['security']
Security,"Questions from developers, mainly, about things like ""my IntelliJ project is broken"" and ""GCS authentication not working"" -- you get the picture :)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3199#issuecomment-312054764:94,authenticat,authentication,94,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3199#issuecomment-312054764,1,['authenticat'],['authentication']
Security,"Rather than delaying argument validation to a second pass, I changed the sequence so the tool instantiates the descriptor and gives it the tool defaults right from the start, (and then passes the descriptor instance(s) to the arg parser) so it has all the state it needs to validate at arg parsing time. Also, I reverted the removal of the package limitation for plugins, at least temporarily, since searching through all packages looked like it slowed down the integration tests.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1973#issuecomment-232046070:30,validat,validation,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1973#issuecomment-232046070,2,['validat'],"['validate', 'validation']"
Security,"Regarding writing the SAM file, I now remember why it was created instead of using existing ones: the SV pipeline needs to be able to write to HDFS, hence cannot rely on a `File` interface&mdash;which the `ReadUtils.createCommonSAMWriter(...)` exposes. ; So the current hand rolled version in `SVFileUtils.getSAMFileWriter()` calls into `BucketUtils.createFile(...)` for that HDFS compatibility, and then makes use of the `SAMFileWriterFactory.makeBAMWriter(final SAMFileHeader header, final boolean presorted, final OutputStream stream)`, unlike `ReadUtils.createCommonSAMWriter(...)` which calls into `SAMFileWriterFactory.makeSAMOrBAMWriter(final SAMFileHeader header, final boolean presorted, final Path outputPath)`. So in short: HDFS compatibility.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3674#issuecomment-339391912:244,expose,exposes,244,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3674#issuecomment-339391912,1,['expose'],['exposes']
Security,"Returning false instead of throwing when data is missing in the `GoogleGenomicsReadToGATKReadAdapter` is misleading -- we don't know the answer to the question the client is asking in such cases, so returning false is not correct behavior. If these fields are actually missing in the underlying reads we really do want to blow up with an exception on access, as it means the read object is not usable by us (and the query that produced these incomplete objects likely needs to be modified). Could you restore the previous versions of these methods (`isSecondaryAlignment()`, `isDuplicate()`, etc.) before I review?. As for the Google read converters, could you open a separate ticket with your description of the inconsistencies so we can decide whether to submit a patch?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/871#issuecomment-136771148:351,access,access,351,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/871#issuecomment-136771148,1,['access'],['access']
Security,"Revamping the existing somatic validation pipeline needs to be done before development of the TH prototype can continue. - [ ] Identify test bed of TCGA samples from various tumor types. We can mix tumor-normal samples (as I've done at the counts/allelic-counts level in preliminary evaluations of the TH prototype) to expand the effective number of samples.; - [ ] Determine minimal version of current CGA ABSOLUTE pipeline (to be used as a baseline for comparison).; - [ ] Generate and manually curate ABSOLUTE results and narrow samples down to those with relatively robust solutions.; - [ ] Construct ModelSegments/M2 -> ABSOLUTE pipeline (will at least require minor development/tuning of ModelSegments output -> ABSOLUTE input conversion script, may also require germline tagging, see related #5804) and evaluate.; - [ ] Construct ModelSegments/M2 -> TH pipeline and evaluate.; - [ ] Remove unsupported code/tools. See https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199 for a summary. We should make sure that any users that would be affected by this are notified and prepare accordingly.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4122#issuecomment-526272699:31,validat,validation,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4122#issuecomment-526272699,1,['validat'],['validation']
Security,"Reviving this. This will essentially be a major refactor/rewrite of CreatePanelOfNormals to make it scalable enough to handle WGS. - [x] CombineReadCounts is too cumbersome for large matrices. Change CreatePanelOfNormals to take in multiple -I instead.; - [x] Rename NormalizeSomaticReadCounts to DenoiseReadCounts and require integer read counts as input. These will still be backed by a ReadCountCollection until @asmirnov239's changes are in.; - [x] Remove optional outputs (factor-normalized and beta-hats) from DenoiseReadCounts. For now, TN and PTN output will remain in the same format (log2) to maintain compatibility with downstream tools.; - [x] Maximum number of eigensamples K to retain in the PoN is specified; the smaller of this or the number of samples remaining after filtering is used. The number actually used to denoise can be specified in DenoiseReadCounts. If we are going to spend energy computing K eigensamples, there is no reason we shouldn't expose all of them in the PoN, even if we don't want to use all of them for denoising. (Also, the current SVD utility methods do not allow for specification of K < N when performing SVD on an MxN matrix, even though the backend implementations that are called do allow for this; this is terrible. In any case, randomized SVD should be much faster than the currently available implementations, even when K = N).; - [x] Rename CreatePanelOfNormals to CreateReadCountPanelOfNormals; - [x] Refer to ""targets"" as intervals. See #3246.; - [x] Remove QC.; - [x] Refer to proportional coverage as fractional coverage.; - [x] Perform optional GC-bias correction internally if annotated intervals are passed as input.; - [x] Make standardization process for panel and case samples identical. Currently, a sample mean is taken at one point in the PoN standardization process, while a sample median is taken in the case standardization process.; - [x] HDF5 PoN will store version number, all integer read counts, all/panel intervals, all/panel ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2858#issuecomment-313921687:969,expose,expose,969,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2858#issuecomment-313921687,1,['expose'],['expose']
Security,Rlci90b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `96.629% <0.000%> (+0.562%)` | :arrow_up: |; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/8048/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `79.570% <0.000%> (+1.075%)` | :arrow_up: |; | [...dinstitute/hellbender/tools/sv/SiteDepthtoBAF.java](https://codecov.io/gh/broadinstitute/gatk/pull/8048/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zdi9TaXRlRGVwdGh0b0JBRi5qYXZh) | `82.418% <0.000%> (+1.099%)` | :arrow_up: |; | [...lkers/validation/EvaluateInfoFieldConcordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/8048/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vRXZhbHVhdGVJbmZvRmllbGRDb25jb3JkYW5jZS5qYXZh) | `72.581% <0.000%> (+1.613%)` | :arrow_up: |; | [...va/org/broadinstitute/hellbender/GATKBaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/8048/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9HQVRLQmFzZVRlc3QuamF2YQ==) | `98.333% <0.000%> (+1.667%)` | :arrow_up: |; | ... and [211 more](https://codecov.io/gh/broadinstitute/gatk/pull/8048/diff?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute) | |. </details>,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8048#issuecomment-1272595315:4692,validat,validation,4692,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8048#issuecomment-1272595315,1,['validat'],['validation']
Security,"Running something like this on the outputs of the score tool from a validation shard could help determine the threshold. (This was done hastily, so excuse any errors!). Below I show the results of running with a test VCF of 50 1000G WES samples. Note that ""training"" and ""truth"" are used in the VQSR meanings, and that we derive positive labels for the validation set from their union; but one could imagine variations on this. ```; import h5py; import numpy as np; import matplotlib.pyplot as plt. annot_file = 'test.all-unlabeled.annot.hdf5'; scores_file = 'test.all-unlabeled.scores.hdf5'. with h5py.File(annot_file, 'r') as f:; is_training_n = f['/labels/training'][()].astype(bool); is_truth_n = f['/labels/truth'][()].astype(bool); ; with h5py.File(scores_file, 'r') as f:; score_n = f['/data/scores'][()]. score_sort_order_n = score_n.argsort(); sorted_score_n = score_n[score_sort_order_n]; is_positive_n = is_training_n | is_truth_n. p_n = is_positive_n[score_sort_order_n]; m_n = ~p_n. tp_n = np.cumsum(p_n[::-1])[::-1]; fn_n = np.cumsum(p_n); mp_n = np.cumsum(m_n[::-1])[::-1]. recall_n = tp_n / (tp_n + fn_n); LL_score_n = recall_n**2 / (mp_n / sum(m_n)). argmax_idx = np.argmax(LL_score_n); LL_score_max = LL_score_n[argmax_idx]; LL_score_argmax = sorted_score_n[argmax_idx]; recall_at_LL_score_argmax = recall_n[argmax_idx]. plt.plot(sorted_score_n, LL_score_n, label=f'LL score, max = {LL_score_max:.2f}, argmax = {LL_score_argmax:.2f}'); plt.plot(sorted_score_n, recall_n, label=f'recall, at LL score argmax = {recall_at_LL_score_argmax:.2f}'); plt.axvline(LL_score_argmax, c='grey'); plt.xlabel('score'); plt.legend(); plt.show(); ```. ![image](https://user-images.githubusercontent.com/11076296/158000937-79dcfc26-45c6-400f-9101-37a96087492e.png). Would be interesting to also plot e.g. F1 vs. score, where F1 is determined on a orthogonal set of positive/negative gold-standard labels (e.g., GIAB), to see how close the LL score determined on the ""training/truth"" labels gets us.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1065794594:68,validat,validation,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1065794594,2,['validat'],['validation']
Security,SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.available(AppInputStream.java:60); 	at java.io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:507); 	... 12 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(Fil,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931:7852,secur,security,7852,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931,1,['secur'],['security']
Security,SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.available(AppInputStream.java:60); 	at java.io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 47 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(Fil,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727:6146,secur,security,6146,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727,1,['secur'],['security']
Security,SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.available(AppInputStream.java:60); 	at java.io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 55 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(Fil,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138:9634,secur,security,9634,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138,1,['secur'],['security']
Security,"SamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - Initializing engine; 19:03:43.000 INFO ValidateSamFile - Done initializing engine; ERROR: Record 9762, Read name 20GAVAAXX100126:7:2:8126:115177, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 24466, Read name 20FUKAAXX100202:7:46:13035:77621, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97940, Read name 20FUKAAXX100202:5:7:21464:86224, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97955, Read name 20GAVAAXX100126:5:7:1291:122571, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 112212, Read name 20GAVAAXX100126:8:1:1429:129840, bin field of BAM record does not equal value compu",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:2008,Validat,ValidateSamFile,2008,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,"ScoreVariantAnnotations:. Scores variant calls in a VCF file based on site-level annotations using a previously trained model. TODOs:. - [x] Integration tests. Exact-match tests for (non-exhaustive) configurations given by the Cartesian product of the following options:; * Java Bayesian Gaussian Mixture Model (BGMM) backend vs. python sklearn IsolationForest backend; (BGMM tests to be added once PR for the backend goes in.); * non-allele-specific vs. allele-specific; * SNP-only vs. SNP+INDEL (for both of these options, we use trained models that contain both SNP and INDEL scorers as input) ; - [x] Tool-level docs. Minor TODOs:. - [x] Parameter-level docs.; - [x] Parameter/mode validation.; - [x] Double check or add behavior for handling previously filtered input, clearing present filters, etc. Future work:. - [ ] The `score_samples` method of the sklearn IsolationForest is single-threaded. See (possibly stalled) PR at https://github.com/scikit-learn/scikit-learn/pull/14001 and some workarounds using e.g. `multiprocessing` ibid.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948563:686,validat,validation,686,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948563,1,['validat'],['validation']
Security,"Sequence dictionary is not enough -- we actually need the reference because GenomicsDB uses that to fill in the reference base in some cases. For this reason, the reference is a required argument when reading from GenomicsDB, but as this issue outlines we probably should go one step further and validate that the intervals being queried are in the reference. We can add this to GenomicsDB but it's probably better to have a check done in GATK so that we fail fast. It is interesting though that the results seem valid...presumably having the reference base as 'N' in some cases doesn't affect it?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7751#issuecomment-1095222041:296,validat,validate,296,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7751#issuecomment-1095222041,1,['validat'],['validate']
Security,"Since @davidadamsphd has his hands full with getting the end-to-end large-scale validation tests for spark tools into a runnable state, I'm re-assigning this to @akiezun. @akiezun feel free to move this to beta if you don't think it's necessary for alpha -- if you have time, though, and run out of tickets, it might be a good use of your time.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/591#issuecomment-157525053:80,validat,validation,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/591#issuecomment-157525053,1,['validat'],['validation']
Security,"So should we expose it, or should we replace it and expose the replacement? :)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1064#issuecomment-151894230:13,expose,expose,13,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1064#issuecomment-151894230,2,['expose'],['expose']
Security,"So this seems to only happen when trying to access a bucket from a job on dataproc. For example, the following throws the error:. ./gatk-launch PathSeqFilterSpark -I gs://bucket/in.bam -O gs://bucket/out.bam -- --sparkRunner GCS --cluster my-cluster. but the following does not:; ./gatk-launch PathSeqFilterSpark -I hdfs://bams/in.bam -O hdfs://bams/out.bam -- --sparkRunner GCS --cluster my-cluster. This happens even if I launch the cluster ""gcloud dataproc clusters create ... --scope cloud-platform"", which is supposed to grant full storage permissions. I believe this is equivalent to checking the ""Allow API access to all Google Cloud Services"" box if you launch a cluster through the web console. . Also explicitly adding the service account as a ""storage legacy bucket owner"" does not seem to help.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3591#issuecomment-331002437:44,access,access,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3591#issuecomment-331002437,2,['access'],['access']
Security,"So we've had some debate over what the commands should be. Definitely still subject to change. . What's the right way to access the ; 1. help for gatk-launch itself; 2. tools list for gatk. currently `gatk-launch` displays it's own help, while `gatk-launch -help` passes through the help request to gatk which shows the tools list. I don't think `gatk-launch --help` should ONLY display the help for gatk-launch, but we could change it to display the gatk-help followed by it's own help message.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1331#issuecomment-163662974:121,access,access,121,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1331#issuecomment-163662974,1,['access'],['access']
Security,"Somatic WDLs should be up to date (they're passing on Travis, at least) and ready for running validations in the sl_wgs_segmentation branch @LeeTL1220.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2858#issuecomment-328536706:94,validat,validations,94,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2858#issuecomment-328536706,1,['validat'],['validations']
Security,"Some additional information I can add about this is that a potential solution to this problem is to remove altenate alleles and force the sites into being biallelic but this causes problems in other tools, like FastaAlternateReferenceMaker, so it's not a viable solution. . Since AD is 0-indexed and GT starts at 0, GT really seems like the best way to access the elements of the AD array. Perhaps a new feature could be added that automatically finds the called allele, like getAD().getCalledGT if giving the user access to GT is problematic for some reason. This would require getAD to accept something other than a pure number though and to my knowledge anything other than eg: getAD().1 or getAD().2 or 0, causes errors.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7448#issuecomment-909126111:353,access,access,353,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7448#issuecomment-909126111,2,['access'],['access']
Security,"Some comments/questions for the review:; - I'll add a separate ticket to rewrite the integration tests, all of which pass and most of which are disabled since they require access to large files on the broad file system. In the meantime I need to add a couple of small tests to get the coverage back up, and would like to get the CR process started.; - I ported a bunch of support files but need feedback on whether they're in the right location.; - Somewhere I saw something that said GATK no longer supports .ped files ? If not, what should the replacement be in the tests require pedigree input?; - Is it a requirement to support Ploidy > 2 ? The current GATK tool, and thus the HB tool, do not; - I did not port the WalkerTestSpec.disableShadowVCF? Is that needed in Hellbender ?; - Are there other headers I should be applying to the output variant file ?. Command Line Arguments:; - I didn't port the GATK command line argument ""-no_cmd_line_in_header"". Should I ? And if not, should the command line args automatically be propagated to the output vcf file ? I didn't see GATK do this anywhere.; - There was one test that used --variant:dbsnp on the command line but I couldn't find the code that processed that in GATK, not sure what the means on the command line.; - I replaced ""-U LENIENT_VCF_PROCESSING"" with ""--lenient"" (testFileWithoutInfoLineInHeaderWithOverride needs this to pass).; - I replaced ""-L"" with --interval since HB seems to use -L for ""lane"" ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/792#issuecomment-128798027:172,access,access,172,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/792#issuecomment-128798027,1,['access'],['access']
Security,"Some filters are implemented in the ModelSegments CreatePoN code (since these filters were directly ported from GATK CNV). Other filters were implemented as external python scripts by @mbabadi for GPC2 validation. We should extract and productionize if possible. Ideally, the tool would take several coverage files (collected over identical bins) and filtering parameters as input, and output a filtered list of bins. Downstream tools would subset the original coverage files to these bins accordingly.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2992#issuecomment-391682843:202,validat,validation,202,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2992#issuecomment-391682843,1,['validat'],['validation']
Security,"Sorry @cmnbroad, I misunderstood your comment before - what I've got is that it is ok to have beta/experimental for this, but it's obviosly not what you said, so my fault for not reading carefully. In that case, I would like to have a proposal for how to proceed here:. * I will implement the port for the tools in two independent PRs - just direct translation into the new framework, documentation and kebab-case argument style.; * The port for `RealignerTargetCreator` will be similar to this one; * The port for `IndelRealigner` would not have support for n-way output, although it will be fully functional in other ways. The n-way option can be ported in the future as an extra feature if necessary (maybe the communications team can weight in, and tell if it is really a needed feature); * For the first test, which will be removed before merging, I will use the data from the tutorial. This will be the validation for the port before test data valid for the repository is provided; * For the final tests, I will draft the class with the tests from GAKT3 without the data and disabled, waiting for @sooheelee for meaningful tests (or other people from your team). The main idea is to have two PRs with the port validated with the tutorial data, and add other tests similar to the GATK3's ones for extra validation and/or covering missing codepaths using @sooheelee or ported GATK3 data. Does it makes sense, @cmnbroad and @sooheelee?. @sooheelee - I think that the 1000G data can be a good validation if chromosomes 20/21 have realigned reads without a pair mapping on other chromosomes. In that case, some of that reads can be extracted and reset to the state previous to realignment to validate the new tool.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371728774:909,validat,validation,909,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371728774,5,['validat'],"['validate', 'validated', 'validation']"
Security,"Sorry, it's difficult for me to spot git notifications in my email. . > Maybe @bshifaw can chime in? Are the featured workspaces covered by tests elsewhere? What is the current SOP for taking workflows from this repo, turning them into featured workspaces, and populating their configurations?. Example JSONs with input test data are usually introduced in the gatk-workflows git repos and carried over to the featured workspaces. That isn't to say they are not welcomed from the gatk repo. > @bshifaw related to what Sam was saying - we also have a few standard resources needed to run the workflows that we would like to share with users. What is the standard procedure for doing so? Ideally they would be bundled with featured workspaces, but also accessible from outside of Terra. Workflow resources files that are not already in [broad-references](https://console.cloud.google.com/storage/browser/broad-references) would be saved in the [gatk-best-practices](https://console.cloud.google.com/storage/browser/gatk-best-practices) bucket. In the past i've separated the resources files per workflow directory (e.g. pathseq, cnn-hg38) but you can organize them a different way if the resources files would be shared by other workflows (e.g. somatic-hg38, somatic-b37).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6017#issuecomment-507703719:750,access,accessible,750,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6017#issuecomment-507703719,1,['access'],['accessible']
Security,"SparkGenomeReadCounts has some code to get rid of some of the non-autosomal chromosomes:. private static final Set<String> NONAUTOSOMALCONTIGS = new HashSet<>(Arrays.asList(""X"", ""Y"", ""MT"", ""M"", ""x"", ""y"",; ""m"", ""chrX"", ""chrY"", ""chrMT"", ""chrM"", ""chrm""));. protected static final String DROP_NON_AUTOSOMES_SHORT_NAME = ""keepxy"";; protected static final String DROP_NON_AUTOSOMES_LONG_NAME = ""keepXYMT"";. @Argument(doc = ""Keep X, Y, GL*, NC_*, and MT regions. If this option is not specified, these regions will be dropped, regardless of intervals specified. Use -L (or -XL) and enable this option for exact specification of intervals. This option may be removed in the future."",; fullName = DROP_NON_AUTOSOMES_LONG_NAME,; shortName = DROP_NON_AUTOSOMES_SHORT_NAME,; optional = true; ); protected boolean keepNonAutosomes = false;. This is a bit hacky, but we could expand the list to account for GRCh38 non-autosomes. (Also note that the choice of the short name for the parameter is not great...we should fix that.) @asmirnov239 the final version of your new tool should be able to handle this sort of thing more elegantly.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3357#issuecomment-317808987:149,Hash,HashSet,149,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3357#issuecomment-317808987,1,['Hash'],['HashSet']
Security,SparkSubmit.scala:210); 	at org.apache.spark.deploy.SparkSubmit$.main(SparkSubmit.scala:124); 	at org.apache.spark.deploy.SparkSubmit.main(SparkSubmit.scala); Caused by: java.io.IOException: Error reading null at position 0; 	at com.google.cloud.genomics.dataflow.readers.bam.SeekableGCSStream.openStream(SeekableGCSStream.java:126); 	at com.google.cloud.genomics.dataflow.readers.bam.SeekableGCSStream.seek(SeekableGCSStream.java:103); 	at com.google.cloud.genomics.dataflow.readers.bam.SeekableGCSStream.<init>(SeekableGCSStream.java:59); 	at com.google.cloud.genomics.dataflow.readers.bam.BAMIO.openBAMFile(BAMIO.java:67); 	at com.google.cloud.genomics.dataflow.readers.bam.BAMIO.openBAM(BAMIO.java:51); 	at org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSource.getHeader(ReadsSparkSource.java:178); 	... 20 more; Caused by: com.google.api.client.googleapis.json.GoogleJsonResponseException: 401 Unauthorized; Anonymous users does not have storage.objects.get access to object mw-pathseq-test/hs37d5cs.reads.sorted.bam.; 	at com.google.api.client.googleapis.json.GoogleJsonResponseException.from(GoogleJsonResponseException.java:146); 	at com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest.newExceptionOnError(AbstractGoogleJsonClientRequest.java:113); 	at com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest.newExceptionOnError(AbstractGoogleJsonClientRequest.java:40); 	at com.google.api.client.googleapis.services.AbstractGoogleClientRequest$1.interceptResponse(AbstractGoogleClientRequest.java:321); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1056); 	at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); 	at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); 	at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeMedia(,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2394#issuecomment-277823929:9835,access,access,9835,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2394#issuecomment-277823929,1,['access'],['access']
Security,"Status update: the new qual is finished, backported, and validated in both GATK4 and the backport. In a validation of a subset of ExAC data (many samples) and 1kg data (low coverage) it finds all variants found with the old qual and saves many manifestly true multiallelics. I'm going to close this and open a new issue to delete the old qual.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1697#issuecomment-258151931:57,validat,validated,57,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1697#issuecomment-258151931,2,['validat'],"['validated', 'validation']"
Security,"Step #1: Port as much of `SequenceDictionaryUtils` as needed from the old GATK (remove garbage like validation exclusions, fix terrible things like non-canonical human order check if possible, if not create tickets). Port unit tests as well. Step #2: Hook up sequence dictionary validation to hellbender engine, and add integration tests to prove that dictionary incompatibilities are detected. Best place to hook this up is probably `GATKTool.onStartup()`, since it manages all the engine-level inputs for tools.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/101#issuecomment-113275417:100,validat,validation,100,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/101#issuecomment-113275417,2,['validat'],['validation']
Security,Stream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:507); 	... 12 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.client.util.ByteStreams.copy(ByteStreams.java:51); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:94); 	... 15 more; Caused by: java.net.SocketException: Connection reset; 	at java.net.SocketInputStream.read(SocketInputStream.java:210); 	at java.net.SocketInput,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931:8202,secur,security,8202,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931,1,['secur'],['security']
Security,Stream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 47 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.client.util.ByteStreams.copy(ByteStreams.java:51); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:94); 	... 50 more; Caused by: java.net.SocketException: Connection reset; 	at java.net.SocketInputStream.read(SocketInputStream.java:210); 	at java.net.SocketInput,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727:6496,secur,security,6496,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727,1,['secur'],['security']
Security,Stream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 55 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.client.util.ByteStreams.copy(ByteStreams.java:51); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:94); 	... 58 more; Caused by: java.net.SocketException: Connection reset; 	at java.net.SocketInputStream.read(SocketInputStream.java:209); 	at java.net.SocketInput,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138:9984,secur,security,9984,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138,1,['secur'],['security']
Security,"Sure, it's a fair point that we could write this genotype-compare operation as a standalone tool. It's convenient to make it work via VariantAnnotator so that we can do it concurrently with other annotation tasks, instead of needed two passes through the VCF. I primarily ask b/c this is a downgrade from GATK3, where the equivalent of FeatureContext was passed. . Would it be reasonable for the FeatureManager to somehow get exposed? In my example I am calling FeatureContext.getValues() without supplying an interval, but I certainly could (and maybe should). If one supplies a specific query interval, the Feautrecontext isnt doing much other than providing an abstraction between FeatureManager, and the boundaries set on Featurecontext (which i agree are tricky to figure out in some cases) dont really matter.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6930#issuecomment-754256795:426,expose,exposed,426,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6930#issuecomment-754256795,1,['expose'],['exposed']
Security,"TCGA SNP validation looks about the same on WES---perhaps a slight tradeoff of sensitivity for specificity at the 0.1% level, but nothing to write home about. WGS validations are still running due to the (intermittent?) NIO failures discussed elsewhere.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5575#issuecomment-454570347:9,validat,validation,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5575#issuecomment-454570347,2,['validat'],"['validation', 'validations']"
Security,"Testing updated branch with improved messaging.; ```; WMCF9-CB5:shlee$ ./gatk LeftAlignAndTrimVariants -R ~/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V ~/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz -O zeta_snippet_leftalign_96branch.vcf.gz; Using GATK wrapper script /Users/shlee/Documents/branches/hellbender/build/install/gatk/bin/gatk; Running:; /Users/shlee/Documents/branches/hellbender/build/install/gatk/bin/gatk LeftAlignAndTrimVariants -R /Users/shlee/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V /Users/shlee/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz -O zeta_snippet_leftalign_96branch.vcf.gz; 12:55:31.964 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/shlee/Documents/branches/hellbender/build/install/gatk/lib/gkl-0.8.5.jar!/com/intel/gkl/native/libgkl_compression.dylib; Sep 06, 2018 12:55:32 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 12:55:32.083 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 12:55:32.083 INFO LeftAlignAndTrimVariants - The Genome Analysis Toolkit (GATK) v4.0.8.1-25-g0c6f06f-SNAPSHOT; 12:55:32.083 INFO LeftAlignAndTrimVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:55:32.083 INFO LeftAlignAndTrimVariants - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:55:32.083 INFO LeftAlignAndTrimVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:55:32.083 INFO LeftAlignAndTrimVariants - Start Date/Time: September 6",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-419190326:1001,authenticat,authenticated,1001,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-419190326,1,['authenticat'],['authenticated']
Security,"Thank you @SHuang-Broad. The error was gone after I copied bwaindeximage file to lustre file system, which can be accessed by all worker nodes.; The new problem is: the program started but didn't give any informative message/progress (see log below). It was stopped (Ctl-C) after 16 hours. The sequence data is regular human exome, which could be mapped in 1-2 hours in our traditional pipeline. ```; ../gatk/gatk-launch BwaAndMarkDuplicatesPipelineSpark ; -I hdfs://ln16/user/myname/NA12878/wes/NA12878-NGv3-LAB1360-A.unaligned.bam ; -O hdfs://ln16/user/myname/gatk4test/BwaAndMarkDuplicatesPipelineSpark_out.bam ; -R hdfs://ln16/user/myname/genomes/Hsapiens/GRCh37/seq/GRCh37.2bit ; --bwamemIndexImage /TEST/hadoop/myname/GRCh37.fa.img ; --disableSequenceDictionaryValidation ; -- --sparkRunner SPARK ; --sparkMaster spark://ln16:7077 ; --conf spark.cores.max=720 ; --executor-cores 20 ; --executor-memory 50g ; --conf spark.driver.memory=50g; Using GATK jar /home/myname/gatk4/gatk/build/libs/gatk-package-4.alpha.2-1125-g27b5190-SNAPSHOT-spark.jar; Running:; /opt/spark-2.1.0-bin-hadoop2.7/bin/spark-submit --master spark://ln16:7077 --conf spark.driver.userClassPathFirst=true --conf spark.io.compression.codec=lzf --conf spark.driver.maxResultSize=0 --conf spark.executor.extraJavaOption; s=-DGATK_STACKTRACE_ON_USER_EXCEPTION=true -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=false -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=1 -Dsnappy.disable=true --conf spark.driver.extraJavaOptions=-DGATK_STACKTRACE_ON_USER_EXCEPTION=true -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=false -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=1 -Dsnappy.di$able=true --conf spark.kryoserializer.buffer.max=512m --conf spark.yarn.executor.memoryOverhead=600 --conf spark.cores.max=720 --executor-cores 20 --executor-memory 50g --conf spark.driver.memory=50g /home/myname/gatk4/gatk$build/libs/gatk",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3186#issuecomment-312229998:114,access,accessed,114,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3186#issuecomment-312229998,1,['access'],['accessed']
Security,Thank you @jamesemery! As a first pass at the integration tests we should make sure that the output files actually validate with Picard's ValidateSamFile tool. I can help with that if you have the files. Also we should look at some of the output manually. Can you point me to a location that has the new output files?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2021#issuecomment-233786535:115,validat,validate,115,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2021#issuecomment-233786535,2,"['Validat', 'validat']","['ValidateSamFile', 'validate']"
Security,"Thank you @kshakir. What I see there is that the code sets the default NIO option, and as part of this is creates a google cloud `StorageOptions` object. Sadly for us, when this object is created it determines which Google credentials to use, and if nothing was specified by the user it will send some network messages to try to figure out whether it's running on a Google Compute Engine machine. When we wrote the default-setting code we didn't realize that setting the number of retries was going to cause a network message to be sent, with the associated potential retries and delays. We can't change the way Google Compute Engine works, or how the Google authentication works either. Ideally we'd want some way to only search for credentials when we know NIO is going to be used. The point of these defaults is that they're used for anything that uses NIO, including third-party library code. We can't fully replicate this behavior in a different way from the outside. So I think the ""correct"" fix would be to go deep inside the Google NIO library and change it so that instead of providing a default configuration (that the user would have to put together, causing the problem you've seen), we can provide a *callback* that sets the configuration when the Google Cloud NIO provider is loaded. This is harder for future developers to wrap their heads around, but at least it would prevent this delay if NIO is not used. I'd like to think about this some more before doing something quite this drastic, though.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3491#issuecomment-443837504:659,authenticat,authentication,659,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3491#issuecomment-443837504,1,['authenticat'],['authentication']
Security,"Thank you @vruano for your diligent review. I've implemented logger classes to encapsulate the metrics classes. Unfortunately the metrics classes must remain public in order to write output using `MetricsUtils.saveMetrics()`, but at least the tools aren't using them directly. There are two logging class groups - one for Filter and one Score. For Filter, there is an interface `PSFilterLogger` that is implemented by a file-logging class `PSFilterFileLogger` and a dummy class `PSFilterEmptyLogger` that does nothing. There are analogous classes for Score, but there is no Empty logger because it's not actually necessary. This adds a lot of new classes (maybe you can think of a better way) but usage has been greatly simplified. As we discussed in person, I don't think there is a faster way to count the reads in Spark. If you wanted to count the reads as they pass through, you would have to use some kind of atomic type that would be slow. Also it may be impossible to account for cases when tasks fail and restart. @lbergelson @droazen In this PR, I wanted to use htsjdk's MetricsFile and MetricBase classes for writing metrics to a file. I notice that these classes are mostly used for picard-related things. Is this the preferred way to do things? They do force you to expose public variables and also use an upper-case naming convention. On the other hand, they are somewhat convenient.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3611#issuecomment-334308160:1278,expose,expose,1278,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3611#issuecomment-334308160,1,['expose'],['expose']
Security,"Thank you for explaining this – I’m glad to hear it won’t take extra effort for my commits – I don’t want to cause extra work for you folks. I’ve re-based and pushed the changes. Please let me know if there are other commits on the trunk before you get to it and I’ll do it again. From: Louis Bergelson ; Sent: Friday, May 01, 2015 3:40 PM; To: broadinstitute/hellbender ; Cc: nenewell ; Subject: Re: [hellbender] #259 - replace calls to getChr() with getContig(). (#478). It shouldn't take any extra work to merge most external requests once things are setup properly. The issue is that certain dataflow operations a key/password to access our google account and we can't publish those as part of the repo, so we use travis.ci's encrypt mechanism to make them available to the build without making them public. On external pull requests, travis doesn't make the keys available, because it would possible to access them with a malicious pull request. . Currently the things that rely on authentication aren't running anyway in travis, but the key was still being decrypted and failing on external requests I've removed that step for now, and will be more careful to ensure that builds will continue even if the key is missing when we re-enable it. —; Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/478#issuecomment-98260330:622,password,password,622,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/478#issuecomment-98260330,5,"['access', 'authenticat', 'encrypt', 'password']","['access', 'authentication', 'encrypt', 'password']"
Security,Thanks @droazen! What data are you using to test the 2D model? And can we have access to your verification method?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1230344708:79,access,access,79,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1230344708,1,['access'],['access']
Security,Thanks @jamesemery . The issue seems to be solved on my end. Sorry but this was my misunderstanding of the improvements made to the tool itself. . https://gatk.broadinstitute.org/hc/en-us/community/posts/1260803956870-SplitNCigarReads-does-not-seem-to-split-reads-properly-as-it-was-before-3-8-1-?page=1#community_comment_4402553149467. BTW the bam file created after splitting by 4.2.0.0 is still not validated thoroughly by ValidateSamFile. Split Bam file needs its new NM MD and UQ tags regenerated by picard. . So I am closing the issue.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7323#issuecomment-865338591:402,validat,validated,402,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7323#issuecomment-865338591,2,"['Validat', 'validat']","['ValidateSamFile', 'validated']"
Security,"Thanks @ldgauthier! I think this is what you're asking for:. ```; # gVCF without --max-mnp-distance; chr4 5743509 . C T,<NON_REF> 5888.77 . DP=135;ExcessHet=3.0103;MLEAC=2,0;MLEAF=1.00,0.00;RAW_MQandDP=486000,135 GT:AD:DP:GQ:PGT:PID:PL:PS:SB 1|1:0,135,0:135:99:0|1:5743509_C_T:5917,406,0,5917,406,5917:5743509:0,0,0,135; chr4 5743512 . T C,<NON_REF> 2745.77 . BaseQRankSum=-1.002;DP=131;ExcessHet=3.0103;MLEAC=1,0;MLEAF=0.500,0.00;MQRankSum=0.000;RAW_MQandDP=471600,131;ReadPosRankSum=2.613 GT:AD:DP:GQ:PGT:PID:PL:PS:SB 0|1:57,74,0:131:99:0|1:5743509_C_T:2774,0,2060,2945,2283,5228:5743509:0,57,0,74. # gVCF with --max-mnp-distance 5; chr4 5743509 . CTAT TTAC,TTAT,<NON_REF> 5485.73 . DP=136;ExcessHet=3.0103;MLEAC=1,1,0;MLEAF=0.500,0.500,0.00;RAW_MQandDP=489600,136 GT:AD:DP:GQ:PL:SB 1/2:0,74,56,0:130:99:5523,2213,2060,3016,0,2774,5388,2261,2994,5376:0,0,0,130; ```. I should also be able to share the BAM later today - I just need to sanitize it a little before sharing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5698#issuecomment-466160716:937,sanitiz,sanitize,937,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5698#issuecomment-466160716,1,['sanitiz'],['sanitize']
Security,"Thanks @vidprijatelj. I see the [sticky bit](https://www.redhat.com/sysadmin/suid-sgid-sticky-bit) being used for groups for the workspace - `# flags: -s-`. That, by itself, seems to be OK, that is I am not able to reproduce the issue. But it looks like std::vector is not able to resize - `Caused by: java.io.IOException: GenomicsDB JNI Error: vector::_M_default_append`. What are the permissions to your tmp directory? Does it also have the sticky bit set? Even if the workspace only requires read permissions, GenomicsDB and probably the underlying standard C++ runtime may require write access to tmp and the sticky bit may be affecting the execution. . Also, can you please confirm that the user creating the workspace and the user reading from the workspace are the same?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8233#issuecomment-1476526522:591,access,access,591,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8233#issuecomment-1476526522,1,['access'],['access']
Security,"Thanks JP! We do have an argument to control the number of simultaneous GCS readers in the tool in question. However, even setting it to a low value is triggering the throttling, since we're running about 10,000 ways parallel, and each job is accessing the same set of files. We can currently only control the number of simultaneous readers within each of the 10,000 individual jobs, not across all jobs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3072#issuecomment-307444524:243,access,accessing,243,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3072#issuecomment-307444524,1,['access'],['accessing']
Security,"Thanks a lot @davidbenjamin! One of the questions that I have is how to add a new read to the `ReadLikelihoods` for a new allele that is found while iterating. A very simple example will be:. ``` java; public static PerReadAlleleLikelihoodMap flatPerReadAlleleLikelihoodsFromPileup(final ReadPileup pileup, final Allele refAllele) {; final PerReadAlleleLikelihoodMap pralm = new PerReadAlleleLikelihoodMap();; final byte ref = refAllele.getBases()[0];; for (final PileupElement e : pileup) {; final Allele current;; if (e.isDeletion()) {; current = Allele.SPAN_DEL;; } else if (e.getBase() == ref) {; current = refAllele;; } else {; current = Allele.create(e.getBase());; }; pralm.add(e, current, DEFAULT_FAKE_LIKELIHOOD);; }; return pralm;; }; ```. The solution that I found after looking at the class was this one, that it's very complicated:. ``` java; public static ReadLikelihoods<Allele> flatPerReadAlleleLikelihoodsFromPileup(final ReadPileup pileup, final Allele refAllele, final SAMFileHeader header) {; final Set<Allele> alleleSet = new TreeSet<Allele>();; final Map<String, List<GATKRead>> reads = new HashMap<>();; final byte ref = refAllele.getBases()[0];; alleleSet.add(refAllele);; for (final PileupElement e : pileup) {; if (e.isDeletion()) {; alleleSet.add(Allele.SPAN_DEL);; } else if (e.getBase() == ref) {; alleleSet.add(refAllele);; } else {; alleleSet.add(Allele.create(e.getBase()));; }; final String sample = ReadUtils.getSampleName(e.getRead(), header);; List<GATKRead> list = reads.getOrDefault(sample, null);; if(list == null) {; list = new ArrayList<>();; reads.put(sample, list);; }; list.add(e.getRead());; }; final ReadLikelihoods<Allele> likelihoods = new ReadLikelihoods<>(new IndexedSampleList(reads.keySet()), new IndexedAlleleList<Allele>(alleleSet), reads);; for(final PileupElement e: pileup) {; final String sample = ReadUtils.getSampleName(e.getRead(), header);; final LikelihoodMatrix<Allele> l = likelihoods.sampleMatrix(likelihoods.indexOfSample(sample));; f",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2185#issuecomment-249930107:1113,Hash,HashMap,1113,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2185#issuecomment-249930107,1,['Hash'],['HashMap']
Security,"Thanks a lot for looking into this @sooheelee - I understand the pain of making the small data for the tests, so I really appreciate your work there. I have almost prepare a PR for the new port of `RealignerTargetCreator` that will have TODOs for the test data prepared by you, and with some tests using files already in the repository (for the target-creator, I guess that the validation for getting the regions to realign would be enough, because thanks to that tests I realized of a small bug due to not including all the loci in the `LocusWalker`). On the other hand, I will still fight for the `--nWayOut` not blocking the inclusion of `IndelRealigner` in the first place. My reasons are the following:; ; 1. Looking a bit into the code of GATK3, there is a lot of complication to get the reader ID for each read. It will require to modify the `GATKRead` interface, the data source for reads, or find an *ad hoc* solution on `IndelRealignment` to set the procedence of the read. This requires going into the engine-level code, which in my experience is difficult to port from GATK3 and also slow on the reviewing/acceptance process.; 1. My idea for developing a new writer of general use as the n-way output (which can be used in other tools as well) is to factor out some code from `SplitReads` to have a custom `GATKReadWriter` for arbitrary splitting. i'm already using a similar solution on `ReadTools`, so backporting the code to GATK might be a solution. Nevertheless, this still requires that the `GATKRead` has somehow the identity store at the object level, which requires to address point 1.; 1. The use case of the tumor-normal pair can be resolved by an extra processing step (split by read group). I understand that it is quite convenient to add this argument, but I would suggest that until it can be develop.; 1. Last, bu quite important for me as a developer, I don't have time to spend looking at that engine-level features required to include that argument. I would definitely u",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-373376231:378,validat,validation,378,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-373376231,1,['validat'],['validation']
Security,"Thanks a lot, @ddrichel. Given that the current Mutect2 release is still broken on both tumor-normal and tumor-only WES data, and downgrade is not possible on production systems due to the log4j vulnerability: is there any path forward for users that care for both accuracy and security, @davidbenjamin and @droazen ?. I fear waiting for Mutect3 isn't an option since even when it is finished there won't be independent benchmarks available for it for quite a while. Also, I suspect (as any other software product) the new version will have bugs, too, until it has matured in production. Therefore I'd suggest that identifying, understanding and fixing the bug in the current Mutect2 release would be the wisest path forward - do you agree?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7921#issuecomment-1534464682:278,secur,security,278,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7921#issuecomment-1534464682,1,['secur'],['security']
Security,"Thanks for adding this! Let me discuss further with @mwalker174 to understand the need and typical use cases (e.g., combining fixed-grid bins) to make sure we don't run into any gotchas downstream. I'll try to review by EOD, but in the meantime, you might want to address a few issues I see at first glance:. 1) Correct the name of the tool (PreprocessIntervals) in the commit message and description.; 2) Add descriptions of the new parameters to the tool Javadoc.; 3) Amend the corresponding WDL task and expose the new parameters in all relevant germline and somatic WDLs.; 4) We should be sure to update the relevant documentation for all germline and somatic WDLs, which emphasizes how PreprocessIntervals should be run differently for WES and WGS, if we plan on changing the default behavior of the tool in the future.; 5) Tests are failing due to a compilation warning about a redundant cast to int.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5701#issuecomment-465978387:507,expose,expose,507,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5701#issuecomment-465978387,1,['expose'],['expose']
Security,"Thanks for making this change! I might include more detail with the note (""Substantially improves results on FFPE samples""), for posterity---it's probably true, but we can't really say anything definitive with only N=1 and without the cross-validation procedure I mentioned on Slack. That is, the higher degree of denoising might just be an artifact of effectively removing more PCs with GC-bias correction (since I'm assuming the same number of PCs were explicitly removed in both cases), but it's possible that removing the optimal number of PCs without GC-bias correction could achieve a better result. Since our correction procedure is relatively naive, there may also be some dependence on bin size. However, I think it's probably not worth a detailed analysis, and that it's generally safe to enable correction by default.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5966#issuecomment-496933928:241,validat,validation,241,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5966#issuecomment-496933928,1,['validat'],['validation']
Security,"Thanks for the additional info! To clarify, though, was any validation done on the GVCF outputs themselves to check concordance vs. GATK3? If not, can I suggest that we do such a validation? Being able to say that we have 856 validated runs of the GATK4 HC on exome data would greatly bolster the case for including it in the new exome pipeline.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4614#issuecomment-380785661:60,validat,validation,60,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4614#issuecomment-380785661,3,['validat'],"['validated', 'validation']"
Security,"Thanks for the clarification @magicDGS. What I have are 1000 Genomes Project BAMs, which were preprocessed by the 1000 Genomes Project. The BAMs are aligned to GRCh38 and have undergone indel realignment (GATK3), so they represent a state of preprocessing against which we can validate the new indel realignment. If some representation of indels in such a BAM is sufficient as a truthset, then I can make this VCF. These samples, being from the 1000 Genomes Project, are well-analyzed and their indels will be represented in dbSNP and gnomAD resources. Of course, the test data will have been re-mapped with BWA and be without any trace of indel realignment. We should probably get someone familiar with the test suite to weigh in on the scope of the validation.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371519632:277,validat,validate,277,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371519632,2,['validat'],"['validate', 'validation']"
Security,"Thanks for the heads up @lbergelson! I'm looking at this now; we'd added stricter validation of the strand argument in the `ReferenceRegion` constructor recently, so this should be a fairly straightforward fix.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4044#issuecomment-356024413:82,validat,validation,82,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4044#issuecomment-356024413,1,['validat'],['validation']
Security,"Thanks for the suggestion @fnothaft. Unfortunately, switching to Scala 2.11 didn't help as I still get a compile error due to the logging change in Spark 2:. ```; /Users/tom/workspace/gatk/src/main/java/org/broadinstitute/hellbender/utils/read/GATKReadToBDGAlignmentRecordConverter.java:38: error: cannot access Logging; return converter.convert(gatkRead.convertToSAMRecord(header), dict, readGroups);; ```. I get that with `org.bdgenomics.adam:adam-core_2.11:0.19.0` too.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2073#issuecomment-241995596:305,access,access,305,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2073#issuecomment-241995596,1,['access'],['access']
Security,"Thanks for the suggestion @taytayp! We could also just go ahead and expose this in PlotDenoisedCopyRatios as well and only output a single plot there. I think it would be best to expose ylim parameters set to the current range by default (to preserve current behavior and so that comparison across samples remains easy), but perhaps we can consider a flag that plots the entire range. Perhaps we can also address things like #5748 at the same time.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6391#issuecomment-576688903:68,expose,expose,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6391#issuecomment-576688903,2,['expose'],['expose']
Security,"Thanks for these suggestions, @sooheelee. Note that there's already an issue filed to add `@PG` tags at https://github.com/broadinstitute/gatk/issues/4117. As for the `@RG` tag, I was following the example of the SV team, which I saw introduced a custom RG ID (although this may only be used for tagging intermediate files---not sure?) Although not ideal, I think passing the sequence dictionary and sample name in this way allows us to reuse the relevant SAM header code and also prevents the possibility of users mixing up samples. (Recall that the old pipeline required the sample name to be passed in as a separate input to each tool and that no validation that each input came from the same sample was performed.). As for VCF output, we are also planning to add this to the ModelSegments pipeline (it is already in the gCNV pipeline). See https://github.com/broadinstitute/gatk/issues/4114. However, I think it makes sense for this to wait until the improved caller is in. I'll close this as a dupe for now, but we'll be able to reference your comments here from those issues in the future.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4481#issuecomment-369986160:650,validat,validation,650,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4481#issuecomment-369986160,1,['validat'],['validation']
Security,"Thanks for this pull request. It's failing at the moment because it's coming from an external pull request and travis doesn't decrypt secret keys for external pulls (for good security reasons.) It means I have to do a bit of work before this will successfully pass though. Looks good though :). The idea of removing `Feature` would correctly stop the warnings. `Feature` is actually used as a marker interface for identifying things that our input parsing system can read. So we can't just remove it and replace with `Locatable`. They're different conceptually even if they have basically the same methods. For now we can suppress those warnings, and we'll remove the methods once they are removed from htsjkd, or if that is difficult to pull of, we'll convert it to a default method once htsjdk switches to java 8.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/478#issuecomment-97956594:175,secur,security,175,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/478#issuecomment-97956594,1,['secur'],['security']
Security,"Thanks for your response @droazen -- just tried it and it still does not work for me. I am able to access the bucket fine via gsutil -u {project} as expected. I wonder if this is some GCP issue because I am also unable to get Cromwell to pull down files from requester pays (via Terra, so this should be handled in theory), an issue that a colleague also has once I asked her to run this command on a different r/p bucket using her billing project and account. Also, for a different project and bucket the usual workflow I have to get Hail to read from r/p buckets seems to not work with this same error. Very confused. EDIT: https://support.terra.bio/hc/en-us/articles/4447388269851 seems to provide the most parsimonious explanation:; ```; It was determined that Google tweaked an error message causing Cromwell not to recognize buckets as requestor pays.; ```. Wonder if something similar is going on with GATK?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6179#issuecomment-1048028114:99,access,access,99,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6179#issuecomment-1048028114,1,['access'],['access']
Security,"Thanks very much for your analysis. Job 4 does create a lot of garbage, but that appears to be inevitable whenever you are dealing with a PairRDD: You have to use a Tuple2 to represent key and value rather than using a more memory-conservative custom data object. You end up with a gazillion tiny objects that survive only during the shuffle. Too bad they didn't base PairRDD on an interface like Map.Entry. Also too bad that you cannot force a shuffle on a (plain old, non-Pair) RDD. Why not just treat it as a key-only structure and allow repartitioning? I mention this not merely to whine, but also in the faint hope that you've developed some helpful workarounds. I don't think we have enough memory to persist the reads, but we can revisit that later. Job 5 *is* doing a lot of computation. It's turning each read into kmers and testing each of those kmers to see if they exist in a large hash table. I don't think there's much opportunity for further optimization -- I knew this would be a bottleneck and tried my best to make the code efficient. The skew in task size is definitely a problem, and I'll be looking for opportunities to address that issue. Thanks again.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2458#issuecomment-292230002:894,hash,hash,894,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2458#issuecomment-292230002,1,['hash'],['hash']
Security,"Thanks very much, that is helpful. From: Louis Bergelson ; Sent: Wednesday, June 17, 2015 10:42 AM; To: broadinstitute/hellbender ; Cc: nenewell ; Subject: Re: [hellbender] Validate all existing test BAMs (#569). @nenewell If that's helpful feel free to make use of it, if it isn't feel free to discard it. —; Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/569#issuecomment-112855744:173,Validat,Validate,173,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/569#issuecomment-112855744,1,['Validat'],['Validate']
Security,"Thanks, @gokalpcelik! That's unfortunate that the packages are no longer accessible. However, this old version of the environment was also somewhat problematic in that it included build strings, installed many packages using pip instead of conda, and was otherwise overly restrictive, see e.g. https://gatk.broadinstitute.org/hc/en-us/community/posts/360061666671-Broken-conda-env-create-n-gatk-f-gatkcondaenv-yml. I would suggest, in the following order:. 1) Users upgrade to more recent versions of GATK; 2) Users use the 4.1.0.0 Docker; 3) Users edit the 4.1.0.0 environment to be less restrictive. For example, using Ubuntu 20.04.2 + conda 23.10.0, I was able to build something that is probably sufficiently close to the 4.1.0.0 conda environment by making the following changes:. ``` <- certifi=2016.2.28=py36_0; < - openssl=1.0.2l=0; < - pip=9.0.1=py36_1; < - python=3.6.2=0; < - readline=6.2=2; < - setuptools=36.4.0=py36_1; < - sqlite=3.13.0=0; < - tk=8.5.18=0; < - wheel=0.29.0=py36_0; < - xz=5.2.3=0; < - zlib=1.2.11=0; ---; > - openssl=1.0.2l; > - pip=9.0.1; > - python=3.6.2; > - setuptools=36.5.0; > - wheel=0.29.0; > - xz=5.2.3; > - zlib=1.2.11 ; ```. There is some clobbering that happens with the pip installs, but nothing major. Note that I cannot guarantee that this environment exactly reproduces results generated with the Docker (and it's possible that there might be a more minimal fix), but it's perhaps a starting point for those users that cannot go with the other (highly preferred) options.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8504#issuecomment-1852138745:73,access,accessible,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8504#issuecomment-1852138745,1,['access'],['accessible']
Security,"Thanks, @vruano, but I think you'll have to give me access to the FC workspace and bucket. I've opened a branch sl_revert_glob that I think will fix the issue. I'll test it out on FC and let you know how it goes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424415630:52,access,access,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424415630,1,['access'],['access']
Security,"Thanks, JP!; Yes, you understood right. I did not change anything. It was only different days. The probability that the same bucket could have been accessed by multiple jobs/projects totally makes sense. I will try lowering the number of scattered tasks and see if it works.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5631#issuecomment-526274700:148,access,accessed,148,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5631#issuecomment-526274700,1,['access'],['accessed']
Security,"Thanks, this largely worked. However, would it be possible to also get the contents as validationDataLocation, which is . /humgen/gsa-hpprojects/GATK/data/Validation_Data/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-366140406:87,validat,validationDataLocation,87,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-366140406,1,['validat'],['validationDataLocation']
Security,"Thanks, we have access now. I'm pretty sure that sl_revert_glob will fix the error. I've rebased my dev branch sl_filter (which includes the filtering steps Jack mentioned in the BSV meeting today) onto sl_revert and am testing cohort mode on FC now. I'll try to test scattered-case mode as well later today if that succeeds. As @asmirnov239 pointed out to me, this revert leaves #4397 unresolved, so we should go back and clean up at some point. However, our priority now is to get a stable v1 of the SFARI evaluation on FC.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424436535:16,access,access,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424436535,1,['access'],['access']
Security,"Thanx for feedback. I obviously don’t know much if anything about the underlying logic but; have had enough experience to look in unusual places. Have a good weekend. RDB. On Fri, Nov 1, 2019 at 4:24 PM JP Martin <notifications@github.com> wrote:. > @rdbremel <https://github.com/rdbremel> for ""mystery 1"" see issue #5447; > <https://github.com/broadinstitute/gatk/issues/5447>. This should be an; > innocuous warning that it can't initialize the Google Cloud Storage code; > and shouldn't cause a failure unless you try to access paths that start; > with ""gs://"". Going through the Cloud initialization steps described in the; > README should remove the warning (though again, this isn't required if you; > don't need to read files from the cloud).; >; > Mystery 2: For what it's worth, ""GC overhead limit exceeded"" indicates; > that the VM was spending too much time in GC. Running low on memory is a; > possible cause but generating too many small objects or being stuck in an; > infinite loop of allocation/deallocation are others. In the past these have; > been caused by inputs that were malformed in some way. This isn't the place; > for this discussion though, please file a separate issue since it's a; > separate bug.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/6182?email_source=notifications&email_token=ANCR2VHWQ6XDSUQ6KEGISFDQRSM7TA5CNFSM4I2MRFQKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEC4GNZY#issuecomment-548955879>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ANCR2VEC5ARUEQRTEDGJ3TDQRSM7TANCNFSM4I2MRFQA>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6182#issuecomment-548989454:524,access,access,524,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6182#issuecomment-548989454,1,['access'],['access']
Security,"That should work for both my cases. It could be nice for SelectVariants to; be able to specify whether genotypes should be called or not too. Other; tools might want the sites-only option. On Mon, Mar 4, 2019 at 12:40 PM droazen <notifications@github.com> wrote:. > *@droazen* commented on this pull request.; > ------------------------------; >; > In; > src/main/java/org/broadinstitute/hellbender/tools/genomicsdb/GenomicsDBUtils.java; > <https://github.com/broadinstitute/gatk/pull/4947#discussion_r262167602>:; >; > > @@ -40,7 +40,7 @@; > */; > public static GenomicsDBExportConfiguration.ExportConfiguration createExportConfiguration(final File reference, final String workspace,; > final String callsetJson, final String vidmapJson,; > - final String vcfHeader) {; > + final String vcfHeader, final boolean doGnarlyGenotyping) {; >; > @lbergelson <https://github.com/lbergelson> @ldgauthier; > <https://github.com/ldgauthier> If tools had a way to inject custom GDB; > config (eg., via an overridable method in GATKTool), and the engine used; > this config when creating the Feature Manager on startup, would that solve; > the problem here?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/4947#discussion_r262167602>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdOOjGpZBu39mqk7jekA7iOzWDTFrks5vTVqFgaJpZM4U4KK0>; > .; >. -- ; Laura Doyle Gauthier, Ph.D.; Associate Director, Germline Methods; Data Sciences Platform; gauthier@broadinstitute.org; Broad Institute of MIT & Harvard; 320 Charles St.; Cambridge MA 0214",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4947#issuecomment-469412816:954,inject,inject,954,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4947#issuecomment-469412816,1,['inject'],['inject']
Security,"The BAM file is partitioned into chunks (called partitions) by Spark. The section of code that is failing is attempting to calculate the median number of bases covered in each partition. It calculates the number of bases covered for each partition, sorts the list, and grabs the middle entry. The code is not very defensive, and sadly, this number is 0 for your BAM. This could be because there are no partitions (I don't know why this might be), or because more than half of the partitions cover no bases (if, e.g., there are no mapped reads in the partition). Do you have a BAM that runs properly in the tool? You could try the Picard tool ValidateBAM or some tool that gathers mapping statistics (maybe samtools?) and compare the statistics on the good BAM as well as on the failing BAM. Maybe you'll spot some glaring distinction. The failing BAM is aligned and coordinate sorted, right? And the majority of the reads are mapped?. Is it a tiny BAM? Maybe we're creating too many partitions and most of them are empty?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7710#issuecomment-1065282915:642,Validat,ValidateBAM,642,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7710#issuecomment-1065282915,1,['Validat'],['ValidateBAM']
Security,"The Google Cloud web UI allows you to create ""directories"". When you press that button, it creates a file with a trailing slash, and the web UI interprets it as a directory even though it's a file. This causes no end of trouble because now every other program in the world that accesses cloud storage must be updated to adopt this ""convention"" or they'll see files where the user doesn't expect them. My guess would be that's what's going on here. That said, NIO *should* understand what these things are and ignore them. The [current workaround](https://github.com/googleapis/google-cloud-java/pull/4304) is to consider 0-byte files as potentially being fake directories. @cwhelan I cannot access the file `gs://broad-dsde-methods-shuang/pb/bams/NA12892/` but if you can, could you please check its size for me? I mean the file specifically. If it's nonzero that would explain the problem. If it's zero or nonexistent then we'll need to dig some more to understand what's going on.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5935#issuecomment-492450635:278,access,accesses,278,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5935#issuecomment-492450635,2,['access'],"['access', 'accesses']"
Security,"The WGS validations that have completed so far look fine, though. Changes at the 0.1% level, mostly improvements, but nothing appears to be obviously broken. Should still run some of the other validations to be sure, but let's get this in for 4.1.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5575#issuecomment-454581846:8,validat,validations,8,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5575#issuecomment-454581846,2,['validat'],['validations']
Security,"The [rules for requester pays](https://cloud.google.com/storage/docs/requester-pays#requirements) now specify two conditions under which the bucket may be accessed:. 1. userProject is specified (this is what `--gcs-project-for-requester-pays` does), or. 2. The requester has `resourcemanager.projects.createBillingAssignment` permission for the project that contains the bucket. . I suspect condition (2) is true here, so the access is granted. Note that if I remember correctly, condition (2) didn't exist when requester-pays was initially introduced.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6176#issuecomment-534288270:155,access,accessed,155,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6176#issuecomment-534288270,2,['access'],"['access', 'accessed']"
Security,"The `./gradlew clean install printVersion` command I mentioned publishes it to the local maven repo. Then you need to reference that version from your own build.gradle. Also beware when doing this iteratively that the local snapshot version # is based on the current head commit hash. In my experience, once gatk is published to local maven under a given version, if you want to make a change, you'll need to make a commit to force the version number to update, and then rerun the command above, and update your VariantQC to the new version. Otherwise the local repo won't be updated since it will appear up to date. Hope that makes sense.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-759638068:279,hash,hash,279,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-759638068,1,['hash'],['hash']
Security,"The access pattern I saw is that the queries start small and creep up to; tens or hundreds of thousands (Order of the queried numbers). With the; exponential cache expansion, the cache quickly catches up. So it's fine.; We'll revise when needed. On Wednesday, July 6, 2016, Louis Bergelson notifications@github.com; wrote:. > @akiezun https://github.com/akiezun My only concern now is that someone; > takes log10 of a very large number triggering a massive and slow cache; > expansion. This caching scheme is good for clustered queries of small; > values, but terrible for sparse large queries. Is that a case we need to; > consider?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > https://github.com/broadinstitute/gatk/pull/1957#issuecomment-230863916,; > or mute the thread; > https://github.com/notifications/unsubscribe/AB5rL32j0zFsPo1VQ4T6gxnEHvjpYZ02ks5qS_VhgaJpZM4JCXE9; > . ## . Sent from Gmail Mobile",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1957#issuecomment-230865040:4,access,access,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1957#issuecomment-230865040,1,['access'],['access']
Security,"The code to automatically inject ""--VERBOSITY ERROR"" was included in [#171](https://github.com/broadinstitute/hellbender/pull/171/files), but without [#603](https://github.com/broadinstitute/hellbender/pull/603) or equivalent it doesn't affect log4j output. dding in #603 reduces the log output by about another 7000 lines. In addition, we could squeeze out another 5000 lines by automatically injecting ""--QUIET false"" the same way we inject --VERBOSITY.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/147#issuecomment-116737455:26,inject,inject,26,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/147#issuecomment-116737455,3,['inject'],"['inject', 'injecting']"
Security,"The constructors (some of them anyway) use the args during constructor execution, so validating them after the constructor is done executing is too late. Anyway, if you revert that commit so the validation happens as before, and instead add the following to the catch block in `VariantEvalEngine::createClass`, they will get propagated as expected:. ```; if (e.getCause() instanceof CommandLineException) {; // failures due to argument validation should be propagated; throw new CommandLineException(e.getCause().getMessage(), e.getCause());; }; throw new GATKException(""Problem making an instance of "" + clazz + "" Do check that the class has a constructor that accepts VariantEvalEngine"", e);; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-827866803:85,validat,validating,85,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-827866803,3,['validat'],"['validating', 'validation']"
Security,"The failing test is unrelated to this branch, and I have secured permission to merge. Here we go. . .",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1553213661:57,secur,secured,57,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1553213661,1,['secur'],['secured']
Security,"The git hash refers to the commit of GATK you have checked out in your branch as opposed to the commit of GATK that has been built in Java (and will be run on the cluster). I will clarify the error message: it means that you need to rebuild GATK to match your changes to the repository. The malformed object name is a different story, and seems like a bug. I will try to figure that out.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3593#issuecomment-330818394:8,hash,hash,8,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3593#issuecomment-330818394,1,['hash'],['hash']
Security,"The idea of putting more help into the command line tools seems like a good one. We don't really have global ""man pages"" maybe we should have some that are accessible directly through the CLI describing important concepts.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6639#issuecomment-656182276:156,access,accessible,156,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6639#issuecomment-656182276,1,['access'],['accessible']
Security,"The issue is that only the linked list version of hash sets/maps has a predictable iteration order. So, any algorithm that is order dependent may get different results between different Java versions. The only downside is the linked list will take up some additional storage.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1844#issuecomment-220625823:50,hash,hash,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1844#issuecomment-220625823,1,['hash'],['hash']
Security,"The issue with the tests is that this PR is from a fork so the tests don't have access to the permissions we need for BigQuery in the variantstore WDL tests. I need to fix this for the future (by making sure those tests don't run when the PR is from a fork), but I don't think that test failure should block this PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6872#issuecomment-710041086:80,access,access,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6872#issuecomment-710041086,1,['access'],['access']
Security,"The local assembly step currently in SV pipeline also uses RDD cacheing (`validateAndSaveResults` of `RunSGAViaProcessBuilderOnSpark.java`), so this would help.; Thanks, @akiezun and Lucy",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1811#issuecomment-223135473:74,validat,validateAndSaveResults,74,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1811#issuecomment-223135473,1,['validat'],['validateAndSaveResults']
Security,"The new pipeline is in a complete state. Nearly all tools and scripts were rewritten, many from scratch. I've tried to minimize interaction with old `tools/exome` code (notably, `ReadCountCollection` and `SegmentUtils`). There are still some improvements that can be made (especially in segment union and the subsequent modeling), but we should be ready to go for a first validation. Some notes:. WDL:; - I've moved the old pipeline to `somatic_old` folders.; - There is now just a matched-pair workflow and a panel workflow. We can add a single BAM case workflow or expand the matched-pair workflow to handle this, depending on the discussion at https://github.com/broadinstitute/gatk/issues/3657.; - WES/WGS is toggled by providing an optional target-file input.; - For all workflows, we always collect integer read counts; for WGS, these are output as both HDF5 and TSV and the HDF5 is used for subsequent input.; - For the case workflow, we always collect allelic counts at all sites and output as TSV.; - [x] We should output all data files as HDF5 by default and as TSV optionally. EDIT: This is done for `CollectFragmentCounts`.; - [x] We will need to update the workflows when @MartonKN and @asmirnov239 get `PreprocessIntervals` and `CollectReadCounts` merged, respectively. These tools will remove the awkwardness required by `PadTargets` and `CalculateTargetCoverage`/`SparkGenomeReadCounts`. Denoising:; - All parameters are exposed in the PoN creation tool (#3356).; - Without a PoN, standardization and optional GC correction are performed (#3570).; - Other than the minor point about sample mean/median being used inconsistently noted above, the denoising process is essentially exactly the same mathematically as before (""superficial"" differences include the vastly improved memory and I/O optimizations, the ability to adjust number of principal components used, the removal of redundant SVDs, the enforcement of consistent GC-bias correction).; - [ ] That said, I'll carry over this ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2858#issuecomment-333202828:372,validat,validation,372,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2858#issuecomment-333202828,1,['validat'],['validation']
Security,"The only parallelism exposed by GenomicsDBImport is via `max-num-intervals-to-import-in-parallel` and that is at the granularity of threads in the same process. Not sure there is any parallelism in GenotypeGVCFs. ; The granularity of parallelism that @nickhsmith seems to want is at the level of a node and @mjohnsonngi is correct. Assuming GenotypeGVCFs processes each position independently, run GenomicsDBImport followed by GenotypeGVFs per node and then use GatherVcfs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7898#issuecomment-1175552901:21,expose,exposed,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7898#issuecomment-1175552901,1,['expose'],['exposed']
Security,"The output cram is malformed because because the cram writer code in htsjdk assumes it has a reference source for the output, but in this case it doesn't. It throws an NPE when it tries to access the reference bases. We need fixes and to tighten up code in several places in both htsjdk and HB. I'll add/update tickets accordingly.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/766#issuecomment-146315547:189,access,access,189,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/766#issuecomment-146315547,1,['access'],['access']
Security,"The possibility that this problem could be specific to the TCGA FC BAMs did arise in our previous discussions---not sure what storage class those are on?. However, in this workflow, at most one ReadWalker (CollectReadCounts) and one LocusWalker (CollectAllelicCounts) would try to access the same (tumor) BAM. There were several instances of (normal) BAMs which only had one LocusWalker (CollectAllelicCounts) accessing them that failed.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5631#issuecomment-459845523:281,access,access,281,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5631#issuecomment-459845523,2,['access'],"['access', 'accessing']"
Security,"The problem is that the package can't download any files during build due to security reasons. It has to use predefined, repeatable set of dependencies, and can't download random versions of gradle either. It has to use the ```devel/gradle``` port, and once this port has been upgraded to version 5.0 gatk became broken. ```devel/gradle4``` had to be created. Generally, indiscriminate downloads of files lead to security problems like the one that recently happened with a particular bitcoin-related node code, which was using a zillion node dependencies. One of them got infiltrated by a criminal who eventually stole bitcoins because he managed to inject his code into financial applications running on user's sites. To prevent such things from happening, all major packaging systems only use fingerprinted dependencies, and can't ""just download"" some alternative version of something during build, contrary to what devs might be expecting.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059:77,secur,security,77,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059,3,"['inject', 'secur']","['inject', 'security']"
Security,"The problem with a static member is that then we can only have one header for every read, ever. This will probably break computations that handle more than one bam at a time. Another potential solution is to audit every Dataflow (and spark) code that can receive SAMRecords as input, and make sure they call some utility ""putHeadersBack"" function. There aren't so many of those so it would be possible, though not super-pleasant.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/900#issuecomment-140930109:208,audit,audit,208,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/900#issuecomment-140930109,1,['audit'],['audit']
Security,"The same error was reported in other modules of GATK4. For eacmple, in GenomicsDBimport [Ref.1]. And I encountered it again when I check the bams with ValidateSamFile. [1] https://gatk.broadinstitute.org/hc/en-us/community/posts/360076477211-GenomicsDBimport-not-importing-all-the-batches?page=1#community_comment_4411519756827",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7582#issuecomment-991512945:151,Validat,ValidateSamFile,151,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7582#issuecomment-991512945,1,['Validat'],['ValidateSamFile']
Security,"The snapshot builds get published to an artifact repository, but I don't think those are accessible from outside of Broad. The build from this morning with your branch is [here](https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/org/broadinstitute/gatk/4.0.11.0-30-g9c4a27b-SNAPSHOT/) if you can access it. Otherwise, for local development, you can do the following:. - pull gatk master from today so it includes your commit; - run `git fetch --tags` (this is optional but it will give your local build a more reasonable version tag); - run `./gradlew install printVersion` to install the locally built gatk into your local machine's maven repository; - change your VariantQC gradle project to include the `maven` gradle plugin if its not already there; - add `mavenLocal()` to your projects' `repositories `closure; - change your gatk dependency to the version number printed out by 'printVersion'; - rebuild VariantQC. Having said all that, what code are you dependent on ? I expect the command line interface to VariantEval, and the VariantUtils and StratificationManager and friends classes all to undergo some refactoring and evolve a bit before the tool has the beta tag removed and the interfaces are stabilized. See https://github.com/broadinstitute/gatk/issues/5439 and https://github.com/broadinstitute/gatk/issues/5440.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148:89,access,accessible,89,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148,2,['access'],"['access', 'accessible']"
Security,"The task here is to simply move the code while changing as little as possible, and then validate that. Once that's done, we can do whatever refactoring/changes we want to VQSR, or replace it completely.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2062#issuecomment-236014525:88,validat,validate,88,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2062#issuecomment-236014525,1,['validat'],['validate']
Security,"There are currently two failing tests, both of which need fixes in htsjdk.; * CountVariantsSparkIntegrationTest. This is a concurrency issue where VCFCodec (which isn't threadsafe) is being shared by multiple tasks in each Spark executor. The fix is for each task (partition) to have its own VCFCodec. This needs a couple of small changes in htsjdk to make it possible to access the codec's version and header fields so the codec can be recreated. See https://github.com/samtools/htsjdk/pull/1176.; * CpxVariantReInterpreterSparkIntegrationTest. I tracked this down to a problem with the buffer in htsjdk's SeekableBufferedStream. See https://github.com/samtools/htsjdk/pull/1175 for the fix.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5138#issuecomment-417241035:372,access,access,372,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5138#issuecomment-417241035,1,['access'],['access']
Security,"There are two issues with running this on Travis:; 1. Spinning up Dataproc requires access to a bunch of secrets -- namely API Keys and Google Service accounts (usually in the form of a JSON). Travis allows for encrypted Secrets, so I'm okay with them existing there, but they are ONLY available to PRs that originate from the repo (ie, no forked PRs have access to them). So doing this in Travis would only work from your local PR. Is that acceptable? If not, no Travis that I can think of. 2. We don't want ANYONE to just come in and launch these tests as they are $ expensive (spinning up clusters in Google). If this activates with any PR that comes in, then we can easily run up a bill by any malicious A-hole who feels like launching a bunch of PRs. I know that when I was 14 or so I would have probably done that if I discovered it. Jenkins has some mechnaisms to prevent run away PR tests. Does Travis? I didn't find any info on that... Happy to hash it out in a room (and sorry it took this long to get to. Pester Banks if you need my attention faster otherwise Workbench and Security get first dibs). But be aware of these issues with Travis and running dataproc.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2298#issuecomment-287539859:84,access,access,84,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2298#issuecomment-287539859,5,"['Secur', 'access', 'encrypt', 'hash']","['Security', 'access', 'encrypted', 'hash']"
Security,"There is a pattern for abstracting these out, and even hiding them, but its intrusive and probably way overkill for this (see for example how `getSequenceDictionaryValidationArgumentCollection` is used). Also see `customCommandLineValidation` which can similarly be used for command line arg validation. Another option is to use a subclass constructor that resets the defaults, and logs a warning if you clobber a user value. The worst way is to do what AlleleFrequencyQC does in onTraversalStart, which just silently clobbers...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7287#issuecomment-853371556:292,validat,validation,292,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7287#issuecomment-853371556,1,['validat'],['validation']
Security,"There is an [Apache2 version of BWA](https://github.com/lh3/bwa/tree/Apache2). The `bwa index` is slower than the GPL'd bwa, but the rest is the same. @lindenb For now, bwa-mem only exposes APIs for single-end mapping. That part of API stays the same (or almost the same). Your java binding should still work. There is a non-public version of bwa that also exposes paired-end mapping and more internals, but that version has duplicated code – that is why I have not made it public.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1517#issuecomment-198166846:182,expose,exposes,182,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1517#issuecomment-198166846,2,['expose'],['exposes']
Security,"There is currently a disabled test in `PrintReadsIntegrationTest` for which a query on a crai-indexed cram file returns the wrong result (we get the correct result with an equivalent bam):. ```; // The below test case is currently disabled due to an apparent bug in which the cram reader returns the unmapped read ""f""; // in this query, even though it has its mapped mate's position, and this position is outside the query intervals.; // This bug is being tracked here: https://github.com/broadinstitute/gatk/issues/1673; // { ceuSnippetCram, b37_reference_20_21, Arrays.asList(""20:10000009-10000011"", ""unmapped""), Arrays.asList(""a"", ""b"", ""c"", ""d"", ""e"", ""g"", ""h"", ""h"", ""i"", ""i"") },; ```. This appears to be a bug at the htsjdk level, as it can be reproduced by instantiating a `SamReader` directly:. ```; @Test; public void testBug() throws IOException {; final File ceuSnippetCram = new File(publicTestDir + ""org/broadinstitute/hellbender/engine/CEUTrio.HiSeq.WGS.b37.NA12878.snippet_with_unmapped.cram"");; final SimpleInterval interval = new SimpleInterval(""20"", 10000009, 10000011);; SamReaderFactory factory = SamReaderFactory.makeDefault().validationStringency(ValidationStringency.SILENT);; factory.referenceSequence(new File(b37_reference_20_21));. try ( final SamReader reader = factory.open(ceuSnippetCram) ) {; final Iterator<SAMRecord> iter = reader.queryOverlapping(new QueryInterval[]{IntervalUtils.convertSimpleIntervalToQueryInterval(interval, reader.getFileHeader().getSequenceDictionary())});; while ( iter.hasNext() ) {; final SAMRecord read = iter.next();; Assert.assertNotEquals(read.getReadName(), ""f"");; }; }; }; ```. Task is to look into this and get a sense of where the problem is, then file an htsjdk bug if appropriate. GATK 3.5 `PrintReads` does not have this problem with the same input, but it uses a completely different code path to query crams.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1673#issuecomment-203658956:1145,validat,validationStringency,1145,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1673#issuecomment-203658956,2,"['Validat', 'validat']","['ValidationStringency', 'validationStringency']"
Security,"There were a few issues with this case. First, the data source was not constructed 100% correctly. The config file is correct. . The index file is for the tar.gz version of the source data and not for the uncompressed version that they're using. The index should correspond to the source data in the file referenced by the config file itself (not a zipped or otherwise transformed version). Secondly, the source `tsv` data file has the header line for the table commented out. The Xsv codec is aware of leading hash marks as comments and will ignore any such lines. Because of this, the leading hash in the table header is ignored and the file cannot be properly parsed. The fix is simple - just remove the leading hash from the table header (the preceding line with the two hash marks is correctly interpreted as a file header because of the leading hashes acting as comments). Lastly, even if the user fixed the file they would still need to index it with`IndexFeatureFile`. At some point the code underlying this in `HTSJDK` was broken such that no Xsv files can currently be indexed. I have submitted a pull request in `HTSJDK` (https://github.com/samtools/htsjdk/pull/1429) for this and have another ready to go in GATK (#6224) that includes a test for this case so this reversion cannot happen again.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6223#issuecomment-545186183:511,hash,hash,511,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6223#issuecomment-545186183,5,['hash'],"['hash', 'hashes']"
Security,"These are failing with:. ```; Error: (converted from warning) unable to access index for repository http://lib.stat.cmu.edu/R/CRAN/src/contrib; Execution halted; The command ""if [[ $TEST_DOCKER != true ]]; then sudo mkdir -p /usr/local/lib/R/; sudo mkdir -p site-library; sudo ln -sFv ~/site-library /usr/local/lib/R/site-library; sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9; sudo add-apt-repository ""deb http://cran.rstudio.com/bin/linux/ubuntu trusty/""; sudo apt-get update; sudo apt-get install -y --force-yes r-base-dev=3.1.3-1trusty; sudo apt-get install -y --force-yes r-base-core=3.1.3-1trusty; sudo Rscript scripts/docker/gatkbase/install_R_packages.R; fi;"" failed and exited with 1 during; ```; which has nothing to do with the PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5595#issuecomment-456911203:72,access,access,72,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5595#issuecomment-456911203,1,['access'],['access']
Security,These changes pass all tests on my system but the Travis build fails in 30 seconds - security issue?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/809#issuecomment-130674475:85,secur,security,85,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/809#issuecomment-130674475,1,['secur'],['security']
Security,"These downstream protected tests only need to run on each merge into master, not when a PR is opened, so that should address the security issue. (I misspoke earlier, sorry -- only the tests in https://github.com/broadinstitute/gatk/issues/2298 need to run for each PR). The goal is just to have a badge on github that lets us know whether protected is working with the current build of public/master (and it often won't be in the course of development). Workflow would be:; 1. A merge goes into GATK public/master; 2. Job grabs the HEAD of public/master, and builds and installs a snapshot into the local maven repository using `./gradlew install printVersion`; 3. Job needs to save the last line of output from `./gradlew install printVersion` in a `gatkPublicVersion` variable -- this is the version of the snapshot of public that was installed to maven local.; 4. Job checks out latest GATK protected/master and executes the command to build it and run the full test suite, but as part of that command it overrides the GATK public version to point to the snapshot version installed locally and saved in the `gatkPublicVersion` variable above. It is trivial to patch protected's `build.gradle` to add the ability to override the GATK public version when running gradle commands (we can help with this part).; 5. New github badge for ""Downstream GATK protected tests"" on the front page of the GATK public github repo gets updated with the results of step 4, and can be clicked on to view the full test output.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1758#issuecomment-287543585:129,secur,security,129,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1758#issuecomment-287543585,1,['secur'],['security']
Security,"Think I'd prefer to just pass in a sequence dictionary to the GenomeLoc constructor when you want validation, instead of the subclass option. This would be compatible with the isValidated() idea.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/100#issuecomment-69767411:98,validat,validation,98,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/100#issuecomment-69767411,1,['validat'],['validation']
Security,This has exposed a dumb bug in our tests. It turns out we rely on the exact output of VariantContext.toString() Will fix. https://storage.googleapis.com/hellbender-test-logs/build_reports/lb_update_to_htsjdk_2.14.2_17106.2/tests/test/index.html,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4350#issuecomment-363248723:9,expose,exposed,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4350#issuecomment-363248723,1,['expose'],['exposed']
Security,"This is a different sample/locus, but same issue:; `java -jar $GATKjar HaplotypeCaller --emit-ref-confidence GVCF --gvcf-gq-bands 10 --gvcf-gq-bands 20 --gvcf-gq-bands 30 --gvcf-gq-bands 40 --gvcf-gq-bands 50 --gvcf-gq-bands 60 --gvcf-gq-bands 70 --gvcf-gq-bands 80 --gvcf-gq-bands 90 --contamination-fraction-to-filter 0.011583226666666667 -L gs://broad-gotc-dev-cromwell-execution/ExomeGermlineSingleSample/873ad750-62ac-41a1-857a-a9388ad23392/call-BamToGvcf/BamToGvcf/c6c55d1d-7f26-4816-b268-10acfe409083/call-ScatterIntervalList/glob-cb4648beeaff920acb03de7603c06f98/41scattered.interval_list -I gs://broad-gotc-dev-cromwell-execution/ExomeGermlineSingleSample/873ad750-62ac-41a1-857a-a9388ad23392/call-UnmappedBamToAlignedBam/UnmappedBamToAlignedBam/3945800d-4668-41b0-9eb0-602c2bf9b209/call-GatherBamFiles/NA12878.bam -G StandardAnnotation -G AS_StandardAnnotaiton -new-qual`; where GATKjar is 4.0.10.1 in my case. My problematic output is:; `chr6 149638730 . G GTTT,<NON_REF> 0.13 . AS_RAW_BaseQRankSum=||;AS_RAW_MQ=0.00|0.00|0.00;AS_RAW_MQRankSum=||;AS_RAW_ReadPosRankSum=||;AS_SB_TABLE=0,0|0,0|0,0;ExcessHet=3.0103;MLEAC=1,0;MLEAF=0.500,0.00 GT:AD:DP:GQ:PL:SB 1/1:0,0,0:0:3:19,3,0,19,3,19:0,0,0,0`; which is missing DP, QD, and RAW_MQandDP. Let me know if you don't have access to the gotc-dev bucket.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5434#issuecomment-447350938:1280,access,access,1280,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5434#issuecomment-447350938,1,['access'],['access']
Security,"This is done except for the remaining SortSamIntegration test issue exposed by the outputExtension fix, which is now covered by #1259.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1141#issuecomment-162520079:68,expose,exposed,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1141#issuecomment-162520079,1,['expose'],['exposed']
Security,This is exactly the sort of nightmare bug we get every java update. Just 1 isn't bad at all. I'm surprised replacing all the hashsets didn't work. It could come down to inadequate tiebreaking in a sort which falls back to identityHash. We saw that in a different bug recently. I'll take a look.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6119#issuecomment-532701834:125,hash,hashsets,125,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6119#issuecomment-532701834,1,['hash'],['hashsets']
Security,This is ready for review. I'm creating/updating tickets for the remaining tools that have issues. There are also a couple of cases where there are tests commented out because they need fixes in htsjdk (GatherBamFiles and ValidateSAMFile at least - the fixes are all in PR https://github.com/samtools/htsjdk/pull/368) and I'll make tickets to reflect those as well.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1084#issuecomment-157490326:221,Validat,ValidateSAMFile,221,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1084#issuecomment-157490326,1,['Validat'],['ValidateSAMFile']
Security,"This is solved, since we now have the ability to disable sequence dictionary validation at the engine level!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/690#issuecomment-169136850:77,validat,validation,77,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/690#issuecomment-169136850,1,['validat'],['validation']
Security,"This is the issue I was talking about the other day in our collaboration meeting. The file system is determined by the spark environment. In the direct runner it ends up being a `LocalFileSystem`. If you run using the SUBMIT runner on your own computer you'll likely also get a `LocalFileSystem`, if you run with SUBMIT on dataflow01 you'll be able to read hdfs, but unable to access `file://` and all paths will be silently translated to hdfs paths if file:// is specified..",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1324#issuecomment-163383360:377,access,access,377,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1324#issuecomment-163383360,1,['access'],['access']
Security,This looks like a bug. I'm not sure if the issue is in the HaplotypeCaller output or in the way CombineGvcfs is merging things. Could you run ValidateVariants on each of the vcfs and let us know if they pass?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6368#issuecomment-574336680:142,Validat,ValidateVariants,142,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6368#issuecomment-574336680,1,['Validat'],['ValidateVariants']
Security,"This looks like a good start! I'm not quite sure how you are planning to handle dictionary validation, specifically, but you can take a look at the CNV plotting tools (PlotDenoisedCopyRatios and PlotModeledSegments) to see what level of validation we currently do. We can discuss further in person if you like. (Also, note that those tools take a sequence dictionary as an input to specify which contigs should be plotted; typically, this will be a subset of the full dictionary that excludes alt contigs, etc. Requiring this sequence-dictionary input is somewhat vestigial; previous versions of the pipeline did not include dictionaries in the headers of all CNV data files. Part of making these tools into GATKTools could include switching over to -L to specify regions for plotting.). Finally, are the changes to `-imr` mentioned in #2471 going to be addressed in a separate issue?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4341#issuecomment-363209925:91,validat,validation,91,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4341#issuecomment-363209925,2,['validat'],['validation']
Security,"This looks like the auth service saw some transient error and instead of replying with a 503 (service temporarily unavailable), it replied with a 403 (forbidden). A workaround would be to retry on those. The side effect will be that if we genuinely do not have access, it'll take a bit longer to report it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3735#issuecomment-338778985:261,access,access,261,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3735#issuecomment-338778985,1,['access'],['access']
Security,"This may be an expensive validation since it necessarily involves parsing the cigar and MD tags. ; This is being done a `SamRecord` -> `Read` conversion since google's `CigarUnit` includes an optional referenceSequence field which may be filled in for SNPs and Deletions. It effectively replaces the sam MD tag. This is actually a major improvement over the MD tag, which is an incredibly confusing tag.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/557#issuecomment-111559387:25,validat,validation,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/557#issuecomment-111559387,1,['validat'],['validation']
Security,This needs to happen for MAF too. . We should add a method `OutputRenderer::sanitizeField` that we can plug into the annotation process that will automatically sanitize each field for illegal characters as they are added to the output. This will require refactoring the `OutputRenderer::write` method to be concrete with a call to another write method and this sanitizeField method to get the benefits automatically for all OutputRenderers.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4693#issuecomment-383709501:76,sanitiz,sanitizeField,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4693#issuecomment-383709501,3,['sanitiz'],"['sanitize', 'sanitizeField']"
Security,"This requires an upgrade to Hadoop-BAM the next time its released in order to pick up [this commit](https://github.com/HadoopGenomics/Hadoop-BAM/commit/85222f0d56f5a4294ff8fdff84c87b74b99413fc), plus changes in GATK to pass the validation stringency through. I have the necessary changes to GATK, but can't commit them as is because they're intertwined with other changes necessary for https://github.com/broadinstitute/gatk/issues/1346, which are in turn dependent on [other changes](https://github.com/cmnbroad/Hadoop-BAM/commit/07fc5560c2fabfab8c2d8344489efc47996cc597) that are not yet merged into Hadoop-BAM. They could be separated but hopefully will not have to be,",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1261#issuecomment-172041451:228,validat,validation,228,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1261#issuecomment-172041451,1,['validat'],['validation']
Security,"This ticket now represents the remaining work for the Spark large scale validation task: hooking up the existing pieces, and allowing them to be run using a script or similar. Most of its former story points have been redistributed to other tickets, making this now a 5 point ticket.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/695#issuecomment-158403164:72,validat,validation,72,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/695#issuecomment-158403164,1,['validat'],['validation']
Security,"This update of genomicsDB includes the option to not validate the sampleMapFile against the actual headers. Choosing to not validate allows us to save time at the start by not having to open each file on the initial header construction when using --`sampleMapFile`. closes #2713, closes #2714, and closes #2715. It also includes an update to have GenomicsDB capture RSId's by default, (closes #2636) which should make diffs easier on our end at a slight cost of storage size. If that's an issue we may need to revisit the default.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2733#issuecomment-306254281:53,validat,validate,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2733#issuecomment-306254281,2,['validat'],['validate']
Security,"This was fixed by the addition of the following firewall rule:. <img width=""419"" alt=""screen shot 2016-03-29 at 3 00 11 pm"" src=""https://cloud.githubusercontent.com/assets/4700332/14122691/cda70254-f5ca-11e5-8342-afd119725d85.png"">",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1611#issuecomment-203085295:48,firewall,firewall,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1611#issuecomment-203085295,1,['firewall'],['firewall']
Security,This will currently fail all of the SplitNCigarReadsIntegrationTests.java tests because I have yet to validate that the approach is right for this problem and that the output is reasonable before I go about recreating the tests. @meganshand,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2021#issuecomment-233741188:102,validat,validate,102,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2021#issuecomment-233741188,1,['validat'],['validate']
Security,This will require porting `SequenceDictionaryUtils.validateDictionaries()` from the old GATK.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/101#issuecomment-113267458:51,validat,validateDictionaries,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/101#issuecomment-113267458,1,['validat'],['validateDictionaries']
Security,"To be clear, this will work perfectly fine as long as you have enough space in /dev/shm---which is typically true everywhere outside of our default Docker container. I'm loath to cripple a tool just because of limitations that are fundamentally elsewhere...let's just address those in the appropriate places. (Furthermore, I'm especially loath to write a plotting tool that takes ~5 minutes to generate a plot!) And yes, while it is not great that data.table forces us to use /dev/shm, I think `fread(""grep ..."")` is relatively standard. If `--shm-size` is indeed not exposed, why doesn't the Google backend scale /dev/shm or other tmpfs space with requested machine memory?. If there really is no other way around it, then all we're doing is filtering out the lines beginning with `@`. We could do this first by calling system commands within R to write to a temporary file, and then reading that back in with fread. This seems hacky to me, but I've confirmed that it works within the Docker. This will solve our immediate problem, but I still think it's worth taking a look at those other limitations elsewhere now as well.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4140#issuecomment-357337827:568,expose,exposed,568,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4140#issuecomment-357337827,1,['expose'],['exposed']
Security,"To clarify what needs to be done here:. -Add a new `--javaOptions` argument to `gatk-launch`. -When running with a packaged local jar, the value of `--javaOptions` should be injected into the command line built by `formatLocalJarCommand()`. -When running with the ""wrapper script"" (as a result of building with `./gradlew installDist` instead of `./gradlew localJar`), propagate the value of `--javaOptions` to the `JAVA_OPTS` environment variable the wrapper script expects. You can inspect the wrapper script itself by running `./gradlew installDist` and then examining `build/install/gatk/bin/gatk`. -When running on Spark, you'll need to add the `--javaOptions` to `spark.driver.extraJavaOptions` and `spark.executor.extraJavaOptions`",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2694#issuecomment-305007868:174,inject,injected,174,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2694#issuecomment-305007868,1,['inject'],['injected']
Security,"To the question on building it: I guess it isnt really a problem with your build per-se, but rather it seems to make a variety of assumptions or requirements on the environment that were difficult to replicate on our cluster (where i lack admin privs). Using your docker image was the faster way i could find to replicate the needed environment. Issues I hit included: 1) needed git lfs installed (on cluster i lack sudo/apt access), 2) gradle complained about building on the lustre filesystem, so i needed to move to other disks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7675#issuecomment-1042026487:425,access,access,425,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7675#issuecomment-1042026487,1,['access'],['access']
Security,"To update:. Chris and I just tested copying the bam and indices (3 files) from `gs://broad-dsde-methods-sv/samples/G94797_CHM_MIX/WGS1` (note that Chris reports it works on this bucket) to a just-created ""directory"" `gs://broad-dsde-methods-sv/samples/G94797_CHM_MIX/WGS1/tmp`, and it fails. Also an interested behavior we noticed, and a suspicion that is hard to test (due to lack of access to time machine), that this might be related when the ""directory"" is created: any directory freshly created after October 2018 might be susceptible to this, which is also the month when newer (>66) release of NIO became available.; In the mean time, if one does ; `gsutil ls -L gs://broad-dsde-methods-sv/samples/G94797_CHM_MIX/WGS1`; you'd get, at the last line, `TOTAL: 3 objects`, which is expected, whereas if one does; `gsutil ls -L gs://broad-dsde-methods-sv/samples/G94797_CHM_MIX/WGS1/tmp`; guess what: `TOTAL: 4 objects`!; It seems to list the ""directory"" itself as an object as well.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5935#issuecomment-491969032:385,access,access,385,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5935#issuecomment-491969032,1,['access'],['access']
Security,"Totally get it now; with these changes, `assertEqualTextFiles` is getting `LinkedList`s from `XReadLines`, rather than `ArrayList`s, which it used to get from the trailing `stream.collect` calls. Since it then uses indexed access to iterate thorough the two lists zip style, the serial `get` calls are super slow on even moderately sized (100k) linked lists. Should be an easy fix. @jean-philippe-martin let me know if you want me to make this change.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462784167:223,access,access,223,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462784167,1,['access'],['access']
Security,"Touch/Reference_data_b38/gnomad.genomes.v3.1.2.sites.chr3.vcf.bgz; 10:58:19.971 INFO FeatureManager - Using codec VCFCodec to read file file:///run/media/riadh/My%20Book_From%20Eiklid/Analysis/gatk-4.2.4.1/ensembl-vep/PE69_chr3.vcf; 10:58:20.063 INFO VariantAnnotator - Done initializing engine; 10:58:20.091 WARN VariantAnnotatorEngine - The requested expression attribute ""gnomad.ALT"" is missing from the header in its resource file gnomad; 10:58:20.140 INFO ProgressMeter - Starting traversal; 10:58:20.140 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 10:58:42.160 INFO VariantAnnotator - Shutting down engine; [March 17, 2022 at 10:58:42 AM CET] org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotator done. Elapsed time: 0.37 minutes.; Runtime.totalMemory()=17158897664; java.lang.IllegalStateException: Allele in genotype C not in the variant context [C*, CT]; 	at htsjdk.variant.variantcontext.VariantContext$Validation.validateGenotypes(VariantContext.java:382); 	at htsjdk.variant.variantcontext.VariantContext$Validation.access$200(VariantContext.java:323); 	at htsjdk.variant.variantcontext.VariantContext$Validation$2.validate(VariantContext.java:331); 	at htsjdk.variant.variantcontext.VariantContext.lambda$validate$0(VariantContext.java:1384); 	at java.base/java.lang.Iterable.forEach(Iterable.java:75); 	at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1384); 	at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:489); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:647); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:638); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.trimAlleles(GATKVariantContextUtils.java:1464); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.trimAlleles(GATKVariantContextUtils.java:1420); 	at org.broadinstitute.hellben",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6689#issuecomment-1070784053:3972,validat,validateGenotypes,3972,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6689#issuecomment-1070784053,1,['validat'],['validateGenotypes']
Security,"TrainVariantAnnotationsModel:. Trains a model for scoring variant calls based on site-level annotations. TODOs:. - [x] Integration tests. Exact-match tests for (non-exhaustive) configurations given by the Cartesian product of the following options:; * non-allele-specific vs. allele-specific; * SNP-only vs. SNP+INDEL (for both of these options, we use extracted annotations that contain both SNP and INDEL variants as input); * positive (training with *.annot.hdf5) vs. positive-unlabeled (training with *.annot.hdf5 and *.unlabeled.annot.hdf5); * Java Bayesian Gaussian Mixture Model (BGMM) backend vs. python sklearn IsolationForest backend; (BGMM tests to be added once PR for the backend goes in.); - [x] Tool-level docs. Minor TODOs:. - [x] Parameter-level docs.; - [x] Parameter/mode validation.; - [x] Refactor main code block for model training; it's a bit monolithic and procedural now.; - [x] Decide on behavior for ill-behaved annotations. E.g., all missing, zero variance. Future work:. - [ ] We could allow subsetting of annotations here, which might allow for easier treatment of ill-behaved annotations. However, I'd say enabling workflows where the set of annotations is fixed is the priority.; - [ ] We could do positive-unlabeled training more rigorously or iteratively. Right now, we essentially do a single iteration to determine negative data. This could perhaps be preceded by a round of refactoring to clean up model training and make it less procedural.; - [ ] Automatic threshold tuning could be built into the tool, see #7711. We'd probably have to introduce a ""validation"" label. Perhaps it makes sense to keep this sort of thing at the workflow level?; - [ ] In the positive-negative framework enforced by the Java code in this tool, a ""model"" is anything that assigns a score, we fit two models to different subsets of the data, and then take the difference of the two scores. While the python backend does give some freedom to specify a model, future developers may want",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948369:791,validat,validation,791,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948369,1,['validat'],['validation']
Security,"Two documentation nitpicks. Looks good. It's good that you're fixing this, since i think the entire point of this class was to avoid copying the bases, and it ended up just copying the bases for the hashcode.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1620#issuecomment-200883757:199,hash,hashcode,199,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1620#issuecomment-200883757,1,['hash'],['hashcode']
Security,"UFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.COMPRESSION_LEVEL : 1; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - Initializing engine; 19:03:43.000 INFO ValidateSamFile - Done initializing engine; ERROR: Record 9762, Read name 20GAVAAXX100126:7:2:8126:115177, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 24466, Read name 20FUKAAXX100202:7:46:13035:77621, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97940, Read name 20FUKAAXX100202:5:7:21464:86224, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97955, Read name 20GAVAAXX100126:5:7:1291:122571, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned;",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:1892,Validat,ValidateSamFile,1892,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,"UIET false; [March 9, 2017 7:03:42 PM EST] Executing as gspowley@dna on Linux 3.10.0-514.10.2.el7.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14; Version: Version:4.alpha.2-170-g8d06823-SNAPSHOT; 19:03:42.998 INFO ValidateSamFile - Defaults.BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.COMPRESSION_LEVEL : 1; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - Initializing engine; 19:03:43.000 INFO ValidateSamFile - Done initializing engine; ERROR: Record 9762, Read name 20GAVAAXX100126:7:2:8126:115177, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 24466, Read name 20FUKAAXX100202:7:46:13035:77621, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97940, Read name 20FUKAAXX100202:5:7:21464:86224, bin field of BAM record does not equal value computed based on alignment start a",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:1646,Validat,ValidateSamFile,1646,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,"Unless, that is, we want to use the API key to allow non-logged-in access to public data?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2402#issuecomment-288549673:67,access,access,67,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2402#issuecomment-288549673,1,['access'],['access']
Security,"Update: I made a list of particularly bad intervals for the DREAM4 and 20-plex Hapmap bams by scattering 500 ways, choosing the 20 slowest jobs (weighting by an empirical 3x slowness factor for jobs on nodes that couldn't use AVX PairHMM acceleration), scattering again etc to obtain 100 or so intervals of roughly 200 bp that took long. Then I confirmed that the slowness had nothing to do with SGE or cromwell (it shouldn't, because I was getting runtime from the GATK output log, not the cromwell log, but just in case. . .) by re-running each interval on gsa5. In *every* case, the slow intervals had extremely deep coverage (2,000 - 30,000) due to mapping error. Even after filtering to MQ == 60, the high coverage usually remained, although it often decreased significantly. In addition to the extreme depth, the only other sign was a significant proportion of reads with multiple SNVs relative to the reference. Unfortunately, something cheap to compute, like CIGAR complexity, was often not a sign, because many CIGARs were eg 101M, with many of the M's coming from SNVs. One quick solution would be to completely skip calling on regions with extremely high depth. It's hard to imagine being able to trust any calls from them. Another option is MQ-based downsampling, for example downsampling to the 1000 reads with the best MQ. Some people might like the downsampling option for the secure feeling of not losing sensitivity, although realistically those regions are so terrible that this security is an illusion. The only real protection is a more complete reference.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2975#issuecomment-309565338:1392,secur,secure,1392,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2975#issuecomment-309565338,2,['secur'],"['secure', 'security']"
Security,Update: the cfDNA validation is all set up.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2942#issuecomment-357065450:18,validat,validation,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2942#issuecomment-357065450,1,['validat'],['validation']
Security,"Update:; - [ ] A cool name! (Marduk, Clarendon, NeuroVar) ? maybe I'll do a slack poll of dsde methods?; - [x] Model training script (in Python, eventually in Java); - [x] Pretrained model for WGS; - [x] Pretrained model for WEx (still being validated and was only trained on NA12878); - [x] Model inference and VCF annotation (in Java); - [x] Solution for applying filters based on CNN score cutoff (tranches.py script); - [ ] Alternate joint calling WDL? Or for re-filtering? (ideally with a $$$ estimate); - [ ] Performance optimizations?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4225#issuecomment-363436039:242,validat,validated,242,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4225#issuecomment-363436039,1,['validat'],['validated']
Security,Upgrading to Spark 3.3 (switches to log4j 2.x) when it's released would be ideal since it would solve the security issue mentioned [here](https://gatk.broadinstitute.org/hc/en-us/community/posts/4592331786651-vulnerability-issue-for-gatk-package-4-2-5-0-local-jar),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6671#issuecomment-1155747154:106,secur,security,106,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6671#issuecomment-1155747154,1,['secur'],['security']
Security,"Upon further investigating, the builds are indeed there. Dockerhub is deprecating their build security scan feature, and in the meantime it only allows one scan of an image a day. Because we tag each image with a different name they show up in the nightly build repository as being unscanned and thus get binned at the bottom of the page (after scrolling through everything since the beginning of time) to view the unscanned images.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4454#issuecomment-368648512:94,secur,security,94,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4454#issuecomment-368648512,1,['secur'],['security']
Security,"Use SampleLocatableMetadata if you want CombineSegmentBreakpoints to only operate on segment files from a single sample. It's conceivable that you want it to be more flexible, in which case I would use LocatableMetadata. Also, go ahead and move the collection class into the collection package, rather than expose the abstract classes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3995#issuecomment-352762883:307,expose,expose,307,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3995#issuecomment-352762883,1,['expose'],['expose']
Security,UvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL0NhbGxDb3B5UmF0aW9TZWdtZW50cy5qYXZh) | `100% <ø> (ø)` | `2 <0> (ø)` | :arrow_down: |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3880?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `75.51% <ø> (ø)` | `17 <0> (ø)` | :arrow_down: |; | [...institute/hellbender/tools/spark/bwa/BwaSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3880?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9id2EvQndhU3BhcmsuamF2YQ==) | `69.231% <ø> (ø)` | `5 <0> (ø)` | :arrow_down: |; | [...tute/hellbender/tools/AnnotatePairOrientation.java](https://codecov.io/gh/broadinstitute/gatk/pull/3880?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9Bbm5vdGF0ZVBhaXJPcmllbnRhdGlvbi5qYXZh) | `96.429% <ø> (ø)` | `8 <0> (ø)` | :arrow_down: |; | [...oadinstitute/hellbender/tools/GatherVcfsCloud.java](https://codecov.io/gh/broadinstitute/gatk/pull/3880?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9HYXRoZXJWY2ZzQ2xvdWQuamF2YQ==) | `70.811% <ø> (ø)` | `40 <0> (ø)` | :arrow_down: |; | [...lbender/tools/spark/pathseq/PathSeqBuildKmers.java](https://codecov.io/gh/broadinstitute/gatk/pull/3880?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9wYXRoc2VxL1BhdGhTZXFCdWlsZEttZXJzLmphdmE=) | `100% <ø> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...tools/spark/validation/CompareDuplicatesSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3880?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay92YWxpZGF0aW9uL0NvbXBhcmVEdXBsaWNhdGVzU3BhcmsuamF2YQ==) | `82.927% <ø> (ø)` | `24 <0> (ø)` | :arrow_down: |; | ... and [92 more](https://codecov.io/gh/broadinstitute/gatk/pull/3880?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3880#issuecomment-347373155:3616,validat,validation,3616,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3880#issuecomment-347373155,1,['validat'],['validation']
Security,"Valentin & I discussed this in person just now, with the following results:. -The various *Context objects should probably be refactored to return empty lists upon lack of input, as Valentin suggested, instead of being `Optional`. -There may be a need to allow tools to request additional context around the current locus/interval, but tools should probably not be performing arbitrary queries as a general rule, since it would be difficult or impossible to optimize a traversal in which the access pattern is random. If a tool needs to group disparate data items together (eg., mates on different contigs), there should be an initial grouping step to prepare the required data for the main analysis, instead of random queries within the main analysis. -apply()/map() should take its inputs as parameters instead of directly accessing member variables into which input data has been injected.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/242#issuecomment-76805735:492,access,access,492,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/242#issuecomment-76805735,3,"['access', 'inject']","['access', 'accessing', 'injected']"
Security,ValidateSamFile shows no errors with the bam.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2113#issuecomment-242510056:0,Validat,ValidateSamFile,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2113#issuecomment-242510056,1,['Validat'],['ValidateSamFile']
Security,Variants Processed Variants/Minute; 14:55:54.857 INFO FilterMutectCalls - Starting pass 0 through the variants; 14:56:05.368 INFO ProgressMeter - 1:2019484 0.2 16000 91332.9; 14:56:15.521 INFO ProgressMeter - 1:4008750 0.3 35000 101621.1; 14:56:26.027 INFO ProgressMeter - 1:5856032 0.5 55000 105867.6; ...; 19:37:05.295 INFO ProgressMeter - GL000209.1:48811 281.2 30739000 109323.8; 19:37:15.543 INFO ProgressMeter - GL000224.1:65537 281.3 30758000 109324.9; 19:37:25.847 INFO ProgressMeter - GL000248.1:21736 281.5 30768000 109293.8; 19:37:25.906 INFO FilterMutectCalls - Finished pass 0 through the variants; 19:50:04.590 INFO FilterMutectCalls - Shutting down engine; [9 January 2020 7:50:04 PM] org.broadinstitute.hellbender.tools.walkers.mutect.filtering.FilterMutectCalls done. Elapsed time: 294.19 minutes.; Runtime.totalMemory()=14966849536; java.lang.IllegalArgumentException: Values in probability array sum to a negative number NaN; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:731); 	at org.broadinstitute.hellbender.utils.MathUtils.normalizeSumToOne(MathUtils.java:731); 	at org.broadinstitute.hellbender.tools.walkers.mutect.clustering.SomaticClusteringModel.performEMIteration(SomaticClusteringModel.java:336); 	at org.broadinstitute.hellbender.tools.walkers.mutect.clustering.SomaticClusteringModel.learnAndClearAccumulatedData(SomaticClusteringModel.java:306); 	at org.broadinstitute.hellbender.tools.walkers.mutect.filtering.Mutect2FilteringEngine.learnParameters(Mutect2FilteringEngine.java:158); 	at org.broadinstitute.hellbender.tools.walkers.mutect.filtering.FilterMutectCalls.afterNthPass(FilterMutectCalls.java:159); 	at org.broadinstitute.hellbender.engine.MultiplePassVariantWalker.traverse(MultiplePassVariantWalker.java:44); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1048); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); 	at org.broadinstitute.hellbender.cmdline.Com,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6202#issuecomment-572799341:4269,validat,validateArg,4269,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6202#issuecomment-572799341,1,['validat'],['validateArg']
Security,"Variants`, which ports LeftAlignAndTrimVariants from GATK3 to GATK4. ### stdout; ```; WMCF9-CB5:shlee$ ./gatk LeftAlignAndTrimVariants -R ~/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V ~/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz -O zeta_snippet_leftalign.vcf.gz; Using GATK wrapper script /Users/shlee/Documents/branches/hellbender/build/install/gatk/bin/gatk; Running:; /Users/shlee/Documents/branches/hellbender/build/install/gatk/bin/gatk LeftAlignAndTrimVariants -R /Users/shlee/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V /Users/shlee/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz -O zeta_snippet_leftalign.vcf.gz; 16:34:35.251 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/shlee/Documents/branches/hellbender/build/install/gatk/lib/gkl-0.8.5.jar!/com/intel/gkl/native/libgkl_compression.dylib; Sep 05, 2018 4:34:35 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 16:34:35.413 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 16:34:35.414 INFO LeftAlignAndTrimVariants - The Genome Analysis Toolkit (GATK) v4.0.8.1-24-gb43bc27-SNAPSHOT; 16:34:35.414 INFO LeftAlignAndTrimVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 16:34:35.414 INFO LeftAlignAndTrimVariants - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 16:34:35.414 INFO LeftAlignAndTrimVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 16:34:35.414 INFO LeftAlignAndTrimVariants - Start Date/Time",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418875494:1059,authenticat,authenticated,1059,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418875494,1,['authenticat'],['authenticated']
Security,"Version:4.alpha.2-170-g8d06823-SNAPSHOT; 19:03:42.998 INFO ValidateSamFile - Defaults.BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.COMPRESSION_LEVEL : 1; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - Initializing engine; 19:03:43.000 INFO ValidateSamFile - Done initializing engine; ERROR: Record 9762, Read name 20GAVAAXX100126:7:2:8126:115177, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 24466, Read name 20FUKAAXX100202:7:46:13035:77621, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97940, Read name 20FUKAAXX100202:5:7:21464:86224, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97955, Read name 20GAVAAXX100126:5:7:1291:122571, bin field of BAM record does not equal value comp",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:1816,Validat,ValidateSamFile,1816,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,VsdHMuamF2YQ==) | `84.615% <ø> (ø)` | `22 <0> (ø)` | :arrow_down: |; | [...adinstitute/hellbender/tools/exome/PadTargets.java](https://codecov.io/gh/broadinstitute/gatk/pull/3135?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leG9tZS9QYWRUYXJnZXRzLmphdmE=) | `100% <ø> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...hellbender/tools/genome/SparkGenomeReadCounts.java](https://codecov.io/gh/broadinstitute/gatk/pull/3135?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9nZW5vbWUvU3BhcmtHZW5vbWVSZWFkQ291bnRzLmphdmE=) | `91.089% <ø> (ø)` | `18 <0> (ø)` | :arrow_down: |; | [...egmentation/PerformAlleleFractionSegmentation.java](https://codecov.io/gh/broadinstitute/gatk/pull/3135?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leG9tZS9zZWdtZW50YXRpb24vUGVyZm9ybUFsbGVsZUZyYWN0aW9uU2VnbWVudGF0aW9uLmphdmE=) | `88.889% <ø> (ø)` | `2 <0> (ø)` | :arrow_down: |; | [...llbender/tools/walkers/validation/Concordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/3135?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2UuamF2YQ==) | `88.542% <ø> (ø)` | `28 <0> (ø)` | :arrow_down: |; | [...ute/hellbender/tools/exome/ConvertACNVResults.java](https://codecov.io/gh/broadinstitute/gatk/pull/3135?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leG9tZS9Db252ZXJ0QUNOVlJlc3VsdHMuamF2YQ==) | `87.805% <ø> (ø)` | `4 <0> (ø)` | :arrow_down: |; | [...idation/AnnotateVcfWithExpectedAlleleFraction.java](https://codecov.io/gh/broadinstitute/gatk/pull/3135?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoRXhwZWN0ZWRBbGxlbGVGcmFjdGlvbi5qYXZh) | `96.429% <ø> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [...tools/exome/convertbed/ConvertBedToTargetFile.java](https://codecov.io/gh/broadinstitute/gatk/pull,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3135#issuecomment-309876624:2684,validat,validation,2684,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3135#issuecomment-309876624,1,['validat'],['validation']
Security,WDLs failing validation 😿,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8261#issuecomment-1483440501:13,validat,validation,13,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8261#issuecomment-1483440501,1,['validat'],['validation']
Security,"WGS validations are done and still look fine. @LeeTL1220 want to run your validations? 4.0.12.0 Docker + override jar should do the trick. In any case, I think the review can proceed.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5575#issuecomment-454765304:4,validat,validations,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5575#issuecomment-454765304,2,['validat'],['validations']
Security,"WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - Initializing engine; 19:03:43.000 INFO ValidateSamFile - Done initializing engine; ERROR: Record 9762, Read name 20GAVAAXX100126:7:2:8126:115177, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 24466, Read name 20FUKAAXX100202:7:46:13035:77621, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97940, Read name 20FUKAAXX100202:5:7:21464:86224, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97955, Read name 20GAVAAXX100126:5:7:1291:122571, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 112212, Read name 20GAVAAXX100126:8:1:1429:129840, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 126595, Read name 20FUKAAXX100202:6:46:9311:1219, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ...; ERROR: Read name 20FUKAAXX100202:3:66:14857:5877, Mate not found for paired read; ERROR: Read name 20GAVAAXX100126:3:42:3602:56427, Mate not found for paired read; ERROR: Read name 20FUKAAXX100202:3:43:9956:132423, Mate not found for paired read; ERROR: Read name 20GAVAAXX100126:5:28:11981:2516, Mate not found for paired read; ERROR: Read name 20FUKAAXX100202:6:24",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:2065,Validat,ValidateSamFile,2065,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,"We already added the functionality needed for the gCNV workflow to IntervalListTools in https://github.com/broadinstitute/picard/pull/1208. The issue is that the tool outputs each scattered interval list to a separate directory if the number of scatters is greater than 1, but it just outputs to a file (essentially a noop) if we don't need to scatter. Not sure the reason for this design, but it makes things difficult from the perspective of WDL. Would be easier if the expected output was always `Array[File]+`. I don't really see why IntervalListTools needs to create those intermediate directories (nor why the naming scheme is determined by `DecimalFormat(""0000"")`---don't think this is documented, either), but I am not sure if that behavior is expected by now or if it is safe to modify it. Pretty sure SplitIntervals is just calling the same backend class used by IntervalListTools. Perhaps that tool might've been spun off before we exposed the Picard tools? See e.g. https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435588845. I think we should try to avoid writing such custom/utility GATK tools unless really warranted.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6502#issuecomment-599639907:943,expose,exposed,943,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6502#issuecomment-599639907,1,['expose'],['exposed']
Security,"We also have to audit the data to identify private data, and replace or sanitize.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2063#issuecomment-235997161:16,audit,audit,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2063#issuecomment-235997161,2,"['audit', 'sanitiz']","['audit', 'sanitize']"
Security,"We can split the tests up into a bunch of build units, but we get rapidly diminishing returns since we spend minutes installing things and building the artifacts for every vm. Travis doesn't have any notion of a build pipeline, so we can't say ""build the artifact on 1 vm and then share it and run the tests on these 10 vms"". Since we have a hard limit of the number of VMs we can use at a time for DSDE ( currently 15) being less efficient is very bad news. ( We could of course pay for more... I recently asked travis support if we could switch to an unlimited pay for usage model and they said no. ) We could also try optimizing wasted vm time by prebuilding dockers to run in, but that's additional complication. (maybe not to much, might be worth it). We also would need a scheme for dividing tests evenly between VM's. I tried writing a testng test listener to distribute them between N nodes based on the hashcode of the test class, for use on circleci, but it fell over and exploded for some reason that I never debugged. We could either debug it, or possibly split the tests by splitting the list of test files and then passing those in specifically. (May run into character limits for command lines... ). Balancing it is going to be tricky though in any case since the tests are very unevenly expensive. (We could probably manually balance it since there are a small number of slow tests and the rest are so fast they don't really matter) . The easiest thing would be to set the test to run in parallel on their existing vm. I can try turning it on again. I remember it caused problems before though, which I assume we haven't addressed. Each vm has 2 cores, so we might see some speedup. I suspect we may be using both cores to some degree already, since performance nearly doubled when we switched from the 1 core to 2 core build machines. We could probably build a more efficient pipeline on jenkins if we wanted since it does have a notion of pipelines.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1769#issuecomment-214492346:912,hash,hashcode,912,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1769#issuecomment-214492346,1,['hash'],['hashcode']
Security,"We found an issue with the way GKL was freeing an internal data structure. The issue was exposed by the `IntelInflaterIntegrationTest`, which uses the Inflater API in a different way than HTSJDK and GATK. We've fixed that issue and the GATK integration tests pass. We're releasing GKL 0.4.1 now and will update this PR when 0.4.1 is available in Maven Central.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-282325096:89,expose,exposed,89,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-282325096,1,['expose'],['exposed']
Security,We had already planned to remove this limitation. The limitation comes from using an older version of TileDB in GenomicsDB. The latest version of TileDB has an API called array_move() to do this correctly which we will expose in GenomicsDB.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3411#issuecomment-320304844:219,expose,expose,219,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3411#issuecomment-320304844,1,['expose'],['expose']
Security,"We have access to data that should reproduce this issue, but can't post it here because it's not publicly shareable BAMs. Please let me know how I can share the data if someone decides to look at this issue. Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5513#issuecomment-446315089:8,access,access,8,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5513#issuecomment-446315089,1,['access'],['access']
Security,We have run this tools successfully with a number of crams and bam at this point so we will need access to the data to reproduce the issue on our end. Would that be possible @jjfarrell?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7182#issuecomment-819635502:97,access,access,97,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7182#issuecomment-819635502,1,['access'],['access']
Security,"We have to keep on top of the times. These are changes we pushed for, so; we can access genomic positions through the same interface on features,; intervals, and samrecords.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/330#issuecomment-85740663:81,access,access,81,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/330#issuecomment-85740663,1,['access'],['access']
Security,"We just merged PR #5562, which addresses one of @munrosa's missed calls. I am investigating the harder fix of threading in both directions from the first unique kmer. It seems that there is nothing fundamentally wrong with this change, but it exposes mapping artifacts that we have never had to handle before. I think I know how to address these but it will take a while. Maybe two months, though it's hard to guess.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3697#issuecomment-468028441:243,expose,exposes,243,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3697#issuecomment-468028441,1,['expose'],['exposes']
Security,We should currently be able to broadcast .2bit references stored in GCS buckets in the cloud. Whether it makes sense to do this vs. accessing the reference directly via GCS or the Google reference API is a topic for a future comparison.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1203#issuecomment-213150557:132,access,accessing,132,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1203#issuecomment-213150557,1,['access'],['accessing']
Security,"We should expose a `getSource()` method at the GATKRead level, and have GATK delegate to `samRecord.getFileSource()` in the `SAMRecord` case. We might need to do something extra to get HTSJDK to populate this field for us. Use case is a ReadsDataSource backed by multiple bam/cram inputs, with the reads merged into a single sorted stream, and the tool needing to be able to tell where each read came from. Can't always use read groups / sample names to accomplish this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8671#issuecomment-1919937519:10,expose,expose,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8671#issuecomment-1919937519,1,['expose'],['expose']
Security,"We will commit this separately, but I don't want to do that until we validate that it actually solves the problem for the other branch.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-827765900:69,validat,validate,69,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-827765900,1,['validat'],['validate']
Security,We're having issues with all of our tests today. Github is refusing our git-lfs requests because they're over quota and we need to figure out how to either authenticate our requests in a safe way from travis or figure out why we're suddenly going over quota. It happened very suddenly and I suspect there might be an issue on github's end..,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2506#issuecomment-292005363:156,authenticat,authenticate,156,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2506#issuecomment-292005363,1,['authenticat'],['authenticate']
Security,"We're marking all of these as bucket for now @lbergelson to unblock our work (with the exception of the `PSUtilsUnitTest`). They require authentication now, so need to be properly marked. The underlying issue should ultimately be fixed by https://github.com/broadinstitute/gatk/issues/958",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2706#issuecomment-300815096:137,authenticat,authentication,137,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2706#issuecomment-300815096,1,['authenticat'],['authentication']
Security,"We're seeing a lot of failures of the form:. ```; com.google.cloud.storage.StorageException: 806222273987-uilktks3j6i7962rp0v7nusveer58497@developer.gserviceaccount.com does not have serviceusage.services.use access to project 685190392835.; Caused by:; shaded.cloud_nio.com.google.api.client.googleapis.json.GoogleJsonResponseException: 403 Forbidden; {; ""code"" : 403,; ""errors"" : [ {; ""domain"" : ""global"",; ""message"" : ""806222273987-uilktks3j6i7962rp0v7nusveer58497@developer.gserviceaccount.com does not have serviceusage.services.use access to project 685190392835."",; ""reason"" : ""forbidden""; } ],; ""message"" : ""806222273987-uilktks3j6i7962rp0v7nusveer58497@developer.gserviceaccount.com does not have serviceusage.services.use access to project 685190392835.""; }; ```. It looks like it now requires some new permission for the service accounts but our existing service account doesn't have that permission.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6042#issuecomment-511986926:209,access,access,209,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6042#issuecomment-511986926,3,['access'],['access']
Security,We've been hit with a collective case of confusion. Of course this is going to fail. We're accessing a file on **local**. This is not visible to the executors on the other nodes. Thus the explosion.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1417#issuecomment-175758473:91,access,accessing,91,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1417#issuecomment-175758473,1,['access'],['accessing']
Security,"We've had to do that in other places... On Fri, Jan 12, 2018 at 3:20 PM, samuelklee <notifications@github.com>; wrote:. > To be clear, this will work perfectly fine as long as you have enough; > space in /dev/shm---which is typically true everywhere outside of our; > default Docker container.; >; > I'm loath to cripple a tool just because of limitations that are; > fundamentally elsewhere...let's just address those in the appropriate; > places. (Furthermore, I'm especially loath to write a plotting tool that; > takes ~5 minutes to generate a plot!) And yes, while it is not great that; > data.table forces us to use /dev/shm, I think fread(""grep ..."") is; > relatively standard.; >; > If --shm-size is indeed not exposed, why doesn't the Google backend scale; > /dev/shm or other tmpfs space with requested machine memory?; >; > If there really is no other way around it, then all we're doing is; > filtering out the lines beginning with @. We could do this first by; > calling system commands within R to write to a temporary file, and then; > reading that back in with fread. This seems hacky to me, but I've confirmed; > that it works within the Docker. This will solve our immediate problem, but; > I still think it's worth taking a look at those other limitations elsewhere; > now as well.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/4140#issuecomment-357337827>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ACDXkxNvcMcJfIhdlPhdU3vLHTiAVPPSks5tJ76mgaJpZM4RclpR>; > .; >. -- ; Lee Lichtenstein; Broad Institute; 75 Ames Street, Room 8011A; Cambridge, MA 02142; 617 714 8632",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4140#issuecomment-357349198:719,expose,exposed,719,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4140#issuecomment-357349198,1,['expose'],['exposed']
Security,"Well, when the `clearItems` call is removed from the `consumeFinalizeItems` else branch, some `HaplotypeCallerSparkIntegrationTest`s [fail](https://api.travis-ci.com/v3/job/173147001/log.txt) because `PushToPullIterator` doesn't call clearItems to reset the state when `consumeFinalizeItems` returns no items, and the next submit is rejected because eoi hasn't been reset. So, since `consumeFinalizeItems` can't reset/mutate the state when there are no items, then we can't assert the precondition that `endOfInput==false` in `submit`. So I'm removing the validation of that from both `ReservoirDownsampler` and `PositionalDownsampler`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5594#issuecomment-457870723:556,validat,validation,556,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5594#issuecomment-457870723,1,['validat'],['validation']
Security,"Well, you're welcome to use gatk-launch as a launch script if you'd like (and feel free to rename to whatever you like...) A. There are a few reasons we have spark and non-spark versions of the tools. . 1. We wanted to port and validate certain tools as quickly as possible and doing a direct port from gatk3 -> gatk4 was easier than making them sparkified at the same time. 2. There's a tradeoff in using spark where you end up spending more total cpu hours in order to finish a job faster. Ideally this would be 1:1, double the number of cores and you halve the time to finish a job. It never scales perfectly though, there's always some overhead for being parallel. Our production pipelines are extremely sensitive to cost and not very sensitive to runtime, so they prefer we have a version that's optimized to use the least cpu hours even if that means a longer runtime. Other users prefer to be able to finish a job quickly and are willing to pay slightly more to do so, so we also have a spark version. . 3. Some tool are complicated to make work well spark. Spark works best when you can divide the input data into independent shards and then process them separately. This is complicated for things like the AssemblyRegion walker where you need context around each location of interest. We had to do things like add extra overlapping padding and things like that to avoid boundary issues where there are shard divisions. We don't yet fully understand spark performance and it's caveats, we're looking into that actively now. We hope that we'll be able to optimize our tools so that a spark pipeline of several tools in series is faster than running the individual non-spark versions, since it lets us avoid doing things like loading the bam file multiple times from disk. Whether or not we can achieve this is still and open question though.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2345#issuecomment-273318100:228,validat,validate,228,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2345#issuecomment-273318100,1,['validat'],['validate']
Security,What about a light subclass ValidatedGenomeLoc? Looser tools can use GenomeLoc and stricter ones ValidatedGenomeLoc. Alternately: GenomeLoc.isValidated(),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/100#issuecomment-69766896:28,Validat,ValidatedGenomeLoc,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/100#issuecomment-69766896,2,['Validat'],['ValidatedGenomeLoc']
Security,"While a minor issue, moving to `slf4j-api` as the logging API and `slf4j-log4jxx` as the implementation would help with interoperability. For example, I'm working on a proposal for a separate library for conversions between formats, and currently the API passes in a slf4j `Logger` and an enum similar to `ValidationStringency`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2176#issuecomment-261286474:306,Validat,ValidationStringency,306,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2176#issuecomment-261286474,1,['Validat'],['ValidationStringency']
Security,"With `--genomicsdb-shared-posixfs-optimizations`, the storage system should only require read access. @droazen, will work towards a fix for this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8233#issuecomment-1468563326:94,access,access,94,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8233#issuecomment-1468563326,1,['access'],['access']
Security,"With a service account key set, it worked like a charm:. ```; $ ./gatk-launch PrintReadsSpark -I gs://jpmartin-testing-project/hellbender-test-inputs/CEUTrio.HiSeq.WGS.b37.ch20.1m-2m.NA12878.bam -O gs://jpmartin-testing-project/test-output/readcount --shardedOutput true -- --sparkRunner GCS --cluster jps-test-cluster; (...); [November 20, 2017 6:17:08 PM UTC] org.broadinstitute.hellbender.tools.spark.pipelines.PrintReadsSpark done. Elapsed time: 0.72 minutes.; Runtime.totalMemory()=670040064; Job [13c93a62-96d0-456e-91d1-ef7b20f1236b] finished successfully.; ```. Though I understand that [this is expected](https://github.com/broadinstitute/gatk/issues/3591#issuecomment-330650894). So next I tried it without any `HELLBEND*` environment variable and it worked as well!. ```; Job [6e2f2c6b-921a-4fdf-a42e-0706216b2098] finished successfully.; (...); $ gsutil ls -lh gs://jpmartin-testing-project/test-output/readcount/; 0 B 2017-11-20T18:28:27Z gs://jpmartin-testing-project/test-output/readcount/; 0 B 2017-11-20T18:28:52Z gs://jpmartin-testing-project/test-output/readcount/_SUCCESS; 120.25 MiB 2017-11-20T18:28:51Z gs://jpmartin-testing-project/test-output/readcount/part-r-00000.bam; ```. This is with `GOOGLE_APPLICATION_CREDENTIALS` set, as I believe is part of the GATK README instructions. Next I went to my repro code and tried it again with v30. It failed (`StorageException: Error code 404 trying to get security access token from Compute Engine metadata for the default service account.`) I'm not sure why but the new version is certainly an improvement over the previous one since it fixes `PrintReadsSpark`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3855#issuecomment-345788205:1422,secur,security,1422,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3855#issuecomment-345788205,2,"['access', 'secur']","['access', 'security']"
Security,"With some tweaks I see a good improvement. . First i tried it on our testing bam (on dr_runnable_haplotypecaller) and saw some speedup:. before, in GVCF mode. ```; real 6m6.430s; user 7m54.014s; sys 0m4.540s; ```. after. ```; real 5m58.246s; user 7m53.737s; sys 0m4.403s; ```. Then I rewrote it a bit by avoiding the `new String` calls and directly using the static `lastIndexOf` method from String that works on arrays (required copying code from the Java libraries because the right method is not accessible). The result was a 30s improvement over baseline (6%). ```; real 5m44.213s; user 7m26.240s; sys 0m3.916s; ```. So that would be a nice improvement but I'm not sure if copy/pasting code from the JDK is kosher license-wise. To be completely safe, @gspowley can you implement a clean-room version of `lastIndexOf(byte[] source, byte[] target)` so that we can replace `new String(reference).lastIndexOf(new String(alternate))` with `lastIndexOf(reference, alternate)`? Or let's find a library that we can use for this. I want to avoid `String` creation here because it's pretty expensive.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1677#issuecomment-204206963:499,access,accessible,499,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1677#issuecomment-204206963,1,['access'],['accessible']
Security,With this new version I'm able to make it fail again; I opened a million channels to read the same file (across 1k threads) and got the error below. Yes I know a million parallel reads on a single file is more than a normal user would issue. ```; shaded.cloud_nio.com.google.api.client.http.HttpRequest execute; WARNING: exception thrown while executing request; javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:992); 	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1375); 	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1403); 	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1387); 	at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:559); 	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); 	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1316); 	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1291); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getOutputStream(HttpsURLConnectionImpl.java:250); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:77); 	at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:972); 	at shaded.cloud_nio.com.google.auth.oauth2.ServiceAccountCredentials.refreshAccessToken(ServiceAccountCredentials.java:365); 	at shaded.cloud_nio.com.google.auth.oauth2.OAuth2Credentials.refresh(OAuth2Credentials.java:149); 	at shaded.cloud_nio.com.google.auth.oauth2.OAuth2Credentials.getRequestMetadata(OAuth2Credentials.java:135); 	at shaded.cloud_nio.com.google.auth.http.HttpCredentialsAdapter.initialize(HttpCredentialsAdapter.java:96); 	at com.google.cloud.http.HttpTransportOptions$1.initialize(HttpTransportOptions.java:156); 	at shaded.cloud_nio.c,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3070#issuecomment-309120156:456,secur,security,456,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3070#issuecomment-309120156,4,['secur'],['security']
Security,"With walkers it's done like this (in `GATKTool`):. ```; if (hasReference()){; // pass in reference if available, because CRAM files need it; factory = SamReaderFactory.makeDefault().validationStringency(ValidationStringency.SILENT).referenceSequence(referenceArguments.getReferenceFile());; } else if (hasCramInput()) {; throw new UserException.MissingReference(""A reference file is required when using CRAM files."");; }; ```. Unsure how to do the same for Hadoop-BAM",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1180#issuecomment-158524395:182,validat,validationStringency,182,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1180#issuecomment-158524395,2,"['Validat', 'validat']","['ValidationStringency', 'validationStringency']"
Security,"Would also be good to annotate which annotator (curr M2, HC and VA) has access to each annotation module.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3809#issuecomment-344760216:72,access,access,72,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3809#issuecomment-344760216,1,['access'],['access']
Security,Would also be good to identify what changes we'd need to make to the `broad-dsde-dev` firewall config to make this work there so that we can file a request with IT.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/975#issuecomment-148461723:86,firewall,firewall,86,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/975#issuecomment-148461723,1,['firewall'],['firewall']
Security,"Would that be like a way to run ValidateSamFile as a prelude to the actual; run, without doing it separately first?. On Mon, Feb 23, 2015 at 4:34 PM, jmthibault79 notifications@github.com; wrote:. > What about a ReadValidator which takes filters and errors out when any; > don't pass?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/broadinstitute/hellbender/issues/193#issuecomment-75638957; > . ## . Geraldine A. Van der Auwera, Ph.D.; Bioinformatics Scientist II; GATK Support & Outreach; Broad Institute",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/193#issuecomment-75645241:32,Validat,ValidateSamFile,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/193#issuecomment-75645241,1,['Validat'],['ValidateSamFile']
Security,"Wrote a SimpleCopyRatioCaller that is still relatively naive, but I think a bit more sensible than ReCapSegCaller. It does the following:. 1) use the non-log2 mean copy ratio to determine copy-neutral segments (those within 1 +/- x, where x is an exposed parameter),; 2) weight segments by length for determining the mean and standard deviation of the non-log2 copy ratio in copy-neutral segments,; 3) filter outlier copy-neutral segments by non-log2 copy ratio z-score,; 4) use the filtered copy-neutral segments to determine a length-weighted mean and standard deviation,; 5) call remaining segments using z-score based on this mean and standard deviation. @MartonKN take note of these changes! I am sure that your caller will still do much better, especially given the allele-fraction data.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3825#issuecomment-344590576:247,expose,exposed,247,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3825#issuecomment-344590576,1,['expose'],['exposed']
Security,WxlY3RWYXJpYW50c1VuaXRUZXN0LmphdmE=) | `100% <ø> (ø)` | `12 <0> (?)` | |; | [...nder/tools/spark/pipelines/ReadsPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4495/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrLmphdmE=) | `87.037% <0%> (ø)` | `17 <0> (ø)` | :arrow_down: |; | [...te/hellbender/engine/spark/VariantWalkerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4495/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvVmFyaWFudFdhbGtlclNwYXJrLmphdmE=) | `72.34% <0%> (-2.128%)` | `14 <0> (ø)` | |; | [...itute/hellbender/engine/spark/ReadWalkerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4495/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvUmVhZFdhbGtlclNwYXJrLmphdmE=) | `77.419% <0%> (ø)` | `10 <0> (ø)` | :arrow_down: |; | [...tools/spark/validation/CompareDuplicatesSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4495/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay92YWxpZGF0aW9uL0NvbXBhcmVEdXBsaWNhdGVzU3BhcmsuamF2YQ==) | `84.946% <0%> (ø)` | `24 <0> (ø)` | :arrow_down: |; | [...tute/hellbender/engine/spark/LocusWalkerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4495/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvTG9jdXNXYWxrZXJTcGFyay5qYXZh) | `77.778% <0%> (ø)` | `12 <0> (ø)` | :arrow_down: |; | [...stitute/hellbender/tools/HaplotypeCallerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4495/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9IYXBsb3R5cGVDYWxsZXJTcGFyay5qYXZh) | `84% <0%> (+23%)` | `30 <0> (+14)` | :arrow_up: |; | [...ava/org/broadinstitute/hellbender/utils/Utils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4495/diff?src=pr&el=,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4495#issuecomment-370539956:2174,validat,validation,2174,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4495#issuecomment-370539956,1,['validat'],['validation']
Security,XMuamF2YQ==) | `81.818% <0%> (-3.182%)` | `18% <0%> (+1%)` | |; | [...stitute/hellbender/utils/nio/PathLineIterator.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vUGF0aExpbmVJdGVyYXRvci5qYXZh) | `61.111% <0%> (-3.175%)` | `4% <0%> (ø)` | |; | [...rs/variantutils/SelectVariantsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9TZWxlY3RWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `98% <0%> (-2%)` | `71% <0%> (ø)` | |; | [...llbender/tools/walkers/validation/Concordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2UuamF2YQ==) | `87.179% <0%> (-1.417%)` | `41% <0%> (+2%)` | |; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `98.601% <0%> (-1.399%)` | `8% <0%> (+2%)` | |; | [...org/broadinstitute/hellbender/engine/GATKTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvR0FUS1Rvb2wuamF2YQ==) | `91.163% <0%> (-0.426%)` | `101% <0%> (+1%)` | |; | [...lbender/utils/variant/GATKVariantContextUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy92YXJpYW50L0dBVEtWYXJpYW50Q29udGV4dFV0aWxzLmphdmE=) | `84.892% <0%> (-0.172%)` | `256% <0%> (-4%)` | |; | [...ls/walkers/mutect/CreateSomaticPanelOfNormals.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5715#issuecomment-467092164:2435,validat,validation,2435,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5715#issuecomment-467092164,1,['validat'],['validation']
Security,XZh) | `60.57% <100%> (ø)` | `65 <0> (ø)` | :arrow_down: |; | [...nder/tools/walkers/vqsr/FilterVariantTranches.java](https://codecov.io/gh/broadinstitute/gatk/pull/5728/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvRmlsdGVyVmFyaWFudFRyYW5jaGVzLmphdmE=) | `92.241% <100%> (ø)` | `42 <0> (ø)` | :arrow_down: |; | [...ellbender/tools/funcotator/FilterFuncotations.java](https://codecov.io/gh/broadinstitute/gatk/pull/5728/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0ZpbHRlckZ1bmNvdGF0aW9ucy5qYXZh) | `93.103% <100%> (ø)` | `18 <0> (ø)` | :arrow_down: |; | [...itute/hellbender/tools/walkers/vqsr/ApplyVQSR.java](https://codecov.io/gh/broadinstitute/gatk/pull/5728/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQXBwbHlWUVNSLmphdmE=) | `75% <100%> (ø)` | `55 <0> (ø)` | :arrow_down: |; | [...r/tools/walkers/validation/RemoveNearbyIndels.java](https://codecov.io/gh/broadinstitute/gatk/pull/5728/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vUmVtb3ZlTmVhcmJ5SW5kZWxzLmphdmE=) | `90.476% <100%> (ø)` | `5 <0> (ø)` | :arrow_down: |; | [...dinstitute/hellbender/engine/GATKToolUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5728/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvR0FUS1Rvb2xVbml0VGVzdC5qYXZh) | `91.017% <100%> (ø)` | `71 <0> (ø)` | :arrow_down: |; | [...idation/AnnotateVcfWithExpectedAlleleFraction.java](https://codecov.io/gh/broadinstitute/gatk/pull/5728/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoRXhwZWN0ZWRBbGxlbGVGcmFjdGlvbi5qYXZh) | `96.429% <100%> (ø)` | `7 <0> (ø)` | :arrow_down: |; | ... and [23 more](https://codecov.io/gh/broadinstitute/gatk/pull/5728/diff?src=pr&,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5728#issuecomment-467660715:3055,validat,validation,3055,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5728#issuecomment-467660715,1,['validat'],['validation']
Security,YXRpb24vQ2FsY3VsYXRlQ29udGFtaW5hdGlvbi5qYXZh) | `97.207% <0%> (+1.339%)` | `56% <0%> (+18%)` | :arrow_up: |; | [...bender/tools/walkers/mutect/FilterMutectCalls.java](https://codecov.io/gh/broadinstitute/gatk/pull/4315/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9GaWx0ZXJNdXRlY3RDYWxscy5qYXZh) | `97.436% <0%> (+1.603%)` | `13% <0%> (+6%)` | :arrow_up: |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/4315/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb250ZXh0RmFjdG9yeS5qYXZh) | `73.973% <0%> (+2.74%)` | `11% <0%> (ø)` | :arrow_down: |; | [...ools/walkers/contamination/GetPileupSummaries.java](https://codecov.io/gh/broadinstitute/gatk/pull/4315/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2NvbnRhbWluYXRpb24vR2V0UGlsZXVwU3VtbWFyaWVzLmphdmE=) | `84.286% <0%> (+3.851%)` | `20% <0%> (+4%)` | :arrow_up: |; | [...ellbender/tools/exome/FilterByOrientationBias.java](https://codecov.io/gh/broadinstitute/gatk/pull/4315/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leG9tZS9GaWx0ZXJCeU9yaWVudGF0aW9uQmlhcy5qYXZh) | `86.905% <0%> (+3.886%)` | `21% <0%> (+7%)` | :arrow_up: |; | [...llbender/tools/walkers/validation/Concordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/4315/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2UuamF2YQ==) | `93.182% <0%> (+4.64%)` | `44% <0%> (+16%)` | :arrow_up: |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/4315/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `90% <0%> (+10%)` | `3% <0%> (ø)` | :arrow_down: |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4315#issuecomment-362048697:3167,validat,validation,3167,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4315#issuecomment-362048697,1,['validat'],['validation']
Security,"Yeah, I expect to need to rewrite tests for the final port. Thanks for any help on the validation data.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-358036823:87,validat,validation,87,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-358036823,1,['validat'],['validation']
Security,"Yeah, `--force` is the right thing to do, and I added it to build.gradle a few months ago as part of https://github.com/broadinstitute/gatk/pull/5081, but that PR has languished because my original package validation was lame, and I never went back and resolved it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5776#issuecomment-470985048:206,validat,validation,206,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5776#issuecomment-470985048,1,['validat'],['validation']
Security,"Yeah, it's definitely confusing, we should look into changing it for the future. We definitely do recommend using our launcher script though, which handles it for you. . It was tricky to enable both spark-submit and standalone running spark through the jar without having a way to inject the spark master as a command line argument, but there's probably a better way of handling it then the way we do. . I'm keeping this issue open, but since it's a pretty easy workaround I don't know when we'll be able to fix it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2718#issuecomment-302179455:281,inject,inject,281,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2718#issuecomment-302179455,1,['inject'],['inject']
Security,"Yep, antares58 is me. Elizabeth Lee. Sent with [Proton Mail](https://proton.me/) secure email. ------- Original Message -------; On Tuesday, November 22nd, 2022 at 7:14 AM, Anthony Dias-Ciarla ***@***.***> wrote:. > Hi ***@***.***(https://github.com/antares58) ,; >; > We created this ticket for one of our users on the GATK forum, [Elizabeth Lee](https://gatk.broadinstitute.org/hc/en-us/community/posts/9761457082907-JointGenotyping-ImportGvcfs-terminates-without-an-active-exception).; >; > In the interest of clarity, are you responding on her behalf? Are you the cluster admin? If you are not related to the original user, we will need to create a separate ticket.; >; > Thank you in advance for any clarity that you can provide!; >; > Best,; > Anthony; >; > —; > Reply to this email directly, [view it on GitHub](https://github.com/broadinstitute/gatk/issues/8076#issuecomment-1323834544), or [unsubscribe](https://github.com/notifications/unsubscribe-auth/AWNKFIEGLOGOYBSTJEDLUF3WJTPNBANCNFSM6AAAAAARQLF3GE).; > You are receiving this because you were mentioned.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8076#issuecomment-1336529947:81,secur,secure,81,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8076#issuecomment-1336529947,1,['secur'],['secure']
Security,"Yes I know but still, I gave it Storage Legacy Bucket Reader access to both buckets....; Is it possible it can come from the gs://gcp-public-data--gnomad or gs://genomics-public-data buckets?; <img width=""1352"" alt=""Screenshot 2021-10-05 at 16 05 09"" src=""https://user-images.githubusercontent.com/17239533/136094811-db2fc1ff-56f0-4ad7-a3b7-dac0e4663ad3.png"">; <img width=""1357"" alt=""Screenshot 2021-10-05 at 16 07 53"" src=""https://user-images.githubusercontent.com/17239533/136095179-34f0adac-7ae6-49bf-abbf-57c21c709ddb.png"">",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7492#issuecomment-934754734:61,access,access,61,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7492#issuecomment-934754734,1,['access'],['access']
Security,"Yes, I messed up the commit message and wrote that it ""resolves issue 5433"" instead of ""resolves issue #5433"". Without the hash I guess github assumes it's stupid meatbag language and ignores it. The bug should be fixed so I'm closing the issue manually. Sorry to leave this hanging the last month, and thanks for pointing it out.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5433#issuecomment-449899779:123,hash,hash,123,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5433#issuecomment-449899779,1,['hash'],['hash']
Security,"Yes, I see the same errors in `CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam` from `ValidateSamFile`. Here's some of the output:. ```; [March 9, 2017 7:03:42 PM EST] org.broadinstitute.hellbender.tools.picard.sam.ValidateSamFile --input src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam --use_jdk_deflater true --use_jdk_inflater true --MODE VERBOSE --MAX_OUTPUT 100 --IGNORE_WARNINGS false --VALIDATE_INDEX true --IS_BISULFITE_SEQUENCED false --MAX_OPEN_TEMP_FILES 8000 --VALIDATION_STRINGENCY STRICT --COMPRESSION_LEVEL 1 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX false --CREATE_MD5_FILE false --help false --version false --verbosity INFO --QUIET false; [March 9, 2017 7:03:42 PM EST] Executing as gspowley@dna on Linux 3.10.0-514.10.2.el7.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14; Version: Version:4.alpha.2-170-g8d06823-SNAPSHOT; 19:03:42.998 INFO ValidateSamFile - Defaults.BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.COMPRESSION_LEVEL : 1; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.00",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:78,Validat,ValidateSamFile,78,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,4,['Validat'],['ValidateSamFile']
Security,"Yes, ideally we'd generate these once and check them, but I think that would also require a little bit of process to ensure that they're always accessible to both gatkdoc and javadoc.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6606#issuecomment-640585794:144,access,accessible,144,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6606#issuecomment-640585794,1,['access'],['accessible']
Security,YnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `22.807% <ø> (ø)` | `2 <0> (ø)` | :arrow_down: |; | [...itute/hellbender/tools/walkers/bqsr/ApplyBQSR.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Jxc3IvQXBwbHlCUVNSLmphdmE=) | `91.667% <ø> (ø)` | `6 <0> (ø)` | :arrow_down: |; | [...stitute/hellbender/tools/spark/ApplyBQSRSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9BcHBseUJRU1JTcGFyay5qYXZh) | `100% <ø> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...llbender/tools/walkers/validation/Concordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2UuamF2YQ==) | `88.542% <ø> (ø)` | `28 <0> (ø)` | :arrow_down: |; | [.../tools/walkers/validation/CountFalsePositives.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ291bnRGYWxzZVBvc2l0aXZlcy5qYXZh) | `93.548% <ø> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [...ellbender/tools/walkers/bqsr/BaseRecalibrator.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Jxc3IvQmFzZVJlY2FsaWJyYXRvci5qYXZh) | `88.372% <ø> (ø)` | `11 <0> (ø)` | :arrow_down: |; | [.../hellbender/tools/spark/BaseRecalibratorSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmsuamF2YQ==) | `86.957% <100%> (ø)` | `9 <0> (ø)` | :arrow_down: |; | [...recalibration/RecalibrationArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4029#issuecomment-354921087:2131,validat,validation,2131,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4029#issuecomment-354921087,1,['validat'],['validation']
Security,"You might be right---and I think it's worse, in that the ReadCountCollection argument validation (for uniqueness of targets, etc.) also adds to the overhead.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2858#issuecomment-316481843:86,validat,validation,86,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2858#issuecomment-316481843,1,['validat'],['validation']
Security,You would not have access to docker container options when using the Google backend because the running of your image is all controlled by Pipelines API. You would be able to set that value when running on a local backend but thats probably not portable enough for your workflow.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4140#issuecomment-357313468:19,access,access,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4140#issuecomment-357313468,1,['access'],['access']
Security,"You're totally right about the assembly failures. As we talked about in person yesterday, I worry about biasing the; likelihoods when genotyping positions near homVar variants. For the; record, the conclusion of that conversation was to inject the GGA allele; into the five best assembled haplotypes, though I'm open to something less; heuristic than ""best five"" if anyone has a good idea. (I don't want to; double the number of haplotypes by adding the GGA allele into all of them). On Thu, Apr 4, 2019 at 2:19 PM David Benjamin <notifications@github.com>; wrote:. > Update: I wrote an integration test in my branch that runs M2 with; > --kmer-size 1 --dont-increase-kmer-sizes-for-cycles. It still calls the; > given alleles, whereas in master it does not.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/5857#issuecomment-480008571>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdF1sCpAlqKNa6S_qlL_ypNX_A0eGks5vdkI7gaJpZM4cbxVV>; > .; >. -- ; Laura Doyle Gauthier, Ph.D.; Associate Director, Germline Methods; Data Sciences Platform; gauthier@broadinstitute.org; Broad Institute of MIT & Harvard; 320 Charles St.; Cambridge MA 0214",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5857#issuecomment-480291626:237,inject,inject,237,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5857#issuecomment-480291626,1,['inject'],['inject']
Security,"Your interpretation sounds right, although I wish the language in the SAM spec were clearer - something like ""if 0x1 is unset, fields 0x2, 0x8, 0x20, 0x40, and 0x80 have no meaning and are ignored by the tools"". SAMRecord.IsValid() returns errors not only for 0x8(mate unmapped)/unpaired read, but also for the other four fields, so all of these errors would need to be removed. IsValid() also triggers an error when an unpaired read has RNEXT set, but the spec. ; doesn't appear to exclude this error. No error is triggered for the unpaired/PNEXT case. . So I agree that it looks like IsValid() should be changed to align with the spec. But I can also imagine potential pitfalls of leaving the GenomicsConverter code the way it is. The code adds spurious information to the bam that might cause problems with legacy versions of the tools. I don't know what the plans are for the state of the existing tool distribution once gatk4 is released. Is it possible that bam files produced in the cloud could make their way into gatk3 workflows, maybe via the sharing of bams between groups? If this happens, then unpaired reads processed in the cloud, with their mate unpaired flags set by the converter, could trigger validation errors when they are fed to the legacy tools. Is there a downside to altering the converter code as well as modifying the ; validator (I don't know what altering google packages entails...)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/569#issuecomment-114510392:1213,validat,validation,1213,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/569#issuecomment-114510392,2,['validat'],"['validation', 'validator']"
Security,"Your solution doesn't address your third listed drawback to the current; approach, though I'm not sure there's any way to do that that wouldn't; require a pretty dramatic change. It's not obvious to me why we wanted the given alleles in the graph; originally. Maybe the use case was variants from UG that we didn't; necessarily believe were aligned properly?. I don't have any objections, but I'd feel better if we had a better guess; at what the original method was trying to do. On Wed, Apr 3, 2019 at 9:56 PM David Benjamin <notifications@github.com>; wrote:. > In Mutect2 and HaplotypeCaller, we force-call alleles by injecting them; > into the ref haplotype, then threading these constructed haplotypes into; > the assembly graph with a large edge weight. There are several drawbacks to; > this approach:; >; > - The strange edge weights interfere with the AdaptiveChainPruner.; > - The large edge weights may not be large enough to avoid pruning when; > depth is extremely high.; > - The alleles may be lost if assembly fails.; > - If the alleles actually exist but are in phase with another variant; > we end up putting an enormous amount of weight on a false haplotype.; >; > We can get around these issue with the following method:; >; > - assemble haplotypes without regard to the force-called alleles.; > - if an allele is present in these haplotypes, do nothing further.; > - otherwise, add a haplotype in which the allele is injected into the; > reference haplotype.; >; > @LeeTL1220 <https://github.com/LeeTL1220> I prototyped this and it seems; > to resolve the missed forced alleles that Ziao found.; >; > @ldgauthier <https://github.com/ldgauthier> Can you think of any; > objections to making this change in HaplotypeCaller?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/5857>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdMcaTJg47gn",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5857#issuecomment-479916767:622,inject,injecting,622,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5857#issuecomment-479916767,1,['inject'],['injecting']
Security,"Yup, sorry about this---caught and fixed in #4280. I'd maybe count this as a `womtool validate` bug...?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4281#issuecomment-361069134:86,validat,validate,86,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4281#issuecomment-361069134,1,['validat'],['validate']
Security,"_64 ; INFO 10:49:20,811 HelpFormatter - Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14 ; INFO 10:49:20,813 HelpFormatter - Program Args: -T LeftAlignAndTrimVariants -R /Users/shlee/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V zeta_snippet.vcf.gz -o zeta_snippet_leftalign.vcf.gz ; INFO 10:49:20,819 HelpFormatter - Executing as shlee@WMCF9-CB5 on Mac OS X 10.11.6 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14. ; INFO 10:49:20,819 HelpFormatter - Date/Time: 2017/08/23 10:49:20 ; INFO 10:49:20,819 HelpFormatter - -------------------------------------------------------------------------------- ; INFO 10:49:20,819 HelpFormatter - -------------------------------------------------------------------------------- ; INFO 10:49:20,830 GenomeAnalysisEngine - Strictness is SILENT ; INFO 10:49:21,846 GenomeAnalysisEngine - Downsampling Settings: Method: BY_SAMPLE, Target Coverage: 1000 ; WARN 10:49:22,065 IndexDictionaryUtils - Track variant doesn't have a sequence dictionary built in, skipping dictionary validation ; INFO 10:49:22,989 GenomeAnalysisEngine - Preparing for traversal ; INFO 10:49:22,994 GenomeAnalysisEngine - Done preparing for traversal ; INFO 10:49:22,995 ProgressMeter - [INITIALIZATION COMPLETE; STARTING PROCESSING] ; INFO 10:49:22,995 ProgressMeter - | processed | time | per 1M | | total | remaining ; INFO 10:49:22,995 ProgressMeter - Location | sites | elapsed | sites | completed | runtime | runtime ; INFO 10:49:23,191 LeftAlignAndTrimVariants - Reference allele is too long (245) at position chr1:10146; skipping that record. Set --reference_window_stop >= 245 ; INFO 10:49:23,197 LeftAlignAndTrimVariants - Reference allele is too long (225) at position chr1:10178; skipping that record. Set --reference_window_stop >= 225 ; INFO 10:49:23,200 LeftAlignAndTrimVariants - Reference allele is too long (221) at position chr1:10213; skipping that record. Set --reference_window_stop >= 221 ; INFO 10:49:23,201 LeftAlignAndTrimVariants - Reference allele is",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-324361091:2110,validat,validation,2110,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-324361091,1,['validat'],['validation']
Security,"_STRINGENCY STRICT --COMPRESSION_LEVEL 1 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX false --CREATE_MD5_FILE false --help false --version false --verbosity INFO --QUIET false; [March 9, 2017 7:03:42 PM EST] Executing as gspowley@dna on Linux 3.10.0-514.10.2.el7.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14; Version: Version:4.alpha.2-170-g8d06823-SNAPSHOT; 19:03:42.998 INFO ValidateSamFile - Defaults.BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.COMPRESSION_LEVEL : 1; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - Initializing engine; 19:03:43.000 INFO ValidateSamFile - Done initializing engine; ERROR: Record 9762, Read name 20GAVAAXX100126:7:2:8126:115177, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 24466, Read name 20FUKAAXX100202:7:46:13035:77621, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to whic",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:1483,Validat,ValidateSamFile,1483,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,"`CommandLineProgram.instanceMain()` would be a good place to set the root logging level, after downgrading to log4j 1.x. Don't confuse the Picard logger (the `htsjdk.samtools.util.Log` class) with log4j. There is current an exposed argument to set the Picard logging level in `CommandLineProgram`:. ```; @Argument(doc = ""Control verbosity of logging."", common=true); public Log.LogLevel VERBOSITY = Log.LogLevel.INFO;; ```. You'll need to hook this up to log4j as well, and come up with a unified set of logging levels that work for both log4j and Log.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/243#issuecomment-113269714:224,expose,exposed,224,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/243#issuecomment-113269714,1,['expose'],['exposed']
Security,"```; $ git remote show origin; fatal: 'origin' does not appear to be a git repository; fatal: Could not read from remote repository. Please make sure you have the correct access rights; and the repository exists.; $ cat .git/config ; [core]; 	repositoryformatversion = 0; 	filemode = true; 	bare = false; 	logallrefupdates = true; $; ```. Hmm, here is the full log, actually I see some shared library errors at the top. Grr, I have `ncurses-6` library only. Why doesn't the build system die immediately upon an error? Anyway, this is exactly why Gentoo does not like executing zillions of evil jar files and other executables. As I said in the past, your step away from Apache ant build system was a very bad decision. You can see in the log the git tag too. I am not sure if the build system used `master` instead of `gatk` branch. Is that a problem?. [build.log.txt](https://github.com/broadinstitute/gatk/files/1933626/build.log.txt)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4687#issuecomment-383221183:171,access,access,171,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4687#issuecomment-383221183,1,['access'],['access']
Security,"```; @Test; public void testGetInvalidPCollectionLocal() {; // ValidationStringency.SILENT should prevent any read error even though the input has what looks like invalid reads.; Pipeline p = GATKTestPipeline.create();; ReadsDataflowSource source = new ReadsDataflowSource(hiSeqBam, p);; SAMFileHeader header = source.getHeader();; final SAMSequenceDictionary sequenceDictionary = header.getSequenceDictionary();; DataflowUtils.registerGATKCoders(p);; PCollection<GATKRead> reads = source.getReadPCollection(IntervalUtils.getAllIntervalsForReference(sequenceDictionary), ValidationStringency.SILENT);; PCollection<Long> count = reads.apply(Count.globally());; // There are 1677 total reads in this file; DataflowAssert.thatSingleton(count).isEqualTo(1677L);; p.run();; }; }; ```. Is a failing one with the out of memory errors. It's invalid in some way SAMRecords being encoded.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/754#issuecomment-126030342:63,Validat,ValidationStringency,63,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/754#issuecomment-126030342,2,['Validat'],['ValidationStringency']
Security,"```; java.lang.IllegalArgumentException: errorRateLog10 must be good probability but got NaN; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:730); at org.broadinstitute.hellbender.utils.QualityUtils.phredScaleLog10ErrorRate(QualityUtils.java:321); at org.broadinstitute.hellbender.utils.QualityUtils.phredScaleErrorRate(QualityUtils.java:307); at org.broadinstitute.hellbender.tools.exome.orientationbiasvariantfilter.PreAdapterOrientationScorer.scoreOrientationBiasMetricsOverContext(PreAdapterOrientationScorer.java:78); at org.broadinstitute.hellbender.tools.exome.FilterByOrientationBias.onTraversalStart(FilterByOrientationBias.java:191); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:964); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:138); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:191); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:210); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:162); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:205); at org.broadinstitute.hellbender.Main.main(Main.java:291); ```. These calls are from IonTorrent platform (not Illumina), maybe that could be an issue?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5553#issuecomment-485476488:139,validat,validateArg,139,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5553#issuecomment-485476488,1,['validat'],['validateArg']
Security,"a requirement is that we need to store and access the human reference file (~3GB, uncompressed) and a few other files < 1 GB each. The files will have public access so no additional security is required.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/388#issuecomment-94330634:43,access,access,43,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/388#issuecomment-94330634,3,"['access', 'secur']","['access', 'security']"
Security,a386c148681ab69025a0?src=pr&el=desc) will **increase** coverage by `0.008%`.; > The diff coverage is `n/a`. ```diff; @@ Coverage Diff @@; ## master #3027 +/- ##; ===============================================; + Coverage 79.973% 79.981% +0.008% ; Complexity 16727 16727 ; ===============================================; Files 1139 1139 ; Lines 60902 60902 ; Branches 9437 9437 ; ===============================================; + Hits 48705 48710 +5 ; + Misses 8401 8396 -5 ; Partials 3796 3796; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3027?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [.../DiscoverVariantsFromContigAlignmentsSGASpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3027?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9EaXNjb3ZlclZhcmlhbnRzRnJvbUNvbnRpZ0FsaWdubWVudHNTR0FTcGFyay5qYXZh) | `85.484% <ø> (ø)` | `13 <0> (ø)` | :arrow_down: |; | [...llbender/tools/walkers/validation/Concordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/3027?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2UuamF2YQ==) | `88.542% <ø> (ø)` | `28 <0> (ø)` | :arrow_down: |; | [.../DiscoverVariantsFromContigAlignmentsSAMSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3027?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9EaXNjb3ZlclZhcmlhbnRzRnJvbUNvbnRpZ0FsaWdubWVudHNTQU1TcGFyay5qYXZh) | `95.238% <ø> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [...ools/coveragemodel/germline/GermlineCNVCaller.java](https://codecov.io/gh/broadinstitute/gatk/pull/3027?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3ZlcmFnZW1vZGVsL2dlcm1saW5lL0dlcm1saW5lQ05WQ2FsbGVyLmphdmE=) | `73.196% <ø> (ø)` | `13 <0> (ø)` | :arrow_down: |; | [...exome/sexgenotyper/TargetCoverageSexGenotyper.java](https://codecov.io/gh/broadin,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3027#issuecomment-306340681:1255,validat,validation,1255,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3027#issuecomment-306340681,1,['validat'],['validation']
Security,a:109); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:131); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:104); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: java.net.SocketTimeoutException: Read timed out; 	at java.net.SocketInputStream.socketRead0(Native Method); 	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116); 	at java.net.SocketInputStream.read(SocketInputStream.java:171); 	at java.net.SocketInputStream.read(SocketInputStream.java:141); 	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); 	at sun.security.ssl.InputRecord.read(InputRecord.java:503); 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); 	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:930); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:105); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704); 	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1569); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1474); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300298180:6646,secur,security,6646,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300298180,1,['secur'],['security']
Security,aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3JuYXNlcS9HZW5lRXhwcmVzc2lvbkV2YWx1YXRpb24uamF2YQ==) | `89.286% <0.000%> (+0.397%)` | :arrow_up: |; | [...llbender/tools/spark/sv/evidence/ReadMetadata.java](https://codecov.io/gh/broadinstitute/gatk/pull/7634/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9ldmlkZW5jZS9SZWFkTWV0YWRhdGEuamF2YQ==) | `88.480% <0.000%> (+0.490%)` | :arrow_up: |; | [.../walkers/vqsr/CNNScoreVariantsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/7634/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `96.629% <0.000%> (+0.562%)` | :arrow_up: |; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/7634/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `79.570% <0.000%> (+1.075%)` | :arrow_up: |; | [...dinstitute/hellbender/tools/sv/SiteDepthtoBAF.java](https://codecov.io/gh/broadinstitute/gatk/pull/7634/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zdi9TaXRlRGVwdGh0b0JBRi5qYXZh) | `82.418% <0.000%> (+1.099%)` | :arrow_up: |; | [...lkers/validation/EvaluateInfoFieldConcordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/7634/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7634#issuecomment-1364365278:3439,Validat,ValidateBasicSomaticShortMutations,3439,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7634#issuecomment-1364365278,1,['Validat'],['ValidateBasicSomaticShortMutations']
Security,aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3JuYXNlcS9HZW5lRXhwcmVzc2lvbkV2YWx1YXRpb24uamF2YQ==) | `89.286% <0.000%> (+0.397%)` | :arrow_up: |; | [...llbender/tools/spark/sv/evidence/ReadMetadata.java](https://codecov.io/gh/broadinstitute/gatk/pull/7992/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9ldmlkZW5jZS9SZWFkTWV0YWRhdGEuamF2YQ==) | `88.480% <0.000%> (+0.490%)` | :arrow_up: |; | [.../walkers/vqsr/CNNScoreVariantsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/7992/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `96.629% <0.000%> (+0.562%)` | :arrow_up: |; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/7992/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `79.570% <0.000%> (+1.075%)` | :arrow_up: |; | [...dinstitute/hellbender/tools/sv/SiteDepthtoBAF.java](https://codecov.io/gh/broadinstitute/gatk/pull/7992/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zdi9TaXRlRGVwdGh0b0JBRi5qYXZh) | `82.418% <0.000%> (+1.099%)` | :arrow_up: |; | [...lkers/validation/EvaluateInfoFieldConcordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/7992/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7992#issuecomment-1218381617:3045,Validat,ValidateBasicSomaticShortMutations,3045,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7992#issuecomment-1218381617,1,['Validat'],['ValidateBasicSomaticShortMutations']
Security,aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3JuYXNlcS9HZW5lRXhwcmVzc2lvbkV2YWx1YXRpb24uamF2YQ==) | `89.286% <0.000%> (+0.397%)` | :arrow_up: |; | [...llbender/tools/spark/sv/evidence/ReadMetadata.java](https://codecov.io/gh/broadinstitute/gatk/pull/8048/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9ldmlkZW5jZS9SZWFkTWV0YWRhdGEuamF2YQ==) | `88.480% <0.000%> (+0.490%)` | :arrow_up: |; | [.../walkers/vqsr/CNNScoreVariantsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/8048/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `96.629% <0.000%> (+0.562%)` | :arrow_up: |; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/8048/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `79.570% <0.000%> (+1.075%)` | :arrow_up: |; | [...dinstitute/hellbender/tools/sv/SiteDepthtoBAF.java](https://codecov.io/gh/broadinstitute/gatk/pull/8048/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zdi9TaXRlRGVwdGh0b0JBRi5qYXZh) | `82.418% <0.000%> (+1.099%)` | :arrow_up: |; | [...lkers/validation/EvaluateInfoFieldConcordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/8048/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8048#issuecomment-1272595315:3847,Validat,ValidateBasicSomaticShortMutations,3847,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8048#issuecomment-1272595315,1,['Validat'],['ValidateBasicSomaticShortMutations']
Security,ad(BlobReadChannel.java:125); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:109); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:131); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:104); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: java.net.SocketTimeoutException: Read timed out; 	at java.net.SocketInputStream.socketRead0(Native Method); 	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116); 	at java.net.SocketInputStream.read(SocketInputStream.java:171); 	at java.net.SocketInputStream.read(SocketInputStream.java:141); 	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); 	at sun.security.ssl.InputRecord.read(InputRecord.java:503); 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); 	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:930); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:105); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704); 	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1569); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1474); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(H,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300298180:6519,secur,security,6519,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300298180,1,['secur'],['security']
Security,"ah---this is what I get for making an example inputs file when we really didn't need one and for choosing the full AoU 1k release (vat_kc_vat_1) as the default. I wanted to run the validations here because it is the largest dataset and it is the AoU data (not just Anvil data) BUT it has no values for gvs_all_ac or gvs_all_an yet because that step wasn't implemented by the time of creation. (Validation #9 was added by Lee recently) The table vat_jul18 does have those values as it was created just last week, but may get cleaned up...so this might be a good best practices question for what we run this on in the future if there is ever an automated version?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7365#issuecomment-886085289:181,validat,validations,181,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7365#issuecomment-886085289,2,"['Validat', 'validat']","['Validation', 'validations']"
Security,"al; se --min-assembly-region-size 50 --max-assembly-region-size 300 --active-probability-threshold 0.002 --max-prob-propagation-distance 50 --force-active false --assembly-region-padding 100 -; -padding-around-indels 75 --padding-around-snps 20 --padding-around-strs 75 --max-extension-into-assembly-region-padding-legacy 25 --max-reads-per-alignment-start 50 --enable-legacy-assemb; ly-region-trimming false --interval-set-rule UNION --interval-padding 0 --interval-exclusion-padding 0 --interval-merging-rule ALL --read-validation-stringency SILENT --seconds-between-pro; gress-updates 10.0 --disable-sequence-dictionary-validation false --create-output-bam-index true --create-output-bam-md5 false --create-output-variant-index true --create-output-variant-md; 5 false --max-variants-per-shard 0 --lenient false --add-output-sam-program-record true --add-output-vcf-command-line true --cloud-prefetch-buffer 40 --cloud-index-prefetch-buffer -1 --dis; able-bam-index-caching false --sites-only-vcf-output false --help false --version false --showHidden false --verbosity INFO --QUIET false --use-jdk-deflater false --use-jdk-inflater false ; --gcs-max-retries 20 --gcs-project-for-requester-pays --disable-tool-default-read-filters false --minimum-mapping-quality 20 --disable-tool-default-annotations false --enable-all-annotati; ons false --allow-old-rms-mapping-quality-annotation-data false"",Version=""4.4.0.0"",Date=""2023?8?21? CST ??5:33:54"">; ##GVCFBlock0-1=minGQ=0(inclusive),maxGQ=1(exclusive); ##GVCFBlock1-2=minGQ=1(inclusive),maxGQ=2(exclusive); ##GVCFBlock10-11=minGQ=10(inclusive),maxGQ=11(exclusive); ##GVCFBlock11-12=minGQ=11(inclusive),maxGQ=12(exclusive); ##GVCFBlock12-13=minGQ=12(inclusive),maxGQ=13(exclusive); ##GVCFBlock13-14=minGQ=13(inclusive),maxGQ=14(exclusive); ##GVCFBlock14-15=minGQ=14(inclusive),maxGQ=15(exclusive); ##GVCFBlock15-16=minGQ=15(inclusive),maxGQ=16(exclusive); ##GVCFBlock16-17=minGQ=16(inclusive),maxGQ=17(exclusive); ##GVCFBlock17-18=minGQ=17(inclusive)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8574#issuecomment-1793390789:9116,validat,validation,9116,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8574#issuecomment-1793390789,1,['validat'],['validation']
Security,"alt-table 13_tumor-alt.tsv -ref-hist 13_tumor-ref.metrics -alt-hist 13_tumor-alt-depth1.metrics -O 13_tumor-artifact-prior-table.tsv ; Using GATK jar /Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar LearnReadOrientationModel -alt-table 13_tumor-alt.tsv -ref-hist 13_tumor-ref.metrics -alt-hist 13_tumor-alt-depth1.metrics -O 13_tumor-artifact-prior-table.tsv; 12:16:19.960 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar!/com/intel/gkl/native/libgkl_compression.dylib; Nov 26, 2018 12:16:20 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 12:16:20.176 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26,",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:1145,authenticat,authenticated,1145,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615,1,['authenticat'],['authenticated']
Security,"am; VALIDATION_STRINGENCY=SILENT \; REFERENCE_SEQUENCE=Homo_sapiens_assembly38.fasta \; INCLUDE_BQ_HISTOGRAM=true \; INTERVALS=wgs_coverage_regions.hg38.interval_list \; OUTPUT=example.raw_wgs_metrics \; USE_FAST_ALGORITHM=true \; READ_LENGTH=250; ```. **Output:**; ```; 18:48:46.330 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/usr/local/share/picard-2.20.7-0/picard.jar!/com/intel/gkl/native/libgkl_compression.so; [Fri Sep 20 18:48:46 GMT 2019] CollectRawWgsMetrics INPUT=example.bam; [Fri Sep 20 18:48:46 GMT 2019] Executing as root@98e13b9f4ef1 on Linux 4.19.44+ amd64; OpenJDK 64-Bit Server VM 1.8.0_152-release-1056-b12; Deflater: Intel; Inflater: Intel; Provider GCS is not available; Picard version: 2.20.7-SNAPSHOT; [Fri Sep 20 18:49:00 GMT 2019] picard.analysis.CollectRawWgsMetrics done. Elapsed time: 0.24 minutes.; Runtime.totalMemory()=4054515712; To get help, see http://broadinstitute.github.io/picard/index.html#GettingHelp; Exception in thread ""main"" java.lang.IllegalArgumentException: The requested position is not covered by this StartEdgingRecordAndOffset object.; at htsjdk.samtools.util.AbstractRecordAndOffset.validateOffset(AbstractRecordAndOffset.java:146); at htsjdk.samtools.util.EdgingRecordAndOffset$StartEdgingRecordAndOffset.getBaseQuality(EdgingRecordAndOffset.java:112); at picard.analysis.FastWgsMetricsCollector.excludeByQuality(FastWgsMetricsCollector.java:189); at picard.analysis.FastWgsMetricsCollector.processRecord(FastWgsMetricsCollector.java:144); at picard.analysis.FastWgsMetricsCollector.addInfo(FastWgsMetricsCollector.java:105); at picard.analysis.WgsMetricsProcessorImpl.processFile(WgsMetricsProcessorImpl.java:93); at picard.analysis.CollectWgsMetrics.doWork(CollectWgsMetrics.java:231); at picard.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:305); at picard.cmdline.PicardCommandLine.instanceMain(PicardCommandLine.java:103); at picard.cmdline.PicardCommandLine.main(PicardCommandLine.java:113); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6163#issuecomment-533770047:1456,validat,validateOffset,1456,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6163#issuecomment-533770047,1,['validat'],['validateOffset']
Security,"ampleIndex);; final int[] indexesToRemove = evidences.stream().mapToInt(e -> {; final int index = evidenceIndexes.getInt(e);; if (index == MISSING_INDEX) {; throw new IllegalArgumentException(""evidence provided is not in sample"");; }; ```; We get an error when `evidenceIndexBySampleIndex(sampleIndex)` yields a `Map` that for some reason doesn't contain a read that it should. So let's investigate `evidenceIndexBySampleIndex()`. This method returns the `evidenceIndexBySampleIndex.get(sampleIndex)` field if it is not `null` (ie uninitialized); otherwise it fills it and then returns it. The code for filling it seems fine, and it explicitly loops over every sample read, so it's hard to see that the error could come from there. It seems rather that the problem is in returning the cached value whenever it is not `null`. The cached value of `evidenceIndexBySampleIndex.get(sampleIndex)` becomes invalid whenever reads are added or removed. However, you can check all the accesses of `evidenceIndexBySampleIndex` (there are only six) and verify that the class never accounts for this. So, suppose that an `AlleleLikelihoods` object invokes `evidenceIndexBySampleIndex(sampleIndex)` more than once and adds or removes reads between these. The second call returns the cached map from the first call, which is bogus. Even if it doesn't explain this issue, it is a bug. Now let's think about which public methods `evidenceIndexBySampleIndex(sampleIndex)` is called in and where this occurs in HaplotypeCaller:. * `addEvidence` (in HC this happens only in the likelihoods for annotations, downstream of our issue, so this is not the culprit).; * `filterPoorlyModeledEvidence` (this happens after Pair-HMM to the haplotype likelihoods, so not the culprit either); * `contaminationDownsampling`; * `retainEvidence` (hmmm in HC `readAlleleLikelihoods.retainEvidence(variantCallingRelevantOverlap::overlaps);` occurs immediately before `contaminationDownsampling`); * `indexOfEvidence` (nothing stands out)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6586#issuecomment-625021336:1166,access,accesses,1166,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6586#issuecomment-625021336,1,['access'],['accesses']
Security,"ance. The stuff I've; worked on is a bit of a corner case, and I didn't write much of the; infrastructure, I've been tacking on features. For now I've just been keeping the gzipped text files from the UCSC; browser. They're tab delimited with two header lines, the first basically; giving info about context of the data (it's genome data for the , hg38) and; the second being a description of the columns (each being of form; tract_name.column_name). There's nothing at all sophisticated about this; format, but it's pretty generalizable and easy to parse (and create). An; example; >; > # hgIntegrator: database=hg38 region=genome Wed Apr 18 11:15:34 2018; >; > #gap.chrom gap.chromStart gap.chromEnd gap.type; >; > chr1 0 10000 telomere; >; > chr1 207666 257666 contig; >; > chr1 297968 347968 contig; >; > chr1 535988 585988 contig; >; > chr1 2702781 2746290 scaffold; >; >; For what it's worth, your description of your approach sounds like a; sensible one to me.; I am concerned about the size of the data and how we'd access it. I've; chosen the tracts I have because they are small enough to jam into; resources. On Tue, May 1, 2018 at 8:06 AM samuelklee <notifications@github.com> wrote:. > @TedBrookings <https://github.com/TedBrookings> which formats are you; > using, in particular?; >; > In the CNV package, I've taken pains to unify how tabular data are; > represented in Java, depending on whether each record is Locatable or; > whether the collection of records can be associated with a sample name or; > sequence dictionary. This allows us to represent records that extend; > Locatable with multidimensional numerical or non-numerical annotations; > along with some metadata (sample name and sequence dictionary) with a; > minimum of boilerplate. There are also base methods for producing interval; > trees, etc.; >; > However, this unification effort was a quick push I made before release,; > so some polishing or redesigning may be warranted. We may also want to add; > more forms o",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4717#issuecomment-385683551:1152,access,access,1152,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4717#issuecomment-385683551,1,['access'],['access']
Security,and sometimes I get:. ```; java.net.SocketTimeoutException: Read timed out; 	at java.net.SocketInputStream.socketRead0(Native Method); 	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116); 	at java.net.SocketInputStream.read(SocketInputStream.java:170); 	at java.net.SocketInputStream.read(SocketInputStream.java:141); 	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); 	at sun.security.ssl.InputRecord.read(InputRecord.java:503); 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); 	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:930); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:105); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704); 	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1569); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1474); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:3; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2306#issuecomment-271423848:344,secur,security,344,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2306#issuecomment-271423848,5,['secur'],['security']
Security,"ark - Inflater: IntelInflater; 16:58:10.116 INFO PrintVariantsSpark - GCS max retries/reopens: 20; 16:58:10.116 INFO PrintVariantsSpark - Requester pays: disabled; 16:58:10.116 WARN PrintVariantsSpark - . ?[1m?[31m !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!. Warning: PrintVariantsSpark is a BETA tool and is not yet ready for use in production. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!?[0m. 16:58:10.116 INFO PrintVariantsSpark - Initializing engine; 16:58:10.116 INFO PrintVariantsSpark - Done initializing engine; 19/02/18 16:58:10 WARN org.apache.spark.SparkConf: The configuration key 'spark.yarn.executor.memoryOverhead' has been deprecated as of Spark 2.3 and may be removed in the future. Please use the new key 'spark.executor.memoryOverhead' instead.; 19/02/18 16:58:10 INFO org.spark_project.jetty.util.log: Logging initialized @8431ms; 19/02/18 16:58:11 INFO org.spark_project.jetty.server.Server: jetty-9.3.z-SNAPSHOT, build timestamp: unknown, git hash: unknown; 19/02/18 16:58:11 INFO org.spark_project.jetty.server.Server: Started @8536ms; 19/02/18 16:58:11 INFO org.spark_project.jetty.server.AbstractConnector: Started ServerConnector@45c90a05{HTTP/1.1,[http/1.1]}{0.0.0.0:4040}; 19/02/18 16:58:11 WARN org.apache.spark.scheduler.FairSchedulableBuilder: Fair Scheduler configuration file not found so jobs will be scheduled in FIFO order. To use fair scheduling, configure pools in fairscheduler.xml or set spark.scheduler.allocation.file to a file that contains the configuration.; 19/02/18 16:58:12 INFO org.apache.hadoop.yarn.client.RMProxy: Connecting to ResourceManager at gatk-test-2495f43b-04fc-49e7-aa0a-7108cc876246-m/10.240.0.11:8032; 19/02/18 16:58:13 INFO org.apache.hadoop.yarn.client.AHSProxy: Connecting to Application History server at gatk-test-2495f43b-04fc-49e7-aa0a-7108cc876246-m/10.240.0.11:10200; 19/02/18 16:58:15 INFO org.apache.hadoop.yarn.client.api.impl.YarnClientImpl: Submitted application application_155050875104",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3840#issuecomment-464825765:4367,hash,hash,4367,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3840#issuecomment-464825765,1,['hash'],['hash']
Security,"ata such as through GCE, and launching a GCE instance from a [relatively similar zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) such as (`us-east1-b`, `us-east1-c`, `us-east1-d`) the quicker the result. Sometimes the setup time to launch the instance might take some time as well. I don't have a setup as the Broad to run the same test and determine what might be happening, but I just re-ran the following test on an external (non-GCE) cluster and below are the results for a 1.46 GB file, which seem to come closer to @jean-philippe-martin's most recent results (and projected using my throughput, a 34.56 GB file would take about 13 min 38 sec, but not 55 min):. ``` Bash; $ gsutil ls -l gs://pgp-harvard-data-public/hu011C57/GS000018120-DID/GS000015172-ASM/GS01669-DNA_B05/ASM/REF/coverageRefScore-chr1-GS000015172-ASM.tsv.bz2. 1563675749 2014-04-24T20:26:25Z gs://pgp-harvard-data-public/hu011C57/GS000018120-DID/GS000015172-ASM/GS01669-DNA_B05/ASM/REF/coverageRefScore-chr1-GS000015172-ASM.tsv.bz2; TOTAL: 1 objects, 1563675749 bytes (1.46 GiB). $; $ time(gsutil cp -L transfer_statistics.txt gs://pgp-harvard-data-public/hu011C57/GS000018120-DID/GS000015172-ASM/GS01669-DNA_B05/ASM/REF/coverageRefScore-chr1-GS000015172-ASM.tsv.bz2 . ). Copying gs://pgp-harvard-data-public/hu011C57/GS000018120-DID/GS000015172-ASM/GS01669-DNA_B05/ASM/REF/coverageRefScore-chr1-GS000015172-ASM.tsv.bz2...; Downloading ..././coverageRefScore-chr1-GS000015172-ASM.tsv.bz2: 372.81 MiB/372.81 MiB; Downloading ..././coverageRefScore-chr1-GS000015172-ASM.tsv.bz2: 372.81 MiB/372.81 MiB; Downloading ..././coverageRefScore-chr1-GS000015172-ASM.tsv.bz2: 372.81 MiB/372.81 MiB; Downloading ..././coverageRefScore-chr1-GS000015172-ASM.tsv.bz2: 372.81 MiB/372.81 MiB; WARNING: Found no hashes to validate object downloaded to ./coverageRefScore-chr1-GS000015172-ASM.tsv.bz2. Integrity cannot be assured without hashes. real 0m31.112s; user 0m25.286s; sys 0m21.582s. $; ```. Hope it helps,; Paul",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1755#issuecomment-227913893:1990,hash,hashes,1990,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1755#issuecomment-227913893,4,"['Integrity', 'hash', 'validat']","['Integrity', 'hashes', 'validate']"
Security,"atic_old` folders.; - There is now just a matched-pair workflow and a panel workflow. We can add a single BAM case workflow or expand the matched-pair workflow to handle this, depending on the discussion at https://github.com/broadinstitute/gatk/issues/3657.; - WES/WGS is toggled by providing an optional target-file input.; - For all workflows, we always collect integer read counts; for WGS, these are output as both HDF5 and TSV and the HDF5 is used for subsequent input.; - For the case workflow, we always collect allelic counts at all sites and output as TSV.; - [x] We should output all data files as HDF5 by default and as TSV optionally. EDIT: This is done for `CollectFragmentCounts`.; - [x] We will need to update the workflows when @MartonKN and @asmirnov239 get `PreprocessIntervals` and `CollectReadCounts` merged, respectively. These tools will remove the awkwardness required by `PadTargets` and `CalculateTargetCoverage`/`SparkGenomeReadCounts`. Denoising:; - All parameters are exposed in the PoN creation tool (#3356).; - Without a PoN, standardization and optional GC correction are performed (#3570).; - Other than the minor point about sample mean/median being used inconsistently noted above, the denoising process is essentially exactly the same mathematically as before (""superficial"" differences include the vastly improved memory and I/O optimizations, the ability to adjust number of principal components used, the removal of redundant SVDs, the enforcement of consistent GC-bias correction).; - [ ] That said, I'll carry over this TODO from above: Revisit standardization procedure by checking with simulated data. We should make sure that the centering of the data does not rescale the true copy ratio.; - The only major difference is we no longer make a QC PoN or check for large events. This was performed awkwardly in the old pipeline, so I'd rather not port it over. Eventually we will do all denoising with the gCNV coverage model anyway.; - Pre/tangent-normalizati",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2858#issuecomment-333202828:1437,expose,exposed,1437,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2858#issuecomment-333202828,1,['expose'],['exposed']
Security,attending to this. The security posture has greatly improved from where we started. Community greatly benefits from your effort. I have migrated to using the 4.5 release after some regression testing. Below is a list of critical and high findings with 4.5 release. There are links to snyk version update recommendations. I know sometimes its not easy just to upgrade the library version as we could end up with run time errors. I am adding this here so that its handy when ever you look at this further. Thanks again. . packageName | version | severity | language | module_id; -- | -- | -- | -- | --; com.google.protobuf:protobuf-java | 3.7.1 | high | java | [SNYK-JAVA-COMGOOGLEPROTOBUF-2331703 ](https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLEPROTOBUF-2331703 ); com.google.protobuf:protobuf-java | 3.7.1 | high | java | [SNYK-JAVA-COMGOOGLEPROTOBUF-3167772](https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLEPROTOBUF-3167772); io.netty:netty-codec-http2 | 4.1.96.Final | high | java | [SNYK-JAVA-IONETTY-5953332](https://security.snyk.io/vuln/SNYK-JAVA-IONETTY-5953332); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342645](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342645); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342646](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342646); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342647](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342647); log4j:log4j | 1.2.17 | critical | java | [SNYK-JAVA-LOG4J-572732](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-572732); net.minidev:json-smart | 1.3.2 | high | java | [SNYK-JAVA-NETMINIDEV-3369748](https://security.snyk.io/vuln/SNYK-JAVA-NETMINIDEV-3369748); org.apache.zookeeper:zookeeper | 3.6.3 | high | java | [SNYK-JAVA-ORGAPACHEZOOKEEPER-5961102](https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEZOOKEEPER-5961102); org.codehaus.jettison:jettison | 1.1 | high | java | [SNYK-JAVA-ORGCODEHAUSJETTISON-3168085](https://security.snyk.io/vuln/SNYK-JAVA-ORGCODEHAUSJE,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8215#issuecomment-1890593067:1070,secur,security,1070,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8215#issuecomment-1890593067,1,['secur'],['security']
Security,b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `96.629% <0.000%> (+0.562%)` | :arrow_up: |; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/7634/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `79.570% <0.000%> (+1.075%)` | :arrow_up: |; | [...dinstitute/hellbender/tools/sv/SiteDepthtoBAF.java](https://codecov.io/gh/broadinstitute/gatk/pull/7634/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zdi9TaXRlRGVwdGh0b0JBRi5qYXZh) | `82.418% <0.000%> (+1.099%)` | :arrow_up: |; | [...lkers/validation/EvaluateInfoFieldConcordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/7634/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vRXZhbHVhdGVJbmZvRmllbGRDb25jb3JkYW5jZS5qYXZh) | `72.581% <0.000%> (+1.613%)` | :arrow_up: |; | [...va/org/broadinstitute/hellbender/GATKBaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/7634/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9HQVRLQmFzZVRlc3QuamF2YQ==) | `98.333% <0.000%> (+1.667%)` | :arrow_up: |; | [...kers/variantutils/UpdateVCFSequenceDictionary.java](https://codecov.io/gh/broadinstitute/gatk/pull/7634/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broad,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7634#issuecomment-1364365278:4284,validat,validation,4284,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7634#issuecomment-1364365278,1,['validat'],['validation']
Security,b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `96.629% <0.000%> (+0.562%)` | :arrow_up: |; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/7992/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `79.570% <0.000%> (+1.075%)` | :arrow_up: |; | [...dinstitute/hellbender/tools/sv/SiteDepthtoBAF.java](https://codecov.io/gh/broadinstitute/gatk/pull/7992/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zdi9TaXRlRGVwdGh0b0JBRi5qYXZh) | `82.418% <0.000%> (+1.099%)` | :arrow_up: |; | [...lkers/validation/EvaluateInfoFieldConcordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/7992/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vRXZhbHVhdGVJbmZvRmllbGRDb25jb3JkYW5jZS5qYXZh) | `72.581% <0.000%> (+1.613%)` | :arrow_up: |; | [...va/org/broadinstitute/hellbender/GATKBaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/7992/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9HQVRLQmFzZVRlc3QuamF2YQ==) | `98.333% <0.000%> (+1.667%)` | :arrow_up: |; | [...kers/variantutils/UpdateVCFSequenceDictionary.java](https://codecov.io/gh/broadinstitute/gatk/pull/7992/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broad,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7992#issuecomment-1218381617:3890,validat,validation,3890,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7992#issuecomment-1218381617,1,['validat'],['validation']
Security,"back to @lbergelson ; i exposed the hidden exceptions a bit more. Annoyingly I had to catch IOExceptions and SAMExceptions (an alternative would have been to let SAMExceptions go all the way up to the caller but that seemed suboptimal). Ideally, htsjdk should not have wrapped IOException in a SAMException but rather expose IOExceptions for what they are and leave their handling to the app layer (ie us)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/448#issuecomment-96774011:24,expose,exposed,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/448#issuecomment-96774011,2,['expose'],"['expose', 'exposed']"
Security,"bam --readValidationStringency SILENT --interval_set_rule UNION --interval_padding 0 --interval_exclusion_padding 0 --bamPartitionSize 0 --disableSequenceDictionaryValidation false --shardedOutput false --numReducers 0 --sparkMaster local[*] --help false --version false --showHidden false --verbosity INFO --QUIET false --use_jdk_deflater false --use_jdk_inflater false --disableToolDefaultReadFilters false; [May 5, 2017 5:03:35 PM UTC] Executing as yarn@ip-172-30-0-122 on Linux 4.4.35-33.55.amzn1.x86_64 amd64; OpenJDK 64-Bit Server VM 1.8.0_121-b13; Version: Version:4.alpha.2-252-gf627ed4-SNAPSHOT; 17/05/05 17:03:35 INFO SparkContext: Running Spark version 2.1.0; 17/05/05 17:03:35 INFO SecurityManager: Changing view acls to: yarn,hadoop; 17/05/05 17:03:35 INFO SecurityManager: Changing modify acls to: yarn,hadoop; 17/05/05 17:03:35 INFO SecurityManager: Changing view acls groups to: ; 17/05/05 17:03:35 INFO SecurityManager: Changing modify acls groups to: ; 17/05/05 17:03:35 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(yarn, hadoop); groups with view permissions: Set(); users with modify permissions: Set(yarn, hadoop); groups with modify permissions: Set(); 17/05/05 17:03:35 INFO Utils: Successfully started service 'sparkDriver' on port 42358.; 17/05/05 17:03:35 INFO SparkEnv: Registering MapOutputTracker; 17/05/05 17:03:35 INFO SparkEnv: Registering BlockManagerMaster; 17/05/05 17:03:35 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information; 17/05/05 17:03:35 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up; 17/05/05 17:03:35 INFO DiskBlockManager: Created local directory at /mnt/yarn/usercache/hadoop/appcache/application_1493961816416_0010/blockmgr-356a706f-2395-4ef6-985a-d3a7d7b01a8a; 17/05/05 17:03:35 INFO DiskBlockManager: Created local directory at /mnt1/yarn/usercache/hadoop/appcache/application_1493961816416_0010/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2666#issuecomment-299525046:3074,Secur,SecurityManager,3074,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2666#issuecomment-299525046,7,"['Secur', 'authenticat']","['SecurityManager', 'authentication']"
Security,"bin/gatk LeftAlignAndTrimVariants -R /Users/shlee/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V /Users/shlee/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz --maxIndelSize 250 -O zeta_snippet_leftalign_maxindelsize250_splitmultiallelics.vcf.gz --splitMultiallelics; 17:52:19.004 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/shlee/Documents/branches/hellbender/build/install/gatk/lib/gkl-0.8.5.jar!/com/intel/gkl/native/libgkl_compression.dylib; Sep 05, 2018 5:52:19 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 17:52:19.130 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 17:52:19.131 INFO LeftAlignAndTrimVariants - The Genome Analysis Toolkit (GATK) v4.0.8.1-24-gb43bc27-SNAPSHOT; 17:52:19.131 INFO LeftAlignAndTrimVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 17:52:19.131 INFO LeftAlignAndTrimVariants - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 17:52:19.131 INFO LeftAlignAndTrimVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 17:52:19.131 INFO LeftAlignAndTrimVariants - Start Date/Time: September 5, 2018 5:52:18 PM EDT; 17:52:19.131 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 17:52:19.131 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 17:52:19.131 INFO LeftAlignAndTrimVariants - HTSJDK Version: 2.16.0; 17:52:19.132 INFO LeftAlignAndTrimVariants - Picard V",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418893971:1495,authenticat,authentication,1495,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418893971,1,['authenticat'],['authentication']
Security,"branches/hellbender/build/install/gatk/bin/gatk LeftAlignAndTrimVariants -R /Users/shlee/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V /Users/shlee/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz --max-indel-length 250 -O zeta_snippet_leftalign_250_96branch.vcf.gz; 14:03:44.243 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/shlee/Documents/branches/hellbender/build/install/gatk/lib/gkl-0.8.5.jar!/com/intel/gkl/native/libgkl_compression.dylib; Sep 06, 2018 2:03:44 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 14:03:44.358 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 14:03:44.358 INFO LeftAlignAndTrimVariants - The Genome Analysis Toolkit (GATK) v4.0.8.1-25-g0c6f06f-SNAPSHOT; 14:03:44.359 INFO LeftAlignAndTrimVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 14:03:44.359 INFO LeftAlignAndTrimVariants - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 14:03:44.359 INFO LeftAlignAndTrimVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 14:03:44.359 INFO LeftAlignAndTrimVariants - Start Date/Time: September 6, 2018 2:03:44 PM EDT; 14:03:44.359 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 14:03:44.359 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 14:03:44.359 INFO LeftAlignAndTrimVariants - HTSJDK Version: 2.16.0; 14:03:44.359 INFO LeftAlignAndTrimVariants - Picard V",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-419190326:7452,authenticat,authentication,7452,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-419190326,1,['authenticat'],['authentication']
Security,"broadinstitute.hellbender.tools.funcotator.Funcotator).; log4j:WARN Please initialize the log4j system properly.; log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.; 23:01:58.560 INFO FeatureManager - Using codec GencodeGtfCodec to read file file:///omics/chatchawit/bundle/test/gencode/hg38/gencode.v27.chr_patch_hapl_scaff.annotation.REORDERED.gtf; 23:02:05.335 INFO ProgressMeter - Starting traversal; 23:02:05.337 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 23:02:06.530 INFO Funcotator - Shutting down engine; [April 27, 2018 11:02:06 PM ICT] org.broadinstitute.hellbender.tools.funcotator.Funcotator done. Elapsed time: 0.16 minutes.; Runtime.totalMemory()=3420979200; java.lang.IllegalArgumentException: Invalid interval. Contig:ENST00000342066.7|ENSG00000187634.11|OTTHUMG00000040719.10|OTTHUMT00000276866.2|SAMD11-202|SAMD11|2551|protein_coding| start:0 end:0; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:687); at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:37); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.getCodingSequenceFromTranscriptFasta(GencodeFuncotationFactory.java:418); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createSequenceComparison(GencodeFuncotationFactory.java:1177); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createCodingRegionFuncotation(GencodeFuncotationFactory.java:619); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createGencodeFuncotationOnTranscript(GencodeFuncotationFactory.java:575); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createFuncotations(GencodeFuncotationFa",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4712#issuecomment-385021157:7219,validat,validateArg,7219,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4712#issuecomment-385021157,1,['validat'],['validateArg']
Security,"but for fingerprinting it seems that since it is effectively random-access,; perhaps prefetching will not be worth it?. On Fri, Apr 12, 2019 at 2:32 PM droazen <notifications@github.com> wrote:. > @yfarjoun <https://github.com/yfarjoun> We should sit down at some point; > to discuss the best way to activate the prefetching in Picard. It may be a; > little less trivial than I had thought based on the above, but should still; > be fairly simple.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/5882#issuecomment-482678256>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ACnk0ptBXdOQ-9HlXMjjpFHI_zp-cQJqks5vgNEzgaJpZM4csje4>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5882#issuecomment-482678782:68,access,access,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5882#issuecomment-482678782,1,['access'],['access']
Security,"c/user/farrell/.sparkStaging/application_1542127286896_0153/__spark_libs__7473738539612638927.zip; 2019-01-07 11:33:38 INFO Client:54 - Uploading resource file:/tmp/spark-1ac79f09-1a36-4668-92d9-0739775f98ed/__spark_conf__4147634812449814799.zip -> hdfs://scc/user/farrell/.sparkStaging/application_1542127286896_0153/__spark_conf__.zip; 2019-01-07 11:33:38 INFO SecurityManager:54 - Changing view acls to: farrell; 2019-01-07 11:33:38 INFO SecurityManager:54 - Changing modify acls to: farrell; 2019-01-07 11:33:38 INFO SecurityManager:54 - Changing view acls groups to:; 2019-01-07 11:33:38 INFO SecurityManager:54 - Changing modify acls groups to:; 2019-01-07 11:33:38 INFO SecurityManager:54 - SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(farrell); groups with view permissions: Set(); users with modify permissions: Set(farrell); groups with modify permissions: Set(); 2019-01-07 11:33:38 INFO Client:54 - Submitting application application_1542127286896_0153 to ResourceManager; 2019-01-07 11:33:38 INFO YarnClientImpl:251 - Submitted application application_1542127286896_0153; 2019-01-07 11:33:38 INFO SchedulerExtensionServices:54 - Starting Yarn extension services with app application_1542127286896_0153 and attemptId None; 2019-01-07 11:33:39 INFO Client:54 - Application report for application_1542127286896_0153 (state: ACCEPTED); 2019-01-07 11:33:39 INFO Client:54 -; client token: Token { kind: YARN_CLIENT_TOKEN, service: }; diagnostics: N/A; ApplicationMaster host: N/A; ApplicationMaster RPC port: -1; queue: default; start time: 1546878818531; final status: UNDEFINED; tracking URL: https://scc-hsn1.scc.bu.edu:8090/proxy/application_1542127286896_0153/; user: farrell; 2019-01-07 11:33:40 INFO Client:54 - Application report for application_1542127286896_0153 (state: ACCEPTED); 2019-01-07 11:33:41 INFO Client:54 - Application report for application_1542127286896_0153 (state: ACCEPTED); 2019-01-07 11:33:42 INFO Client:54 - Applic",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5547#issuecomment-451999969:12226,Secur,SecurityManager,12226,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5547#issuecomment-451999969,7,"['Secur', 'authenticat']","['SecurityManager', 'authentication']"
Security,"c/user/farrell/.sparkStaging/application_1542127286896_0166/__spark_libs__7821719163562430010.zip; 2019-01-09 13:35:22 INFO Client:54 - Uploading resource file:/tmp/spark-69cc5c72-eff6-4259-8b3b-12fa6f8c42b0/__spark_conf__4520928824604875683.zip -> hdfs://scc/user/farrell/.sparkStaging/application_1542127286896_0166/__spark_conf__.zip; 2019-01-09 13:35:22 INFO SecurityManager:54 - Changing view acls to: farrell; 2019-01-09 13:35:22 INFO SecurityManager:54 - Changing modify acls to: farrell; 2019-01-09 13:35:22 INFO SecurityManager:54 - Changing view acls groups to:; 2019-01-09 13:35:22 INFO SecurityManager:54 - Changing modify acls groups to:; 2019-01-09 13:35:22 INFO SecurityManager:54 - SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(farrell); groups with view permissions: Set(); users with modify permissions: Set(farrell); groups with modify permissions: Set(); 2019-01-09 13:35:22 INFO Client:54 - Submitting application application_1542127286896_0166 to ResourceManager; 2019-01-09 13:35:22 INFO YarnClientImpl:251 - Submitted application application_1542127286896_0166; 2019-01-09 13:35:22 INFO SchedulerExtensionServices:54 - Starting Yarn extension services with app application_1542127286896_0166 and attemptId None; 2019-01-09 13:35:23 INFO Client:54 - Application report for application_1542127286896_0166 (state: ACCEPTED); 2019-01-09 13:35:23 INFO Client:54 -; client token: Token { kind: YARN_CLIENT_TOKEN, service: }; diagnostics: N/A; ApplicationMaster host: N/A; ApplicationMaster RPC port: -1; queue: default; start time: 1547058922320; final status: UNDEFINED; tracking URL: https://scc-hsn1.scc.bu.edu:8090/proxy/application_1542127286896_0166/; user: farrell; 2019-01-09 13:35:24 INFO Client:54 - Application report for application_1542127286896_0166 (state: ACCEPTED); 2019-01-09 13:35:25 INFO Client:54 - Application report for application_1542127286896_0166 (state: ACCEPTED); 2019-01-09 13:35:26 INFO Client:54 - Applic",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5547#issuecomment-452814616:11965,Secur,SecurityManager,11965,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5547#issuecomment-452814616,7,"['Secur', 'authenticat']","['SecurityManager', 'authentication']"
Security,c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9VdGlscy5qYXZh) | `80.593% <ø> (-0.309%)` | `124 <0> (-3)` | |; | [...rg/broadinstitute/hellbender/utils/io/IOUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2651?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pby9JT1V0aWxzLmphdmE=) | `59.459% <100%> (+2.629%)` | `48 <5> (+3)` | :arrow_up: |; | [...institute/hellbender/engine/FeatureDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/2651?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvRmVhdHVyZURhdGFTb3VyY2UuamF2YQ==) | `73.6% <100%> (ø)` | `37 <0> (ø)` | :arrow_down: |; | [...roadinstitute/hellbender/engine/ProgressMeter.java](https://codecov.io/gh/broadinstitute/gatk/pull/2651?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUHJvZ3Jlc3NNZXRlci5qYXZh) | `93.75% <0%> (-1.563%)` | `21% <0%> (-1%)` | |; | [...r/tools/walkers/variantutils/ValidateVariants.java](https://codecov.io/gh/broadinstitute/gatk/pull/2651?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9WYWxpZGF0ZVZhcmlhbnRzLmphdmE=) | `81.081% <0%> (-0.737%)` | `24% <0%> (+8%)` | |; | [...org/broadinstitute/hellbender/utils/MathUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2651?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9NYXRoVXRpbHMuamF2YQ==) | `81.009% <0%> (+1.638%)` | `170% <0%> (+29%)` | :arrow_up: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2651?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `74.026% <0%> (+1.948%)` | `35% <0%> (ø)` | :arrow_down: |; | [...ender/utils/nio/SeekableByteChannelPrefetcher.java](https://codecov.io/gh/broadinstitute/gatk/pull/2651?src=pr&el=tree#diff-c3JjL21haW4vamF2YS,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2651#issuecomment-298994813:2050,Validat,ValidateVariants,2050,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2651#issuecomment-298994813,1,['Validat'],['ValidateVariants']
Security,c=pr&el=desc) will **decrease** coverage by `0.002%`.; > The diff coverage is `86.667%`. ```diff; @@ Coverage Diff @@; ## master #5718 +/- ##; ===============================================; - Coverage 87.069% 87.067% -0.003% ; - Complexity 31875 31880 +5 ; ===============================================; Files 1940 1940 ; Lines 146738 146756 +18 ; Branches 16226 16229 +3 ; ===============================================; + Hits 127764 127776 +12 ; - Misses 13061 13065 +4 ; - Partials 5913 5915 +2; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5718?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5718/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `98.601% <100%> (-1.399%)` | `8 <6> (+2)` | |; | [...llbender/tools/walkers/validation/Concordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/5718/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2UuamF2YQ==) | `87.179% <50%> (-1.417%)` | `41 <0> (+2)` | |; | [...oadinstitute/hellbender/utils/pairhmm/PairHMM.java](https://codecov.io/gh/broadinstitute/gatk/pull/5718/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9wYWlyaG1tL1BhaXJITU0uamF2YQ==) | `74.82% <0%> (-3.597%)` | `24% <0%> (ø)` | |; | [...hellbender/utils/pairhmm/VectorLoglessPairHMM.java](https://codecov.io/gh/broadinstitute/gatk/pull/5718/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9wYWlyaG1tL1ZlY3RvckxvZ2xlc3NQYWlySE1NLmphdmE=) | `85.526% <0%> (-1.316%)` | `12% <0%> (ø)` | |; | [...nder/utils/runtime/StreamingProcessController.java](https://codecov.io/gh/broadinstitute/gatk/pull/5718/diff?src=pr&el=tree#diff-c3JjL21haW4va,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5718#issuecomment-467164762:1278,validat,validation,1278,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5718#issuecomment-467164762,1,['validat'],['validation']
Security,"d binding in [jar:file:/mnt/yarn/usercache/hadoop/filecache/37/__spark_libs__6987413740287883326.zip/slf4j-log4j12-1.7.16.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: Found binding in [jar:file:/usr/lib/hadoop/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.; SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]; 17/05/05 17:03:30 INFO SignalUtils: Registered signal handler for TERM; 17/05/05 17:03:30 INFO SignalUtils: Registered signal handler for HUP; 17/05/05 17:03:30 INFO SignalUtils: Registered signal handler for INT; 17/05/05 17:03:30 INFO ApplicationMaster: Preparing Local resources; 17/05/05 17:03:32 INFO ApplicationMaster: ApplicationAttemptId: appattempt_1493961816416_0010_000002; 17/05/05 17:03:32 INFO SecurityManager: Changing view acls to: yarn,hadoop; 17/05/05 17:03:32 INFO SecurityManager: Changing modify acls to: yarn,hadoop; 17/05/05 17:03:32 INFO SecurityManager: Changing view acls groups to: ; 17/05/05 17:03:32 INFO SecurityManager: Changing modify acls groups to: ; 17/05/05 17:03:32 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(yarn, hadoop); groups with view permissions: Set(); users with modify permissions: Set(yarn, hadoop); groups with modify permissions: Set(); 17/05/05 17:03:32 INFO ApplicationMaster: Starting the user application in a separate Thread; 17/05/05 17:03:32 INFO ApplicationMaster: Waiting for spark context initialization...; [May 5, 2017 5:03:35 PM UTC] org.broadinstitute.hellbender.tools.spark.pipelines.PrintReadsSpark --output hdfs:///output2.bam --input hdfs:///chr1.bam --readValidationStringency SILENT --interval_set_rule UNION --interval_padding 0 --interval_exclusion_padding 0 --bamPartitionSize 0 --disableSequenceDictionaryValidation false --shardedOutput false --numReducers 0 --sparkMaster local[*] --help false --version false ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2666#issuecomment-299525046:1501,Secur,SecurityManager,1501,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2666#issuecomment-299525046,7,"['Secur', 'authenticat']","['SecurityManager', 'authentication']"
Security,"d positives and negatives and use the existing code for extracting labels, but this will require a bit of engineering and be more trouble than it's worth. There are other options---see https://ir.cwi.nl/pub/30479, for example. We might want to experiment with the LL score discussed there (see https://www.aaai.org/Papers/ICML/2003/ICML03-060.pdf for the original paper---although note that despite the paper's high citation count, I'm not sure what the canonical name for this metric actually is, but it doesn't appear to be ""LL score""---perhaps someone else knows or has better Google-fu and can figure it out) before moving on to their methods for estimating F1. Doing a literature search for other discussions of optimizing F1 or other metrics in the context of positive-unlabeled learning might be worthwhile, but I think most methods will probably involve some sort of estimation of the base rate in unlabeled data. I think we may have to add some mechanism for holding out a validation set during training if we want to automatically tune thresholds in a rigorous fashion. Shouldn't be too bad---we can just have the training tool randomly mask out a set of the truth and pass the mask to the scoring tool (or maybe just determine the threshold in the training tool, if we are running in positive/negative mode and have access to unlabeled data)---but does add a couple of parameters to the tool interfaces. This also adds additional dependence on the quality of the truth resources. I think an implicit assumption in any use of the truth---even just thresholding/calibrating by sensitivity---is that it is a random sample; however, I'm not sure how true this is in actual use. For example, in malaria, it looks like we may have to resort to using a callset that has been very conservatively filtered as truth, which will bias us towards high scores and the peaks of the positive distribution. Perhaps we can also experiment with just treating training/truth on an equal footing (I think the d",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1062931241:1257,validat,validation,1257,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1062931241,1,['validat'],['validation']
Security,"de.v27.chr_patch_hapl_scaff.annotation.REORDERED.gtf; WARNING	2018-05-23 23:24:53	AsciiLineReader	Creating an indexable source for an AsciiFeatureCodec using a stream that is neither a PositionalBufferedStream nor a BlockCompressedInputStream; 23:25:09.380 INFO ProgressMeter - Starting traversal; 23:25:09.381 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 23:25:20.674 INFO ProgressMeter - chr1:24929636 0.2 3000 15941.9; 23:25:42.601 INFO ProgressMeter - chr1:64681324 0.6 6000 10837.2; 23:25:54.659 INFO ProgressMeter - chr1:156245393 0.8 9000 11926.3; 23:26:06.846 INFO ProgressMeter - chr1:206965947 1.0 12000 12529.6; 23:26:12.318 INFO Funcotator - Shutting down engine; [May 23, 2018 11:26:12 PM ICT] org.broadinstitute.hellbender.tools.funcotator.Funcotator done. Elapsed time: 1.38 minutes.; Runtime.totalMemory()=10974920704; java.lang.IllegalArgumentException: Genomic positions must be > 0.; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:722); 	at org.broadinstitute.hellbender.utils.param.ParamUtils.isPositive(ParamUtils.java:153); 	at org.broadinstitute.hellbender.tools.funcotator.FuncotatorUtils.getAlignedPosition(FuncotatorUtils.java:336); 	at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createSequenceComparison(GencodeFuncotationFactory.java:1392); 	at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createCodingRegionFuncotationForProteinCodingFeature(GencodeFuncotationFactory.java:751); 	at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createExonFuncotation(GencodeFuncotationFactory.java:649); 	at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createGencodeFuncotationOnTranscript(GencodeFuncotationFactory.java:609); 	at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.create",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4712#issuecomment-391421032:4514,validat,validateArg,4514,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4712#issuecomment-391421032,1,['validat'],['validateArg']
Security,"detected as B37 in HG19 annotation mode. Performing conversion.; 17:14:13.209 WARN FuncotatorEngine - WARNING: You are using B37 as a reference. Funcotator will convert your variants to GRCh37, and this will be fine in the vast majority of cases. There MAY be some errors (e.g. in the Y chromosome, but possibly in other places as well) due to changes between the two references.; 17:14:13.411 INFO ProgressMeter - Starting traversal; 17:14:13.412 INFO ProgressMeter - Current Locus Elapsed Minutes Features Processed Features/Minute; 17:14:15.391 INFO FuncotateSegments - Shutting down engine; [September 11, 2022 5:14:15 PM GMT] org.broadinstitute.hellbender.tools.funcotator.FuncotateSegments done. Elapsed time: 0.30 minutes.; Runtime.totalMemory()=1752170496; java.lang.IllegalArgumentException: Invalid interval. Contig:chr1 start:917445 end:911649; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:804); at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:59); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:35); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.segment.SegmentExonUtils.findInclusiveExonIndex(SegmentExonUtils.java:95); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.segment.SegmentExonUtils.determineSegmentExonPosition(SegmentExonUtils.java:63); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createSegmentFuncotations(GencodeFuncotationFactory.java:2939); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createSegmentFuncotations(GencodeFuncotationFactory.java:2914); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createFuncotationsOnSegment(GencodeFuncotationFactory.java:2866); at org.broadinstitute.hellbender.tools.funcotator.DataSourceFuncotationFactory.determineFuncotations(DataSourc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6598#issuecomment-1243013314:1253,validat,validatePositions,1253,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6598#issuecomment-1243013314,2,['validat'],['validatePositions']
Security,"dian count is significantly away from the main peak (due to the abundance of low mappability bins with small counts). . Also, the second peak of chrX coverage in XY samples that you show above is not a large germline event -- it is simply a low mappable PAR-like region that borrows reads from chrY. Here's how the X coverage distribution looks like on an XY sample after mappability filtering (which removes most of all approximate homologies):; ![chrx](https://user-images.githubusercontent.com/15305869/37867778-54e3d196-2f73-11e8-8345-d8964b39a17e.png). **The second spurious peak is gone and range of NB-like behavior is pretty much perfect. Without mappability filtering, all of the bins on the second mode _will_ show up as CN = 2 events (in fact, if you look at gCNV calls on a typical XY samples, there are tons of CN = 2 calls).**. Most, if not all, of the non-NB-like coverage before/after the main peak in your plots are reads from unmappable regions, many of which show up as real CNV events if we do not filter them (reads in these regions do not follow from the coverage model and we are at the mercy of BWA). I strongly believe Genome STRiP has achieved ~ 99% experimental validation accuracy because of aggressive filtering, not because of a superior model (it's an elementary Gaussian mixture mix). Garbage in, garbage out. Anyhow, I am not comfortable at all with cutting a non-Beta release without taking care of about:. 1. Mappability-based bin/read filtering (for WGS), and; 2. Trying out and evaluating a bait-based coverage collection (for WES), so that the raw coverage distribution is more NB-like to begin with. These are both perfectly achievable goals before May 15. I'd be happy to leave stuff such as different coverage collection strategies (e.g. base call coverage) and fragment-based per-sample GC content estimation for later. These are other areas where significant improvements come from. For the record -- I am working full steam on evaluations, as we discussed.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4558#issuecomment-375917669:1391,validat,validation,1391,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4558#issuecomment-375917669,1,['validat'],['validation']
Security,"different exception on branch https://github.com/broadinstitute/gatk/tree/lb_refactor_to_reduce_ReadSparkSink_duplication. debugging seems to point to the `.` in `testoutput.bam` as the problem, but why that's causing a problem under yarn is mysterious. ```; caused by: java.io.IOException: Mkdirs failed to create file:/home/unix/louisb/writeable/testoutput.bam/_temporary/0/_temporary/attempt_201601291710_0020_r_000000_3 (exists=false, cwd=file:/mnt/disk10/yarn/nm/usercache/louisb/appcache/application_1452219145116_0780/container_1452219145116_0780_01_000002); at org.apache.hadoop.fs.ChecksumFileSystem.create(ChecksumFileSystem.java:442); at org.apache.hadoop.fs.ChecksumFileSystem.create(ChecksumFileSystem.java:428); at org.apache.hadoop.fs.FileSystem.create(FileSystem.java:917); at org.apache.hadoop.fs.FileSystem.create(FileSystem.java:898); at org.apache.hadoop.fs.FileSystem.create(FileSystem.java:795); at org.apache.hadoop.fs.FileSystem.create(FileSystem.java:784); at org.seqdoop.hadoop_bam.BAMRecordWriter.<init>(BAMRecordWriter.java:74); at org.seqdoop.hadoop_bam.KeyIgnoringBAMRecordWriter.<init>(KeyIgnoringBAMRecordWriter.java:49); at org.seqdoop.hadoop_bam.KeyIgnoringBAMOutputFormat.getRecordWriter(KeyIgnoringBAMOutputFormat.java:91); at org.seqdoop.hadoop_bam.KeyIgnoringBAMOutputFormat.getRecordWriter(KeyIgnoringBAMOutputFormat.java:79); at org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSink$SparkBAMOutputFormat.getRecordWriter(ReadsSparkSink.java:65); at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsNewAPIHadoopDataset$1$$anonfun$12.apply(PairRDDFunctions.scala:1030); at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsNewAPIHadoopDataset$1$$anonfun$12.apply(PairRDDFunctions.scala:1014); at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:66); at org.apache.spark.scheduler.Task.run(Task.scala:88); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:214); at java.util.concurrent.ThreadPoolExecutor.runWo",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1451#issuecomment-176996853:590,Checksum,ChecksumFileSystem,590,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1451#issuecomment-176996853,4,['Checksum'],['ChecksumFileSystem']
Security,"ds.bam; **********. 11:25:52.673 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/fleharty/resources/picard.jar!/com/intel/gkl/native/libgkl_compression.dylib; [Tue Jul 14 11:25:52 EDT 2020] ValidateSamFile INPUT=concatenated_ACC5611A1_XXXXXX_consensusalign_ds.bam MODE=VERBOSE MAX_OUTPUT=100 IGNORE_WARNINGS=false VALIDATE_INDEX=true INDEX_VALIDATION_STRINGENCY=EXHAUSTIVE IS_BISULFITE_SEQUENCED=false MAX_OPEN_TEMP_FILES=8000 SKIP_MATE_VALIDATION=false VERBOSITY=INFO QUIET=false VALIDATION_STRINGENCY=STRICT COMPRESSION_LEVEL=5 MAX_RECORDS_IN_RAM=500000 CREATE_INDEX=false CREATE_MD5_FILE=false GA4GH_CLIENT_SECRETS=client_secrets.json USE_JDK_DEFLATER=false USE_JDK_INFLATER=false; [Tue Jul 14 11:25:52 EDT 2020] Executing as fleharty@wm462-624 on Mac OS X 10.15.5 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_191-b12; Deflater: Intel; Inflater: Intel; Provider GCS is not available; Picard version: 2.20.4-SNAPSHOT; WARNING	2020-07-14 11:25:52	ValidateSamFile	NM validation cannot be performed without the reference. All other validations will still occur.; ERROR: Record 18321, Read name UMI-ATT-GAA-2, Zero-length read without FZ, CS or CQ tag; ERROR: Record 26312, Read name UMI-CCT-TTC-1, Zero-length read without FZ, CS or CQ tag; ERROR: Record 70755, Read name UMI-CAG-GGA-2, Zero-length read without FZ, CS or CQ tag; ERROR: Record 145082, Read name UMI-AAC-ATG-5, Zero-length read without FZ, CS or CQ tag; ERROR: Record 181500, Read name UMI-ACT-CTT-1, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186837, Read name UMI-CAA-CTC-4, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186862, Read name UMI-CGC-GCC-0, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186904, Read name UMI-AGG-GTC-0, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186919, Read name UMI-CGC-TGC-0, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186947, Read name UMI-TAA-TAG-3, Zero-length read without FZ, CS or CQ tag; ERROR",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6695#issuecomment-658247132:1855,Validat,ValidateSamFile,1855,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6695#issuecomment-658247132,2,"['Validat', 'validat']","['ValidateSamFile', 'validation']"
Security,"e GATK3 traversal. Initially, I did plan on having `AssemblyRegionWalker` extend the former `ReadWindowWalker`, or an adapted version of your `SlidingWindowWalker`, and I did implement it like this at first, but ultimately I collapsed it into a single class for several reasons:; - Inheriting from a more generic traversal type caused usability issues and confusion with respect to the command-line arguments. The `ReadWindow` was the unit of processing for the superclass, but for `AssemblyRegionWalker` it was the unit of I/O and `AssemblyRegion` was the unit of processing, and I couldn't update the docs for `ReadWindowWalker` to clear up the confusion without mentioning `AssemblyRegion`-specific concepts.; - The `ReadShard` / `ReadWindow` was/is **only** there to prove that we can shard the data without introducing calling artifacts, and to provide a unit of parallelism for the upcoming Spark implementation. It's not something we really want to expose to users as a prominent knob, and we may hide it completely in the future once the shard size is tuned for performance.; - Inheriting from a more abstract walker type caused a number of other problems as well: methods that should have been final in the supertype could no longer be made final, with the result that tool implementations could inappropriately override engine initialization/shutdown routines. Also, there were issues with the progress meter, since both the supertype traversal and subtype traversal needed their own progress meter for their different units of processing. Ultimately it was just too awkward and forced, and the read shard is something that we eventually want to make an internal/encapsulated implementation detail anyway. GATK3 made the mistake, I think, of using long, confusing inheritance chains for its walker types, with the result that you got awkward and forced relationships like `RodWalker` inheriting from `LocusWalker`. It's better, I think, to make each traversal as standalone as possible, esp",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1708#issuecomment-210806513:1255,expose,expose,1255,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1708#issuecomment-210806513,1,['expose'],['expose']
Security,"e PairHMM as a separate project/repo on github and host AVX code there and have alternative implementations extend that project/repo (by creating repos that depend on the AVX one). . In other words, now we have 1 repo, broadinstitute/gatk. After the proposed change we'll have 3 repos (all BSD licensed):; 1) broadinstitute/gatk; 2) broadinstitute/nativePairHMM-AVX; 2) broadinstitute/nativePairHMM-PPC. We will duplicate the native code (AVX and PPC will be separate copies of C++ files etc) to simplify the testing burden. The parties interested in working on a specific architecture will contribute code directly to the respective architecture-specific repo and gatk will take occasional updates of those repos. The gatk repo will depend on the other two. The PPC repo will depend on the AVX repo (and any other native repos will depend on the AVX one). The avx and ppc repos will have their own build systems and unit tests against the new interface. The AVX repo will expose something like the following Java API (to be worked out in detail). ```; //Used to copy references to byteArrays to JNI from reads; public final class JNIReadDataHolderClass {; public byte[] readBases = null;; public byte[] readQuals = null;; public byte[] insertionGOP = null;; public byte[] deletionGOP = null;; public byte[] overallGCP = null;; }. //Used to copy references to byteArrays to JNI from haplotypes; public final class JNIHaplotypeDataHolderClass {; public byte[] haplotypeBases = null;; }. public interface NativePairHMMKernel extends AutoCloseable { . /**; * Function to initialize the fields of JNIReadDataHolderClass and JNIHaplotypeDataHolderClass from JVM.; * C++ code gets FieldIDs for these classes once and re-uses these IDs for the remainder of the program. Field IDs do not; * change per JVM session; *; * @param readDataHolderClass class type of JNIReadDataHolderClass; * @param haplotypeDataHolderClass class type of JNIHaplotypeDataHolderClass; */; void jniInitializeClassFields(Class<JNIRead",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1748#issuecomment-214914864:1130,expose,expose,1130,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1748#issuecomment-214914864,1,['expose'],['expose']
Security,"e deleted, and its use `support = range(lo, hi)` should become `support = new IndexRange(lo, hi)`. Then `IntStream.of(support).mapToDouble(___).toArray()` becomes `range.mapToDouble(___)` and `apply(promote(support), ___)` becomes `support.mapToDouble(___)`. * `final double relErr = 1 + pow(10, -7)` should become a `static` constant. * The steps; ```java; final double maxD1 = arrayMax(d1);; final double[] d2 = apply(apply(d1, d -> d - maxD1), d -> exp(d));; final double sumD2 = sum(d2);; return apply(d2, d -> d/sumD2);; ```; inside `dnHyper` are just a home-brewed way to normalize the log-space array `d1`. Let's go throught the steps: 1) find the max. 2) subtract the max -- subtracting a constant in log-space is equivalent to dividing by a constant in real space, and since we're normalizing in the end this constant is arbitrary. It's done for numerical stability. 3) exponentiate to get an unnormalized real-space array. 4) find the sum. 5) divide by the sum to get the normalized result. The log-10 version of this is `MathUtils::normalizeFromLog10ToLinearSpace(d1)`. You could either calculate `d1` in log-10 space or convert it, replacing the above line with `return MathUtils.normalizeFromLog10ToLinearSpace(MathUtils.applyToArrayInPlace(d1, MathUtils::logToLog10))`. The latter option is simpler. * Import static should be avoided except to escape horrible clutter, which is not the case here. * The second argument of `Utils.validateArg(condition, calculated string expression)` should become `Utils.validateArg(condition, () -> calculated string expression)`. In the first version, the expression is calculated *even if* the condition is satisfied, whereas in the second it is only calculated as needed. It's not critical here but it's a good habit to get into. PS I am a zealot of the Boy Scout Rule (always leave the camp site cleaner than you found it). It is a great way to get familiar with a large code base and a great way to make the code more readable for the next person.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2307#issuecomment-266263155:2063,validat,validateArg,2063,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2307#issuecomment-266263155,2,['validat'],['validateArg']
Security,e/CpxVariantCanonicalRepresentation.java](https://codecov.io/gh/broadinstitute/gatk/pull/4677/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvaW5mZXJlbmNlL0NweFZhcmlhbnRDYW5vbmljYWxSZXByZXNlbnRhdGlvbi5qYXZh) | `78.992% <71.429%> (+0.022%)` | `52 <0> (+2)` | :arrow_up: |; | [...transforms/markduplicates/MarkDuplicatesSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4677/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay90cmFuc2Zvcm1zL21hcmtkdXBsaWNhdGVzL01hcmtEdXBsaWNhdGVzU3BhcmsuamF2YQ==) | `90.909% <0%> (-4.213%)` | `9% <0%> (-6%)` | |; | [...hellbender/tools/walkers/mutect/Mutect2Engine.java](https://codecov.io/gh/broadinstitute/gatk/pull/4677/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NdXRlY3QyRW5naW5lLmphdmE=) | `87.654% <0%> (-3.39%)` | `50% <0%> (+1%)` | |; | [...tools/spark/validation/CompareDuplicatesSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4677/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay92YWxpZGF0aW9uL0NvbXBhcmVEdXBsaWNhdGVzU3BhcmsuamF2YQ==) | `82.927% <0%> (-1.518%)` | `24% <0%> (ø)` | |; | [...forms/markduplicates/MarkDuplicatesSparkUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4677/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay90cmFuc2Zvcm1zL21hcmtkdXBsaWNhdGVzL01hcmtEdXBsaWNhdGVzU3BhcmtVdGlscy5qYXZh) | `89.5% <0%> (-1.083%)` | `58% <0%> (-9%)` | |; | [...ellbender/tools/walkers/vqsr/CNNScoreVariants.java](https://codecov.io/gh/broadinstitute/gatk/pull/4677/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50cy5qYXZh) | `74.057% <0%> (-0.829%)` | `40% <0%> (-1%)` | |; | [...r/engine/filters/ReadGroupBlackListReadFilter.java](https://codecov.io/gh/b,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4677#issuecomment-383092400:2277,validat,validation,2277,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4677#issuecomment-383092400,1,['validat'],['validation']
Security,"ed by groupReadPairs is very expensive both in time and in memory. It's a full hash shuffle of GATKReads (time expensive), that results in a gazillion 1- and 2-element Lists (memory expensive). So you certainly don't want to do it twice. But the way pairedReads and unpairedReads is set up, you *will* do it twice if you want to process both paired and unpaired reads. (And even if you aren't, someone else might try to use this code to do so.). So my first suggestion is that you remove the call to groupReadPairs from pairedReads and unpairedReads, and let a user groupReadPairs once, and reuse the resulting JavaPairRDD to process paired and unpaired reads. My second suggestion is quite a bit more complicated, but I think it would result in far better performance. I'll sketch it out here, and then I can explain it further in person, if it's a direction you'd like to pursue. The first step is to create a JavaRDD<GATKRead> in which all pairs sharing a template name are in the same partition (but without grouping them). To do that, you temporarily boost the input JavaRDD into a JavaPairRDD<String,GATKRead> by extracting the read name as a key. Then you repartition (to do the shuffle). Then you map back to an ordinary JavaRDD<GATKRead> by keeping just the value. (Note: if the BAM has queryname sort order, you can just skip this step entirely.); Now you can do a mapPartition operation to filter for paired or unpaired reads: Iterate over the reads in the partition, and keep a hash map of [name -> read] of reads that have not yet found mates. To filter for paired reads, whenever you find the name of the current read already in the table, just emit the current read and the read in the map as a pair, and delete the read from the map (you're done with that name -- this keeps the table smaller). To filter for unpaired reads, just delete any map entry that you successfully look up, and insert any name that you don't. What's left at the end of this process are all the unpaired reads.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2664#issuecomment-299955039:1578,hash,hash,1578,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2664#issuecomment-299955039,1,['hash'],['hash']
Security,"ed with single line brackets. I.e. gatk typically uses. ```; if ( something ) {; doThing; } else {; otherThing; }; ```. rather than. ```; if ( something ) ; {; doThing; }; else ; {; otherThing; }; ```. 2) You use a lot of raw iterators, which is fine and is necessary in many cases. In other cases those operations can be written much more succinctly with either a for-each loop, or a stream. i.e. . ```; List<Integer> values;; Iterator itr = iterable.iterator();; while(itr.hasNext()){; Element elem = itr.next();; int value = someFunction(elem); if ( value > SOME_CONSTANT) {; values.append(value); }; }; return values;; ```. can be . ```; return StreamSupport.stream(iterable.spliterator, false); .map( elem -> someFunction(elem)); .filter( value -> value > SOME_CONSTANT ); .collect( Collectors.toList()); ```. We should probably add a utilty function to convert an iterator to a stream directly so we can stream iterators easily even if there is no associated iteratable. . 3) The tools need tests. This is important. 4) It would be good to think about how the tools can be composited into a spark pipline and run without writing intermediate files. . 5) Bitwise operations are a rarity in GATK and many of our users will not be very comfortable with them. Please avoid bit twiddling tricks when possible. When it's not possible (i.e. when you are performing tricks to treat a long as a set of byte pairs) please add detailed explanation to the comments so that readers who are less familiar will be able to follow along. Likewise all magic values should be named constants unless they are extremely obvious. . 6) Avoid state like the plague. Everything that can reasonable be static should be. Some things will require mutable state, but avoid it as much as possible. . Similarly, static mutable objects should be avoided like a plague infected with more plagues. Never expose a static object that could be mutated. (you have a static array, it's ok because it's private and nothing mutates it)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1435#issuecomment-172985394:2438,expose,expose,2438,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1435#issuecomment-172985394,1,['expose'],['expose']
Security,eekableByteChannelPrefetcher.java:136); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher.fetch(SeekableByteChannelPrefetcher.java:255); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher.read(SeekableByteChannelPrefetcher.java:300); 	... 28 more; Caused by: com.google.cloud.storage.StorageException: Read timed out; 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(HttpStorageRpc.java:186); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:512); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:128); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:125); 	at shaded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:92); 	at shaded.cloud_nio.com.google.api.gax.retrying.RetryingFutureImpl.executeAttempt(RetryingFutureImpl.java:141); 	at shaded.cloud_nio.com.google.api.gax.retrying.RetryingFutureImpl.access$500(RetryingFutureImpl.java:59); 	at shaded.cloud_nio.com.google.api.gax.retrying.RetryingFutureImpl$AttemptFutureCallback.onFailure(RetryingFutureImpl.java:177); 	at shaded.cloud_nio.com.google.api.gax.core.ApiFutures$1.onFailure(ApiFutures.java:52); 	at shaded.cloud_nio.com.google.common.util.concurrent.Futures$6.run(Futures.java:1764); 	at shaded.cloud_nio.com.google.common.util.concurrent.MoreExecutors$DirectExecutor.execute(MoreExecutors.java:456); 	at shaded.cloud_nio.com.google.common.util.concurrent.Futures$ImmediateFuture.addListener(Futures.java:153); 	at shaded.cloud_nio.com.google.common.util.concurrent.ForwardingListenableFuture.addListener(ForwardingListenableFuture.java:47); 	at shaded.cloud_nio.com.google.api.gax.core.internal.ApiFutureToListenableFuture.addListener(ApiFutureToListenableFuture.java:53); 	at shaded.cloud_nio.com.google.common.util.concurrent.Futures.addCallback(Futures.java:1776); 	at shaded.cloud_nio.com.google.common.util.concurrent.Futures.addCallback(Futures,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300298180:4061,access,access,4061,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300298180,1,['access'],['access']
Security,"efaults.COMPRESSION_LEVEL : 1; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - Initializing engine; 19:03:43.000 INFO ValidateSamFile - Done initializing engine; ERROR: Record 9762, Read name 20GAVAAXX100126:7:2:8126:115177, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 24466, Read name 20FUKAAXX100202:7:46:13035:77621, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97940, Read name 20FUKAAXX100202:5:7:21464:86224, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97955, Read name 20GAVAAXX100126:5:7:1291:122571, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 112212, Read name 20GAVAAXX100126:8:1:1429:",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:1950,Validat,ValidateSamFile,1950,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvYWxpZ25tZW50L0Fzc2VtYmx5Q29udGlnQWxpZ25tZW50c0NvbmZpZ1BpY2tlclVuaXRUZXN0LmphdmE=) | `99.415% <0%> (-0.19%)` | `34% <0%> (+14%)` | |; | [...utils/variant/GATKVariantContextUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy92YXJpYW50L0dBVEtWYXJpYW50Q29udGV4dFV0aWxzVW5pdFRlc3QuamF2YQ==) | `87.194% <0%> (-0.088%)` | `316% <0%> (+156%)` | |; | [...ct/CreateSomaticPanelOfNormalsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9DcmVhdGVTb21hdGljUGFuZWxPZk5vcm1hbHNJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <0%> (ø)` | `6% <0%> (+3%)` | :arrow_up: |; | [.../validation/RemoveNearbyIndelsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vUmVtb3ZlTmVhcmJ5SW5kZWxzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `100% <0%> (ø)` | `5% <0%> (+2%)` | :arrow_up: |; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <0%> (ø)` | `10% <0%> (+4%)` | :arrow_up: |; | [...dation/AnnotateVcfWithBamDepthIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoQmFtRGVwdGhJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <0%> (ø)` | `12% <0%> (+5%)` | :arrow_up: |; | ... and [10 more](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406399931:3578,validat,validation,3578,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406399931,1,['validat'],['validation']
Security,"en't seen discussed in these threads.; Perhaps it's impractical, but I'll mention it anyway. It seems like ; another approach would be to create (internal to the implementation) a ; ""header tag"" that could be efficiently serialized; and passed as part of the SAMRecord when you need to distribute it. The ; header tag could be used by the receiver to reattach the SAMRecord to ; its header (either proactively or on demand), but transparently to ; application code that is running against the SAMRecord API.; This would allow SAM headers to be transmitted out-of-band in a way that ; depends on the execution environment. Depending on the environment, ; this might be done by proactive broadcast, or you could think of the ; header tag as a promise to retrieve the header if/when it is needed. ; The size and complexity of the header tag might also depend on the ; execution environment. If the execution environment only supports a ; small finite number of headers, the header tag could be a small integer, ; or in a different execution environment it could be; a unique hash of the header or something like that. Memory footprint in ; the receiver is minimized because many SAMRecords can all share the same ; header object.; This requires more work to support in each execution environment, but it ; seems like it could be efficient and allows application code written to ; operate on SAMRecords to be portable; across different execution environments without having to contend with ; the possible presence of headerless SAMRecords. -Bob. On 9/17/15 4:28 PM, droazen wrote:. > @davidadamsphd https://github.com/davidadamsphd, @lbergelson ; > https://github.com/lbergelson, and myself met for an hour or two ; > just now to discuss this issue, and after reviewing all the options I ; > think we were convinced by the following argument:; > ; > The |SAMRecord| class currently allows its header to be set to null, ; > so if there are cases where the class won't function properly or can ; > enter int",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/900#issuecomment-141451518:2261,hash,hash,2261,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/900#issuecomment-141451518,1,['hash'],['hash']
Security,ent.googleapis.services.AbstractGoogleClientRequest.buildHttpRequest(AbstractGoogleClientRequest.java:300); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeMedia(AbstractGoogleClientRequest.java:380); 	at shaded.cloud_nio.com.google.api.services.storage.Storage$Objects$Get.executeMedia(Storage.java:5130); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:494); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:127); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:124); 	at shaded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:93); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:49); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:124); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:113); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:131); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:104); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: java.io.EOFException: SSL peer shut down incorrectly; 	at sun.security.ssl.InputRecord.read(InputRecord.java:505); 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); 	... 34 more; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3070#issuecomment-309120156:3986,secur,security,3986,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3070#issuecomment-309120156,2,['secur'],['security']
Security,"ents - Gencode 34 CANONICAL; 17:14:13.209 INFO FuncotatorEngine - VCF sequence dictionary detected as B37 in HG19 annotation mode. Performing conversion.; 17:14:13.209 WARN FuncotatorEngine - WARNING: You are using B37 as a reference. Funcotator will convert your variants to GRCh37, and this will be fine in the vast majority of cases. There MAY be some errors (e.g. in the Y chromosome, but possibly in other places as well) due to changes between the two references.; 17:14:13.411 INFO ProgressMeter - Starting traversal; 17:14:13.412 INFO ProgressMeter - Current Locus Elapsed Minutes Features Processed Features/Minute; 17:14:15.391 INFO FuncotateSegments - Shutting down engine; [September 11, 2022 5:14:15 PM GMT] org.broadinstitute.hellbender.tools.funcotator.FuncotateSegments done. Elapsed time: 0.30 minutes.; Runtime.totalMemory()=1752170496; java.lang.IllegalArgumentException: Invalid interval. Contig:chr1 start:917445 end:911649; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:804); at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:59); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:35); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.segment.SegmentExonUtils.findInclusiveExonIndex(SegmentExonUtils.java:95); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.segment.SegmentExonUtils.determineSegmentExonPosition(SegmentExonUtils.java:63); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createSegmentFuncotations(GencodeFuncotationFactory.java:2939); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createSegmentFuncotations(GencodeFuncotationFactory.java:2914); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createFuncotationsOnSegment(GencodeFuncotationFactory.java:2866); at org.broadinstitu",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6598#issuecomment-1243013314:1170,validat,validateArg,1170,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6598#issuecomment-1243013314,2,['validat'],['validateArg']
Security,er #2643 +/- ##; ===============================================; + Coverage 76.126% 76.133% +0.007% ; - Complexity 11150 11160 +10 ; ===============================================; Files 769 769 ; Lines 40751 40767 +16 ; Branches 7110 7115 +5 ; ===============================================; + Hits 31022 31037 +15 ; + Misses 7062 7061 -1 ; - Partials 2667 2669 +2; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2643?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ender/utils/nio/SeekableByteChannelPrefetcher.java](https://codecov.io/gh/broadinstitute/gatk/pull/2643?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vU2Vla2FibGVCeXRlQ2hhbm5lbFByZWZldGNoZXIuamF2YQ==) | `76.73% <71.429%> (+0.414%)` | `25 <0> (+2)` | :arrow_up: |; | [...roadinstitute/hellbender/engine/ProgressMeter.java](https://codecov.io/gh/broadinstitute/gatk/pull/2643?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUHJvZ3Jlc3NNZXRlci5qYXZh) | `93.75% <0%> (-1.563%)` | `21% <0%> (-1%)` | |; | [...r/tools/walkers/variantutils/ValidateVariants.java](https://codecov.io/gh/broadinstitute/gatk/pull/2643?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9WYWxpZGF0ZVZhcmlhbnRzLmphdmE=) | `81.081% <0%> (-0.737%)` | `24% <0%> (+8%)` | |; | [...ute/hellbender/utils/recalibration/RecalUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2643?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWNhbGlicmF0aW9uL1JlY2FsVXRpbHMuamF2YQ==) | `89.407% <0%> (+0.045%)` | `52% <0%> (+1%)` | :arrow_up: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2643?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `74.026% <0%> (+1.948%)` | `35% <0%> (ø)` | :arrow_down: |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2643#issuecomment-298471381:1542,Validat,ValidateVariants,1542,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2643#issuecomment-298471381,1,['Validat'],['ValidateVariants']
Security,er/engine/MultiVariantWalker.java](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvTXVsdGlWYXJpYW50V2Fsa2VyLmphdmE=) | `96.154% <0%> (-0.398%)` | `24% <0%> (+11%)` | |; | [...der/tools/walkers/variantutils/SelectVariants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9TZWxlY3RWYXJpYW50cy5qYXZh) | `79.405% <0%> (-0.181%)` | `158% <0%> (+43%)` | |; | [...nder/utils/samples/MendelianViolationUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zYW1wbGVzL01lbmRlbGlhblZpb2xhdGlvblVuaXRUZXN0LmphdmE=) | `100% <0%> (ø)` | `47% <0%> (+7%)` | :arrow_up: |; | [...eVcfWithExpectedAlleleFractionIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoRXhwZWN0ZWRBbGxlbGVGcmFjdGlvbkludGVncmF0aW9uVGVzdC5qYXZh) | `100% <0%> (ø)` | `10% <0%> (+3%)` | :arrow_up: |; | [...s/walkers/variantutils/SelectVariantsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9TZWxlY3RWYXJpYW50c1VuaXRUZXN0LmphdmE=) | `100% <0%> (ø)` | `14% <0%> (+2%)` | :arrow_up: |; | [.../validation/RemoveNearbyIndelsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vUmVtb3ZlTmVhcmJ5SW5kZWxzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `100% <0%> (ø)` | `4% <0%> (+1%)` | :arrow_up: |; | ... and [14 more](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5032#issuecomment-406335133:3484,validat,validation,3484,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5032#issuecomment-406335133,1,['validat'],['validation']
Security,"erformed a round of evaluations against XHMM and cn.MOPS on a cohort of 160 samples from SFARI project (which is described in our ASHG poster). For ground truth we used a callset generated from Talkowski lab SV pipeline on matched whole genome samples. Unfortunately, SFARI cohort is not public and cannot be used for public facing evaluations.; - Some hyperparameter tweaking was necessary to achieve good performance. Hyperparameters changed were contained mostly only to `psi_t` parameter.; - We developed a clustering procedure that is based on coverage profile at the set of targets that are highly variable across different capture kits. ; - We found that filtering on a QS metric on a final callset significantly boosted the specificity while lowering sensitivity insignificantly.; - We developed a hyperparameter optimization framework prototype that could be used in a future for general optimizations of cost/performance parameters for all GATK pipelines.; - We resolved several memory issues that came up during validations. **A few issues were encountered along the way:**; - The sensitivity and specificity on multiallellic (common) sites was significantly lower than on rare events.; - Single target calling sensitivity was lower than 20%.; - Pipeline WDL required optimization in order to handle whole genome data, however these changes were not consolidated in the official WDL. **Currently the ongoing work is focused on the following:**; - Improving sensitivity/specificity of calls on common regions. One solution being tested involves setting a prior for common regions derived from a high quality callset. Second solution is to set a different filtering threshold for common regions.; - Consolidating validation scripts to process gCNV output and outputs of competing tools measure their performances against ground truth.; - Analyzing 1000 Genomes exomes, which could be potentially used for public facing automatic evaluations. **The following items are necessary done for auto",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4123#issuecomment-532500502:1068,validat,validations,1068,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4123#issuecomment-532500502,1,['validat'],['validations']
Security,"es.githubusercontent.com/11076296/158385777-6174f8b8-7abb-4b31-92d1-11cc8064854b.png). Note that the malaria data used was pretty small: chr1-2 training (~20k positive training/truth variants, ~50k negative training variants; note also that the threshold for determining negative training was not tuned---a threshold corresponding to a 98% truth sensitivity was arbitrarily chosen), chr3 validation (~50k variants), and chr4-6 test (~150k variants). The LL score is calculated from a validation set held out from the training/truth positives used to train the model, while the F1 score is calculated using ""orthogonal truth"" positives/negatives determined using 3 families of ~30 trios each. However, there's some arbitrariness in how we define the boundary for the latter positives/negatives, and hence some arbitrariness in the F1 score itself. But I'd expect using gold-standard GIAB truth would be more straightforward. Not sure how much we can conclude, but that the validation and test F1s are similar and that the validation LL score isn't *too* far off are encouraging. That said, there is a pretty big drop in recall when optimizing LL. But we should also expect some discrepancy between LL and F1, according to one of the papers linked above. I would hope that with more variants or reliable training/truth (as in your data), things might stabilize or line up better. I'll try running with more malaria data, as well. The following trios x sites heatmap (top plot) for the validation set might better illustrate the arbitrariness in F1 (click to enlarge):. ![image](https://user-images.githubusercontent.com/11076296/158385585-1a0dfe8e-d4b7-4770-aed0-19ad81162c92.png). Here, yellow = het errors (since these are supposed to be clonal malaria samples), red = Mendelian errors, grey = no calls, green = Mendelian consistency, white = reference. The second plot shows the training/truth positives used to train the model and to calculate the LL score in the validation shard. The third plot s",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1067396431:1148,validat,validation,1148,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1067396431,2,['validat'],['validation']
Security,"et held out from the training/truth positives used to train the model, while the F1 score is calculated using ""orthogonal truth"" positives/negatives determined using 3 families of ~30 trios each. However, there's some arbitrariness in how we define the boundary for the latter positives/negatives, and hence some arbitrariness in the F1 score itself. But I'd expect using gold-standard GIAB truth would be more straightforward. Not sure how much we can conclude, but that the validation and test F1s are similar and that the validation LL score isn't *too* far off are encouraging. That said, there is a pretty big drop in recall when optimizing LL. But we should also expect some discrepancy between LL and F1, according to one of the papers linked above. I would hope that with more variants or reliable training/truth (as in your data), things might stabilize or line up better. I'll try running with more malaria data, as well. The following trios x sites heatmap (top plot) for the validation set might better illustrate the arbitrariness in F1 (click to enlarge):. ![image](https://user-images.githubusercontent.com/11076296/158385585-1a0dfe8e-d4b7-4770-aed0-19ad81162c92.png). Here, yellow = het errors (since these are supposed to be clonal malaria samples), red = Mendelian errors, grey = no calls, green = Mendelian consistency, white = reference. The second plot shows the training/truth positives used to train the model and to calculate the LL score in the validation shard. The third plot shows the ""orthogonal truth"" positives/negatives used to calculate F1. So we can see that the difficulty in deriving F1 as a function of the score along the horizontal axis to give the third plot lies in collapsing the columns in the top plot into a single condition positive or condition negative status. Again, hard to do so without some arbitrariness; I simply came up with some rules to convert various amounts of red, yellow, green, etc. in each column to a red/white/green status. If you're u",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1067396431:1659,validat,validation,1659,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1067396431,1,['validat'],['validation']
Security,"factor of around four, which gzip often does not reach (because it doesn't know ahead of time that DNA has only four letters).; Use reference genome fasta as proxy for nearly no repetition at all. It doesn't compress much beyond 2bit. Tweaking of the Huffmann coding etc. might have influenced the compression level much in this case, by ""giving the compressor a subtle hint about the four letters"".; Paradoxically, Intel might have optimized for average data and thus brought a disadvantage for the four letter nature of DNA (and also the few letters used in quality data encoding compared to text). 3. BQSR:; When I did interleaving compression experiments, I noticed that the BQSR step decreases compressiblity considerably.; In this example I had the same BAM file in different versions that were aligned to hs38DH, hs38, hs37d5 and could compress them to nearly the size of one, by putting similar pieces of the files after one another.; Adding the same BAM with BQSR increased final file size more than several pre-BQSR versions together.; Note: This piece-meal packing might be useful for different BAMs mostly only with many BAMs where similar regions accumulate. 4. Even faster:; In my experience, level 0 (no compression) (with samtools view -u) increases speed even more, if files are on a lz4 encrypted disk (such as with ZFS).; The speed-up of lz4 over even level 1 of any gzip-like compression is substantial.; With data on SSDs or similarly fast storage, that can make a huge difference. Another factor 6 six faster than level 1 on compression and a factor 9 on decompression. The then possible decompression speed of 3GB/s makes it possible to e.g. load a 180GB bam into a RAM disk in 60 seconds on a sufficiently fast SSD array (e.g. as on an aws ec2 i3.8xlarge instance).; Still 600MB/s if the RAM is also lz4 compressed. See image from https://github.com/lz4/lz4 below.; ![grafik](https://user-images.githubusercontent.com/1612006/35339046-d84b8b78-011f-11e8-99ec-a36cde725bb3.png)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3413#issuecomment-360179673:3572,encrypt,encrypted,3572,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3413#issuecomment-360179673,1,['encrypt'],['encrypted']
Security,"flater: IntelInflater; 18:11:33.871 INFO PrintReadsSpark - GCS max retries/reopens: 20; 18:11:33.871 INFO PrintReadsSpark - Using google-cloud-java patch c035098b5e62cb4fe9155eff07ce88449a361f5d from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes; 18:11:33.871 INFO PrintReadsSpark - Initializing engine; 18:11:33.871 INFO PrintReadsSpark - Done initializing engine; 17/10/13 18:11:33 INFO spark.SparkContext: Running Spark version 2.2.0.cloudera1; 17/10/13 18:11:34 WARN spark.SparkConf: spark.master yarn-client is deprecated in Spark 2.0+, please instead use ""yarn"" with specified deploy mode.; 17/10/13 18:11:34 INFO spark.SparkContext: Submitted application: PrintReadsSpark; 17/10/13 18:11:34 INFO spark.SecurityManager: Changing view acls to: hdfs; 17/10/13 18:11:34 INFO spark.SecurityManager: Changing modify acls to: hdfs; 17/10/13 18:11:34 INFO spark.SecurityManager: Changing view acls groups to: ; 17/10/13 18:11:34 INFO spark.SecurityManager: Changing modify acls groups to: ; 17/10/13 18:11:34 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(hdfs); groups with view permissions: Set(); users with modify permissions: Set(hdfs); groups with modify permissions: Set(); 17/10/13 18:11:34 INFO util.Utils: Successfully started service 'sparkDriver' on port 45754.; 17/10/13 18:11:34 INFO spark.SparkEnv: Registering MapOutputTracker; 17/10/13 18:11:34 INFO spark.SparkEnv: Registering BlockManagerMaster; 17/10/13 18:11:34 INFO storage.BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information; 17/10/13 18:11:34 INFO storage.BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up; 17/10/13 18:11:34 INFO storage.DiskBlockManager: Created local directory at /tmp/hdfs/blockmgr-ea0e0669-2981-4277-80a0-a67eddf1001d; 17/10/13 18:11:34 INFO memory.MemoryStore: MemoryStore started with capacity 366.3 MB; 17/10/13 18:11:34 INFO spark.SparkE",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-336412775:4186,Secur,SecurityManager,4186,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-336412775,1,['Secur'],['SecurityManager']
Security,for @lbergelson - the validation fails now however. See https://github.com/broadinstitute/gatk/issues/1922,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1921#issuecomment-226817370:22,validat,validation,22,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1921#issuecomment-226817370,1,['validat'],['validation']
Security,"from @eitanbanks ""it must emit the non-reference genotype concordance rate by default. I don't think Picard does this now, but it's critical (esp. for CRSP validation from now on). And there should be a choice to count filtered/missing records in the truth set as discordant.""",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/56#issuecomment-74611983:156,validat,validation,156,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/56#issuecomment-74611983,1,['validat'],['validation']
Security,"gPloidy - GCS max retries/reopens: 20; 15:09:27.690 INFO DetermineGermlineContigPloidy - Requester pays: disabled; 15:09:27.690 INFO DetermineGermlineContigPloidy - Initializing engine; 15:09:37.241 INFO DetermineGermlineContigPloidy - Done initializing engine; 15:09:37.253 INFO DetermineGermlineContigPloidy - No contig-ploidy model was provided, running in cohort mode...; 15:09:37.253 INFO DetermineGermlineContigPloidy - Intervals specified...; log4j:WARN No appenders could be found for logger (org.broadinstitute.hdf5.HDF5Library).; log4j:WARN Please initialize the log4j system properly.; log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.; 15:09:38.533 INFO FeatureManager - Using codec IntervalListCodec to read file file:///home/n.liorni/snakemake_cnv_gatk/results/cnv/targets.preprocessed.interval_list; 15:09:38.659 INFO IntervalArgumentCollection - Processing 548086 bp from intervals; 15:09:38.697 INFO DetermineGermlineContigPloidy - Validating and aggregating coverage per contig from input read-count files...; 15:09:38.711 INFO DetermineGermlineContigPloidy - Aggregating read-count file results/cnv/hdf5/MGM20-0848_S4.hdf5 (1 / 4); 15:09:38.734 INFO DetermineGermlineContigPloidy - Aggregating read-count file results/cnv/hdf5/MGM20-0872_S2.hdf5 (2 / 4); 15:09:38.745 INFO DetermineGermlineContigPloidy - Aggregating read-count file results/cnv/hdf5/MGM20-1121_S4.hdf5 (3 / 4); 15:09:38.757 INFO DetermineGermlineContigPloidy - Aggregating read-count file results/cnv/hdf5/MGM20-1543_S10.hdf5 (4 / 4); 15:12:24.486 INFO DetermineGermlineContigPloidy - Shutting down engine; [18 ottobre 2021 15.12.24 CEST] org.broadinstitute.hellbender.tools.copynumber.DetermineGermlineContigPloidy done. Elapsed time: 2.95 minutes.; Runtime.totalMemory()=2215116800; org.broadinstitute.hellbender.utils.python.PythonScriptExecutorException: ; python exited with 1; Command Line: python /tmp/cohort_determine_ploidy_and_depth.1340409154615700376.py --sample_cover",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7444#issuecomment-945753905:4324,Validat,Validating,4324,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7444#issuecomment-945753905,1,['Validat'],['Validating']
Security,gatk/pull/4029?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `22.807% <ø> (ø)` | `2 <0> (ø)` | :arrow_down: |; | [...itute/hellbender/tools/walkers/bqsr/ApplyBQSR.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Jxc3IvQXBwbHlCUVNSLmphdmE=) | `91.667% <ø> (ø)` | `6 <0> (ø)` | :arrow_down: |; | [...stitute/hellbender/tools/spark/ApplyBQSRSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9BcHBseUJRU1JTcGFyay5qYXZh) | `100% <ø> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...llbender/tools/walkers/validation/Concordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2UuamF2YQ==) | `88.542% <ø> (ø)` | `28 <0> (ø)` | :arrow_down: |; | [.../tools/walkers/validation/CountFalsePositives.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ291bnRGYWxzZVBvc2l0aXZlcy5qYXZh) | `93.548% <ø> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [...ellbender/tools/walkers/bqsr/BaseRecalibrator.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Jxc3IvQmFzZVJlY2FsaWJyYXRvci5qYXZh) | `88.372% <ø> (ø)` | `11 <0> (ø)` | :arrow_down: |; | [.../hellbender/tools/spark/BaseRecalibratorSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/402,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4029#issuecomment-354921087:1833,validat,validation,1833,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4029#issuecomment-354921087,1,['validat'],['validation']
Security,geImpl$5.call(StorageImpl.java:241); 	at shaded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:105); 	at shaded.cloud_nio.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 	at shaded.cloud_nio.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 	at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:240); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.fetchSize(CloudStorageReadChannel.java:232); 	... 22 more; Caused by: java.net.SocketTimeoutException: connect timed out; 	at java.net.PlainSocketImpl.socketConnect(Native Method); 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:673); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); 	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264); 	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367); 	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050); 	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:162); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetH,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8275#issuecomment-1817434417:6929,secur,security,6929,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8275#issuecomment-1817434417,1,['secur'],['security']
Security,google.cloud.RetryHelper.runWithRetries(RetryHelper.java:47); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:125); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:109); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:131); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:104); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.available(AppInputStream.java:60); 	at java.io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:507); 	... 12 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.secu,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931:6913,secur,security,6913,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931,1,['secur'],['security']
Security,gradlew bundle --stacktrace; > Task :gatkDoc FAILED. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':gatkDoc'.; > Javadoc generation failed. Generated Javadoc options file (useful for troubleshooting): '/home/cb2/gatk/build/tmp/gatkDoc/javadoc.options'. * Try:; Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Exception is:; org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':gatkDoc'.; at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$3.accept(ExecuteActionsTaskExecuter.java:166); at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$3.accept(ExecuteActionsTaskExecuter.java:163); at org.gradle.internal.Try$Failure.ifSuccessfulOrElse(Try.java:191); at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:156); at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:62); at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:108); at org.gradle.api.internal.tasks.execution.ResolveBeforeExecutionOutputsTaskExecuter.execute(ResolveBeforeExecutionOutputsTaskExecuter.java:67); at org.gradle.api.internal.tasks.execution.ResolveAfterPreviousExecutionStateTaskExecuter.execute(ResolveAfterPreviousExecutionStateTaskExecuter.java:46); at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:94); at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46); at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:95); at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57); at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskEx,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4155#issuecomment-566796716:2108,Validat,ValidatingTaskExecuter,2108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4155#issuecomment-566796716,1,['Validat'],['ValidatingTaskExecuter']
Security,"gsutil working is not a good predictor of gatk working. It's possible for default credentials to be wrong but gsutil credentials to be fine at the same time. Here is an example of how to get into this situation:. ```; // set application credentials; gcloud auth login; // unset default credentials (alternatively, forget to set them in the first place); gcloud auth application-default revoke; // gsutil works; gsutil cat $VCF > /dev/null; // GATK does not work; ./gatk-launch SelectVariants --verbosity=DEBUG -V $VCF -L 1:1000-2000 -O /tmp/foo.vcf; A USER ERROR has occurred: Couldn't read file (...); ```. Please make sure to set up Google Cloud access as follows:; ```; $ gcloud auth application-default login; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2415#issuecomment-281526964:648,access,access,648,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2415#issuecomment-281526964,1,['access'],['access']
Security,h/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3JlYWRvcmllbnRhdGlvbi9Db2xsZWN0RjFSMkNvdW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `0.917% <0%> (-99.083%)` | `1% <0%> (-12%)` | |; | [.../walkers/bqsr/BaseRecalibratorIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Jxc3IvQmFzZVJlY2FsaWJyYXRvckludGVncmF0aW9uVGVzdC5qYXZh) | `1.031% <0%> (-98.969%)` | `1% <0%> (-7%)` | |; | [...ers/vqsr/FilterVariantTranchesIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvRmlsdGVyVmFyaWFudFRyYW5jaGVzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `1.053% <0%> (-98.947%)` | `1% <0%> (-5%)` | |; | [...s/variantutils/VariantsToTableIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9WYXJpYW50c1RvVGFibGVJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `1.205% <0%> (-98.795%)` | `1% <0%> (-20%)` | |; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `1.563% <0%> (-98.438%)` | `1% <0%> (-5%)` | |; | [...ientation/ReadOrientationModelIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3JlYWRvcmllbnRhdGlvbi9SZWFkT3JpZW50YXRpb25Nb2RlbEludGVncmF0aW9uVGVzdC5qYXZh) | `1.667% <0%> (-98.333%)` | `1% <0%> (-5%)` | |; | ... and [154 more](https://codecov.io/gh/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-437157098:3542,validat,validation,3542,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-437157098,1,['validat'],['validation']
Security,he.hadoop.hdfs.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.getBlockLocations(NameNodeRpcServer.java:692); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.getBlockLocations(ClientNamenodeProtocolServerSideTranslatorPB.java:381); 	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:447); 	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:989); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:850); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:793); 	at java.security.AccessController.doPrivileged(Native Method); 	at javax.security.auth.Subject.doAs(Subject.java:422); 	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1840); 	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2489). 	at org.apache.hadoop.ipc.Client.call(Client.java:1475); 	at org.apache.hadoop.ipc.Client.call(Client.java:1412); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:229); 	at com.sun.proxy.$Proxy10.getBlockLocations(Unknown Source); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.getBlockLocations(ClientNamenodeProtocolTranslatorPB.java:255); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.apache.hadoop.io.retry.RetryInvocation,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294:9686,secur,security,9686,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294,1,['secur'],['security']
Security,he.hadoop.hdfs.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.getBlockLocations(NameNodeRpcServer.java:692); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.getBlockLocations(ClientNamenodeProtocolServerSideTranslatorPB.java:381); 	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:447); 	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:989); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:850); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:793); 	at java.security.AccessController.doPrivileged(Native Method); 	at javax.security.auth.Subject.doAs(Subject.java:422); 	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1840); 	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2489). 	at org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSource.getHeader(ReadsSparkSource.java:237); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeReads(GATKSparkTool.java:488); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeToolInputs(GATKSparkTool.java:468); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:458); 	at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:30); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.ja,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294:3528,secur,security,3528,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294,1,['secur'],['security']
Security,he.hadoop.hdfs.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.getBlockLocations(NameNodeRpcServer.java:692); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.getBlockLocations(ClientNamenodeProtocolServerSideTranslatorPB.java:381); 	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:447); 	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:989); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:850); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:793); 	at java.security.AccessController.doPrivileged(Native Method); 	at javax.security.auth.Subject.doAs(Subject.java:422); 	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1840); 	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2489). 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62); 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45); 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423); 	at org.apache.hadoop.ipc.RemoteException.instantiateException(RemoteException.java:106); 	at org.apache.hadoop.ipc.RemoteException.unwrapRemoteException(RemoteException.java:73); 	at org.apache.hadoop.hdfs.DFSClient.callGetBlockLocations(DFSClient.java:1228); 	at org.apache.hadoop.hdfs.DFSClient.getLocatedBlocks(DFSClient.java:1213); 	at org.apache.hadoop.hdfs.DFSClient.getLocatedBlocks(D,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294:6445,secur,security,6445,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294,1,['secur'],['security']
Security,he.hadoop.hdfs.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.getBlockLocations(NameNodeRpcServer.java:692); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.getBlockLocations(ClientNamenodeProtocolServerSideTranslatorPB.java:381); 	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:447); 	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:989); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:850); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:793); 	at java.security.AccessController.doPrivileged(Native Method); 	at javax.security.auth.Subject.doAs(Subject.java:422); 	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1840); 	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2489). ***********************************************************************; org.broadinstitute.hellbender.exceptions.UserException: Failed to read bam header from /home/test/WGS_pipeline/TEST/output/spark_412.bowtie2.bam; Caused by:File does not exist: /home/test/WGS_pipeline/TEST/output/spark_412.bowtie2.bam; 	at org.apache.hadoop.hdfs.server.namenode.INodeFile.valueOf(INodeFile.java:72); 	at org.apache.hadoop.hdfs.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpc,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294:1865,secur,security,1865,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294,1,['secur'],['security']
Security,"here's an exhaustive list of classes that need to be registered to run MarkDuplicates and ReadsPipeline. I did register them and it did not influence the runtime though. ```; kryo.register(scala.Tuple3[].class);; kryo.register(java.lang.Object[].class, new DefaultArraySerializers.ObjectArraySerializer());; kryo.register(java.lang.Class.class, new DefaultSerializers.ClassSerializer());; kryo.register(java.util.LinkedHashMap.class, new MapSerializer());; kryo.register(java.util.HashMap.class, new MapSerializer());; kryo.register(java.util.ArrayList.class, new CollectionSerializer());; kryo.register(htsjdk.samtools.BAMRecord.class);; kryo.register(htsjdk.samtools.SAMBinaryTagAndValue.class);; kryo.register(htsjdk.samtools.ValidationStringency.class, new DefaultSerializers.EnumSerializer(ValidationStringency.class));; kryo.register(htsjdk.samtools.SAMFileHeader.class);; kryo.register(htsjdk.samtools.SAMProgramRecord.class);; kryo.register(htsjdk.samtools.SAMReadGroupRecord.class);; kryo.register(htsjdk.samtools.SAMSequenceDictionary.class);; kryo.register(htsjdk.samtools.SAMSequenceRecord.class);; kryo.register(PairedEnds.class);; try {; kryo.register(Class.forName(""scala.reflect.ClassTag$$anon$1""));; } catch (ClassNotFoundException e) {; //not a big deal, we'll just not register it; logger.debug(""Can't register class "" + e.getLocalizedMessage());; }. //; kryo.register(org.broadinstitute.hellbender.utils.variant.MinimalVariant.class);; kryo.register(org.broadinstitute.hellbender.utils.SimpleInterval.class);; kryo.register(org.broadinstitute.hellbender.utils.collections.IntervalsSkipList.class);; kryo.register(java.util.Hashtable.class);; kryo.register(org.broadinstitute.hellbender.utils.collections.IntervalsSkipListOneContig.class);; kryo.register(int[].class);; kryo.register(org.broadinstitute.hellbender.engine.datasources.ReferenceMultiSource.class);; kryo.register(org.broadinstitute.hellbender.engine.spark.datasources.ReferenceTwoBitSource.class);; kryo.register(scala",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1733#issuecomment-212427242:481,Hash,HashMap,481,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1733#issuecomment-212427242,3,"['Hash', 'Validat']","['HashMap', 'ValidationStringency']"
Security,"hmm, I can't get it to work. I run. ```; ./gatk-launch RunMinimalBWAMEM -bwaPath /broad/software/free/Linux/redhat_6_x86_64/pkgs/bwa_0.7.12/bwa -I ./src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunMinimalBWAMEM/interleaved.fastq -p -R src/test/resources/large/human_g1k_v37.20.21.fasta --outputDirectory outbwa -O foo.sam; ```. this blows up with . ```; [E::bwa_idx_load_from_disk] fail to locate the index files; /broad/software/free/Linux/redhat_6_x86_64/pkgs/bwa_0.7.12/bwa mem -t 1 -p src/test/resources/large/human_g1k_v37.20.21.fasta ./src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunMinimalBWAMEM/interleaved.fastq. at org.broadinstitute.hellbender.tools.spark.sv.RunMinimalBWAMEM.validateResults(RunMinimalBWAMEM.java:128); at org.broadinstitute.hellbender.tools.spark.sv.RunMinimalBWAMEM.doWork(RunMinimalBWAMEM.java:110); at org.broadinstitute.hellbender.tools.spark.sv.RunMinimalBWAMEM.doWork(RunMinimalBWAMEM.java:23); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:102); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:155); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:174); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:67); at org.broadinstitute.hellbender.Main.main(Main.java:82); ```. but when i run. ```; /broad/software/free/Linux/redhat_6_x86_64/pkgs/bwa_0.7.12/bwa mem -t 1 -p src/test/resources/large/human_g1k_v37.20.21.fasta ./src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunMinimalBWAMEM/interleaved.fastq; ```. it works just fine. Back to @SHuang-Broad",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1701#issuecomment-213470195:726,validat,validateResults,726,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1701#issuecomment-213470195,1,['validat'],['validateResults']
Security,"ile:///run/media/riadh/One%20Touch/Reference_data_b38/gnomad.genomes.v3.1.2.sites.chr3.vcf.bgz; 10:58:19.971 INFO FeatureManager - Using codec VCFCodec to read file file:///run/media/riadh/My%20Book_From%20Eiklid/Analysis/gatk-4.2.4.1/ensembl-vep/PE69_chr3.vcf; 10:58:20.063 INFO VariantAnnotator - Done initializing engine; 10:58:20.091 WARN VariantAnnotatorEngine - The requested expression attribute ""gnomad.ALT"" is missing from the header in its resource file gnomad; 10:58:20.140 INFO ProgressMeter - Starting traversal; 10:58:20.140 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 10:58:42.160 INFO VariantAnnotator - Shutting down engine; [March 17, 2022 at 10:58:42 AM CET] org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotator done. Elapsed time: 0.37 minutes.; Runtime.totalMemory()=17158897664; java.lang.IllegalStateException: Allele in genotype C not in the variant context [C*, CT]; 	at htsjdk.variant.variantcontext.VariantContext$Validation.validateGenotypes(VariantContext.java:382); 	at htsjdk.variant.variantcontext.VariantContext$Validation.access$200(VariantContext.java:323); 	at htsjdk.variant.variantcontext.VariantContext$Validation$2.validate(VariantContext.java:331); 	at htsjdk.variant.variantcontext.VariantContext.lambda$validate$0(VariantContext.java:1384); 	at java.base/java.lang.Iterable.forEach(Iterable.java:75); 	at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1384); 	at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:489); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:647); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:638); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.trimAlleles(GATKVariantContextUtils.java:1464); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.trimAlleles(GATKVariantContextUtils.java:1420); ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6689#issuecomment-1070784053:3961,Validat,Validation,3961,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6689#issuecomment-1070784053,1,['Validat'],['Validation']
Security,"ine the earlier stages of your pipeline that produce your bam to ensure you get a correctly formed bam. I'm going to close this ticket now since this doesn't appear to be an issue with Mutect2. (base) wm462-624:Downloads fleharty$ java -jar $PICARD ValidateSamFile I=concatenated_ACC5611A1_XXXXXX_consensusalign_ds.bam ; INFO	2020-07-14 11:25:52	ValidateSamFile	. ********** NOTE: Picard's command line syntax is changing.; **********; ********** For more information, please see:; ********** https://github.com/broadinstitute/picard/wiki/Command-Line-Syntax-Transition-For-Users-(Pre-Transition); **********; ********** The command line looks like this in the new syntax:; **********; ********** ValidateSamFile -I concatenated_ACC5611A1_XXXXXX_consensusalign_ds.bam; **********. 11:25:52.673 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/fleharty/resources/picard.jar!/com/intel/gkl/native/libgkl_compression.dylib; [Tue Jul 14 11:25:52 EDT 2020] ValidateSamFile INPUT=concatenated_ACC5611A1_XXXXXX_consensusalign_ds.bam MODE=VERBOSE MAX_OUTPUT=100 IGNORE_WARNINGS=false VALIDATE_INDEX=true INDEX_VALIDATION_STRINGENCY=EXHAUSTIVE IS_BISULFITE_SEQUENCED=false MAX_OPEN_TEMP_FILES=8000 SKIP_MATE_VALIDATION=false VERBOSITY=INFO QUIET=false VALIDATION_STRINGENCY=STRICT COMPRESSION_LEVEL=5 MAX_RECORDS_IN_RAM=500000 CREATE_INDEX=false CREATE_MD5_FILE=false GA4GH_CLIENT_SECRETS=client_secrets.json USE_JDK_DEFLATER=false USE_JDK_INFLATER=false; [Tue Jul 14 11:25:52 EDT 2020] Executing as fleharty@wm462-624 on Mac OS X 10.15.5 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_191-b12; Deflater: Intel; Inflater: Intel; Provider GCS is not available; Picard version: 2.20.4-SNAPSHOT; WARNING	2020-07-14 11:25:52	ValidateSamFile	NM validation cannot be performed without the reference. All other validations will still occur.; ERROR: Record 18321, Read name UMI-ATT-GAA-2, Zero-length read without FZ, CS or CQ tag; ERROR: Record 26312, Read name UMI-CCT-TTC-1, Zero-l",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6695#issuecomment-658247132:1094,Validat,ValidateSamFile,1094,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6695#issuecomment-658247132,1,['Validat'],['ValidateSamFile']
Security,input argument lists are now printed like this. ```; --validationTypeToExclude REF --validationTypeToExclude ALLELES --validationTypeToExclude CHR_COUNTS ; ```. and features like this. ```; --dbsnp /Users/louisb/Workspace/hellbender/src/test/resources/Homo_sapiens_assembly19.dbsnp135.chr1_1M.exome_intervals.vcf; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/318#issuecomment-84031055:55,validat,validationTypeToExclude,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/318#issuecomment-84031055,3,['validat'],['validationTypeToExclude']
Security,"intReadsSpark - Deflater: IntelDeflater; 18:11:33.871 INFO PrintReadsSpark - Inflater: IntelInflater; 18:11:33.871 INFO PrintReadsSpark - GCS max retries/reopens: 20; 18:11:33.871 INFO PrintReadsSpark - Using google-cloud-java patch c035098b5e62cb4fe9155eff07ce88449a361f5d from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes; 18:11:33.871 INFO PrintReadsSpark - Initializing engine; 18:11:33.871 INFO PrintReadsSpark - Done initializing engine; 17/10/13 18:11:33 INFO spark.SparkContext: Running Spark version 2.2.0.cloudera1; 17/10/13 18:11:34 WARN spark.SparkConf: spark.master yarn-client is deprecated in Spark 2.0+, please instead use ""yarn"" with specified deploy mode.; 17/10/13 18:11:34 INFO spark.SparkContext: Submitted application: PrintReadsSpark; 17/10/13 18:11:34 INFO spark.SecurityManager: Changing view acls to: hdfs; 17/10/13 18:11:34 INFO spark.SecurityManager: Changing modify acls to: hdfs; 17/10/13 18:11:34 INFO spark.SecurityManager: Changing view acls groups to: ; 17/10/13 18:11:34 INFO spark.SecurityManager: Changing modify acls groups to: ; 17/10/13 18:11:34 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(hdfs); groups with view permissions: Set(); users with modify permissions: Set(hdfs); groups with modify permissions: Set(); 17/10/13 18:11:34 INFO util.Utils: Successfully started service 'sparkDriver' on port 45754.; 17/10/13 18:11:34 INFO spark.SparkEnv: Registering MapOutputTracker; 17/10/13 18:11:34 INFO spark.SparkEnv: Registering BlockManagerMaster; 17/10/13 18:11:34 INFO storage.BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information; 17/10/13 18:11:34 INFO storage.BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up; 17/10/13 18:11:34 INFO storage.DiskBlockManager: Created local directory at /tmp/hdfs/blockmgr-ea0e0669-2981-4277-80a0-a67eddf1001d; 17/10/13 18:11:34 INFO memory.MemoryStore: ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-336412775:4108,Secur,SecurityManager,4108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-336412775,1,['Secur'],['SecurityManager']
Security,io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:507); 	... 12 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.client.util.ByteStreams.copy(ByteStreams.java:51); 	at shaded.cloud,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931:7981,secur,security,7981,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931,1,['secur'],['security']
Security,io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 47 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.client.util.ByteStreams.copy(ByteStreams.java:51); 	at shaded.cloud,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727:6275,secur,security,6275,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727,1,['secur'],['security']
Security,io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 55 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.client.util.ByteStreams.copy(ByteStreams.java:51); 	at shaded.cloud,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138:9763,secur,security,9763,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138,1,['secur'],['security']
Security,io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at org.gradle.wrapper.Download.downloadInternal(Download.java:77); 	at org.gradle.wrapper.Download.download(Download.java:44); 	at org.gradle.wrapper.Install$1.call(Install.java:61); 	at org.gradle.wrapper.Install$1.call(Install.java:48); 	at org.gradle.wrapper.ExclusiveFileAccessManager.access(ExclusiveFileAccessManager.java:69); 	at org.gradle.wrapper.Install.createDist(Install.java:48); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:107); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:284); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3368); 	at org.gradle.wrapper.Download.downloadInternal(Download.java:62); 	... 7 more; Caused by: java.net.SocketException: Connection reset; 	,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4194#issuecomment-358498401:1659,secur,security,1659,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4194#issuecomment-358498401,1,['secur'],['security']
Security,"ion. We will repeat the het-genotyping step, but this is cheap and it's probably better to repeat it to make sure filtering is applied consistently. It would also require more changes to the command line to specify where to output the hets for each sample during multisample segmentation and to skip genotyping in each scatter, if we were to go that route. There are many possible combinations of inputs that need to be tested, but the same is already true of the current ModelSegments. Furthermore, there are slight wrinkles when running in tumor-only mode (i.e., when `--normal-allelic-counts` are not available). Because each sample is genotyped indiviudally, each may yield a different set of hets (in contrast to genotyping in matched-normal mode, in which the normal determines the set of hets used in all samples). We will thus have to take the intersection of these hets before performing multisample segmentation. Unfortunately, we will not be able to re-perform this intersection in each scatter, since we will no longer have access to the hets from the other samples. However, we *will* ultimately intersect the hets from each sample with the joint segmentation before modeling, which may be a rough proxy for the intersection of hets from all samples. As always, tumor-only mode may yield suboptimal results in certain scenarios, e.g., high purity CNLOH. I think I'm OK with just documenting these wrinkles, rather than working too hard to iron them out. I think this structure sets us up nicely to accommodate germline tagging/filtering in the near future. We can still pass the Picard interval list containing the joint segmentation to the scatter for the normal, but can instead subsequently pass the *.modelBegin.seg result from the normal to the tumors. This modeled-segment file will have breakpoints identical to those from the joint segmentation (as opposed to the *.modelFinal.seg result, since that undergoes segment smoothing/merging), but will also contain the segment-level p",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-607313549:3176,access,access,3176,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-607313549,1,['access'],['access']
Security,irectRetryingExecutor.submit(DirectRetryingExecutor.java:92); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:47); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:125); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:109); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:131); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:104); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.available(AppInputStream.java:60); 	at java.io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:507); 	... 12 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931:6843,secur,security,6843,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931,1,['secur'],['security']
Security,it blows up for me when getting the sequence dictionary from the reference. I run this on the cloud. ```; ./gatk-launch CountVariantsSpark -V hdfs:///user/akiezun/dbsnp_138.b37.20.21.vcf.blockgz.gz -L 20 -R hdfs:///user/akiezun/human_g1k_v37.fasta -- --sparkRunner GCS --cluster dataproc-cluster-3; ```. and I get. ```; java.lang.IllegalArgumentException: java.net.UnknownHostException: null; at org.apache.hadoop.security.SecurityUtil.buildTokenService(SecurityUtil.java:377); at org.apache.hadoop.hdfs.NameNodeProxies.createNonHAProxy(NameNodeProxies.java:310); at org.apache.hadoop.hdfs.NameNodeProxies.createProxy(NameNodeProxies.java:176); at org.apache.hadoop.hdfs.DFSClient.<init>(DFSClient.java:678); at org.apache.hadoop.hdfs.DFSClient.<init>(DFSClient.java:619); at org.apache.hadoop.hdfs.DistributedFileSystem.initialize(DistributedFileSystem.java:149); at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:2653); at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:92); at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:2687); at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:2669); at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:371); at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:170); at hdfs.jsr203.HadoopFileSystem.<init>(HadoopFileSystem.java:106); at hdfs.jsr203.HadoopFileSystemProvider.newFileSystem(HadoopFileSystemProvider.java:165); at java.nio.file.FileSystems.newFileSystem(FileSystems.java:336); at org.broadinstitute.hellbender.utils.io.IOUtils.getPath(IOUtils.java:528); at org.broadinstitute.hellbender.engine.datasources.ReferenceHadoopSource.getReferenceSequenceDictionary(ReferenceHadoopSource.java:39); at org.broadinstitute.hellbender.engine.datasources.ReferenceMultiSource.getReferenceSequenceDictionary(ReferenceMultiSource.java:110); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeReference(GATKSparkTool.java:354); at org.broadinstitute.hellbender.engine.spark.GATK,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1936#issuecomment-229433523:414,secur,security,414,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1936#issuecomment-229433523,4,"['Secur', 'access', 'secur']","['SecurityUtil', 'access', 'security']"
Security,ity.ssl.AppInputStream.available(AppInputStream.java:60); 	at java.io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:507); 	... 12 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931:7914,secur,security,7914,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931,1,['secur'],['security']
Security,ity.ssl.AppInputStream.available(AppInputStream.java:60); 	at java.io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 47 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727:6208,secur,security,6208,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727,1,['secur'],['security']
Security,ity.ssl.AppInputStream.available(AppInputStream.java:60); 	at java.io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 55 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138:9696,secur,security,9696,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138,1,['secur'],['security']
Security,"ize 250`.; ```; WMCF9-CB5:shlee$ ./gatk LeftAlignAndTrimVariants -R ~/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V ~/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz --maxIndelSize 250 -O zeta_snippet_leftalign_maxindelsize250.vcf.gz; Using GATK wrapper script /Users/shlee/Documents/branches/hellbender/build/install/gatk/bin/gatk; Running:; /Users/shlee/Documents/branches/hellbender/build/install/gatk/bin/gatk LeftAlignAndTrimVariants -R /Users/shlee/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V /Users/shlee/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz --maxIndelSize 250 -O zeta_snippet_leftalign_maxindelsize250.vcf.gz; 17:24:16.345 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/shlee/Documents/branches/hellbender/build/install/gatk/lib/gkl-0.8.5.jar!/com/intel/gkl/native/libgkl_compression.dylib; Sep 05, 2018 5:24:16 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 17:24:16.502 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 17:24:16.502 INFO LeftAlignAndTrimVariants - The Genome Analysis Toolkit (GATK) v4.0.8.1-24-gb43bc27-SNAPSHOT; 17:24:16.502 INFO LeftAlignAndTrimVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 17:24:16.502 INFO LeftAlignAndTrimVariants - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 17:24:16.502 INFO LeftAlignAndTrimVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 17:24:16.503 INFO LeftAlignAndTrimVariants - Start Date/Time",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418887543:1039,authenticat,authenticated,1039,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418887543,1,['authenticat'],['authenticated']
Security,java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 55 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.client.util.ByteStreams.copy(ByteStreams.java:51); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:94); 	... 58 more; Caused by: java.net.SocketException: Connection reset; 	at java.net.SocketInputStream.read(SocketInputStream.java:209); 	at java.net.SocketInputStream.read(SocketInputStream.java:141); 	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); 	at sun.security.ssl.InputRecord.read(InputRecord.java:503); 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); 	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:930); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:105); 	... 68 more; ```. Also anecdotally it seems to happen less often.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138:11038,secur,security,11038,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138,5,['secur'],['security']
Security,javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(HttpStorageRpc.java:189); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:515); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:127); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:124); 	at shaded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:93); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:49); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:124); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:113); 	... 41 more; Caused by: javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.available(AppInputStream.java:60); 	at java.io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 47 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.secu,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727:5207,secur,security,5207,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727,1,['secur'],['security']
Security,javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(HttpStorageRpc.java:189); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:515); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:127); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:124); 	at shaded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:93); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:49); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:124); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:113); 	... 49 more; Caused by: javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.available(AppInputStream.java:60); 	at java.io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 55 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.secu,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138:8695,secur,security,8695,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138,1,['secur'],['security']
Security,"k; Running:; /Users/shlee/Documents/branches/hellbender/build/install/gatk/bin/gatk LeftAlignAndTrimVariants -R /Users/shlee/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V /Users/shlee/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz -O zeta_snippet_leftalign.vcf.gz; 16:34:35.251 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/shlee/Documents/branches/hellbender/build/install/gatk/lib/gkl-0.8.5.jar!/com/intel/gkl/native/libgkl_compression.dylib; Sep 05, 2018 4:34:35 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 16:34:35.413 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 16:34:35.414 INFO LeftAlignAndTrimVariants - The Genome Analysis Toolkit (GATK) v4.0.8.1-24-gb43bc27-SNAPSHOT; 16:34:35.414 INFO LeftAlignAndTrimVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 16:34:35.414 INFO LeftAlignAndTrimVariants - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 16:34:35.414 INFO LeftAlignAndTrimVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 16:34:35.414 INFO LeftAlignAndTrimVariants - Start Date/Time: September 5, 2018 4:34:35 PM EDT; 16:34:35.414 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 16:34:35.414 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 16:34:35.415 INFO LeftAlignAndTrimVariants - HTSJDK Version: 2.16.0; 16:34:35.415 INFO LeftAlignAndTrimVariants - Picard V",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418875494:1414,authenticat,authentication,1414,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418875494,1,['authenticat'],['authentication']
Security,kGraphExecuter.java:256); 	at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336); 	at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328); 	at org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199); 	at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110); 	at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:249); 	at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:238); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.processTask(DefaultTaskPlanExecutor.java:123); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.access$200(DefaultTaskPlanExecutor.java:79); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:104); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:98); 	at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.execute(DefaultTaskExecutionPlan.java:663); 	at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.executeWithTask(DefaultTaskExecutionPlan.java:597); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.run(DefaultTaskPlanExecutor.java:98); 	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63); 	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at org.gradle.internal.con,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:11429,access,access,11429,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445,1,['access'],['access']
Security,lbender.relocated.com.google.common.collect.AbstractMapBasedMultimap.put; 0.5% 370 + 1 org.broadinstitute.hellbender.utils.baq.BAQ.calcBAQFromHMM; 0.5% 360 + 0 org.broadinstitute.hellbender.relocated.com.google.common.collect.ImmutableListMultimap.copyOf; 0.4% 348 + 5 scala.collection.IndexedSeqOptimized$class.zip; 0.4% 330 + 3 com.esotericsoftware.kryo.serializers.FieldSerializer$ObjectField.read; 0.4% 325 + 0 htsjdk.samtools.SAMBinaryTagAndValue.find; 0.4% 322 + 0 org.broadinstitute.hellbender.utils.read.SAMRecordToGATKReadAdapter.getReadGroup; 66.2% 45378 + 7026 Total compiled (including elided). Stub + native Method ; 11.8% 0 + 9359 java.lang.String.intern; 7.1% 0 + 5608 java.util.zip.Deflater.deflateBytes; 6.9% 0 + 5492 java.lang.System.identityHashCode; 2.8% 0 + 2196 java.util.zip.Inflater.inflateBytes; 1.8% 0 + 1447 java.net.SocketInputStream.socketRead0; 0.6% 0 + 484 java.io.FileOutputStream.writeBytes; 0.4% 0 + 285 java.util.zip.Inflater.reset; 0.3% 0 + 259 sun.nio.ch.NativeThread.current; 0.3% 0 + 222 sun.nio.ch.EPollArrayWrapper.epollWait; 0.2% 0 + 137 java.util.zip.Deflater.reset; 0.1% 0 + 115 sun.nio.ch.FileDispatcherImpl.read0; 0.1% 0 + 113 org.apache.hadoop.util.NativeCrc32.nativeComputeChunkedSumsByteArray; 0.1% 67 + 4 java.lang.ClassLoader.defineClass1; 0.1% 0 + 51 java.util.zip.ZipFile.getEntry; 0.1% 0 + 41 java.lang.Throwable.fillInStackTrace; 0.0% 0 + 24 org.apache.hadoop.util.NativeCrc32.nativeComputeChunkedSums; 0.0% 0 + 23 java.lang.System.arraycopy; 0.0% 0 + 18 java.lang.Object.clone; 0.0% 1 + 15 java.io.UnixFileSystem.getBooleanAttributes0; 0.0% 0 + 14 sun.reflect.Reflection.getClassAccessFlags; 0.0% 0 + 13 java.lang.Thread.isInterrupted; 0.0% 0 + 11 java.lang.Class.isPrimitive; 0.0% 0 + 11 java.lang.Class.isArray; 0.0% 0 + 10 sun.nio.ch.FileDispatcherImpl.size0; 0.0% 4 + 5 java.security.AccessController.doPrivileged; 33.0% 77 + 26077 Total stub (including elided). Thread-local ticks:; 29.9% 33828 Blocked (of total); 0.0% 3 Class loader. ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1657#issuecomment-208967490:5291,secur,security,5291,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1657#issuecomment-208967490,2,"['Access', 'secur']","['AccessController', 'security']"
Security,"le.cloud.genomics.dataflow.utils.DataflowWorkarounds registerGenomicsCoders; INFO: Registering coder for VariantAnnotation; Jul 14, 2015 1:14:51 PM com.google.cloud.genomics.dataflow.utils.DataflowWorkarounds registerGenomicsCoders; INFO: Registering coder for SearchAnnotationSetsRequest; Jul 14, 2015 1:14:51 PM com.google.cloud.genomics.dataflow.utils.DataflowWorkarounds registerGenomicsCoders; INFO: Registering coder for RangePosition; Jul 14, 2015 1:14:51 PM com.google.cloud.genomics.dataflow.utils.DataflowWorkarounds registerGenomicsCoders; INFO: Registering coder for SearchJobsRequest; Jul 14, 2015 1:14:51 PM com.google.cloud.genomics.dataflow.utils.DataflowWorkarounds registerGenomicsCoders; INFO: Registering coder for ExportVariantSetRequest; 15/07/14 13:14:51 INFO spark.SparkPipelineRunner: Executing pipeline using the SparkPipelineRunner.; 15/07/14 13:14:51 INFO spark.SparkContext: Running Spark version 1.3.1; 15/07/14 13:14:51 INFO spark.SecurityManager: Changing view acls to: louisb; 15/07/14 13:14:51 INFO spark.SecurityManager: Changing modify acls to: louisb; 15/07/14 13:14:51 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(louisb); users with modify permissions: Set(louisb); 15/07/14 13:14:52 INFO slf4j.Slf4jLogger: Slf4jLogger started; 15/07/14 13:14:52 INFO Remoting: Starting remoting; 15/07/14 13:14:52 INFO Remoting: Remoting started; listening on addresses :[akka.tcp://sparkDriver@wm1b0-8ab.broadinstitute.org:65238]; 15/07/14 13:14:52 INFO util.Utils: Successfully started service 'sparkDriver' on port 65238.; 15/07/14 13:14:52 INFO spark.SparkEnv: Registering MapOutputTracker; 15/07/14 13:14:52 INFO spark.SparkEnv: Registering BlockManagerMaster; 15/07/14 13:14:52 INFO storage.DiskBlockManager: Created local directory at /var/folders/xt/vq7wz8955r1401mv8w0f4zf9qbfwzl/T/louisb/spark-7b286138-5fde-4fcb-bc34-3c6a86da6c0c/blockmgr-46eb69b0-d3ca-4004-bf32-ab103c0787f2; 15/07/14 13:1",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/639#issuecomment-121313713:16199,Secur,SecurityManager,16199,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/639#issuecomment-121313713,1,['Secur'],['SecurityManager']
Security,lidator.java](https://codecov.io/gh/broadinstitute/gatk/pull/3755?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9CYXNpY1NvbWF0aWNTaG9ydE11dGF0aW9uVmFsaWRhdG9yLmphdmE=) | `64.865% <64.865%> (ø)` | `5 <5> (?)` | |; | [.../basicshortmutpileup/BetaBinomialDistribution.java](https://codecov.io/gh/broadinstitute/gatk/pull/3755?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9CZXRhQmlub21pYWxEaXN0cmlidXRpb24uamF2YQ==) | `68.182% <68.182%> (ø)` | `4 <4> (?)` | |; | [...ation/basicshortmutpileup/AllelePileupCounter.java](https://codecov.io/gh/broadinstitute/gatk/pull/3755?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9BbGxlbGVQaWxldXBDb3VudGVyLmphdmE=) | `81.25% <81.25%> (ø)` | `12 <12> (?)` | |; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/3755?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `85.965% <85.965%> (ø)` | `7 <7> (?)` | |; | [...ion/basicshortmutpileup/PowerCalculationUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3755?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9Qb3dlckNhbGN1bGF0aW9uVXRpbHMuamF2YQ==) | `95.238% <95.238%> (ø)` | `15 <15> (?)` | |; | [...bender/utils/GATKProtectedVariantContextUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3755?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9HQVRLUHJvdGVjdGVkVmFyaWFudENvbnRleHRVdGlscy5qYXZh) | `77.901% <95.833%> (+6.472%)` | `70 <23> (+23)` | :arrow_up: |; | [...ion/basicshortmutpileup/B,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3755#issuecomment-341515732:2828,Validat,ValidateBasicSomaticShortMutations,2828,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3755#issuecomment-341515732,1,['Validat'],['ValidateBasicSomaticShortMutations']
Security,"lity shouldn't really change across some of them.; ; I'm currently just using call outs to system commands to diff and h5diff the VCFs and HDF5s, respectively. I think the latter command should be available in the GATK Conda environment. This will be a bit awkward, in the sense that the tests for this tool will require the Conda environment, but the tool itself will not. But I think this is probably preferable to writing test code to compare HDF5s, minimal though that might be, since the schema might change in the future.; - [x] Tool-level docs. Minor TODOs:. - [x] Parameter-level docs. Could perhaps expand on the `resources` parameter once the required labels are settled.; - [x] Parameter validation.; - [x] Clean up docs for parent walker.; - [x] Decide on required labels. I think ""training"" and ""calibration"" (rather than the legacy ""training"" and ""truth"") might be good candidates. EDIT: Switched ""truth"" to ""calibration"" throughout the codebase.; - [x] Validate privileged labels (snp, training, calibration) in parent walker.; ; Future work:. - [ ] Clean up unlabeled outputs. This includes 1) sorting the corresponding HDF5, and 2) outputting a corresponding sites-only VCF. Unlike the labeled sites, which are written individually to VCF as we traverse them, unlabeled sites are placed into a reservoir of fixed size for subsampling purposes. Thus, we cannot write them to VCF as with labeled sites; furthermore, after traversal, the unlabeled sites are not ordered within the reservoir. Ultimately, the lack of this VCF means that extracted, unlabeled sites cannot be tagged as such by the scoring tool in the final VCF.; - [ ] Consider downsampling of labeled data. This is not done because 1) of the complications just mentioned, 2) we assume that labeled data is precious and that one-time extraction of it will always be relatively cheap, especially compared to training (and that training implementations can always downsample, if needed), and 3) using -L functionality to subs",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948059:3440,Validat,Validate,3440,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948059,1,['Validat'],['Validate']
Security,"log4j system properly.; log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.; 23:01:58.560 INFO FeatureManager - Using codec GencodeGtfCodec to read file file:///omics/chatchawit/bundle/test/gencode/hg38/gencode.v27.chr_patch_hapl_scaff.annotation.REORDERED.gtf; 23:02:05.335 INFO ProgressMeter - Starting traversal; 23:02:05.337 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 23:02:06.530 INFO Funcotator - Shutting down engine; [April 27, 2018 11:02:06 PM ICT] org.broadinstitute.hellbender.tools.funcotator.Funcotator done. Elapsed time: 0.16 minutes.; Runtime.totalMemory()=3420979200; java.lang.IllegalArgumentException: Invalid interval. Contig:ENST00000342066.7|ENSG00000187634.11|OTTHUMG00000040719.10|OTTHUMT00000276866.2|SAMD11-202|SAMD11|2551|protein_coding| start:0 end:0; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:687); at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:37); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.getCodingSequenceFromTranscriptFasta(GencodeFuncotationFactory.java:418); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createSequenceComparison(GencodeFuncotationFactory.java:1177); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createCodingRegionFuncotation(GencodeFuncotationFactory.java:619); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createGencodeFuncotationOnTranscript(GencodeFuncotationFactory.java:575); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createFuncotations(GencodeFuncotationFactory.java:487); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.Genc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4712#issuecomment-385021157:7302,validat,validatePositions,7302,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4712#issuecomment-385021157,1,['validat'],['validatePositions']
Security,"looks like we need to run a special fetch command to get access to the pr merge commits, ex:; ```; git fetch origin +refs/pull/3217/merge; ```; Looks like the change is a bit more complicated than I hoped.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3217#issuecomment-313238500:57,access,access,57,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3217#issuecomment-313238500,1,['access'],['access']
Security,"loped a clustering procedure that is based on coverage profile at the set of targets that are highly variable across different capture kits. ; - We found that filtering on a QS metric on a final callset significantly boosted the specificity while lowering sensitivity insignificantly.; - We developed a hyperparameter optimization framework prototype that could be used in a future for general optimizations of cost/performance parameters for all GATK pipelines.; - We resolved several memory issues that came up during validations. **A few issues were encountered along the way:**; - The sensitivity and specificity on multiallellic (common) sites was significantly lower than on rare events.; - Single target calling sensitivity was lower than 20%.; - Pipeline WDL required optimization in order to handle whole genome data, however these changes were not consolidated in the official WDL. **Currently the ongoing work is focused on the following:**; - Improving sensitivity/specificity of calls on common regions. One solution being tested involves setting a prior for common regions derived from a high quality callset. Second solution is to set a different filtering threshold for common regions.; - Consolidating validation scripts to process gCNV output and outputs of competing tools measure their performances against ground truth.; - Analyzing 1000 Genomes exomes, which could be potentially used for public facing automatic evaluations. **The following items are necessary done for automatic evaluation:** ; - Dataset + truth. We need an access to a high quality public cohort with matched whole genomes. These genomes have to have a corresponding high quality truth set generated from split-read/read-pair methods. From that cohort we need to find 50-200 relatively homogeneous samples.; - An established validation workflow that outputs a set predetermined metrics that are unlikely to change in a future. Such as a sensitivity/specificity stratified by event size and allelic frequency.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4123#issuecomment-532500502:1767,validat,validation,1767,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4123#issuecomment-532500502,3,"['access', 'validat']","['access', 'validation']"
Security,ltBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:394); at org.gradle.internal.operations.DefaultBuildOperationExecutor$1.execute(DefaultBuildOperationExecutor.java:165); at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:250); at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:158); at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:92); at org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31); at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:461); at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:444); at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.access$200(ExecuteActionsTaskExecuter.java:93); at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$TaskExecution.execute(ExecuteActionsTaskExecuter.java:237); at org.gradle.internal.execution.steps.ExecuteStep.lambda$execute$1(ExecuteStep.java:33); at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:33); at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:26); at org.gradle.internal.execution.steps.CleanupOutputsStep.execute(CleanupOutputsStep.java:58); at org.gradle.internal.execution.steps.CleanupOutputsStep.execute(CleanupOutputsStep.java:35); at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:48); at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:33); at org.gradle.internal.execution.steps.CancelExecutionStep.execute(CancelExecutionStep.java:39); at org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:73,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6466#issuecomment-590387973:7551,access,access,7551,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6466#issuecomment-590387973,2,['access'],['access']
Security,"m%20Eiklid/Analysis/gatk-4.2.4.1/ensembl-vep/PE69_chr3.vcf; 10:58:20.063 INFO VariantAnnotator - Done initializing engine; 10:58:20.091 WARN VariantAnnotatorEngine - The requested expression attribute ""gnomad.ALT"" is missing from the header in its resource file gnomad; 10:58:20.140 INFO ProgressMeter - Starting traversal; 10:58:20.140 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 10:58:42.160 INFO VariantAnnotator - Shutting down engine; [March 17, 2022 at 10:58:42 AM CET] org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotator done. Elapsed time: 0.37 minutes.; Runtime.totalMemory()=17158897664; java.lang.IllegalStateException: Allele in genotype C not in the variant context [C*, CT]; 	at htsjdk.variant.variantcontext.VariantContext$Validation.validateGenotypes(VariantContext.java:382); 	at htsjdk.variant.variantcontext.VariantContext$Validation.access$200(VariantContext.java:323); 	at htsjdk.variant.variantcontext.VariantContext$Validation$2.validate(VariantContext.java:331); 	at htsjdk.variant.variantcontext.VariantContext.lambda$validate$0(VariantContext.java:1384); 	at java.base/java.lang.Iterable.forEach(Iterable.java:75); 	at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1384); 	at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:489); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:647); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:638); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.trimAlleles(GATKVariantContextUtils.java:1464); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.trimAlleles(GATKVariantContextUtils.java:1420); 	at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorEngine.getMinRepresentationBiallelics(VariantAnnotatorEngine.java:568); 	at org.broadinstitute.hellbender.tools.walkers.annotato",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6689#issuecomment-1070784053:4162,Validat,Validation,4162,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6689#issuecomment-1070784053,1,['Validat'],['Validation']
Security,"m.google.cloud.genomics.gatk.common. I've been working on this bam file issue, correcting errors in the files used for tests. Many of the errors involve reads with FLAGs that indicate that they are in pairs, but the mate is not extant in the file, causing the error. A way to fix this without deleting the offending reads is to set the FLAG to zero and also modify the RNEXT, PNEXT, and TLEN fields, if necessary, so that the read becomes single (provided that the values of all of these fields are not important for the tests). However, when I do this, I find that tests that write and then read bam files fail, because when the just-written file is read back, SAM validation complains that the mate unmapped FLAG is set for an unpaired read. It turns out that the copy of the file written by the test substitutes the value '8' for '0' as the FLAG for the modified reads. The relevant code in GenomicsConvertermakeSamRecord() (line 170) is:. flags += ((read.getNextMatePosition() == null || read.getNextMatePosition.getPosition() == null)) ? 8 : 0;. The effect of this line is that all reads which have null mate positions, even those which the FLAG specifies as unpaired, get the mate unmapped FLAG set, causing the validation errors that i'm seeing. The reason the tests have not failed before is apparently that the existing test files do not contain any reads with FLAGs that specify them as unpaired. A simple fix for this would be to convert the line above to:. flags += ( paired && (read.getNextMatePosition() == null || read.getNextMatePosition.getPosition() == null)) ? 8 : 0;. The redundant parens in the original code suggest that something like this may have been intended,but the google genomics documentation at http://google-genomics.readthedocs.org/en/latest/migrating_tips.html gives the following pseudocode:. flags += read.nextMatePosition.position == null ? 8 : 0 #mate_unmapped. so it looks like the doc supports the existing code. Should I submit this as an issue? . Thank you.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/569#issuecomment-114101033:1375,validat,validation,1375,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/569#issuecomment-114101033,1,['validat'],['validation']
Security,mail.com>; Date: Tue Dec 12 11:26:31 2017 -0500. disabled some gCNV WDL tests. commit 6d8ca07fef41518b5b157fb9a214d4536c617156; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 12 10:54:54 2017 -0500. fixed DenoiseReadCountsIntegrationTest files. commit adfbef12f2ab90f93b49a4f786979549648e1f22; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Mon Dec 11 02:22:56 2017 -0500. removed CNV evaluation code from this branch. commit 18c8d31f39a1964474c5d7b12ee8cbfafc4ac9e2; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Sun Dec 10 00:19:58 2017 -0500. GS VCF parser outputs dict for samples instead of list. commit b138be39cd8428342668ee6678079021006f983b; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Sun Dec 10 00:15:19 2017 -0500. renaming. commit eab5c90b74b4eb6bd11acb0fd1e0fa58a3b5b0c7; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 16:23:40 2017 -0500. exposed a global preemptible_attempts to gCNV workflows; set OMP_NUM_THREADS and MKL_NUM_THREADS to the number of requested CPUs. commit ad6fe348d6a7896c169b2b0499e2a4bca34021ad; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 10:21:25 2017 -0500. reverted log level in germline CNV tests. commit d9eb4e504baab834a9efc07cc3479176db2946ce; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 10:20:30 2017 -0500. the proper python environment yml for mkl and open -- leads to orders of magnitude speedup!. commit fea6bf874e0b62262a3b1d239ce4d76792d5c416; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 09:31:43 2017 -0500. revert. commit 456c53f88d01b603f4175d8896a0dac036af03f8; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 08:17:22 2017 -0500. enabled openmp g++ linking in theano. commit e2afef14ddb957f2dbdea76fd783d3bfb8d7a64e; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 08:04:19 2017 -0500. mkl. commit 43e2a65201286161fcd5bfe7dbb21ae888e1,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598:2311,expose,exposed,2311,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598,1,['expose'],['exposed']
Security,"markw@WMC9F-819:~/IdeaProjects/gatk$ ./gatk-launch PrintReadsSpark -I gs://mw-pathseq-test/hs37d5cs.reads.sorted.bam -O hs37d5cs.reads.txt --apiKey XXXXXXXXXXXXXXXXXXXX --verbosity DEBUG -- --sparkRunner GCS --cluster mw-test --project broad-dsde-methods; Using GATK jar /Users/markw/IdeaProjects/gatk/build/libs/gatk-package-4.alpha.2-157-g7d7c5ec-SNAPSHOT-spark.jar; jar caching is disabled because GATK_GCS_STAGING is not set. please set GATK_GCS_STAGING to a bucket you have write access too in order to enable jar caching; add the following line to you .bashrc or equivalent startup script. export GATK_GCS_STAGING=gs://<my_bucket>/. Replacing spark-submit style args with dataproc style args. --cluster mw-test --project broad-dsde-methods -> --cluster mw-test --project broad-dsde-methods --properties spark.kryoserializer.buffer.max=512m,spark.driver.maxResultSize=0,spark.driver.userClassPathFirst=true,spark.io.compression.codec=lzf,spark.yarn.executor.memoryOverhead=600,spark.driver.extraJavaOptions=-Dsamjdk.compression_level=1 -DGATK_STACKTRACE_ON_USER_EXCEPTION=true ,spark.executor.extraJavaOptions=-Dsamjdk.compression_level=1 -DGATK_STACKTRACE_ON_USER_EXCEPTION=true. Running:; gcloud dataproc jobs submit spark --cluster mw-test --project broad-dsde-methods --properties spark.kryoserializer.buffer.max=512m,spark.driver.maxResultSize=0,spark.driver.userClassPathFirst=true,spark.io.compression.codec=lzf,spark.yarn.executor.memoryOverhead=600,spark.driver.extraJavaOptions=-Dsamjdk.compression_level=1 -DGATK_STACKTRACE_ON_USER_EXCEPTION=true ,spark.executor.extraJavaOptions=-Dsamjdk.compression_level=1 -DGATK_STACKTRACE_ON_USER_EXCEPTION=true --jar /Users/markw/IdeaProjects/gatk/build/libs/gatk-package-4.alpha.2-157-g7d7c5ec-SNAPSHOT-spark.jar -- PrintReadsSpark -I gs://mw-pathseq-test/hs37d5cs.reads.sorted.bam -O hs37d5cs.reads.txt --apiKey XXXXXXXXXXXXXXXXXXXXX --verbosity DEBUG --sparkMaster yarn; Copying file:///Users/markw/IdeaProjects/gatk/build/libs/gatk-package-4.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2394#issuecomment-277823929:485,access,access,485,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2394#issuecomment-277823929,1,['access'],['access']
Security,"more recent versions of gatk have a different message now, which is also confusing:. ```; ./gatk-launch PrintReadsSpark -I hdfs://local/print_reads.sorted.bam -O output.bam -- --sparkRunner SPARK --sparkMaster yarn-client; ```. ```; java.lang.IllegalArgumentException: java.net.UnknownHostException: local; at org.apache.hadoop.security.SecurityUtil.buildTokenService(SecurityUtil.java:374); at org.apache.hadoop.hdfs.NameNodeProxies.createNonHAProxy(NameNodeProxies.java:310); at org.apache.hadoop.hdfs.NameNodeProxies.createProxy(NameNodeProxies.java:176); at org.apache.hadoop.hdfs.DFSClient.<init>(DFSClient.java:707); at org.apache.hadoop.hdfs.DFSClient.<init>(DFSClient.java:650); at org.apache.hadoop.hdfs.DistributedFileSystem.initialize(DistributedFileSystem.java:148); at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:2643); at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:93); at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:2680); at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:2662); at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:379); at org.apache.hadoop.fs.Path.getFileSystem(Path.java:296); at org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSource.getHeader(ReadsSparkSource.java:183); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeReads(GATKSparkTool.java:337); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeToolInputs(GATKSparkTool.java:317); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:308); at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:38); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:98); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:146); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(Co",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1257#issuecomment-175789890:328,secur,security,328,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1257#issuecomment-175789890,4,"['Secur', 'access', 'secur']","['SecurityUtil', 'access', 'security']"
Security,mory including 384 MB overhead; 17/10/13 18:11:36 INFO yarn.Client: Setting up container launch context for our AM; 17/10/13 18:11:36 INFO yarn.Client: Setting up the launch environment for our AM container; 17/10/13 18:11:36 INFO yarn.Client: Preparing resources for our AM container; 17/10/13 18:11:37 INFO yarn.Client: Uploading resource file:/tmp/hdfs/spark-c7e5eece-205e-4bce-a69b-4168c9b79045/__spark_conf__2918234914787361986.zip -> hdfs://mg:8020/user/hdfs/.sparkStaging/application_1507856833944_0003/__spark_conf__.zip; 17/10/13 18:11:37 INFO spark.SecurityManager: Changing view acls to: hdfs; 17/10/13 18:11:37 INFO spark.SecurityManager: Changing modify acls to: hdfs; 17/10/13 18:11:37 INFO spark.SecurityManager: Changing view acls groups to: ; 17/10/13 18:11:37 INFO spark.SecurityManager: Changing modify acls groups to: ; 17/10/13 18:11:37 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(hdfs); groups with view permissions: Set(); users with modify permissions: Set(hdfs); groups with modify permissions: Set(); 17/10/13 18:11:37 INFO yarn.Client: Submitting application application_1507856833944_0003 to ResourceManager; 17/10/13 18:11:37 INFO impl.YarnClientImpl: Submitted application application_1507856833944_0003; 17/10/13 18:11:37 INFO cluster.SchedulerExtensionServices: Starting Yarn extension services with app application_1507856833944_0003 and attemptId None; 17/10/13 18:11:38 INFO yarn.Client: Application report for application_1507856833944_0003 (state: ACCEPTED); 17/10/13 18:11:38 INFO yarn.Client: ; 	 client token: N/A; 	 diagnostics: N/A; 	 ApplicationMaster host: N/A; 	 ApplicationMaster RPC port: -1; 	 queue: root.users.hdfs; 	 start time: 1507889497661; 	 final status: UNDEFINED; 	 tracking URL: http://mg:8088/proxy/application_1507856833944_0003/; 	 user: hdfs; 17/10/13 18:11:39 INFO yarn.Client: Application report for application_1507856833944_0003 (state: ACCEPTED); 17/10/13 ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-336412775:10868,Secur,SecurityManager,10868,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-336412775,3,"['Secur', 'authenticat']","['SecurityManager', 'authentication']"
Security,"most people get protected. I'd rather push the pain down to public (unless; it doubles the pain and both repos need this). Oh btw, perhaps we should spin off the HDF5 to a separate project that we; would just inject in gatk; wdyt?. On Thu, Jun 9, 2016 at 10:37 AM, Louis Bergelson notifications@github.com; wrote:. > do we want this in protected? It means people have to go through arcane; > installation procedures...; > ; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub; > https://github.com/broadinstitute/gatk/pull/1901#issuecomment-224914735,; > or mute the thread; > https://github.com/notifications/unsubscribe/AB5rLyoyUN__Bfdub4Sejc920Eh84aQUks5qKCUMgaJpZM4IxmGO; > .",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1901#issuecomment-224925037:209,inject,inject,209,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1901#issuecomment-224925037,1,['inject'],['inject']
Security,"n `CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam` from `ValidateSamFile`. Here's some of the output:. ```; [March 9, 2017 7:03:42 PM EST] org.broadinstitute.hellbender.tools.picard.sam.ValidateSamFile --input src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam --use_jdk_deflater true --use_jdk_inflater true --MODE VERBOSE --MAX_OUTPUT 100 --IGNORE_WARNINGS false --VALIDATE_INDEX true --IS_BISULFITE_SEQUENCED false --MAX_OPEN_TEMP_FILES 8000 --VALIDATION_STRINGENCY STRICT --COMPRESSION_LEVEL 1 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX false --CREATE_MD5_FILE false --help false --version false --verbosity INFO --QUIET false; [March 9, 2017 7:03:42 PM EST] Executing as gspowley@dna on Linux 3.10.0-514.10.2.el7.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14; Version: Version:4.alpha.2-170-g8d06823-SNAPSHOT; 19:03:42.998 INFO ValidateSamFile - Defaults.BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.COMPRESSION_LEVEL : 1; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - In",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:1019,Validat,ValidateSamFile,1019,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,"naging and querying Supplementary alignment; > information from read alignment records:; >; > Some of the things that I think smell:; >; > 1.; >; > Querying: implemented in htsjdk consists in forging artificial; > SAMRecords that contain only the alignment info in the SA tag element... It; > seems to me that it makes more sense to create class to hold this; > information alone (e.g. ReadAlignmentInfo or ReadAlignment); SATagBuilder; > already has defined a private inner class with that in mind ""SARead"" so why; > not flesh it out and make it public.; > 2.; >; > Writing: currently SATagBuilder gets attached to a read, parsing its; > current SA attribute content into SARead instances. It provides the; > possibility adding additional SAM record one by one or clearing the list.; > ... then it actually updates the SA attribute on the original read when a; > method (setTag) is explicitly called.; >; > I don't see the need to attach the SATag Builder to a read... it could; > perfectly be free standing; the same builder could be re-apply to several; > reads for that matter and I don't see any gain in hiding the read SA tag; > setting process,... even if typically this builder output would go to the; > ""SA"" tag, perhaps at some point we would like to also write SA coordinate; > list somewhere else, some other tag name or perhaps an error message... why; > impose this single purpose limitation?; >; > I suggest to drop the notion of a builder for a more general custom; > ReadAlignmentInfo (or whatever name) list. Such list could be making; > reference to a dictionary to validate its elements, prevent duplicates,; > keep the primary SA in the first position... etc.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/3324>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AArTZft11VTCtCHT_xr89kPL7hMFYQyhks5sQNghgaJpZM4Ofpkb>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3324#issuecomment-317065323:2350,validat,validate,2350,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3324#issuecomment-317065323,1,['validat'],['validate']
Security,nches 14766 14773 +7 ; ===============================================; + Hits 114640 114660 +20 ; - Misses 12746 12748 +2 ; - Partials 5327 5334 +7; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4999?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...tmutpileup/BasicSomaticShortMutationValidator.java](https://codecov.io/gh/broadinstitute/gatk/pull/4999/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9CYXNpY1NvbWF0aWNTaG9ydE11dGF0aW9uVmFsaWRhdG9yLmphdmE=) | `60.526% <0%> (-4.339%)` | `5 <3> (ø)` | |; | [...dateBasicSomaticShortMutationsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4999/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zSW50ZWdyYXRpb25UZXN0LmphdmE=) | `100% <100%> (ø)` | `5 <0> (ø)` | :arrow_down: |; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/4999/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `83.486% <75%> (-3.419%)` | `19 <4> (+6)` | |; | [...nder/utils/runtime/StreamingProcessController.java](https://codecov.io/gh/broadinstitute/gatk/pull/4999/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9ydW50aW1lL1N0cmVhbWluZ1Byb2Nlc3NDb250cm9sbGVyLmphdmE=) | `71.292% <0%> (-0.957%)` | `35% <0%> (-1%)` | |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/4999/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb250ZXh0RmFjdG9yeS5qYXZh) | `73.973% <0%> (+2.74%)` | `11% <0%> (ø)` | :arrow_down: |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4999#issuecomment-405370854:1680,Validat,ValidateBasicSomaticShortMutations,1680,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4999#issuecomment-405370854,1,['Validat'],['ValidateBasicSomaticShortMutations']
Security,"ne labelled; ""shadowJar"", ie. gatk-all-4.pre-alpha-175-*-SNAPSHOT-shadowJar.jar. This is a proper fatJar with all of the dependencies packaged up together. The installDist target produces a different jar file that doesn't shadow; all of the dependencies, and so I think it needs to be run with the 'gatk'; wrapper script that sets the classpath in build/scripts. It is a little confusing having all three jar targets, and maybe you guys; don't want to support that, but I was hoping to make a fat jar with all the; dependencies bundled, and the previous 'fatJar' target wasn't working; properly. My PR basically just replaced that old 'fatJar' target with; 'shadowJar'. On Fri, Dec 4, 2015 at 11:32 AM, Tom White notifications@github.com wrote:. > @cwhelan https://github.com/cwhelan I've having problems with the; > non-Spark JAR though:; > ; > $ gradle clean installDist; > $ java -jar build/libs/gatk-4.pre-alpha-*-SNAPSHOT.jar; > Exception in thread ""main"" java.lang.NoClassDefFoundError: org/apache/logging/log4j/LogManager; > at org.broadinstitute.hellbender.cmdline.ClassFinder.<clinit>(ClassFinder.java:29); > at org.broadinstitute.hellbender.Main.extractCommandLineProgram(Main.java:108); > at org.broadinstitute.hellbender.Main.instanceMain(Main.java:66); > at org.broadinstitute.hellbender.Main.main(Main.java:86); > Caused by: java.lang.ClassNotFoundException: org.apache.logging.log4j.LogManager; > at java.net.URLClassLoader$1.run(URLClassLoader.java:372); > at java.net.URLClassLoader$1.run(URLClassLoader.java:361); > at java.security.AccessController.doPrivileged(Native Method); > at java.net.URLClassLoader.findClass(URLClassLoader.java:360); > at java.lang.ClassLoader.loadClass(ClassLoader.java:424); > at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308); > at java.lang.ClassLoader.loadClass(ClassLoader.java:357); > ... 4 more; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/broadinstitute/gatk/pull/1213#issuecomment-162013287.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1213#issuecomment-162017907:1602,secur,security,1602,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1213#issuecomment-162017907,2,"['Access', 'secur']","['AccessController', 'security']"
Security,ngs with 4.5 release. There are links to snyk version update recommendations. I know sometimes its not easy just to upgrade the library version as we could end up with run time errors. I am adding this here so that its handy when ever you look at this further. Thanks again. . packageName | version | severity | language | module_id; -- | -- | -- | -- | --; com.google.protobuf:protobuf-java | 3.7.1 | high | java | [SNYK-JAVA-COMGOOGLEPROTOBUF-2331703 ](https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLEPROTOBUF-2331703 ); com.google.protobuf:protobuf-java | 3.7.1 | high | java | [SNYK-JAVA-COMGOOGLEPROTOBUF-3167772](https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLEPROTOBUF-3167772); io.netty:netty-codec-http2 | 4.1.96.Final | high | java | [SNYK-JAVA-IONETTY-5953332](https://security.snyk.io/vuln/SNYK-JAVA-IONETTY-5953332); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342645](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342645); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342646](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342646); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342647](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342647); log4j:log4j | 1.2.17 | critical | java | [SNYK-JAVA-LOG4J-572732](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-572732); net.minidev:json-smart | 1.3.2 | high | java | [SNYK-JAVA-NETMINIDEV-3369748](https://security.snyk.io/vuln/SNYK-JAVA-NETMINIDEV-3369748); org.apache.zookeeper:zookeeper | 3.6.3 | high | java | [SNYK-JAVA-ORGAPACHEZOOKEEPER-5961102](https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEZOOKEEPER-5961102); org.codehaus.jettison:jettison | 1.1 | high | java | [SNYK-JAVA-ORGCODEHAUSJETTISON-3168085](https://security.snyk.io/vuln/SNYK-JAVA-ORGCODEHAUSJETTISON-3168085); org.codehaus.jettison:jettison | 1.1 | high | java | [SNYK-JAVA-ORGCODEHAUSJETTISON-3367610](https://security.snyk.io/vuln/SNYK-JAVA-ORGCODEHAUSJETTISON-3367610); org.eclipse.jetty:jetty-http | 9.4.52.v20230823 | high | java ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8215#issuecomment-1890593067:1310,secur,security,1310,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8215#issuecomment-1890593067,1,['secur'],['security']
Security,"no need for a hash value - any number will do, it's just a version of the class. OK, looks good, feel free to merge after addressing comments.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/84#issuecomment-68971691:14,hash,hash,14,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/84#issuecomment-68971691,1,['hash'],['hash']
Security,"not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97955, Read name 20GAVAAXX100126:5:7:1291:122571, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 112212, Read name 20GAVAAXX100126:8:1:1429:129840, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 126595, Read name 20FUKAAXX100202:6:46:9311:1219, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ...; ERROR: Read name 20FUKAAXX100202:3:66:14857:5877, Mate not found for paired read; ERROR: Read name 20GAVAAXX100126:3:42:3602:56427, Mate not found for paired read; ERROR: Read name 20FUKAAXX100202:3:43:9956:132423, Mate not found for paired read; ERROR: Read name 20GAVAAXX100126:5:28:11981:2516, Mate not found for paired read; ERROR: Read name 20FUKAAXX100202:6:24:17640:150063, Mate not found for paired read; ERROR: Read name 20GAVAAXX100126:7:6:14036:136793, Mate not found for paired read; ERROR: Read name 20FUKAAXX100202:8:4:15388:58751, Mate not found for paired read; ERROR: Read name 20GAVAAXX100126:7:46:18099:135243, Mate not found for paired read; ERROR: Read name 20FUKAAXX100202:1:61:19609:50570, Mate not found for paired read; ERROR: Read name 20FUKAAXX100202:7:24:21385:130712, Mate not found for paired read; ERROR: Read name 20GAVAAXX100126:6:65:2547:48691, Mate not found for paired read; ERROR: Read name 20FUKAAXX100202:7:44:20236:184614, Mate not found for paired read; Maximum output of [100] errors reached.; 19:03:47.020 INFO ValidateSamFile - Shutting down engine; [March 9, 2017 7:03:47 PM EST] org.broadinstitute.hellbender.tools.picard.sam.ValidateSamFile done. Elapsed time: 0.07 minutes.; Runtime.totalMemory()=1674051584; Tool returned:; false; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:4375,Validat,ValidateSamFile,4375,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,2,['Validat'],['ValidateSamFile']
Security,ntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoRXhwZWN0ZWRBbGxlbGVGcmFjdGlvbkludGVncmF0aW9uVGVzdC5qYXZh) | `100% <100%> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [...hellbender/utils/test/VariantContextTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1ZhcmlhbnRDb250ZXh0VGVzdFV0aWxzLmphdmE=) | `84.274% <100%> (+0.128%)` | `69 <1> (+1)` | :arrow_up: |; | [...dation/AnnotateVcfWithBamDepthIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoQmFtRGVwdGhJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <100%> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [.../validation/RemoveNearbyIndelsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vUmVtb3ZlTmVhcmJ5SW5kZWxzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `100% <100%> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...r/tools/walkers/mutect/Mutect2IntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NdXRlY3QySW50ZWdyYXRpb25UZXN0LmphdmE=) | `90.37% <87.5%> (ø)` | `53 <7> (ø)` | :arrow_down: |; | [...der/tools/walkers/variantutils/SelectVariants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9TZWxlY3RWYXJpYW50cy5qYXZh) | `79.405% <0%> (-1.258%)` | `158% <0%> (+33%)` | |; | ... and [14 more](https://codecov.io/gh/broadinstitute/gatk/pull/50,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5031#issuecomment-406311079:3239,validat,validation,3239,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5031#issuecomment-406311079,1,['validat'],['validation']
Security,oadinstitute.hellbender.engine.spark.datasources.ReadsSparkSource.getHeader(ReadsSparkSource.java:204); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeReads(GATKSparkTool.java:381); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeToolInputs(GATKSparkTool.java:361); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:351); at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:38); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:116); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:179); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:198); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:121); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:108); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:128); at org.broadinstitute.hellbender.CommandLineProgramTest.runCommandLine(CommandLineProgramTest.java:28); at org.broadinstitute.hellbender.utils.test.CommandLineProgramTester.runCommandLine(CommandLineProgramTester.java:88); at org.broadinstitute.hellbender.tools.spark.pipelines.CountReadsSparkIntegrationTest.testNonExistentInputBam(CountReadsSparkIntegrationTest.java:111). Caused by:; java.io.FileNotFoundException: /Users/tom/workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/nonexistent.bam; at org.apache.hadoop.fs.RawLocalFileSystem.open(RawLocalFileSystem.java:200); at org.apache.hadoop.fs.ChecksumFileSystem.open(ChecksumFileSystem.java:344); at org.apache.hadoop.fs.FileSystem.open(FileSystem.java:767); at org.seqdoop.hadoop_bam.util.SAMHeaderReader.readSAMHeaderFrom(SAMHeaderReader.java:51); at org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSource.getHeader(ReadsSparkSource.java:202); ... 13 more; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2541#issuecomment-293293199:2159,Checksum,ChecksumFileSystem,2159,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2541#issuecomment-293293199,2,['Checksum'],['ChecksumFileSystem']
Security,"ode:. -`BaseRecalibratorSpark` is the standalone BQSR tool, and calls into the `BaseRecalibratorSparkFn` (which is also called from `ReadsPipelineSpark`). -`ApplyBQSRSpark` is the standalone ApplyBQSR tool, and calls into the `ApplyBQSRSparkFn` (also called from `ReadsPipelineSpark`). -Integration tests for the above are in `BaseRecalibratorSparkIntegrationTest` and `ApplyBQSRSparkIntegrationTest`. -Almost all other changes in the branch are related to the BQSR engine refactoring, which I summarize below:; - We pulled out the guts of the walker `BaseRecalibrator` tool, combined it with all of the code from the former `RecalibrationEngine` class (now deleted) to make a new `BaseRecalibrationEngine` class under `utils/recalibration`.; - We stripped out all copies of the code in `BaseRecalibrationEngine` from the walker, dataflow, and spark versions of BQSR, and modified them to call into `BaseRecalibrationEngine`.; - We moved all auxiliary classes needed by the `BaseRecalibrationEngine` (eg., the covariates, etc.) into `utils/recalibration`.; - We refactored the argument collections. Now there is a single shared `RecalibrationArgumentCollection` that contains **only** the parameters for the `BaseRecalibrationEngine` itself, and this argument collection is exposed by all 3 versions of the tool. Input/output arguments have been removed from this argument collection and put into the individual implementations of BQSR, since they vary between the walker, dataflow, and spark versions of the tool. This eliminates awkward problems such as having both a `knownSites` argument AND a `BQSRKnownVariants` exposed at the same time, with only 1 of them usable for a given version of a tool. The dataflow-only `BaseRecalibrationArgumentCollection` has been deleted completely as no longer needed.; - We tweaked the names of some tool arguments to enforce consistency between the 3 versions of the tool as well as the rest of hellbender (eg., output arg for BQSR is now a more standard `-O`)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/911#issuecomment-142340073:1325,expose,exposed,1325,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/911#issuecomment-142340073,2,['expose'],['exposed']
Security,odecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2ZpbHRlcnMvVmFyaWFudEZpbHRyYXRpb25JbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `0.826% <0%> (-99.174%)` | `1% <0%> (-25%)` | |; | [...dorientation/CollectF1R2CountsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3JlYWRvcmllbnRhdGlvbi9Db2xsZWN0RjFSMkNvdW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `0.917% <0%> (-99.083%)` | `1% <0%> (-12%)` | |; | [.../walkers/bqsr/BaseRecalibratorIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Jxc3IvQmFzZVJlY2FsaWJyYXRvckludGVncmF0aW9uVGVzdC5qYXZh) | `1.031% <0%> (-98.969%)` | `1% <0%> (-7%)` | |; | [...ers/vqsr/FilterVariantTranchesIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvRmlsdGVyVmFyaWFudFRyYW5jaGVzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `1.053% <0%> (-98.947%)` | `1% <0%> (-5%)` | |; | [...s/variantutils/VariantsToTableIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9WYXJpYW50c1RvVGFibGVJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `1.205% <0%> (-98.795%)` | `1% <0%> (-20%)` | |; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `1.563% <0%> (-98.438%)` | `1% <0%> (-5%)` | |; | ... and [162 more](https://codecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5451#issuecomment-467537358:3912,validat,validation,3912,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5451#issuecomment-467537358,1,['validat'],['validation']
Security,"ok, native repo is done https://github.com/broadinstitute/gatk-native-bindings; we're still hashing out the interfaces and it will be a bit before we have created the artifacts at maven central.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1788#issuecomment-216660840:92,hash,hashing,92,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1788#issuecomment-216660840,1,['hash'],['hashing']
Security,"olders named ""SAMPLE_#""), and just check the sample_name.txt files at the PostprocessGermlineCNVCalls step. I don't think this should require GermlineCNVCaller code changes, right?. 4) We may require additional code at the WDL level if we want to both switch over to primarily using sample names but also get rid of bundling (i.e., by passing only the calls for each sample when needed). Locally, you can always just search all output for directories containing the appropriate sample_name.txt. But on the cloud, you'd want to make sure that the postprocessing step for a particular sample gets only its corresponding directories, which would have to happen at the WDL level; the check against sample_name.txt at the tool level would just be a formality. I can foresee headaches with globbing and funky sample names. I'm not sure I understand your point about extending PostprocessGermlineCNVCalls to run on all samples. The point of that tool is to take results from all genomic shards for a single sample and stitch them together, right? Even if we extend this to run on a batch of multiple samples (which would just be moving the loop over samples at the WDL level to some lower level, i.e., Java or python), we still need to see all shards for those samples. Perhaps I'm misunderstanding---can you clarify?. @mwalker174 can we once and for all clearly document the issue with the transpose? Perhaps by pointing to specific WGS runs that have issues with call caching? I think being able to pinpoint the exact issue will help us identify the right solution---whether that be choosing an appropriate bundling scheme, taking advantage of #5781 to reduce the number of shards, batching during the postprocessing step, removing unnecessary outputs, etc. Recall that we'd like to be able to use the same WDL locally (when you have easy access to all GermlineCNVCaller results from all genomic shards) and in the cloud, with minimal duplication of output from bundling when running locally, if possible.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6659#issuecomment-644829765:3154,access,access,3154,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6659#issuecomment-644829765,1,['access'],['access']
Security,om.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:507); 	... 12 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.client.util.ByteStreams.copy(ByteStreams.java:51); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:94); 	... 15 more; Caused by: java.net.SocketException: Connection reset; 	at java.net.SocketInputStream.read(SocketInputStream.java:210); 	at java.net.SocketInputStream.read(SocketInputStream.java:141); 	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); 	at sun.security.ssl.InputRecord.readV3Record(InputRecord.java:593); 	at sun.security.ssl.InputRecord.read(InputRecord.java:532); 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); 	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:930); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:105); 	... 25 more`,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931:9256,secur,security,9256,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931,6,['secur'],['security']
Security,"omad; 10:58:20.140 INFO ProgressMeter - Starting traversal; 10:58:20.140 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 10:58:42.160 INFO VariantAnnotator - Shutting down engine; [March 17, 2022 at 10:58:42 AM CET] org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotator done. Elapsed time: 0.37 minutes.; Runtime.totalMemory()=17158897664; java.lang.IllegalStateException: Allele in genotype C not in the variant context [C*, CT]; 	at htsjdk.variant.variantcontext.VariantContext$Validation.validateGenotypes(VariantContext.java:382); 	at htsjdk.variant.variantcontext.VariantContext$Validation.access$200(VariantContext.java:323); 	at htsjdk.variant.variantcontext.VariantContext$Validation$2.validate(VariantContext.java:331); 	at htsjdk.variant.variantcontext.VariantContext.lambda$validate$0(VariantContext.java:1384); 	at java.base/java.lang.Iterable.forEach(Iterable.java:75); 	at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1384); 	at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:489); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:647); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:638); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.trimAlleles(GATKVariantContextUtils.java:1464); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.trimAlleles(GATKVariantContextUtils.java:1420); 	at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorEngine.getMinRepresentationBiallelics(VariantAnnotatorEngine.java:568); 	at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorEngine.annotateExpressions(VariantAnnotatorEngine.java:509); 	at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorEngine.addInfoAnnotations(VariantAnnotatorEngine.java:347); 	at org.broadinstitute.hellbender.tools.walkers.ann",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6689#issuecomment-1070784053:4413,validat,validate,4413,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6689#issuecomment-1070784053,1,['validat'],['validate']
Security,"ompression.dylib from jar:file:/Users/fleharty/resources/picard.jar!/com/intel/gkl/native/libgkl_compression.dylib; [Tue Jul 14 11:25:52 EDT 2020] ValidateSamFile INPUT=concatenated_ACC5611A1_XXXXXX_consensusalign_ds.bam MODE=VERBOSE MAX_OUTPUT=100 IGNORE_WARNINGS=false VALIDATE_INDEX=true INDEX_VALIDATION_STRINGENCY=EXHAUSTIVE IS_BISULFITE_SEQUENCED=false MAX_OPEN_TEMP_FILES=8000 SKIP_MATE_VALIDATION=false VERBOSITY=INFO QUIET=false VALIDATION_STRINGENCY=STRICT COMPRESSION_LEVEL=5 MAX_RECORDS_IN_RAM=500000 CREATE_INDEX=false CREATE_MD5_FILE=false GA4GH_CLIENT_SECRETS=client_secrets.json USE_JDK_DEFLATER=false USE_JDK_INFLATER=false; [Tue Jul 14 11:25:52 EDT 2020] Executing as fleharty@wm462-624 on Mac OS X 10.15.5 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_191-b12; Deflater: Intel; Inflater: Intel; Provider GCS is not available; Picard version: 2.20.4-SNAPSHOT; WARNING	2020-07-14 11:25:52	ValidateSamFile	NM validation cannot be performed without the reference. All other validations will still occur.; ERROR: Record 18321, Read name UMI-ATT-GAA-2, Zero-length read without FZ, CS or CQ tag; ERROR: Record 26312, Read name UMI-CCT-TTC-1, Zero-length read without FZ, CS or CQ tag; ERROR: Record 70755, Read name UMI-CAG-GGA-2, Zero-length read without FZ, CS or CQ tag; ERROR: Record 145082, Read name UMI-AAC-ATG-5, Zero-length read without FZ, CS or CQ tag; ERROR: Record 181500, Read name UMI-ACT-CTT-1, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186837, Read name UMI-CAA-CTC-4, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186862, Read name UMI-CGC-GCC-0, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186904, Read name UMI-AGG-GTC-0, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186919, Read name UMI-CGC-TGC-0, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186947, Read name UMI-TAA-TAG-3, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186970, Read name UMI-GAG-GCC-1, Zero-length read without FZ, CS or",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6695#issuecomment-658247132:1938,validat,validations,1938,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6695#issuecomment-658247132,1,['validat'],['validations']
Security,"onsolidated with---@jamesemery thoughts? Again, let me reiterate that it seems that many of these parameter values were chosen arbitrarily (or, if not, that the procedure for choosing them has been lost). As a start, you can see the results of some optimizations I did on the CHM mix on slide 15 at https://docs.google.com/presentation/d/1zGuquAZWSUQ-wNxp8D6HhGNjIaFcV0_X9WAS4LODbEo/edit?usp=sharing Here, I optimized over haplotype-to-reference + read-to-haplotype SW parameters on various metrics after variant normalization using vcfeval. These optimizations were done using the Bayesian optimization framework I prototyped long ago (see https://github.com/broadinstitute/gatk-evaluation/tree/master/pipeline-optimizer and https://docs.google.com/presentation/d/1t5WOAEOMp0xAzJgpKbP68BUnclNYfIVRrDSL9wl1-3A/edit?usp=sharing); this entailed running parameter scans using a local Cromwell on my desktop. Probably this optimization work could be redone relatively easily using the Neptune framework put together by @dalessioluca, which was still in development at the time I did this work. Happy to share the resources and scripts I used if we go down this route; they are pretty lightweight. See more discussion starting here: https://github.com/broadinstitute/gatk/issues/5564#issuecomment-710107566. Alternatively, we could merge this branch to expose the parameters now and punt on consolidating/optimizing them. I'm not completely convinced we should even do the former unless we are going to follow through on the latter, but happy to defer to others. Finally, note also there is one code optimization that I removed, since it makes assumptions on the SW parameter values that might not be valid for non-default values. I'll highlight this with a comment below. We can restore it if we add code to check whether the assumptions hold, but I'd be curious to see in which cases the optimization makes a big difference. See https://github.com/broadinstitute/gatk/issues/6863#issuecomment-707870344.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-891907471:2619,expose,expose,2619,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-891907471,1,['expose'],['expose']
Security,oogle.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 47 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.client.util.ByteStreams.copy(ByteStreams.java:51); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:94); 	... 50 more; Caused by: java.net.SocketException: Connection reset; 	at java.net.SocketInputStream.read(SocketInputStream.java:210); 	at java.net.SocketInputStream.read(SocketInputStream.java:141); 	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); 	at sun.security.ssl.InputRecord.readV3Record(InputRecord.java:593); 	at sun.security.ssl.InputRecord.read(InputRecord.java:532); 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); 	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:930); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:105); 	... 60 more; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727:7550,secur,security,7550,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727,6,['secur'],['security']
Security,"ools to overwrite the expected results.; ; We test the Cartesian product of the following options: 1) non-allele-specific vs. allele-specific, 2) SNP vs. indel vs. both, and 3) positive vs. positive-unlabeled. Downstream, we'll further subset to a subset of these options, since training/scoring functionality shouldn't really change across some of them.; ; I'm currently just using call outs to system commands to diff and h5diff the VCFs and HDF5s, respectively. I think the latter command should be available in the GATK Conda environment. This will be a bit awkward, in the sense that the tests for this tool will require the Conda environment, but the tool itself will not. But I think this is probably preferable to writing test code to compare HDF5s, minimal though that might be, since the schema might change in the future.; - [x] Tool-level docs. Minor TODOs:. - [x] Parameter-level docs. Could perhaps expand on the `resources` parameter once the required labels are settled.; - [x] Parameter validation.; - [x] Clean up docs for parent walker.; - [x] Decide on required labels. I think ""training"" and ""calibration"" (rather than the legacy ""training"" and ""truth"") might be good candidates. EDIT: Switched ""truth"" to ""calibration"" throughout the codebase.; - [x] Validate privileged labels (snp, training, calibration) in parent walker.; ; Future work:. - [ ] Clean up unlabeled outputs. This includes 1) sorting the corresponding HDF5, and 2) outputting a corresponding sites-only VCF. Unlike the labeled sites, which are written individually to VCF as we traverse them, unlabeled sites are placed into a reservoir of fixed size for subsampling purposes. Thus, we cannot write them to VCF as with labeled sites; furthermore, after traversal, the unlabeled sites are not ordered within the reservoir. Ultimately, the lack of this VCF means that extracted, unlabeled sites cannot be tagged as such by the scoring tool in the final VCF.; - [ ] Consider downsampling of labeled data. This is no",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948059:3171,validat,validation,3171,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948059,1,['validat'],['validation']
Security,ools.util.SortingCollection.spillToDisk(SortingCollection.java:247); 	at htsjdk.samtools.util.SortingCollection.add(SortingCollection.java:182); 	at htsjdk.samtools.SAMFileWriterImpl.addAlignment(SAMFileWriterImpl.java:202); 	at htsjdk.samtools.AsyncSAMFileWriter.synchronouslyWrite(AsyncSAMFileWriter.java:36); 	at htsjdk.samtools.AsyncSAMFileWriter.synchronouslyWrite(AsyncSAMFileWriter.java:16); 	at htsjdk.samtools.util.AbstractAsyncWriter$WriterRunnable.run(AbstractAsyncWriter.java:123); 	at java.base/java.lang.Thread.run(Thread.java:829); 	Suppressed: htsjdk.samtools.util.RuntimeIOException: Attempt to add record to closed writer.; 		at htsjdk.samtools.util.AbstractAsyncWriter.write(AbstractAsyncWriter.java:57); 		at htsjdk.samtools.AsyncSAMFileWriter.addAlignment(AsyncSAMFileWriter.java:58); 		at org.broadinstitute.hellbender.utils.read.SAMFileGATKReadWriter.addRead(SAMFileGATKReadWriter.java:21); 		at org.broadinstitute.hellbender.tools.walkers.rnaseq.OverhangFixingManager.writeReads(OverhangFixingManager.java:358); 		at org.broadinstitute.hellbender.tools.walkers.rnaseq.OverhangFixingManager.flush(OverhangFixingManager.java:338); 		at org.broadinstitute.hellbender.tools.walkers.rnaseq.SplitNCigarReads.closeTool(SplitNCigarReads.java:192); 		at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1095); 		at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:149); 		at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:198); 		at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:217); 		at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); 		at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); 		at org.broadinstitute.hellbender.Main.main(Main.java:289). Still have no idea why it's doing this though. Trying ValidateSamFile on my file in question doesn't turn up anything meaningful.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8232#issuecomment-1452463087:3042,Validat,ValidateSamFile,3042,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8232#issuecomment-1452463087,1,['Validat'],['ValidateSamFile']
Security,or GenomeLoc.validate(SequenceDict),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/100#issuecomment-69767382:13,validat,validate,13,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/100#issuecomment-69767382,1,['validat'],['validate']
Security,"org.broadinstitute.hellbender.tools.picard.sam.ValidateSamFile --input src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam --use_jdk_deflater true --use_jdk_inflater true --MODE VERBOSE --MAX_OUTPUT 100 --IGNORE_WARNINGS false --VALIDATE_INDEX true --IS_BISULFITE_SEQUENCED false --MAX_OPEN_TEMP_FILES 8000 --VALIDATION_STRINGENCY STRICT --COMPRESSION_LEVEL 1 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX false --CREATE_MD5_FILE false --help false --version false --verbosity INFO --QUIET false; [March 9, 2017 7:03:42 PM EST] Executing as gspowley@dna on Linux 3.10.0-514.10.2.el7.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14; Version: Version:4.alpha.2-170-g8d06823-SNAPSHOT; 19:03:42.998 INFO ValidateSamFile - Defaults.BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.COMPRESSION_LEVEL : 1; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - Initializing engine; 19:03:43.000 INFO ValidateSamFile - Done initializing engine; ERROR: Record 9762, Read name 20GAVAAXX100126:7:2:8",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:1151,Validat,ValidateSamFile,1151,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,org.gradle.wrapper.Install$1.call(Install.java:48); 	at org.gradle.wrapper.ExclusiveFileAccessManager.access(ExclusiveFileAccessManager.java:69); 	at org.gradle.wrapper.Install.createDist(Install.java:48); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:107); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:284); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3368); 	at org.gradle.wrapper.Download.downloadInternal(Download.java:62); 	... 7 more; Caused by: java.net.SocketException: Connection reset; 	at java.net.SocketInputStream.read(SocketInputStream.java:210); 	at java.net.SocketInputStream.read(SocketInputStream.java:141); 	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); 	at sun.security.ssl.InputRecord.readV3Record(InputRecord.java:593); 	at sun.security.ssl.InputRecord.read(InputRecord.java:532); 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); 	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:930); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:105); 	... 14 more,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4194#issuecomment-358498401:2801,secur,security,2801,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4194#issuecomment-358498401,6,['secur'],['security']
Security,ort. I have migrated to using the 4.5 release after some regression testing. Below is a list of critical and high findings with 4.5 release. There are links to snyk version update recommendations. I know sometimes its not easy just to upgrade the library version as we could end up with run time errors. I am adding this here so that its handy when ever you look at this further. Thanks again. . packageName | version | severity | language | module_id; -- | -- | -- | -- | --; com.google.protobuf:protobuf-java | 3.7.1 | high | java | [SNYK-JAVA-COMGOOGLEPROTOBUF-2331703 ](https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLEPROTOBUF-2331703 ); com.google.protobuf:protobuf-java | 3.7.1 | high | java | [SNYK-JAVA-COMGOOGLEPROTOBUF-3167772](https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLEPROTOBUF-3167772); io.netty:netty-codec-http2 | 4.1.96.Final | high | java | [SNYK-JAVA-IONETTY-5953332](https://security.snyk.io/vuln/SNYK-JAVA-IONETTY-5953332); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342645](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342645); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342646](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342646); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342647](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342647); log4j:log4j | 1.2.17 | critical | java | [SNYK-JAVA-LOG4J-572732](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-572732); net.minidev:json-smart | 1.3.2 | high | java | [SNYK-JAVA-NETMINIDEV-3369748](https://security.snyk.io/vuln/SNYK-JAVA-NETMINIDEV-3369748); org.apache.zookeeper:zookeeper | 3.6.3 | high | java | [SNYK-JAVA-ORGAPACHEZOOKEEPER-5961102](https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEZOOKEEPER-5961102); org.codehaus.jettison:jettison | 1.1 | high | java | [SNYK-JAVA-ORGCODEHAUSJETTISON-3168085](https://security.snyk.io/vuln/SNYK-JAVA-ORGCODEHAUSJETTISON-3168085); org.codehaus.jettison:jettison | 1.1 | high | java | [SNYK-JAVA-ORGCODEHAUSJETTISON-3367610](https://secur,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8215#issuecomment-1890593067:1191,secur,security,1191,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8215#issuecomment-1890593067,1,['secur'],['security']
Security,"otator - Initializing Funcotator Engine...; 16:01:43.983 INFO Funcotator - Creating a VCF file for output: file:/home/deepak/software_library/gatk-4.1.7.0/variants.funcotated.vcf; 16:01:44.020 INFO ProgressMeter - Starting traversal; 16:01:44.020 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 16:01:44.068 WARN GencodeFuncotationFactory - Cannot create complete funcotation for variant at chr1:1-10454 due to alternate allele: <NON_REF>; 16:01:44.116 INFO VcfFuncotationFactory - dbSNP 9606_b150 cache hits/total: 0/0; 16:01:44.121 INFO Funcotator - Shutting down engine; [12 May, 2020 4:01:44 PM IST] org.broadinstitute.hellbender.tools.funcotator.Funcotator done. Elapsed time: 0.14 minutes.; Runtime.totalMemory()=2889875456; java.lang.IllegalArgumentException: Invalid interval. Contig:chr1 start:-9 end:10464; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:733); at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:59); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:35); at org.broadinstitute.hellbender.tools.funcotator.FuncotatorUtils.createReferenceSnippet(FuncotatorUtils.java:1439); at org.broadinstitute.hellbender.tools.funcotator.FuncotatorUtils.getBasesInWindowAroundReferenceAllele(FuncotatorUtils.java:1468); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createFuncotationForSymbolicAltAllele(GencodeFuncotationFactory.java:2560); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createFlankFuncotation(GencodeFuncotationFactory.java:2465); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createGencodeFuncotationOnSingleTranscript(GencodeFuncotationFactory.java:953); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createFuncotationsHelper(GencodeFuncot",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6598#issuecomment-664565036:6484,validat,validatePositions,6484,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6598#issuecomment-664565036,1,['validat'],['validatePositions']
Security,"oud.auth.service.account.json.keyfile"", gcs_creds);; hdfsBuilderConfSetStr(builder, ""fs.gs.project.id"", value);; }; }. if (working_dir.empty()) {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", ""/"");; } else {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", working_dir.c_str());; }. // Default buffer sizes are huge in the GCS connector. GenomicsDB reads/writes in smaller chunks,; // so the buffer size can be made a little smaller.; hdfsBuilderConfSetStr(builder, ""fs.gs.io.buffersize.write"", ""262144"");. hdfsFS hdfs_handle = hdfsBuilderConnect(builder);; free(value);; return hdfs_handle;; }; ```. This is the error from Travis logs-; ```; Running Test: Test method testWriteToAndQueryFromGCS(org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest); hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Error getting access token from metadata server at: http://metadata/computeMetadata/v1/instance/service-accounts/default/token; at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:210); at com.google.cloud.hadoop.util.CredentialConfiguration.getCredential(CredentialConfiguration.java:75); at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1826); Caused by: com.google.api.client.http.HttpResponseException: 404 Not Found; {""error"":""invalid_request"",""error_description"":""Service account not enabled on this instance""}; at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1072); at com.google.cloud.hadoop.util.CredentialFactory$ComputeCredentialWithRetry.executeRefreshToken(CredentialFactory.java:159); at com.google.api.client.auth.oauth2.Credential.refreshToken(Credential.java:493); at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:208); ... 77 more; [GenomicsDB::",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888:1619,access,access,1619,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888,1,['access'],['access']
Security,ow_down: |; | [.../walkers/contamination/CalculateContamination.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2NvbnRhbWluYXRpb24vQ2FsY3VsYXRlQ29udGFtaW5hdGlvbi5qYXZh) | `96.552% <ø> (ø)` | `10 <0> (ø)` | :arrow_down: |; | [...ender/tools/walkers/annotator/InbreedingCoeff.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9JbmJyZWVkaW5nQ29lZmYuamF2YQ==) | `72.414% <ø> (-13.793%)` | `7 <0> (-3)` | |; | [...der/tools/walkers/CombineGVCFsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL0NvbWJpbmVHVkNGc0ludGVncmF0aW9uVGVzdC5qYXZh) | `1.262% <ø> (-88.675%)` | `2 <0> (-36)` | |; | [...s/walkers/validation/CalculateMixingFractions.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ2FsY3VsYXRlTWl4aW5nRnJhY3Rpb25zLmphdmE=) | `78.431% <ø> (ø)` | `15 <0> (ø)` | :arrow_down: |; | [...s/walkers/validation/MergeMutect2CallsWithMC3.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vTWVyZ2VNdXRlY3QyQ2FsbHNXaXRoTUMzLmphdmE=) | `81.25% <ø> (ø)` | `13 <0> (ø)` | :arrow_down: |; | [...tools/walkers/mutect/SomaticLikelihoodsEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9Tb21hdGljTGlrZWxpaG9vZHNFbmdpbmUuamF2YQ==) | `86.667% <ø> (-2.222%)` | `17 <0> (-1)` | |; | ... and [1382 more](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5688#issuecomment-465024734:3415,validat,validation,3415,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5688#issuecomment-465024734,1,['validat'],['validation']
Security,"perfect. Maybe it's as simple as switching all HashSets to LinkedHashSet; (and same for maps). On Tue, Apr 21, 2015 at 10:02 AM, Matt Sooknah notifications@github.com; wrote:. > Ah yes, I remember this now - they haven't been failing in Picard per se,; > it's just when we tried compiling under Java 8. The info in that issue; > should make the fix much easier, if it's indeed the same thing.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/broadinstitute/hellbender/issues/364#issuecomment-94805095; > .",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/364#issuecomment-94807857:47,Hash,HashSets,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/364#issuecomment-94807857,1,['Hash'],['HashSets']
Security,"periment with the LL score discussed there (see https://www.aaai.org/Papers/ICML/2003/ICML03-060.pdf for the original paper---although note that despite the paper's high citation count, I'm not sure what the canonical name for this metric actually is, but it doesn't appear to be ""LL score""---perhaps someone else knows or has better Google-fu and can figure it out) before moving on to their methods for estimating F1. Doing a literature search for other discussions of optimizing F1 or other metrics in the context of positive-unlabeled learning might be worthwhile, but I think most methods will probably involve some sort of estimation of the base rate in unlabeled data. I think we may have to add some mechanism for holding out a validation set during training if we want to automatically tune thresholds in a rigorous fashion. Shouldn't be too bad---we can just have the training tool randomly mask out a set of the truth and pass the mask to the scoring tool (or maybe just determine the threshold in the training tool, if we are running in positive/negative mode and have access to unlabeled data)---but does add a couple of parameters to the tool interfaces. This also adds additional dependence on the quality of the truth resources. I think an implicit assumption in any use of the truth---even just thresholding/calibrating by sensitivity---is that it is a random sample; however, I'm not sure how true this is in actual use. For example, in malaria, it looks like we may have to resort to using a callset that has been very conservatively filtered as truth, which will bias us towards high scores and the peaks of the positive distribution. Perhaps we can also experiment with just treating training/truth on an equal footing (I think the distinction between the two is somewhat blurry in the original VQSR design, anyway). Perhaps @davidbenjamin has some thoughts? I see some related stuff going on in ThresholdCalculator, but I have to admit that I can't tell whether that's used in a ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1062931241:1602,access,access,1602,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1062931241,1,['access'],['access']
Security,"pong. Are you planning to get rid of the USER ERROR classification? (not a problem, just curious re: what is the plan for error types names if any). Error output should include the website URL; if it's possible (not too painful) to include the specific tool doc URL, that would be even better (currently the url for tool doc pages is based on the classpath in a completely predictable way). Agree with @lbergelson that it would be way useful for the parsing system to run complete validation on the command line rather than bail out at the first error, so you'd get a list of everything that you did wrong in one go.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/418#issuecomment-146214892:481,validat,validation,481,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/418#issuecomment-146214892,1,['validat'],['validation']
Security,"r 01:13:16.078 INFO HaplotypeCaller - GCS max retries/reopens: 20 01:13:16.078 INFO HaplotypeCaller - Using google-cloud-java patch 6d11bef1c81f885c26b2b56c8616b7a705171e4f from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes 01:13:16.078 INFO HaplotypeCaller - Initializing engine 01:13:17.087 INFO HaplotypeCaller - Shutting down engine [January 18, 2020 1:13:17 AM IST] org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCaller done. Elapsed time: 0.02 minutes. Runtime.totalMemory()=2216689664 java.lang.NullPointerException at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.getContigNames(SequenceDictionaryUtils.java:463) at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.getCommonContigsByName(SequenceDictionaryUtils.java:457) at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.compareDictionaries(SequenceDictionaryUtils.java:234) at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.validateDictionaries(SequenceDictionaryUtils.java:150) at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.validateDictionaries(SequenceDictionaryUtils.java:98) at org.broadinstitute.hellbender.engine.GATKTool.validateSequenceDictionaries(GATKTool.java:621) at org.broadinstitute.hellbender.engine.GATKTool.onStartup(GATKTool.java:563) at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.onStartup(AssemblyRegionWalker.java:160) at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:134) at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:179) at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:198) at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:152) at org.broadinstitute.hellbender.Main.mainEntry(Main.java:195) at org.broadinstitute.hellbender.Main.main(Main.java:275); > ; > Please suggest any solution. Thank you. hello，have you so",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5947#issuecomment-1605272955:2642,validat,validateDictionaries,2642,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5947#issuecomment-1605272955,1,['validat'],['validateDictionaries']
Security,"ra.org/. [cid:B44BCED3-0B3F-40A9-B1D5-31EB5FA1A726]. Follow us on:; [cid:EA30C7A2-88E3-4601-B54A-0AB32237D76F]https://www.facebook.com/SidraMedicalAndResearchCenter. [cid:A3C013FB-FC00-44E5-BB4A-F6BBE83393FD]https://twitter.com/sidra. [cid:F96B6BE9-8375-4FBC-98A0-F37E2C154AB5]https://www.linkedin.com/company/sidra-medical-and-research-center. [cid:C2E7A17B-1BC3-4FE4-AC2E-68CFC411450D]https://www.instagram.com/sidramedicalandresearchcenter/. [cid:6C6F39A4-C399-4742-8258-02A135D6E920]https://www.youtube.com/user/SidraMedical. [cid:6218F7A6-934F-492F-97F4-9CBACB33003F]. From: Adam Kiezun <notifications@github.com<mailto:notifications@github.com>>; Reply-To: broadinstitute/gatk <reply@reply.github.com<mailto:reply@reply.github.com>>; Date: Thursday, May 19, 2016 at 4:32 PM; To: broadinstitute/gatk <gatk@noreply.github.com<mailto:gatk@noreply.github.com>>; Cc: Tushar Pathare <tpathare@sidra.org<mailto:tpathare@sidra.org>>, Mention <mention@noreply.github.com<mailto:mention@noreply.github.com>>; Subject: Re: [broadinstitute/gatk] ./gatk-launch CountVariantsSpark --variant not reading gz vcf (#1815). @tushu1232https://github.com/tushu1232 can you retry on the latest master? It should work now. —; You are receiving this because you were mentioned.; Reply to this email directly or view it on GitHubhttps://github.com/broadinstitute/gatk/issues/1815#issuecomment-220325031. Disclaimer: This email and its attachments may be confidential and are intended solely for the use of the individual to whom it is addressed. If you are not the intended recipient, any reading, printing, storage, disclosure, copying or any other action taken in respect of this e-mail is prohibited and may be unlawful. If you are not the intended recipient, please notify the sender immediately by using the reply function and then permanently delete what you have received. Any views or opinions expressed are solely those of the author and do not necessarily represent those of Sidra Medical and Research Center.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1815#issuecomment-221013496:1882,confidential,confidential,1882,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1815#issuecomment-221013496,1,['confidential'],['confidential']
Security,ranches 15020 15023 +3 ; ================================================; - Hits 116942 98913 -18029 ; - Misses 12825 31555 +18730 ; + Partials 5460 4761 -699; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4962?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...overy/inference/CpxVariantInterpreterUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4962/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvaW5mZXJlbmNlL0NweFZhcmlhbnRJbnRlcnByZXRlclVuaXRUZXN0LmphdmE=) | `100% <100%> (ø)` | `10 <2> (+1)` | :arrow_up: |; | [.../sv/discovery/inference/CpxVariantInterpreter.java](https://codecov.io/gh/broadinstitute/gatk/pull/4962/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvaW5mZXJlbmNlL0NweFZhcmlhbnRJbnRlcnByZXRlci5qYXZh) | `74.603% <75%> (-5.236%)` | `26 <0> (ø)` | |; | [.../tools/walkers/validation/FalsePositiveRecord.java](https://codecov.io/gh/broadinstitute/gatk/pull/4962/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vRmFsc2VQb3NpdGl2ZVJlY29yZC5qYXZh) | `0% <0%> (-100%)` | `0% <0%> (-7%)` | |; | [...metrics/multi/ExampleCollectMultiMetricsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4962/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leGFtcGxlcy9tZXRyaWNzL211bHRpL0V4YW1wbGVDb2xsZWN0TXVsdGlNZXRyaWNzU3BhcmsuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-7%)` | |; | [...sv/discovery/alignment/AlignedContigGenerator.java](https://codecov.io/gh/broadinstitute/gatk/pull/4962/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvYWxpZ25tZW50L0FsaWduZWRDb250aWdHZW5lcmF0b3IuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-1%)` | |; | [...alignmentfilter/RealignmentArgumentCollection.java](https://codecov,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4962#issuecomment-401084153:1629,validat,validation,1629,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4962#issuecomment-401084153,1,['validat'],['validation']
Security,"raph; originally. Maybe the use case was variants from UG that we didn't; necessarily believe were aligned properly?. I don't have any objections, but I'd feel better if we had a better guess; at what the original method was trying to do. On Wed, Apr 3, 2019 at 9:56 PM David Benjamin <notifications@github.com>; wrote:. > In Mutect2 and HaplotypeCaller, we force-call alleles by injecting them; > into the ref haplotype, then threading these constructed haplotypes into; > the assembly graph with a large edge weight. There are several drawbacks to; > this approach:; >; > - The strange edge weights interfere with the AdaptiveChainPruner.; > - The large edge weights may not be large enough to avoid pruning when; > depth is extremely high.; > - The alleles may be lost if assembly fails.; > - If the alleles actually exist but are in phase with another variant; > we end up putting an enormous amount of weight on a false haplotype.; >; > We can get around these issue with the following method:; >; > - assemble haplotypes without regard to the force-called alleles.; > - if an allele is present in these haplotypes, do nothing further.; > - otherwise, add a haplotype in which the allele is injected into the; > reference haplotype.; >; > @LeeTL1220 <https://github.com/LeeTL1220> I prototyped this and it seems; > to resolve the missed forced alleles that Ziao found.; >; > @ldgauthier <https://github.com/ldgauthier> Can you think of any; > objections to making this change in HaplotypeCaller?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/5857>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdMcaTJg47gnOkE-d_AeAqXpO8zpxks5vdVvfgaJpZM4cbxVV>; > .; >. -- ; Laura Doyle Gauthier, Ph.D.; Associate Director, Germline Methods; Data Sciences Platform; gauthier@broadinstitute.org; Broad Institute of MIT & Harvard; 320 Charles St.; Cambridge MA 0214",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5857#issuecomment-479916767:1438,inject,injected,1438,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5857#issuecomment-479916767,1,['inject'],['injected']
Security,"ref/hg38/Homo_sapiens_assembly38.fasta -V ~/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz --maxIndelSize 250 -O zeta_snippet_leftalign_maxindelsize250_splitmultiallelics.vcf.gz --splitMultiallelics; Using GATK wrapper script /Users/shlee/Documents/branches/hellbender/build/install/gatk/bin/gatk; Running:; /Users/shlee/Documents/branches/hellbender/build/install/gatk/bin/gatk LeftAlignAndTrimVariants -R /Users/shlee/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V /Users/shlee/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz --maxIndelSize 250 -O zeta_snippet_leftalign_maxindelsize250_splitmultiallelics.vcf.gz --splitMultiallelics; 17:52:19.004 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/shlee/Documents/branches/hellbender/build/install/gatk/lib/gkl-0.8.5.jar!/com/intel/gkl/native/libgkl_compression.dylib; Sep 05, 2018 5:52:19 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 17:52:19.130 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 17:52:19.131 INFO LeftAlignAndTrimVariants - The Genome Analysis Toolkit (GATK) v4.0.8.1-24-gb43bc27-SNAPSHOT; 17:52:19.131 INFO LeftAlignAndTrimVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 17:52:19.131 INFO LeftAlignAndTrimVariants - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 17:52:19.131 INFO LeftAlignAndTrimVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 17:52:19.131 INFO LeftAlignAndTrimVariants - Start Date/Time",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418893971:1140,authenticat,authenticated,1140,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418893971,1,['authenticat'],['authenticated']
Security,"ription=""Per-sample component statistics to detect mate bias"">; ##FORMAT=<ID=MIN_DP,Number=1,Type=Integer,Description=""Minimum DP observed within the GVCF block"">; ##FORMAT=<ID=PL,Number=G,Type=Integer,Description=""Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification"">; ##FORMAT=<ID=PRI,Number=G,Type=Float,Description=""Phred-scaled prior probabilities for genotypes"">; ##FORMAT=<ID=PS,Number=1,Type=Integer,Description=""Physical phasing ID information, where each unique ID within a given sample (but not across samples) connects records within a phasing group"">; ##FORMAT=<ID=SB,Number=4,Type=Integer,Description=""Per-sample component statistics which comprise the Fisher's Exact Test to detect strand bias"">; ##FORMAT=<ID=SPL,Number=.,Type=Integer,Description=""Normalized, Phred-scaled likelihoods for SNPs based on the reference confidence model"">; ##FORMAT=<ID=SQ,Number=A,Type=Float,Description=""Somatic quality"">; ##DRAGENCommandLine=<ID=HashTableBuild,Version=""SW: 01.003.044.3.8.4, HashTableVersion: 8"",CommandLineOptions=""/opt/edico/bin/dragen --build-hash-table true --enable-cnv true --ht-alt-aware-validate true; ##DRAGENCommandLine=<ID=dragen,Version=""SW: 05.021.609.3.9.5, HW: 05.021.609"",Date=""Wed Feb 09 21:30:31 UTC 2022"",CommandLineOptions=""--bam-input s3://cromwell-dragen-us-east-1/samples/validacaoDRAGEN/ba; ```. About chrM, yeah... all of them have this info... like below. ```; grep ""^chrM"" <name>.hard-filtered.gvcf | head ; chrM	1	.	G	<NON_REF>	.	weak_evidence	END=1	GT:AD:DP:SQ:MIN_DP	0/0:112,1579:1691:0:1691; chrM	2	.	A	<NON_REF>	.	PASS	END=72	GT:AD:DP:SQ:MIN_DP	0/0:2504,2:2506:99:1712; chrM	73	.	A	G,<NON_REF>	.	PASS	DP=2017;MQ=208.10;FractionInformativeReads=0.948	GT:SQ:AD:AF:F1R2:F2R1:DP:SB:MB	1/1:98.13,0.00:0,1912,0:1.000,0.000:0,980,0:0,932,0:1912:0,0,756,1156:0,0,932,980; ```. As I replied to you, in another section, I can share some gvcfs from NA samples (Dragen v3.6.3) with you. Just let me know and I'll e-mail the links",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7797#issuecomment-1112612397:2405,Hash,HashTableVersion,2405,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7797#issuecomment-1112612397,3,"['Hash', 'hash', 'validat']","['HashTableVersion', 'hash-table', 'validate']"
Security,roadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:104); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: java.net.SocketTimeoutException: Read timed out; 	at java.net.SocketInputStream.socketRead0(Native Method); 	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116); 	at java.net.SocketInputStream.read(SocketInputStream.java:171); 	at java.net.SocketInputStream.read(SocketInputStream.java:141); 	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); 	at sun.security.ssl.InputRecord.read(InputRecord.java:503); 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); 	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:930); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:105); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704); 	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1569); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1474); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); 	at shaded.cloud_nio.com.google,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300298180:6792,secur,security,6792,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300298180,1,['secur'],['security']
Security,"rocessGermlineCNVCalls - Initializing engine; 14:21:35.976 INFO FeatureManager - Using codec BEDCodec to read file file:///bettik/tintest/NTM/bam/1-3-9-17-Y-M/Refseq_GrCh38_1-3-9-17-Y-M.bed; 14:21:36.034 INFO IntervalArgumentCollection - Processing 251589470 bp from intervals; 14:21:38.716 INFO PostprocessGermlineCNVCalls - Done initializing engine; 14:21:38.879 INFO PostprocessGermlineCNVCalls - Shutting down engine; [August 1, 2018 2:21:38 PM CEST] org.broadinstitute.hellbender.tools.copynumber.PostprocessGermlineCNVCalls done. Elapsed time: 0.06 minutes.; Runtime.totalMemory()=2267545600; java.lang.IllegalArgumentException: The specified allosomal contigs must be contained in the SAM sequence dictionary of the call-set (specified allosomal contigs: [Y], all contigs: [chr9, chr7, chr8, chr5, chr6, chr3, chr21, chr4, chr22, chr1, chr2, chr20, chrY, chrX, chr10, chr11, chr12, chr13, chrM, chr18, chr19, chr14, chr15, chr16, chr17]); at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:722); at org.broadinstitute.hellbender.tools.copynumber.PostprocessGermlineCNVCalls.onTraversalStart(PostprocessGermlineCNVCalls.java:277); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:992); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:135); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:180); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:199); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); at org.broadinstitute.hellbender.Main.main(Main.java:289); ```. ----. ## Notes. During all the procedures of the gCNV calling pipeline, I provided a target bed interval file with the 1,3,9,17,Y and M chromosomes, except for the DetermineGermlineContigPloidy were I provided a prior_contig_diploidy.tsv with all th",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5053#issuecomment-409558231:5233,validat,validateArg,5233,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5053#issuecomment-409558231,1,['validat'],['validateArg']
Security,"rsed the test log and found the relevant part (for ID `685190392835`). ```; ""gce"":{. ""instance"":{; ""attributes"":{; ""startup-script"":""#!/usr/bin/env bash\necho poweroff | at now + 130 minutes\ncat > ~travis/.ssh/authorized_keys <<EOF\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDdzVnIEg2ribEvhEvFjR9IFPAkIVtQwZhlgUAHu1BgjBugFRiqg3eaPMOeOuIZBvzwoyotHIVp3XvAfivGyCW4Ke7+2cqlcX1L8kcmoWLm2fdLGlLr/lZnAjQtexMC76uLtR8udqWA0e2sqrSJs4H/blOQmHWPrl/VSG7daoVptzqXihRmXN+/Huo7mTxAjTUEjk4IOBn7sv7G5qLrEPv78AJIZhWHdhUTGLvx+YpzQvX8pE53TMi9W4ovkZTCwhSO3WYyBOY7H1xjeYb9XWTeP563Du1b0JMpQgtFLQUVXio9NzXZE55ovvGDRSLds+VfPsv4G/Whhq76dEZ+wZO3\n\nEOF\n""; },; ""cpuPlatform"":""Intel Haswell"",; ""description"":""Travis CI python test VM"",; ""disks"":[{""deviceName"":""persistent-disk-0"",""index"":0,""mode"":""READ_WRITE"",""type"":""PERSISTENT""}],; ""hostname"":""testing-gce-ec8614d2-40a2-4138-801e-d42d811590a2.c.travis-ci-prod-2.internal"",; ""id"":8221730359445041428,; ""image"":"""",; ""licenses"":[{""id"":""1000010""}],; ""machineType"":""projects/685190392835/machineTypes/n1-standard-2"",; ""maintenanceEvent"":""NONE"",; ""networkInterfaces"":[{""accessConfigs"":[{""externalIp"":""104.198.203.242"",""type"":""ONE_TO_ONE_NAT""}],""forwardedIps"":[],""ip"":""10.128.0.163"",""network"":""projects/685190392835/networks/default""}],; ""scheduling"":{""automaticRestart"":""TRUE"",""onHostMaintenance"":""MIGRATE"",""preemptible"":""FALSE""},; ""serviceAccounts"":{; ""685190392835-compute@developer.gserviceaccount.com"":{; ""aliases"":[""default""],; ""email"":""685190392835-compute@developer.gserviceaccount.com"",; ""scopes"":[""https://www.googleapis.com/auth/userinfo.email"",; ""https://www.googleapis.com/auth/devstorage.full_control"",; ""https://www.googleapis.com/auth/compute""]; },; ""default"":{; ""aliases"":[""default""],; ""email"":""685190392835-compute@developer.gserviceaccount.com"",; ""scopes"":[""https://www.googleapis.com/auth/userinfo.email"",; ""https://www.googleapis.com/auth/devstorage.full_control"",; ""https://www.googleapis.com/auth/compute""]}; },; ""tags"":[""testing""],; ""virtualClock"":{""driftToken"":""1",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6042#issuecomment-513242018:1626,access,accessConfigs,1626,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6042#issuecomment-513242018,1,['access'],['accessConfigs']
Security,"s where results changed:. - For the snpeff test, since the behavior on this branch seems more correct to me than master, I tried running the GATK4 test case inputs with GATK3, and it produces exactly the same results as this branch does. So I think that issue was introduced by the original GATK4 port, and is fixed in this branch.; - The rest of the tests with changed results don't seem to hit your breakpoint, though. So I think we need to figure out why they changed, and maybe also compare them with GATK3 (which can be a pain because the output format is slightly different).; - As you mentioned, you changed the reference for testEvalTrackWithoutGenotypesWithSampleFields, which seems to have only affected the number of loci processed. So I'm unclear why that change was necessary. If the test truly should have been failing without this change, will it still fail if the change is reverted ? If not, can we fix it, and either way there should be a negative test for that case. A few other general comments:. - I changed this PR to `draft` mode for now, which just better categorizes it for our internal workflow purposes. When its ready for a detailed code review we can remove the `draft` status.; - The `HashMap<FeatureInput<VariantContext>, HashMap<String, Collection<VariantContext>>>` can be wrapped in a class with just a couple of methods, so we don't have to manifest that long type all over the place.; - I know this PR still in an interim state, but passing the VariantWalker in as an argument to the comp methods doesn't seem like a step forward to me. If we can't solve that problem completely in this PR (which is fine, I'm all for trying to contain this), are those changes necessary ? Perhaps that part should just wait for the next round.; - Any new classes/methods should use `final` for variables and parameters wherever applicable, and public classes and methods should have javadoc.; - Finally, I'm curious if you've tried any perf testing on this branch ? Is it better ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-744689987:1289,Hash,HashMap,1289,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-744689987,2,['Hash'],['HashMap']
Security,s.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.getBlockLocations(NameNodeRpcServer.java:692); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.getBlockLocations(ClientNamenodeProtocolServerSideTranslatorPB.java:381); 	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:447); 	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:989); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:850); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:793); 	at java.security.AccessController.doPrivileged(Native Method); 	at javax.security.auth.Subject.doAs(Subject.java:422); 	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1840); 	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2489). 	at org.apache.hadoop.ipc.Client.call(Client.java:1475); 	at org.apache.hadoop.ipc.Client.call(Client.java:1412); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:229); 	at com.sun.proxy.$Proxy10.getBlockLocations(Unknown Source); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.getBlockLocations(ClientNamenodeProtocolTranslatorPB.java:255); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.apache.hadoop.io.retry.RetryInvocationHandler.invok,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294:9695,Access,AccessController,9695,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294,1,['Access'],['AccessController']
Security,s.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.getBlockLocations(NameNodeRpcServer.java:692); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.getBlockLocations(ClientNamenodeProtocolServerSideTranslatorPB.java:381); 	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:447); 	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:989); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:850); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:793); 	at java.security.AccessController.doPrivileged(Native Method); 	at javax.security.auth.Subject.doAs(Subject.java:422); 	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1840); 	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2489). 	at org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSource.getHeader(ReadsSparkSource.java:237); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeReads(GATKSparkTool.java:488); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeToolInputs(GATKSparkTool.java:468); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:458); 	at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:30); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); 	at ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294:3537,Access,AccessController,3537,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294,1,['Access'],['AccessController']
Security,s.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.getBlockLocations(NameNodeRpcServer.java:692); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.getBlockLocations(ClientNamenodeProtocolServerSideTranslatorPB.java:381); 	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:447); 	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:989); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:850); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:793); 	at java.security.AccessController.doPrivileged(Native Method); 	at javax.security.auth.Subject.doAs(Subject.java:422); 	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1840); 	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2489). 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62); 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45); 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423); 	at org.apache.hadoop.ipc.RemoteException.instantiateException(RemoteException.java:106); 	at org.apache.hadoop.ipc.RemoteException.unwrapRemoteException(RemoteException.java:73); 	at org.apache.hadoop.hdfs.DFSClient.callGetBlockLocations(DFSClient.java:1228); 	at org.apache.hadoop.hdfs.DFSClient.getLocatedBlocks(DFSClient.java:1213); 	at org.apache.hadoop.hdfs.DFSClient.getLocatedBlocks(DFSClient.java,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294:6454,Access,AccessController,6454,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294,1,['Access'],['AccessController']
Security,s.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.getBlockLocations(NameNodeRpcServer.java:692); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.getBlockLocations(ClientNamenodeProtocolServerSideTranslatorPB.java:381); 	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:447); 	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:989); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:850); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:793); 	at java.security.AccessController.doPrivileged(Native Method); 	at javax.security.auth.Subject.doAs(Subject.java:422); 	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1840); 	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2489). ***********************************************************************; org.broadinstitute.hellbender.exceptions.UserException: Failed to read bam header from /home/test/WGS_pipeline/TEST/output/spark_412.bowtie2.bam; Caused by:File does not exist: /home/test/WGS_pipeline/TEST/output/spark_412.bowtie2.bam; 	at org.apache.hadoop.hdfs.server.namenode.INodeFile.valueOf(INodeFile.java:72); 	at org.apache.hadoop.hdfs.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.getBlo,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294:1874,Access,AccessController,1874,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294,1,['Access'],['AccessController']
Security,s/walkers/vqsr/FilterVariantTranches.java](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvRmlsdGVyVmFyaWFudFRyYW5jaGVzLmphdmE=) | `92.105% <89.286%> (-0.526%)` | `41 <14> (+9)` | |; | [...itute/hellbender/tools/funcotator/Funcotation.java](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0aW9uLmphdmE=) | `33.333% <0%> (-22.222%)` | `3% <0%> (-2%)` | |; | [...Sources/gencode/DataProviderForMuc16IndelData.java](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL2dlbmNvZGUvRGF0YVByb3ZpZGVyRm9yTXVjMTZJbmRlbERhdGEuamF2YQ==) | `80% <0%> (-14.118%)` | `1% <0%> (ø)` | |; | [...ead/markduplicates/sparkrecords/EmptyFragment.java](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9FbXB0eUZyYWdtZW50LmphdmE=) | `78.571% <0%> (-6.044%)` | `5% <0%> (ø)` | |; | [...tools/spark/validation/CompareDuplicatesSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay92YWxpZGF0aW9uL0NvbXBhcmVEdXBsaWNhdGVzU3BhcmsuamF2YQ==) | `84.946% <0%> (-4.683%)` | `24% <0%> (-16%)` | |; | [...idation/CompareDuplicatesSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay92YWxpZGF0aW9uL0NvbXBhcmVEdXBsaWNhdGVzU3BhcmtJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `93.103% <0%> (-3.563%)` | `5% <0%> (-2%)` | |; | ... and [72 more](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5042#issuecomment-406734723:3466,validat,validation,3466,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5042#issuecomment-406734723,1,['validat'],['validation']
Security,sTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:113); 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:95); 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:73); 	at org.gradle.api.internal.tasks.execution.OutputDirectoryCreatingTaskExecuter.execute(OutputDirectoryCreatingTaskExecuter.java:51); 	at org.gradle.api.internal.tasks.execution.SkipCachedTaskExecuter.execute(SkipCachedTaskExecuter.java:103); 	at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:59); 	at org.gradle.api.internal.tasks.execution.ResolveTaskOutputCachingStateExecuter.execute(ResolveTaskOutputCachingStateExecuter.java:54); 	at org.gradle.api.internal.tasks.execution.ResolveBuildCacheKeyExecuter.execute(ResolveBuildCacheKeyExecuter.java:66); 	at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:59); 	at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:101); 	at org.gradle.api.internal.tasks.execution.FinalizeInputFilePropertiesTaskExecuter.execute(FinalizeInputFilePropertiesTaskExecuter.java:44); 	at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:91); 	at org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:62); 	at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:59); 	at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:54); 	at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43); 	at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskE,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:9322,Validat,ValidatingTaskExecuter,9322,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445,1,['Validat'],['ValidatingTaskExecuter']
Security,sks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:113); 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:95); 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:73); 	at org.gradle.api.internal.tasks.execution.OutputDirectoryCreatingTaskExecuter.execute(OutputDirectoryCreatingTaskExecuter.java:51); 	at org.gradle.api.internal.tasks.execution.SkipCachedTaskExecuter.execute(SkipCachedTaskExecuter.java:103); 	at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:59); 	at org.gradle.api.internal.tasks.execution.ResolveTaskOutputCachingStateExecuter.execute(ResolveTaskOutputCachingStateExecuter.java:54); 	at org.gradle.api.internal.tasks.execution.ResolveBuildCacheKeyExecuter.execute(ResolveBuildCacheKeyExecuter.java:66); 	at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:59); 	at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:101); 	at org.gradle.api.internal.tasks.execution.FinalizeInputFilePropertiesTaskExecuter.execute(FinalizeInputFilePropertiesTaskExecuter.java:44); 	at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:91); 	at org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:62); 	at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:59); 	at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:54); 	at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43); 	at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:9291,Validat,ValidatingTaskExecuter,9291,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445,1,['Validat'],['ValidatingTaskExecuter']
Security,"src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam --use_jdk_deflater true --use_jdk_inflater true --MODE VERBOSE --MAX_OUTPUT 100 --IGNORE_WARNINGS false --VALIDATE_INDEX true --IS_BISULFITE_SEQUENCED false --MAX_OPEN_TEMP_FILES 8000 --VALIDATION_STRINGENCY STRICT --COMPRESSION_LEVEL 1 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX false --CREATE_MD5_FILE false --help false --version false --verbosity INFO --QUIET false; [March 9, 2017 7:03:42 PM EST] Executing as gspowley@dna on Linux 3.10.0-514.10.2.el7.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14; Version: Version:4.alpha.2-170-g8d06823-SNAPSHOT; 19:03:42.998 INFO ValidateSamFile - Defaults.BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.COMPRESSION_LEVEL : 1; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - Initializing engine; 19:03:43.000 INFO ValidateSamFile - Done initializing engine; ERROR: Record 9762, Read name 20GAVAAXX100126:7:2:8126:115177, bin field of BAM record does not equal value computed based",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:1222,Validat,ValidateSamFile,1222,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,st.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvYWxpZ25tZW50L0Fzc2VtYmx5Q29udGlnQWxpZ25tZW50c0NvbmZpZ1BpY2tlclVuaXRUZXN0LmphdmE=) | `99.415% <0%> (-0.19%)` | `34% <0%> (+14%)` | |; | [...utils/variant/GATKVariantContextUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy92YXJpYW50L0dBVEtWYXJpYW50Q29udGV4dFV0aWxzVW5pdFRlc3QuamF2YQ==) | `87.194% <0%> (-0.088%)` | `316% <0%> (+156%)` | |; | [...ct/CreateSomaticPanelOfNormalsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9DcmVhdGVTb21hdGljUGFuZWxPZk5vcm1hbHNJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <0%> (ø)` | `6% <0%> (+3%)` | :arrow_up: |; | [.../validation/RemoveNearbyIndelsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vUmVtb3ZlTmVhcmJ5SW5kZWxzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `100% <0%> (ø)` | `5% <0%> (+2%)` | :arrow_up: |; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <0%> (ø)` | `10% <0%> (+4%)` | :arrow_up: |; | [...dation/AnnotateVcfWithBamDepthIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoQmFtRGVwdGhJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <0%> (ø)` | `12% <0%> (+5%)` | :arrow_up: |; | ... and [10 more](https://,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406399931:3238,validat,validation,3238,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406399931,1,['validat'],['validation']
Security,"ster(htsjdk.samtools.SAMBinaryTagAndValue.class);; kryo.register(htsjdk.samtools.ValidationStringency.class, new DefaultSerializers.EnumSerializer(ValidationStringency.class));; kryo.register(htsjdk.samtools.SAMFileHeader.class);; kryo.register(htsjdk.samtools.SAMProgramRecord.class);; kryo.register(htsjdk.samtools.SAMReadGroupRecord.class);; kryo.register(htsjdk.samtools.SAMSequenceDictionary.class);; kryo.register(htsjdk.samtools.SAMSequenceRecord.class);; kryo.register(PairedEnds.class);; try {; kryo.register(Class.forName(""scala.reflect.ClassTag$$anon$1""));; } catch (ClassNotFoundException e) {; //not a big deal, we'll just not register it; logger.debug(""Can't register class "" + e.getLocalizedMessage());; }. //; kryo.register(org.broadinstitute.hellbender.utils.variant.MinimalVariant.class);; kryo.register(org.broadinstitute.hellbender.utils.SimpleInterval.class);; kryo.register(org.broadinstitute.hellbender.utils.collections.IntervalsSkipList.class);; kryo.register(java.util.Hashtable.class);; kryo.register(org.broadinstitute.hellbender.utils.collections.IntervalsSkipListOneContig.class);; kryo.register(int[].class);; kryo.register(org.broadinstitute.hellbender.engine.datasources.ReferenceMultiSource.class);; kryo.register(org.broadinstitute.hellbender.engine.spark.datasources.ReferenceTwoBitSource.class);; kryo.register(scala.collection.convert.Wrappers$.class);; kryo.register(org.bdgenomics.adam.util.TwoBitRecord.class);; kryo.register(scala.None$.class);; kryo.register(org.bdgenomics.adam.models.NonoverlappingRegions.class);; kryo.register(org.broadinstitute.hellbender.utils.recalibration.BaseRecalibrationEngine.BQSRReferenceWindowFunction.class);; kryo.register(org.broadinstitute.hellbender.utils.recalibration.RecalibrationTables.class);; kryo.register(org.broadinstitute.hellbender.utils.collections.NestedIntegerArray.class);; kryo.register(org.broadinstitute.hellbender.utils.recalibration.RecalDatum.class);; kryo.register(org.broadinstitute.hellbender.util",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1733#issuecomment-212427242:1643,Hash,Hashtable,1643,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1733#issuecomment-212427242,1,['Hash'],['Hashtable']
Security,t.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at org.gradle.wrapper.Download.downloadInternal(Download.java:77); 	at org.gradle.wrapper.Download.download(Download.java:44); 	at org.gradle.wrapper.Install$1.call(Install.java:61); 	at org.gradle.wrapper.Install$1.call(Install.java:48); 	at org.gradle.wrapper.ExclusiveFileAccessManager.access(ExclusiveFileAccessManager.java:69); 	at org.gradle.wrapper.Install.createDist(Install.java:48); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:107); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:284); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3368); 	at org.gradle.wrapper.Download.downloadInternal(Download.java:62); 	... 7 more; Caused by: java.net.SocketException: Connection reset; 	at java.net.SocketInputStream.read(SocketInputStream.java:210); 	at java.net.SocketInputStream.read(SocketInputStream.java:141); 	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); 	at sun.security.ssl.InputRecord.readV3Record(InputRecord.java:593); 	at sun.s,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4194#issuecomment-358498401:1932,secur,security,1932,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4194#issuecomment-358498401,1,['secur'],['security']
Security,"terGenomicsCoders; INFO: Registering coder for SearchAnnotationSetsRequest; Jul 14, 2015 1:14:51 PM com.google.cloud.genomics.dataflow.utils.DataflowWorkarounds registerGenomicsCoders; INFO: Registering coder for RangePosition; Jul 14, 2015 1:14:51 PM com.google.cloud.genomics.dataflow.utils.DataflowWorkarounds registerGenomicsCoders; INFO: Registering coder for SearchJobsRequest; Jul 14, 2015 1:14:51 PM com.google.cloud.genomics.dataflow.utils.DataflowWorkarounds registerGenomicsCoders; INFO: Registering coder for ExportVariantSetRequest; 15/07/14 13:14:51 INFO spark.SparkPipelineRunner: Executing pipeline using the SparkPipelineRunner.; 15/07/14 13:14:51 INFO spark.SparkContext: Running Spark version 1.3.1; 15/07/14 13:14:51 INFO spark.SecurityManager: Changing view acls to: louisb; 15/07/14 13:14:51 INFO spark.SecurityManager: Changing modify acls to: louisb; 15/07/14 13:14:51 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(louisb); users with modify permissions: Set(louisb); 15/07/14 13:14:52 INFO slf4j.Slf4jLogger: Slf4jLogger started; 15/07/14 13:14:52 INFO Remoting: Starting remoting; 15/07/14 13:14:52 INFO Remoting: Remoting started; listening on addresses :[akka.tcp://sparkDriver@wm1b0-8ab.broadinstitute.org:65238]; 15/07/14 13:14:52 INFO util.Utils: Successfully started service 'sparkDriver' on port 65238.; 15/07/14 13:14:52 INFO spark.SparkEnv: Registering MapOutputTracker; 15/07/14 13:14:52 INFO spark.SparkEnv: Registering BlockManagerMaster; 15/07/14 13:14:52 INFO storage.DiskBlockManager: Created local directory at /var/folders/xt/vq7wz8955r1401mv8w0f4zf9qbfwzl/T/louisb/spark-7b286138-5fde-4fcb-bc34-3c6a86da6c0c/blockmgr-46eb69b0-d3ca-4004-bf32-ab103c0787f2; 15/07/14 13:14:52 INFO storage.MemoryStore: MemoryStore started with capacity 265.1 MB; 15/07/14 13:14:52 INFO spark.HttpFileServer: HTTP File server directory is /var/folders/xt/vq7wz8955r1401mv8w0f4zf9qbfwzl/T/louisb/spark-2",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/639#issuecomment-121313713:16355,Secur,SecurityManager,16355,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/639#issuecomment-121313713,3,"['Secur', 'authenticat']","['SecurityManager', 'authentication']"
Security,"thank you. and those two unaccounted for files are actually in validationDataLocation, not private as I originally wrote. That seems to be; /humgen/gsa-hpprojects/GATK/data/Validation_Data",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-370589540:63,validat,validationDataLocation,63,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-370589540,1,['validat'],['validationDataLocation']
Security,thanks for the review @kcibul. I made some changes accordingly. re: PrepareCallset file of sample names. That would be nice! It would make this workflow simpler and it also simplifies the access requirements for PrepareCallset. re: Dockstore. We actually ruled this out because Terra says that the definition of a method configuration can change automatically if its updated in dockstore. Which can be useful but it adds a security risk since a compromised Dockstore can change the definition of the production AoU extraction WDL which runs with highly elevated permissions. We already have a script that creates method configurations from github so I can probably add something a little hacky to resolve relative imports to the raw github file that it refers to.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7242#issuecomment-846494686:188,access,access,188,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7242#issuecomment-846494686,2,"['access', 'secur']","['access', 'security']"
Security,"the hacker attacked our server, and we solved the problem by remove the virus. (T-T)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8520#issuecomment-1720714446:11,attack,attacked,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8520#issuecomment-1720714446,1,['attack'],['attacked']
Security,the requirement is that the validation stringency be exposed to the clients of the ReadsDataSource class and tests need to be added. A separate ticket will later be entered for exposing the option at the commandline.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/181#issuecomment-94345002:28,validat,validation,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/181#issuecomment-94345002,2,"['expose', 'validat']","['exposed', 'validation']"
Security,"this for a first workflow to target?. 1) Run ExtractVariantAnnotations on a training set of chromosomes. You can keep training/truth labels as in Best Practices, for now.; 2) Run TrainVariantAnnotationsModel on that. We'll use the truth scores generated here for any sensitivity conversions---i.e., we'll be calibrating scores only to the truth sites that are contained in the training set of chromosomes.; 3) Use the trained model to run a single shard of ScoreVariantAnnotations on a validation set of chromosomes.; 4) Run some variation of the above script on the resulting outputs to determine SNP and INDEL score thresholds for optimizing the corresponding LL scores. We can also add some code to the script to use the truth scores from step 2 to convert these score thresholds into truth-sensitivity thresholds.; 5) Provide these truth-sensitivity thresholds to ScoreVariantAnnotations and use them to hard filter. Evaluate on a test set of chromosomes. If all looks good, we can later move steps 3-4 into the train tool and automate the passing of sensitivities in 5 via outputs in the model directory. This will let us keep the basic interface of ScoreVariantAnnotations the same, but we'll have to add a few basic parameters to TrainVariantAnnotationsModel to control the train/validation split. So I think all this branch is missing is step 5---we'll simply need to add command-line parameters for the SNP/INDEL sensitivity thresholds and then do the hard filtering in the VCF writing method highlighted above. Do you think you can handle implementing that in this branch, and then the rest at the WDL level? I can help with the python script for the LL stuff (or anything else), if needed. Not sure if you got a chance to check out what your collaborators are doing in the methods you're looking to compare against, but it would be good to understand if this basic scheme for train/validation/test splitting can be replicated over there. You'll want to compare apples to apples, after all!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1068345084:1366,validat,validation,1366,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1068345084,2,['validat'],['validation']
Security,this happens while running the command ; ```; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx15500m\ ; -jar /root/gatk.jar Mutect2 -R gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.fasta\ ; -I gs://cclebams/hg38_wes/CDS-00rz9N.hg38.bam -tumor BC1_HAEMATOPOIETIC_AND_LYMPHOID_TISSUE --germline-resource gs://gcp-public-data--gnomad/release/3.0/vcf/genomes/gnomad.genomes.r3.0.sites.vcf.bgz\ ; -pon gs://gatk-best-practices/somatic-hg38/1000g_pon.hg38.vcf.gz\ ; -L gs://fc-secure-d2a2d895-a7af-4117-bdc7-652d7d268324/7a157f4a-7d93-4a3e-aaf4-c41833463f5a/Mutect2/3be8ce8e-1075-4063-bc43-6f61e386c3f5/call-SplitIntervals/cacheCopy/glob-0fc990c5ca95eebc97c4c204e3e303e1/0000-scattered.interval_list\ ; -O output.vcf.gz --f1r2-tar-gz f1r2.tar.gz --gcs-project-for-requester-pays broad-firecloud-ccle --genotype-germline-sites true --genotype-pon-sites true --emit-ref-confidence GVCF; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7849#issuecomment-1128909634:615,secur,secure-,615,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7849#issuecomment-1128909634,1,['secur'],['secure-']
Security,this is a bigger project - tribble async reading is very broken. we need to rewrite that part and maybe expose sync/async via factory methods.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1597#issuecomment-198510701:104,expose,expose,104,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1597#issuecomment-198510701,1,['expose'],['expose']
Security,titute/gatk/commit/9d9ca1ff31f99d8005c822e55aaccce967427383?src=pr&el=desc) will **increase** coverage by `0.008%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #3228 +/- ##; ===============================================; + Coverage 80.419% 80.427% +0.008% ; Complexity 17290 17290 ; ===============================================; Files 1165 1165 ; Lines 62596 62597 +1 ; Branches 9768 9768 ; ===============================================; + Hits 50339 50345 +6 ; + Misses 8352 8347 -5 ; Partials 3905 3905; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `83.704% <100%> (+0.122%)` | `36 <0> (ø)` | :arrow_down: |; | [.../tools/walkers/validation/CountFalsePositives.java](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ291bnRGYWxzZVBvc2l0aXZlcy5qYXZh) | `93.548% <100%> (ø)` | `7 <1> (ø)` | :arrow_down: |; | [.../tools/walkers/validation/FalsePositiveRecord.java](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vRmFsc2VQb3NpdGl2ZVJlY29yZC5qYXZh) | `100% <100%> (ø)` | `7 <2> (ø)` | :arrow_down: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `73.649% <0%> (+2.027%)` | `34% <0%> (ø)` | :arrow_down: |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3228#issuecomment-314209891:1208,validat,validation,1208,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3228#issuecomment-314209891,1,['validat'],['validation']
Security,"too long (225) at position chr1:10178; skipping that record. Set --reference_window_stop >= 225 ; INFO 10:49:23,200 LeftAlignAndTrimVariants - Reference allele is too long (221) at position chr1:10213; skipping that record. Set --reference_window_stop >= 221 ; INFO 10:49:23,201 LeftAlignAndTrimVariants - Reference allele is too long (223) at position chr1:10218; skipping that record. Set --reference_window_stop >= 223 ; INFO 10:49:23,203 LeftAlignAndTrimVariants - Reference allele is too long (212) at position chr1:10229; skipping that record. Set --reference_window_stop >= 212 ; INFO 10:49:23,203 LeftAlignAndTrimVariants - Reference allele is too long (216) at position chr1:10231; skipping that record. Set --reference_window_stop >= 216 ; INFO 10:49:23,205 LeftAlignAndTrimVariants - Reference allele is too long (204) at position chr1:10237; skipping that record. Set --reference_window_stop >= 204 ; INFO 10:49:23,205 LeftAlignAndTrimVariants - Reference allele is too long (209) at position chr1:10238; skipping that record. Set --reference_window_stop >= 209 ; INFO 10:49:23,208 LeftAlignAndTrimVariants - Reference allele is too long (204) at position chr1:10254; skipping that record. Set --reference_window_stop >= 204 ; INFO 10:49:23,214 LeftAlignAndTrimVariants - Reference allele is too long (207) at position chr1:10276; skipping that record. Set --reference_window_stop >= 207 ; 0 variants were aligned; INFO 10:49:23,402 ProgressMeter - done 638.0 0.0 s 10.6 m 0.0% 0.0 s 0.0 s ; INFO 10:49:23,402 ProgressMeter - Total runtime 0.41 secs, 0.01 min, 0.00 hours ; ------------------------------------------------------------------------------------------; Done. There were 1 WARN messages, the first 1 are repeated below.; WARN 10:49:22,065 IndexDictionaryUtils - Track variant doesn't have a sequence dictionary built in, skipping dictionary validation ; ------------------------------------------------------------------------------------------; WMCF9-CB5:Mutect2 shlee$ ; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-324361091:4627,validat,validation,4627,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-324361091,1,['validat'],['validation']
Security,tractPipeline.java:472); at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150); at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173); at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485); at org.broadinstitute.hellbender.engine.VariantWalker.traverse(VariantWalker.java:102); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1085); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:140); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); at org.broadinstitute.hellbender.Main.main(Main.java:289); Using GATK jar /root/gatk.jar defined in environment variable GATK_LOCAL_JAR; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx3500m -jar /root/gatk.jar Funcotator --data-sources-path /cromwell_root/datasources_dir --ref-version hg38 --output-file-format VCF -R gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.fasta -V gs://fc-secure-d2a2d895-a7af-4117-bdc7-652d7d268324/94e769a1-28e1-4bd7-b09f-9e47fb7d8352/omics_mutect2/14fe5685-740c-4e09-9d1a-8c8d14c0ae5b/call-mutect2/Mutect2/2de52f4f-eea0-4ec7-acc1-f47b1a2d1e6c/call-Filter/attempt-2/CDS-2jucw0.hg38-filtered.vcf.gz -O CDS-2jucw0.hg38-filtered.vcf.gz.annotated.vcf.gz -L /cromwell_root/ccleparams/region_file_wgs.list --annotation-default normal_barcode: --annotation-default tumor_barcode:NP5 --annotation-default Center:DEPMAP --annotation-default source:Unknown; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6651#issuecomment-1182102653:7466,secur,secure-,7466,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6651#issuecomment-1182102653,1,['secur'],['secure-']
Security,tute/gatk/commit/c7d5bc188309bba64e57246ad29acbf0528150f2?src=pr&el=desc) will **increase** coverage by `0.06%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #2653 +/- ##; ==============================================; + Coverage 76.122% 76.182% +0.06% ; - Complexity 11152 11195 +43 ; ==============================================; Files 769 769 ; Lines 40753 40911 +158 ; Branches 7112 7144 +32 ; ==============================================; + Hits 31022 31167 +145 ; - Misses 7062 7066 +4 ; - Partials 2669 2678 +9; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2653?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...org/broadinstitute/hellbender/engine/GATKTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/2653?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvR0FUS1Rvb2wuamF2YQ==) | `91.824% <100%> (ø)` | `77 <0> (ø)` | :arrow_down: |; | [...r/tools/walkers/variantutils/ValidateVariants.java](https://codecov.io/gh/broadinstitute/gatk/pull/2653?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9WYWxpZGF0ZVZhcmlhbnRzLmphdmE=) | `81.081% <0%> (+0.484%)` | `18% <0%> (ø)` | :arrow_down: |; | [...org/broadinstitute/hellbender/utils/MathUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2653?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9NYXRoVXRpbHMuamF2YQ==) | `81.009% <0%> (+1.638%)` | `163% <0%> (+22%)` | :arrow_up: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2653?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `74.026% <0%> (+1.948%)` | `35% <0%> (ø)` | :arrow_down: |; | [...ender/utils/nio/SeekableByteChannelPrefetcher.java](https://codecov.io/gh/broadinstitute/gatk/pull/2653?src=pr&el=tree#diff-c3JjL21,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2653#issuecomment-299045594:1224,Validat,ValidateVariants,1224,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2653#issuecomment-299045594,1,['Validat'],['ValidateVariants']
Security,ute/gatk/pull/4026?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...tute/hellbender/tools/BwaMemIndexImageCreator.java](https://codecov.io/gh/broadinstitute/gatk/pull/4026/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9Cd2FNZW1JbmRleEltYWdlQ3JlYXRvci5qYXZh) | `71.429% <ø> (ø)` | `2 <0> (ø)` | :arrow_down: |; | [...der/tools/spark/CreateHadoopBamSplittingIndex.java](https://codecov.io/gh/broadinstitute/gatk/pull/4026/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9DcmVhdGVIYWRvb3BCYW1TcGxpdHRpbmdJbmRleC5qYXZh) | `88.462% <ø> (ø)` | `14 <0> (ø)` | :arrow_down: |; | [...org/broadinstitute/hellbender/tools/ClipReads.java](https://codecov.io/gh/broadinstitute/gatk/pull/4026/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9DbGlwUmVhZHMuamF2YQ==) | `90.385% <100%> (ø)` | `35 <0> (ø)` | :arrow_down: |; | [...tools/spark/validation/CompareDuplicatesSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4026/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay92YWxpZGF0aW9uL0NvbXBhcmVEdXBsaWNhdGVzU3BhcmsuamF2YQ==) | `82.927% <100%> (ø)` | `24 <0> (ø)` | :arrow_down: |; | [...er/tools/ConvertHeaderlessHadoopBamShardToBam.java](https://codecov.io/gh/broadinstitute/gatk/pull/4026/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9Db252ZXJ0SGVhZGVybGVzc0hhZG9vcEJhbVNoYXJkVG9CYW0uamF2YQ==) | `76.923% <100%> (ø)` | `2 <0> (ø)` | :arrow_down: |; | [...institute/hellbender/utils/help/HelpConstants.java](https://codecov.io/gh/broadinstitute/gatk/pull/4026/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9oZWxwL0hlbHBDb25zdGFudHMuamF2YQ==) | `2.381% <0%> (-1.786%)` | `1% <0%> (ø)` | |; | [...itute/hellbender/tools/walkers/bqsr/ApplyBQSR.java](https://codecov.io/gh/broadinstitute/gatk/pull/402,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4026#issuecomment-356126957:1829,validat,validation,1829,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4026#issuecomment-356126957,1,['validat'],['validation']
Security,vbGxlY3RSZWFkQ291bnRzLmphdmE=) | `84.746% <83.333%> (-0.439%)` | `11 <3> (+1)` | |; | [...oadinstitute/hellbender/utils/text/XReadLines.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXh0L1hSZWFkTGluZXMuamF2YQ==) | `81.818% <0%> (-3.182%)` | `18% <0%> (+1%)` | |; | [...stitute/hellbender/utils/nio/PathLineIterator.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vUGF0aExpbmVJdGVyYXRvci5qYXZh) | `61.111% <0%> (-3.175%)` | `4% <0%> (ø)` | |; | [...rs/variantutils/SelectVariantsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9TZWxlY3RWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `98% <0%> (-2%)` | `71% <0%> (ø)` | |; | [...llbender/tools/walkers/validation/Concordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2UuamF2YQ==) | `87.179% <0%> (-1.417%)` | `41% <0%> (+2%)` | |; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `98.601% <0%> (-1.399%)` | `8% <0%> (+2%)` | |; | [...org/broadinstitute/hellbender/engine/GATKTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvR0FUS1Rvb2wuamF2YQ==) | `91.163% <0%> (-0.426%)` | `101% <0%> (+1%)` | |; | [...lbender/utils/variant/GATKVariantContextUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5715#issuecomment-467092164:2146,validat,validation,2146,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5715#issuecomment-467092164,1,['validat'],['validation']
Security,walkers/bqsr/BaseRecalibratorIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5724/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Jxc3IvQmFzZVJlY2FsaWJyYXRvckludGVncmF0aW9uVGVzdC5qYXZh) | `1.031% <0%> (-98.969%)` | `1% <0%> (-7%)` | |; | [...ers/vqsr/FilterVariantTranchesIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5724/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvRmlsdGVyVmFyaWFudFRyYW5jaGVzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `1.053% <0%> (-98.947%)` | `1% <0%> (-5%)` | |; | [...s/variantutils/VariantsToTableIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5724/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9WYXJpYW50c1RvVGFibGVJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `1.205% <0%> (-98.795%)` | `1% <0%> (-20%)` | |; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5724/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `1.563% <0%> (-98.438%)` | `1% <0%> (-5%)` | |; | [...ientation/ReadOrientationModelIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5724/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3JlYWRvcmllbnRhdGlvbi9SZWFkT3JpZW50YXRpb25Nb2RlbEludGVncmF0aW9uVGVzdC5qYXZh) | `1.667% <0%> (-98.333%)` | `1% <0%> (-5%)` | |; | [...on/FindBreakpointEvidenceSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5724/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9pbnRlZ3JhdGlvbi9GaW5kQnJlYWtwb2ludEV2aWRlbmNlU3BhcmtJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `1.754% <0%> (-98.246%)` | `1% <0%> (-6%)` | |; | [...bender/tools/s,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5724#issuecomment-467587055:2912,validat,validation,2912,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5724#issuecomment-467587055,1,['validat'],['validation']
Security,"ward. Not sure how much we can conclude, but that the validation and test F1s are similar and that the validation LL score isn't *too* far off are encouraging. That said, there is a pretty big drop in recall when optimizing LL. But we should also expect some discrepancy between LL and F1, according to one of the papers linked above. I would hope that with more variants or reliable training/truth (as in your data), things might stabilize or line up better. I'll try running with more malaria data, as well. The following trios x sites heatmap (top plot) for the validation set might better illustrate the arbitrariness in F1 (click to enlarge):. ![image](https://user-images.githubusercontent.com/11076296/158385585-1a0dfe8e-d4b7-4770-aed0-19ad81162c92.png). Here, yellow = het errors (since these are supposed to be clonal malaria samples), red = Mendelian errors, grey = no calls, green = Mendelian consistency, white = reference. The second plot shows the training/truth positives used to train the model and to calculate the LL score in the validation shard. The third plot shows the ""orthogonal truth"" positives/negatives used to calculate F1. So we can see that the difficulty in deriving F1 as a function of the score along the horizontal axis to give the third plot lies in collapsing the columns in the top plot into a single condition positive or condition negative status. Again, hard to do so without some arbitrariness; I simply came up with some rules to convert various amounts of red, yellow, green, etc. in each column to a red/white/green status. If you're using a single gold-standard sample, this should definitely be more straightforward. In any case, the optimal validation LL score at ~0.02 does appear to line up quite well visually with where one might manually set a threshold. It corresponds pretty well with the transition from the yellow/red/grey junk to the clean green/white sites in the top plot. Here's the same for the test set:. ![image](https://user-images.gith",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1067396431:2142,validat,validation,2142,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1067396431,1,['validat'],['validation']
Security,will **increase** coverage by `6.783%`.; > The diff coverage is `80%`. ```diff; @@ Coverage Diff @@; ## master #5984 +/- ##; ===============================================; + Coverage 80.142% 86.924% +6.783% ; - Complexity 31040 32741 +1701 ; ===============================================; Files 2014 2014 ; Lines 151333 151367 +34 ; Branches 16612 16617 +5 ; ===============================================; + Hits 121281 131575 +10294 ; + Misses 24197 13728 -10469 ; - Partials 5855 6064 +209; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5984?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...tools/walkers/ValidateVariantsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5984/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL1ZhbGlkYXRlVmFyaWFudHNJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `98.701% <100%> (+97.252%)` | `44 <4> (+42)` | :arrow_up: |; | [...r/tools/walkers/variantutils/ValidateVariants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5984/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9WYWxpZGF0ZVZhcmlhbnRzLmphdmE=) | `80.62% <66.667%> (-2.263%)` | `42 <7> (+6)` | |; | [...nder/utils/runtime/StreamingProcessController.java](https://codecov.io/gh/broadinstitute/gatk/pull/5984/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9ydW50aW1lL1N0cmVhbWluZ1Byb2Nlc3NDb250cm9sbGVyLmphdmE=) | `67.299% <0%> (-0.474%)` | `33% <0%> (ø)` | |; | [.../walkers/vqsr/CNNScoreVariantsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5984/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `96.629% <0%> (+0.562%)` | `16% <0%> (+1%)` | :arrow_up: |; | [...va/org/broadinstitute/hellbender/GATKBaseTest.java](https://codecov.io/gh,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5984#issuecomment-498803022:1298,Validat,ValidateVariants,1298,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5984#issuecomment-498803022,1,['Validat'],['ValidateVariants']
Security,y Δ | |; |---|---|---|---|; | [...umber/utils/MergeAnnotatedRegionsByAnnotation.java](https://codecov.io/gh/broadinstitute/gatk/pull/5551/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL01lcmdlQW5ub3RhdGVkUmVnaW9uc0J5QW5ub3RhdGlvbi5qYXZh) | `94.737% <ø> (ø)` | `4 <0> (ø)` | :arrow_down: |; | [...nder/tools/spark/pipelines/ReadsPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5551/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrLmphdmE=) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [.../tools/copynumber/utils/MergeAnnotatedRegions.java](https://codecov.io/gh/broadinstitute/gatk/pull/5551/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL01lcmdlQW5ub3RhdGVkUmVnaW9ucy5qYXZh) | `100% <ø> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/5551/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `80.172% <ø> (ø)` | `19 <0> (ø)` | :arrow_down: |; | [...tute/hellbender/tools/AnnotatePairOrientation.java](https://codecov.io/gh/broadinstitute/gatk/pull/5551/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9Bbm5vdGF0ZVBhaXJPcmllbnRhdGlvbi5qYXZh) | `96.429% <ø> (ø)` | `8 <0> (ø)` | :arrow_down: |; | [...nder/tools/copynumber/utils/TagGermlineEvents.java](https://codecov.io/gh/broadinstitute/gatk/pull/5551/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL1RhZ0dlcm1saW5lRXZlbnRzLmphdmE=) | `100% <ø> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...t/java/org/broadinstitute/hellbender/MainTest.java](https://co,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5551#issuecomment-450184780:1882,Validat,ValidateBasicSomaticShortMutations,1882,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5551#issuecomment-450184780,1,['Validat'],['ValidateBasicSomaticShortMutations']
Security,"yes, not the best way to sharing passwords, but this particular account isnt much more than a guest for this one transaction. google is fine - thanks for your help here.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-360582476:33,password,passwords,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-360582476,1,['password'],['passwords']
Security,ø> (ø)` | `14 <0> (ø)` | :arrow_down: |; | [.../walkers/contamination/CalculateContamination.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2NvbnRhbWluYXRpb24vQ2FsY3VsYXRlQ29udGFtaW5hdGlvbi5qYXZh) | `96.552% <ø> (ø)` | `10 <0> (ø)` | :arrow_down: |; | [...ender/tools/walkers/annotator/InbreedingCoeff.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9JbmJyZWVkaW5nQ29lZmYuamF2YQ==) | `72.414% <ø> (-13.793%)` | `7 <0> (-3)` | |; | [...der/tools/walkers/CombineGVCFsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL0NvbWJpbmVHVkNGc0ludGVncmF0aW9uVGVzdC5qYXZh) | `1.262% <ø> (-88.675%)` | `2 <0> (-36)` | |; | [...s/walkers/validation/CalculateMixingFractions.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ2FsY3VsYXRlTWl4aW5nRnJhY3Rpb25zLmphdmE=) | `78.431% <ø> (ø)` | `15 <0> (ø)` | :arrow_down: |; | [...s/walkers/validation/MergeMutect2CallsWithMC3.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vTWVyZ2VNdXRlY3QyQ2FsbHNXaXRoTUMzLmphdmE=) | `81.25% <ø> (ø)` | `13 <0> (ø)` | :arrow_down: |; | [...tools/walkers/mutect/SomaticLikelihoodsEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9Tb21hdGljTGlrZWxpaG9vZHNFbmdpbmUuamF2YQ==) | `86.667% <ø> (-2.222%)` | `17 <0> (-1)` | |; | ... and [1382 more](https://codecov.io/gh/broadinstitute/gatk/pull/5688/,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5688#issuecomment-465024734:3093,validat,validation,3093,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5688#issuecomment-465024734,1,['validat'],['validation']
Security,👍 to removing the api key. We're leaking them all over the place... We could optionally go back to accepting a key file as a form of authentication which is much less dangerous.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2402#issuecomment-288551032:133,authenticat,authentication,133,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2402#issuecomment-288551032,1,['authenticat'],['authentication']
Testability,"	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	NA	NA	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	g.chr15:90631838C>T	ENST00000559482.5_2	-			c.e6+104G>A			IDH2_ENST00000330062.8_3_Missense_Mutation_p.G323S|IDH2_ENST00000540499.2_2_Missense_Mutation_p.G323R			P48735	IDHP_HUMAN	isocitrate dehydrogenase (NADP(+)) 2, mitochondrial	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	2-oxoglutarate metabolic process (GO:0006103)|carbohydrate metabolic process (GO:0005975)|cellular metabolic process (GO:0044237)|glyoxylate cycle (GO:0006097)|isocitrate metabolic process (GO:0006102)|small molecule metabolic process (GO:0044281)|tricarboxylic acid cycle (GO:0006099)	extracellular vesicular exosome (GO:0070062)|mitochondrial inner membrane (GO:0005743)|mitochondrial matrix (GO:0005759)|mitochondrion (GO:0005739)	isocitrate dehydrogenase (NADP+) activity (GO:0004450)|magnesium ion binding (GO:0000287)|NAD binding (GO:0051287)			NS(223)|adrenal_gland(294)|autonomic_ganglia(349)|biliary_tract(876)|bone(893)|breast(1151)|central_nervous_system(11211)|cervix(20)|endometrium(22)|eye(81)|genital_tract(1)|haematopoietic_and_lymphoid_tissue(26199)|kidney(260)|large_intestine(1302)|liver(111)|lung(320)|meninges(57)|oesophagus(176)|ovary(533)|pancreas(585)|perineum(1)|peritoneum(60)|pleura(11)|prostate(172)|salivary_gland(105)|skin(644)|small_intestine(26)|soft_tissue(479)|stomach(547)|testis(11)|thymus(26)|thyroid(239)|upper_aerodigestive_tract(127)|urinary_tract(32)|vulva(66)	47210	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__		ATGGGCGTGCCTGCCAATGGT	0.5635910224438903	__UNKNOWN__	__UNKNOWN__	M		GBM		__UNKNOWN__			0.424	1024	1385					""socitrate dehydrogenase 2 (NADP+), mitochondrial ""	3418	15	15q26.1	yes			M	Dom					362866	Human_Phenotype_Ontology:HP:0004808,MeSH:D015470,MedGen:C0023467,OMIM:601626,Orphanet:ORPHA519,SNOMED_CT:17788007|Human_Phenotype_Ontology:HP:0010796,MedGen:C0677865|H",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5777#issuecomment-724975064:1809,test,testis,1809,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5777#issuecomment-724975064,1,['test'],['testis']
Testability,	at org.testng.Assert.assertTrue(Assert.java:51); 	at org.broadinstitute.hellbender.tools.walkers.gnarlyGenotyper.GnarlyGenotyperEngineUnitTest.testGenotypeCallForLotsOfAlts(GnarlyGenotyperEngineUnitTest.java:71); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293:1351,Test,TestRunner,1351,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293,1,['Test'],['TestRunner']
Testability, 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); Caused by: org.testng.TestNGException:An error occurred while instantiating class org.broadinstitute.hellbender.engine.spark.ReadsPreprocessingPipelineSparkTestData. Check to make sure it can be instantiated; 	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:134); 	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79); 	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:110); 	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:195); 	at org.testng.TestClass.getInstances(TestClass.java:102); 	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82); 	at org.testng.TestClass.init(TestClass.java:74); 	at org.testng.TestClass.<init>(TestClass.java:39); 	at org.testng.TestRunner.initMethods(TestRunner.java:466); 	at org.testng.TestRunner.init(TestRunner.java:345); 	at org.testng.TestRunner.init(TestRunner.java:298); 	at org.testng.TestRunner.<init>(TestRunner.java:183); 	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:603); 	at org.testng.SuiteRunner.init(SuiteRunner.java:196); 	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127); 	at org.testng.TestNG.createSuiteRunner(TestNG.java:1231); 	at org.testng.TestNG.createSuiteRunners(TestNG.java:1210); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1058); 	at org.testng.TestNG.runSuites(TestNG.java:997); 	at org.testng.TestNG.run(TestNG.java:965); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:129); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:88); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5787#issuecomment-472107858:3111,Test,TestRunner,3111,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5787#issuecomment-472107858,1,['Test'],['TestRunner']
Testability, 	at org.broadinstitute.hellbender.testutils.CommandLineProgramTester.runCommandLine(CommandLineProgramTester.java:107); 	at org.broadinstitute.hellbender.tools.HaplotypeCallerSparkIntegrationTest.testNonStrictVCFModeIsConsistentWithPastResults(HaplotypeCallerSparkIntegrationTest.java:110); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:4294,test,testng,4294,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['test'],['testng']
Testability, 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteT,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:4585,test,testng,4585,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['test'],['testng']
Testability," ""3.701625"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-NISTSampleHeadToHead/BenchmarkComparison/a39481f5-0969-4891-a843-f3c3fd7437d1/call-CONTROLRuntimeTask/cacheCopy/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-NISTSampleHeadToHead/BenchmarkComparison/a39481f5-0969-4891-a843-f3c3fd7437d1/call-BenchmarkVCFControlSample/Benchmark/0c99102a-bca1-4426-97c6-5a311ace93c1/call-CombineSummaries/summary.csv"",; ""NIST evalHCprocesshours"": ""95.62183055555556"",; ""NIST evalHCsystemhours"": ""0.18361111111111117"",; ""NIST evalHCwallclockhours"": ""64.22846111111112"",; ""NIST evalHCwallclockmax"": ""3.3683277777777776"",; ""NIST evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-NISTSampleHeadToHead/BenchmarkComparison/a39481f5-0969-4891-a843-f3c3fd7437d1/call-EVALRuntimeTask/cacheCopy/monitoring.pdf"",; ""NIST evalindelF1Score"": ""0.9902"",; ""NIST evalindelPrecision"": ""0.9903"",; ""NIST evalsnpF1Score"": ""0.9899"",; ""NIST evalsnpPrecision"": ""0.9887"",; ""NIST evalsnpRecall"": ""0.9911"",; ""NIST evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-NISTSampleHeadToHead/BenchmarkComparison/a39481f5-0969-4891-a843-f3c3fd7437d1/call-BenchmarkVCFTestSample/Benchmark/a3925c8a-7e0a-4fec-8507-f885061b69c3/call-CombineSummaries/summary.csv"",; ""ROC_Plots_Reported"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-CreateHTMLReport/cacheCopy/report.html""; }; } ; </pre> </details>",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069766207:14288,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,14288,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069766207,7,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability," ""SelectVariants"" command looks like:. ""G1 Refine#78"" os_prio=0 tid=0x00007ff536ea6000 nid=0x1af0e0 runnable . ""G1 Refine#79"" os_prio=0 tid=0x00007ff536ea8000 nid=0x1af0e1 runnable . ""G1 Refine#80"" os_prio=0 tid=0x00007ff536ea9800 nid=0x1af0e2 runnable . ""G1 Refine#81"" os_prio=0 tid=0x00007ff536eab800 nid=0x1af0e3 runnable . ""G1 Refine#82"" os_prio=0 tid=0x00007ff536ead000 nid=0x1af0e4 runnable . ""G1 Young RemSet Sampling"" os_prio=0 tid=0x00007ff536eaf000 nid=0x1af0e5 runnable ; ""VM Periodic Task Thread"" os_prio=0 tid=0x00007ff5310eb000 nid=0x1af101 waiting on condition . JNI global references: 13. Heap; garbage-first heap total 5378048K, used 1388875K [0x0000000082000000, 0x0000000800000000); region size 4096K, 334 young (1368064K), 1 survivors (4096K); Metaspace used 49722K, capacity 50240K, committed 50768K, reserved 1093632K; class space used 6018K, capacity 6219K, committed 6268K, reserved 1048576K. ; This is the screen log for GGVCFs command, although I was hoping by adding the flag ""-DGATK_STACKTRACE_ON_USER_EXCEPTION=true"" I would get more information to share. As it takes 11 hours to get to the point where the error occurs it has been difficult to trouble shoot, I am hoping that I can fix this without rebuilding everything which is why I decided to write. Thanks for any information or suggestions you may have. . Dan; ; Using GATK jar /home/dan_vanderpool/src/gatk-4.2.5.0/gatk-package-4.2.5.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx1600g -DGATK_STACKTRACE_ON_USER_EXCEPTION=true -jar /home/dan_vanderpool/src/gatk-4.2.5.0/gatk-package-4.2.5.0-local.jar GenotypeGVCFs -R /home/dan_vanderpool/Wolf_raw_reads/Wolf_genome/GCA_905319855.2_mCanLor1.2_genomic.fa -V gendb://Wolf_Genome_Variantsdb -O All_Wolf_Samples_Joint_Genotypes_Raw.vcf.gz -L /scratch/dan/Wolf_reads_raw/Wolf_GenCov300_Q20_Merged.interval_list -imr ALL --genom",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7639#issuecomment-1049112454:3028,log,log,3028,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7639#issuecomment-1049112454,1,['log'],['log']
Testability," ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""test_options"": null,; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallingCarrot.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCallingCarrot.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCallingCarrot.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCallingCarrot.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkComparison.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkComparison.referenceVersion"": ""HG38"",; ""BenchmarkComparison.st",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055740510:1965,Benchmark,BenchmarkComparison,1965,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055740510,4,['Benchmark'],['BenchmarkComparison']
Testability," ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""Benchmark.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""Benchmark.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""Benchmark.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""Benchmark.evalVcfIndex"": ""test_output:VariantCalling.output_vcf_index"",; ""Benchmark.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""Benchmark.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""Benchmark.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""Benchmark.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""Benchmark.referenceVersion"": ""HG38"",; ""Benchmark.stratIntervals"": [; ""gs://gcp-public-data--broad-references/hg38/v0/exome_evaluation_regions.v1.interval_list"",; ""gs://broad-dsp-spec-ops/scratch/mshand/EvaluationStratIntervalLists/LCRFromHengHg38.interval_list""; ],; ""Benchmark.stratLabels"": [; ""exome"",; ""LCR""; ],; ""Benchmark.truthLabel"": ""HG002_GRCh38_GIAB"",; ""Benchmark.truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""Benchmark.truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi""; },; ""test_cromwell_job_id"": null,; ""eval_cromwell_job_id"": null,; ""created_at"": ""2022-01-31T15:46:11.708929"",; ""created_by"": null,; ""finished_at"": null; } ; </pre> </details>",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1025921276:2385,Benchmark,Benchmark,2385,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1025921276,7,['Benchmark'],['Benchmark']
Testability," ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCalling.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCalling.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCalling.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkComparison.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkComparison.referenceVersion"": ""HG38"",; ""BenchmarkComparison.stratIntervals"": [; ""gs://gcp-public-data--broad-references/hg38/v0/exome_evaluation_regions.v1.interval_list"",; ""gs://broad-dsp-spec-ops/scratch/mshand/EvaluationStratIntervalLists/LCRFromHengHg38.interval_list""; ],; ""BenchmarkComparison.stratLabels"": [; ""exome"",; ""LCR""; ],; ""BenchmarkComparison.truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkComparison.truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkComparison.truthVcfIndex"": ""gs://dsp-methods-carrot-d",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049160705:2271,Benchmark,BenchmarkComparison,2271,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049160705,2,['Benchmark'],['BenchmarkComparison']
Testability," ""test_id"": ""15973a95-055a-4540-9590-ce40f34411f5"",; ""name"": ""GATK HaplotypeCaller vs Nightly Test_run_2022-02-23 19:59:31.084286796 UTC"",; ""status"": ""testfailed"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://emeryj-testing/CarrotData/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://emeryj-testing/CarrotData/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://emeryj-testing/CarrotData/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCalling.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCalling.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCalling.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-re",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049165952:1117,test,testing,1117,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049165952,1,['test'],['testing']
Testability," - Picard Version: 2.22.8; >; > 16:17:05.844 INFO HaplotypeCaller - HTSJDK Defaults.COMPRESSION_LEVEL : 2; >; > 16:17:05.844 INFO HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; >; > 16:17:05.844 INFO HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; >; > 16:17:05.844 INFO HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; >; > 16:17:05.844 INFO HaplotypeCaller - Deflater: JdkDeflater; >; > 16:17:05.844 INFO HaplotypeCaller - Inflater: JdkInflater; >; > 16:17:05.844 INFO HaplotypeCaller - GCS max retries/reopens: 20; >; > 16:17:05.844 INFO HaplotypeCaller - Requester pays: disabled; >; > 16:17:05.845 INFO HaplotypeCaller - Initializing engine; >; > 16:17:05.928 WARN IntelDeflaterFactory - IntelInflater is not supported, using Java.util.zip.Inflater; >; > 16:17:05.932 WARN IntelDeflaterFactory - IntelInflater is not supported, using Java.util.zip.Inflater; >; > 16:17:06.503 INFO FeatureManager - Using codec VCFCodec to read file file:///home/robert/test/snps.vcf; >; > 16:17:06.539 INFO IntervalArgumentCollection - Processing 61464 bp from intervals; >; > 16:17:06.551 INFO HaplotypeCaller - Done initializing engine; >; > 16:17:06.573 INFO HaplotypeCallerEngine - Disabling physical phasing, which is supported only for reference-model confidence output; >; > 16:17:06.588 INFO NativeLibraryLoader - Loading libgkl_utils.so from jar:file:/home/robert/gatk-4.1.8.1/gatk-package-4.1.8.1-local.jar!/com/intel/gkl/native/libgkl_utils.so; >; > 16:17:06.589 **WARN** NativeLibraryLoader - Unable to load libgkl_utils.so from native/libgkl_utils.so (/tmp/libgkl_utils347167544598047196.so: /tmp/libgkl_utils347167544598047196.so: cannot open shared object file: No such file or directory (Possible cause: can't load AMD 64-bit .so on a Power PC 64 LE-bit platform)); >; > 16:17:06.589 **WARN** IntelPairHmm - Intel GKL Utils not loaded; >; > 16:17:06.589 INFO PairHMM - OpenMP multi-threaded AVX-accelerated native Pair",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6794#issuecomment-687344600:4632,test,test,4632,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6794#issuecomment-687344600,1,['test'],['test']
Testability," --help false --version false --showHidden false --USE_JDK_DEFLATER false --USE_JDK_INFLATER false; Jun 22, 2020 5:06:37 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; [Mon Jun 22 17:06:37 CDT 2020] Executing as xxxxxxx@yyyyyy on Linux 3.10.0-693.11.1.el7.x86_64 amd64; OpenJDK 64-Bit Server VM 1.8.0_152-release-1056-b12; Deflater: Intel; Inflater: Intel; Provider GCS is available; Picard version: Version:4.1.7.0; [Mon Jun 22 17:06:37 CDT 2020] picard.vcf.MergeVcfs done. Elapsed time: 0.00 minutes.; Runtime.totalMemory()=1249378304; To get help, see http://broadinstitute.github.io/picard/index.html#GettingHelp; htsjdk.samtools.SAMException: Cannot read non-existent file: file:///data/infectious/schistosome/tmp/test%20a/data/calling/erc_prod2.SM_V7_1.vcf.gz; at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:498); at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:485); at picard.vcf.MergeVcfs.doWork(MergeVcfs.java:173); at picard.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:305); at org.broadinstitute.hellbender.cmdline.PicardCommandLineProgramExecutor.instanceMain(PicardCommandLineProgramExecutor.java:25); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:163); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:206); at org.broadinstitute.hellbender.Main.main(Main.java:292); ```. ## Cases when the error does not occur; * If I rename `test a` folder in `test-a` as previously said.; * If I copy my current `test a` in the `/tmp/` directory (`/tmp/test a/`). This may suggest that the path length plays a role.; * If I renamed the VCF files (first VCF becomes `a.vcf.gz`, second `b.vcf.gz`) (`gatk MergeVcfs -I data/calling/a.vcf.gz -I data/calling/b.vcf.gz -O out.vcf.gz`).; * If I rename the first VCF file with as many `a` character as characters found in the original filename. (aaaaaaa",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6664#issuecomment-647808241:6582,assert,assertFileIsReadable,6582,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6664#issuecomment-647808241,1,['assert'],['assertFileIsReadable']
Testability, -0.006% ; - Complexity 17740 17768 +28 ; ===============================================; Files 1159 1159 ; Lines 63951 64030 +79 ; Branches 9779 9798 +19 ; ===============================================; + Hits 50825 50884 +59 ; - Misses 9214 9233 +19 ; - Partials 3912 3913 +1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `62.602% <0%> (-15.176%)` | `32 <0> (ø)` | |; | [...rg/broadinstitute/hellbender/tools/PrintReads.java](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9QcmludFJlYWRzLmphdmE=) | `87.5% <100%> (ø)` | `4 <1> (ø)` | :arrow_down: |; | [...itute/hellbender/utils/test/SamAssertionUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1NhbUFzc2VydGlvblV0aWxzLmphdmE=) | `75.281% <100%> (ø)` | `40 <1> (ø)` | :arrow_down: |; | [...rg/broadinstitute/hellbender/utils/io/IOUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pby9JT1V0aWxzLmphdmE=) | `59.686% <100%> (+0.212%)` | `49 <1> (+1)` | :arrow_up: |; | [...roadinstitute/hellbender/utils/read/ReadUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL1JlYWRVdGlscy5qYXZh) | `81.592% <77.778%> (-0.112%)` | `191 <7> (+2)` | |; | [...org/broadinstitute/hellbender/engine/GATKTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVs,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332013111:1496,test,test,1496,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332013111,1,['test'],['test']
Testability," -ls /gatk4; Found 2 items; -rw-r--r-- 3 hdfs supergroup 62934 2017-10-11 13:38 /gatk4/output.bam; drwxr-xr-x - hdfs supergroup 0 2017-10-11 14:19 /gatk4/output_2.bam.parts. **The spark-submit:**. bash-4.2$ spark-submit; Usage: spark-submit [options] <app jar | python file> [app arguments]; Usage: spark-submit --kill [submission ID] --master [spark://...]; Usage: spark-submit --status [submission ID] --master [spark://...]. Options:; --master MASTER_URL spark://host:port, mesos://host:port, yarn, or local.; --deploy-mode DEPLOY_MODE Whether to launch the driver program locally (""client"") or; on one of the worker machines inside the cluster (""cluster""); (Default: client).; --class CLASS_NAME Your application's main class (for Java / Scala apps).; --name NAME A name of your application.; --jars JARS Comma-separated list of local jars to include on the driver; and executor classpaths.; ....... **the spark-shell**; bash-4.2$ spark-shell; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel).; Failed to created SparkJLineReader: java.io.IOException: Permission denied; Falling back to SimpleReader.; Welcome to; ____ __; / __/__ ___ _____/ /__; _\ \/ _ \/ _ `/ __/ '_/; /___/ .__/\_,_/_/ /_/\_\ version 1.6.0; /_/. Using Scala version 2.10.5 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_91); Type in expressions to have them evaluated.; Type :help for more information.; Spark context available as sc (master = yarn-client, app id = application_1507683879816_0007).; Wed Oct 11 14:25:24 CST 2017 Thread[main,5,main] java.io.FileNotFoundException: derby.log (Permission denied); ----------------------------------------------------------------; Wed Oct 11 14:25:24 CST 2017:; Booting Derby version The Apache Software Foundation - Apache Derby - 10.11.1.1 - (1616546): instance a816c00e-015f-0a1b-f1bd-00002ce33928 ; on database directory /tmp/spark-98953d35-8594-4907-b4a5-0870f1d17b3e/metastore with class loader sun.misc.Launcher$AppClassLoader@5c64",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-335696240:1037,log,logging,1037,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-335696240,1,['log'],['logging']
Testability, 0 java.util.stream.ReferencePipeline.collect; 0.4% 64 + 0 htsjdk.samtools.util.BlockCompressedInputStream.read; 0.4% 56 + 2 org.apache.spark.util.collection.TimSort$SortState.mergeHi; 0.3% 47 + 0 org.broadinstitute.hellbender.utils.read.markduplicates.OpticalDuplicateFinder.getRapidDefaultReadNameRegexSplit; 0.3% 46 + 0 htsjdk.samtools.BinaryTagCodec.readSingleValue; 0.3% 42 + 0 org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSink$$Lambda$109.call; 0.3% 40 + 0 scala.collection.Iterator$$anon$11.hasNext; 0.3% 39 + 0 scala.collection.Iterator$$anon$11.next; 0.3% 39 + 0 org.apache.spark.util.collection.AppendOnlyMap.growTable; 0.2% 32 + 1 htsjdk.samtools.BinaryCigarCodec.decode; 0.2% 0 + 33 com.esotericsoftware.kryo.io.Output.flush; 0.2% 26 + 0 htsjdk.samtools.DefaultSAMRecordFactory.createBAMRecord; 0.2% 26 + 0 htsjdk.samtools.BinaryCigarCodec.encode; 0.1% 21 + 0 htsjdk.samtools.SAMBinaryTagAndValue.remove; 25.5% 3799 + 84 Total compiled (including elided). Stub + native Method ; 23.3% 0 + 3554 java.util.zip.Deflater.deflateBytes; 20.8% 0 + 3164 java.lang.System.identityHashCode; 14.6% 0 + 2219 java.lang.String.intern; 4.5% 0 + 679 java.util.zip.Inflater.inflateBytes; 2.8% 0 + 426 java.io.FileOutputStream.writeBytes; 2.1% 0 + 318 java.net.SocketInputStream.socketRead0; 1.7% 0 + 266 sun.nio.ch.EPollArrayWrapper.epollWait; 0.7% 0 + 99 sun.nio.ch.NativeThread.current; 0.6% 0 + 96 java.util.zip.Deflater.reset; 0.6% 0 + 88 java.util.zip.Inflater.reset; 0.4% 0 + 58 org.apache.hadoop.util.NativeCrc32.nativeComputeChunkedSumsByteArray; 0.3% 0 + 47 java.io.FileInputStream.readBytes; 0.3% 0 + 41 sun.nio.ch.FileDispatcherImpl.read0; 0.2% 0 + 26 java.lang.Throwable.fillInStackTrace; 0.1% 0 + 19 java.io.UnixFileSystem.getLength; 0.1% 0 + 13 java.lang.Object.getClass; 0.1% 0 + 12 java.lang.Object.hashCode; 0.1% 11 + 0 java.lang.ClassLoader.defineClass1; 0.1% 3 + 7 java.lang.Class.forName0; 0.1% 0 + 9 sun.nio.ch.FileDispatcherImpl.size0; 0.1% 0 + 9 java.util.zip.Zip,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1702#issuecomment-210127581:4119,Stub,Stub,4119,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1702#issuecomment-210127581,1,['Stub'],['Stub']
Testability," 0.0 failed 4 times, most recent failure: Lost task 0.3 in stage 0.0 (TID 3, xx.xx.xx.xx, executor 0): java.lang.IllegalStateException: unread block data; at java.io.ObjectInputStream$BlockDataInputStream.setBlockDataMode(ObjectInputStream.java:2740); at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1567); at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2245); at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2169); at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2027); at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1535); at java.io.ObjectInputStream.readObject(ObjectInputStream.java:422); at org.apache.spark.serializer.JavaDeserializationStream.readObject(JavaSerializer.scala:75); at org.apache.spark.serializer.JavaSerializerInstance.deserialize(JavaSerializer.scala:114); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:309); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:748). Driver stacktrace:; 18/04/24 14:34:27 INFO DAGScheduler: Job 0 failed: first at ReadsSparkSource.java:221, took 4.816635 s; ```; Our system is an HPC, where all the nodes share the same file system. I run my SPARK on only one node to test the software. I red elesewhere that this might be aproblem of missing jars, so I tried to inlcude these libraries in the SPARK jar folder and added the option:; `; --conf [--jars=""~/bin/spark-2.2.0-bin-hadoop2.7/jars/hbase-client-1.4.3.jar, ~/bin/spark-2.2.0-bin-hadoop2.7/jars/hbase-common-1.4.3.jar, ~/bin/spark-2.2.0-bin-hadoop2.7/jars/hbase-hadoop2-compat-1.4.3.jar, ~/bin/spark-2.2.0-bin-hadoop2.7/jars/hive-hbase-handler-1.2.1.spark2.jar"" ]`. But I still get the error. Is GATK using hbase? If yes shall some jars be included to a local SPARK system to enable it to run GATK tools? Thank you!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4694#issuecomment-383916494:2338,test,test,2338,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4694#issuecomment-383916494,1,['test'],['test']
Testability," 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://emeryj-testing/CarrotData/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://emeryj-testing/CarrotData/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCalling.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCalling.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCalling.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkComparison.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkComparison.referenceVersion"": ""HG38"",; ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049160705:1697,Benchmark,BenchmarkComparison,1697,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049160705,2,['Benchmark'],['BenchmarkComparison']
Testability, 145236 144960 -276 ; Branches 16096 16061 -35 ; ===============================================; - Hits 126480 126189 -291 ; - Misses 12903 12928 +25 ; + Partials 5853 5843 -10; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3065?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...aplotypecaller/HaplotypeCallerIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3065/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9IYXBsb3R5cGVDYWxsZXJJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `88.262% <100%> (+0.027%)` | `84 <0> (ø)` | :arrow_down: |; | [...te/hellbender/utils/pileup/ReadPileupUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3065/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9waWxldXAvUmVhZFBpbGV1cFVuaXRUZXN0LmphdmE=) | `96.352% <100%> (ø)` | `77 <0> (ø)` | :arrow_down: |; | [...ellbender/testutils/SamAssertionUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3065/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90ZXN0dXRpbHMvU2FtQXNzZXJ0aW9uVXRpbHNVbml0VGVzdC5qYXZh) | `89.744% <100%> (+0.855%)` | `12 <1> (+1)` | :arrow_up: |; | [...ender/utils/haplotype/HaplotypeBAMDestination.java](https://codecov.io/gh/broadinstitute/gatk/pull/3065/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9oYXBsb3R5cGUvSGFwbG90eXBlQkFNRGVzdGluYXRpb24uamF2YQ==) | `100% <100%> (ø)` | `4 <0> (ø)` | :arrow_down: |; | [...er/utils/haplotype/HaplotypeBAMWriterUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3065/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9oYXBsb3R5cGUvSGFwbG90eXBlQkFNV3JpdGVyVW5pdFRlc3QuamF2YQ==) | `89.076% <100%> (ø)` | `23 <0> (ø)` | :arrow_down: |; | [...ute/hellbender/utils/read/ArtificialReadUtils.java](https://codecov.io/gh/broadinstitut,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3065#issuecomment-328703783:1598,test,testutils,1598,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3065#issuecomment-328703783,1,['test'],['testutils']
Testability," 19:59:31.084286796 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""e296eb66-95b2-428a-a31e-3118047b197d"",; ""test_id"": ""15973a95-055a-4540-9590-ce40f34411f5"",; ""name"": ""GATK HaplotypeCaller vs Nightly Test_run_2022-02-23 19:59:31.084286796 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://emeryj-testing/CarrotData/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://emeryj-testing/CarrotData/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://emeryj-testing/CarrotData/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCalling.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCalling.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""te",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049160705:1085,test,testing,1085,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049160705,1,['test'],['testing']
Testability," 254, AlnModType.NONE);; final AlignmentInterval region3 = new AlignmentInterval(new SimpleInterval(""20"", 1, 413), 613, 1025, TextCigarCodec.decode(""612H413M""), true, 60, 0, 413, AlnModType.NONE);. final AlignedContig alignedContig = new AlignedContig(""asm00001:tig0001"", contigSequence, Arrays.asList(region0, region1, region2, region3), false);. final List<ChimericAlignment> assembledBreakpointsFromAlignmentIntervals = ChimericAlignment.parseOneContig(alignedContig, SVDiscoveryTestDataProvider.seqDict, true, StructuralVariationDiscoveryArgumentCollection.DiscoverVariantsFromContigsAlignmentsSparkArgumentCollection.DEFAULT_MIN_ALIGNMENT_LENGTH, StructuralVariationDiscoveryArgumentCollection.DiscoverVariantsFromContigsAlignmentsSparkArgumentCollection.CHIMERIC_ALIGNMENTS_HIGHMQ_THRESHOLD, true);. Assert.assertEquals(assembledBreakpointsFromAlignmentIntervals.size(), 1);; final ChimericAlignment chimericAlignment = assembledBreakpointsFromAlignmentIntervals.get(0);; Assert.assertEquals(chimericAlignment.sourceContigName, ""asm00001:tig0001"");; final NovelAdjacencyReferenceLocations breakpoints = new NovelAdjacencyReferenceLocations(chimericAlignment, contigSequence, SVDiscoveryTestDataProvider.seqDict);; }; ```. In versions of the code prior to #3752 (I think) this set of alignments was being filtered out by the method `isNotSimpleTranslocation` in the `parseOneContig` method of `ChimericAlignment`. Now that check's logic has changed and `isLikelySimpleTranslocation` returns false instead of true and so this alignment is not being filtered out any more. . When it gets to `NovelAdjacencyReferenceLocations.TanDupBreakpointsInference()` both `upstreamBreakpointRefPos` and `downstreamBreakpointRefPos` are being set to zero. It's not immediately clear to me how to fix this. A few thoughts:. - Are we supposed to be processing this `ChimericAlignment` through the main code path right now? ; - Why do we subtract 1 from the start position of the `rightReferenceInterval.getStart()",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3874#issuecomment-347627504:2811,assert,assertEquals,2811,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3874#issuecomment-347627504,1,['assert'],['assertEquals']
Testability," 29, 2019 12:50:23 AM EDT] org.broadinstitute.hellbender.tools.copynumber.GermlineCNVCaller done. Elapsed time: 0.72 minutes.; Runtime.totalMemory()=2335703040; org.broadinstitute.hellbender.utils.python.PythonScriptExecutorException: ; python exited with 1; Command Line: python /data/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/cohort_denoising_calling.7177495255490777642.py --ploidy_calls_path=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/1-Contig-Ploidy/14.Contig_Ploidy_Dir/ploidy-calls --output_calls_path=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-calls --output_tracking_path=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-tracking --modeling_interval_list=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/intervals8729903857029540703.tsv --output_model_path=/gpfs/gsfs7/users/sangj2/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-model --enable_explicit_gc_bias_modeling=True --read_count_tsv_files /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-07410307475890858352.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-12290301678667639499.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-21824691337189197401.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-31776045115104931009.tsv --psi_s_scale=1.000000e-04 --mapping_error_rate=1.000000e-02 --depth_correction_tau=1.000000e+04 --q",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547440019:8385,Test,Test-,8385,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547440019,1,['Test'],['Test-']
Testability," 75500 15742.8; 09:54:04.928 INFO ProgressMeter - 1:23419224 5.0 81370 16387.6; 09:54:15.956 INFO ProgressMeter - 1:23812728 5.1 82750 16070.6; 09:54:31.008 INFO ProgressMeter - 1:24023237 5.4 83470 15457.4; 09:54:33.610 INFO PairHMM - Total compute time in PairHMM computeLogLikelihoods() : 58.921665822; 09:54:33.611 INFO SmithWatermanAligner - Total compute time in java Smith-Waterman : 72.92 sec; 09:54:33.612 INFO Mutect2 - Shutting down engine; [March 7, 2019 9:54:33 AM EST] org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2 done. Elapsed time: 5.51 minutes.; Runtime.totalMemory()=193003520; java.lang.IllegalArgumentException: readMaxLength must be > 0 but got 0; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:730); 	at org.broadinstitute.hellbender.utils.pairhmm.PairHMM.initialize(PairHMM.java:152); 	at org.broadinstitute.hellbender.utils.pairhmm.N2MemoryPairHMM.initialize(N2MemoryPairHMM.java:28); 	at org.broadinstitute.hellbender.utils.pairhmm.LoglessPairHMM.initialize(LoglessPairHMM.java:7); 	at org.broadinstitute.hellbender.utils.pairhmm.PairHMM.initialize(PairHMM.java:177); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.initializePairHMM(PairHMMLikelihoodCalculationEngine.java:242); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.computeReadLikelihoods(PairHMMLikelihoodCalculationEngine.java:177); 	at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2Engine.callRegion(Mutect2Engine.java:229); 	at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2.apply(Mutect2.java:232); 	at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.processReadShard(AssemblyRegionWalker.java:291); 	at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:267); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:966); 	at org.broadinstitute.hellbender.cmdline.CommandLineProg",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5543#issuecomment-470579844:5018,Log,LoglessPairHMM,5018,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5543#issuecomment-470579844,1,['Log'],['LoglessPairHMM']
Testability, <0%> (+7%)` | |; | [...s/spark/sv/discovery/SvDiscoveryInputMetaData.java](https://codecov.io/gh/broadinstitute/gatk/pull/4801/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvU3ZEaXNjb3ZlcnlJbnB1dE1ldGFEYXRhLmphdmE=) | `100% <0%> (ø)` | `9% <0%> (+7%)` | :arrow_up: |; | [.../utils/read/markduplicates/DuplicationMetrics.java](https://codecov.io/gh/broadinstitute/gatk/pull/4801/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL0R1cGxpY2F0aW9uTWV0cmljcy5qYXZh) | `85.366% <0%> (ø)` | `13% <0%> (?)` | |; | [...covery/inference/CpxVariantReInterpreterSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4801/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvaW5mZXJlbmNlL0NweFZhcmlhbnRSZUludGVycHJldGVyU3BhcmsuamF2YQ==) | `100% <0%> (ø)` | `5% <0%> (?)` | |; | [...ils/test/testers/AbstractMarkDuplicatesTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/4801/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L3Rlc3RlcnMvQWJzdHJhY3RNYXJrRHVwbGljYXRlc1Rlc3Rlci5qYXZh) | `79.487% <0%> (ø)` | `17% <0%> (?)` | |; | [...nce/SegmentedCpxVariantSimpleVariantExtractor.java](https://codecov.io/gh/broadinstitute/gatk/pull/4801/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvaW5mZXJlbmNlL1NlZ21lbnRlZENweFZhcmlhbnRTaW1wbGVWYXJpYW50RXh0cmFjdG9yLmphdmE=) | `93.96% <0%> (ø)` | `71% <0%> (?)` | |; | [.../sv/StructuralVariationDiscoveryPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4801/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9TdHJ1Y3R1cmFsVmFyaWF0aW9uRGlzY292ZXJ5UGlwZWxpbmVTcGFyay5qYXZh) | `88.652% <0%> (+0.081%)` | `13% <0%> (ø)` | :arrow_down: |; | [...iscoverFromLocalAssemblyConti,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4801#issuecomment-393173847:2849,test,test,2849,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4801#issuecomment-393173847,2,['test'],"['test', 'testers']"
Testability," A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068171 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068172 . G *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068173 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068174 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068175 . T <NON_REF> . . . GT:DP:GQ:MIN_DP:PL ./.:20:17:20:0,17,729; ```. When the original GVCF is imported into GenomicsDB and then extracted:. ```; ./gatk GenomicsDBImport -R src/test/resources/large/human_g1k_v37.20.21.fasta -L 20 -V src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk4.g.vcf -genomicsdb-workspace-path spanDelWorkspace; ./gatk SelectVariants -V gendb://spanDelWorkspace -R src/test/resources/large/human_g1k_v37.20.21.fasta -O test.g.vcf -L 20; ```. It contains the following records in this region:. ```; 20 10068158 . GTGTATATATATA G,<NON_REF> . . BaseQRankSum=-6.520e-01;ClippingRankSum=0.00;DP=29;ExcessHet=3.01;MQRankSum=0.328;RAW_MQ=93364.00;ReadPosRankSum=-2.530e-0; 1 GT:AD:DP:GQ:PL:SB ./.:3,4,0:7:57:104,0,57,114,69,183:0,3,2,2; 20 10068159 . T *,<NON_REF> . . DP=29 GT:AD:DP:GQ:PL:SB ./.:3,4,0:7:57:104,0,57,114,69,183:0,3,2,2; 20 10068160 . GTATATATATATGTA G,*,<NON_REF> . . DP=28;ExcessHet=3.01;RAW_MQ=87005.00 GT:AD:DP:GQ:PL:SB ./.:0,2,4,0:6:53:735,162,131,102,0,53,507,174,108,472:0,0,; 2,4; 20 10068161 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,472:0,0,2,4; 20 10068162 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,472:0,0,2,4; 20 10068163 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,472:0,0,2,4; 20 10068164 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,472:0,0,2,4; 20 ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-403519172:3507,test,test,3507,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-403519172,1,['test'],['test']
Testability, Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | cloud | 11 | [2935907552.11](https://github.com/broadinstitute/gatk/runs/8042744893?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.11/tests/test/index.html) |; | cloud | 8 | [2935907552.10](https://github.com/broadinstitute/gatk/runs/8042744743?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.10/tests/test/index.html) |; | unit | 11 | [2935907552.13](https://github.com/broadinstitute/gatk/runs/8042745129?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.13/tests/test/index.html) |; | integration | 11 | [2935907552.12](https://github.com/broadinstitute/gatk/runs/8042744999?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.12/tests/test/index.html) |; | conda | 8 | [2935907552.3](https://github.com/broadinstitute/gatk/runs/8043019512?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.3/tests/test/index.html) |; | unit | 8 | [2935907552.1](https://github.com/broadinstitute/gatk/runs/8043019322?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.1/tests/test/index.html) |; | variantcalling | 8 | [2935907552.2](https://github.com/broadinstitute/gatk/runs/8043019429?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.2/tests/test/index.html) |; | integration | 8 | [2935907552.0](https://github.com/broadinstitute/gatk/runs/8043019196?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.0/tests/test/index.html) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1228829876:1169,test,tests,1169,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1228829876,18,"['log', 'test']","['logs', 'test', 'test-logs', 'tests']"
Testability, Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | cloud | 11 | [3002176541.11](https://github.com/broadinstitute/gatk/runs/8212856906?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.11/tests/test/index.html) |; | cloud | 8 | [3002176541.10](https://github.com/broadinstitute/gatk/runs/8212856796?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.10/tests/test/index.html) |; | unit | 11 | [3002176541.13](https://github.com/broadinstitute/gatk/runs/8212857102?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.13/tests/test/index.html) |; | integration | 11 | [3002176541.12](https://github.com/broadinstitute/gatk/runs/8212857016?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.12/tests/test/index.html) |; | unit | 8 | [3002176541.1](https://github.com/broadinstitute/gatk/runs/8213287905?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.1/tests/test/index.html) |; | integration | 8 | [3002176541.0](https://github.com/broadinstitute/gatk/runs/8213287794?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.0/tests/test/index.html) |; | variantcalling | 8 | [3002176541.2](https://github.com/broadinstitute/gatk/runs/8213288012?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.2/tests/test/index.html) |; | conda | 8 | [3002176541.3](https://github.com/broadinstitute/gatk/runs/8213288138?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.3/tests/test/index.html) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1238473387:1169,test,tests,1169,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1238473387,18,"['log', 'test']","['logs', 'test', 'test-logs', 'tests']"
Testability, Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | cloud | 8 | [3092731818.10](https://github.com/broadinstitute/gatk/actions/runs/3092731818/jobs/5004333411) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092731818.10/tests/test/index.html) |; | cloud | 11 | [3092731818.11](https://github.com/broadinstitute/gatk/actions/runs/3092731818/jobs/5004333541) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092731818.11/tests/test/index.html) |; | unit | 11 | [3092731818.13](https://github.com/broadinstitute/gatk/actions/runs/3092731818/jobs/5004333748) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092731818.13/tests/test/index.html) |; | integration | 11 | [3092731818.12](https://github.com/broadinstitute/gatk/actions/runs/3092731818/jobs/5004333644) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092731818.12/tests/test/index.html) |; | conda | 8 | [3092731818.3](https://github.com/broadinstitute/gatk/actions/runs/3092731818/jobs/5004627834) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092731818.3/tests/test/index.html) |; | unit | 8 | [3092731818.1](https://github.com/broadinstitute/gatk/actions/runs/3092731818/jobs/5004627636) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092731818.1/tests/test/index.html) |; | integration | 8 | [3092731818.0](https://github.com/broadinstitute/gatk/actions/runs/3092731818/jobs/5004627523) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092731818.0/tests/test/index.html) |; | variantcalling | 8 | [3092731818.2](https://github.com/broadinstitute/gatk/actions/runs/3092731818/jobs/5004627749) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092731818.2/tests/test/index.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1252803679:1124,test,test-logs,1124,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1252803679,1,['test'],['test-logs']
Testability, Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | cloud | 8 | [3092905417.10](https://github.com/broadinstitute/gatk/actions/runs/3092905417/jobs/5004691605) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092905417.10/tests/test/index.html) |; | cloud | 11 | [3092905417.11](https://github.com/broadinstitute/gatk/actions/runs/3092905417/jobs/5004691712) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092905417.11/tests/test/index.html) |; | unit | 11 | [3092905417.13](https://github.com/broadinstitute/gatk/actions/runs/3092905417/jobs/5004691976) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092905417.13/tests/test/index.html) |; | integration | 11 | [3092905417.12](https://github.com/broadinstitute/gatk/actions/runs/3092905417/jobs/5004691810) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092905417.12/tests/test/index.html) |; | unit | 8 | [3092905417.1](https://github.com/broadinstitute/gatk/actions/runs/3092905417/jobs/5004926160) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092905417.1/tests/test/index.html) |; | conda | 8 | [3092905417.3](https://github.com/broadinstitute/gatk/actions/runs/3092905417/jobs/5004926443) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092905417.3/tests/test/index.html) |; | variantcalling | 8 | [3092905417.2](https://github.com/broadinstitute/gatk/actions/runs/3092905417/jobs/5004926310) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092905417.2/tests/test/index.html) |; | integration | 8 | [3092905417.0](https://github.com/broadinstitute/gatk/actions/runs/3092905417/jobs/5004926053) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092905417.0/tests/test/index.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1252832367:1124,test,test-logs,1124,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1252832367,1,['test'],['test-logs']
Testability, Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | cloud | 8 | [3291375153.10](https://github.com/broadinstitute/gatk/actions/runs/3291375153/jobs/5425447220) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3291375153.10/tests/test/index.html) |; | cloud | 11 | [3291375153.11](https://github.com/broadinstitute/gatk/actions/runs/3291375153/jobs/5425447314) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3291375153.11/tests/test/index.html) |; | unit | 11 | [3291375153.13](https://github.com/broadinstitute/gatk/actions/runs/3291375153/jobs/5425447526) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3291375153.13/tests/test/index.html) |; | integration | 11 | [3291375153.12](https://github.com/broadinstitute/gatk/actions/runs/3291375153/jobs/5425447422) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3291375153.12/tests/test/index.html) |; | unit | 8 | [3291375153.1](https://github.com/broadinstitute/gatk/actions/runs/3291375153/jobs/5425749385) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3291375153.1/tests/test/index.html) |; | conda | 8 | [3291375153.3](https://github.com/broadinstitute/gatk/actions/runs/3291375153/jobs/5425749598) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3291375153.3/tests/test/index.html) |; | variantcalling | 8 | [3291375153.2](https://github.com/broadinstitute/gatk/actions/runs/3291375153/jobs/5425749495) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3291375153.2/tests/test/index.html) |; | integration | 8 | [3291375153.0](https://github.com/broadinstitute/gatk/actions/runs/3291375153/jobs/5425749244) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3291375153.0/tests/test/index.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1285871268:1124,test,test-logs,1124,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1285871268,1,['test'],['test-logs']
Testability, Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | cloud | 8 | [3300316784.10](https://github.com/broadinstitute/gatk/actions/runs/3300316784/jobs/5444679663) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300316784.10/tests/test/index.html) |; | cloud | 11 | [3300316784.11](https://github.com/broadinstitute/gatk/actions/runs/3300316784/jobs/5444679780) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300316784.11/tests/test/index.html) |; | unit | 11 | [3300316784.13](https://github.com/broadinstitute/gatk/actions/runs/3300316784/jobs/5444679952) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300316784.13/tests/test/index.html) |; | integration | 11 | [3300316784.12](https://github.com/broadinstitute/gatk/actions/runs/3300316784/jobs/5444679868) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300316784.12/tests/test/index.html) |; | conda | 8 | [3300316784.3](https://github.com/broadinstitute/gatk/actions/runs/3300316784/jobs/5444871971) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300316784.3/tests/test/index.html) |; | unit | 8 | [3300316784.1](https://github.com/broadinstitute/gatk/actions/runs/3300316784/jobs/5444871800) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300316784.1/tests/test/index.html) |; | variantcalling | 8 | [3300316784.2](https://github.com/broadinstitute/gatk/actions/runs/3300316784/jobs/5444871887) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300316784.2/tests/test/index.html) |; | integration | 8 | [3300316784.0](https://github.com/broadinstitute/gatk/actions/runs/3300316784/jobs/5444871682) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300316784.0/tests/test/index.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1287429116:1124,test,test-logs,1124,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1287429116,1,['test'],['test-logs']
Testability," INFO storage.BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy; 17/10/13 18:11:42 INFO storage.BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 10.131.101.159, 44818, None); 17/10/13 18:11:42 INFO storage.BlockManagerMasterEndpoint: Registering block manager 10.131.101.159:44818 with 366.3 MB RAM, BlockManagerId(driver, 10.131.101.159, 44818, None); 17/10/13 18:11:42 INFO storage.BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 10.131.101.159, 44818, None); 17/10/13 18:11:42 INFO storage.BlockManager: external shuffle service port = 7337; 17/10/13 18:11:42 INFO storage.BlockManager: Initialized BlockManager: BlockManagerId(driver, 10.131.101.159, 44818, None); 17/10/13 18:11:42 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@544300a6{/metrics/json,null,AVAILABLE,@Spark}; 17/10/13 18:11:42 INFO scheduler.EventLoggingListener: Logging events to hdfs://mg:8020/user/spark/spark2ApplicationHistory/application_1507856833944_0003; 17/10/13 18:11:42 INFO util.Utils: Using initial executors = 0, max of spark.dynamicAllocation.initialExecutors, spark.dynamicAllocation.minExecutors and spark.executor.instances; 17/10/13 18:11:43 INFO cluster.YarnClientSchedulerBackend: SchedulerBackend is ready for scheduling beginning after reached minRegisteredResourcesRatio: 0.8; 17/10/13 18:11:43 INFO memory.MemoryStore: Block broadcast_0 stored as values in memory (estimated size 286.0 KB, free 366.0 MB); 17/10/13 18:11:44 INFO memory.MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 26.0 KB, free 366.0 MB); 17/10/13 18:11:44 INFO storage.BlockManagerInfo: Added broadcast_0_piece0 in memory on 10.131.101.159:44818 (size: 26.0 KB, free: 366.3 MB); 17/10/13 18:11:44 INFO spark.SparkContext: Created broadcast 0 from newAPIHadoopFile at ReadsSparkSource.java:112; 17/10/13 18:11:44 INFO memory.MemoryStore: Block broadcast_1 stored as values in memory (estim",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-336412775:14496,Log,Logging,14496,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-336412775,1,['Log'],['Logging']
Testability," Sharded (3 runs): 19m33.310s, 13m36.466s, (died from out-of-memory error); > ; > Not sure what's going on here, but something about this configuration is; > favorable to Broadcast and unfavorable to Sharded. We should try to; > understand what and why.; > ; > Below are the commands I used to run each implementation on dataflow01,; > for reference:; > ; > spark-submit \; > --master yarn-client \; > --driver-memory 8G \; > --num-executors 16 \; > --executor-cores 4 \; > --executor-memory 16G \; > --conf spark.driver.maxResultSize=0 \; > --conf spark.driver.userClassPathFirst=true \; > --conf spark.executor.userClassPathFirst=true \; > --conf spark.io.compression.codec=lzf \; > --conf spark.yarn.executor.memoryOverhead=600 \; > $JAR BaseRecalibratorSpark \; > --input hdfs:///user/droazen/bqsr/CEUTrio.HiSeq.WGS.b37.NA12878.1m-130m.bam \; > --output bqsr_out_${1}.bam \; > -R hdfs:///user/droazen/bqsr/human_g1k_v37.2bit \; > --knownSites hdfs:///user/droazen/bqsr/dbsnp_138.b37.1m-130m.vcf \; > --joinStrategy BROADCAST \; > --apiKey $API_KEY \; > --sparkMaster yarn-client; > ; > spark-submit \; > --master yarn-client \; > --driver-memory 8G \; > --num-executors 16 \; > --executor-cores 4 \; > --executor-memory 16G \; > --conf spark.driver.maxResultSize=0 \; > --conf spark.driver.userClassPathFirst=true \; > --conf spark.executor.userClassPathFirst=true \; > --conf spark.io.compression.codec=lzf \; > --conf spark.yarn.executor.memoryOverhead=600 \; > --conf spark.akka.frameSize=1024 \; > $JAR BaseRecalibratorSparkOptimized \; > --input gs://droazen-testing/spark/CEUTrio.HiSeq.WGS.b37.NA12878.1m-130m.bam \; > --output bqsr_out_${1}.bam \; > -R hdfs:///user/droazen/bqsr/human_g1k_v37.fasta \; > --knownSites /local/dev/droazen/new_test/dbsnp_138.b37.1m-130m.vcf \; > -L 1:1-130000000 \; > --apiKey $API_KEY \; > --sparkMaster yarn-client; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/broadinstitute/gatk/issues/995#issuecomment-157825077; > .",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/995#issuecomment-157838734:3534,test,testing,3534,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/995#issuecomment-157838734,1,['test'],['testing']
Testability," T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068168 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068169 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068170 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068171 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068172 . G *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068173 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068174 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068175 . T <NON_REF> . . . GT:DP:GQ:MIN_DP:PL ./.:20:17:20:0,17,729; ```. When the original GVCF is imported into GenomicsDB and then extracted:. ```; ./gatk GenomicsDBImport -R src/test/resources/large/human_g1k_v37.20.21.fasta -L 20 -V src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk4.g.vcf -genomicsdb-workspace-path spanDelWorkspace; ./gatk SelectVariants -V gendb://spanDelWorkspace -R src/test/resources/large/human_g1k_v37.20.21.fasta -O test.g.vcf -L 20; ```. It contains the following records in this region:. ```; 20 10068158 . GTGTATATATATA G,<NON_REF> . . BaseQRankSum=-6.520e-01;ClippingRankSum=0.00;DP=29;ExcessHet=3.01;MQRankSum=0.328;RAW_MQ=93364.00;ReadPosRankSum=-2.530e-0; 1 GT:AD:DP:GQ:PL:SB ./.:3,4,0:7:57:104,0,57,114,69,183:0,3,2,2; 20 10068159 . T *,<NON_REF> . . DP=29 GT:AD:DP:GQ:PL:SB ./.:3,4,0:7:57:104,0,57,114,69,183:0,3,2,2; 20 10068160 . GTATATATATATGTA G,*,<NON_REF> . . DP=28;ExcessHet=3.01;RAW_MQ=87005.00 GT:AD:DP:GQ:PL:SB ./.:0,2,4,0:6:53:735,162,131,102,0,53,507,174,108,472:0,0,; 2,4; 20 10068161 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,472:0,0,2,4; 20 1006",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-403519172:3194,test,test,3194,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-403519172,1,['test'],['test']
Testability," VCF for the input (since this has both non-AS and AS annotations; EDIT: Scratch that, it only has AS_InbreedingCoeff and AS_QD), 2) the Omni SNP training/truth VCF (yielding ~3.5k training), and 3) the Mills training/truth VCF (yielding ~500 training). Incidentally, VariantRecalibrator SNP and INDEL runs both fail to converge on these small training sets without the #7709 fix, but do converge with it. I still need to check if enough multiallelics are included here; if not, I'll choose a different snippet. EDITEDIT: Now using gs://broad-gotc-test-storage/joint_genotyping/exome/scientific/truth/master/gather_vcfs_high_memory/small_callset_low_threshold.vcf.gz provided by @ldgauthier, which does have AS annotations.; ; We'll use expected outputs here as inputs to downstream steps, but rather than provide the expected outputs directly, we'll create copies of them and provide those as inputs. This will make the tests better encapsulated. However, it should be relatively easy to update the whole chain of test files, should one choose to do so. EDIT: Let's just provide the expected outputs directly. So it'll be even easier to update the whole chain---just set the flags for all three tools to overwrite the expected results.; ; We test the Cartesian product of the following options: 1) non-allele-specific vs. allele-specific, 2) SNP vs. indel vs. both, and 3) positive vs. positive-unlabeled. Downstream, we'll further subset to a subset of these options, since training/scoring functionality shouldn't really change across some of them.; ; I'm currently just using call outs to system commands to diff and h5diff the VCFs and HDF5s, respectively. I think the latter command should be available in the GATK Conda environment. This will be a bit awkward, in the sense that the tests for this tool will require the Conda environment, but the tool itself will not. But I think this is probably preferable to writing test code to compare HDF5s, minimal though that might be, since the schema",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948059:1985,test,test,1985,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948059,1,['test'],['test']
Testability, [...titute/hellbender/engine/TwoPassVariantWalker.java](https://codecov.io/gh/broadinstitute/gatk/pull/4744/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvVHdvUGFzc1ZhcmlhbnRXYWxrZXIuamF2YQ==) | `95% <95%> (ø)` | `4 <4> (?)` | |; | [...ery/inference/SimpleNovelAdjacencyInterpreter.java](https://codecov.io/gh/broadinstitute/gatk/pull/4744/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvaW5mZXJlbmNlL1NpbXBsZU5vdmVsQWRqYWNlbmN5SW50ZXJwcmV0ZXIuamF2YQ==) | `80.435% <0%> (-19.565%)` | `15% <0%> (+8%)` | |; | [.../DiscoverVariantsFromContigAlignmentsSAMSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4744/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvRGlzY292ZXJWYXJpYW50c0Zyb21Db250aWdBbGlnbm1lbnRzU0FNU3BhcmsuamF2YQ==) | `88.889% <0%> (-4.659%)` | `49% <0%> (+27%)` | |; | [...ellbender/utils/test/CommandLineProgramTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/4744/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0NvbW1hbmRMaW5lUHJvZ3JhbVRlc3Rlci5qYXZh) | `91.667% <0%> (-3.571%)` | `11% <0%> (+2%)` | |; | [...r/utils/read/markduplicates/sparkrecords/Pair.java](https://codecov.io/gh/broadinstitute/gatk/pull/4744/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9QYWlyLmphdmE=) | `93.893% <0%> (-1.612%)` | `44% <0%> (+22%)` | |; | [...iscoverFromLocalAssemblyContigAlignmentsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4744/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvU3ZEaXNjb3ZlckZyb21Mb2NhbEFzc2VtYmx5Q29udGlnQWxpZ25tZW50c1NwYXJrLmphdmE=) | `76.048% <0%> (-0.474%)` | `5% <0%> (ø)` | |; | [...lbender/tools/spark/sv/discovery/SimpleSVType.java](https://c,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4744#issuecomment-387807462:2236,test,test,2236,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4744#issuecomment-387807462,1,['test'],['test']
Testability, [29990.6](https://travis-ci.com/broadinstitute/gatk/jobs/317870153) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.6/tests/test/index.html) |; | integration | oraclejdk8 | [29990.12](https://travis-ci.com/broadinstitute/gatk/jobs/317870159) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.12/tests/test/index.html) |; | python | openjdk8 | [29990.5](https://travis-ci.com/broadinstitute/gatk/jobs/317870152) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.5/tests/test/index.html) |; | cloud | openjdk8 | [29990.1](https://travis-ci.com/broadinstitute/gatk/jobs/317870147) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.1/tests/test/index.html) |; | cloud | openjdk11 | [29990.15](https://travis-ci.com/broadinstitute/gatk/jobs/317870162) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.15/tests/test/index.html) |; | integration | openjdk11 | [29990.13](https://travis-ci.com/broadinstitute/gatk/jobs/317870160) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.13/tests/test/index.html) |; | integration | openjdk8 | [29990.2](https://travis-ci.com/broadinstitute/gatk/jobs/317870149) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.2/tests/test/index.html) |; | unit | openjdk11 | [29990.14](https://travis-ci.com/broadinstitute/gatk/jobs/317870161) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.14/tests/test/index.html) |; | variantcalling | openjdk8 | [29990.4](https://travis-ci.com/broadinstitute/gatk/jobs/317870151) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.4/tests/test/index.html) |; | unit | openjdk8 | [29990.3](https://travis-ci.com/broadinstitute/gatk/jobs/317870150) | [logs](https://storage.googleapis.com/hellben,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611720629:1225,test,tests,1225,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611720629,2,['test'],"['test', 'tests']"
Testability, [36015.3](https://app.travis-ci.com/broadinstitute/gatk/jobs/537327040) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36015.3/tests/test/index.html) |; | unit | openjdk11 | [36015.13](https://app.travis-ci.com/broadinstitute/gatk/jobs/537327050) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36015.13/tests/test/index.html) |; | unit | openjdk8 | [36015.3](https://app.travis-ci.com/broadinstitute/gatk/jobs/537327040) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36015.3/tests/test/index.html) |; | unit | openjdk11 | [36015.13](https://app.travis-ci.com/broadinstitute/gatk/jobs/537327050) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36015.13/tests/test/index.html) |; | unit | openjdk8 | [36015.3](https://app.travis-ci.com/broadinstitute/gatk/jobs/537327040) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36015.3/tests/test/index.html) |; | unit | openjdk11 | [36015.13](https://app.travis-ci.com/broadinstitute/gatk/jobs/537327050) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36015.13/tests/test/index.html) |; | unit | openjdk11 | [36015.13](https://app.travis-ci.com/broadinstitute/gatk/jobs/537327050) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36015.13/tests/test/index.html) |; | unit | openjdk8 | [36015.3](https://app.travis-ci.com/broadinstitute/gatk/jobs/537327040) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36015.3/tests/test/index.html) |; | unit | openjdk11 | [36015.13](https://app.travis-ci.com/broadinstitute/gatk/jobs/537327050) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36015.13/tests/test/index.html) |; | unit | openjdk8 | [36015.3](https://app.travis-ci.com/broadinstitute/gatk/jo,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7467#issuecomment-919216110:1442,test,test-logs,1442,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7467#issuecomment-919216110,1,['test'],['test-logs']
Testability," [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ],; ""gatk_docker"": ""image_build:gatk|4fa4b23a1b3756080aba2f1eecd791380b3921a6""; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_output:FunctionalEquivalenceTest.out_dataset"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcfs"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcf_indices"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcf",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135:4573,benchmark,benchmarking,4573,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135,2,['benchmark'],['benchmarking']
Testability," [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ],; ""gatk_docker"": ""image_build:gatk|5cdd2eaebb27509947cde3dbd26ee9a3fce72352""; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_output:FunctionalEquivalenceTest.out_dataset"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcfs"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcf_indices"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcf",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659:4573,benchmark,benchmarking,4573,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659,2,['benchmark'],['benchmarking']
Testability," [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ]; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_output:FunctionalEquivalenceTest.out_dataset"",; ""GatkDragenConcordanceEvaluation.docker_placeholder"": ""image_build:gatk|5cdd2eaebb27509947cde3dbd26ee9a3fce72352"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcfs"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcf_indices"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf"": ""test_output",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440:4676,benchmark,benchmarking,4676,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440,2,['benchmark'],['benchmarking']
Testability, `18% <0%> (+3%)` | |; | [...ender/engine/datasources/ReferenceMultiSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlTXVsdGlTb3VyY2UuamF2YQ==) | `76.471% <0%> (-0.452%)` | `15% <0%> (+4%)` | |; | [...lbender/utils/read/SAMRecordToGATKReadAdapter.java](https://codecov.io/gh/broadinstitute/gatk/pull/4292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL1NBTVJlY29yZFRvR0FUS1JlYWRBZGFwdGVyLmphdmE=) | `92.027% <0%> (-0.433%)` | `270% <0%> (+134%)` | |; | [...ute/hellbender/utils/read/ArtificialReadUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL0FydGlmaWNpYWxSZWFkVXRpbHMuamF2YQ==) | `93.909% <0%> (-0.186%)` | `122% <0%> (+52%)` | |; | [...itute/hellbender/engine/spark/GATKRegistrator.java](https://codecov.io/gh/broadinstitute/gatk/pull/4292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvR0FUS1JlZ2lzdHJhdG9yLmphdmE=) | `100% <0%> (ø)` | `4% <0%> (+2%)` | :arrow_up: |; | [...utils/test/ReadsPreprocessingPipelineTestData.java](https://codecov.io/gh/broadinstitute/gatk/pull/4292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1JlYWRzUHJlcHJvY2Vzc2luZ1BpcGVsaW5lVGVzdERhdGEuamF2YQ==) | `1.25% <0%> (+0.403%)` | `1% <0%> (ø)` | :arrow_down: |; | [...tructuralVariationDiscoveryArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/4292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9TdHJ1Y3R1cmFsVmFyaWF0aW9uRGlzY292ZXJ5QXJndW1lbnRDb2xsZWN0aW9uLmphdmE=) | `97.143% <0%> (+0.476%)` | `0% <0%> (ø)` | :arrow_down: |; | ... and [15 more](https://codecov.io/gh/broadinstitute/gatk/pull/4292/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4292#issuecomment-361359755:3366,test,test,3366,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4292#issuecomment-361359755,1,['test'],['test']
Testability, `43 <0> (+8)` | :arrow_up: |; | [...itute/hellbender/tools/spark/pathseq/PSScorer.java](https://codecov.io/gh/broadinstitute/gatk/pull/3409?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9wYXRoc2VxL1BTU2NvcmVyLmphdmE=) | `89.595% <0%> (+0.578%)` | `54% <0%> (+1%)` | :arrow_up: |; | [.../exome/pulldown/BayesianHetPulldownCalculator.java](https://codecov.io/gh/broadinstitute/gatk/pull/3409?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leG9tZS9wdWxsZG93bi9CYXllc2lhbkhldFB1bGxkb3duQ2FsY3VsYXRvci5qYXZh) | `86.624% <0%> (+0.637%)` | `35% <0%> (+1%)` | :arrow_up: |; | [...er/tools/picard/analysis/CollectGcBiasMetrics.java](https://codecov.io/gh/broadinstitute/gatk/pull/3409?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9waWNhcmQvYW5hbHlzaXMvQ29sbGVjdEdjQmlhc01ldHJpY3MuamF2YQ==) | `0.794% <0%> (+0.794%)` | `1% <0%> (+1%)` | :arrow_up: |; | [...utils/test/ReadsPreprocessingPipelineTestData.java](https://codecov.io/gh/broadinstitute/gatk/pull/3409?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1JlYWRzUHJlcHJvY2Vzc2luZ1BpcGVsaW5lVGVzdERhdGEuamF2YQ==) | `0.847% <0%> (+0.847%)` | `1% <0%> (+1%)` | :arrow_up: |; | [...spark/sv/evidence/FindBreakpointEvidenceSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3409?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9ldmlkZW5jZS9GaW5kQnJlYWtwb2ludEV2aWRlbmNlU3BhcmsuamF2YQ==) | `67.347% <0%> (+1.02%)` | `34% <0%> (+1%)` | :arrow_up: |; | [...ute/hellbender/utils/test/IntegrationTestSpec.java](https://codecov.io/gh/broadinstitute/gatk/pull/3409?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0ludGVncmF0aW9uVGVzdFNwZWMuamF2YQ==) | `73.118% <0%> (+1.075%)` | `25% <0%> (ø)` | :arrow_down: |; | [...e/conversion/allelicbalancecaller/CNLOHCaller.java](https://codecov.io/g,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3409#issuecomment-320273200:2205,test,test,2205,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3409#issuecomment-320273200,1,['test'],['test']
Testability," `AssemblyContigAlignmentsConfigPicker`; ; ----------; ## Consolidate logic, bump test coverage and update how variants are represented. ### consolidate logic; When initially prototyped, there's redundancy in logic for simple variants, now it's time to consolidate. - [x] `AssemblyContigWithFineTunedAlignments`; - [x] `hasIncompletePicture()`. - [x] `AssemblyContigAlignmentSignatureClassifier`; - [x] Don't make so many splits; - [x] Reduce `RawTypes` into fewer cases; ; - [x] `ChimericAlignment`; - [x] update documentation; - [x] implement a `getCoordinateSortedRefSpans()`, and use in `BreakpointsInference`; - [x] `isNeitherSimpleTranslocationNorIncompletePicture()`; - [x] `extractSimpleChimera()`. ### bump test coverage; Once code above is consolidated, bump test coverage, particularly for the classes above and the following poorly-covered classes; - [x] `ChimericAlignment`; - [x] `isForwardStrandRepresentation()`; - [x] `splitPairStrongEnoughEvidenceForCA()` ; - [x] `parseOneContig()` (needs testing because we need it for simple-re-interpretation for CPX variants) Note that `nextAlignmentMayBeInsertion()` is currently broken in the sense that when using this to filter out alignments whose ref span is contained by another, check if the two alignments involved are head/tail. - [x] `BreakpointsInference` & `BreakpointComplications`. - [x] `NovelAdjacencyAndAltHaplotype`; - [x] `toSimpleOrBNDTypes()`. - [x] `SimpleNovelAdjacencyAndChimericAlignmentEvidence`; - [x] serialization test. - [x] `AnnotatedVariantProducer`; - [x] `produceAnnotatedBNDmatesVcFromNovelAdjacency()`. - [x] `BreakEndVariantType`. - [ ] `SvDiscoverFromLocalAssemblyContigAlignmentsSpark` integration test; . ### update how variants are represented ; Implement the following representation changes that should make type-based evaluation easier; - [x] change `INSDUP` to`INS` when the duplicated ref region, denoted with annotation `DUP_REPEAT_UNIT_REF_SPAN`, is shorter than 50 bp.; - [x] change scarred del",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4111#issuecomment-375438021:1217,test,test,1217,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4111#issuecomment-375438021,3,['test'],"['test', 'testing']"
Testability," ```; org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.testWithAllAnnotations FAILED; java.lang.AssertionError: Iterators differ at element [9]: FORMAT=<ID=PL,Number=G,Type=Integer,Description=""Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification""> != FORMAT=<ID=NUMT,Number=1,Type=String,Description=""Potentially a polymorphic NuMT false positive rather than a real mitochondrial variant.""> expected [FORMAT=<ID=PL,Number=G,Type=Integer,Description=""Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification"">] but found [FORMAT=<ID=NUMT,Number=1,Type=String,Description=""Potentially a polymorphic NuMT false positive rather than a real mitochondrial variant."">]; at org.testng.Assert.fail(Assert.java:93); at org.testng.Assert.failNotEquals(Assert.java:512); at org.testng.Assert.assertEqualsImpl(Assert.java:134); at org.testng.Assert.assertEquals(Assert.java:610); at org.testng.Assert.assertEquals(Assert.java:578); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.assertHeadersMatch(VariantAnnotatorIntegrationTest.java:66); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.runVariantAnnotatorAndAssertSomething(VariantAnnotatorIntegrationTest.java:92); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.assertVariantContextsMatch(VariantAnnotatorIntegrationTest.java:55); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.assertVariantContextsMatch(VariantAnnotatorIntegrationTest.java:49); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.testWithAllAnnotations(VariantAnnotatorIntegrationTest.java:224); Exception in thread ""Thread-5"" java.nio.file.ClosedFileSystemException; 	at com.google.common.jimfs.FileSystemState.checkOpen(FileSystemState.java:64); 	at com.google.common.jimfs.JimfsFile",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5842#issuecomment-477769414:1028,assert,assertEquals,1028,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5842#issuecomment-477769414,2,"['Assert', 'assert']","['Assert', 'assertEquals']"
Testability," acls disabled; users with view permissions: Set(hdfs); groups with view permissions: Set(); users with modify permissions: Set(hdfs); groups with modify permissions: Set(); 17/10/13 18:11:34 INFO util.Utils: Successfully started service 'sparkDriver' on port 45754.; 17/10/13 18:11:34 INFO spark.SparkEnv: Registering MapOutputTracker; 17/10/13 18:11:34 INFO spark.SparkEnv: Registering BlockManagerMaster; 17/10/13 18:11:34 INFO storage.BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information; 17/10/13 18:11:34 INFO storage.BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up; 17/10/13 18:11:34 INFO storage.DiskBlockManager: Created local directory at /tmp/hdfs/blockmgr-ea0e0669-2981-4277-80a0-a67eddf1001d; 17/10/13 18:11:34 INFO memory.MemoryStore: MemoryStore started with capacity 366.3 MB; 17/10/13 18:11:34 INFO spark.SparkEnv: Registering OutputCommitCoordinator; 17/10/13 18:11:34 INFO util.log: Logging initialized @3816ms; 17/10/13 18:11:34 INFO server.Server: jetty-9.3.z-SNAPSHOT; 17/10/13 18:11:34 INFO server.Server: Started @3902ms; 17/10/13 18:11:34 INFO server.AbstractConnector: Started ServerConnector@131ba51c{HTTP/1.1,[http/1.1]}{0.0.0.0:4040}; 17/10/13 18:11:34 INFO util.Utils: Successfully started service 'SparkUI' on port 4040.; 17/10/13 18:11:34 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@710ae6a7{/jobs,null,AVAILABLE,@Spark}; 17/10/13 18:11:34 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@7b211077{/jobs/json,null,AVAILABLE,@Spark}; 17/10/13 18:11:34 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@62b0bf85{/jobs/job,null,AVAILABLE,@Spark}; 17/10/13 18:11:34 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6f07d414{/jobs/job/json,null,AVAILABLE,@Spark}; 17/10/13 18:11:34 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@40faff12{/stages,null,AVAILABLE,@Spark}; 17/10/13 18:11:34 INFO handler.Conte",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-336412775:5295,log,log,5295,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-336412775,2,"['Log', 'log']","['Logging', 'log']"
Testability," after smoothing iteration: 311; 09:48:33.672 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:48:34.470 INFO GibbsSampler - Starting MCMC sampling.; 09:48:36.720 INFO GibbsSampler - 25 of 100 samples generated.; 09:48:39.070 INFO GibbsSampler - 50 of 100 samples generated.; 09:48:41.417 INFO GibbsSampler - 75 of 100 samples generated.; 09:48:43.749 INFO GibbsSampler - 100 of 100 samples generated.; 09:48:43.749 INFO GibbsSampler - MCMC sampling complete.; 09:48:43.749 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:48:43.771 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:48:44.116 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599214.649782...; 09:48:44.116 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.041049, outlierProbability=0.031143}; 09:48:44.424 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599203.367762...; 09:48:44.424 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.036778, outlierProbability=0.037218}; 09:48:44.714 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599201.638390...; 09:48:44.714 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149830, biasVariance=0.034706, outlierProbability=0.039510}; 09:48:44.991 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599201.210843...; 09:48:44.991 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147681, biasVariance=0.033671, outlierProbability=0.039510}; 09:48:45.104 INFO GibbsSampler - Starting MCMC sampling.; 09:48:51.555 INFO GibbsSampler - 25 of 100 samples generated.; 09:48:58.171 INFO GibbsSampler - 50 of 100 samples generated.; 09:49:05.022 INFO GibbsSampler - 75 of 100 samples generated.; 09:49:11.512 INFO GibbsSampler - 100 of 100 samples g",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:16612,log,log,16612,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," after smoothing iteration: 311; 09:49:11.543 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:49:12.363 INFO GibbsSampler - Starting MCMC sampling.; 09:49:14.885 INFO GibbsSampler - 25 of 100 samples generated.; 09:49:17.255 INFO GibbsSampler - 50 of 100 samples generated.; 09:49:19.604 INFO GibbsSampler - 75 of 100 samples generated.; 09:49:21.938 INFO GibbsSampler - 100 of 100 samples generated.; 09:49:21.939 INFO GibbsSampler - MCMC sampling complete.; 09:49:21.939 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:49:21.958 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:49:22.312 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599214.649782...; 09:49:22.312 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.041049, outlierProbability=0.031143}; 09:49:22.622 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599203.367762...; 09:49:22.622 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.036778, outlierProbability=0.037218}; 09:49:22.933 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599201.638390...; 09:49:22.933 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149830, biasVariance=0.034706, outlierProbability=0.039510}; 09:49:23.216 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599201.210843...; 09:49:23.216 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147681, biasVariance=0.033671, outlierProbability=0.039510}; 09:49:23.323 INFO GibbsSampler - Starting MCMC sampling.; 09:49:29.603 INFO GibbsSampler - 25 of 100 samples generated.; 09:49:36.116 INFO GibbsSampler - 50 of 100 samples generated.; 09:49:42.766 INFO GibbsSampler - 75 of 100 samples generated.; 09:49:49.322 INFO GibbsSampler - 100 of 100 samples g",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:18911,log,log,18911,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," after smoothing iteration: 315; 09:47:56.025 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:47:56.852 INFO GibbsSampler - Starting MCMC sampling.; 09:47:59.368 INFO GibbsSampler - 25 of 100 samples generated.; 09:48:01.836 INFO GibbsSampler - 50 of 100 samples generated.; 09:48:04.204 INFO GibbsSampler - 75 of 100 samples generated.; 09:48:06.588 INFO GibbsSampler - 100 of 100 samples generated.; 09:48:06.588 INFO GibbsSampler - MCMC sampling complete.; 09:48:06.589 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:48:06.609 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:48:06.967 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599214.667518...; 09:48:06.967 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152065, biasVariance=0.041090, outlierProbability=0.031116}; 09:48:07.271 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599203.280111...; 09:48:07.271 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152065, biasVariance=0.036781, outlierProbability=0.037210}; 09:48:07.582 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599201.550266...; 09:48:07.582 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149834, biasVariance=0.034708, outlierProbability=0.039514}; 09:48:07.846 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599201.121676...; 09:48:07.846 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147684, biasVariance=0.033674, outlierProbability=0.039514}; 09:48:07.961 INFO GibbsSampler - Starting MCMC sampling.; 09:48:14.260 INFO GibbsSampler - 25 of 100 samples generated.; 09:48:20.656 INFO GibbsSampler - 50 of 100 samples generated.; 09:48:27.049 INFO GibbsSampler - 75 of 100 samples generated.; 09:48:33.639 INFO GibbsSampler - 100 of 100 samples g",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:14313,log,log,14313,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," after smoothing iteration: 320; 09:47:17.942 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:47:18.756 INFO GibbsSampler - Starting MCMC sampling.; 09:47:21.195 INFO GibbsSampler - 25 of 100 samples generated.; 09:47:23.597 INFO GibbsSampler - 50 of 100 samples generated.; 09:47:26.031 INFO GibbsSampler - 75 of 100 samples generated.; 09:47:28.533 INFO GibbsSampler - 100 of 100 samples generated.; 09:47:28.533 INFO GibbsSampler - MCMC sampling complete.; 09:47:28.533 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:47:28.553 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:47:28.883 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599193.821455...; 09:47:28.884 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151686, biasVariance=0.041615, outlierProbability=0.031024}; 09:47:29.188 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599181.471228...; 09:47:29.188 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151686, biasVariance=0.036547, outlierProbability=0.036766}; 09:47:29.513 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599179.528974...; 09:47:29.514 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149492, biasVariance=0.034434, outlierProbability=0.039341}; 09:47:29.794 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599179.050215...; 09:47:29.794 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147343, biasVariance=0.033400, outlierProbability=0.039341}; 09:47:29.914 INFO GibbsSampler - Starting MCMC sampling.; 09:47:36.149 INFO GibbsSampler - 25 of 100 samples generated.; 09:47:42.958 INFO GibbsSampler - 50 of 100 samples generated.; 09:47:49.518 INFO GibbsSampler - 75 of 100 samples generated.; 09:47:55.984 INFO GibbsSampler - 100 of 100 samples g",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:12014,log,log,12014,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," after smoothing iteration: 326; 09:46:39.764 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:46:40.559 INFO GibbsSampler - Starting MCMC sampling.; 09:46:42.928 INFO GibbsSampler - 25 of 100 samples generated.; 09:46:45.335 INFO GibbsSampler - 50 of 100 samples generated.; 09:46:47.720 INFO GibbsSampler - 75 of 100 samples generated.; 09:46:50.130 INFO GibbsSampler - 100 of 100 samples generated.; 09:46:50.130 INFO GibbsSampler - MCMC sampling complete.; 09:46:50.130 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:46:50.155 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:46:50.491 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599186.382799...; 09:46:50.491 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151674, biasVariance=0.041597, outlierProbability=0.031043}; 09:46:50.793 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599173.973431...; 09:46:50.793 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151674, biasVariance=0.036521, outlierProbability=0.036858}; 09:46:51.096 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599172.045766...; 09:46:51.096 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149513, biasVariance=0.034385, outlierProbability=0.039399}; 09:46:51.370 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599171.568776...; 09:46:51.370 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147363, biasVariance=0.033351, outlierProbability=0.039399}; 09:46:51.487 INFO GibbsSampler - Starting MCMC sampling.; 09:46:57.921 INFO GibbsSampler - 25 of 100 samples generated.; 09:47:04.479 INFO GibbsSampler - 50 of 100 samples generated.; 09:47:11.286 INFO GibbsSampler - 75 of 100 samples generated.; 09:47:17.895 INFO GibbsSampler - 100 of 100 samples g",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:9715,log,log,9715,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," after smoothing iteration: 341; 09:46:01.622 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:46:02.459 INFO GibbsSampler - Starting MCMC sampling.; 09:46:04.896 INFO GibbsSampler - 25 of 100 samples generated.; 09:46:07.292 INFO GibbsSampler - 50 of 100 samples generated.; 09:46:09.705 INFO GibbsSampler - 75 of 100 samples generated.; 09:46:12.179 INFO GibbsSampler - 100 of 100 samples generated.; 09:46:12.179 INFO GibbsSampler - MCMC sampling complete.; 09:46:12.179 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:46:12.202 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:46:12.546 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599161.730531...; 09:46:12.546 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151592, biasVariance=0.041338, outlierProbability=0.030947}; 09:46:12.859 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599150.005317...; 09:46:12.859 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151592, biasVariance=0.036533, outlierProbability=0.037484}; 09:46:13.165 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599148.402059...; 09:46:13.165 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149236, biasVariance=0.034264, outlierProbability=0.038997}; 09:46:13.451 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599147.957754...; 09:46:13.451 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147087, biasVariance=0.033230, outlierProbability=0.038997}; 09:46:13.573 INFO GibbsSampler - Starting MCMC sampling.; 09:46:19.986 INFO GibbsSampler - 25 of 100 samples generated.; 09:46:26.612 INFO GibbsSampler - 50 of 100 samples generated.; 09:46:33.274 INFO GibbsSampler - 75 of 100 samples generated.; 09:46:39.723 INFO GibbsSampler - 100 of 100 samples g",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:7416,log,log,7416,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," after smoothing iteration: 398; 09:40:44.924 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:40:45.760 INFO GibbsSampler - Starting MCMC sampling.; 09:40:48.121 INFO GibbsSampler - 25 of 100 samples generated.; 09:40:50.618 INFO GibbsSampler - 50 of 100 samples generated.; 09:40:53.062 INFO GibbsSampler - 75 of 100 samples generated.; 09:40:55.518 INFO GibbsSampler - 100 of 100 samples generated.; 09:40:55.518 INFO GibbsSampler - MCMC sampling complete.; 09:40:55.518 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:40:55.539 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:40:55.871 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599072.084975...; 09:40:55.871 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.150935, biasVariance=0.041480, outlierProbability=0.032502}; 09:40:56.161 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599060.773672...; 09:40:56.161 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.153086, biasVariance=0.035405, outlierProbability=0.036256}; 09:40:56.492 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599057.851664...; 09:40:56.492 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147247, biasVariance=0.033414, outlierProbability=0.038948}; 09:40:56.775 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599057.518701...; 09:40:56.775 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147247, biasVariance=0.032380, outlierProbability=0.038948}; 09:40:56.888 INFO GibbsSampler - Starting MCMC sampling.; 09:41:03.070 INFO GibbsSampler - 25 of 100 samples generated.; 09:41:09.768 INFO GibbsSampler - 50 of 100 samples generated.; 09:41:16.127 INFO GibbsSampler - 75 of 100 samples generated.; 09:41:22.748 INFO GibbsSampler - 100 of 100 samples g",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:2123,log,log,2123,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," after smoothing iteration: 398; 09:45:23.663 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:45:24.508 INFO GibbsSampler - Starting MCMC sampling.; 09:45:26.962 INFO GibbsSampler - 25 of 100 samples generated.; 09:45:29.471 INFO GibbsSampler - 50 of 100 samples generated.; 09:45:31.911 INFO GibbsSampler - 75 of 100 samples generated.; 09:45:34.335 INFO GibbsSampler - 100 of 100 samples generated.; 09:45:34.335 INFO GibbsSampler - MCMC sampling complete.; 09:45:34.335 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:45:34.359 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:45:34.724 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599072.084975...; 09:45:34.724 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.150935, biasVariance=0.041480, outlierProbability=0.032502}; 09:45:35.017 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599060.773672...; 09:45:35.018 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.153086, biasVariance=0.035405, outlierProbability=0.036256}; 09:45:35.337 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599057.851664...; 09:45:35.337 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147247, biasVariance=0.033414, outlierProbability=0.038948}; 09:45:35.631 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599057.518701...; 09:45:35.631 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147247, biasVariance=0.032380, outlierProbability=0.038948}; 09:45:35.748 INFO GibbsSampler - Starting MCMC sampling.; 09:45:41.926 INFO GibbsSampler - 25 of 100 samples generated.; 09:45:48.545 INFO GibbsSampler - 50 of 100 samples generated.; 09:45:54.915 INFO GibbsSampler - 75 of 100 samples generated.; 09:46:01.577 INFO GibbsSampler - 100 of 100 samples g",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:5117,log,log,5117,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," also removes by debugging code and comments. I think it is ready for a review. To some other questions you had above:. 1) The HashMap<FeatureInput<VariantContext>, HashMap<String, Collection<VariantContext>>> can be wrapped in a class with just a couple of methods, so we don't have to manifest that long type all over the place. I realize that's non-optimal, but this isnt anything I introduced here. I would really like to keep this PR as limited as we can, and address some larger refactoring in a different PR, once we've migrated to MultiVariantWalkerGroupedOnStart. 2) I know this PR still in an interim state, but passing the VariantWalker in as an argument to the comp methods doesn't seem like a step forward to me. If we can't solve that problem completely in this PR (which is fine, I'm all for trying to contain this), are those changes necessary ? Perhaps that part should just wait for the next round. As noted above, I'd like to propose this as iterative, with a second PR coming soon. I did this b/c it moved us toward not needing to pass around the walker. It minimizes the code that has access to the walker (as opposed to setting it after creating the instance of the Evaluator, etc. Yes, it exposes it for two methods, but those classes no longer hang on to it. I would like to ultimately remove this entirely. 3) To re-iterate testEvalTrackWithoutGenotypesWithSampleFields: the input file, noGenotypes.vcf, has a header dictionary with the full set of contigs, and a single variant from chr 1. Prior to this PR, the test executed and supplied b37_reference_20_21 as the reference FASTA. The variant in that VCF is from chr 1, not 20/21. The old code should have failed. It didnt, probably since it was preferentially taking the sequence dictionary from the VCF header and basically ignoring the FASTA. It didnt make much practical difference, but I believe my change here is right. I added the test case testEvalTrackWithoutGenotypesWithSampleFieldsWrongRef to cover that error.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-747619130:1862,test,testEvalTrackWithoutGenotypesWithSampleFields,1862,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-747619130,4,['test'],"['test', 'testEvalTrackWithoutGenotypesWithSampleFields', 'testEvalTrackWithoutGenotypesWithSampleFieldsWrongRef']"
Testability," and capturing/resolving these BND's that are not suitable for _THIS PARTICULAR_ logic. I guess in general my personal preference is to put less algorithm-related information in VCF for analysts (less reading for them), and produce add on files for tool developers. What's your thoughts?. > Does this even have to be a spark tool? It looks like you are just reading the variants into a parallel spark context, filtering, and then collecting them to actually process them. Why not just make this a non-spark tool and process it all in memory on one node?. Answer: Agree. It doesn't have to be, at least in theory, and it probably is going to be faster as we don't need to incur the Spark overhead for such a typically small job. But (I'm saying too many buts....) up to this point all SV tools are under the package `hellbender.tools.spark.sv`, so I'm following suit here. Note the two classes's main interface methods mentions nothing about RDDs (that's on purpose). ; On the other hand, this is an engineering question I believe, and it depends on whether we want to put as much of discovery code as possible into `StructuralVariationDiscoveryPipelineSpark` (the last commit actually hooks the two classes into it, so a single invocation of the tool produces more variants), or we go wdl in pipelining the whole process. -------. All in all, I think the comments and critics are generally about the ""filtering""/""classifying"" part, and the most serious concern about it is false negatives. Am I understanding correctly? If so, given that the filtering step is only picking the BND's that are suitable to the linking logic, I can imagine the false negative problem be solved in the future by other logics (e.g. more relaxed requirement on pair matching, or not even requiring matching INV55/INV33 pairs, etc.) In fact, that's what I'm planning on.; Another part of the problem is how much I can accomplish in this single PR, and how large it should be&mdash;the forever existing problem for new tools.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4789#issuecomment-406483929:6856,log,logic,6856,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4789#issuecomment-406483929,2,['log'],"['logic', 'logics']"
Testability," are fairly easy to fix or suppress. The exception is the Javadoc API [com.sun.javadoc](https://docs.oracle.com/en/java/javase/11/docs/api/jdk.javadoc/com/sun/javadoc/package-summary.html), which has been replaced by [jdk.javadoc.doclet](https://docs.oracle.com/en/java/javase/11/docs/api/jdk.javadoc/jdk/javadoc/doclet/package-summary.html). The javadoc tools in `org.broadinstitute.hellbender.utils.help` may need to be re-written (and it's not clear if it's possible to support Java 8 and Java 11 simultaneously).; * Travis build. Getting this to build and test on Java 11 in addition to the current builds may be fairly involved as the matrix is already quite complicated. (The current PR just changes Java 8 to Java 11 for testing purposes - we'd need a way of getting both to run.). The vast majority of tests are passing on Java 11, the following are failing:; * Missing `TwoBitRecord` (from ADAM); * `ReferenceMultiSparkSourceUnitTest`; * `ImpreciseVariantDetectorUnitTest`; * `SVVCFWriterUnitTest`; * `DiscoverVariantsFromContigAlignmentsSAMSparkIntegrationTest`; * `StructuralVariationDiscoveryPipelineSparkIntegrationTest`; * `SvDiscoverFromLocalAssemblyContigAlignmentsSparkIntegrationTest`; * `java.lang.NoSuchMethodError: java.nio.ByteBuffer.clear()Ljava/nio/ByteBuffer;`; * `SeekableByteChannelPrefetcherTest`; * `GatherVcfsCloudIntegrationTest`; * `Could not serialize lambda`; * `ExampleAssemblyRegionWalkerSparkIntegrationTest`; * `PileupSparkIntegrationTest`; * Native HMM library code caused the tests to crash on my Mac:; ```; Running Test: Test method testLikelihoodsFromHaplotypes[0](org.broadinstitute.hellbender.utils.pairhmm.VectorLoglessPairHMM@6282d367, true)(org.broadinstitute.hellbender.utils.pairhmm.VectorPairHMMUnitTest); dyld: lazy symbol binding failed: can't resolve symbol __ZN13shacc_pairhmm9calculateERNS_5BatchE in /private/var/folders/cj/wyp4zgw17vj4m9qdmddvmcc80000gn/T/libgkl_pairhmm13775554937319419112.dylib because dependent dylib #1 could not be loaded",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6119#issuecomment-527179359:1352,test,tests,1352,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6119#issuecomment-527179359,1,['test'],['tests']
Testability, args to java side; major update to germline WDLs; all optional python args exposed to WDLs as optional args. commit 50cb6fd08de15469a9080cbb27ff30c8b7ee7e21; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 13:50:45 2017 -0500. missing serialVersionUID. commit 5f0f31eab63b0e6f6105708ded7f86c96c830781; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 13:35:33 2017 -0500. annotated intervals kebab case; updated germline WDL workflows. commit 29cc6234dbfb8db12559217a650c6ceb170c5797; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 13:15:28 2017 -0500. cleanup test files. commit 08a35bb4e65eceb735adcd41a91132e9a34d2b66; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 02:50:19 2017 -0500. update WDL scripts. commit 12bcfa192ee6fa6da21239ebf5b513633efe974f; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 02:47:33 2017 -0500. significant updates to GermlineCNVCaller; integration tests for GermlineCNVCaller w/ sim data in both run modes. commit 151416a4af735ca721bd75e4b54a780c17ac9397; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 01:42:05 2017 -0500. hybrid ADVI abstract argument collection w/ flexible default values; hybrid ADVI argument collection for contig ploidy model; hybrid ADVI argument collection for germline denoising and calling model. commit 56e21bf955d3dc0c52aceb384f28cf6173959de0; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Wed Dec 6 23:18:39 2017 -0500. rewritten python-side coverage metadata table reader using pandas to fix the issues with comment line; change criterion for cohort/case based on whether a contig-ploidy model is provided or not; simulated test files for ploidy determination tool; proper integration test for ploidy determination tool and all edge cases; updated docs for ploidy determination tool. commit 7fa104b2e9170770cfc5b338835e41215d7fd39c; Author: Mehrtash Babadi <mehrtash@broadinstitut,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598:6934,test,tests,6934,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598,1,['test'],['tests']
Testability, build [29984](https://travis-ci.com/broadinstitute/gatk/builds/159673754); Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | R | openjdk8 | [29984.6](https://travis-ci.com/broadinstitute/gatk/jobs/317851324) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.6/tests/test/index.html) |; | python | openjdk8 | [29984.5](https://travis-ci.com/broadinstitute/gatk/jobs/317851323) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.5/tests/test/index.html) |; | integration | oraclejdk8 | [29984.12](https://travis-ci.com/broadinstitute/gatk/jobs/317851330) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.12/tests/test/index.html) |; | integration | openjdk11 | [29984.13](https://travis-ci.com/broadinstitute/gatk/jobs/317851331) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.13/tests/test/index.html) |; | cloud | openjdk8 | [29984.1](https://travis-ci.com/broadinstitute/gatk/jobs/317851319) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.1/tests/test/index.html) |; | cloud | openjdk11 | [29984.15](https://travis-ci.com/broadinstitute/gatk/jobs/317851333) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.15/tests/test/index.html) |; | unit | openjdk11 | [29984.14](https://travis-ci.com/broadinstitute/gatk/jobs/317851332) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.14/tests/test/index.html) |; | integration | openjdk8 | [29984.2](https://travis-ci.com/broadinstitute/gatk/jobs/317851320) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.2/tests/test/index.html) |; | variantcalling | openjdk8 | [29984.4](https://travis-ci.com/broadinstitute/gatk/jobs/317851322) | [logs](https://storage.googleapis.com/hellbender-t,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611695380:1026,test,tests,1026,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611695380,2,['test'],"['test', 'tests']"
Testability, build [29988](https://travis-ci.com/broadinstitute/gatk/builds/159678058); Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | R | openjdk8 | [29988.6](https://travis-ci.com/broadinstitute/gatk/jobs/317861684) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.6/tests/test/index.html) |; | integration | oraclejdk8 | [29988.12](https://travis-ci.com/broadinstitute/gatk/jobs/317861697) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.12/tests/test/index.html) |; | python | openjdk8 | [29988.5](https://travis-ci.com/broadinstitute/gatk/jobs/317861683) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.5/tests/test/index.html) |; | integration | openjdk11 | [29988.13](https://travis-ci.com/broadinstitute/gatk/jobs/317861698) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.13/tests/test/index.html) |; | cloud | openjdk11 | [29988.15](https://travis-ci.com/broadinstitute/gatk/jobs/317861700) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.15/tests/test/index.html) |; | cloud | openjdk8 | [29988.1](https://travis-ci.com/broadinstitute/gatk/jobs/317861676) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.1/tests/test/index.html) |; | unit | openjdk11 | [29988.14](https://travis-ci.com/broadinstitute/gatk/jobs/317861699) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.14/tests/test/index.html) |; | integration | openjdk8 | [29988.2](https://travis-ci.com/broadinstitute/gatk/jobs/317861680) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.2/tests/test/index.html) |; | variantcalling | openjdk8 | [29988.4](https://travis-ci.com/broadinstitute/gatk/jobs/317861682) | [logs](https://storage.googleapis.com/hellbender-t,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611710351:1026,test,tests,1026,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611710351,2,['test'],"['test', 'tests']"
Testability, build [29992](https://travis-ci.com/broadinstitute/gatk/builds/159687710); Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | R | openjdk8 | [29992.6](https://travis-ci.com/broadinstitute/gatk/jobs/317887706) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.6/tests/test/index.html) |; | python | openjdk8 | [29992.5](https://travis-ci.com/broadinstitute/gatk/jobs/317887705) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.5/tests/test/index.html) |; | integration | oraclejdk8 | [29992.12](https://travis-ci.com/broadinstitute/gatk/jobs/317887712) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.12/tests/test/index.html) |; | integration | openjdk11 | [29992.13](https://travis-ci.com/broadinstitute/gatk/jobs/317887713) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.13/tests/test/index.html) |; | cloud | openjdk8 | [29992.1](https://travis-ci.com/broadinstitute/gatk/jobs/317887701) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.1/tests/test/index.html) |; | cloud | openjdk11 | [29992.15](https://travis-ci.com/broadinstitute/gatk/jobs/317887715) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.15/tests/test/index.html) |; | integration | openjdk8 | [29992.2](https://travis-ci.com/broadinstitute/gatk/jobs/317887702) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.2/tests/test/index.html) |; | unit | openjdk11 | [29992.14](https://travis-ci.com/broadinstitute/gatk/jobs/317887714) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.14/tests/test/index.html) |; | variantcalling | openjdk8 | [29992.4](https://travis-ci.com/broadinstitute/gatk/jobs/317887704) | [logs](https://storage.googleapis.com/hellbender-t,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611733065:1026,test,tests,1026,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611733065,2,['test'],"['test', 'tests']"
Testability," changes for scaling density filter by coverage; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/StructuralVariationDiscoveryArgumentCollection.java; - replace calls to BreakpointDensityFilter with calls to BreakpointFilterFactory; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/FindBreakpointEvidenceSpark.java; - input coverage-scaled thresholds, convert to absolute internally. Allow thresholds to be double instead of int; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/BreakpointDensityFilter.java; - getter functions added to calculate properties for XGBoostEvidenceFilter. Also fromStringRep() and helper constructors added for testing; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/BreakpointEvidence.java; - updates to tests reflecting changes to these interfaces; src/test/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/BreakpointDensityFilterTest.java; src/test/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/FindBreakpointEvidenceSparkUnitTest.java; src/test/java/org/broadinstitute/hellbender/tools/spark/sv/integration/FindBreakpointEvidenceSparkIntegrationTest.java; src/test/java/org/broadinstitute/hellbender/tools/spark/sv/integration/SVIntegrationTestDataProvider.java. 4. Added code; - factory to call appropriate BreakpointEvidence filter; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/BreakpointFilterFactory.java; - simple helper class to hold feature vectors for classifier; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/EvidenceFeatures.java; - implement classifier-based BreakpointEvidence filter; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/XGBoostEvidenceFilter.java; - unit test for classifier filter; src/test/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/XGBoostEvidenceFilterUnitTest.java. 5. Added resources; - Genome tracts; src/main/resources/large/hg38_centromeres.txt.gz; src/main/re",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4769#issuecomment-389218477:1859,test,test,1859,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4769#issuecomment-389218477,1,['test'],['test']
Testability," did not modify the javadoc for any class in that package. The integration test runs `com.sun.tools.javadoc.Main.execute` and asserts that the output code is zero, which does not yield a useful error message. In order to produce something more meaningful I hacked the test to output the entire `stdout` and `stderr` as follows:. ```; final StringWriter out = new StringWriter();; final PrintWriter err = new PrintWriter(out);. final int result = com.sun.tools.javadoc.Main.execute(""program"", err, err, err, ""doclet"",docArgList.toArray(new String[] {}));; err.flush(); // probably not needed; String message = out.toString(); // message contains the entire stdout and stderr of the call to execute; Assert.assertEquals(result, 0, message);; ```. The output is about 2000 lines, but a lot of it is clearly innocuous. Removing lines such as; * `2022-08-16T00:09:07.2336106Z [parsing completed 1ms]`; * `2022-08-16T00:09:07.4456202Z [loading ZipFileIndexFileObject[/jars/gatk-package-4.2.6.1-56-gad9a538-SNAPSHOT-test.jar(org/broadinstitute/hellbender/tools/walkers/variantutils/ReblockGVCFIntegrationTest.class)]]`; * `2022-08-16T00:09:07.4459732Z [loading RegularFileObject[src/main/java/org/broadinstitute/hellbender/cmdline/argumentcollections/OptionalIntervalArgumentCollection.java]]`; * `2022-08-16T00:09:07.4462012Z [parsing started RegularFileObject[src/main/java/org/broadinstitute/hellbender/cmdline/argumentcollections/OptionalReferenceInputArgumentCollection.java]]`; * 2022-08-16T00:09:07.2322755Z [loading ZipFileObject[/gatk/gatk-package-unspecified-SNAPSHOT-local.jar(htsjdk/samtools/SAMSequenceDictionary.class)]]. brings it down to 353 lines, the majority of which look like . ```2022-08-16T00:09:07.4435974Z src/main/java/org/broadinstitute/hellbender/cmdline/CommandLineProgram.java:479: error: cannot find symbol; 2022-08-16T00:09:07.4436105Z @VisibleForTesting; ```. Here's that 353-line file:. [log-no-parsing-loading.txt](https://github.com/broadinstitute/gatk/files/9355026/log-",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217231488:1169,test,test,1169,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217231488,1,['test'],['test']
Testability," failed with:. ```; org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.testWithAllAnnotations FAILED; java.lang.AssertionError: Iterators differ at element [9]: FORMAT=<ID=PL,Number=G,Type=Integer,Description=""Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification""> != FORMAT=<ID=NUMT,Number=1,Type=String,Description=""Potentially a polymorphic NuMT false positive rather than a real mitochondrial variant.""> expected [FORMAT=<ID=PL,Number=G,Type=Integer,Description=""Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification"">] but found [FORMAT=<ID=NUMT,Number=1,Type=String,Description=""Potentially a polymorphic NuMT false positive rather than a real mitochondrial variant."">]; at org.testng.Assert.fail(Assert.java:93); at org.testng.Assert.failNotEquals(Assert.java:512); at org.testng.Assert.assertEqualsImpl(Assert.java:134); at org.testng.Assert.assertEquals(Assert.java:610); at org.testng.Assert.assertEquals(Assert.java:578); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.assertHeadersMatch(VariantAnnotatorIntegrationTest.java:66); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.runVariantAnnotatorAndAssertSomething(VariantAnnotatorIntegrationTest.java:92); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.assertVariantContextsMatch(VariantAnnotatorIntegrationTest.java:55); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.assertVariantContextsMatch(VariantAnnotatorIntegrationTest.java:49); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.testWithAllAnnotations(VariantAnnotatorIntegrationTest.java:224); Exception in thread ""Thread-5"" java.nio.file.ClosedFileSystemException; 	at com.google.common.jimfs.FileSystemState.checkOpen(FileSystemState.java:64); 	at com.google.common.ji",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5842#issuecomment-477769414:1021,Assert,Assert,1021,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5842#issuecomment-477769414,1,['Assert'],['Assert']
Testability, from build [36661](https://app.travis-ci.com/broadinstitute/gatk/builds/240874746); Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7539#issuecomment-955088400:1014,test,test-logs,1014,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7539#issuecomment-955088400,1,['test'],['test-logs']
Testability," inheritance structure). ------------; ### On the problem of having a confusing TODO for ; `boolean SimpleChimera.isCandidateInvertedDuplication()`. The todo message. > TODO: 5/5/18 Note that the use of the following predicate is currently obsoleted by; {@link AssemblyContigWithFineTunedAlignments#hasIncompletePictureFromTwoAlignments()}; because the contigs with this alignment signature is classified as ""incomplete"",; hence will NOT sent here for constructing SimpleChimera's.; But we may want to keep the code (and related code in BreakpointComplications) for future use. Comment by @cwhelan ; > I'm a bit confused by this comment: this method is still being called in several places, so how is it obsolete?. Reply by @SHUANG-Broad (also copied to update the ""TODO"" message; > this predicate is currently used in two places (excluding appearance in comments): `BreakpointComplications.IntraChrStrandSwitchBreakpointComplications`, where it is use to test if the input simple chimera indicates an inverse tandem duplication and trigger the logic for inferring duplicated region; and `BreakpointsInference.IntraChrStrandSwitchBreakpointInference`, where it is used for breakpoint inference. The problem is, the contig will not even be sent here, because `AssemblyContigWithFineTunedAlignments.hasIncompletePictureFromTwoAlignments()` defines a simple chimera that has strand switch and the two alignments overlaps on reference as ""incomplete"", so in practice the two uses are not going to be triggered. But when we come back later and see what can be extracted from such ""incomplete"" contigs, these code could be useful again. So it is kept. ------------; ### On the problem of writing out SAM records of ""Unknown"" contigs efficiently. First round comment by @cwhelan ; > This seems like a very inefficient way to write these three files. You end up calling collect on the RDD three different times and then traversing the local collection three times. Why not make a map of contig name to bam fil",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4663#issuecomment-387899030:2932,test,test,2932,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4663#issuecomment-387899030,2,"['log', 'test']","['logic', 'test']"
Testability, org.broadinstitute.hellbender.tools.HaplotypeCallerSparkIntegrationTest.testNonStrictVCFModeIsConsistentWithPastResults(HaplotypeCallerSparkIntegrationTest.java:110); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.inter,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:4422,Test,TestMethodWorker,4422,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['Test'],['TestMethodWorker']
Testability, org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33); 	at or,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:5198,Test,TestNG,5198,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['Test'],['TestNG']
Testability, org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:771); at org.testng.TestRunner.run(TestRunner.java:621); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199); at org.testng.TestNG.runSuitesLocally(TestNG.java:1124); at org.testng.TestNG.run(TestNG.java:1032); at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111); at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204); at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:125); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140); Caused by: com.google.cloud.dataflow.sdk.coders.CannotProvideCoderException: Cannot provide a Coder for type variable B because the actual type is unknown due to erasure.; at com.google.cloud.dataflow.sdk.coders.CoderRegistry.getDefaultCoder(CoderRegistry.java:545); at com.google.cloud.dataflow.sdk.coders.CoderRegistry.getDefaultCoder(CoderRegistry.java:516); at com.google.cloud.dataflow.sdk.coders.CoderRegistry.getDefaultCoder(CoderRegistry.java:165); at com.google.cloud.dataflow.sdk.transforms.ParDo$Bound.getDefaultOutputCoder(ParDo.java:741); at com.google.cloud.dataflo,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/658#issuecomment-122314248:5164,test,testng,5164,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/658#issuecomment-122314248,1,['test'],['testng']
Testability, org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33); 	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94); 	at com.sun.proxy.$Proxy5.stop(Unknown Source); 	at org.grad,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6652#issuecomment-672024253:3353,test,testng,3353,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6652#issuecomment-672024253,1,['test'],['testng']
Testability, package com.google.common.annotations does not exist; 2022-08-16T00:09:07.2841948Z src/main/java/org/broadinstitute/hellbender/cmdline/argumentcollections/IntervalArgumentCollection.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.2856913Z src/main/java/org/broadinstitute/hellbender/engine/ProgressMeter.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.2860245Z src/main/java/org/broadinstitute/hellbender/engine/filters/ReadFilter.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.2861934Z src/main/java/org/broadinstitute/hellbender/engine/filters/CountingReadFilter.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.3012792Z src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/ReblockGVCF.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.3151812Z src/main/java/org/broadinstitute/hellbender/utils/logging/OneShotLogger.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.3156616Z src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/HaplotypeCallerGenotypingEngine.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.3263061Z src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/GenotypingEngine.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.3605617Z src/main/java/org/broadinstitute/hellbender/utils/genotyper/AlleleLikelihoods.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.3694118Z src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/InfoFieldAnnotation.java:3: error: package com.google.common.collect does not exist; 2022-08-16T00:09:07.3740413Z src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/VariantAnnotation.java:3: error: package com.goog,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217242480:2704,log,logging,2704,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217242480,1,['log'],['logging']
Testability, package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6638787Z src/main/java/org/broadinstitute/hellbender/cmdline/argumentcollections/IntervalArgumentCollection.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6653787Z src/main/java/org/broadinstitute/hellbender/engine/ProgressMeter.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6657039Z src/main/java/org/broadinstitute/hellbender/engine/filters/ReadFilter.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6658760Z src/main/java/org/broadinstitute/hellbender/engine/filters/CountingReadFilter.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6739776Z src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/ReblockGVCF.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6889124Z src/main/java/org/broadinstitute/hellbender/utils/logging/OneShotLogger.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6895571Z src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/HaplotypeCallerGenotypingEngine.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6965286Z src/main/java/org/broadinstitute/hellbender/utils/dragstr/DragstrReferenceAnalyzer.java:87: error: unmappable character for encoding ASCII; 2022-08-16T22:45:53.6965863Z * Returns the STR period at a given position.??; 2022-08-16T22:45:53.6972650Z src/main/java/org/broadinstitute/hellbender/utils/dragstr/DragstrReferenceAnalyzer.java:87: error: unmappable character for encoding ASCII; 2022-08-16T22:45:53.6973221Z * Returns the STR period at a given position.??; 2022-08-16T22:45:53.6981573Z src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/GenotypingEngine.java:3: error: package com.google.common.annotations does not exist; 2022-08-16,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217253370:4357,log,logging,4357,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217253370,1,['log'],['logging']
Testability," pretty big drop in recall when optimizing LL. But we should also expect some discrepancy between LL and F1, according to one of the papers linked above. I would hope that with more variants or reliable training/truth (as in your data), things might stabilize or line up better. I'll try running with more malaria data, as well. The following trios x sites heatmap (top plot) for the validation set might better illustrate the arbitrariness in F1 (click to enlarge):. ![image](https://user-images.githubusercontent.com/11076296/158385585-1a0dfe8e-d4b7-4770-aed0-19ad81162c92.png). Here, yellow = het errors (since these are supposed to be clonal malaria samples), red = Mendelian errors, grey = no calls, green = Mendelian consistency, white = reference. The second plot shows the training/truth positives used to train the model and to calculate the LL score in the validation shard. The third plot shows the ""orthogonal truth"" positives/negatives used to calculate F1. So we can see that the difficulty in deriving F1 as a function of the score along the horizontal axis to give the third plot lies in collapsing the columns in the top plot into a single condition positive or condition negative status. Again, hard to do so without some arbitrariness; I simply came up with some rules to convert various amounts of red, yellow, green, etc. in each column to a red/white/green status. If you're using a single gold-standard sample, this should definitely be more straightforward. In any case, the optimal validation LL score at ~0.02 does appear to line up quite well visually with where one might manually set a threshold. It corresponds pretty well with the transition from the yellow/red/grey junk to the clean green/white sites in the top plot. Here's the same for the test set:. ![image](https://user-images.githubusercontent.com/11076296/158385662-6693a6c9-709c-482f-9a7e-5bb7030b3383.png). Happy to chat more about how you might implement this in your WDL---should be pretty straightforward!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1067396431:3050,test,test,3050,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1067396431,1,['test'],['test']
Testability," publish another artifact so we can move our projects forward. The crux of what I'm trying to achieve with these changes is for our VariantQC tool; however, I'm bumping into several situations where MultiVariantWalkers need to be able to determine the FeatureInput source of the variants. I recognize that this and my original PR #6973 has taken a non-trivial amount of @cmnbroad time, but we have basically been stalled with an otherwise approved PR since Feb 8. The PRs blocking that PR are this one and the related #7021. They both involve creating a way to connect VariantContext to FeatureInput - a capability that would benefit the GATK engine and I have been told by @cmnbroad you're interested in having. It seems like the primary problem associated with these changes is ensuring tests and VariantContext comparison code still works, since VariantContexts are going to tend to report a source. I dont know your internal conversations, so I'm guessing based on what's written in github. As I've said, I'd like to do whatever I can to get these changes into a form that takes as little of your effort as possible. . While this particular PR seems close, there is clearly some cleanup needed from what's there now, including code review from @lbergelson that no one ever fixed. Would it help if I put together #4571 and #7021 into a new branch where I also work through associated test changes and try to get this into one concise piece of code to review? Basically try to put everything together to be the minimal amount of work needed on your side? I havent heard anything one way or the other from GATK staff as to whether this would actually be helpful or not. Are there higher order design decisions that need to be considered that I'm not seeing? . I completely understand your time constraints - I'm just trying to figure out some solution that let's this go forward. Again, if we cant unblock this soon I'm going to probably fork GATK and need to start working off that project. Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4571#issuecomment-822691252:1575,test,test,1575,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4571#issuecomment-822691252,1,['test'],['test']
Testability," samples x 1000 intervals, I have verified determinism/reproducibility for DetermineGermlineContigPloidy COHORT/CASE modes, GermlineCNVCaller COHORT/CASE modes, and PostprocessGermlineCNVCalls. Numerical results are also relatively close to those from 4.4.0.0 for all identifiable call and model quantities (albeit far outside any reasonable exact-match thresholds, most likely due to differences in RNG, sampling, and the aforementioned priors). Some remaining TODOs:. - [x] Rebuild and push the base Docker. EDIT: Mostly covered by #8610, but this also includes an addition of `libblas-dev`.; - [x] Update expected results for integration tests, perhaps add any that might be missing. EDIT: These were generated on WSL Ubuntu 20.04.2, we'll see if things pass on 22.04. Note that changing the ARD priors does change the *names* of the expected files, since the transform is appended to the corresponding variable name. DetermineGermlineContigPloidy and PostprocessGermlineCNVCalls are missing exact-match tests and should probably have some, but I'll leave that to someone else.; - [x] Update other python integration tests.; - [x] Clean up some of the changes to the priors.; - [x] Clean up some TODO comments that I left to track code changes that might result in changed numerics. I'll try to go through and convert these to PR comments in an initial review pass.; - [x] Test over multiple shards on WGS and WES. Probably some scientific tests on ~100 samples in both cohort and case mode would do the trick. We should also double check runtime/memory performance (I noted ~1.5x speedups, but didn't measure carefully; I also want to make sure the changes to posterior sampling didn't introduce any memory issues). @mwalker174 will ping you when a Docker is ready! Might be good to loop in Isaac and/or Jack as well.; - [x] Perhaps add back the fix for 2-interval shards in https://github.com/broadinstitute/gatk/pull/8180, which I removed since the required functionality wasn't immediately ava",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8561#issuecomment-1847549285:2333,test,tests,2333,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8561#issuecomment-1847549285,1,['test'],['tests']
Testability," sampling complete.; 09:46:01.621 INFO MultidimensionalModeller - Smoothing iteration: 2; 09:46:01.621 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 398; 09:46:01.621 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 341; 09:46:01.622 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:46:02.459 INFO GibbsSampler - Starting MCMC sampling.; 09:46:04.896 INFO GibbsSampler - 25 of 100 samples generated.; 09:46:07.292 INFO GibbsSampler - 50 of 100 samples generated.; 09:46:09.705 INFO GibbsSampler - 75 of 100 samples generated.; 09:46:12.179 INFO GibbsSampler - 100 of 100 samples generated.; 09:46:12.179 INFO GibbsSampler - MCMC sampling complete.; 09:46:12.179 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:46:12.202 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:46:12.546 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599161.730531...; 09:46:12.546 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151592, biasVariance=0.041338, outlierProbability=0.030947}; 09:46:12.859 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599150.005317...; 09:46:12.859 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151592, biasVariance=0.036533, outlierProbability=0.037484}; 09:46:13.165 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599148.402059...; 09:46:13.165 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149236, biasVariance=0.034264, outlierProbability=0.038997}; 09:46:13.451 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599147.957754...; 09:46:13.451 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147087, biasVariance=0.033230, outlierProbability=0.038997}; 09:46:13.573 INFO GibbsSampler - Starting MCMC sam",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:7166,log,log,7166,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," sampling complete.; 09:46:39.763 INFO MultidimensionalModeller - Smoothing iteration: 3; 09:46:39.763 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 341; 09:46:39.764 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 326; 09:46:39.764 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:46:40.559 INFO GibbsSampler - Starting MCMC sampling.; 09:46:42.928 INFO GibbsSampler - 25 of 100 samples generated.; 09:46:45.335 INFO GibbsSampler - 50 of 100 samples generated.; 09:46:47.720 INFO GibbsSampler - 75 of 100 samples generated.; 09:46:50.130 INFO GibbsSampler - 100 of 100 samples generated.; 09:46:50.130 INFO GibbsSampler - MCMC sampling complete.; 09:46:50.130 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:46:50.155 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:46:50.491 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599186.382799...; 09:46:50.491 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151674, biasVariance=0.041597, outlierProbability=0.031043}; 09:46:50.793 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599173.973431...; 09:46:50.793 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151674, biasVariance=0.036521, outlierProbability=0.036858}; 09:46:51.096 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599172.045766...; 09:46:51.096 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149513, biasVariance=0.034385, outlierProbability=0.039399}; 09:46:51.370 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599171.568776...; 09:46:51.370 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147363, biasVariance=0.033351, outlierProbability=0.039399}; 09:46:51.487 INFO GibbsSampler - Starting MCMC sam",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:9465,log,log,9465,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," sampling complete.; 09:47:17.941 INFO MultidimensionalModeller - Smoothing iteration: 4; 09:47:17.942 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 326; 09:47:17.942 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 320; 09:47:17.942 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:47:18.756 INFO GibbsSampler - Starting MCMC sampling.; 09:47:21.195 INFO GibbsSampler - 25 of 100 samples generated.; 09:47:23.597 INFO GibbsSampler - 50 of 100 samples generated.; 09:47:26.031 INFO GibbsSampler - 75 of 100 samples generated.; 09:47:28.533 INFO GibbsSampler - 100 of 100 samples generated.; 09:47:28.533 INFO GibbsSampler - MCMC sampling complete.; 09:47:28.533 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:47:28.553 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:47:28.883 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599193.821455...; 09:47:28.884 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151686, biasVariance=0.041615, outlierProbability=0.031024}; 09:47:29.188 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599181.471228...; 09:47:29.188 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151686, biasVariance=0.036547, outlierProbability=0.036766}; 09:47:29.513 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599179.528974...; 09:47:29.514 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149492, biasVariance=0.034434, outlierProbability=0.039341}; 09:47:29.794 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599179.050215...; 09:47:29.794 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147343, biasVariance=0.033400, outlierProbability=0.039341}; 09:47:29.914 INFO GibbsSampler - Starting MCMC sam",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:11764,log,log,11764,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," sampling complete.; 09:47:56.024 INFO MultidimensionalModeller - Smoothing iteration: 5; 09:47:56.025 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 320; 09:47:56.025 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 315; 09:47:56.025 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:47:56.852 INFO GibbsSampler - Starting MCMC sampling.; 09:47:59.368 INFO GibbsSampler - 25 of 100 samples generated.; 09:48:01.836 INFO GibbsSampler - 50 of 100 samples generated.; 09:48:04.204 INFO GibbsSampler - 75 of 100 samples generated.; 09:48:06.588 INFO GibbsSampler - 100 of 100 samples generated.; 09:48:06.588 INFO GibbsSampler - MCMC sampling complete.; 09:48:06.589 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:48:06.609 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:48:06.967 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599214.667518...; 09:48:06.967 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152065, biasVariance=0.041090, outlierProbability=0.031116}; 09:48:07.271 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599203.280111...; 09:48:07.271 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152065, biasVariance=0.036781, outlierProbability=0.037210}; 09:48:07.582 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599201.550266...; 09:48:07.582 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149834, biasVariance=0.034708, outlierProbability=0.039514}; 09:48:07.846 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599201.121676...; 09:48:07.846 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147684, biasVariance=0.033674, outlierProbability=0.039514}; 09:48:07.961 INFO GibbsSampler - Starting MCMC sam",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:14063,log,log,14063,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," sampling complete.; 09:48:33.671 INFO MultidimensionalModeller - Smoothing iteration: 6; 09:48:33.671 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 315; 09:48:33.672 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 311; 09:48:33.672 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:48:34.470 INFO GibbsSampler - Starting MCMC sampling.; 09:48:36.720 INFO GibbsSampler - 25 of 100 samples generated.; 09:48:39.070 INFO GibbsSampler - 50 of 100 samples generated.; 09:48:41.417 INFO GibbsSampler - 75 of 100 samples generated.; 09:48:43.749 INFO GibbsSampler - 100 of 100 samples generated.; 09:48:43.749 INFO GibbsSampler - MCMC sampling complete.; 09:48:43.749 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:48:43.771 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:48:44.116 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599214.649782...; 09:48:44.116 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.041049, outlierProbability=0.031143}; 09:48:44.424 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599203.367762...; 09:48:44.424 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.036778, outlierProbability=0.037218}; 09:48:44.714 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599201.638390...; 09:48:44.714 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149830, biasVariance=0.034706, outlierProbability=0.039510}; 09:48:44.991 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599201.210843...; 09:48:44.991 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147681, biasVariance=0.033671, outlierProbability=0.039510}; 09:48:45.104 INFO GibbsSampler - Starting MCMC sam",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:16362,log,log,16362,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," sampling complete.; 09:49:11.543 INFO MultidimensionalModeller - Smoothing iteration: 7; 09:49:11.543 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 311; 09:49:11.543 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 311; 09:49:11.543 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:49:12.363 INFO GibbsSampler - Starting MCMC sampling.; 09:49:14.885 INFO GibbsSampler - 25 of 100 samples generated.; 09:49:17.255 INFO GibbsSampler - 50 of 100 samples generated.; 09:49:19.604 INFO GibbsSampler - 75 of 100 samples generated.; 09:49:21.938 INFO GibbsSampler - 100 of 100 samples generated.; 09:49:21.939 INFO GibbsSampler - MCMC sampling complete.; 09:49:21.939 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:49:21.958 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:49:22.312 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599214.649782...; 09:49:22.312 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.041049, outlierProbability=0.031143}; 09:49:22.622 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599203.367762...; 09:49:22.622 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.036778, outlierProbability=0.037218}; 09:49:22.933 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599201.638390...; 09:49:22.933 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149830, biasVariance=0.034706, outlierProbability=0.039510}; 09:49:23.216 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599201.210843...; 09:49:23.216 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147681, biasVariance=0.033671, outlierProbability=0.039510}; 09:49:23.323 INFO GibbsSampler - Starting MCMC sam",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:18661,log,log,18661,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability, the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field InbreedingCoeff - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAC - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAF - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field QD - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field QD - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field SOR - the field will NOT be part of INFO fields in the generated VCF records; 15:02:24.449 INFO FeatureManager - Using codec BEDCodec to read file file:///scratch/jsalt-test/ABBA-BABA/vcf/cv-genome-uce-coords-newchrom-500flank.bed; 15:02:24.508 INFO IntervalArgumentCollection - Processing 9612471 bp from intervals; 15:02:24.531 INFO GenotypeGVCFs - Done initializing engine; 15:02:24.609 INFO ProgressMeter - Starting traversal; 15:02:24.609 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; WARNING: No valid combination operation found for INFO field AC - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field AF - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field AN - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field DS - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field FS - the fiel,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6357#issuecomment-581619640:6009,test,test,6009,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6357#issuecomment-581619640,1,['test'],['test']
Testability," the issue describing this (https://github.com/broadinstitute/gatk/issues/7005) you had mentioned something about how GenomicsDBFeatureReader required a reference and wasn't sure if you were implying GenomicsDB would get that info from the reference. My understanding of `--force-output-intervals` is that it would cause the resulting output to have homref info if there is evidence in the gvcfs (maybe @droazen can clarify/confirm). As such, the fact that you are getting `N` as the REF would suggest that there is no call made for that particular site. In fact, you can see this in the test case you have here. While it doesn't reproduce the issue, if you examine the output vcf file generated by the test:; - Output contains `N` for `20:10-20` but that is expected because the input gvcf says as much for the first 9999901 bases; ```; 20 1 . N <NON_REF> . . END=9999901 GT:DP:GQ:MIN_DP:PL 0/0:0:0:0:0,0,0; ```; - If you instead change `--force-output-intervals` to `20:9999902-9999910` you will notice that the output file now contains those sites with the right bases and corresponding homref calls:; ```; 20 9999902 . T . . . DP=1 GT:DP:RGQ 0/0:1:3; 20 9999903 . G . . . DP=3 GT:DP:RGQ 0/0:3:9; 20 9999904 . T . . . DP=3 GT:DP:RGQ 0/0:3:9; 20 9999905 . T . . . DP=6 GT:DP:RGQ 0/0:6:18; 20 9999906 . A . . . DP=6 GT:DP:RGQ 0/0:6:18; 20 9999907 . A . . . DP=7 GT:DP:RGQ 0/0:7:21; 20 9999908 . A . . . DP=7 GT:DP:RGQ 0/0:7:21; 20 9999909 . A . . . DP=9 GT:DP:RGQ 0/0:9:27; 20 9999910 . T . . . DP=11 GT:DP:RGQ 0/0:11:33; ```. Since you replied saying the test isn't reproducing the case you expect, maybe you already know all this - but just wanted to clarify that is the case. Having said all that, if you're still seeing a case where REF is `N` and you know the input should result in something else, can you share a small snippet of an input gvcf that illustrates the case? Since you were looking at specific intervals in the earlier issue, hopefully you can go back to the input gvcfs for that?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7018#issuecomment-755517894:1818,test,test,1818,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7018#issuecomment-755517894,1,['test'],['test']
Testability," the log file: ```*** Error in `java’: munmap_chunk(): invalid pointer: 0x00007f685d06c840 ***```. The respective backtraces: . ```; *** Error in `java': double free or corruption (out): 0x00007f6364699340 ***; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x777e5)[0x7f636ba307e5]; /lib/x86_64-linux-gnu/libc.so.6(+0x8037a)[0x7f636ba3937a]; /lib/x86_64-linux-gnu/libc.so.6(cfree+0x4c)[0x7f636ba3d53c]; /cromwell_root/tmp.7626fbcf/libgkl_smithwaterman1454827346682980108.so(_Z19runSWOnePairBT_avx2iiiiPhS_iiaPcPs+0x338)[0x7f63123c8fa8]; /cromwell_root/tmp.7626fbcf/libgkl_smithwaterman1454827346682980108.so(Java_com_intel_gkl_smithwaterman_IntelSmithWaterman_alignNative+0xd8)[0x7f63123c8bf8]; [0x7f6355bff192]; ```. ```; *** Error in `java': munmap_chunk(): invalid pointer: 0x00007f685d06c840 ***; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x777e5)[0x7f68634c37e5]; /lib/x86_64-linux-gnu/libc.so.6(cfree+0x1a8)[0x7f68634d0698]; /cromwell_root/tmp.4eeeda3c/libgkl_smithwaterman7538158038428947321.so(_Z19runSWOnePairBT_avx2iiiiPhS_iiaPcPs+0x338)[0x7f6830cf2fa8]; /cromwell_root/tmp.4eeeda3c/libgkl_smithwaterman7538158038428947321.so(Java_com_intel_gkl_smithwaterman_IntelSmithWaterman_alignNative+0xd8)[0x7f6830cf2bf8]; [0x7f684dc31f92]; ```. In each of these occurrences, the filtered vcf file was produced, but the vcf.idx file was missing. Although the java errors occur, the last line of the log denotes the step as a success: (This might be true, but only when the option --create-output-variant-index is set to false.; `SetOperationStatus(copied 0 file(s) to <destinations_folder> succeeded""`. I also performed a test based on machine type. (outside of the full workflow, starting the steps on my own on a separate instance & replicating the steps of the workflow); - Using an instance with 2 vCPU's, 7.5 GB of ram, just ran out of memory.; - Using an instance with 8 vCPU's, 30 GB of ram finished successfully, producing both the filtered vcf & vcf.idx",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5690#issuecomment-652696262:2270,log,log,2270,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5690#issuecomment-652696262,2,"['log', 'test']","['log', 'test']"
Testability, the recommended way:. ```; $ build/install/hellbender/bin/hellbender BaseRecalibratorDataflow -R src/test/resources/org/broadinstitute/hellbender/tools/BQSR/human_b36_both.chr1_1k.fasta -I src/test/resources/org/broadinstitute/hellbender/tools/BQSR/originalQuals.1kg.chr1.1-1K.1RG.dictFix.bam --secret client-secrets.json -OQ -knownSites src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b36.excluding_sites_after_129.chr1_1k.vcf --RECAL_TABLE_FILE walktest.tmp -sortAllCols; [Tue Jun 02 03:22:33 EDT 2015] org.broadinstitute.hellbender.dev.tools.walkers.bqsr.BaseRecalibratorDataflow --knownSites /home/pgrosu/me/gg_hellbender_broad_institute/hellbender/src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b36.excluding_sites_after_129.chr1_1k.vcf --RECAL_TABLE_FILE walktest.tmp --sort_by_all_columns true --input src/test/resources/org/broadinstitute/hellbender/tools/BQSR/originalQuals.1kg.chr1.1-1K.1RG.dictFix.bam --reference src/test/resources/org/broadinstitute/hellbender/tools/BQSR/human_b36_both.chr1_1k.fasta --useOriginalQualities true --client_secret client-secrets.json --run_without_dbsnp_potentially_ruining_quality false --solid_recal_mode SET_Q_ZERO --solid_nocall_strategy THROW_EXCEPTION --mismatches_context_size 2 --indels_context_size 3 --maximum_cycle_value 500 --mismatches_default_quality -1 --insertions_default_quality 45 --deletions_default_quality 45 --low_quality_tail 2 --quantizing_levels 16 --interval_set_rule UNION --interval_padding 0 --bqsrBAQGapOpenPenalty 40.0 --preserve_qscores_less_than 6 --defaultBaseQualities -1 --runner LOCAL --help false --version false --VERBOSITY INFO --QUIET false; [Tue Jun 02 03:22:33 EDT 2015] Executing as pgrosu@eofe5 on Linux 2.6.32-358.el6.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_05-b13; Version: Version:GATK.4.alpha-329-g62ef76b-SNAPSHOT JdkDeflater; 03:22:33.469 [main] INFO org.broadinstitute.hellbender.dev.tools.walkers.bqsr.BaseRecalibratorDataflow - Initializing e,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/535#issuecomment-107794672:1518,test,test,1518,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/535#issuecomment-107794672,1,['test'],['test']
Testability, unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](ht,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7221#issuecomment-827314679:1203,test,test-logs,1203,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7221#issuecomment-827314679,1,['test'],['test-logs']
Testability," we'd just want to let the user be able to specify the theano directory (rather than dump things in `~/.theano` unexpectedly). We should think about whether this should be opt-in, i.e., should we preserve the original behavior of using `~/.theano` by default?; > ; > @mwalker174 opinions? @droazen or engine team, thoughts on what the policy should be for python/R scripts doing this sort of thing? Is it generally true that the GATK leaves no trace, other than producing the expected output?. Dear samuelklee,. Thank you very much for you reply. I also found this problem last night. It seems that the problem is originally from Theano and Pymc3, rather than GATK 4.0. Some similar problems have been reported just like (1) https://github.com/pymc-devs/pymc3/issues/1463 (2) https://stackoverflow.com/questions/52270853/how-to-get-rid-of-theano-gof-compilelock and (3) https://groups.google.com/forum/#!topic/theano-users/eJ2vl2PUTk4. Last night, I have already tried to reset base_compiledir for theano, through two ways: (1) creating a ~/.theanorc file just like you suggested (2) modifying the file ~/.bashrc for my login node, by adding a line: export THEANO_FLAGS=""base_compiledir=/scratch/gatk-user1/z-Temp/z-Temp-Theano-$chr"". However, the truth is that, in our cluster, when I submit the 25 jobs (for each chromosomes), they are assigned to different computer nodes randomly. It means that I have to set THEANO environment variable for each corresponding random computer nodes respectively, which is quite difficult for me, as the nodes are random assigned. So, now I'm going to add lines like below to the ~/.theanorc in my login node, to see what will happen. Maybe It will work.; #######; [global]; config.compile.timeout = 100000 ; ######. However, I'm really appreciate it if some one in your team can help to add a function to specify a temporary directory for the theano directory, which can be bound to the corresponding node shared by other GATK threads. Thank you and Best regards.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-548557073:2210,log,login,2210,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-548557073,2,['log'],['login']
Testability," will be optimized separately for SNPs and INDELs. How about this for a first workflow to target?. 1) Run ExtractVariantAnnotations on a training set of chromosomes. You can keep training/truth labels as in Best Practices, for now.; 2) Run TrainVariantAnnotationsModel on that. We'll use the truth scores generated here for any sensitivity conversions---i.e., we'll be calibrating scores only to the truth sites that are contained in the training set of chromosomes.; 3) Use the trained model to run a single shard of ScoreVariantAnnotations on a validation set of chromosomes.; 4) Run some variation of the above script on the resulting outputs to determine SNP and INDEL score thresholds for optimizing the corresponding LL scores. We can also add some code to the script to use the truth scores from step 2 to convert these score thresholds into truth-sensitivity thresholds.; 5) Provide these truth-sensitivity thresholds to ScoreVariantAnnotations and use them to hard filter. Evaluate on a test set of chromosomes. If all looks good, we can later move steps 3-4 into the train tool and automate the passing of sensitivities in 5 via outputs in the model directory. This will let us keep the basic interface of ScoreVariantAnnotations the same, but we'll have to add a few basic parameters to TrainVariantAnnotationsModel to control the train/validation split. So I think all this branch is missing is step 5---we'll simply need to add command-line parameters for the SNP/INDEL sensitivity thresholds and then do the hard filtering in the VCF writing method highlighted above. Do you think you can handle implementing that in this branch, and then the rest at the WDL level? I can help with the python script for the LL stuff (or anything else), if needed. Not sure if you got a chance to check out what your collaborators are doing in the methods you're looking to compare against, but it would be good to understand if this basic scheme for train/validation/test splitting can be replicated ove",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1068345084:1014,test,test,1014,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1068345084,1,['test'],['test']
Testability, | ---- |; | R | openjdk8 | [29988.6](https://travis-ci.com/broadinstitute/gatk/jobs/317861684) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.6/tests/test/index.html) |; | integration | oraclejdk8 | [29988.12](https://travis-ci.com/broadinstitute/gatk/jobs/317861697) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.12/tests/test/index.html) |; | python | openjdk8 | [29988.5](https://travis-ci.com/broadinstitute/gatk/jobs/317861683) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.5/tests/test/index.html) |; | integration | openjdk11 | [29988.13](https://travis-ci.com/broadinstitute/gatk/jobs/317861698) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.13/tests/test/index.html) |; | cloud | openjdk11 | [29988.15](https://travis-ci.com/broadinstitute/gatk/jobs/317861700) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.15/tests/test/index.html) |; | cloud | openjdk8 | [29988.1](https://travis-ci.com/broadinstitute/gatk/jobs/317861676) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.1/tests/test/index.html) |; | unit | openjdk11 | [29988.14](https://travis-ci.com/broadinstitute/gatk/jobs/317861699) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.14/tests/test/index.html) |; | integration | openjdk8 | [29988.2](https://travis-ci.com/broadinstitute/gatk/jobs/317861680) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.2/tests/test/index.html) |; | variantcalling | openjdk8 | [29988.4](https://travis-ci.com/broadinstitute/gatk/jobs/317861682) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.4/tests/test/index.html) |; | unit | openjdk8 | [29988.3](https://travis-ci.com/broadinstitute/gatk/jobs/317861681) | [logs](https://sto,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611710351:1194,test,test-logs,1194,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611710351,1,['test'],['test-logs']
Testability, | ------ | ---- |; | R | openjdk8 | [29990.6](https://travis-ci.com/broadinstitute/gatk/jobs/317870153) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.6/tests/test/index.html) |; | integration | oraclejdk8 | [29990.12](https://travis-ci.com/broadinstitute/gatk/jobs/317870159) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.12/tests/test/index.html) |; | python | openjdk8 | [29990.5](https://travis-ci.com/broadinstitute/gatk/jobs/317870152) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.5/tests/test/index.html) |; | cloud | openjdk8 | [29990.1](https://travis-ci.com/broadinstitute/gatk/jobs/317870147) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.1/tests/test/index.html) |; | cloud | openjdk11 | [29990.15](https://travis-ci.com/broadinstitute/gatk/jobs/317870162) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.15/tests/test/index.html) |; | integration | openjdk11 | [29990.13](https://travis-ci.com/broadinstitute/gatk/jobs/317870160) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.13/tests/test/index.html) |; | integration | openjdk8 | [29990.2](https://travis-ci.com/broadinstitute/gatk/jobs/317870149) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.2/tests/test/index.html) |; | unit | openjdk11 | [29990.14](https://travis-ci.com/broadinstitute/gatk/jobs/317870161) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.14/tests/test/index.html) |; | variantcalling | openjdk8 | [29990.4](https://travis-ci.com/broadinstitute/gatk/jobs/317870151) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.4/tests/test/index.html) |; | unit | openjdk8 | [29990.3](https://travis-ci.com/broadinstitute/gatk/jobs/317870150) | [logs](ht,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611720629:1185,test,test-logs,1185,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611720629,1,['test'],['test-logs']
Testability, | ------ | ---- |; | cloud | openjdk11 | [31916.14](https://travis-ci.com/broadinstitute/gatk/jobs/405794433) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_31916.14/tests/test/index.html) |; | cloud | openjdk11 | [31916.14](https://travis-ci.com/broadinstitute/gatk/jobs/405794433) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_31916.14/tests/test/index.html) |; | cloud | openjdk8 | [31916.1](https://travis-ci.com/broadinstitute/gatk/jobs/405794420) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_31916.1/tests/test/index.html) |; | cloud | openjdk11 | [31916.14](https://travis-ci.com/broadinstitute/gatk/jobs/405794433) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_31916.14/tests/test/index.html) |; | cloud | openjdk8 | [31916.1](https://travis-ci.com/broadinstitute/gatk/jobs/405794420) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_31916.1/tests/test/index.html) |; | cloud | openjdk8 | [31916.1](https://travis-ci.com/broadinstitute/gatk/jobs/405794420) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_31916.1/tests/test/index.html) |; | cloud | openjdk11 | [31916.14](https://travis-ci.com/broadinstitute/gatk/jobs/405794433) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_31916.14/tests/test/index.html) |; | cloud | openjdk8 | [31916.1](https://travis-ci.com/broadinstitute/gatk/jobs/405794420) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_31916.1/tests/test/index.html) |; | cloud | openjdk8 | [31916.1](https://travis-ci.com/broadinstitute/gatk/jobs/405794420) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_31916.1/tests/test/index.html) |; | cloud | openjdk11 | [31916.14](https://travis-ci.com/broadinstitute/gatk/jobs/405794433) | [logs](https://storage.googlea,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6909#issuecomment-715580832:1185,test,test-logs,1185,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6909#issuecomment-715580832,1,['test'],['test-logs']
Testability, | Complexity Δ | |; |---|---|---|---|; | [...ngine/spark/datasources/ReferenceTwoBitSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4044/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVmZXJlbmNlVHdvQml0U291cmNlLmphdmE=) | `90.909% <75%> (-9.091%)` | `6 <2> (-1)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4044/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-75.51%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4044/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4044/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4044/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `25.735% <0%> (-60.294%)` | `8% <0%> (-25%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4044/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-24.516%)` | `30% <0%> (-9%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4044/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vc,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4044#issuecomment-356143221:1885,test,test,1885,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4044#issuecomment-356143221,1,['test'],['test']
Testability, | Complexity Δ | |; |---|---|---|---|; | [...ngine/spark/datasources/ReferenceTwoBitSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4584/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVmZXJlbmNlVHdvQml0U291cmNlLmphdmE=) | `90.909% <75%> (-9.091%)` | `6 <2> (-1)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4584/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-75.51%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4584/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4584/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-65.217%)` | `2% <0%> (-7%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4584/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-9%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4584/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `0% <0%> (-22.807%)` | `0% <0%> (-2%)` | |; | [...titute/hellbender/utils/test/MiniClusterUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4584/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcm,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4584#issuecomment-376279904:1881,test,test,1881,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4584#issuecomment-376279904,1,['test'],['test']
Testability, | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ender/tools/spark/sv/utils/GATKSVVCFConstants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi91dGlscy9HQVRLU1ZWQ0ZDb25zdGFudHMuamF2YQ==) | `0% <0%> (-75%)` | `0% <0%> (-1%)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-74.257%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-65.217%)` | `2% <0%> (-7%)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-10%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5056#issuecomment-408053675:1879,test,test,1879,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5056#issuecomment-408053675,1,['test'],['test']
Testability, | [...ions/OptionalReferenceInputArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/4047/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL2FyZ3VtZW50Y29sbGVjdGlvbnMvT3B0aW9uYWxSZWZlcmVuY2VJbnB1dEFyZ3VtZW50Q29sbGVjdGlvbi5qYXZh) | `100% <0%> (ø)` | `6% <0%> (+1%)` | :arrow_up: |; | [...tcollections/ReferenceInputArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/4047/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL2FyZ3VtZW50Y29sbGVjdGlvbnMvUmVmZXJlbmNlSW5wdXRBcmd1bWVudENvbGxlY3Rpb24uamF2YQ==) | `100% <0%> (ø)` | `5% <0%> (+2%)` | :arrow_up: |; | [...stitute/hellbender/engine/ReferenceDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4047/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUmVmZXJlbmNlRGF0YVNvdXJjZS5qYXZh) | `80% <0%> (ø)` | `8% <0%> (+4%)` | :arrow_up: |; | [...titute/hellbender/utils/test/ArgumentsBuilder.java](https://codecov.io/gh/broadinstitute/gatk/pull/4047/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0FyZ3VtZW50c0J1aWxkZXIuamF2YQ==) | `100% <0%> (ø)` | `23% <0%> (+4%)` | :arrow_up: |; | [...er/tools/spark/sv/discovery/AlignmentInterval.java](https://codecov.io/gh/broadinstitute/gatk/pull/4047/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvQWxpZ25tZW50SW50ZXJ2YWwuamF2YQ==) | `91.064% <0%> (+0.426%)` | `66% <0%> (+1%)` | :arrow_up: |; | [...ions/RequiredReferenceInputArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/4047/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL2FyZ3VtZW50Y29sbGVjdGlvbnMvUmVxdWlyZWRSZWZlcmVuY2VJbnB1dEFyZ3VtZW50Q29sbGVjdGlvbi5qYXZh) | `87.5% <0%> (+1.786%)` | `5% <0%> (+1%)` | :arrow_up: |; | [...e/hellbender/engine/spark/SparkContextFactory.java](ht,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4047#issuecomment-355479773:2505,test,test,2505,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4047#issuecomment-355479773,1,['test'],['test']
Testability, | `0% <0%> (-100%)` | `0% <0%> (-2%)` | |; | [...otypecaller/RandomLikelihoodCalculationEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/5990/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9SYW5kb21MaWtlbGlob29kQ2FsY3VsYXRpb25FbmdpbmUuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-6%)` | |; | [...sformers/MisencodedBaseQualityReadTransformer.java](https://codecov.io/gh/broadinstitute/gatk/pull/5990/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90cmFuc2Zvcm1lcnMvTWlzZW5jb2RlZEJhc2VRdWFsaXR5UmVhZFRyYW5zZm9ybWVyLmphdmE=) | `0% <0%> (-100%)` | `0% <0%> (-4%)` | |; | [...er/utils/smithwaterman/SWNativeAlignerWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/5990/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NXTmF0aXZlQWxpZ25lcldyYXBwZXIuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-6%)` | |; | [...ne/programgroups/CoverageAnalysisProgramGroup.java](https://codecov.io/gh/broadinstitute/gatk/pull/5990/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL3Byb2dyYW1ncm91cHMvQ292ZXJhZ2VBbmFseXNpc1Byb2dyYW1Hcm91cC5qYXZh) | `0% <0%> (-100%)` | `0% <0%> (-3%)` | |; | [...institute/hellbender/cmdline/TestProgramGroup.java](https://codecov.io/gh/broadinstitute/gatk/pull/5990/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL1Rlc3RQcm9ncmFtR3JvdXAuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-3%)` | |; | [...ls/walkers/genotyper/HeterogeneousPloidyModel.java](https://codecov.io/gh/broadinstitute/gatk/pull/5990/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2dlbm90eXBlci9IZXRlcm9nZW5lb3VzUGxvaWR5TW9kZWwuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-14%)` | |; | ... and [1364 more](https://codecov.io/gh/broadinstitute/gatk/pull/5990/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5990#issuecomment-500382987:3457,Test,TestProgramGroup,3457,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5990#issuecomment-500382987,1,['Test'],['TestProgramGroup']
Testability, | `77.966% <0%> (+0.847%)` | `43% <0%> (+1%)` | :arrow_up: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4429/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `80% <0%> (+1.29%)` | `39% <0%> (ø)` | :arrow_down: |; | [...nder/tools/examples/ExampleVariantWalkerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4429/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leGFtcGxlcy9FeGFtcGxlVmFyaWFudFdhbGtlclNwYXJrLmphdmE=) | `76.316% <0%> (+2.242%)` | `9% <0%> (+4%)` | :arrow_up: |; | [...institute/hellbender/engine/FeatureDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4429/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvRmVhdHVyZURhdGFTb3VyY2UuamF2YQ==) | `79.752% <0%> (+3.696%)` | `66% <0%> (+22%)` | :arrow_up: |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4429/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `78.261% <0%> (+4.348%)` | `9% <0%> (+1%)` | :arrow_up: |; | [...kers/variantutils/CalculateGenotypePosteriors.java](https://codecov.io/gh/broadinstitute/gatk/pull/4429/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9DYWxjdWxhdGVHZW5vdHlwZVBvc3RlcmlvcnMuamF2YQ==) | `91.398% <0%> (+5.482%)` | `25% <0%> (+12%)` | :arrow_up: |; | [...hellbender/utils/test/VariantContextTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4429/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1ZhcmlhbnRDb250ZXh0VGVzdFV0aWxzLmphdmE=) | `89.053% <0%> (+6.621%)` | `83% <0%> (+23%)` | :arrow_up: |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/bro,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4429#issuecomment-367407823:2822,test,test,2822,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4429#issuecomment-367407823,1,['test'],['test']
Testability, | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](h,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7221#issuecomment-827314679:1414,test,test-logs,1414,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7221#issuecomment-827314679,1,['test'],['test-logs']
Testability, | |; | [...Plugin/GATKAnnotationPluginDescriptorUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL0dBVEtQbHVnaW4vR0FUS0Fubm90YXRpb25QbHVnaW5EZXNjcmlwdG9yVW5pdFRlc3QuamF2YQ==) | `88.235% <0%> (-1.43%)` | `58% <0%> (+1%)` | |; | [.../tools/walkers/haplotypecaller/RefVsAnyResult.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9SZWZWc0FueVJlc3VsdC5qYXZh) | `100% <0%> (ø)` | `3% <0%> (+1%)` | :arrow_up: |; | [...ools/walkers/annotator/VariantAnnotatorEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9WYXJpYW50QW5ub3RhdG9yRW5naW5lLmphdmE=) | `91.304% <0%> (ø)` | `70% <0%> (ø)` | :arrow_down: |; | [...line/GATKPlugin/testpluggables/TestAnnotation.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL0dBVEtQbHVnaW4vdGVzdHBsdWdnYWJsZXMvVGVzdEFubm90YXRpb24uamF2YQ==) | `0% <0%> (ø)` | `0% <0%> (?)` | |; | [...line/GATKPlugin/testpluggables/TestReadFilter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL0dBVEtQbHVnaW4vdGVzdHBsdWdnYWJsZXMvVGVzdFJlYWRGaWx0ZXIuamF2YQ==) | `0% <0%> (ø)` | `0% <0%> (?)` | |; | [...nder/tools/funcotator/FuncotatorTestConstants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JUZXN0Q29uc3RhbnRzLmphdmE=) | `98.333% <0%> (+0.028%)` | `1% <0%> (ø)` | :arrow_down: |; | [...dataSources/vcf/VcfFuncotationFactoryUnitTest.java](https://codecov.io/gh/broadinstitute/gatk,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5566#issuecomment-452843310:2843,test,testpluggables,2843,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5566#issuecomment-452843310,2,"['Test', 'test']","['TestAnnotation', 'testpluggables']"
Testability,"!!!!!!!!!!!!!!!![0m. 20:12:42.725 INFO FilterAlignmentArtifacts - Initializing engine; 20:12:48.403 INFO FeatureManager - Using codec VCFCodec to read file gs://fc-secure-024a1aae-a4f9-4025-aa93-f759f93a8203/50383670-4607-4e59-9bfc-4db970980f0e/Mutect2/773a91ea-25be-4d49-b97c-16527076250c/call-Filter/cacheCopy/TN-20-36-filtered.vcf; 20:12:50.117 INFO FilterAlignmentArtifacts - Done initializing engine; 20:12:51.042 INFO NativeLibraryLoader - Loading libgkl_pairhmm_omp.so from jar:file:/gatk/gatk-package-4.1.9.0-SNAPSHOT-local.jar!/com/intel/gkl/native/libgkl_pairhmm_omp.so; 20:12:51.099 INFO IntelPairHmm - Flush-to-zero (FTZ) is enabled when running PairHMM; 20:12:51.100 INFO IntelPairHmm - Available threads: 14; 20:12:51.100 INFO IntelPairHmm - Requested threads: 4; 20:12:51.100 INFO PairHMM - Using the OpenMP multi-threaded AVX-accelerated native PairHMM implementation; 20:12:51.100 INFO ProgressMeter - Starting traversal; 20:12:51.100 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 20:20:25.766 INFO ProgressMeter - chr3:104142090 7.6 1000 132.0; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00007efc9818177e, pid=24, tid=0x00007f13b3c76700; #; # JRE version: OpenJDK Runtime Environment (8.0_242-b08) (build 1.8.0_242-8u242-b08-0ubuntu3~18.04-b08); # Java VM: OpenJDK 64-Bit Server VM (25.242-b08 mixed mode linux-amd64 ); # Problematic frame:; # C [libgkl_smithwaterman1809483713436863458.so+0x177e] smithWatermanBackTrack(dnaSeqPair*, int, int, int, int, int*, int)+0x60e; #; # Core dump written. Default location: /cromwell_root/core or core.24; #; # An error report file with more information is saved as:; # /cromwell_root/hs_err_pid24.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5690#issuecomment-781673098:2270,log,log,2270,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5690#issuecomment-781673098,1,['log'],['log']
Testability,""",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1067505110:7792,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,7792,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1067505110,8,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,""",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""167cbd3e-0835-47b5-8325-a853bd98ec9a"",; ""eval_cromwell_job_id"": ""43bcefb2-f38b-413d-9b65-06b489e64af1"",; ""created_at"": ""2023-06-02T17:26:47.097005"",; ""created_by"": null,; ""finished_at"": ""2023-06-03T03:48:32.144"",; ""results"": {; ""CHM controlHCprocesshours"": ""86.02092777777776"",; ""CHM controlHCsystemhours"": ""0.19513888888888892"",; ""CHM controlHCwallclockhours"": ""62.28637777777777"",; ""CHM controlHCwallclockmax"": ""3.304836111111111"",; ""CHM controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/43bcefb2-f38b-413d-9b65-06b489e64af1/call-CHMSampleHeadToHead/BenchmarkComparison/258eacc8-3768-44a8-86dc-1b2b0516a553/call-CONTROLRuntimeTask/monitoring.pdf"",; ""CHM controlindelF1Score"": ""0.8724"",; ""CHM controlindelPrecision"": ""0.8814"",; ""CHM controlsnpF1Score"": ""0.9784"",; ""CHM controlsnpPrecision"": ""0.9706"",; ""CHM controlsnpRecall"": ""0.9863"",; ""CHM controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/43bcefb2-f38b-413d-9b65-06b489e64af1/call-CHMSampleHeadToHead/BenchmarkComparison/258eacc8-3768-44a8-86dc-1b2b0516a553/call-BenchmarkVCFControlSample/Benchmark/b89e3e0d-4f93-4b2d-9008-041545f2764c/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""87.0306027777778"",; ""CHM evalHCsystemhours"": ""0.19828888888888896"",; ""CHM evalHCwallclockhours"": ""62.522422222222225"",; ""CHM evalHCwallclockmax"": ""3.293238888888889"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/43bcefb2-f38b-413d-9b65-06b489e64af1/c",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574622123:17164,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,17164,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574622123,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,""",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""78cbc728-aca2-47d0-9a7a-554dba9f19f5"",; ""eval_cromwell_job_id"": ""f61c0caa-70a3-4ee5-8542-e78ba8364985"",; ""created_at"": ""2023-05-04T18:26:42.379437"",; ""created_by"": null,; ""finished_at"": ""2023-05-05T03:56:11.686"",; ""results"": {; ""CHM controlHCprocesshours"": ""81.1621222222222"",; ""CHM controlHCsystemhours"": ""0.16283611111111113"",; ""CHM controlHCwallclockhours"": ""57.139766666666674"",; ""CHM controlHCwallclockmax"": ""3.1312416666666665"",; ""CHM controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f61c0caa-70a3-4ee5-8542-e78ba8364985/call-CHMSampleHeadToHead/BenchmarkComparison/394f0e4c-4f60-420b-8477-3199ef269728/call-CONTROLRuntimeTask/monitoring.pdf"",; ""CHM controlindelF1Score"": ""0.8724"",; ""CHM controlindelPrecision"": ""0.8814"",; ""CHM controlsnpF1Score"": ""0.9784"",; ""CHM controlsnpPrecision"": ""0.9706"",; ""CHM controlsnpRecall"": ""0.9863"",; ""CHM controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f61c0caa-70a3-4ee5-8542-e78ba8364985/call-CHMSampleHeadToHead/BenchmarkComparison/394f0e4c-4f60-420b-8477-3199ef269728/call-BenchmarkVCFControlSample/Benchmark/2aec499d-c11f-4a23-912b-8a61f9982437/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""86.06659722222223"",; ""CHM evalHCsystemhours"": ""0.19141388888888877"",; ""CHM evalHCwallclockhours"": ""60.83952500000001"",; ""CHM evalHCwallclockmax"": ""3.1510444444444445"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f61c0caa-70a3-4ee5-8542-e78ba8364985/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535665125:17206,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,17206,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535665125,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,""",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""c18d0f5f-52c9-4e60-92ed-e4b33c6553c7"",; ""eval_cromwell_job_id"": ""9c49383b-01a9-4bc0-90fa-cde7e1090a47"",; ""created_at"": ""2023-05-15T22:38:43.733338"",; ""created_by"": null,; ""finished_at"": ""2023-05-16T08:30:08.614"",; ""results"": {; ""CHM controlHCprocesshours"": ""78.81892777777776"",; ""CHM controlHCsystemhours"": ""0.15627777777777782"",; ""CHM controlHCwallclockhours"": ""55.94185833333335"",; ""CHM controlHCwallclockmax"": ""3.053286111111111"",; ""CHM controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-CHMSampleHeadToHead/BenchmarkComparison/deb85607-d693-4232-a4da-0fb88dd29cad/call-CONTROLRuntimeTask/monitoring.pdf"",; ""CHM controlindelF1Score"": ""0.8724"",; ""CHM controlindelPrecision"": ""0.8814"",; ""CHM controlsnpF1Score"": ""0.9784"",; ""CHM controlsnpPrecision"": ""0.9706"",; ""CHM controlsnpRecall"": ""0.9863"",; ""CHM controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-CHMSampleHeadToHead/BenchmarkComparison/deb85607-d693-4232-a4da-0fb88dd29cad/call-BenchmarkVCFControlSample/Benchmark/c0877490-fd2d-4f42-bb92-f06210e94d95/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""84.33091111111112"",; ""CHM evalHCsystemhours"": ""0.18621944444444444"",; ""CHM evalHCwallclockhours"": ""61.43"",; ""CHM evalHCwallclockmax"": ""3.073069444444444"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-CHMSampl",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169:17204,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,17204,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,""",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 10,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCalling.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCalling.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCalling.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1027191801:1711,Benchmark,BenchmarkComparison,1711,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1027191801,2,['Benchmark'],['BenchmarkComparison']
Testability,""",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCalling.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCalling.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCalling.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049221485:1711,Benchmark,BenchmarkComparison,1711,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049221485,2,['Benchmark'],['BenchmarkComparison']
Testability,""",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallingCarrot.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCallingCarrot.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCallingCarrot.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCallingCarrot.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049997691:1711,Benchmark,BenchmarkComparison,1711,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049997691,4,['Benchmark'],['BenchmarkComparison']
Testability,""",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""test_options"": null,; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallingCarrot.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCallingCarrot.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCallingCarrot.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCallingCarrot.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkComparison.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkComparison.referenceVersion"": ""HG38"",; ""BenchmarkComparison.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/exome_evaluation_regions.v1.interval_list"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCRFromHengHg38.interval_list""; ],; ""BenchmarkComparison.stratLabels"": [; ""exome"",; ""LCR""; ],; ""BenchmarkComparison.truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkComparison.truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkComparison.truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi""; },; ""eval_option",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055740510:2623,Benchmark,BenchmarkComparison,2623,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055740510,4,['Benchmark'],['BenchmarkComparison']
Testability,""": ""test_output:FunctionalEquivalenceTest.out_dragen_vcfs"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcf_indices"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcfs"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcf_indices"",; ""GatkDragenConcordanceEvaluation.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""GatkDragenConcordanceEvaluation.include_in_fe_analysis"": ""test_output:FunctionalEquivalenceTest.out_include_in_fe_analysis"",; ""GatkDragenConcordanceEvaluation.refDict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""GatkDragenConcordanceEvaluation.refIndex"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""GatkDragenConcordanceEvaluation.reference"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""GatkDragenConcordanceEvaluation.referenceVersion"": ""hg38"",; ""GatkDragenConcordanceEvaluation.replicate_no"": ""test_output:FunctionalEquivalenceTest.out_replicate_no"",; ""GatkDragenConcordanceEvaluation.sample_id"": ""test_output:FunctionalEquivalenceTest.out_sample_id"",; ""GatkDragenConcordanceEvaluation.stratIntervals"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/stratifiers/LCR_Hg38.interval_list"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/stratifiers/HCR_hg38.bed""; ],; ""GatkDragenConcordanceEvaluation.stratLabels"": [; ""LCR"",; ""HCR""; ],; ""GatkDragenConcordanceEvaluation.truth_vcf"": ""test_output:FunctionalEquivalenceTest.out_truth_vcf"",; ""GatkDragenConcordanceEvaluation.truth_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_truth_vcf_index""; },; ""test_cromwell_job_id"": null,; ""eval_cromwell_job_id"": null,; ""created_at"": ""2021-01-14T19:14:37.025719"",; ""created_by"": null,; ""finished_at"": null; } ; </pre> </details>",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440:6835,benchmark,benchmarking,6835,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440,2,['benchmark'],['benchmarking']
Testability,""": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ],; ""gatk_docker"": ""image_build:gatk|4fa4b23a1b3756080aba2f1eecd791380b3921a6""; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_output:FunctionalEquivalenceTest.out_dataset"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcfs"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcf_indices"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcfs"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcf_indices"",; ""GatkDragenConcordanceEvaluation.hapMap"": ""gs:/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135:4745,benchmark,benchmarking,4745,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135,2,['benchmark'],['benchmarking']
Testability,""": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ],; ""gatk_docker"": ""image_build:gatk|5cdd2eaebb27509947cde3dbd26ee9a3fce72352""; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_output:FunctionalEquivalenceTest.out_dataset"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcfs"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcf_indices"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcfs"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcf_indices"",; ""GatkDragenConcordanceEvaluation.hapMap"": ""gs:/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659:4745,benchmark,benchmarking,4745,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659,2,['benchmark'],['benchmarking']
Testability,""": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ]; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_output:FunctionalEquivalenceTest.out_dataset"",; ""GatkDragenConcordanceEvaluation.docker_placeholder"": ""image_build:gatk|5cdd2eaebb27509947cde3dbd26ee9a3fce72352"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcfs"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcf_indices"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcfs"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcf_indices"",; ""GatkDra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440:4848,benchmark,benchmarking,4848,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440,2,['benchmark'],['benchmarking']
Testability,""":3101046070; },; {; ""name"":""GL000192.1"",; ""length"":547496,; ""tiledb_column_offset"":3101257243; },; {; ""name"":""NC_007605"",; ""length"":171823,; ""tiledb_column_offset"":3101804739; },; {; ""name"":""hs37d5"",; ""length"":35477943,; ""tiledb_column_offset"":3101976562; }; ]; }. And the header generated with GenomicsDBImport is:. ##fileformat=VCFv4.2; ##ALT=<ID=NON_REF,Description=""Represents any possible alternative allele at this location"">; ##FILTER=<ID=LowQual,Description=""Low quality"">; ##FILTER=<ID=PASS,Description=""All filters passed"">; ##FORMAT=<ID=AD,Number=R,Type=Integer,Description=""Allelic depths for the ref and alt alleles in the order listed"">; ##FORMAT=<ID=DP,Number=1,Type=Integer,Description=""Approximate read depth (reads with MQ=255 or with bad mates are filtered)"">; ##FORMAT=<ID=GQ,Number=1,Type=Integer,Description=""Genotype Quality"">; ##FORMAT=<ID=GT,Number=1,Type=String,Description=""Genotype"">; ##FORMAT=<ID=MIN_DP,Number=1,Type=Integer,Description=""Minimum DP observed within the GVCF block"">; ##FORMAT=<ID=PGT,Number=1,Type=String,Description=""Physical phasing haplotype information, describing how the alternate alleles are phased in relation to one another"">; ##FORMAT=<ID=PID,Number=1,Type=String,Description=""Physical phasing ID information, where each unique ID within a given sample (but not across samples) connects records within a phasing group"">; ##FORMAT=<ID=PL,Number=G,Type=Integer,Description=""Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification"">; ##FORMAT=<ID=SB,Number=4,Type=Integer,Description=""Per-sample component statistics which comprise the Fisher's Exact Test to detect strand bias."">; ##GVCFBlock0-1=minGQ=0(inclusive),maxGQ=1(exclusive); ##GVCFBlock1-2=minGQ=1(inclusive),maxGQ=2(exclusive); ##GVCFBlock10-11=minGQ=10(inclusive),maxGQ=11(exclusive); ##GVCFBlock11-12=minGQ=11(inclusive),maxGQ=12(exclusive); ##GVCFBlock12-13=minGQ=12(inclusive),maxGQ=13(exclusive); ##GVCFBlock13-14=minGQ=13(inclusive),maxGQ=14(exclu",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4514#issuecomment-372215582:11802,Test,Test,11802,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4514#issuecomment-372215582,1,['Test'],['Test']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthLabel"": ""CHM_GRCh38_SYNDIPv20180222"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.twist_exome.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_contr",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508:5244,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,5244,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508,76,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": null,; ""test_cromwell_job_id"": ""050d2d6e-4a50-4145-a9da-8a39731ebdd2"",; ""eval_cromwell_job_id"": ""0e5c32ab-65e6-451f-a04e-6a3f5e7fe5c8"",; ""created_at"": ""2023-05-04T15:40:52.834692"",; ""created_by"": null,; ""finished_at"": ""2023-05-04T17:03:53.525"",; ""results"": {; ""CHM controlHCprocesshours"": ""75.88741944444445"",; ""CHM controlHCsystemhours"": ""0",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535104202:15994,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15994,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535104202,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": null,; ""test_cromwell_job_id"": ""07271d7b-729d-4db9-862d-5f992a60a598"",; ""eval_cromwell_job_id"": ""89508d5f-29f1-4534-9fe1-220a80de17c4"",; ""created_at"": ""2022-07-22T17:23:11.546971"",; ""created_by"": null,; ""finished_at"": ""2022-07-23T02:09:23.327"",; ""results"": {; ""CHM controlHCprocesshours"": ""75.88741944444445"",; ""CHM controlHCsystemhours"": ""0",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193038382:15298,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15298,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193038382,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": null,; ""test_cromwell_job_id"": ""410a88f6-62ca-4745-89fd-df6e30aac65b"",; ""eval_cromwell_job_id"": ""bf86d5b6-04bd-4344-b4fc-8a1df66bb5d9"",; ""created_at"": ""2022-03-16T19:53:45.833854"",; ""created_by"": null,; ""finished_at"": ""2022-03-17T00:11:38.702"",; ""results"": {; ""CHM controlHCprocesshours"": ""75.88741944444445"",; ""CHM controlHCsystemhours"": ""0",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069765064:9075,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,9075,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069765064,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": null,; ""test_cromwell_job_id"": ""54997ade-421d-439f-acc9-abf50b3f9cb5"",; ""eval_cromwell_job_id"": ""6ea2705f-a3fa-41fc-8d17-a2c55d875eab"",; ""created_at"": ""2022-03-16T19:52:46.276978"",; ""created_by"": null,; ""finished_at"": ""2022-03-17T00:13:17.198"",; ""results"": {; ""CHM controlHCprocesshours"": ""75.88741944444445"",; ""CHM controlHCsystemhours"": ""0",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069766207:9075,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,9075,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069766207,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": null,; ""test_cromwell_job_id"": ""5e9a598e-1e80-4622-b153-78e97491a478"",; ""eval_cromwell_job_id"": ""f7eac327-c59c-43f7-a850-21bc3e0ccf52"",; ""created_at"": ""2022-07-12T17:28:58.385152"",; ""created_by"": null,; ""finished_at"": ""2022-07-13T02:47:47.016"",; ""results"": {; ""CHM controlHCprocesshours"": ""75.88741944444445"",; ""CHM controlHCsystemhours"": ""0",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182703672:15310,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15310,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182703672,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": null,; ""test_cromwell_job_id"": ""5f0f8f34-cdc7-46ff-a59d-2368edcdf007"",; ""eval_cromwell_job_id"": ""e6f57e40-2025-46fd-9aa0-d591a3799007"",; ""created_at"": ""2022-03-16T14:20:46.087600"",; ""created_by"": null,; ""finished_at"": ""2022-03-16T17:21:08.639"",; ""results"": {; ""CHM controlHCprocesshours"": ""75.88741944444445"",; ""CHM controlHCsystemhours"": ""0",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069378815:9075,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,9075,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069378815,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": null,; ""test_cromwell_job_id"": ""9886a710-334a-41eb-a495-6968d322730a"",; ""eval_cromwell_job_id"": ""9bc521dc-3c4c-4274-972c-9d1e4be850d5"",; ""created_at"": ""2023-05-03T15:51:41.295461"",; ""created_by"": null,; ""finished_at"": ""2023-05-04T01:24:02.606"",; ""results"": {; ""CHM controlHCprocesshours"": ""75.88741944444445"",; ""CHM controlHCsystemhours"": ""0",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590:15970,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15970,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": null,; ""test_cromwell_job_id"": ""a8ee297d-9fd6-433f-ac22-14488a09b832"",; ""eval_cromwell_job_id"": ""2a8ce326-baa5-4052-bff9-bd684393ff6c"",; ""created_at"": ""2022-07-25T15:10:00.795227"",; ""created_by"": null,; ""finished_at"": ""2022-07-26T00:11:26.646"",; ""results"": {; ""CHM controlHCprocesshours"": ""75.88741944444445"",; ""CHM controlHCsystemhours"": ""0",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194801748:15310,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15310,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194801748,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": null,; ""test_cromwell_job_id"": ""d6f96a63-9657-4ff6-9934-fe1ab3cea617"",; ""eval_cromwell_job_id"": ""e372bd14-cd1f-4563-8d8a-abf6b6ca7883"",; ""created_at"": ""2022-03-16T14:19:54.192086"",; ""created_by"": null,; ""finished_at"": ""2022-03-16T17:26:08.529"",; ""results"": {; ""CHM controlHCprocesshours"": ""75.88741944444445"",; ""CHM controlHCsystemhours"": ""0",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069381494:9075,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,9075,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069381494,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""167cbd3e-0835-47b5-8325-a853bd98ec9a"",; ""eval_cromwell_job_id"": ""43bcefb2-f38b-413d-9b65-06b489e64af1"",; ""created_at"": ""2023-06-02T17:26:47.097005"",; ""created_by"": null,; ""finished_at"": ""2023-06-03T03:48:32.144"",; ""results"": {; ""CHM controlHCprocesshours"": ""86.02092777777776"",; ""CHM",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574622123:15929,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15929,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574622123,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""36c1f67a-93a8-45b4-857a-ae22db7ac9e7"",; ""eval_cromwell_job_id"": ""81dbf637-d90c-4111-93b9-9cec426c5a39"",; ""created_at"": ""2023-08-18T19:32:11.841274"",; ""created_by"": null,; ""finished_at"": ""2023-08-19T05:42:56.447"",; ""results"": {; ""CHM controlHCprocesshours"": ""89.85896666666667"",; ""CHM",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497:15940,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15940,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""78cbc728-aca2-47d0-9a7a-554dba9f19f5"",; ""eval_cromwell_job_id"": ""f61c0caa-70a3-4ee5-8542-e78ba8364985"",; ""created_at"": ""2023-05-04T18:26:42.379437"",; ""created_by"": null,; ""finished_at"": ""2023-05-05T03:56:11.686"",; ""results"": {; ""CHM controlHCprocesshours"": ""81.1621222222222"",; ""CHM ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535665125:15970,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15970,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535665125,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""7b1f3c2d-059a-4391-92d7-b2f88045d8d5"",; ""eval_cromwell_job_id"": ""ba9f32d5-7b46-462c-8d1f-5692eee05534"",; ""created_at"": ""2023-08-21T22:38:12.285936"",; ""created_by"": null,; ""finished_at"": ""2023-08-22T09:23:01.973"",; ""results"": {; ""CHM controlHCprocesshours"": ""90.613975"",; ""CHM control",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441:15933,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15933,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""b7d06271-38b7-47d2-9d7c-af5543460de9"",; ""eval_cromwell_job_id"": ""beb77715-227e-4dbd-803f-4458c83607c8"",; ""created_at"": ""2023-05-12T15:09:42.984289"",; ""created_by"": null,; ""finished_at"": ""2023-05-13T01:07:11.594"",; ""results"": {; ""CHM controlHCprocesshours"": ""79.42513333333335"",; ""CHM",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1546478988:15964,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15964,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1546478988,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""b9fadac2-4e94-424f-a397-004684d1e51e"",; ""eval_cromwell_job_id"": ""acc9e2ac-b10a-4d6a-b586-cd3e47f04e41"",; ""created_at"": ""2023-05-16T17:15:43.799702"",; ""created_by"": null,; ""finished_at"": ""2023-05-17T02:34:53.616"",; ""results"": {; ""CHM controlHCprocesshours"": ""84.8981027777778"",; ""CHM ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099:15937,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15937,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""c18d0f5f-52c9-4e60-92ed-e4b33c6553c7"",; ""eval_cromwell_job_id"": ""9c49383b-01a9-4bc0-90fa-cde7e1090a47"",; ""created_at"": ""2023-05-15T22:38:43.733338"",; ""created_by"": null,; ""finished_at"": ""2023-05-16T08:30:08.614"",; ""results"": {; ""CHM controlHCprocesshours"": ""78.81892777777776"",; ""CHM",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169:15969,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15969,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""eval_cromwell_job_id"": ""ba9f32d5-7b46-462c-8d1f-5692eee05534"",; ""created_at"": ""2023-08-21T22:38:12.285936"",; ""created_by"": null,; ""finished_at"": ""2023-08-22T09:23:01.973"",; ""results"": {; ""CHM controlHCprocesshours"": ""90.613975"",; ""CHM controlHCsystemhours"": ""0.19898611111111109"",; ""CHM controlHCwallclockhours"": ""63.943677777777786"",; ""CHM controlHCwallclockmax"": ""3.1089944444444444"",; ""CHM controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-CHMSampleHeadToHead/BenchmarkComparison/b7ddd5f2-fded-4076-b163-33ad637fb5bd/call-CONTROLRuntimeTask/monitoring.pdf"",; ""CHM controlindelF1Score"": ""0.8724"",; ""CHM controlindelPrecision"": ""0.8814"",; ""CHM controlsnpF1Score"": ""0.9784"",; ""CHM controlsnpPrecision"": ""0.9706"",; ""CHM controlsnpRecall"": ""0.9863"",; ""CHM controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-CHMSampleHeadToHead/BenchmarkComparison/b7ddd5f2-fded-4076-b163-33ad637fb5bd/call-BenchmarkVCFControlSample/Benchmark/10080eab-b0ad-4752-80cb-fc6d34bd9ad9/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""93.63756388888888"",; ""CHM evalHCsystemhours"": ""0.6379805555555556"",; ""CHM evalHCwallclockhours"": ""70.50882222222222"",; ""CHM evalHCwallclockmax"": ""3.5186027777777777"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-CHMSampleHeadToHead/BenchmarkComparison/b7ddd5f2-fded-4076-b163-33ad637fb5bd/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-CHMSampleHeadToHead/BenchmarkComparison/b7ddd5f2-fded-4076-b163",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441:17608,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,17608,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2396?src=pr&el=h1) Report; > Merging [#2396](https://codecov.io/gh/broadinstitute/gatk/pull/2396?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/3c10554709a4f254300a3d38f24216c42da5913c?src=pr&el=desc) will **increase** coverage by `0.028%`. ```diff; @@ Coverage Diff @@; ## master #2396 +/- ##; ==============================================; + Coverage 76.14% 76.168% +0.028% ; - Complexity 10824 10829 +5 ; ==============================================; Files 748 748 ; Lines 39372 39372 ; Branches 6856 6856 ; ==============================================; + Hits 29978 29989 +11 ; + Misses 6802 6791 -11 ; Partials 2592 2592; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2396?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/compare/3c10554709a4f254300a3d38f24216c42da5913c...efe544dd515af5f5f25f6c73e8d54726fceca914?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `87.2% <ø> (ø)` | `37 <ø> (ø)` | :x: |; | [...institute/hellbender/engine/FeatureDataSource.java](https://codecov.io/gh/broadinstitute/gatk/compare/3c10554709a4f254300a3d38f24216c42da5913c...efe544dd515af5f5f25f6c73e8d54726fceca914?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvRmVhdHVyZURhdGFTb3VyY2UuamF2YQ==) | `77.477% <ø> (+0.901%)` | `38% <ø> (+1%)` | :white_check_mark: |; | [...ender/utils/nio/SeekableByteChannelPrefetcher.java](https://codecov.io/gh/broadinstitute/gatk/compare/3c10554709a4f254300a3d38f24216c42da5913c...efe544dd515af5f5f25f6c73e8d54726fceca914?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vU2Vla2FibGVCeXRlQ2hhbm5lbFByZWZldGNoZXIuamF2YQ==) | `79.747% <ø> (+6.329%)` | `22% <ø> (+4%)` | :white_check_mark: |. --,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2396#issuecomment-278174747:905,test,test,905,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2396#issuecomment-278174747,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2540?src=pr&el=h1) Report; > Merging [#2540](https://codecov.io/gh/broadinstitute/gatk/pull/2540?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/5ccfd0097c39b44464692fab1566d850f73aa5c7?src=pr&el=desc) will **increase** coverage by `0.523%`.; > The diff coverage is `82.075%`. ```diff; @@ Coverage Diff @@; ## master #2540 +/- ##; ===============================================; + Coverage 75.865% 76.388% +0.523% ; - Complexity 10839 10918 +79 ; ===============================================; Files 754 755 +1 ; Lines 39552 39653 +101 ; Branches 6907 6925 +18 ; ===============================================; + Hits 30006 30290 +284 ; + Misses 6936 6741 -195 ; - Partials 2610 2622 +12; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2540?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...titute/hellbender/utils/test/MiniClusterUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2540?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L01pbmlDbHVzdGVyVXRpbHMuamF2YQ==) | `89.474% <100%> (+1.974%)` | `7 <3> (+2)` | :arrow_up: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2540?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `71.318% <100%> (+22.481%)` | `34 <1> (+7)` | :arrow_up: |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/2540?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `80.612% <80.612%> (ø)` | `19 <19> (?)` | |; | [...institute/hellbender/engine/FeatureDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/2540?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGV,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2540#issuecomment-290122549:957,test,test,957,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2540#issuecomment-290122549,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=h1) Report; > Merging [#2558](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/a1c1663a07e767e4c6eb4dd5a977215407d5f28d?src=pr&el=desc) will **decrease** coverage by `0.006%`.; > The diff coverage is `34.146%`. ```diff; @@ Coverage Diff @@; ## master #2558 +/- ##; ===============================================; - Coverage 79.475% 79.469% -0.006% ; - Complexity 17740 17768 +28 ; ===============================================; Files 1159 1159 ; Lines 63951 64030 +79 ; Branches 9779 9798 +19 ; ===============================================; + Hits 50825 50884 +59 ; - Misses 9214 9233 +19 ; - Partials 3912 3913 +1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `62.602% <0%> (-15.176%)` | `32 <0> (ø)` | |; | [...rg/broadinstitute/hellbender/tools/PrintReads.java](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9QcmludFJlYWRzLmphdmE=) | `87.5% <100%> (ø)` | `4 <1> (ø)` | :arrow_down: |; | [...itute/hellbender/utils/test/SamAssertionUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1NhbUFzc2VydGlvblV0aWxzLmphdmE=) | `75.281% <100%> (ø)` | `40 <1> (ø)` | :arrow_down: |; | [...rg/broadinstitute/hellbender/utils/io/IOUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pby9JT1V0aWxzLmphdmE=) | `59.686% <100%> (+0.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332013111:960,test,test,960,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332013111,1,['test'],['test']
Testability,"# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2566?src=pr&el=h1) Report; > Merging [#2566](https://codecov.io/gh/broadinstitute/gatk/pull/2566?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/6859a1202a79c1b123eac73a3f70162c6a90783c?src=pr&el=desc) will **decrease** coverage by `0.015%`.; > The diff coverage is `n/a`. ```diff; @@ Coverage Diff @@; ## master #2566 +/- ##; ==============================================; - Coverage 76.386% 76.37% -0.015% ; + Complexity 10898 10895 -3 ; ==============================================; Files 754 754 ; Lines 39552 39552 ; Branches 6907 6907 ; ==============================================; - Hits 30212 30206 -6 ; - Misses 6727 6732 +5 ; - Partials 2613 2614 +1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2566?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ellbender/utils/test/CommandLineProgramTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/2566?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0NvbW1hbmRMaW5lUHJvZ3JhbVRlc3Rlci5qYXZh) | `85.714% <0%> (-4.762%)` | `7% <0%> (-1%)` | |; | [...oadinstitute/hellbender/utils/GenomeLocParser.java](https://codecov.io/gh/broadinstitute/gatk/pull/2566?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9HZW5vbWVMb2NQYXJzZXIuamF2YQ==) | `85.95% <0%> (-4.132%)` | `55% <0%> (-2%)` | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2566?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2566?src=pr&el=footer). Last update [6859a12...1df1909](https://codecov.io/gh/broadinstitute/gatk/pull/2566?src=pr&el=lastupdated). Read the [comment docs](https://doc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2566#issuecomment-291909459:923,test,test,923,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2566#issuecomment-291909459,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2595?src=pr&el=h1) Report; > Merging [#2595](https://codecov.io/gh/broadinstitute/gatk/pull/2595?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/bf993d8c6f6925ce6bdb67f50c0e33c6e5bc3336?src=pr&el=desc) will **increase** coverage by `1.133%`.; > The diff coverage is `61.842%`. ```diff; @@ Coverage Diff @@; ## master #2595 +/- ##; ===============================================; + Coverage 75.992% 77.126% +1.133% ; - Complexity 11033 11147 +114 ; ===============================================; Files 769 771 +2 ; Lines 40058 40115 +57 ; Branches 6979 6982 +3 ; ===============================================; + Hits 30441 30939 +498 ; + Misses 6978 6513 -465 ; - Partials 2639 2663 +24; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2595?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...titute/hellbender/utils/test/MiniClusterUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2595?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L01pbmlDbHVzdGVyVXRpbHMuamF2YQ==) | `89.474% <ø> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [...sv/DiscoverVariantsFromAlignedSGAContigsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/2595?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9EaXNjb3ZlclZhcmlhbnRzRnJvbUFsaWduZWRTR0FDb250aWdzU3BhcmsuamF2YQ==) | `0% <0%> (ø)` | `0 <0> (?)` | |; | [.../sv/DiscoverVariantsFromContigAlignmentsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/2595?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9EaXNjb3ZlclZhcmlhbnRzRnJvbUNvbnRpZ0FsaWdubWVudHNTcGFyay5qYXZh) | `100% <100%> (ø)` | `7 <1> (?)` | |; | [...stitute/hellbender/tools/spark/sv/SVVCFWriter.java](https://codecov.io/gh/broadinstitute/gatk/pull/2595?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2595#issuecomment-293918558:956,test,test,956,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2595#issuecomment-293918558,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2610?src=pr&el=h1) Report; > Merging [#2610](https://codecov.io/gh/broadinstitute/gatk/pull/2610?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/c7e73af684b2a1a080de0b748d60b361ba79ba1d?src=pr&el=desc) will **decrease** coverage by `0.029%`.; > The diff coverage is `21.739%`. ```diff; @@ Coverage Diff @@; ## master #2610 +/- ##; ==============================================; - Coverage 75.95% 75.921% -0.029% ; - Complexity 11045 11046 +1 ; ==============================================; Files 769 769 ; Lines 40125 40143 +18 ; Branches 6990 6993 +3 ; ==============================================; + Hits 30475 30477 +2 ; - Misses 7007 7019 +12 ; - Partials 2643 2647 +4; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2610?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...hellbender/utils/test/VariantContextTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2610?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1ZhcmlhbnRDb250ZXh0VGVzdFV0aWxzLmphdmE=) | `66.102% <21.739%> (-6.898%)` | `18 <2> (+2)` | |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/2610?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb250ZXh0RmFjdG9yeS5qYXZh) | `66.667% <0%> (-3.333%)` | `10% <0%> (ø)` | |; | [...roadinstitute/hellbender/engine/ProgressMeter.java](https://codecov.io/gh/broadinstitute/gatk/pull/2610?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUHJvZ3Jlc3NNZXRlci5qYXZh) | `93.75% <0%> (-1.563%)` | `21% <0%> (-1%)` | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2610#issuecomment-295846251:936,test,test,936,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2610#issuecomment-295846251,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2656?src=pr&el=h1) Report; > Merging [#2656](https://codecov.io/gh/broadinstitute/gatk/pull/2656?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/fd355c5a825f8d95c5d3d62e2c614cb96b056e94?src=pr&el=desc) will **decrease** coverage by `0.002%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #2656 +/- ##; ==============================================; - Coverage 76.13% 76.128% -0.002% ; + Complexity 11155 11154 -1 ; ==============================================; Files 769 769 ; Lines 40766 40767 +1 ; Branches 7113 7113 ; ==============================================; Hits 31035 31035 ; Misses 7064 7064 ; - Partials 2667 2668 +1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2656?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/2656?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `83.704% <100%> (+0.122%)` | `37 <0> (ø)` | :arrow_down: |; | [...roadinstitute/hellbender/engine/ProgressMeter.java](https://codecov.io/gh/broadinstitute/gatk/pull/2656?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUHJvZ3Jlc3NNZXRlci5qYXZh) | `93.75% <0%> (-1.563%)` | `21% <0%> (-1%)` | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2656#issuecomment-299089508:933,test,test,933,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2656#issuecomment-299089508,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2879?src=pr&el=h1) Report; > Merging [#2879](https://codecov.io/gh/broadinstitute/gatk/pull/2879?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/04dbeb205eb42854400291c3827fab18fd2db5b6?src=pr&el=desc) will **increase** coverage by `0.035%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #2879 +/- ##; ===============================================; + Coverage 79.971% 80.006% +0.035% ; - Complexity 16726 16754 +28 ; ===============================================; Files 1139 1139 ; Lines 60898 61014 +116 ; Branches 9436 9460 +24 ; ===============================================; + Hits 48701 48815 +114 ; + Misses 8401 8393 -8 ; - Partials 3796 3806 +10; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2879?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/2879?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `84.444% <100%> (+0.741%)` | `39 <1> (+1)` | :arrow_up: |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/2879?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb250ZXh0RmFjdG9yeS5qYXZh) | `70% <0%> (+3.333%)` | `10% <0%> (ø)` | :arrow_down: |; | [.../hellbender/tools/genomicsdb/GenomicsDBImport.java](https://codecov.io/gh/broadinstitute/gatk/pull/2879?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9nZW5vbWljc2RiL0dlbm9taWNzREJJbXBvcnQuamF2YQ==) | `77.5% <0%> (+4.461%)` | `72% <0%> (+24%)` | :arrow_up: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2879?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dG,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2879#issuecomment-306261746:959,test,test,959,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2879#issuecomment-306261746,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3058?src=pr&el=h1) Report; > Merging [#3058](https://codecov.io/gh/broadinstitute/gatk/pull/3058?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/33d316f0e8e35572bb60c83a144297c8557bb37d?src=pr&el=desc) will **increase** coverage by `<.001%`.; > The diff coverage is `81.818%`. ```diff; @@ Coverage Diff @@; ## master #3058 +/- ##; ===============================================; + Coverage 80.131% 80.132% +<.001% ; - Complexity 16971 16977 +6 ; ===============================================; Files 1143 1143 ; Lines 61569 61590 +21 ; Branches 9592 9597 +5 ; ===============================================; + Hits 49336 49353 +17 ; - Misses 8417 8419 +2 ; - Partials 3816 3818 +2; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3058?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ellbender/cmdline/StandardArgumentDefinitions.java](https://codecov.io/gh/broadinstitute/gatk/pull/3058?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL1N0YW5kYXJkQXJndW1lbnREZWZpbml0aW9ucy5qYXZh) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3058?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `83.582% <100%> (+0.376%)` | `36 <0> (ø)` | :arrow_down: |; | [...org/broadinstitute/hellbender/engine/GATKTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/3058?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvR0FUS1Rvb2wuamF2YQ==) | `91.282% <78.947%> (-1.373%)` | `89 <8> (+6)` | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3058#issuecomment-306895297:1248,test,test,1248,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3058#issuecomment-306895297,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3176?src=pr&el=h1) Report; > Merging [#3176](https://codecov.io/gh/broadinstitute/gatk/pull/3176?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/2f2eb73be34e822ebea84b9f116c506768c625a1?src=pr&el=desc) will **decrease** coverage by `0.471%`.; > The diff coverage is `93.182%`. ```diff; @@ Coverage Diff @@; ## master #3176 +/- ##; ===============================================; - Coverage 80.128% 79.657% -0.471% ; + Complexity 16995 16924 -71 ; ===============================================; Files 1145 1146 +1 ; Lines 61650 61659 +9 ; Branches 9609 9609 ; ===============================================; - Hits 49399 49116 -283 ; - Misses 8422 8723 +301 ; + Partials 3829 3820 -9; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3176?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3176?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `70.707% <ø> (-12.875%)` | `27 <0> (-9)` | |; | [...institute/hellbender/utils/test/TestResources.java](https://codecov.io/gh/broadinstitute/gatk/pull/3176?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1Rlc3RSZXNvdXJjZXMuamF2YQ==) | `93.182% <93.182%> (ø)` | `8 <8> (?)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3176?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-80.612%)` | `0% <0%> (-19%)` | |; | [...institute/hellbender/utils/gcs/GATKGCSOptions.java](https://codecov.io/gh/broadinstitute/gatk/pull/3176?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvR0FUS0dDU09wdGlvb,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3176#issuecomment-311650630:960,test,test,960,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3176#issuecomment-311650630,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=h1) Report; > Merging [#3228](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/9d9ca1ff31f99d8005c822e55aaccce967427383?src=pr&el=desc) will **increase** coverage by `0.008%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #3228 +/- ##; ===============================================; + Coverage 80.419% 80.427% +0.008% ; Complexity 17290 17290 ; ===============================================; Files 1165 1165 ; Lines 62596 62597 +1 ; Branches 9768 9768 ; ===============================================; + Hits 50339 50345 +6 ; + Misses 8352 8347 -5 ; Partials 3905 3905; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `83.704% <100%> (+0.122%)` | `36 <0> (ø)` | :arrow_down: |; | [.../tools/walkers/validation/CountFalsePositives.java](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ291bnRGYWxzZVBvc2l0aXZlcy5qYXZh) | `93.548% <100%> (ø)` | `7 <1> (ø)` | :arrow_down: |; | [.../tools/walkers/validation/FalsePositiveRecord.java](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vRmFsc2VQb3NpdGl2ZVJlY29yZC5qYXZh) | `100% <100%> (ø)` | `7 <2> (ø)` | :arrow_down: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlsc,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3228#issuecomment-314209891:939,test,test,939,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3228#issuecomment-314209891,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3421?src=pr&el=h1) Report; > Merging [#3421](https://codecov.io/gh/broadinstitute/gatk/pull/3421?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/0565ee66812e9d0dc09ce704bc06f5da4b56b95c?src=pr&el=desc) will **increase** coverage by `0.082%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #3421 +/- ##; ==============================================; + Coverage 80.51% 80.591% +0.082% ; - Complexity 17555 17654 +99 ; ==============================================; Files 1175 1175 ; Lines 63499 63776 +277 ; Branches 9896 9956 +60 ; ==============================================; + Hits 51123 51398 +275 ; - Misses 8425 8426 +1 ; - Partials 3951 3952 +1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3421?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ils/test/testers/AbstractMarkDuplicatesTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/3421?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L3Rlc3RlcnMvQWJzdHJhY3RNYXJrRHVwbGljYXRlc1Rlc3Rlci5qYXZh) | `79.487% <100%> (ø)` | `17 <0> (ø)` | :arrow_down: |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/3421?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb250ZXh0RmFjdG9yeS5qYXZh) | `71.233% <0%> (-2.74%)` | `11% <0%> (ø)` | |; | [...tionbiasvariantfilter/OrientationBiasFilterer.java](https://codecov.io/gh/broadinstitute/gatk/pull/3421?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leG9tZS9vcmllbnRhdGlvbmJpYXN2YXJpYW50ZmlsdGVyL09yaWVudGF0aW9uQmlhc0ZpbHRlcmVyLmphdmE=) | `95.492% <0%> (-0.064%)` | `80% <0%> (+24%)` | |; | [...bender/tools/walkers/annotator/FragmentLength.java](https://codecov.io/gh/broadinstitute/gatk/pull/3421?src=pr&el=tree#diff-c3JjL21haW4vamF,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3421#issuecomment-321356740:926,test,test,926,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3421#issuecomment-321356740,2,['test'],"['test', 'testers']"
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3447?src=pr&el=h1) Report; > Merging [#3447](https://codecov.io/gh/broadinstitute/gatk/pull/3447?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/054f7481b5fff4b781de7aa74433f7fd685ea2eb?src=pr&el=desc) will **increase** coverage by `0.265%`.; > The diff coverage is `75.275%`. ```diff; @@ Coverage Diff @@; ## master #3447 +/- ##; ===============================================; + Coverage 79.183% 79.448% +0.265% ; - Complexity 16844 18136 +1292 ; ===============================================; Files 1119 1189 +70 ; Lines 60168 65580 +5412 ; Branches 9498 9959 +461 ; ===============================================; + Hits 47643 52102 +4459 ; - Misses 8822 9487 +665 ; - Partials 3703 3991 +288; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3447?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [.../broadinstitute/hellbender/utils/LoggingUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3447/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9Mb2dnaW5nVXRpbHMuamF2YQ==) | `82.222% <ø> (ø)` | `11 <0> (ø)` | :arrow_down: |; | [...ellbender/cmdline/StandardArgumentDefinitions.java](https://codecov.io/gh/broadinstitute/gatk/pull/3447/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL1N0YW5kYXJkQXJndW1lbnREZWZpbml0aW9ucy5qYXZh) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3447/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `65.926% <ø> (ø)` | `35 <0> (ø)` | :arrow_down: |; | [...ellbender/utils/config/CustomBooleanConverter.java](https://codecov.io/gh/broadinstitute/gatk/pull/3447/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9jb2,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3447#issuecomment-323474032:975,Log,LoggingUtils,975,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3447#issuecomment-323474032,1,['Log'],['LoggingUtils']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=h1) Report; > Merging [#3475](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/c798c8489d4f04687396ec3e1405b854e5360ce1?src=pr&el=desc) will **decrease** coverage by `0.54%`.; > The diff coverage is `85.714%`. ```diff; @@ Coverage Diff @@; ## master #3475 +/- ##; ==============================================; - Coverage 79.554% 79.014% -0.54% ; + Complexity 17738 17588 -150 ; ==============================================; Files 1154 1151 -3 ; Lines 64092 63666 -426 ; Branches 9757 9748 -9 ; ==============================================; - Hits 50988 50305 -683 ; - Misses 9214 9486 +272 ; + Partials 3890 3875 -15; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `70.707% <ø> (-13.116%)` | `27 <0> (-9)` | |; | [...e/hellbender/utils/test/testers/SamFileTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L3Rlc3RlcnMvU2FtRmlsZVRlc3Rlci5qYXZh) | `90.217% <ø> (ø)` | `30 <0> (ø)` | :arrow_down: |; | [.../hellbender/utils/test/testers/CleanSamTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L3Rlc3RlcnMvQ2xlYW5TYW1UZXN0ZXIuamF2YQ==) | `0% <0%> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...llbender/utils/test/SimpleIntervalTestFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1NpbXBsZUludGVydm,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-324298700:962,test,test,962,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-324298700,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3616?src=pr&el=h1) Report; > Merging [#3616](https://codecov.io/gh/broadinstitute/gatk/pull/3616?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/59f1498b3bbb40be02b220eca868c14df2fc1901?src=pr&el=desc) will **increase** coverage by `0.003%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #3616 +/- ##; ===============================================; + Coverage 79.721% 79.724% +0.003% ; Complexity 18189 18189 ; ===============================================; Files 1223 1223 ; Lines 66735 66735 ; Branches 10426 10426 ; ===============================================; + Hits 53202 53204 +2 ; + Misses 9317 9315 -2 ; Partials 4216 4216; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3616?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...hellbender/utils/test/VariantContextTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3616?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1ZhcmlhbnRDb250ZXh0VGVzdFV0aWxzLmphdmE=) | `79.602% <100%> (ø)` | `49 <0> (ø)` | :arrow_down: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3616?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `79.87% <0%> (+1.299%)` | `39% <0%> (ø)` | :arrow_down: |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3616#issuecomment-332307937:923,test,test,923,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3616#issuecomment-332307937,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3665?src=pr&el=h1) Report; > Merging [#3665](https://codecov.io/gh/broadinstitute/gatk/pull/3665?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/4bf75cd3d981d8005a2fa90fc1f8f14ebb20554b?src=pr&el=desc) will **increase** coverage by `0.003%`.; > The diff coverage is `85.714%`. ```diff; @@ Coverage Diff @@; ## master #3665 +/- ##; ===============================================; + Coverage 79.266% 79.268% +0.003% ; Complexity 17395 17395 ; ===============================================; Files 1144 1144 ; Lines 62930 62938 +8 ; Branches 9551 9552 +1 ; ===============================================; + Hits 49882 49890 +8 ; + Misses 9241 9240 -1 ; - Partials 3807 3808 +1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3665?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...itute/hellbender/utils/test/SamAssertionUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3665?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1NhbUFzc2VydGlvblV0aWxzLmphdmE=) | `75.281% <85.714%> (-0.013%)` | `40 <0> (ø)` | |; | [...er/tools/spark/sv/discovery/AlignmentInterval.java](https://codecov.io/gh/broadinstitute/gatk/pull/3665?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvQWxpZ25tZW50SW50ZXJ2YWwuamF2YQ==) | `90.517% <0%> (ø)` | `63% <0%> (ø)` | :arrow_down: |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/3665?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb250ZXh0RmFjdG9yeS5qYXZh) | `73.973% <0%> (+2.74%)` | `11% <0%> (ø)` | :arrow_down: |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3665#issuecomment-334470972:941,test,test,941,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3665#issuecomment-334470972,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3667?src=pr&el=h1) Report; > Merging [#3667](https://codecov.io/gh/broadinstitute/gatk/pull/3667?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/daa0cd17cc97f63eb219f16d5103759133cf44ce?src=pr&el=desc) will **increase** coverage by `0.008%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #3667 +/- ##; ===============================================; + Coverage 79.264% 79.273% +0.008% ; - Complexity 17394 17397 +3 ; ===============================================; Files 1144 1144 ; Lines 62930 62931 +1 ; Branches 9551 9551 ; ===============================================; + Hits 49881 49887 +6 ; + Misses 9241 9239 -2 ; + Partials 3808 3805 -3; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3667?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...titute/hellbender/utils/test/ArgumentsBuilder.java](https://codecov.io/gh/broadinstitute/gatk/pull/3667?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0FyZ3VtZW50c0J1aWxkZXIuamF2YQ==) | `100% <100%> (ø)` | `19 <1> (+1)` | :arrow_up: |; | [.../hellbender/tools/genomicsdb/GenomicsDBImport.java](https://codecov.io/gh/broadinstitute/gatk/pull/3667?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9nZW5vbWljc2RiL0dlbm9taWNzREJJbXBvcnQuamF2YQ==) | `74.329% <100%> (+0.383%)` | `54 <7> (+1)` | :arrow_up: |; | [...er/tools/spark/sv/discovery/AlignmentInterval.java](https://codecov.io/gh/broadinstitute/gatk/pull/3667?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvQWxpZ25tZW50SW50ZXJ2YWwuamF2YQ==) | `90.948% <0%> (+0.862%)` | `63% <0%> (+1%)` | :arrow_up: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3667?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsb,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3667#issuecomment-334531567:941,test,test,941,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3667#issuecomment-334531567,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3681?src=pr&el=h1) Report; > Merging [#3681](https://codecov.io/gh/broadinstitute/gatk/pull/3681?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/ac7be03100e63749699fd023061deaff291709e7?src=pr&el=desc) will **decrease** coverage by `0.004%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #3681 +/- ##; ===============================================; - Coverage 79.399% 79.394% -0.004% ; + Complexity 17357 17355 -2 ; ===============================================; Files 1138 1138 ; Lines 62637 62638 +1 ; Branches 9521 9521 ; ===============================================; - Hits 49733 49731 -2 ; - Misses 9108 9110 +2 ; - Partials 3796 3797 +1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3681?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3681?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `83.824% <100%> (+0.12%)` | `36 <0> (ø)` | :arrow_down: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3681?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `78.571% <0%> (-1.299%)` | `39% <0%> (ø)` | |; | [...er/tools/spark/sv/discovery/AlignmentInterval.java](https://codecov.io/gh/broadinstitute/gatk/pull/3681?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvQWxpZ25tZW50SW50ZXJ2YWwuamF2YQ==) | `90.517% <0%> (-0.431%)` | `62% <0%> (-2%)` | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3681#issuecomment-335492487:949,test,test,949,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3681#issuecomment-335492487,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3683?src=pr&el=h1) Report; > Merging [#3683](https://codecov.io/gh/broadinstitute/gatk/pull/3683?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/01617bc8c8effb9b516345f8feabebffdcdda272?src=pr&el=desc) will **increase** coverage by `0.007%`.; > The diff coverage is `n/a`. ```diff; @@ Coverage Diff @@; ## master #3683 +/- ##; ===============================================; + Coverage 79.402% 79.408% +0.007% ; - Complexity 17369 17370 +1 ; ===============================================; Files 1139 1139 ; Lines 62690 62681 -9 ; Branches 9527 9526 -1 ; ===============================================; - Hits 49777 49774 -3 ; + Misses 9112 9109 -3 ; + Partials 3801 3798 -3; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3683?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3683?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `83.704% <0%> (-0.12%)` | `36% <0%> (ø)` | |; | [...te/hellbender/engine/filters/SampleReadFilter.java](https://codecov.io/gh/broadinstitute/gatk/pull/3683?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZmlsdGVycy9TYW1wbGVSZWFkRmlsdGVyLmphdmE=) | `85.714% <0%> (ø)` | `3% <0%> (ø)` | :arrow_down: |; | [...ender/engine/filters/MappingQualityReadFilter.java](https://codecov.io/gh/broadinstitute/gatk/pull/3683?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZmlsdGVycy9NYXBwaW5nUXVhbGl0eVJlYWRGaWx0ZXIuamF2YQ==) | `100% <0%> (ø)` | `5% <0%> (ø)` | :arrow_down: |; | [.../hellbender/engine/filters/ReadNameReadFilter.java](https://codecov.io/gh/broadinstitute/gatk/pull/3683?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZmlsdGVycy9SZWFkTmF,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3683#issuecomment-335588748:951,test,test,951,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3683#issuecomment-335588748,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3767?src=pr&el=h1) Report; > Merging [#3767](https://codecov.io/gh/broadinstitute/gatk/pull/3767?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/81c0cd8d893468f835d68311121f3b309e65345d?src=pr&el=desc) will **increase** coverage by `0.008%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #3767 +/- ##; ===============================================; + Coverage 79.436% 79.445% +0.008% ; - Complexity 17839 17842 +3 ; ===============================================; Files 1170 1170 ; Lines 64419 64431 +12 ; Branches 9832 9832 ; ===============================================; + Hits 51172 51187 +15 ; + Misses 9329 9328 -1 ; + Partials 3918 3916 -2; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3767?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3767?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `65.926% <100%> (+3.324%)` | `35 <3> (+3)` | :arrow_up: |; | [...er/tools/spark/sv/discovery/AlignmentInterval.java](https://codecov.io/gh/broadinstitute/gatk/pull/3767?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvQWxpZ25tZW50SW50ZXJ2YWwuamF2YQ==) | `90.517% <0%> (ø)` | `63% <0%> (ø)` | :arrow_down: |; | [...adinstitute/hellbender/engine/ReadsDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/3767?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUmVhZHNEYXRhU291cmNlLmphdmE=) | `92.424% <0%> (+1.515%)` | `63% <0%> (ø)` | :arrow_down: |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/3767?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3767#issuecomment-344759317:951,test,test,951,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3767#issuecomment-344759317,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/4000?src=pr&el=h1) Report; > Merging [#4000](https://codecov.io/gh/broadinstitute/gatk/pull/4000?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/a9efb666c8bbecb9545c957af6f38b0fb1ef8bee?src=pr&el=desc) will **increase** coverage by `0.393%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #4000 +/- ##; ===============================================; + Coverage 78.974% 79.367% +0.393% ; - Complexity 16534 17420 +886 ; ===============================================; Files 1059 1075 +16 ; Lines 59160 61634 +2474 ; Branches 9616 10242 +626 ; ===============================================; + Hits 46721 48917 +2196 ; - Misses 8703 8888 +185 ; - Partials 3736 3829 +93; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4000?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...hellbender/utils/test/VariantContextTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4000/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1ZhcmlhbnRDb250ZXh0VGVzdFV0aWxzLmphdmE=) | `79.73% <100%> (+0.758%)` | `57 <3> (+4)` | :arrow_up: |; | [...e/hellbender/tools/funcotator/FuncotatorUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4000/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JVdGlscy5qYXZh) | `74.161% <0%> (-2.351%)` | `141% <0%> (+6%)` | |; | [...llbender/transformers/NDNCigarReadTransformer.java](https://codecov.io/gh/broadinstitute/gatk/pull/4000/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90cmFuc2Zvcm1lcnMvTkROQ2lnYXJSZWFkVHJhbnNmb3JtZXIuamF2YQ==) | `94.118% <0%> (-1.535%)` | `14% <0%> (+4%)` | |; | [...itute/hellbender/tools/walkers/bqsr/ApplyBQSR.java](https://codecov.io/gh/broadinstitute/gatk/pull/4000/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcv,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4000#issuecomment-355687116:955,test,test,955,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4000#issuecomment-355687116,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/4210?src=pr&el=h1) Report; > Merging [#4210](https://codecov.io/gh/broadinstitute/gatk/pull/4210?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/9c35a3dcede3670208eb1a4c898cb4c33fb4c4db?src=pr&el=desc) will **decrease** coverage by `0.007%`.; > The diff coverage is `33.333%`. ```diff; @@ Coverage Diff @@; ## master #4210 +/- ##; ==============================================; - Coverage 78.477% 78.47% -0.007% ; + Complexity 16424 16423 -1 ; ==============================================; Files 1041 1041 ; Lines 59099 59099 ; Branches 9673 9673 ; ==============================================; - Hits 46379 46375 -4 ; - Misses 8978 8981 +3 ; - Partials 3742 3743 +1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4210?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...llbender/utils/test/SimpleIntervalTestFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/4210/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1NpbXBsZUludGVydmFsVGVzdEZhY3RvcnkuamF2YQ==) | `0% <0%> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...kers/variantutils/UpdateVCFSequenceDictionary.java](https://codecov.io/gh/broadinstitute/gatk/pull/4210/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9VcGRhdGVWQ0ZTZXF1ZW5jZURpY3Rpb25hcnkuamF2YQ==) | `86.957% <100%> (ø)` | `14 <0> (ø)` | :arrow_down: |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/4210/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb250ZXh0RmFjdG9yeS5qYXZh) | `71.233% <0%> (-2.74%)` | `11% <0%> (ø)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4210/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRp,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4210#issuecomment-359081841:928,test,test,928,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4210#issuecomment-359081841,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/4423?src=pr&el=h1) Report; > Merging [#4423](https://codecov.io/gh/broadinstitute/gatk/pull/4423?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/6e7a9bec69184aca7a8884896e86af0ad21ed9fd?src=pr&el=desc) will **increase** coverage by `0.362%`.; > The diff coverage is `n/a`. ```diff; @@ Coverage Diff @@; ## master #4423 +/- ##; ==============================================; + Coverage 79.04% 79.402% +0.362% ; - Complexity 16447 17620 +1173 ; ==============================================; Files 1047 1055 +8 ; Lines 59189 63340 +4151 ; Branches 9672 10754 +1082 ; ==============================================; + Hits 46783 50293 +3510 ; - Misses 8645 9125 +480 ; - Partials 3761 3922 +161; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4423?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...titute/hellbender/utils/logging/OneShotLogger.java](https://codecov.io/gh/broadinstitute/gatk/pull/4423/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9sb2dnaW5nL09uZVNob3RMb2dnZXIuamF2YQ==) | `78.571% <0%> (-21.429%)` | `3% <0%> (ø)` | |; | [...ools/spark/sv/evidence/IntervalCoverageFinder.java](https://codecov.io/gh/broadinstitute/gatk/pull/4423/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9ldmlkZW5jZS9JbnRlcnZhbENvdmVyYWdlRmluZGVyLmphdmE=) | `82.222% <0%> (-6.239%)` | `19% <0%> (+11%)` | |; | [...er/tools/walkers/annotator/ReadPosRankSumTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4423/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9SZWFkUG9zUmFua1N1bVRlc3QuamF2YQ==) | `94.231% <0%> (-5.769%)` | `25% <0%> (+15%)` | |; | [.../DiscoverVariantsFromContigAlignmentsSAMSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4423/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2Y,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4423#issuecomment-366379307:959,log,logging,959,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4423#issuecomment-366379307,1,['log'],['logging']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/4563?src=pr&el=h1) Report; > Merging [#4563](https://codecov.io/gh/broadinstitute/gatk/pull/4563?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/3806e15c5626e6bc5379b2b1dad705617057a7fd?src=pr&el=desc) will **increase** coverage by `0.075%`.; > The diff coverage is `43.802%`. ```diff; @@ Coverage Diff @@; ## master #4563 +/- ##; ===============================================; + Coverage 79.857% 79.932% +0.075% ; - Complexity 17054 17347 +293 ; ===============================================; Files 1067 1067 ; Lines 62031 63140 +1109 ; Branches 10039 10311 +272 ; ===============================================; + Hits 49536 50469 +933 ; - Misses 8582 8696 +114 ; - Partials 3913 3975 +62; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4563?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4563/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `64.444% <0%> (-0.481%)` | `33 <0> (ø)` | |; | [...r/dataSources/cosmic/CosmicFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/4563/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL2Nvc21pYy9Db3NtaWNGdW5jb3RhdGlvbkZhY3RvcnkuamF2YQ==) | `76.238% <0%> (-4.815%)` | `21 <0> (ø)` | |; | [...ncotator/mafOutput/MafOutputRendererConstants.java](https://codecov.io/gh/broadinstitute/gatk/pull/4563/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL21hZk91dHB1dC9NYWZPdXRwdXRSZW5kZXJlckNvbnN0YW50cy5qYXZh) | `98.98% <100%> (ø)` | `1 <0> (ø)` | :arrow_down: |; | [...tools/funcotator/DataSourceFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/4563/diff?src=pr&el=tree#diff-,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4563#issuecomment-375688881:969,test,test,969,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4563#issuecomment-375688881,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/4916?src=pr&el=h1) Report; > Merging [#4916](https://codecov.io/gh/broadinstitute/gatk/pull/4916?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/b225d665f92fad1ab5ffb9d0030be02f29f2bb77?src=pr&el=desc) will **increase** coverage by `0.001%`.; > The diff coverage is `88.889%`. ```diff; @@ Coverage Diff @@; ## master #4916 +/- ##; ===============================================; + Coverage 86.478% 86.479% +0.001% ; - Complexity 29152 29165 +13 ; ===============================================; Files 1813 1814 +1 ; Lines 135227 135305 +78 ; Branches 15020 15023 +3 ; ===============================================; + Hits 116942 117011 +69 ; - Misses 12825 12831 +6 ; - Partials 5460 5463 +3; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4916?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...titute/hellbender/utils/test/ArgumentsBuilder.java](https://codecov.io/gh/broadinstitute/gatk/pull/4916/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0FyZ3VtZW50c0J1aWxkZXIuamF2YQ==) | `90.909% <ø> (ø)` | `20 <0> (ø)` | :arrow_down: |; | [...e/hellbender/engine/ArgumentsBuilderWithJIMFS.java](https://codecov.io/gh/broadinstitute/gatk/pull/4916/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvQXJndW1lbnRzQnVpbGRlcldpdGhKSU1GUy5qYXZh) | `82.5% <82.5%> (ø)` | `8 <8> (?)` | |; | [.../hellbender/engine/CRAMSupportIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4916/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvQ1JBTVN1cHBvcnRJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `92.969% <95.122%> (+0.747%)` | `24 <5> (+5)` | :arrow_up: |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4916#issuecomment-398593023:961,test,test,961,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4916#issuecomment-398593023,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/4955?src=pr&el=h1) Report; > Merging [#4955](https://codecov.io/gh/broadinstitute/gatk/pull/4955?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/4521d32e6aca6f2e98dc4ce3b7807057cd407998?src=pr&el=desc) will **decrease** coverage by `20.624%`.; > The diff coverage is `n/a`. ```diff; @@ Coverage Diff @@; ## master #4955 +/- ##; ================================================; - Coverage 80.797% 60.173% -20.624% ; + Complexity 17952 12779 -5173 ; ================================================; Files 1095 1095 ; Lines 64609 64609 ; Branches 10394 10394 ; ================================================; - Hits 52202 38877 -13325 ; - Misses 8379 21497 +13118 ; - Partials 4028 4235 +207; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4955?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...institute/hellbender/cmdline/TestProgramGroup.java](https://codecov.io/gh/broadinstitute/gatk/pull/4955/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL1Rlc3RQcm9ncmFtR3JvdXAuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-3%)` | |; | [...er/utils/smithwaterman/SWNativeAlignerWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4955/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NXTmF0aXZlQWxpZ25lcldyYXBwZXIuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-6%)` | |; | [...llbender/engine/filters/CountingVariantFilter.java](https://codecov.io/gh/broadinstitute/gatk/pull/4955/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZmlsdGVycy9Db3VudGluZ1ZhcmlhbnRGaWx0ZXIuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-18%)` | |; | [...ne/programgroups/CoverageAnalysisProgramGroup.java](https://codecov.io/gh/broadinstitute/gatk/pull/4955/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlc,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4955#issuecomment-400789881:963,Test,TestProgramGroup,963,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4955#issuecomment-400789881,1,['Test'],['TestProgramGroup']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/4971?src=pr&el=h1) Report; > Merging [#4971](https://codecov.io/gh/broadinstitute/gatk/pull/4971?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/e4668126a05727e8b8dac63aa5e223a6fd1b904a?src=pr&el=desc) will **decrease** coverage by `0.157%`.; > The diff coverage is `97.222%`. ```diff; @@ Coverage Diff @@; ## master #4971 +/- ##; ===============================================; - Coverage 86.352% 86.194% -0.157% ; - Complexity 28592 29040 +448 ; ===============================================; Files 1782 1782 ; Lines 132367 133721 +1354 ; Branches 14746 15130 +384 ; ===============================================; + Hits 114301 115260 +959 ; - Misses 12753 13065 +312 ; - Partials 5313 5396 +83; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4971?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...iscovery/TestUtilsForAssemblyBasedSVDiscovery.java](https://codecov.io/gh/broadinstitute/gatk/pull/4971/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvVGVzdFV0aWxzRm9yQXNzZW1ibHlCYXNlZFNWRGlzY292ZXJ5LmphdmE=) | `95.522% <100%> (+10.448%)` | `13 <0> (+1)` | :arrow_up: |; | [...covery/inference/TestUtilsCpxVariantInference.java](https://codecov.io/gh/broadinstitute/gatk/pull/4971/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvaW5mZXJlbmNlL1Rlc3RVdGlsc0NweFZhcmlhbnRJbmZlcmVuY2UuamF2YQ==) | `99.512% <100%> (-0.021%)` | `7 <1> (ø)` | |; | [...lignment/AssemblyContigAlignmentsConfigPicker.java](https://codecov.io/gh/broadinstitute/gatk/pull/4971/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvYWxpZ25tZW50L0Fzc2VtYmx5Q29udGlnQWxpZ25tZW50c0NvbmZpZ1BpY2tlci5qYXZh) | `93.515% <91.667%> (+0.526%)` | `95 <27> (+8)` | :arrow_up: |; | [.../AssemblyCon,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4971#issuecomment-401503759:952,Test,TestUtilsForAssemblyBasedSVDiscovery,952,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4971#issuecomment-401503759,1,['Test'],['TestUtilsForAssemblyBasedSVDiscovery']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5116?src=pr&el=h1) Report; > :exclamation: No coverage uploaded for pull request base (`master@43750e9`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).; > The diff coverage is `93.478%`. ```diff; @@ Coverage Diff @@; ## master #5116 +/- ##; ==========================================; Coverage ? 86.707% ; Complexity ? 29097 ; ==========================================; Files ? 1810 ; Lines ? 134816 ; Branches ? 14939 ; ==========================================; Hits ? 116895 ; Misses ? 12521 ; Partials ? 5400; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5116?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...iscovery/TestUtilsForAssemblyBasedSVDiscovery.java](https://codecov.io/gh/broadinstitute/gatk/pull/5116/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvVGVzdFV0aWxzRm9yQXNzZW1ibHlCYXNlZFNWRGlzY292ZXJ5LmphdmE=) | `95.522% <ø> (ø)` | `13 <0> (?)` | |; | [...e/hellbender/tools/spark/sv/utils/SVFileUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5116/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi91dGlscy9TVkZpbGVVdGlscy5qYXZh) | `24.691% <ø> (ø)` | `4 <0> (?)` | |; | [...tsFromContigAlignmentsSAMSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5116/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9pbnRlZ3JhdGlvbi9EaXNjb3ZlclZhcmlhbnRzRnJvbUNvbnRpZ0FsaWdubWVudHNTQU1TcGFya0ludGVncmF0aW9uVGVzdC5qYXZh) | `97.561% <ø> (ø)` | `6 <0> (?)` | |; | [...der/tools/spark/sv/discovery/SvDiscoveryUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5116/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvU3ZEaXNjb3ZlcnlVdGlscy5,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5116#issuecomment-413255793:801,Test,TestUtilsForAssemblyBasedSVDiscovery,801,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5116#issuecomment-413255793,1,['Test'],['TestUtilsForAssemblyBasedSVDiscovery']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5117?src=pr&el=h1) Report; > Merging [#5117](https://codecov.io/gh/broadinstitute/gatk/pull/5117?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/df3fb9d2715ba1db4877f4f77286573569c3314a?src=pr&el=desc) will **decrease** coverage by `0.171%`.; > The diff coverage is `32.061%`. ```diff; @@ Coverage Diff @@; ## master #5117 +/- ##; ===============================================; - Coverage 86.506% 86.335% -0.171% ; - Complexity 29259 29293 +34 ; ===============================================; Files 1814 1817 +3 ; Lines 135623 136028 +405 ; Branches 15063 15122 +59 ; ===============================================; + Hits 117322 117440 +118 ; - Misses 12833 13132 +299 ; + Partials 5468 5456 -12; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5117?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...iscovery/TestUtilsForAssemblyBasedSVDiscovery.java](https://codecov.io/gh/broadinstitute/gatk/pull/5117/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvVGVzdFV0aWxzRm9yQXNzZW1ibHlCYXNlZFNWRGlzY292ZXJ5LmphdmE=) | `95.522% <ø> (ø)` | `13 <0> (ø)` | :arrow_down: |; | [...e/hellbender/tools/spark/sv/utils/SVFileUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5117/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi91dGlscy9TVkZpbGVVdGlscy5qYXZh) | `24.691% <ø> (+1.235%)` | `4 <0> (ø)` | :arrow_down: |; | [...ne/AbstractIntervalTreeBasedConcordanceWalker.java](https://codecov.io/gh/broadinstitute/gatk/pull/5117/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvQWJzdHJhY3RJbnRlcnZhbFRyZWVCYXNlZENvbmNvcmRhbmNlV2Fsa2VyLmphdmE=) | `0% <0%> (ø)` | `0 <0> (?)` | |; | [...der/tools/spark/sv/discovery/SvDiscoveryUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5117/diff?src=,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5117#issuecomment-413279333:952,Test,TestUtilsForAssemblyBasedSVDiscovery,952,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5117#issuecomment-413279333,1,['Test'],['TestUtilsForAssemblyBasedSVDiscovery']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5607?src=pr&el=h1) Report; > Merging [#5607](https://codecov.io/gh/broadinstitute/gatk/pull/5607?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/b7f90f45458a0c2064f16ede629a356b2737e17f?src=pr&el=desc) will **increase** coverage by `0.015%`.; > The diff coverage is `98.636%`. ```diff; @@ Coverage Diff @@; ## master #5607 +/- ##; ===============================================; + Coverage 87.041% 87.056% +0.015% ; - Complexity 32076 32097 +21 ; ===============================================; Files 1977 1977 ; Lines 147082 147263 +181 ; Branches 16171 16185 +14 ; ===============================================; + Hits 128021 128201 +180 ; + Misses 13157 13156 -1 ; - Partials 5904 5906 +2; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5607?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...dinstitute/hellbender/testutils/ReadTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5607/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90ZXN0dXRpbHMvUmVhZFRlc3RVdGlscy5qYXZh) | `95.455% <ø> (ø)` | `5 <0> (ø)` | :arrow_down: |; | [...dinstitute/hellbender/utils/pileup/ReadPileup.java](https://codecov.io/gh/broadinstitute/gatk/pull/5607/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9waWxldXAvUmVhZFBpbGV1cC5qYXZh) | `92.258% <100%> (+0.05%)` | `69 <0> (ø)` | :arrow_down: |; | [...lotypecaller/ReferenceConfidenceModelUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5607/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9SZWZlcmVuY2VDb25maWRlbmNlTW9kZWxVbml0VGVzdC5qYXZh) | `95.701% <100%> (+2.014%)` | `50 <0> (+3)` | :arrow_up: |; | [...roadinstitute/hellbender/utils/read/ReadUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5607/diff?src=pr&el=tree#diff-c3JjL21haW,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5607#issuecomment-457738122:959,test,testutils,959,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5607#issuecomment-457738122,1,['test'],['testutils']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5665?src=pr&el=h1) Report; > Merging [#5665](https://codecov.io/gh/broadinstitute/gatk/pull/5665?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/9c22c343832d1cfc114a2efd68af1ae877adad5f?src=pr&el=desc) will **decrease** coverage by `17.044%`.; > The diff coverage is `99.535%`. ```diff; @@ Coverage Diff @@; ## master #5665 +/- ##; ===============================================; - Coverage 87.05% 70.006% -17.044% ; + Complexity 31700 25058 -6642 ; ===============================================; Files 1938 1938 ; Lines 146097 146393 +296 ; Branches 16128 16174 +46 ; ===============================================; - Hits 127178 102484 -24694 ; - Misses 13033 38882 +25849 ; + Partials 5886 5027 -859; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5665?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...dinstitute/hellbender/testutils/ReadTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5665/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90ZXN0dXRpbHMvUmVhZFRlc3RVdGlscy5qYXZh) | `0% <ø> (-95.455%)` | `0 <0> (-5)` | |; | [...dinstitute/hellbender/utils/pileup/ReadPileup.java](https://codecov.io/gh/broadinstitute/gatk/pull/5665/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9waWxldXAvUmVhZFBpbGV1cC5qYXZh) | `89.032% <100%> (-3.176%)` | `62 <0> (-7)` | |; | [...roadinstitute/hellbender/utils/read/ReadUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5665/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL1JlYWRVdGlscy5qYXZh) | `77.752% <100%> (-2.295%)` | `202 <1> (-3)` | |; | [...lotypecaller/ReferenceConfidenceModelUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5665/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdH,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5665#issuecomment-462897263:970,test,testutils,970,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5665#issuecomment-462897263,1,['test'],['testutils']
Testability,"## Test data. I've created a snippet of my `zeta` and also generated the output of the following command. The data are derived from gnomAD and so it can be used for a test case. Again, zeta is the output of a Picard LiftoverVcf command and requires GRCh38 as the reference. [zeta_snippet_shlee.zip](https://github.com/broadinstitute/gatk/files/1245839/zeta_snippet_shlee.zip). ```; WMCF9-CB5:Mutect2 shlee$ java -jar $GATK -T LeftAlignAndTrimVariants -R ~/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V zeta_snippet.vcf.gz -o zeta_snippet_leftalign.vcf.gz; INFO 10:49:20,809 HelpFormatter - -------------------------------------------------------------------------------- ; INFO 10:49:20,810 HelpFormatter - The Genome Analysis Toolkit (GATK) v3.7-0-gcfedb67, Compiled 2016/12/12 11:21:18 ; INFO 10:49:20,810 HelpFormatter - Copyright (c) 2010-2016 The Broad Institute ; INFO 10:49:20,811 HelpFormatter - For support and documentation go to https://software.broadinstitute.org/gatk ; INFO 10:49:20,811 HelpFormatter - [Wed Aug 23 10:49:20 EDT 2017] Executing on Mac OS X 10.11.6 x86_64 ; INFO 10:49:20,811 HelpFormatter - Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14 ; INFO 10:49:20,813 HelpFormatter - Program Args: -T LeftAlignAndTrimVariants -R /Users/shlee/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V zeta_snippet.vcf.gz -o zeta_snippet_leftalign.vcf.gz ; INFO 10:49:20,819 HelpFormatter - Executing as shlee@WMCF9-CB5 on Mac OS X 10.11.6 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14. ; INFO 10:49:20,819 HelpFormatter - Date/Time: 2017/08/23 10:49:20 ; INFO 10:49:20,819 HelpFormatter - -------------------------------------------------------------------------------- ; INFO 10:49:20,819 HelpFormatter - -------------------------------------------------------------------------------- ; INFO 10:49:20,830 GenomeAnalysisEngine - Strictness is SILENT ; INFO 10:49:21,846 GenomeAnalysisEngine - Downsampling Settings: Method: BY_SAMPLE, Target Coverage: 1000 ; WARN 10:49:",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-324361091:3,Test,Test,3,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-324361091,2,"['Test', 'test']","['Test', 'test']"
Testability,"## Update:. ### A [broad institute forum post](https://gatk.broadinstitute.org/hc/en-us/community/posts/360061666671/comments/360010377231) gave the solution:. #### If you paste this text into the `gatkcondaenv.yaml` file:. ```; # Conda environment for GATK Python Tools; #; # Only update this environment if there is a *VERY* good reason to do so!; # If the build is broken but could be fixed by doing something else, then do that thing instead.; # Ensuring the correct environment for canonical (or otherwise reasonable) usage of our standard Docker takes precedence over edge cases.; # If you break the environment, you are responsible for fixing it and also owe the last developer who left this in a reasonable state a beverage of their choice.; # (This may be yourself, and you'll appreciate that beverage while you tinker with dependencies!); #; # When changing dependencies or versions in this file, check to see if the ""supportedPythonPackages"" DataProvider; # used by the testGATKPythonEnvironmentPackagePresent test in PythonEnvironmentIntegrationTest needs to be updated; # to reflect the changes.; #; name: gatk; channels:; # if channels other than conda-forge are added and the channel order is changed (note that conda channel_priority is currently set to flexible),; # verify that key dependencies are installed from the correct channel and compiled against MKL; - conda-forge; - defaults; dependencies:. # core python dependencies; - conda-forge::python=3.6.10 # do not update; - pip=20.0.2 # specifying channel may cause a warning to be emitted by conda; - conda-forge::mkl=2019.5 # MKL typically provides dramatic performance increases for theano, tensorflow, and other key dependencies; - conda-forge::mkl-service=2.3.0; - conda-forge::numpy=1.17.5 # do not update, this will break scipy=0.19.1; # verify that numpy is compiled against MKL (e.g., by checking *_mkl_info using numpy.show_config()); # and that it is used in tensorflow, theano, and other key dependencies; - conda-for",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6656#issuecomment-643526868:981,test,testGATKPythonEnvironmentPackagePresent,981,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6656#issuecomment-643526868,2,['test'],"['test', 'testGATKPythonEnvironmentPackagePresent']"
Testability,## [Current coverage](https://codecov.io/gh/broadinstitute/gatk/pull/2271?src=pr) is 76.024% (diff: 75.000%). > Merging [#2271](https://codecov.io/gh/broadinstitute/gatk/pull/2271?src=pr) into [master](https://codecov.io/gh/broadinstitute/gatk/branch/master?src=pr) will increase coverage by **0.028%**. ``` diff; @@ master #2271 diff @@; ==========================================; Files 731 731 ; Lines 38948 39102 +154 ; Methods 0 0 ; Messages 0 0 ; Branches 8146 8177 +31 ; ==========================================; + Hits 29599 29727 +128 ; - Misses 6840 6865 +25 ; - Partials 2509 2510 +1 ; ```. ![Sunburst](https://codecov.io/gh/broadinstitute/gatk/pull/2271/graphs/sunburst.svg?src=pr&size=150). | Diff Coverage | File Path |; | --- | --- |; | ••••••• 75% | [...rg/broadinstitute/hellbender/utils/LoggingUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2271/compare#diff-7372632F6D61696E2F6A6176612F6F72672F62726F6164696E737469747574652F68656C6C62656E6465722F7574696C732F4C6F6767696E675574696C732E6A617661) |. > Powered by [Codecov](https://codecov.io?src=pr). Last update [a9e304f...e0bd30d](https://codecov.io/gh/broadinstitute/gatk/compare/a9e304fd7dd2ad854c2115f23eb507eb6c502324...e0bd30d79bf2b0831e731bc74c35c7796708c5bb?src=pr),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2271#issuecomment-261380512:807,Log,LoggingUtils,807,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2271#issuecomment-261380512,1,['Log'],['LoggingUtils']
Testability,"### Too many PoNs, halp; Here are the options to test for PoN creation for the workshop tutorial. ![img_6819](https://user-images.githubusercontent.com/11543866/27512867-c1f82d26-591e-11e7-8bb3-f1290d6a76fa.JPG). I conjecture that the per-cohort various PoNs are _not_ equivalent, given the role of QC is to toss bad/outlier data points. If someone can tell me what is the best course of action, pictured or not (wait for PR to merge?), then I would be grateful. In the meanwhile, I will trudge ahead in my writing of the CNV tutorial, spending compute and moolah on the cloud.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3163#issuecomment-310874918:49,test,test,49,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3163#issuecomment-310874918,1,['test'],['test']
Testability,### 🥕CARROT🥕 report map stub finished; for test HaplotypeCaller CARROT Regression Tests (run: 00d212a9-8eac-4575-9cde-b0a911b3c2f2); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Fstub%2Fd8469fa4-2084-4adb-9e6a-682ab7022c34%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2F95c8261e-a3cd-4aed-a6a5-feb65b65dbcf%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2F95c8261e-a3cd-4aed-a6a5-feb65b65dbcf%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2F68bf8ed6-bc62-46b4-895e-d7b8bc4c54f1%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550605494:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550605494,3,"['Test', 'stub', 'test']","['Tests', 'stub', 'test']"
Testability,### 🥕CARROT🥕 report map stub finished; for test HaplotypeCaller CARROT Regression Tests (run: 1097e2ec-85ce-4fa8-b59e-fc82a8ea8bed); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Fstub%2Fe8aa9814-5328-4635-bc70-c4f2d1730fb8%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2F4a0df43f-ff49-4ff3-959c-16edc58fdfdd%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2F4a0df43f-ff49-4ff3-959c-16edc58fdfdd%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2F14927bc9-1228-4fab-8f63-6713df24a8ed%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574624205:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574624205,3,"['Test', 'stub', 'test']","['Tests', 'stub', 'test']"
Testability,### 🥕CARROT🥕 report map stub finished; for test HaplotypeCaller CARROT Regression Tests (run: 121a726a-b813-46be-a21e-d744cf8e1212); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Fstub%2Fd9f4e9d1-d784-468d-a7c5-3db11d300a39%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2F9928b50d-32e8-4948-81d2-66acf09074e1%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2F9928b50d-32e8-4948-81d2-66acf09074e1%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2F796264b0-ebc0-40a4-bf49-b7960c990594%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533951689:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533951689,3,"['Test', 'stub', 'test']","['Tests', 'stub', 'test']"
Testability,### 🥕CARROT🥕 report map stub finished; for test HaplotypeCaller CARROT Regression Tests (run: 1bf5817a-d896-41de-b193-4a53a1264470); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Fstub%2Ff77fd74c-fa5f-4ffc-acaa-3d066136bf7c%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2F58808511-7060-4e3c-923b-14803c83f331%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2F58808511-7060-4e3c-923b-14803c83f331%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2F3d77e016-88a6-4585-89f6-1e3351069af6%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549242878:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549242878,3,"['Test', 'stub', 'test']","['Tests', 'stub', 'test']"
Testability,### 🥕CARROT🥕 report map stub finished; for test HaplotypeCaller CARROT Regression Tests (run: 1f011d1a-af0f-4eb7-9554-92bf741f9fa3); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Fstub%2Fbe82ef78-26e0-4679-84da-55c305740482%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Fbbb2d7ee-ca1e-41f6-b68c-d5af92daa038%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Fbbb2d7ee-ca1e-41f6-b68c-d5af92daa038%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2Fb6731cbb-002b-42b0-9df1-3c98808d48c6%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535123068:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535123068,3,"['Test', 'stub', 'test']","['Tests', 'stub', 'test']"
Testability,### 🥕CARROT🥕 report map stub finished; for test HaplotypeCaller CARROT Regression Tests (run: 2891f1b5-e415-4d62-ab4e-49fba755b096); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Fstub%2F21ffd97f-ff74-46ec-8229-5815987f8750%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Fe5d8baa4-ff99-4beb-a3c3-9719d8ec588b%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Fe5d8baa4-ff99-4beb-a3c3-9719d8ec588b%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2F1e67251d-9e55-42b1-a30a-a7db1d263314%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1546480957:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1546480957,3,"['Test', 'stub', 'test']","['Tests', 'stub', 'test']"
Testability,### 🥕CARROT🥕 report map stub finished; for test HaplotypeCaller CARROT Regression Tests (run: 83db9528-9aa0-4963-a382-95c0dc24102d); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Fstub%2F8235863e-ffff-4c10-9349-55b3818a1863%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2F9023c818-2f0f-4b7b-99b4-3a2e58a8c21a%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2F9023c818-2f0f-4b7b-99b4-3a2e58a8c21a%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2Ffb1e6440-4475-4f69-9f3b-8099d6ff1583%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687824388:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687824388,3,"['Test', 'stub', 'test']","['Tests', 'stub', 'test']"
Testability,### 🥕CARROT🥕 report map stub finished; for test HaplotypeCaller CARROT Regression Tests (run: 8d6ce799-75e0-42e2-b527-f823f5ff55e6); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Fstub%2Ff3af0e8c-89ef-46c9-a6b5-d3b3110f2d23%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Ff1d998b3-4424-4df6-aa70-fc98a1525ad1%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Ff1d998b3-4424-4df6-aa70-fc98a1525ad1%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2F15e767d5-e609-425f-9eb0-aa567acfce77%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535669333:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535669333,3,"['Test', 'stub', 'test']","['Tests', 'stub', 'test']"
Testability,### 🥕CARROT🥕 report map stub finished; for test HaplotypeCaller CARROT Regression Tests (run: fca2c322-83ec-454a-a917-deb026411e19); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Fstub%2F854bfc85-552f-42eb-a141-2749a314f09b%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Ff7e549f7-e007-4e80-92c6-9986a5e1ef4a%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Ff7e549f7-e007-4e80-92c6-9986a5e1ef4a%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2Fa661640c-0fdb-46f3-ada2-fc2685dd0cfe%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684841396:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684841396,3,"['Test', 'stub', 'test']","['Tests', 'stub', 'test']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: build_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2022-06-13 20:49:22.040601374 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""35a5dad7-0921-4cbd-ab53-279506a2b613"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-06-13 20:49:22.040601374 UTC"",; ""status"": ""buildfailed"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1154457285:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1154457285,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: build_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2022-06-13 20:50:21.938874311 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""85b43c98-aca0-4f9c-b56b-f4d3c29b84da"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-06-13 20:50:21.938874311 UTC"",; ""status"": ""buildfailed"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1154457293:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1154457293,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: build_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2022-06-14 15:54:21.685287323 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""f41c307f-57fd-4cd5-8c35-38b1fab53118"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-06-14 15:54:21.685287323 UTC"",; ""status"": ""buildfailed"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1155423814:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1155423814,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: build_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2022-06-14 16:42:21.893638546 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""b8d92142-d006-4cd0-a703-94baa0cd8e2c"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-06-14 16:42:21.893638546 UTC"",; ""status"": ""buildfailed"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1155478613:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1155478613,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: build_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2022-07-11 19:00:58.009470950 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""a46a9c3b-1b08-4d26-9e21-afe768a7ae99"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-07-11 19:00:58.009470950 UTC"",; ""status"": ""buildfailed"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1180788391:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1180788391,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: build_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2022-07-22 17:02:00.286469813 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""2e29a7f1-42a0-4b2d-8868-45f2d683cdb8"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-07-22 17:02:00.286469813 UTC"",; ""status"": ""buildfailed"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1192782831:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1192782831,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: eval_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2023-12-09 01:13:16.103236135 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""7564e667-ae57-44ff-806d-3689dcd5d394"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-12-09 01:13:16.103236135 UTC"",; ""status"": ""evalfailed"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1848358163:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1848358163,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: eval_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2023-12-09 19:10:16.577655639 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""2383faf2-a2c4-4fc0-8ff9-d77571847ad5"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-12-09 19:10:16.577655639 UTC"",; ""status"": ""evalfailed"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1848842917:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1848842917,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: eval_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2023-12-18 13:56:16.652443526 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""71f08bec-32b8-457e-aac0-d7ce906b1d13"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-12-18 13:56:16.652443526 UTC"",; ""status"": ""evalfailed"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/939c8a20-8299-4f22-9735-2fd6b6a8f0d7/eval.wdl"",; ""eval_wdl_hash"": ""48f843a519f65bc9bf17938586ea7b37dc1b81959e200f21cbf98ae3daea13abf2c28daadd3e795e85c49c17b5718d87ccb9bf3921601bebcc7626d1253141a4"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1861195546:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1861195546,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: eval_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2023-12-18 13:57:17.644566034 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""06f8115b-3543-4c05-a877-7dbe35d345ab"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-12-18 13:57:17.644566034 UTC"",; ""status"": ""evalfailed"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/939c8a20-8299-4f22-9735-2fd6b6a8f0d7/eval.wdl"",; ""eval_wdl_hash"": ""48f843a519f65bc9bf17938586ea7b37dc1b81959e200f21cbf98ae3daea13abf2c28daadd3e795e85c49c17b5718d87ccb9bf3921601bebcc7626d1253141a4"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1861281417:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1861281417,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: eval_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2024-01-02 16:15:20.291548156 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""195729e7-44f5-484b-9a03-947bb596d741"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-01-02 16:15:20.291548156 UTC"",; ""status"": ""evalfailed"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1874712401:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1874712401,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: eval_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2024-01-09 19:30:21.598551444 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""e6d27810-1f6f-4d43-b1f7-c5820bb65d88"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-01-09 19:30:21.598551444 UTC"",; ""status"": ""evalfailed"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1884149795:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1884149795,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: eval_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2024-01-17 15:15:22.880396515 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""118bc5b3-e588-4d0a-b455-3cbfcc4ecb63"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-01-17 15:15:22.880396515 UTC"",; ""status"": ""evalfailed"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1897233160:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1897233160,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: eval_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2024-01-18 17:19:23.444981770 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""ab3a1b26-50da-4123-9f21-77b7ffd9aacf"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-01-18 17:19:23.444981770 UTC"",; ""status"": ""evalfailed"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1899487218:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1899487218,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: eval_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2024-01-19 16:18:28.029442655 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""4ae67551-5ddd-4b7a-9521-acc21eaf0d66"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-01-19 16:18:28.029442655 UTC"",; ""status"": ""evalfailed"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1901431899:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1901431899,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: eval_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2024-06-05 12:54:29.044258506 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""c9ffb306-e25b-4843-bb68-0b6e5ca70b15"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-06-05 12:54:29.044258506 UTC"",; ""status"": ""evalfailed"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8862#issuecomment-2151006823:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8862#issuecomment-2151006823,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2022-07-12 17:28:58.385003733 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|75.88741944444445|; |CHM controlHCsystemhours|0.1663777777777778|; |CHM controlHCwallclockhours|52.24009722222222|; |CHM controlHCwallclockmax|2.852152777777778|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff7eac327-c59c-43f7-a850-21bc3e0ccf52%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fcd28fe49-1672-4321-a836-47f76419c1c8%2Fcall-CONTROLRuntimeTask%2FcacheCopy%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff7eac327-c59c-43f7-a850-21bc3e0ccf52%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fcd28fe49-1672-4321-a836-47f76419c1c8%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2Fd5df8455-36cf-4ecb-8dc2-ec35b974c0b7%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|78.23616944444446|; |CHM evalHCsystemhours|0.16188333333333332|; |CHM evalHCwallclockhours|55.167422222222214|; |CHM evalHCwallclockmax|2.887522222222222|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff7eac327-c59c-43f7-a850-21bc3e0ccf52%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fcd28fe49-1672-4321-a836-47f76419c1c8%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|;,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182703672:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182703672,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2022-07-22 17:23:11.546909540 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|75.88741944444445|; |CHM controlHCsystemhours|0.1663777777777778|; |CHM controlHCwallclockhours|52.24009722222222|; |CHM controlHCwallclockmax|2.852152777777778|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F89508d5f-29f1-4534-9fe1-220a80de17c4%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa2a2515a-b32a-44a6-a6d1-9a6d0d2199bb%2Fcall-CONTROLRuntimeTask%2FcacheCopy%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F89508d5f-29f1-4534-9fe1-220a80de17c4%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa2a2515a-b32a-44a6-a6d1-9a6d0d2199bb%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2F2c4ad666-e885-4e23-bd5c-d54ca521ffbf%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|78.99195555555558|; |CHM evalHCsystemhours|0.16168333333333337|; |CHM evalHCwallclockhours|55.43875833333334|; |CHM evalHCwallclockmax|2.913311111111111|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F89508d5f-29f1-4534-9fe1-220a80de17c4%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa2a2515a-b32a-44a6-a6d1-9a6d0d2199bb%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193038382:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193038382,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2022-07-25 15:10:00.795026401 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|75.88741944444445|; |CHM controlHCsystemhours|0.1663777777777778|; |CHM controlHCwallclockhours|52.24009722222222|; |CHM controlHCwallclockmax|2.852152777777778|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F2a8ce326-baa5-4052-bff9-bd684393ff6c%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa1db35b8-cc7b-4019-bdd0-9f423762542e%2Fcall-CONTROLRuntimeTask%2FcacheCopy%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F2a8ce326-baa5-4052-bff9-bd684393ff6c%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa1db35b8-cc7b-4019-bdd0-9f423762542e%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2F7195c554-534f-43ef-80c2-77bdafa1827f%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|78.10181666666668|; |CHM evalHCsystemhours|0.16157500000000005|; |CHM evalHCwallclockhours|55.006172222222226|; |CHM evalHCwallclockmax|2.8554194444444443|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F2a8ce326-baa5-4052-bff9-bd684393ff6c%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa1db35b8-cc7b-4019-bdd0-9f423762542e%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194801748:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194801748,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-03 15:51:41.295367156 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|75.88741944444445|; |CHM controlHCsystemhours|0.1663777777777778|; |CHM controlHCwallclockhours|52.24009722222222|; |CHM controlHCwallclockmax|2.852152777777778|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9bc521dc-3c4c-4274-972c-9d1e4be850d5%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F092bfb4f-d978-4964-a8ae-e5a7f7362f7c%2Fcall-CONTROLRuntimeTask%2FcacheCopy%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9bc521dc-3c4c-4274-972c-9d1e4be850d5%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F092bfb4f-d978-4964-a8ae-e5a7f7362f7c%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2F6ab078fb-b668-452c-bbaa-8fb1fd8e25ba%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|84.26158888888888|; |CHM evalHCsystemhours|0.19243055555555555|; |CHM evalHCwallclockhours|60.242008333333345|; |CHM evalHCwallclockmax|3.176513888888889|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9bc521dc-3c4c-4274-972c-9d1e4be850d5%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F092bfb4f-d978-4964-a8ae-e5a7f7362f7c%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|;,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-04 15:40:52.834627961 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|75.88741944444445|; |CHM controlHCsystemhours|0.1663777777777778|; |CHM controlHCwallclockhours|52.24009722222222|; |CHM controlHCwallclockmax|2.852152777777778|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F0e5c32ab-65e6-451f-a04e-6a3f5e7fe5c8%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa332776f-175a-4595-bdeb-ab62e7f89921%2Fcall-CONTROLRuntimeTask%2FcacheCopy%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F0e5c32ab-65e6-451f-a04e-6a3f5e7fe5c8%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa332776f-175a-4595-bdeb-ab62e7f89921%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2F06cbfab4-17a7-4415-9118-d0ebbe156bfd%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|84.26158888888888|; |CHM evalHCsystemhours|0.19243055555555555|; |CHM evalHCwallclockhours|60.242008333333345|; |CHM evalHCwallclockmax|3.176513888888889|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F0e5c32ab-65e6-451f-a04e-6a3f5e7fe5c8%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa332776f-175a-4595-bdeb-ab62e7f89921%2Fcall-EVALRuntimeTask%2FcacheCopy%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecis,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535104202:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535104202,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-04 18:26:42.379399427 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|81.1621222222222|; |CHM controlHCsystemhours|0.16283611111111113|; |CHM controlHCwallclockhours|57.139766666666674|; |CHM controlHCwallclockmax|3.1312416666666665|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff61c0caa-70a3-4ee5-8542-e78ba8364985%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F394f0e4c-4f60-420b-8477-3199ef269728%2Fcall-CONTROLRuntimeTask%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff61c0caa-70a3-4ee5-8542-e78ba8364985%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F394f0e4c-4f60-420b-8477-3199ef269728%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2F2aec499d-c11f-4a23-912b-8a61f9982437%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|86.06659722222223|; |CHM evalHCsystemhours|0.19141388888888877|; |CHM evalHCwallclockhours|60.83952500000001|; |CHM evalHCwallclockmax|3.1510444444444445|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff61c0caa-70a3-4ee5-8542-e78ba8364985%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F394f0e4c-4f60-420b-8477-3199ef269728%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; |CHM eval,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535665125:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535665125,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-12 15:09:42.984220519 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|79.42513333333335|; |CHM controlHCsystemhours|0.15543611111111108|; |CHM controlHCwallclockhours|56.046666666666674|; |CHM controlHCwallclockmax|3.0881333333333334|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fbeb77715-227e-4dbd-803f-4458c83607c8%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Ff1b0b4cf-1a3f-47b3-84fa-529f118419ce%2Fcall-CONTROLRuntimeTask%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fbeb77715-227e-4dbd-803f-4458c83607c8%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Ff1b0b4cf-1a3f-47b3-84fa-529f118419ce%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2Ffb68536c-eb99-4d0d-a5c3-4f5accf94546%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|84.94748611111112|; |CHM evalHCsystemhours|0.19002777777777768|; |CHM evalHCwallclockhours|61.06326111111111|; |CHM evalHCwallclockmax|3.2047833333333333|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fbeb77715-227e-4dbd-803f-4458c83607c8%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Ff1b0b4cf-1a3f-47b3-84fa-529f118419ce%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; |CHM eva,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1546478988:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1546478988,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-15 22:38:43.733246263 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|78.81892777777776|; |CHM controlHCsystemhours|0.15627777777777782|; |CHM controlHCwallclockhours|55.94185833333335|; |CHM controlHCwallclockmax|3.053286111111111|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9c49383b-01a9-4bc0-90fa-cde7e1090a47%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fdeb85607-d693-4232-a4da-0fb88dd29cad%2Fcall-CONTROLRuntimeTask%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9c49383b-01a9-4bc0-90fa-cde7e1090a47%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fdeb85607-d693-4232-a4da-0fb88dd29cad%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2Fc0877490-fd2d-4f42-bb92-f06210e94d95%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|84.33091111111112|; |CHM evalHCsystemhours|0.18621944444444444|; |CHM evalHCwallclockhours|61.43|; |CHM evalHCwallclockmax|3.073069444444444|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9c49383b-01a9-4bc0-90fa-cde7e1090a47%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fdeb85607-d693-4232-a4da-0fb88dd29cad%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; |CHM evalsnpF1Score|0.9,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-16 17:15:43.799630906 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|84.8981027777778|; |CHM controlHCsystemhours|0.19177500000000003|; |CHM controlHCwallclockhours|60.16600277777776|; |CHM controlHCwallclockmax|3.0439777777777777|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Facc9e2ac-b10a-4d6a-b586-cd3e47f04e41%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F1731c546-7466-4adf-9790-3f99d07df05b%2Fcall-CONTROLRuntimeTask%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Facc9e2ac-b10a-4d6a-b586-cd3e47f04e41%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F1731c546-7466-4adf-9790-3f99d07df05b%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2F669edf6c-76a1-4d82-8cf7-5cd104df2496%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|83.2423166666667|; |CHM evalHCsystemhours|0.18843333333333337|; |CHM evalHCwallclockhours|61.06540555555557|; |CHM evalHCwallclockmax|3.1854916666666666|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Facc9e2ac-b10a-4d6a-b586-cd3e47f04e41%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F1731c546-7466-4adf-9790-3f99d07df05b%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; |CHM evalsn,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2023-06-02 17:26:47.096893136 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|86.02092777777776|; |CHM controlHCsystemhours|0.19513888888888892|; |CHM controlHCwallclockhours|62.28637777777777|; |CHM controlHCwallclockmax|3.304836111111111|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F43bcefb2-f38b-413d-9b65-06b489e64af1%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F258eacc8-3768-44a8-86dc-1b2b0516a553%2Fcall-CONTROLRuntimeTask%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F43bcefb2-f38b-413d-9b65-06b489e64af1%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F258eacc8-3768-44a8-86dc-1b2b0516a553%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2Fb89e3e0d-4f93-4b2d-9008-041545f2764c%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|87.0306027777778|; |CHM evalHCsystemhours|0.19828888888888896|; |CHM evalHCwallclockhours|62.522422222222225|; |CHM evalHCwallclockmax|3.293238888888889|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F43bcefb2-f38b-413d-9b65-06b489e64af1%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F258eacc8-3768-44a8-86dc-1b2b0516a553%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; |CHM evalsn,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574622123:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574622123,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2023-08-18 19:32:11.841209749 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|89.85896666666667|; |CHM controlHCsystemhours|0.20056666666666664|; |CHM controlHCwallclockhours|63.561513888888875|; |CHM controlHCwallclockmax|3.142697222222222|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F81dbf637-d90c-4111-93b9-9cec426c5a39%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F3609bc35-c943-4006-8b6f-9d71e6c68ef5%2Fcall-CONTROLRuntimeTask%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F81dbf637-d90c-4111-93b9-9cec426c5a39%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F3609bc35-c943-4006-8b6f-9d71e6c68ef5%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2F96b872e8-26c0-4406-a7d0-addf04f4ad0e%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|78.10857222222224|; |CHM evalHCsystemhours|0.28728055555555554|; |CHM evalHCwallclockhours|52.84132777777778|; |CHM evalHCwallclockmax|2.9151722222222225|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F81dbf637-d90c-4111-93b9-9cec426c5a39%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F3609bc35-c943-4006-8b6f-9d71e6c68ef5%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; |CHM eval,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2023-08-21 22:38:12.285896770 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|90.613975|; |CHM controlHCsystemhours|0.19898611111111109|; |CHM controlHCwallclockhours|63.943677777777786|; |CHM controlHCwallclockmax|3.1089944444444444|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fba9f32d5-7b46-462c-8d1f-5692eee05534%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fb7ddd5f2-fded-4076-b163-33ad637fb5bd%2Fcall-CONTROLRuntimeTask%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fba9f32d5-7b46-462c-8d1f-5692eee05534%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fb7ddd5f2-fded-4076-b163-33ad637fb5bd%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2F10080eab-b0ad-4752-80cb-fc6d34bd9ad9%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|93.63756388888888|; |CHM evalHCsystemhours|0.6379805555555556|; |CHM evalHCwallclockhours|70.50882222222222|; |CHM evalHCwallclockmax|3.5186027777777777|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fba9f32d5-7b46-462c-8d1f-5692eee05534%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fb7ddd5f2-fded-4076-b163-33ad637fb5bd%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; |CHM evalsnpF1Sco,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run report stub finished; for run HaplotypeCaller CARROT Regression Tests_run_2022-07-12 17:28:58.385003733 UTC (16c4f291-72ad-4c1c-9d59-497e046b8c39); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2FHaplotypeCaller%20CARROT%20Regression%20Tests_run_2022-07-12%2017%3A28%3A58.385003733%20UTC%2Fstub%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Fdb056573-9fa5-4d27-ae3e-fc8772115b73%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Fdb056573-9fa5-4d27-ae3e-fc8772115b73%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2Fca269da4-f5aa-46eb-8d7d-3a49df158ac5%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182706519:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182706519,1,['stub'],['stub']
Testability,### 🥕CARROT🥕 run report stub finished; for run HaplotypeCaller CARROT Regression Tests_run_2022-07-22 17:23:11.546909540 UTC (3d572c63-96eb-4429-98da-e698e4540893); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2FHaplotypeCaller%20CARROT%20Regression%20Tests_run_2022-07-22%2017%3A23%3A11.546909540%20UTC%2Fstub%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Fe8aedeed-fcda-404e-bf9e-f289ac512b84%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Fe8aedeed-fcda-404e-bf9e-f289ac512b84%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2F72efeea8-da0d-4193-a64b-02ffcdaae6de%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193040190:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193040190,1,['stub'],['stub']
Testability,### 🥕CARROT🥕 run report stub finished; for run HaplotypeCaller CARROT Regression Tests_run_2022-07-25 15:10:00.795026401 UTC (e8a17046-7dac-497d-9a1c-217251f75d96); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2FHaplotypeCaller%20CARROT%20Regression%20Tests_run_2022-07-25%2015%3A10%3A00.795026401%20UTC%2Fstub%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Fc4c8e871-32e3-4593-997d-4bc7ca5dd739%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Fc4c8e871-32e3-4593-997d-4bc7ca5dd739%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2F655e6d77-e891-46ab-8cec-27761a7d077e%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194806991:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194806991,1,['stub'],['stub']
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2022-06-13 20:49:22.040601374 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""35a5dad7-0921-4cbd-ab53-279506a2b613"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-06-13 20:49:22.040601374 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exom",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1154425516:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1154425516,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2022-06-13 20:50:21.938874311 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""85b43c98-aca0-4f9c-b56b-f4d3c29b84da"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-06-13 20:50:21.938874311 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exom",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1154426341:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1154426341,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2022-06-14 15:54:21.685287323 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""f41c307f-57fd-4cd5-8c35-38b1fab53118"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-06-14 15:54:21.685287323 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exom",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1155389940:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1155389940,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2022-06-14 16:42:21.893638546 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""b8d92142-d006-4cd0-a703-94baa0cd8e2c"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-06-14 16:42:21.893638546 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exom",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1155442844:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1155442844,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2022-07-11 19:00:58.009470950 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""a46a9c3b-1b08-4d26-9e21-afe768a7ae99"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-07-11 19:00:58.009470950 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exom",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1180757767:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1180757767,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2022-07-12 17:28:58.385003733 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""16c4f291-72ad-4c1c-9d59-497e046b8c39"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-07-12 17:28:58.385003733 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exom",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182064624:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182064624,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2022-07-22 17:02:00.286469813 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""2e29a7f1-42a0-4b2d-8868-45f2d683cdb8"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-07-22 17:02:00.286469813 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exom",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1192770664:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1192770664,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2022-07-22 17:23:11.546909540 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""3d572c63-96eb-4429-98da-e698e4540893"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-07-22 17:23:11.546909540 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exom",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1192786663:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1192786663,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2022-07-25 15:10:00.795026401 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""e8a17046-7dac-497d-9a1c-217251f75d96"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-07-25 15:10:00.795026401 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exom",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194178233:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194178233,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-03 15:51:41.295367156 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""121a726a-b813-46be-a21e-d744cf8e1212"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-05-03 15:51:41.295367156 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-04 15:40:52.834627961 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""1f011d1a-af0f-4eb7-9554-92bf741f9fa3"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-05-04 15:40:52.834627961 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535003366:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535003366,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-04 18:26:42.379399427 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""8d6ce799-75e0-42e2-b527-f823f5ff55e6"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-05-04 18:26:42.379399427 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535220790:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535220790,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-12 15:09:42.984220519 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""2891f1b5-e415-4d62-ab4e-49fba755b096"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-05-12 15:09:42.984220519 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1545896607:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1545896607,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-15 22:38:43.733246263 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""1bf5817a-d896-41de-b193-4a53a1264470"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-05-15 22:38:43.733246263 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1548708498:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1548708498,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-16 17:15:43.799630906 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""00d212a9-8eac-4575-9cde-b0a911b3c2f2"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-05-16 17:15:43.799630906 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550066071:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550066071,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-06-02 17:26:47.096893136 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""1097e2ec-85ce-4fa8-b59e-fc82a8ea8bed"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-06-02 17:26:47.096893136 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574076227:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574076227,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-08-18 19:32:11.841209749 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""fca2c322-83ec-454a-a917-deb026411e19"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-08-18 19:32:11.841209749 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684352689:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684352689,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-08-21 22:38:12.285896770 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""83db9528-9aa0-4963-a382-95c0dc24102d"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-08-21 22:38:12.285896770 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687151782:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687151782,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-12-09 01:13:16.103236135 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""7564e667-ae57-44ff-806d-3689dcd5d394"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-12-09 01:13:16.103236135 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1848056937:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1848056937,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-12-09 19:10:16.577655639 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""2383faf2-a2c4-4fc0-8ff9-d77571847ad5"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-12-09 19:10:16.577655639 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1848617792:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1848617792,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-12-18 13:56:16.652443526 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""71f08bec-32b8-457e-aac0-d7ce906b1d13"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-12-18 13:56:16.652443526 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/939c8a20-8299-4f22-9735-2fd6b6a8f0d7/eval.wdl"",; ""eval_wdl_hash"": ""48f843a519f65bc9bf17938586ea7b37dc1b81959e200f21cbf98ae3daea13abf2c28daadd3e795e85c49c17b5718d87ccb9bf3921601bebcc7626d1253141a4"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1860567595:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1860567595,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-12-18 13:57:17.644566034 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""06f8115b-3543-4c05-a877-7dbe35d345ab"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-12-18 13:57:17.644566034 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/939c8a20-8299-4f22-9735-2fd6b6a8f0d7/eval.wdl"",; ""eval_wdl_hash"": ""48f843a519f65bc9bf17938586ea7b37dc1b81959e200f21cbf98ae3daea13abf2c28daadd3e795e85c49c17b5718d87ccb9bf3921601bebcc7626d1253141a4"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1860569901:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1860569901,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2024-01-02 16:15:20.291548156 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""195729e7-44f5-484b-9a03-947bb596d741"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-01-02 16:15:20.291548156 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1874234666:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1874234666,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2024-01-09 19:30:21.598551444 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""e6d27810-1f6f-4d43-b1f7-c5820bb65d88"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-01-09 19:30:21.598551444 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1883655550:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1883655550,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2024-01-17 15:15:22.880396515 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""118bc5b3-e588-4d0a-b455-3cbfcc4ecb63"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-01-17 15:15:22.880396515 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1896021617:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1896021617,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2024-01-18 17:19:23.444981770 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""ab3a1b26-50da-4123-9f21-77b7ffd9aacf"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-01-18 17:19:23.444981770 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1898900961:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1898900961,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2024-01-19 16:18:28.029442655 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""4ae67551-5ddd-4b7a-9521-acc21eaf0d66"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-01-19 16:18:28.029442655 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1900708597:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1900708597,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2024-06-05 12:54:29.044258506 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""c9ffb306-e25b-4843-bb68-0b6e5ca70b15"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-06-05 12:54:29.044258506 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8862#issuecomment-2149793367:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8862#issuecomment-2149793367,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,#1084 is merged but 2 tests in PrintReadsIntegrationTest are still using lenient comparison because NM tag gets lost (curiously spark version of printreads works fine),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1087#issuecomment-162139494:22,test,tests,22,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1087#issuecomment-162139494,1,['test'],['tests']
Testability,"#4801 addressed the spanning deletion issue with new qual, so I'm ready to go ahead and do this once a green light is given. @droazen you wanted to wait for your HC tests branch to go in, right?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4614#issuecomment-393211539:165,test,tests,165,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4614#issuecomment-393211539,1,['test'],['tests']
Testability,#5222 added `ExampleLocusWalkerSparkIntegrationTest.java`; #5289 adds more tests.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5276#issuecomment-427788213:75,test,tests,75,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5276#issuecomment-427788213,1,['test'],['tests']
Testability,"#574 is a workaround for this issue for some tests, but should be properly fixed at some point.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/575#issuecomment-113200194:45,test,tests,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/575#issuecomment-113200194,1,['test'],['tests']
Testability,"#carrot(FE Test CHM v2.1, FunctionalEquivalenceTest.gatk_docker, GatkDragenConcordanceEvaluation.docker_placeholder)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410295:11,Test,Test,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410295,1,['Test'],['Test']
Testability,"#carrot(FE Test CHM v2.1, gatk_docker, docker_placeholder)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760277646:11,Test,Test,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760277646,2,['Test'],['Test']
Testability,"#carrot(GATK HaplotypeCaller Test, VariantCallingCarrot.gatk_docker, )",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1023543826:29,Test,Test,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1023543826,2,['Test'],['Test']
Testability,"#carrot(GATK HaplotypeCaller vs Nightly Test, VariantCallingCarrot.gatk_docker, )",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1027191489:40,Test,Test,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1027191489,8,['Test'],['Test']
Testability,"#carrot(HaplotypeCaller CARROT Regression Tests, VariantCallingCarrot.gatk_docker, )",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1067504879:42,Test,Tests,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1067504879,1,['Test'],['Tests']
Testability,"#carrot(HaplotypeCaller CARROT Regression Tests, VariantCallingCarrotOrchestrated.gatk_docker, )",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533285362:42,Test,Tests,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533285362,40,['Test'],['Tests']
Testability,"#carrot(HaplotypeCaller DRAGEN WGS1, TestWrapper.gatk_docker_override, placeholder)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738146601:37,Test,TestWrapper,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738146601,2,['Test'],['TestWrapper']
Testability,% <ø> (ø)` | `93 <0> (ø)` | :arrow_down: |; | [...ils/recalibration/covariates/ContextCovariate.java](https://codecov.io/gh/broadinstitute/gatk/pull/4212/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWNhbGlicmF0aW9uL2NvdmFyaWF0ZXMvQ29udGV4dENvdmFyaWF0ZS5qYXZh) | `92.727% <ø> (ø)` | `34 <0> (ø)` | :arrow_down: |; | [...oadinstitute/hellbender/engine/AssemblyRegion.java](https://codecov.io/gh/broadinstitute/gatk/pull/4212/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvQXNzZW1ibHlSZWdpb24uamF2YQ==) | `85.475% <0%> (ø)` | `62 <0> (ø)` | :arrow_down: |; | [...er/tools/walkers/rnaseq/OverhangFixingManager.java](https://codecov.io/gh/broadinstitute/gatk/pull/4212/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3JuYXNlcS9PdmVyaGFuZ0ZpeGluZ01hbmFnZXIuamF2YQ==) | `94.079% <100%> (+1.268%)` | `67 <0> (+1)` | :arrow_up: |; | [...llbender/utils/test/SimpleIntervalTestFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/4212/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1NpbXBsZUludGVydmFsVGVzdEZhY3RvcnkuamF2YQ==) | `0% <0%> (ø)` | `0% <0%> (ø)` | :arrow_down: |; | [...park/sv/discovery/alignment/AlignmentInterval.java](https://codecov.io/gh/broadinstitute/gatk/pull/4212/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvYWxpZ25tZW50L0FsaWdubWVudEludGVydmFsLmphdmE=) | `89.655% <0%> (ø)` | `74% <0%> (ø)` | :arrow_down: |; | [...kers/variantutils/UpdateVCFSequenceDictionary.java](https://codecov.io/gh/broadinstitute/gatk/pull/4212/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9VcGRhdGVWQ0ZTZXF1ZW5jZURpY3Rpb25hcnkuamF2YQ==) | `93.846% <0%> (+6.89%)` | `15% <0%> (+1%)` | :arrow_up: |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](h,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4212#issuecomment-359098274:2443,test,test,2443,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4212#issuecomment-359098274,1,['test'],['test']
Testability,%)` | `33% <0%> (+4%)` | |; | [...ils/read/markduplicates/sparkrecords/Fragment.java](https://codecov.io/gh/broadinstitute/gatk/pull/4785/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9GcmFnbWVudC5qYXZh) | `100% <0%> (ø)` | `20% <0%> (+9%)` | :arrow_up: |; | [...itute/hellbender/engine/spark/GATKRegistrator.java](https://codecov.io/gh/broadinstitute/gatk/pull/4785/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvR0FUS1JlZ2lzdHJhdG9yLmphdmE=) | `100% <0%> (ø)` | `5% <0%> (+2%)` | :arrow_up: |; | [...walkers/haplotypecaller/HaplotypeCallerEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/4785/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9IYXBsb3R5cGVDYWxsZXJFbmdpbmUuamF2YQ==) | `79.62% <0%> (+0.653%)` | `83% <0%> (+16%)` | :arrow_up: |; | [...ellbender/utils/test/CommandLineProgramTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/4785/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0NvbW1hbmRMaW5lUHJvZ3JhbVRlc3Rlci5qYXZh) | `91.667% <0%> (+0.758%)` | `11% <0%> (+2%)` | :arrow_up: |; | [...org/broadinstitute/hellbender/engine/GATKTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/4785/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvR0FUS1Rvb2wuamF2YQ==) | `92.33% <0%> (+0.902%)` | `164% <0%> (+71%)` | :arrow_up: |; | [...tools/walkers/haplotypecaller/HaplotypeCaller.java](https://codecov.io/gh/broadinstitute/gatk/pull/4785/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9IYXBsb3R5cGVDYWxsZXIuamF2YQ==) | `95.918% <0%> (+2.37%)` | `26% <0%> (+10%)` | :arrow_up: |; | ... and [2 more](https://codecov.io/gh/broadinstitute/gatk/pull/4785/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4785#issuecomment-390343864:3178,test,test,3178,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4785#issuecomment-390343864,1,['test'],['test']
Testability,%> (ø)` | `7 <7> (?)` | |; | [...pynumber/CallCopyRatioSegmentsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL0NhbGxDb3B5UmF0aW9TZWdtZW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `94.737% <80%> (-5.263%)` | `4 <0> (ø)` | |; | [...ils/read/markduplicates/sparkrecords/Fragment.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9GcmFnbWVudC5qYXZh) | `92% <0%> (-1.75%)` | `14% <0%> (+7%)` | |; | [...r/utils/read/markduplicates/sparkrecords/Pair.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9QYWlyLmphdmE=) | `98.276% <0%> (-1.724%)` | `49% <0%> (+22%)` | |; | [...institute/hellbender/utils/test/ReadTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1JlYWRUZXN0VXRpbHMuamF2YQ==) | `94.34% <0%> (-1.115%)` | `5% <0%> (ø)` | |; | [...idation/CompareDuplicatesSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay92YWxpZGF0aW9uL0NvbXBhcmVEdXBsaWNhdGVzU3BhcmtJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `96.296% <0%> (-0.37%)` | `10% <0%> (+3%)` | |; | [...stitute/hellbender/tools/spark/ApplyBQSRSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9BcHBseUJRU1JTcGFyay5qYXZh) | `100% <0%> (ø)` | `5% <0%> (+2%)` | :arrow_up: |; | [...roadinstitute/hellbender/utils/read/ReadUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5115#issuecomment-413221307:2871,test,test,2871,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5115#issuecomment-413221307,1,['test'],['test']
Testability,"(/gatkCloneMountPoint/src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.chr20snippet.g.vcf, src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/AS_Annotations.keepRawCombined.expected.vcf, [-A, ClippingRankSumTest, -G, AS_StandardAnnotation, -G, StandardAnnotation, -keep-combined], /gatkCloneMountPoint/src/test/resources/large/human_g1k_v37.20.21.fasta) [31mFAILED[39m[0K. java.lang.AssertionError: AS_QUAL present in one but not in the other expected [null] but found [-2950][0K. at org.testng.Assert.fail(Assert.java:93). at org.testng.Assert.failNotSame(Assert.java:508). at org.testng.Assert.assertNull(Assert.java:444). at org.broadinstitute.hellbender.testutils.VariantContextTestUtils.assertAttributesEquals(VariantContextTestUtils.java:354). at org.broadinstitute.hellbender.testutils.VariantContextTestUtils.assertVariantContextsAreEqual(VariantContextTestUtils.java:427). at org.broadinstitute.hellbender.testutils.VariantContextTestUtils.assertVariantContextsAreEqualAlleleOrderIndependent(VariantContextTestUtils.java:549). at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest.lambda$assertVariantContextsMatch$1(GenotypeGVCFsIntegrationTest.java:297). at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest.assertForEachElementInLists(GenotypeGVCFsIntegrationTest.java:68). at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest.runGenotypeGVCFSAndAssertSomething(GenotypeGVCFsIntegrationTest.java:355). at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest.runGenotypeGVCFSAndAssertSomething(GenotypeGVCFsIntegrationTest.java:335). at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest.assertVariantContextsMatch(GenotypeGVCFsIntegrationTest.java:297). at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest.testEntireVariantContext(GenotypeGVCFsIntegrationTest.java:291); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6079#issuecomment-539518973:4766,test,testutils,4766,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6079#issuecomment-539518973,6,"['assert', 'test']","['assertForEachElementInLists', 'assertVariantContextsAreEqualAlleleOrderIndependent', 'assertVariantContextsMatch', 'testEntireVariantContext', 'testutils']"
Testability,"(1) Sounds good.; (2) Ah, makes sense. I thought I saw the creation of the bunny outside of the scope of the worker (which it isn't); (3) Yes and no. Suppose you switched/refactored from log4j to something else, you'd want to know that the timing still makes sense (or if log4j messed up their timing in a new release). It's not really an issue as log4j isn't going to mess up big and whatever you'd change to would also likely be as already tested as log4j. ; I'll leave it up to you if you want to add timing tests or not.; (4) Great! ; I think this work is something that we should keep the Dataflow team abreast of. There is no reason why great profiling tools couldn't eventually make their way into the SDK code and Google Console. LTGM. Feel free to merge once my whitespace comment is addressed (with or without any more tests).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/628#issuecomment-120189286:442,test,tested,442,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/628#issuecomment-120189286,3,['test'],"['tested', 'tests']"
Testability,(50); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignmentRegionTest.java (45); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigAlignerTest.java (16); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigsCollectionUnitTest.java (121); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/InversionReadLikelihoodCalculatorUnitTest.java (28); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/LocalAssemblyContigUnitTest.java (28); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSparkUnitTest.java (6); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVFastqUtilsUnitTest.java (186); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVJunctionUnitTest.java (204); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicInversionGenotyperSparkUnitTest.java (177); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSparkUnitTest.java (307); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.fa (84); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup-contigs.fa (22); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup.fa (84); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.merged.fa (46); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.merged.rmdup-contigs.fa (14); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.fastq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAV,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:3591,test,test,3591,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,(But please don't merge until we fix the issue related to assigning logical names to read inputs in the GATK engine),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2067#issuecomment-248988480:68,log,logical,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2067#issuecomment-248988480,1,['log'],['logical']
Testability,(Note that the failure in the cloud tests is expected due to an ongoing GCS bucket region migration -- it should clear up next week),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8318#issuecomment-1546280764:36,test,tests,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8318#issuecomment-1546280764,1,['test'],['tests']
Testability,(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6652#issuecomment-672024253:3162,Test,TestNG,3162,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6652#issuecomment-672024253,1,['Test'],['TestNG']
Testability,(and re-enable test in `CRAMReferenceIntegrationTest` once this is done),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/793#issuecomment-128836097:15,test,test,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/793#issuecomment-128836097,1,['test'],['test']
Testability,"(inclusive),maxGQ=55(exclusive); ##GVCFBlock55-56=minGQ=55(inclusive),maxGQ=56(exclusive); ##GVCFBlock56-57=minGQ=56(inclusive),maxGQ=57(exclusive); ##GVCFBlock57-58=minGQ=57(inclusive),maxGQ=58(exclusive); ##GVCFBlock58-59=minGQ=58(inclusive),maxGQ=59(exclusive); ##GVCFBlock59-60=minGQ=59(inclusive),maxGQ=60(exclusive); ##GVCFBlock6-7=minGQ=6(inclusive),maxGQ=7(exclusive); ##GVCFBlock60-70=minGQ=60(inclusive),maxGQ=70(exclusive); ##GVCFBlock7-8=minGQ=7(inclusive),maxGQ=8(exclusive); ##GVCFBlock70-80=minGQ=70(inclusive),maxGQ=80(exclusive); ##GVCFBlock8-9=minGQ=8(inclusive),maxGQ=9(exclusive); ##GVCFBlock80-90=minGQ=80(inclusive),maxGQ=90(exclusive); ##GVCFBlock9-10=minGQ=9(inclusive),maxGQ=10(exclusive); ##GVCFBlock90-99=minGQ=90(inclusive),maxGQ=99(exclusive); ##GVCFBlock99-100=minGQ=99(inclusive),maxGQ=100(exclusive); ##INFO=<ID=BaseQRankSum,Number=1,Type=Float,Description=""Z-score from Wilcoxon rank sum test of Alt Vs. Ref base qualities"">; ##INFO=<ID=ClippingRankSum,Number=1,Type=Float,Description=""Z-score From Wilcoxon rank sum test of Alt vs. Ref number of hard clipped bases"">; ##INFO=<ID=DP,Number=1,Type=Integer,Description=""Approximate read depth; some reads may have been filtered"">; ##INFO=<ID=DS,Number=0,Type=Flag,Description=""Were any of the samples downsampled?"">; ##INFO=<ID=END,Number=1,Type=Integer,Description=""Stop position of the interval"">; ##INFO=<ID=ExcessHet,Number=1,Type=Float,Description=""Phred-scaled p-value for exact test of excess heterozygosity"">; ##INFO=<ID=InbreedingCoeff,Number=1,Type=Float,Description=""Inbreeding coefficient as estimated from the genotype likelihoods per-sample when compared against the Hardy-Weinberg expectation"">; ##INFO=<ID=MLEAC,Number=A,Type=Integer,Description=""Maximum likelihood expectation (MLE) for the allele counts (not necessarily the same as the AC), for each ALT allele, in the same order as listed"">; ##INFO=<ID=MLEAF,Number=A,Type=Float,Description=""Maximum likelihood expectation (MLE) for the allele freque",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4514#issuecomment-372215582:15784,test,test,15784,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4514#issuecomment-372215582,1,['test'],['test']
Testability,"(only non-trivial remaining requests are to do the rename of the IntegrationTest classes now rather than later, and to provide stats in this thread on test file size so we can make sure nothing is inappropriately large)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/176#issuecomment-75090134:151,test,test,151,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/176#issuecomment-75090134,1,['test'],['test']
Testability,"(s),0,Cpu time(s),0,#critical path,0; GENOMICSDB_TIMER,Fetch from VCF,Wall-clock time(s),0.052394,Cpu time(s),0.0522175,Critical path wall-clock time(s),0.050241,Cpu time(s),0.0500711,#critical path,55; GENOMICSDB_TIMER,Combining cells,Wall-clock time(s),0.008567,Cpu time(s),0.00855882,Critical path wall-clock time(s),0.004002,Cpu time(s),0.00399618,#critical path,29; GENOMICSDB_TIMER,Flush output,Wall-clock time(s),0,Cpu time(s),0,Critical path wall-clock time(s),0,Cpu time(s),0,#critical path,0; GENOMICSDB_TIMER,Sections time,Wall-clock time(s),0.061053,Cpu time(s),0.0609081,Critical path wall-clock time(s),0,Cpu time(s),0,#critical path,0; GENOMICSDB_TIMER,Time in single thread phase(),Wall-clock time(s),0.000112,Cpu time(s),0.00010141,Critical path wall-clock time(s),0,Cpu time(s),0,#critical path,0; GENOMICSDB_TIMER,Time in read_all(),Wall-clock time(s),0.061276,Cpu time(s),0.0611596,Critical path wall-clock time(s),0,Cpu time(s),0,#critical path,0; WARNING: No valid combination operation found for INFO field DS - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field HaplotypeScore - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field InbreedingCoeff - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAC - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAF - the field will NOT be part of INFO fields in the generated VCF records; [E::bcf_hdr_add_sample] Duplicated sample name 'HG00096'. Results: SUCCESS (0 tests, 0 successes, 0 failures, 0 skipped); :test FAILED. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':test'.; > Process 'Gradle Test Executor 1' finished with non-zero exit value 134; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2634#issuecomment-298740693:8050,test,tests,8050,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2634#issuecomment-298740693,4,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"(you should see it in the travis logs where the tests are all being executed, a bunch of download statements)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5155#issuecomment-418509789:33,log,logs,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5155#issuecomment-418509789,2,"['log', 'test']","['logs', 'tests']"
Testability,(ø)` | `12 <0> (+1)` | :arrow_up: |; | [...rg/broadinstitute/hellbender/utils/io/IOUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pby9JT1V0aWxzLmphdmE=) | `69.948% <71.429%> (+0.056%)` | `51 <1> (+1)` | :arrow_up: |; | [...ats/collections/SimpleCountCollectionUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvY29sbGVjdGlvbnMvU2ltcGxlQ291bnRDb2xsZWN0aW9uVW5pdFRlc3QuamF2YQ==) | `86.667% <83.333%> (-2.222%)` | `4 <1> (+1)` | |; | [...bender/tools/walkers/annotator/ReferenceBases.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9SZWZlcmVuY2VCYXNlcy5qYXZh) | `87.5% <0%> (-12.5%)` | `9% <0%> (+4%)` | |; | [...institute/hellbender/utils/test/ReadTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1JlYWRUZXN0VXRpbHMuamF2YQ==) | `94.34% <0%> (-2.803%)` | `5% <0%> (+2%)` | |; | [...itute/hellbender/tools/walkers/mutect/Mutect2.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NdXRlY3QyLmphdmE=) | `87.273% <0%> (-2.013%)` | `35% <0%> (+17%)` | |; | [...ils/read/markduplicates/sparkrecords/Fragment.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9GcmFnbWVudC5qYXZh) | `92% <0%> (-1.75%)` | `14% <0%> (+7%)` | |; | [...r/tools/spark/sv/utils/GATKSVVCFUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3Jj,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5082#issuecomment-410074867:2542,test,test,2542,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5082#issuecomment-410074867,1,['test'],['test']
Testability,(ø)` | `24 <5> (ø)` | :arrow_down: |; | [...ls/read/markduplicates/GATKDuplicationMetrics.java](https://codecov.io/gh/broadinstitute/gatk/pull/4779/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL0dBVEtEdXBsaWNhdGlvbk1ldHJpY3MuamF2YQ==) | `100% <100%> (ø)` | `13 <13> (?)` | |; | [...forms/markduplicates/MarkDuplicatesSparkUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4779/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay90cmFuc2Zvcm1zL21hcmtkdXBsaWNhdGVzL01hcmtEdXBsaWNhdGVzU3BhcmtVdGlscy5qYXZh) | `89.498% <100%> (-0.29%)` | `62 <4> (-8)` | |; | [...roadinstitute/hellbender/utils/read/ReadUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4779/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL1JlYWRVdGlscy5qYXZh) | `81.87% <100%> (+2.652%)` | `341 <9> (+152)` | :arrow_up: |; | [.../utils/read/markduplicates/LibraryIdGenerator.java](https://codecov.io/gh/broadinstitute/gatk/pull/4779/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL0xpYnJhcnlJZEdlbmVyYXRvci5qYXZh) | `89.474% <100%> (-4.971%)` | `14 <3> (ø)` | |; | [...ols/walkers/markduplicates/MarkDuplicatesGATK.java](https://codecov.io/gh/broadinstitute/gatk/pull/4779/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL21hcmtkdXBsaWNhdGVzL01hcmtEdXBsaWNhdGVzR0FUSy5qYXZh) | `87.917% <69.231%> (-2.003%)` | `69 <0> (-7)` | |; | [...e/hellbender/utils/test/testers/SamFileTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/4779/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L3Rlc3RlcnMvU2FtRmlsZVRlc3Rlci5qYXZh) | `85.271% <79.167%> (-5.45%)` | `35 <8> (+3)` | |; | ... and [21 more](https://codecov.io/gh/broadinstitute/gatk/pull/4779/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4779#issuecomment-390350686:3865,test,test,3865,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4779#issuecomment-390350686,2,['test'],"['test', 'testers']"
Testability,) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.6/tests/test/index.html) |; | python | openjdk8 | [29984.5](https://travis-ci.com/broadinstitute/gatk/jobs/317851323) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.5/tests/test/index.html) |; | integration | oraclejdk8 | [29984.12](https://travis-ci.com/broadinstitute/gatk/jobs/317851330) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.12/tests/test/index.html) |; | integration | openjdk11 | [29984.13](https://travis-ci.com/broadinstitute/gatk/jobs/317851331) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.13/tests/test/index.html) |; | cloud | openjdk8 | [29984.1](https://travis-ci.com/broadinstitute/gatk/jobs/317851319) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.1/tests/test/index.html) |; | cloud | openjdk11 | [29984.15](https://travis-ci.com/broadinstitute/gatk/jobs/317851333) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.15/tests/test/index.html) |; | unit | openjdk11 | [29984.14](https://travis-ci.com/broadinstitute/gatk/jobs/317851332) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.14/tests/test/index.html) |; | integration | openjdk8 | [29984.2](https://travis-ci.com/broadinstitute/gatk/jobs/317851320) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.2/tests/test/index.html) |; | variantcalling | openjdk8 | [29984.4](https://travis-ci.com/broadinstitute/gatk/jobs/317851322) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.4/tests/test/index.html) |; | unit | openjdk8 | [29984.3](https://travis-ci.com/broadinstitute/gatk/jobs/317851321) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.3/tests/test/index.html) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611695380:1351,log,logs,1351,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611695380,20,"['log', 'test']","['logs', 'test', 'test-logs', 'tests']"
Testability,) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.6/tests/test/index.html) |; | integration | oraclejdk8 | [29988.12](https://travis-ci.com/broadinstitute/gatk/jobs/317861697) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.12/tests/test/index.html) |; | python | openjdk8 | [29988.5](https://travis-ci.com/broadinstitute/gatk/jobs/317861683) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.5/tests/test/index.html) |; | integration | openjdk11 | [29988.13](https://travis-ci.com/broadinstitute/gatk/jobs/317861698) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.13/tests/test/index.html) |; | cloud | openjdk11 | [29988.15](https://travis-ci.com/broadinstitute/gatk/jobs/317861700) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.15/tests/test/index.html) |; | cloud | openjdk8 | [29988.1](https://travis-ci.com/broadinstitute/gatk/jobs/317861676) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.1/tests/test/index.html) |; | unit | openjdk11 | [29988.14](https://travis-ci.com/broadinstitute/gatk/jobs/317861699) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.14/tests/test/index.html) |; | integration | openjdk8 | [29988.2](https://travis-ci.com/broadinstitute/gatk/jobs/317861680) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.2/tests/test/index.html) |; | variantcalling | openjdk8 | [29988.4](https://travis-ci.com/broadinstitute/gatk/jobs/317861682) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.4/tests/test/index.html) |; | unit | openjdk8 | [29988.3](https://travis-ci.com/broadinstitute/gatk/jobs/317861681) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.3/tests/test/index.html) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611710351:1352,log,logs,1352,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611710351,20,"['log', 'test']","['logs', 'test', 'test-logs', 'tests']"
Testability,) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.6/tests/test/index.html) |; | integration | oraclejdk8 | [29990.12](https://travis-ci.com/broadinstitute/gatk/jobs/317870159) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.12/tests/test/index.html) |; | python | openjdk8 | [29990.5](https://travis-ci.com/broadinstitute/gatk/jobs/317870152) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.5/tests/test/index.html) |; | cloud | openjdk8 | [29990.1](https://travis-ci.com/broadinstitute/gatk/jobs/317870147) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.1/tests/test/index.html) |; | cloud | openjdk11 | [29990.15](https://travis-ci.com/broadinstitute/gatk/jobs/317870162) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.15/tests/test/index.html) |; | integration | openjdk11 | [29990.13](https://travis-ci.com/broadinstitute/gatk/jobs/317870160) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.13/tests/test/index.html) |; | integration | openjdk8 | [29990.2](https://travis-ci.com/broadinstitute/gatk/jobs/317870149) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.2/tests/test/index.html) |; | unit | openjdk11 | [29990.14](https://travis-ci.com/broadinstitute/gatk/jobs/317870161) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.14/tests/test/index.html) |; | variantcalling | openjdk8 | [29990.4](https://travis-ci.com/broadinstitute/gatk/jobs/317870151) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.4/tests/test/index.html) |; | unit | openjdk8 | [29990.3](https://travis-ci.com/broadinstitute/gatk/jobs/317870150) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.3/tests/test/index.html) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611720629:1351,log,logs,1351,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611720629,20,"['log', 'test']","['logs', 'test', 'test-logs', 'tests']"
Testability,) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.6/tests/test/index.html) |; | python | openjdk8 | [29992.5](https://travis-ci.com/broadinstitute/gatk/jobs/317887705) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.5/tests/test/index.html) |; | integration | oraclejdk8 | [29992.12](https://travis-ci.com/broadinstitute/gatk/jobs/317887712) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.12/tests/test/index.html) |; | integration | openjdk11 | [29992.13](https://travis-ci.com/broadinstitute/gatk/jobs/317887713) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.13/tests/test/index.html) |; | cloud | openjdk8 | [29992.1](https://travis-ci.com/broadinstitute/gatk/jobs/317887701) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.1/tests/test/index.html) |; | cloud | openjdk11 | [29992.15](https://travis-ci.com/broadinstitute/gatk/jobs/317887715) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.15/tests/test/index.html) |; | integration | openjdk8 | [29992.2](https://travis-ci.com/broadinstitute/gatk/jobs/317887702) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.2/tests/test/index.html) |; | unit | openjdk11 | [29992.14](https://travis-ci.com/broadinstitute/gatk/jobs/317887714) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.14/tests/test/index.html) |; | variantcalling | openjdk8 | [29992.4](https://travis-ci.com/broadinstitute/gatk/jobs/317887704) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.4/tests/test/index.html) |; | unit | openjdk8 | [29992.3](https://travis-ci.com/broadinstitute/gatk/jobs/317887703) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.3/tests/test/index.html) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611733065:1351,log,logs,1351,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611733065,20,"['log', 'test']","['logs', 'test', 'test-logs', 'tests']"
Testability,"). at org.broadinstitute.hellbender.tools.walkers.annotator.allelespecific.AS_QualByDepth.finalizeRawData(AS_QualByDepth.java:143). at org.broadinstitute.hellbender.tools.walkers.gnarlyGenotyper.GnarlyGenotyperEngine.finalizeGenotype(GnarlyGenotyperEngine.java:121). ... 26 more; ```. ```; Gradle suite > Gradle test > org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest > testEntireVariantContext[21](/gatkCloneMountPoint/src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.chr20snippet.g.vcf, src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/AS_Annotations.keepRawCombined.expected.vcf, [-A, ClippingRankSumTest, -G, AS_StandardAnnotation, -G, StandardAnnotation, -keep-combined], /gatkCloneMountPoint/src/test/resources/large/human_g1k_v37.20.21.fasta) [31mFAILED[39m[0K. java.lang.AssertionError: AS_QUAL present in one but not in the other expected [null] but found [-2950][0K. at org.testng.Assert.fail(Assert.java:93). at org.testng.Assert.failNotSame(Assert.java:508). at org.testng.Assert.assertNull(Assert.java:444). at org.broadinstitute.hellbender.testutils.VariantContextTestUtils.assertAttributesEquals(VariantContextTestUtils.java:354). at org.broadinstitute.hellbender.testutils.VariantContextTestUtils.assertVariantContextsAreEqual(VariantContextTestUtils.java:427). at org.broadinstitute.hellbender.testutils.VariantContextTestUtils.assertVariantContextsAreEqualAlleleOrderIndependent(VariantContextTestUtils.java:549). at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest.lambda$assertVariantContextsMatch$1(GenotypeGVCFsIntegrationTest.java:297). at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest.assertForEachElementInLists(GenotypeGVCFsIntegrationTest.java:68). at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest.runGenotypeGVCFSAndAssertSomething(GenotypeGVCFsIntegrationTest.java:355). at org.broadinsti",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6079#issuecomment-539518973:4346,Assert,Assert,4346,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6079#issuecomment-539518973,1,['Assert'],['Assert']
Testability,); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.fastq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.fa (4); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.fa (8); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.fa (84); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.rmdup-contigs.fa (30); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.rmdup.fa (84); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.fq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.fastq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.fa (2); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.fa (4); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.merged.fa (46); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.merged.rmdup-contigs.fa (14); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.merged.rmdup.fa (20); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.fq (0); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenoty,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:5395,test,test,5395,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.fa (8); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.fa (84); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.rmdup-contigs.fa (30); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.rmdup.fa (84); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.fq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.fastq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.fa (2); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.fa (4); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.merged.fa (46); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.merged.rmdup-contigs.fa (14); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.merged.rmdup.fa (20); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.fq (0); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSpark/inversions.vcf (25); > Patch Links:; > ; > https://github.com/broadinstitute/gatk/pull/2189.patch; > https://github.com/broadinstitute/gatk/pull/2189.diff; > —; > You are receiving this because you were mentioned.; > Reply to this ema,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:5638,test,test,5638,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:80); at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:59); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32); at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93); at com.sun.proxy.$Proxy2.stop(Unknown Source); at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:116); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360); at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54); at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174:4179,test,testing,4179,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174,1,['test'],['testing']
Testability,"* _Large number of open file handles_: this was an issue in TileDB which got fixed as part of the restructuring that @nalinigans did for supporting HDFS/S3/GCS (#5017). I was too lazy to fix this again. If it's going to take some time for PR #5017 to be merged, I can submit a separate fix for this. This would fix any crashes/termination issues.; * _Performance of a single import process with a large number of intervals_; * Restating the obvious, but this is a single process (and by default, a single thread) with many intervals to import. As you increase the number of samples, this will become a performance pain point.; * More important than the number of intervals is the amount of data imported per interval. Each interval import involves opening the VCF files (loading index structures while creating FeatureReader objects), writing to TileDB/GenomicsDB. and closing the VCF file handles (destroying FeatureReader objects). If the amount of data written for each interval is sufficiently large, the cost of opening/closing the VCF files (creating/destroying FeatureReaders) is small relative to the total time taken.; * In the test cases I and Chris were trying, the amount of data written per interval was small (or 0 in many cases). The time taken in opening/closing the VCF files (and loading/destroying the index) dominates the total time.; * For a single import process (single thread), creating a large interval is better (or no worse) than passing several small intervals. TileDB/GenomicsDB has 0 overhead for regions with no data (for example, WES gVCFs). Having larger intervals will likely avoid issues described above. Hence, an advisory message will be beneficial.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5066#issuecomment-410576757:1137,test,test,1137,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5066#issuecomment-410576757,1,['test'],['test']
Testability,"**The input file :** ; bash-4.2$ hdfs dfs -ls /gatk4; Found 2 items; -rw-r--r-- 3 hdfs supergroup 62934 2017-10-11 13:38 /gatk4/output.bam; drwxr-xr-x - hdfs supergroup 0 2017-10-11 14:19 /gatk4/output_2.bam.parts. **The spark-submit:**. bash-4.2$ spark-submit; Usage: spark-submit [options] <app jar | python file> [app arguments]; Usage: spark-submit --kill [submission ID] --master [spark://...]; Usage: spark-submit --status [submission ID] --master [spark://...]. Options:; --master MASTER_URL spark://host:port, mesos://host:port, yarn, or local.; --deploy-mode DEPLOY_MODE Whether to launch the driver program locally (""client"") or; on one of the worker machines inside the cluster (""cluster""); (Default: client).; --class CLASS_NAME Your application's main class (for Java / Scala apps).; --name NAME A name of your application.; --jars JARS Comma-separated list of local jars to include on the driver; and executor classpaths.; ....... **the spark-shell**; bash-4.2$ spark-shell; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel).; Failed to created SparkJLineReader: java.io.IOException: Permission denied; Falling back to SimpleReader.; Welcome to; ____ __; / __/__ ___ _____/ /__; _\ \/ _ \/ _ `/ __/ '_/; /___/ .__/\_,_/_/ /_/\_\ version 1.6.0; /_/. Using Scala version 2.10.5 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_91); Type in expressions to have them evaluated.; Type :help for more information.; Spark context available as sc (master = yarn-client, app id = application_1507683879816_0007).; Wed Oct 11 14:25:24 CST 2017 Thread[main,5,main] java.io.FileNotFoundException: derby.log (Permission denied); ----------------------------------------------------------------; Wed Oct 11 14:25:24 CST 2017:; Booting Derby version The Apache Software Foundation - Apache Derby - 10.11.1.1 - (1616546): instance a816c00e-015f-0a1b-f1bd-00002ce33928 ; on database directory /tmp/spark-98953d35-8594-4907-b4a5-0870f1d17b3e/metastore with class loa",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-335696240:1005,log,log,1005,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-335696240,1,['log'],['log']
Testability,+1 fixes the issue for the test I was running. Thanks @cmnbroad,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3665#issuecomment-334471333:27,test,test,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3665#issuecomment-334471333,1,['test'],['test']
Testability,+1 for standardization as long as this allows having one common place for test files that are shared (eg generic files that can serve for many tests).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/445#issuecomment-96067879:74,test,test,74,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/445#issuecomment-96067879,2,['test'],"['test', 'tests']"
Testability,+1 merge when tests pass,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1875#issuecomment-223401550:14,test,tests,14,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1875#issuecomment-223401550,1,['test'],['tests']
Testability,+1 to increasing test coverage. . I don't think moving `getSpanningInterval` is the right solution to 1405. Why not just add the checks and leave it in SimpleInterval? It's a useful function that will be reinvented in a number of places if it's moved out.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1497#issuecomment-185820758:17,test,test,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1497#issuecomment-185820758,1,['test'],['test']
Testability,"+1MOn Sat, Feb 28, 2015 at 1:14 PM, ldgauthier notifications@github.com wrote: It would be wonderful to be able to use SelectVariants with a query like -select ""AF > 0.1"" on a VCF containing multiallelics and have it filter multiallelics by the allele with the highest AF. (Possibly conversely for ""AF < X""queries. Right now it crashes unless you use a crazy JEXL or pull out the multiallelics. Maybe we could make a maxAF/minAF in htsjdk/JEXLmap.java which equals AF for biallelics?. Internally, it might be nice to have a Map with the AF (or AC) for each allele for the SelectVariants issue and to simplify some of the crazy logic already in VariantAnnotator to deal with different allele ordering. As part of this task, we should also make 100% sure that allele ordering is preserved so that AF/AC array ordering is preserved during VC reading/writing/manipulation. —Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/241#issuecomment-76543438:627,log,logic,627,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/241#issuecomment-76543438,1,['log'],['logic']
Testability,", new DefaultArraySerializers.ObjectArraySerializer());; kryo.register(java.lang.Class.class, new DefaultSerializers.ClassSerializer());; kryo.register(java.util.LinkedHashMap.class, new MapSerializer());; kryo.register(java.util.HashMap.class, new MapSerializer());; kryo.register(java.util.ArrayList.class, new CollectionSerializer());; kryo.register(htsjdk.samtools.BAMRecord.class);; kryo.register(htsjdk.samtools.SAMBinaryTagAndValue.class);; kryo.register(htsjdk.samtools.ValidationStringency.class, new DefaultSerializers.EnumSerializer(ValidationStringency.class));; kryo.register(htsjdk.samtools.SAMFileHeader.class);; kryo.register(htsjdk.samtools.SAMProgramRecord.class);; kryo.register(htsjdk.samtools.SAMReadGroupRecord.class);; kryo.register(htsjdk.samtools.SAMSequenceDictionary.class);; kryo.register(htsjdk.samtools.SAMSequenceRecord.class);; kryo.register(PairedEnds.class);; try {; kryo.register(Class.forName(""scala.reflect.ClassTag$$anon$1""));; } catch (ClassNotFoundException e) {; //not a big deal, we'll just not register it; logger.debug(""Can't register class "" + e.getLocalizedMessage());; }. //; kryo.register(org.broadinstitute.hellbender.utils.variant.MinimalVariant.class);; kryo.register(org.broadinstitute.hellbender.utils.SimpleInterval.class);; kryo.register(org.broadinstitute.hellbender.utils.collections.IntervalsSkipList.class);; kryo.register(java.util.Hashtable.class);; kryo.register(org.broadinstitute.hellbender.utils.collections.IntervalsSkipListOneContig.class);; kryo.register(int[].class);; kryo.register(org.broadinstitute.hellbender.engine.datasources.ReferenceMultiSource.class);; kryo.register(org.broadinstitute.hellbender.engine.spark.datasources.ReferenceTwoBitSource.class);; kryo.register(scala.collection.convert.Wrappers$.class);; kryo.register(org.bdgenomics.adam.util.TwoBitRecord.class);; kryo.register(scala.None$.class);; kryo.register(org.bdgenomics.adam.models.NonoverlappingRegions.class);; kryo.register(org.broadinstitute.hellbender.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1733#issuecomment-212427242:1301,log,logger,1301,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1733#issuecomment-212427242,1,['log'],['logger']
Testability,",4; 20 10068168 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068169 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068170 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068171 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068172 . G *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068173 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068174 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068175 . T <NON_REF> . . . GT:DP:GQ:MIN_DP:PL ./.:20:17:20:0,17,729; ```. When the original GVCF is imported into GenomicsDB and then extracted:. ```; ./gatk GenomicsDBImport -R src/test/resources/large/human_g1k_v37.20.21.fasta -L 20 -V src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk4.g.vcf -genomicsdb-workspace-path spanDelWorkspace; ./gatk SelectVariants -V gendb://spanDelWorkspace -R src/test/resources/large/human_g1k_v37.20.21.fasta -O test.g.vcf -L 20; ```. It contains the following records in this region:. ```; 20 10068158 . GTGTATATATATA G,<NON_REF> . . BaseQRankSum=-6.520e-01;ClippingRankSum=0.00;DP=29;ExcessHet=3.01;MQRankSum=0.328;RAW_MQ=93364.00;ReadPosRankSum=-2.530e-0; 1 GT:AD:DP:GQ:PL:SB ./.:3,4,0:7:57:104,0,57,114,69,183:0,3,2,2; 20 10068159 . T *,<NON_REF> . . DP=29 GT:AD:DP:GQ:PL:SB ./.:3,4,0:7:57:104,0,57,114,69,183:0,3,2,2; 20 10068160 . GTATATATATATGTA G,*,<NON_REF> . . DP=28;ExcessHet=3.01;RAW_MQ=87005.00 GT:AD:DP:GQ:PL:SB ./.:0,2,4,0:6:53:735,162,131,102,0,53,507,174,108,472:0,0,; 2,4; 20 10068161 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,472:0,0,2,4; 20 10068162 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,47",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-403519172:3254,test,test,3254,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-403519172,1,['test'],['test']
Testability,",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.twist_exome.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthLabel"": ""NA12878_GRCh38_TWISTExome"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.vcf.gz"",; ""Benchm",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508:6560,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,6560,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508,76,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508:8553,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,8553,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508,68,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""36c1f67a-93a8-45b4-857a-ae22db7ac9e7"",; ""eval_cromwell_job_id"": ""81dbf637-d90c-4111-93b9-9cec426c5a39"",; ""created_at"": ""2023-08-18T19:32:11.841274"",; ""created_by"": null,; ""finished_at"": ""2023-08-19T05:42:56.447"",; ""results"": {; ""CHM controlHCprocesshours"": ""89.85896666666667"",; ""CHM controlHCsystemhours"": ""0.20056666666666664"",; ""CHM controlHCwallclockhours"": ""63.561513888888875"",; ""CHM controlHCwallclockmax"": ""3.142697222222222"",; ""CHM controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-CHMSampleHeadToHead/BenchmarkComparison/3609bc35-c943-4006-8b6f-9d71e6c68ef5/call-CONTROLRuntimeTask/monitoring.pdf"",; ""CHM controlindelF1Score"": ""0.8724"",; ""CHM controlindelPrecision"": ""0.8814"",; ""CHM controlsnpF1Score"": ""0.9784"",; ""CHM controlsnpPrecision"": ""0.9706"",; ""CHM controlsnpRecall"": ""0.9863"",; ""CHM controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-CHMSampleHeadToHead/BenchmarkComparison/3609bc35-c943-4006-8b6f-9d71e6c68ef5/call-BenchmarkVCFControlSample/Benchmark/96b872e8-26c0-4406-a7d0-addf04f4ad0e/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""78.10857222222224"",; ""CHM evalHCsystemhours"": ""0.28728055555555554"",; ""CHM evalHCwallclockhours"": ""52.84132777777778"",; ""CHM evalHCwallclockmax"": ""2.9151722222222225"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497:17176,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,17176,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""b7d06271-38b7-47d2-9d7c-af5543460de9"",; ""eval_cromwell_job_id"": ""beb77715-227e-4dbd-803f-4458c83607c8"",; ""created_at"": ""2023-05-12T15:09:42.984289"",; ""created_by"": null,; ""finished_at"": ""2023-05-13T01:07:11.594"",; ""results"": {; ""CHM controlHCprocesshours"": ""79.42513333333335"",; ""CHM controlHCsystemhours"": ""0.15543611111111108"",; ""CHM controlHCwallclockhours"": ""56.046666666666674"",; ""CHM controlHCwallclockmax"": ""3.0881333333333334"",; ""CHM controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/beb77715-227e-4dbd-803f-4458c83607c8/call-CHMSampleHeadToHead/BenchmarkComparison/f1b0b4cf-1a3f-47b3-84fa-529f118419ce/call-CONTROLRuntimeTask/monitoring.pdf"",; ""CHM controlindelF1Score"": ""0.8724"",; ""CHM controlindelPrecision"": ""0.8814"",; ""CHM controlsnpF1Score"": ""0.9784"",; ""CHM controlsnpPrecision"": ""0.9706"",; ""CHM controlsnpRecall"": ""0.9863"",; ""CHM controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/beb77715-227e-4dbd-803f-4458c83607c8/call-CHMSampleHeadToHead/BenchmarkComparison/f1b0b4cf-1a3f-47b3-84fa-529f118419ce/call-BenchmarkVCFControlSample/Benchmark/fb68536c-eb99-4d0d-a5c3-4f5accf94546/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""84.94748611111112"",; ""CHM evalHCsystemhours"": ""0.19002777777777768"",; ""CHM evalHCwallclockhours"": ""61.06326111111111"",; ""CHM evalHCwallclockmax"": ""3.2047833333333333"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/beb77715-227e-4dbd-803f-4458c83607c8/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1546478988:17201,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,17201,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1546478988,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,",; ""VariantCallingCarrotOrchestrated.gatk_control_docker"": ""broadinstitute/gatk-nightly:2022-03-04-4.2.5.0-9-gb097f75c5-NIGHTLY-SNAPSHOT"",; ""VariantCallingCarrotOrchestrated.gatk_docker"": ""image_build:gatk|223599bf204b1ffaf4a6f9756fd2dc665875efb7"",; ""VariantCallingCarrotOrchestrated.haplotype_scatter_count"": 50,; ""VariantCallingCarrotOrchestrated.monitoring_script"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/cromwell_monitoring_script.sh"",; ""VariantCallingCarrotOrchestrated.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrotOrchestrated.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrotOrchestrated.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrotOrchestrated.use_gatk3_haplotype_caller"": true; },; ""test_options"": {; ""read_from_cache"": false; },; ""eval_input"": {; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalMonitoringExample"": ""test_output:VariantCallingCarrot",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535220790:4123,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,4123,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535220790,2,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,",; ""VariantCallingCarrotOrchestrated.gatk_control_docker"": ""broadinstitute/gatk-nightly:2022-03-04-4.2.5.0-9-gb097f75c5-NIGHTLY-SNAPSHOT"",; ""VariantCallingCarrotOrchestrated.gatk_docker"": ""image_build:gatk|d791874a0490fec31b2587c06ad6c2f2ad397000"",; ""VariantCallingCarrotOrchestrated.haplotype_scatter_count"": 50,; ""VariantCallingCarrotOrchestrated.monitoring_script"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/cromwell_monitoring_script.sh"",; ""VariantCallingCarrotOrchestrated.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrotOrchestrated.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrotOrchestrated.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrotOrchestrated.use_gatk3_haplotype_caller"": true; },; ""test_options"": {; ""read_from_cache"": false; },; ""eval_input"": {; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalMonitoringExample"": ""test_output:VariantCallingCarrot",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1545896607:4123,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,4123,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1545896607,2,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,",; ""VariantCallingCarrotOrchestrated.gatk_control_docker"": ""broadinstitute/gatk-nightly:2022-03-04-4.2.5.0-9-gb097f75c5-NIGHTLY-SNAPSHOT"",; ""VariantCallingCarrotOrchestrated.gatk_docker"": ""image_build:gatk|fde1064710b236c7cdab83248817093046494660"",; ""VariantCallingCarrotOrchestrated.haplotype_scatter_count"": 50,; ""VariantCallingCarrotOrchestrated.monitoring_script"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/cromwell_monitoring_script.sh"",; ""VariantCallingCarrotOrchestrated.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrotOrchestrated.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrotOrchestrated.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrotOrchestrated.use_gatk3_haplotype_caller"": true; },; ""test_options"": {; ""read_from_cache"": false; },; ""eval_input"": {; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalMonitoringExample"": ""test_output:VariantCallingCarrot",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1548708498:4123,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,4123,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1548708498,2,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,",; ""test_id"": ""15973a95-055a-4540-9590-ce40f34411f5"",; ""name"": ""GATK HaplotypeCaller vs Nightly Test_run_2022-02-23 19:59:31.084286796 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://emeryj-testing/CarrotData/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://emeryj-testing/CarrotData/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://emeryj-testing/CarrotData/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCalling.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCalling.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCalling.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-re",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049160705:1193,test,testing,1193,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049160705,1,['test'],['testing']
Testability,",MedGen:C3463824,OMIM:614286,Orphanet:ORPHA52688|MeSH:D015179,MedGen:CN236642|MedGen:C2239176,OMIM:114550,Orphanet:ORPHA88673,SNOMED_CT:187769009,SNOMED_CT:25370001		Acute_myeloid_leukemia|Brainstem_glioma|Neoplasm_of_brain|Myelodysplastic_syndrome|Colorectal_Neoplasms|Hepatocellular_carcinoma		NC_000015.9:g.90631838C>T	no_assertion_criteria_provided	Pathogenic/Likely_pathogenic			single_nucleotide_variant	SO:0001483			IDH2:3418	SO:0001583|missense_variant	2	121913503		375987								HGNC:5383	Approved	gene with protein product	protein-coding gene		""isocitrate dehydrogenase 2 (NADP+), mitochondrial""			15q26.1	2017-03-24		2016-04-28		1.1.1.42	ENSG00000182054					CCDS10359, CCDS76792	OTTHUMG00000149815	147650	NM_001289910	P48735	ENSG00000182054	uc002box.4		B2R6L6|B4DFL2|Q96GT3	true	false		false	false		false	false	false	IDH2:3418	falsfalse	false	false	false	true	false	false	false	false	false	true	false	false	false	true	true	false	false	true	true	true	3	false	0	false		false	false	false	SNV	0x050268000a05000002100120	1	false	133	rs121913503																						3418	90631838	false	SITE	[745, 640|576, 448]			2483	1	93	[35, 32]	[139, 140]	[60, 60]	19						7.30	93				2809.17 ; ```. It seems that it does not matter if I choose hg19 oder 38. I used `funcotator_dataSources.v1.7.20200521s` as reference.; The call for hg38 was (I slightly shortened it for readability - usually it runs in nextflow - the hg19 call was more or less the same - the -L file is usually not only for IDH2 and has a interval_list format instead of .bed):. ```; gatk Funcotator -R reference/resources_broad_hg38_v0_Homo_sapiens_assembly38.fasta -V mutect2_out.vcf -O funcotator_out.maf --output-file-format MAF --data-sources-path reference/funcotator_dataSources.v1.7.20200521s/ --ref-version hg38 -L reference/idh2_r172.bed; ```. I will create an example test set as soon as I can, have reproducible errors for you. If you already have a hint for me to try, I would be happy to hear from you. Best regards,; Daniel",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5777#issuecomment-724975064:4260,test,test,4260,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5777#issuecomment-724975064,1,['test'],['test']
Testability,"- Done initializing engine; 17/02/06 21:42:46 INFO org.spark_project.jetty.util.log: Logging initialized @2790ms; 17/02/06 21:42:46 INFO org.spark_project.jetty.server.Server: jetty-9.2.z-SNAPSHOT; 17/02/06 21:42:46 INFO org.spark_project.jetty.server.ServerConnector: Started ServerConnector@5148cf20{HTTP/1.1}{0.0.0.0:4040}; 17/02/06 21:42:46 INFO org.spark_project.jetty.server.Server: Started @2906ms; 17/02/06 21:42:47 INFO com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase: GHFS version: 1.6.0-hadoop2; 17/02/06 21:42:48 INFO org.apache.hadoop.yarn.client.RMProxy: Connecting to ResourceManager at mw-test-m/10.128.0.7:8032; 17/02/06 21:42:48 INFO org.apache.hadoop.yarn.client.api.impl.YarnClientImpl: Submitted application application_1486412429336_0010; 17/02/06 21:42:53 INFO com.google.cloud.genomics.dataflow.utils.GCSOptions: Creating storgae client for PrintReadsSpark; 17/02/06 21:42:53 INFO com.google.cloud.genomics.dataflow.readers.bam.SeekableGCSStream: Creating SeekableGCSStream: gs://mw-pathseq-test/hs37d5cs.reads.sorted.bam.bai; 17/02/06 21:42:53 INFO com.google.cloud.genomics.dataflow.readers.bam.SeekableGCSStream: uriToStorageObject mw-pathseq-test/hs37d5cs.reads.sorted.bam.bai=mw-pathseq-test:hs37d5cs.reads.sorted.bam.bai; 17/02/06 21:42:54 INFO com.google.cloud.genomics.dataflow.readers.bam.BAMIO: No index for gs://mw-pathseq-test/hs37d5cs.reads.sorted.bam.bai; 17/02/06 21:42:54 INFO com.google.cloud.genomics.dataflow.readers.bam.SeekableGCSStream: Creating SeekableGCSStream: gs://mw-pathseq-test/hs37d5cs.reads.sorted.bam; 17/02/06 21:42:54 INFO com.google.cloud.genomics.dataflow.readers.bam.SeekableGCSStream: uriToStorageObject mw-pathseq-test/hs37d5cs.reads.sorted.bam=mw-pathseq-test:hs37d5cs.reads.sorted.bam; 17/02/06 21:42:54 INFO org.spark_project.jetty.server.ServerConnector: Stopped ServerConnector@5148cf20{HTTP/1.1}{0.0.0.0:4040}; 21:42:54.861 INFO PrintReadsSpark - Shutting down engine; [February 6, 2017 9:42:54 PM UTC] org.broadinstitute",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2394#issuecomment-277823929:5617,test,test,5617,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2394#issuecomment-277823929,1,['test'],['test']
Testability,"- I changed some capitalization depending on what a google search brought up for terms, e.g. Fisher's Exact Test --> Fisher's exact test. But I only did so for the summary and did not touch the rest of the doc.; - Again, I did not touch any other portion of the annotation docs. ---; ### Examining the gatkDocs via a browser:. - [ ] StrandOddsRatio equations looking odd with `$$` surrounding them, e.g.; ```; Odds Ratios in the 2x2 contingency table below are; $$ R = \frac{X[0][0] * X[1][1]}{X[0][1] * X[1][0]} $$; ```; - Docs with minimal content and author showing (DavidB or TakutoS):; - [ ] BaseQuality; - [ ] FragmentLength; - [ ] MappingQuality; - [ ] ReadPosition; - [ ] ReferenceBases; - [ ] StrandArtifact; - Docs with just minimal content; - ExcessHet; - SampleList; - [ ] OxoGReadCounts hypertext link at bottom should include a doi, title should be italicized not quoted and hypertext should be limited to title.; - Some of the docs have a ""Caveat"" section while others have ""Related annotations"" and others neither. This seems inconsistently applied.; - [ ] UniqueAltReadCount's content is one giant long paragraph that could use formatting. Also, again, not sure if UniqueAltReadCount.java's acronym is actually UNIQ_ALT_READ_COUNT.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3809#issuecomment-344711871:108,Test,Test,108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3809#issuecomment-344711871,2,"['Test', 'test']","['Test', 'test']"
Testability,-- | ---- |; | R | openjdk8 | [29984.6](https://travis-ci.com/broadinstitute/gatk/jobs/317851324) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.6/tests/test/index.html) |; | python | openjdk8 | [29984.5](https://travis-ci.com/broadinstitute/gatk/jobs/317851323) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.5/tests/test/index.html) |; | integration | oraclejdk8 | [29984.12](https://travis-ci.com/broadinstitute/gatk/jobs/317851330) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.12/tests/test/index.html) |; | integration | openjdk11 | [29984.13](https://travis-ci.com/broadinstitute/gatk/jobs/317851331) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.13/tests/test/index.html) |; | cloud | openjdk8 | [29984.1](https://travis-ci.com/broadinstitute/gatk/jobs/317851319) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.1/tests/test/index.html) |; | cloud | openjdk11 | [29984.15](https://travis-ci.com/broadinstitute/gatk/jobs/317851333) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.15/tests/test/index.html) |; | unit | openjdk11 | [29984.14](https://travis-ci.com/broadinstitute/gatk/jobs/317851332) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.14/tests/test/index.html) |; | integration | openjdk8 | [29984.2](https://travis-ci.com/broadinstitute/gatk/jobs/317851320) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.2/tests/test/index.html) |; | variantcalling | openjdk8 | [29984.4](https://travis-ci.com/broadinstitute/gatk/jobs/317851322) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.4/tests/test/index.html) |; | unit | openjdk8 | [29984.3](https://travis-ci.com/broadinstitute/gatk/jobs/317851321) | [logs](https://s,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611695380:1192,test,test-logs,1192,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611695380,1,['test'],['test-logs']
Testability,-- | ---- |; | R | openjdk8 | [29992.6](https://travis-ci.com/broadinstitute/gatk/jobs/317887706) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.6/tests/test/index.html) |; | python | openjdk8 | [29992.5](https://travis-ci.com/broadinstitute/gatk/jobs/317887705) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.5/tests/test/index.html) |; | integration | oraclejdk8 | [29992.12](https://travis-ci.com/broadinstitute/gatk/jobs/317887712) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.12/tests/test/index.html) |; | integration | openjdk11 | [29992.13](https://travis-ci.com/broadinstitute/gatk/jobs/317887713) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.13/tests/test/index.html) |; | cloud | openjdk8 | [29992.1](https://travis-ci.com/broadinstitute/gatk/jobs/317887701) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.1/tests/test/index.html) |; | cloud | openjdk11 | [29992.15](https://travis-ci.com/broadinstitute/gatk/jobs/317887715) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.15/tests/test/index.html) |; | integration | openjdk8 | [29992.2](https://travis-ci.com/broadinstitute/gatk/jobs/317887702) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.2/tests/test/index.html) |; | unit | openjdk11 | [29992.14](https://travis-ci.com/broadinstitute/gatk/jobs/317887714) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.14/tests/test/index.html) |; | variantcalling | openjdk8 | [29992.4](https://travis-ci.com/broadinstitute/gatk/jobs/317887704) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.4/tests/test/index.html) |; | unit | openjdk8 | [29992.3](https://travis-ci.com/broadinstitute/gatk/jobs/317887703) | [logs](https://s,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611733065:1192,test,test-logs,1192,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611733065,1,['test'],['test-logs']
Testability,-- |; | cloud | openjdk11 | [33752.14](https://travis-ci.com/broadinstitute/gatk/jobs/498538900) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.14/tests/test/index.html) |; | cloud | openjdk8 | [33752.1](https://travis-ci.com/broadinstitute/gatk/jobs/498538887) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.1/tests/test/index.html) |; | unit | openjdk11 | [33752.13](https://travis-ci.com/broadinstitute/gatk/jobs/498538899) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.13/tests/test/index.html) |; | integration | openjdk11 | [33752.12](https://travis-ci.com/broadinstitute/gatk/jobs/498538898) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.12/tests/test/index.html) |; | variantcalling | openjdk8 | [33752.4](https://travis-ci.com/broadinstitute/gatk/jobs/498538890) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.4/tests/test/index.html) |; | unit | openjdk8 | [33752.3](https://travis-ci.com/broadinstitute/gatk/jobs/498538889) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.3/tests/test/index.html) |; | conda | openjdk8 | [33752.5](https://travis-ci.com/broadinstitute/gatk/jobs/498538891) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.5/tests/test/index.html) |; | integration | openjdk8 | [33752.2](https://travis-ci.com/broadinstitute/gatk/jobs/498538888) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.2/tests/test/index.html) |; | cloud | openjdk11 | [33752.14](https://travis-ci.com/broadinstitute/gatk/jobs/498538900) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.14/tests/test/index.html) |; | cloud | openjdk8 | [33752.1](https://travis-ci.com/broadinstitute/gatk/jobs/498538887) | [logs](https://storage.goog,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234:1199,test,test-logs,1199,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234,1,['test'],['test-logs']
Testability,"--------------------------------------------; 16:11:10.075 INFO SVAnnotate - ------------------------------------------------------------; 16:11:10.075 INFO SVAnnotate - HTSJDK Version: 3.0.5; 16:11:10.075 INFO SVAnnotate - Picard Version: 3.0.0; 16:11:10.076 INFO SVAnnotate - Built for Spark Version: 3.3.1; 16:11:10.076 INFO SVAnnotate - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 16:11:10.076 INFO SVAnnotate - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 16:11:10.076 INFO SVAnnotate - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 16:11:10.076 INFO SVAnnotate - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 16:11:10.076 INFO SVAnnotate - Deflater: IntelDeflater; 16:11:10.077 INFO SVAnnotate - Inflater: IntelInflater; 16:11:10.077 INFO SVAnnotate - GCS max retries/reopens: 20; 16:11:10.077 INFO SVAnnotate - Requester pays: disabled; 16:11:10.077 INFO SVAnnotate - Initializing engine; 16:11:10.152 INFO FeatureManager - Using codec VCFCodec to read file file:///home/Division/user/2_Exome/snv_GWAS_data/disease_related_SV/test/test.vcf; 16:11:10.251 INFO SVAnnotate - Done initializing engine; 16:11:10.260 WARN GencodeGtfCodec - GENCODE GTF Header line 1 has a version number that is above maximum tested version (v 34) (given: 43): ##description: evidence-based annotation of the human genome (GRCh38), version 43 (Ensembl 109) Continuing, but errors may occur.; 16:11:10.260 WARN GencodeGtfCodec - GENCODE GTF Header line 1 has a version number that is above maximum tested version (v 34) (given: 43): ##description: evidence-based annotation of the human genome (GRCh38), version 43 (Ensembl 109) Continuing, but errors may occur.; 16:11:10.261 INFO FeatureManager - Using codec GencodeGtfCodec to read file file:///home/Division/user/2_Exome/snv_GWAS_data/disease_related_SV/gencode.v43.basic.modified_annotation.gtf; 16:11:10.261 WARN GencodeGtfCodec - GENCODE GTF Header line 1 has a version number that is above maximum tested version (v 34) (given: 43): ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8394#issuecomment-1621377138:2649,test,test,2649,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8394#issuecomment-1621377138,2,['test'],['test']
Testability,---|---|; | [...s/haplotypecaller/graphs/CommonSuffixSplitter.java](https://codecov.io/gh/broadinstitute/gatk/pull/4213/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9ncmFwaHMvQ29tbW9uU3VmZml4U3BsaXR0ZXIuamF2YQ==) | `91.045% <100%> (+0.136%)` | `21 <0> (ø)` | :arrow_down: |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4213/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-75.51%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4213/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4213/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4213/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `25.735% <0%> (-44.853%)` | `8% <0%> (-19%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4213/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-9%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4213/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vc,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4213#issuecomment-359306361:1913,test,test,1913,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4213#issuecomment-359306361,1,['test'],['test']
Testability,--read-validation-stringency SILENT --interval-set-rule UNION --interval-padding 0 --interval-exclusion-padding 0 --interval-merging-rule ALL --bam-partition-size 0 --disable-sequence-dictionary-validation false --add-output-vcf-command-line true --sharded-output false --num-reducers 0 --help false --version false --showHidden false --verbosity INFO --QUIET false --use-jdk-deflater false --use-jdk-inflater false --gcs-max-retries 20 --gcs-project-for-requester-pays --disable-tool-default-read-filters false. METRICS CLASS	org.broadinstitute.hellbender.utils.read.markduplicates.GATKDuplicationMetrics LIBRARY	UNPAIRED_READS_EXAMINED	READ_PAIRS_EXAMINED	SECONDARY_OR_SUPPLEMENTARY_RDS	UNMAPPED_READS	UNPAIRED_READ_DUPLICATES READ_PAIR_DUPLICATES	READ_PAIR_OPTICAL_DUPLICATES	PERCENT_DUPLICATION ESTIMATED_LIBRARY_SIZE; lib1	173613	53799913	0	7610605	81003	11974162	585768	0.222961	05870713. MarkDuplicates --INPUT /home/test/WGS_pipeline/TEST/output/orig_412.bowtie2.bam --OUTPUT /home/test/WGS_pipeline/TEST/output/orig_412.MarkDuplicates.bam --METRICS_FILE /home/test/WGS_pipeline/TEST/output/orig_412.MarkDuplicates-metrics.txt --MAX_SEQUENCES_FOR_DISK_READ_ENDS_MAP 50000 --MAX_FILE_HANDLES_FOR_READ_ENDS_MAP 8000 --SORTING_COLLECTION_SIZE_RATIO 0.25 --TAG_DUPLICATE_SET_MEMBERS false --REMOVE_SEQUENCING_DUPLICATES false --TAGGING_POLICY DontTag --CLEAR_DT true --ADD_PG_TAG_TO_READS true --REMOVE_DUPLICATES false --ASSUME_SORTED false --DUPLICATE_SCORING_STRATEGY SUM_OF_BASE_QUALITIES --PROGRAM_RECORD_ID MarkDup; licates --PROGRAM_GROUP_NAME MarkDuplicates --READ_NAME_REGEX <optimized capture of last three ':' separated fields as numeric values> --OPTICAL_DUPLICATE_PIXEL_DISTANCE 100 --MAX_OPTICAL_DUPLICATE_SET_SIZE 300000 --VERBOSITY INFO --QUIET false --VALIDATION_STRINGENCY STRICT --COMPRESSION_LEVEL 2 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX false --CREATE_MD5_FILE false --GA4GH_CLIENT_SECRETS client_secrets.json --help f; alse --version false --showHidden false --USE_JDK_,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427229905:1860,test,test,1860,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427229905,2,"['TEST', 'test']","['TEST', 'test']"
Testability,"-08-16T00:09:07.4061233Z symbol: class VisibleForTesting; 2022-08-16T00:09:07.4061591Z location: class ReadFilter; 2022-08-16T00:09:07.4083439Z src/main/java/org/broadinstitute/hellbender/utils/config/ConfigFactory.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.4092135Z src/main/java/org/broadinstitute/hellbender/utils/config/GATKConfig.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.4107682Z src/main/java/org/broadinstitute/hellbender/utils/variant/GATKVariantContextUtils.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.4116317Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:3: error: package com.google.common.collect does not exist; 2022-08-16T00:09:07.4117746Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:4: error: package com.google.common.collect does not exist; 2022-08-16T00:09:07.4124264Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:32: error: cannot find symbol; 2022-08-16T00:09:07.4124816Z private static BiMap<Log.LogLevel, Level> loggingLevelNamespaceMap;; 2022-08-16T00:09:07.4125855Z symbol: class BiMap; 2022-08-16T00:09:07.4126189Z location: class LoggingUtils; 2022-08-16T00:09:07.4126674Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:41: error: cannot find symbol; 2022-08-16T00:09:07.4127264Z private static BiMap<Log.LogLevel, java.util.logging.Level> javaUtilLevelNamespaceMap;; 2022-08-16T00:09:07.4127999Z symbol: class BiMap; 2022-08-16T00:09:07.4128334Z location: class LoggingUtils; 2022-08-16T00:09:07.4137968Z src/main/java/org/broadinstitute/hellbender/utils/gcs/BucketUtils.java:13: error: package com.google.common.base does not exist; 2022-08-16T00:09:07.4139500Z src/main/java/org/broadinstitute/hellbender/utils/gcs/BucketUtils.java:14: error: package com.google.common.io does not exist; 2022-08-16T00:09:07.4190745Z src/main/java/org/broadi",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217242480:13036,Log,LoggingUtils,13036,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217242480,1,['Log'],['LoggingUtils']
Testability,"-08-16T22:45:53.8035505Z symbol: class VisibleForTesting; 2022-08-16T22:45:53.8035658Z location: class ReadFilter; 2022-08-16T22:45:53.8087327Z src/main/java/org/broadinstitute/hellbender/utils/config/ConfigFactory.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.8103864Z src/main/java/org/broadinstitute/hellbender/utils/config/GATKConfig.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.8113680Z src/main/java/org/broadinstitute/hellbender/utils/variant/GATKVariantContextUtils.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.8117654Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:3: error: package com.google.common.collect does not exist; 2022-08-16T22:45:53.8118430Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:4: error: package com.google.common.collect does not exist; 2022-08-16T22:45:53.8124030Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:32: error: cannot find symbol; 2022-08-16T22:45:53.8124383Z private static BiMap<Log.LogLevel, Level> loggingLevelNamespaceMap;; 2022-08-16T22:45:53.8124657Z symbol: class BiMap; 2022-08-16T22:45:53.8124810Z location: class LoggingUtils; 2022-08-16T22:45:53.8125227Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:41: error: cannot find symbol; 2022-08-16T22:45:53.8125528Z private static BiMap<Log.LogLevel, java.util.logging.Level> javaUtilLevelNamespaceMap;; 2022-08-16T22:45:53.8125793Z symbol: class BiMap; 2022-08-16T22:45:53.8126059Z location: class LoggingUtils; 2022-08-16T22:45:53.8134767Z src/main/java/org/broadinstitute/hellbender/utils/gcs/BucketUtils.java:13: error: package com.google.common.base does not exist; 2022-08-16T22:45:53.8135486Z src/main/java/org/broadinstitute/hellbender/utils/gcs/BucketUtils.java:14: error: package com.google.common.io does not exist; 2022-08-16T22:45:53.8163449Z src/main/java/org/broadi",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217253370:15074,Log,LoggingUtils,15074,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217253370,1,['Log'],['LoggingUtils']
Testability,-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-calls --output_tracking_path=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-tracking --modeling_interval_list=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/intervals8729903857029540703.tsv --output_model_path=/gpfs/gsfs7/users/sangj2/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-model --enable_explicit_gc_bias_modeling=True --read_count_tsv_files /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-07410307475890858352.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-12290301678667639499.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-21824691337189197401.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-31776045115104931009.tsv --psi_s_scale=1.000000e-04 --mapping_error_rate=1.000000e-02 --depth_correction_tau=1.000000e+04 --q_c_expectation_mode=hybrid --max_bias_factors=5 --psi_t_scale=1.000000e-03 --log_mean_bias_std=1.000000e-01 --init_ard_rel_unexplained_variance=1.000000e-01 --num_gc_bins=20 --gc_curve_sd=1.000000e+00 --active_class_padding_hybrid_mode=50000 --enable_bias_factors=True --disable_bias_factors_in_active_class=False --p_alt=1.000000e-06 --cnv_coherence_length=1.000000e+04 --max_copy_number=5 --p_active=0.010000 --class_coherence_length=10000.000000 --learning_rate=1.000000e-02 --adamax_beta1=9.000000e-01 --adamax_beta2=9.900000e-01 --log_emission_samples_per_round=50 --log_emission_sampling_rounds=10 --log_emission_sampling_median_rel_error=5.000000e-03 --max_advi_iter_first,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547440019:9041,Test,Test-,9041,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547440019,1,['Test'],['Test-']
Testability,"-3.8.1 ...; git checkout --quiet refs/tags/3.8-1; GIT NEW branch -->; repository: https://github.com/broadgsa/gatk.git; at the commit: f2ed14489851ff2c00da3dcab9ad0b8f5ccec200; >>> Source unpacked in /scratch/var/tmp/portage/sci-biology/gatk-3.8.1/work; >>> Preparing source in /scratch/var/tmp/portage/sci-biology/gatk-3.8.1/work/gatk-3.8.1 ...; Equivalent maven command; mvn -Dmaven.repo.local=/scratch/var/tmp/portage/sci-biology/gatk-3.8.1/work/.m2/repository verify '-Ddisable.shadepackage'; [INFO] Scanning for projects...; [ERROR] [ERROR] Some problems were encountered while processing the POMs:; [FATAL] Non-parseable POM /scratch/var/tmp/portage/sci-biology/gatk-3.8.1/work/gatk-3.8.1/public/gatk-root/pom.xml: unexpected character in markup < (position: END_TAG seen ...</artifactId>\n<<... @15:3) @ /scratch/var/tmp/portage/sci-biology/gatk-3.8.1/work/gatk-3.8.1/public/gatk-root/pom.xml, line 15, column 3; @ ; [ERROR] The build could not read 1 project -> [Help 1]; [ERROR] ; [ERROR] The project org.broadinstitute.gatk:gatk-aggregator:[unknown-version] (/scratch/var/tmp/portage/sci-biology/gatk-3.8.1/work/gatk-3.8.1/pom.xml) has 1 error; [ERROR] Non-parseable POM /scratch/var/tmp/portage/sci-biology/gatk-3.8.1/work/gatk-3.8.1/public/gatk-root/pom.xml: unexpected character in markup < (position: END_TAG seen ...</artifactId>\n<<... @15:3) @ /scratch/var/tmp/portage/sci-biology/gatk-3.8.1/work/gatk-3.8.1/public/gatk-root/pom.xml, line 15, column 3 -> [Help 2]; [ERROR] ; [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.; [ERROR] Re-run Maven using the -X switch to enable full debug logging.; [ERROR] ; [ERROR] For more information about the errors and possible solutions, please read the following articles:; [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException; [ERROR] [Help 2] http://cwiki.apache.org/confluence/display/MAVEN/ModelParseException; ```. I cannot say if `git checkout -f` is used, though.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4685#issuecomment-383184514:2597,log,logging,2597,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4685#issuecomment-383184514,1,['log'],['logging']
Testability,-40-33/2-Output/1-Contig-Ploidy/14.Contig_Ploidy_Dir/ploidy-calls --output_calls_path=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-calls --output_tracking_path=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-tracking --modeling_interval_list=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/intervals8729903857029540703.tsv --output_model_path=/gpfs/gsfs7/users/sangj2/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-model --enable_explicit_gc_bias_modeling=True --read_count_tsv_files /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-07410307475890858352.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-12290301678667639499.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-21824691337189197401.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-31776045115104931009.tsv --psi_s_scale=1.000000e-04 --mapping_error_rate=1.000000e-02 --depth_correction_tau=1.000000e+04 --q_c_expectation_mode=hybrid --max_bias_factors=5 --psi_t_scale=1.000000e-03 --log_mean_bias_std=1.000000e-01 --init_ard_rel_unexplained_variance=1.000000e-01 --num_gc_bins=20 --gc_curve_sd=1.000000e+00 --active_class_padding_hybrid_mode=50000 --enable_bias_factors=True --disable_bias_factors_in_active_class=False --p_alt=1.000000e-06 --cnv_coherence_length=1.000000e+04 --max_copy_number=5 --p_active=0.010000 --class_coherence_length=10000.000000 --learning_rate=1.000000e-02 --adamax_beta1=9.000000e-01 --adamax_beta2=9.900000e-01 ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547440019:8896,Test,Test-,8896,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547440019,1,['Test'],['Test-']
Testability,"-4200-ad29-1e3886ea52ad%2Fcall-CombineSummaries%2Fsummary.csv)|; |NIST evalHCprocesshours|104.20126111111112|; |NIST evalHCsystemhours|0.20587777777777783|; |NIST evalHCwallclockhours|76.10080000000004|; |NIST evalHCwallclockmax|3.949438888888889|; |NIST evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9c49383b-01a9-4bc0-90fa-cde7e1090a47%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F75625b9d-e48b-4859-803e-58989e3ccf62%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |NIST evalindelF1Score|0.9902|; |NIST evalindelPrecision|0.9903|; |NIST evalsnpF1Score|0.9899|; |NIST evalsnpPrecision|0.9887|; |NIST evalsnpRecall|0.9911|; |NIST evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9c49383b-01a9-4bc0-90fa-cde7e1090a47%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F75625b9d-e48b-4859-803e-58989e3ccf62%2Fcall-BenchmarkVCFTestSample%2FBenchmark%2Fb91bffd4-8057-453f-a8e2-4767648da91a%2Fcall-CombineSummaries%2Fsummary.csv)|; |ROC_Plots_Reported|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9c49383b-01a9-4bc0-90fa-cde7e1090a47%2Fcall-CreateHTMLReport%2Freport.html)|. </details>. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""1bf5817a-d896-41de-b193-4a53a1264470"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-05-15 22:38:43.733246263 UTC"",; ""status"": ""succeeded"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""te",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169:5668,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,5668,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169,2,['Benchmark'],"['BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"-43ee-84f1-262115dcf151%2Fcall-CombineSummaries%2Fsummary.csv)|; |NIST evalHCprocesshours|93.23600000000005|; |NIST evalHCsystemhours|0.2127972222222222|; |NIST evalHCwallclockhours|62.422702777777786|; |NIST evalHCwallclockmax|3.1571083333333334|; |NIST evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F81dbf637-d90c-4111-93b9-9cec426c5a39%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F3238c3ac-5e7c-4130-bb68-26871868b49e%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |NIST evalindelF1Score|0.9902|; |NIST evalindelPrecision|0.9903|; |NIST evalsnpF1Score|0.9899|; |NIST evalsnpPrecision|0.9887|; |NIST evalsnpRecall|0.9911|; |NIST evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F81dbf637-d90c-4111-93b9-9cec426c5a39%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F3238c3ac-5e7c-4130-bb68-26871868b49e%2Fcall-BenchmarkVCFTestSample%2FBenchmark%2F499d7c71-c488-4bfb-9802-34f6c5696c8d%2Fcall-CombineSummaries%2Fsummary.csv)|; |ROC_Plots_Reported|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F81dbf637-d90c-4111-93b9-9cec426c5a39%2Fcall-CreateHTMLReport%2Freport.html)|. </details>. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""fca2c322-83ec-454a-a917-deb026411e19"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-08-18 19:32:11.841209749 UTC"",; ""status"": ""succeeded"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""te",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497:5681,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,5681,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497,2,['Benchmark'],"['BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"-4607-8ff6-97495034807f%2Fcall-CombineSummaries%2Fsummary.csv)|; |NIST evalHCprocesshours|96.65376666666666|; |NIST evalHCsystemhours|0.17881944444444442|; |NIST evalHCwallclockhours|68.38394444444445|; |NIST evalHCwallclockmax|3.8226138888888888|; |NIST evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff7eac327-c59c-43f7-a850-21bc3e0ccf52%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2Fd1a60d2b-8100-459a-9b05-72a22afccb4a%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |NIST evalindelF1Score|0.9902|; |NIST evalindelPrecision|0.9903|; |NIST evalsnpF1Score|0.9899|; |NIST evalsnpPrecision|0.9887|; |NIST evalsnpRecall|0.9911|; |NIST evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff7eac327-c59c-43f7-a850-21bc3e0ccf52%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2Fd1a60d2b-8100-459a-9b05-72a22afccb4a%2Fcall-BenchmarkVCFTestSample%2FBenchmark%2Fe62b142c-c39c-4c1f-9a08-c41a96647879%2Fcall-CombineSummaries%2Fsummary.csv)|; |ROC_Plots_Reported|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff7eac327-c59c-43f7-a850-21bc3e0ccf52%2Fcall-CreateHTMLReport%2FcacheCopy%2Freport.html)|. </details>. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""16c4f291-72ad-4c1c-9d59-497e046b8c39"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-07-12 17:28:58.385003733 UTC"",; ""status"": ""succeeded"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallin",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182703672:5683,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,5683,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182703672,2,['Benchmark'],"['BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"-4869-a5d9-98e5a8934db9%2Fcall-CombineSummaries%2Fsummary.csv)|; |NIST evalHCprocesshours|112.84528333333336|; |NIST evalHCsystemhours|0.8645277777777777|; |NIST evalHCwallclockhours|88.01737777777778|; |NIST evalHCwallclockmax|4.8386555555555555|; |NIST evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fba9f32d5-7b46-462c-8d1f-5692eee05534%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F043115ef-b68a-49a3-8272-8352b304c3aa%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |NIST evalindelF1Score|0.9902|; |NIST evalindelPrecision|0.9903|; |NIST evalsnpF1Score|0.9899|; |NIST evalsnpPrecision|0.9887|; |NIST evalsnpRecall|0.9911|; |NIST evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fba9f32d5-7b46-462c-8d1f-5692eee05534%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F043115ef-b68a-49a3-8272-8352b304c3aa%2Fcall-BenchmarkVCFTestSample%2FBenchmark%2Fd4de27fe-6aca-42a5-8a9f-6daff7b890e8%2Fcall-CombineSummaries%2Fsummary.csv)|; |ROC_Plots_Reported|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fba9f32d5-7b46-462c-8d1f-5692eee05534%2Fcall-CreateHTMLReport%2Freport.html)|. </details>. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""83db9528-9aa0-4963-a382-95c0dc24102d"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-08-21 22:38:12.285896770 UTC"",; ""status"": ""succeeded"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""te",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441:5674,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,5674,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441,2,['Benchmark'],"['BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"-4b7e-9bce-fc2eab77b125%2Fcall-CombineSummaries%2Fsummary.csv)|; |NIST evalHCprocesshours|103.71990555555556|; |NIST evalHCsystemhours|0.20632500000000004|; |NIST evalHCwallclockhours|76.41897222222222|; |NIST evalHCwallclockmax|4.163391666666667|; |NIST evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F43bcefb2-f38b-413d-9b65-06b489e64af1%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F24ad1003-6862-4e29-9d4d-ea8e85bcc78b%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |NIST evalindelF1Score|0.9902|; |NIST evalindelPrecision|0.9903|; |NIST evalsnpF1Score|0.9899|; |NIST evalsnpPrecision|0.9887|; |NIST evalsnpRecall|0.9911|; |NIST evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F43bcefb2-f38b-413d-9b65-06b489e64af1%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F24ad1003-6862-4e29-9d4d-ea8e85bcc78b%2Fcall-BenchmarkVCFTestSample%2FBenchmark%2Faba51ebf-90d5-44fa-8caa-0beb3cf1643b%2Fcall-CombineSummaries%2Fsummary.csv)|; |ROC_Plots_Reported|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F43bcefb2-f38b-413d-9b65-06b489e64af1%2Fcall-CreateHTMLReport%2Freport.html)|. </details>. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""1097e2ec-85ce-4fa8-b59e-fc82a8ea8bed"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-06-02 17:26:47.096893136 UTC"",; ""status"": ""succeeded"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""te",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574622123:5670,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,5670,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574622123,2,['Benchmark'],"['BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"-4bcb-996c-85c1233cb91e"",; ""name"": ""HaplotypeCaller DRAGEN WGS1_run_2020-12-03 17:12:22.583536574 UTC"",; ""status"": ""building"",; ""test_input"": {; ""TestWrapper.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/chm.full.m38.interval_list"",; ""TestWrapper.dataset_name"": ""CH1_CHM13_WGS1_downsampled"",; ""TestWrapper.dragstr_params"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.gatk-dragstr-table.txt"",; ""TestWrapper.enableBQD"": ""true"",; ""TestWrapper.enableDRAGSTR"": ""true"",; ""TestWrapper.enableDRDQ"": ""true"",; ""TestWrapper.enableFRD"": ""true"",; ""TestWrapper.evalLabel"": ""GATK"",; ""TestWrapper.gatk_docker_override"": ""image_build:gatk|b42606886deb0d0e1cc05a9ac3c2673f75309c67"",; ""TestWrapper.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""TestWrapper.input_bam"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam"",; ""TestWrapper.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam.bai"",; ""TestWrapper.make_bamout"": ""true"",; ""TestWrapper.make_gvcf"": ""false"",; ""TestWrapper.preemptible"": ""0"",; ""TestWrapper.refDict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""TestWrapper.refIndex"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""TestWrapper.ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""TestWrapper.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""TestWrapper.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""TestWrapper.reference"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""TestWrapper.referenceVersion"": ""hg38"",; ""TestWrapper.scattered_calling_intervals_list"": ""gs://dsp-methods-carrot-data/te",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738147120:1219,Test,TestWrapper,1219,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738147120,1,['Test'],['TestWrapper']
Testability,"-4e20-a8fe-816dc3e652ae%2Fcall-CombineSummaries%2Fsummary.csv)|; |NIST evalHCprocesshours|100.56416111111112|; |NIST evalHCsystemhours|0.19999166666666665|; |NIST evalHCwallclockhours|74.00048055555555|; |NIST evalHCwallclockmax|4.007605555555555|; |NIST evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9bc521dc-3c4c-4274-972c-9d1e4be850d5%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F4ffa2353-b1bc-4960-a5a4-96291208a7eb%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |NIST evalindelF1Score|0.9902|; |NIST evalindelPrecision|0.9903|; |NIST evalsnpF1Score|0.9899|; |NIST evalsnpPrecision|0.9887|; |NIST evalsnpRecall|0.9911|; |NIST evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9bc521dc-3c4c-4274-972c-9d1e4be850d5%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F4ffa2353-b1bc-4960-a5a4-96291208a7eb%2Fcall-BenchmarkVCFTestSample%2FBenchmark%2F6b79227b-3ca8-4f5b-96b6-60d57760cc5b%2Fcall-CombineSummaries%2Fsummary.csv)|; |ROC_Plots_Reported|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9bc521dc-3c4c-4274-972c-9d1e4be850d5%2Fcall-CreateHTMLReport%2FcacheCopy%2Freport.html)|. </details>. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""121a726a-b813-46be-a21e-d744cf8e1212"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-05-03 15:51:41.295367156 UTC"",; ""status"": ""succeeded"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f3",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590:5683,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,5683,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590,2,['Benchmark'],"['BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"-65e6-451f-a04e-6a3f5e7fe5c8/call-CHMSampleHeadToHead/BenchmarkComparison/a332776f-175a-4595-bdeb-ab62e7f89921/call-CONTROLRuntimeTask/cacheCopy/monitoring.pdf"",; ""CHM controlindelF1Score"": ""0.8724"",; ""CHM controlindelPrecision"": ""0.8814"",; ""CHM controlsnpF1Score"": ""0.9784"",; ""CHM controlsnpPrecision"": ""0.9706"",; ""CHM controlsnpRecall"": ""0.9863"",; ""CHM controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/0e5c32ab-65e6-451f-a04e-6a3f5e7fe5c8/call-CHMSampleHeadToHead/BenchmarkComparison/a332776f-175a-4595-bdeb-ab62e7f89921/call-BenchmarkVCFControlSample/Benchmark/06cbfab4-17a7-4415-9118-d0ebbe156bfd/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""84.26158888888888"",; ""CHM evalHCsystemhours"": ""0.19243055555555555"",; ""CHM evalHCwallclockhours"": ""60.242008333333345"",; ""CHM evalHCwallclockmax"": ""3.176513888888889"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/0e5c32ab-65e6-451f-a04e-6a3f5e7fe5c8/call-CHMSampleHeadToHead/BenchmarkComparison/a332776f-175a-4595-bdeb-ab62e7f89921/call-EVALRuntimeTask/cacheCopy/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/0e5c32ab-65e6-451f-a04e-6a3f5e7fe5c8/call-CHMSampleHeadToHead/BenchmarkComparison/a332776f-175a-4595-bdeb-ab62e7f89921/call-BenchmarkVCFTestSample/Benchmark/362a3e75-6a39-4bde-bb79-e6562dc66dd9/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/0e5c32ab-65e6-451f-a04e-6a3f5e7fe5c8/call-EXOME1Sampl",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535104202:18190,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,18190,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535104202,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"-; // arguments for debugging / developing the haplotype caller; @@ -634,12 +635,11 @@ public class HaplotypeCaller extends ActiveRegionWalker<List<VariantContext>, In; if ( emitReferenceConfidence() ) {; ; if (SCAC.genotypingOutputMode == GenotypingOutputMode.GENOTYPE_GIVEN_ALLELES); - throw new UserException.BadArgumentValue(""ERC/gt_mode"",""you cannot request reference confidence output and Genotyping Giving Alleles at the same time"");; + throw new UserException.BadArgumentValue(""ERC/gt_mode"",""you cannot request reference confidence output and GENOTYPE_GIVEN_ALLELES at the same time"");; ; SCAC.genotypeArgs.STANDARD_CONFIDENCE_FOR_EMITTING = -0.0;; SCAC.genotypeArgs.STANDARD_CONFIDENCE_FOR_CALLING = -0.0;; ; -; // also, we don't need to output several of the annotations; annotationsToExclude.add(""ChromosomeCounts"");; annotationsToExclude.add(""FisherStrand"");; @@ -651,6 +651,9 @@ public class HaplotypeCaller extends ActiveRegionWalker<List<VariantContext>, In; if (!SCAC.annotateAllSitesWithPLs); logger.info(""All sites annotated with PLs forced to true for reference-model confidence output"");; SCAC.annotateAllSitesWithPLs = true;; + } else if ( ! doNotRunPhysicalPhasing ) {; + doNotRunPhysicalPhasing = true;; + logger.info(""Disabling physical phasing, which is supported only for reference-model confidence output"");; }; ; if ( SCAC.AFmodel == AFCalcFactory.Calculation.EXACT_GENERAL_PLOIDY ); @@ -678,7 +681,7 @@ public class HaplotypeCaller extends ActiveRegionWalker<List<VariantContext>, In; if( SCAC.genotypingOutputMode == GenotypingOutputMode.GENOTYPE_GIVEN_ALLELES && consensusMode ); throw new UserException(""HaplotypeCaller cannot be run in both GENOTYPE_GIVEN_ALLELES mode and in consensus mode. Please choose one or the other."");; ; - genotypingEngine = new HaplotypeCallerGenotypingEngine( getToolkit(), SCAC, tryPhysicalPhasing);; + genotypingEngine = new HaplotypeCallerGenotypingEngine( getToolkit(), SCAC, !doNotRunPhysicalPhasing);; // initialize the output VCF hea",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5727#issuecomment-470679237:3128,log,logger,3128,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5727#issuecomment-470679237,1,['log'],['logger']
Testability,"-bff9-bd684393ff6c/call-CHMSampleHeadToHead/BenchmarkComparison/a1db35b8-cc7b-4019-bdd0-9f423762542e/call-BenchmarkVCFControlSample/Benchmark/7195c554-534f-43ef-80c2-77bdafa1827f/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""78.10181666666668"",; ""CHM evalHCsystemhours"": ""0.16157500000000005"",; ""CHM evalHCwallclockhours"": ""55.006172222222226"",; ""CHM evalHCwallclockmax"": ""2.8554194444444443"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-baa5-4052-bff9-bd684393ff6c/call-CHMSampleHeadToHead/BenchmarkComparison/a1db35b8-cc7b-4019-bdd0-9f423762542e/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-baa5-4052-bff9-bd684393ff6c/call-CHMSampleHeadToHead/BenchmarkComparison/a1db35b8-cc7b-4019-bdd0-9f423762542e/call-BenchmarkVCFTestSample/Benchmark/5c4f9069-86b3-4d8c-b765-38a67169e4b4/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-baa5-4052-bff9-bd684393ff6c/call-EXOME1SampleHeadToHead/BenchmarkComparison/688ca200-89b9-479b-b701-5fa0b0854778/call-BenchmarkVCFControlSample/Benchmark/59d8f8b1-1323-4e56-a1b1-0b1b2c8f2cc0/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194801748:17932,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,17932,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194801748,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-65.217%)` | `2% <0%> (-7%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4889/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-10%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4889/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `0% <0%> (-22.807%)` | `0% <0%> (-2%)` | |; | [...titute/hellbender/utils/test/MiniClusterUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4889/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L01pbmlDbHVzdGVyVXRpbHMuamF2YQ==) | `78.947% <0%> (-10.526%)` | `6% <0%> (-1%)` | |; | [...der/engine/spark/datasources/ReadsSparkSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4889/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVhZHNTcGFya1NvdXJjZS5qYXZh) | `77.083% <0%> (-3.125%)` | `31% <0%> (ø)` | |; | [...adinstitute/hellbender/engine/ReadsDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4889/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUmVhZHNEYXRhU291cmNlLmphdmE=) | `89.394% <0%> (-3.03%)` | `61% <0%> (-2%)` | |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4889/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `62.838% <0%> (-2.703%)` | `36% <0%> (-3%)` | |; | ... and [3 more](https://codecov.io/gh/broadinstitute/gatk/pull/4889/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4889#issuecomment-396706300:3645,test,test,3645,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4889#issuecomment-396706300,1,['test'],['test']
Testability,-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-65.217%)` | `2% <0%> (-7%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4904/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-10%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4904/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `0% <0%> (-22.807%)` | `0% <0%> (-2%)` | |; | [...titute/hellbender/utils/test/MiniClusterUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4904/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L01pbmlDbHVzdGVyVXRpbHMuamF2YQ==) | `78.947% <0%> (-10.526%)` | `6% <0%> (-1%)` | |; | [...der/engine/spark/datasources/ReadsSparkSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4904/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVhZHNTcGFya1NvdXJjZS5qYXZh) | `77.083% <0%> (-3.125%)` | `31% <0%> (ø)` | |; | [...adinstitute/hellbender/engine/ReadsDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4904/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUmVhZHNEYXRhU291cmNlLmphdmE=) | `89.394% <0%> (-3.03%)` | `61% <0%> (-2%)` | |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4904/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `62.838% <0%> (-2.703%)` | `36% <0%> (-3%)` | |; | ... and [3 more](https://codecov.io/gh/broadinstitute/gatk/pull/4904/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4904#issuecomment-398181642:3655,test,test,3655,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4904#issuecomment-398181642,1,['test'],['test']
Testability,"-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCalling.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCalling.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCalling.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkComparison.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkComparison.referenceVersion"": ""HG38"",; ""BenchmarkComparison.stratIntervals"": [; ""gs://gcp-public-data--broad-references/hg38/v0/exome_evaluation_regions.v1.interval_list"",; ""gs://broad-dsp-spec-ops/scratch/mshand/EvaluationStratIntervalLists/LCRFromHengHg38.interval_list""; ],; ""BenchmarkComparison.stratLabels"": ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1027191801:2166,Benchmark,BenchmarkComparison,2166,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1027191801,4,['Benchmark'],['BenchmarkComparison']
Testability,"-insertions_default_quality 45 --deletions_default_quality 45 --low_quality_tail 2 --quantizing_levels 16 --interval_set_rule UNION --interval_padding 0 --bqsrBAQGapOpenPenalty 40.0 --preserve_qscores_less_than 6 --useOriginalQualities false --defaultBaseQualities -1 --runner LOCAL --client_secret client-secrets.json --help false --version false --VERBOSITY INFO --QUIET false; [June 1, 2015 5:51:02 PM EDT] Executing as pgrosu@eofe5 on Linux 2.6.32-358.el6.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_05-b13; Version: Version:version-unknown-SNAPSHOT JdkDeflater; 17:51:02.969 [main] INFO org.broadinstitute.hellbender.dev.tools.walkers.bqsr.BaseRecalibratorDataflow - Initializing engine; 17:51:02.970 [main] INFO org.broadinstitute.hellbender.dev.tools.walkers.bqsr.BaseRecalibratorDataflow - Done initializing engine; 17:51:03.123 [main] INFO org.broadinstitute.hellbender.dev.tools.walkers.bqsr.BaseRecalibratorDataflow - Shutting down engine; [June 1, 2015 5:51:03 PM EDT] org.broadinstitute.hellbender.dev.tools.walkers.bqsr.BaseRecalibratorDataflow done. Elapsed time: 0.00 minutes.; Runtime.totalMemory()=1077936128; Exception in thread ""main"" java.lang.NoSuchMethodError: com.google.common.collect.Sets.newConcurrentHashSet()Ljava/util/Set;; at com.google.cloud.dataflow.sdk.options.PipelineOptionsFactory.<clinit>(PipelineOptionsFactory.java:426); at org.broadinstitute.hellbender.engine.dataflow.DataflowCommandLineProgram.doWork(DataflowCommandLineProgram.java:77); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:97); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:150); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:71); at org.broadinstitute.hellbender.Main.main(Main.java:86); ```. I don't have a billing-enabled GCS account, so I did this test to see if I could make it run with my `client-secrets.json` file. Any guidance would be appreciated. Thank you,; Paul",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/535#issuecomment-107730499:5787,test,test,5787,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/535#issuecomment-107730499,1,['test'],['test']
Testability,"-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508:8633,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,8633,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508,68,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""test_options"": null,; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallingCarrot.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCallingCarrot.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCallingCarrot.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCallingCarrot.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkComparison.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkComparison.referenceVersion"": ""HG38"",; ""BenchmarkComparison.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/exome_evaluation_regions.v1.interval_list"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/L",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055740510:2142,Benchmark,BenchmarkComparison,2142,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055740510,4,['Benchmark'],['BenchmarkComparison']
Testability,"-x86_64-with-centos-7.5.1804-Core-x86_64-3.6.2-64/tmpyvtzjxzm'; 00:50:23.369 DEBUG ScriptExecutor - Result: 1; 00:50:23.370 INFO GermlineCNVCaller - Shutting down engine; [October 29, 2019 12:50:23 AM EDT] org.broadinstitute.hellbender.tools.copynumber.GermlineCNVCaller done. Elapsed time: 0.72 minutes.; Runtime.totalMemory()=2335703040; org.broadinstitute.hellbender.utils.python.PythonScriptExecutorException: ; python exited with 1; Command Line: python /data/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/cohort_denoising_calling.7177495255490777642.py --ploidy_calls_path=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/1-Contig-Ploidy/14.Contig_Ploidy_Dir/ploidy-calls --output_calls_path=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-calls --output_tracking_path=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-tracking --modeling_interval_list=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/intervals8729903857029540703.tsv --output_model_path=/gpfs/gsfs7/users/sangj2/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-model --enable_explicit_gc_bias_modeling=True --read_count_tsv_files /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-07410307475890858352.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-12290301678667639499.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-21824691337189197401.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-1",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547440019:8215,Test,Test-,8215,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547440019,1,['Test'],['Test-']
Testability,-|---|---|---|; | [...s/haplotypecaller/graphs/SharedSequenceMerger.java](https://codecov.io/gh/broadinstitute/gatk/pull/4214/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9ncmFwaHMvU2hhcmVkU2VxdWVuY2VNZXJnZXIuamF2YQ==) | `92.105% <100%> (ø)` | `11 <6> (ø)` | :arrow_down: |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4214/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-75.51%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4214/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4214/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4214/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `25.735% <0%> (-44.853%)` | `8% <0%> (-19%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4214/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-9%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4214/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vc,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4214#issuecomment-359307979:1905,test,test,1905,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4214#issuecomment-359307979,1,['test'],['test']
Testability,. . . and one of the tests is sadistic.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4650#issuecomment-383357042:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4650#issuecomment-383357042,1,['test'],['tests']
Testability,. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | cloud | openjdk11 | [33752.14](https://travis-ci.com/broadinstitute/gatk/jobs/498538900) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.14/tests/test/index.html) |; | cloud | openjdk8 | [33752.1](https://travis-ci.com/broadinstitute/gatk/jobs/498538887) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.1/tests/test/index.html) |; | unit | openjdk11 | [33752.13](https://travis-ci.com/broadinstitute/gatk/jobs/498538899) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.13/tests/test/index.html) |; | integration | openjdk11 | [33752.12](https://travis-ci.com/broadinstitute/gatk/jobs/498538898) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.12/tests/test/index.html) |; | variantcalling | openjdk8 | [33752.4](https://travis-ci.com/broadinstitute/gatk/jobs/498538890) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.4/tests/test/index.html) |; | unit | openjdk8 | [33752.3](https://travis-ci.com/broadinstitute/gatk/jobs/498538889) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.3/tests/test/index.html) |; | conda | openjdk8 | [33752.5](https://travis-ci.com/broadinstitute/gatk/jobs/498538891) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.5/tests/test/index.html) |; | integration | openjdk8 | [33752.2](https://travis-ci.com/broadinstitute/gatk/jobs/498538888) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.2/tests/test/index.html) |; | cloud | openjdk11 | [33752.14](https://travis-ci.com/broadinstitute/gatk/jobs/498538900) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.14/tests/test/index.html) |; | cloud | openjdk8 | [33752.1](https://travis-ci.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234:1151,log,logs,1151,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234,1,['log'],['logs']
Testability,"...cab0d179986f7f7587e0e005a7b8e54d20168a65?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUHJvZ3Jlc3NNZXRlci5qYXZh) | `91.429% <0%> (+1.429%)` | `24% <0%> (+1%)` | :white_check_mark: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/compare/521128573b0d1a01ee60725c2b84e4a4f6a12fa3...cab0d179986f7f7587e0e005a7b8e54d20168a65?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `75.694% <0%> (+2.083%)` | `36% <0%> (ø)` | :x: |; | [...oadinstitute/hellbender/utils/GenomeLocParser.java](https://codecov.io/gh/broadinstitute/gatk/compare/521128573b0d1a01ee60725c2b84e4a4f6a12fa3...cab0d179986f7f7587e0e005a7b8e54d20168a65?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9HZW5vbWVMb2NQYXJzZXIuamF2YQ==) | `90.083% <0%> (+4.132%)` | `57% <0%> (+2%)` | :white_check_mark: |; | [...ellbender/utils/test/CommandLineProgramTester.java](https://codecov.io/gh/broadinstitute/gatk/compare/521128573b0d1a01ee60725c2b84e4a4f6a12fa3...cab0d179986f7f7587e0e005a7b8e54d20168a65?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0NvbW1hbmRMaW5lUHJvZ3JhbVRlc3Rlci5qYXZh) | `90.476% <0%> (+4.762%)` | `8% <0%> (+1%)` | :white_check_mark: |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2423?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2423?src=pr&el=footer). Last update [5211285...cab0d17](https://codecov.io/gh/broadinstitute/gatk/compare/521128573b0d1a01ee60725c2b84e4a4f6a12fa3...cab0d179986f7f7587e0e005a7b8e54d20168a65?el=footer&src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/d",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-282342687:2435,test,test,2435,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-282342687,1,['test'],['test']
Testability,..llbender/tools/genomicsdb/GenomicsDBConstants.java](https://codecov.io/gh/broadinstitute/gatk/pull/4970/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9nZW5vbWljc2RiL0dlbm9taWNzREJDb25zdGFudHMuamF2YQ==) | `0% <0%> (ø)` | `0% <0%> (ø)` | :arrow_down: |; | [...r/tools/walkers/annotator/ClippingRankSumTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4970/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9DbGlwcGluZ1JhbmtTdW1UZXN0LmphdmE=) | `100% <0%> (ø)` | `4% <0%> (ø)` | :arrow_down: |; | [...ender/engine/spark/datasources/ReadsSparkSink.java](https://codecov.io/gh/broadinstitute/gatk/pull/4970/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVhZHNTcGFya1NpbmsuamF2YQ==) | `77.027% <0%> (+0.676%)` | `33% <0%> (+1%)` | :arrow_up: |; | [...spark/sv/evidence/FindBreakpointEvidenceSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4970/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9ldmlkZW5jZS9GaW5kQnJlYWtwb2ludEV2aWRlbmNlU3BhcmsuamF2YQ==) | `69.485% <0%> (+0.825%)` | `61% <0%> (+1%)` | :arrow_up: |; | [...utils/test/ReadsPreprocessingPipelineTestData.java](https://codecov.io/gh/broadinstitute/gatk/pull/4970/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1JlYWRzUHJlcHJvY2Vzc2luZ1BpcGVsaW5lVGVzdERhdGEuamF2YQ==) | `0.862% <0%> (+0.862%)` | `1% <0%> (+1%)` | :arrow_up: |; | [...ute/hellbender/utils/test/IntegrationTestSpec.java](https://codecov.io/gh/broadinstitute/gatk/pull/4970/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0ludGVncmF0aW9uVGVzdFNwZWMuamF2YQ==) | `73.118% <0%> (+1.075%)` | `25% <0%> (ø)` | :arrow_down: |; | ... and [588 more](https://codecov.io/gh/broadinstitute/gatk/pull/4970/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4970#issuecomment-401503431:3581,test,test,3581,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4970#issuecomment-401503431,2,['test'],['test']
Testability,.43%)` | `58% <0%> (+1%)` | |; | [.../tools/walkers/haplotypecaller/RefVsAnyResult.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9SZWZWc0FueVJlc3VsdC5qYXZh) | `100% <0%> (ø)` | `3% <0%> (+1%)` | :arrow_up: |; | [...ools/walkers/annotator/VariantAnnotatorEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9WYXJpYW50QW5ub3RhdG9yRW5naW5lLmphdmE=) | `91.304% <0%> (ø)` | `70% <0%> (ø)` | :arrow_down: |; | [...line/GATKPlugin/testpluggables/TestAnnotation.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL0dBVEtQbHVnaW4vdGVzdHBsdWdnYWJsZXMvVGVzdEFubm90YXRpb24uamF2YQ==) | `0% <0%> (ø)` | `0% <0%> (?)` | |; | [...line/GATKPlugin/testpluggables/TestReadFilter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL0dBVEtQbHVnaW4vdGVzdHBsdWdnYWJsZXMvVGVzdFJlYWRGaWx0ZXIuamF2YQ==) | `0% <0%> (ø)` | `0% <0%> (?)` | |; | [...nder/tools/funcotator/FuncotatorTestConstants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JUZXN0Q29uc3RhbnRzLmphdmE=) | `98.333% <0%> (+0.028%)` | `1% <0%> (ø)` | :arrow_down: |; | [...dataSources/vcf/VcfFuncotationFactoryUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL3ZjZi9WY2ZGdW5jb3RhdGlvbkZhY3RvcnlVbml0VGVzdC5qYXZh) | `98.104% <0%> (+0.055%)` | `30% <0%> (+1%)` | :arrow_up: |; | ... and [11 more](https://codecov.io/gh/broadinstitute/g,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5566#issuecomment-452843310:3149,test,testpluggables,3149,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5566#issuecomment-452843310,2,"['Test', 'test']","['TestReadFilter', 'testpluggables']"
Testability,".583536574 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""294dd9eb-5bbd-4756-b71f-479bf9b15d69"",; ""test_id"": ""dfc196dd-c732-4bcb-996c-85c1233cb91e"",; ""name"": ""HaplotypeCaller DRAGEN WGS1_run_2020-12-03 17:12:22.583536574 UTC"",; ""status"": ""building"",; ""test_input"": {; ""TestWrapper.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/chm.full.m38.interval_list"",; ""TestWrapper.dataset_name"": ""CH1_CHM13_WGS1_downsampled"",; ""TestWrapper.dragstr_params"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.gatk-dragstr-table.txt"",; ""TestWrapper.enableBQD"": ""true"",; ""TestWrapper.enableDRAGSTR"": ""true"",; ""TestWrapper.enableDRDQ"": ""true"",; ""TestWrapper.enableFRD"": ""true"",; ""TestWrapper.evalLabel"": ""GATK"",; ""TestWrapper.gatk_docker_override"": ""image_build:gatk|b42606886deb0d0e1cc05a9ac3c2673f75309c67"",; ""TestWrapper.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""TestWrapper.input_bam"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam"",; ""TestWrapper.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam.bai"",; ""TestWrapper.make_bamout"": ""true"",; ""TestWrapper.make_gvcf"": ""false"",; ""TestWrapper.preemptible"": ""0"",; ""TestWrapper.refDict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""TestWrapper.refIndex"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""TestWrapper.ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""TestWrapper.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""TestWrapper.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""TestWrapper.reference"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta""",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738147120:1095,Test,TestWrapper,1095,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738147120,1,['Test'],['TestWrapper']
Testability,".691 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/cnorman/projects/gatk/build/libs/gatk-package-4.1.7.0-41-g79586b8-SNAPSHOT-local.jar!/com/intel/gkl/native/libgkl_compression.dylib; [Mon Jun 22 16:03:19 EDT 2020] MergeVcfs --INPUT data/calling/my.vcf.gz --INPUT data/calling/b.vcf.gz --OUTPUT out.vcf.gz --VERBOSITY INFO --QUIET false --VALIDATION_STRINGENCY STRICT --COMPRESSION_LEVEL 2 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX true --CREATE_MD5_FILE false --GA4GH_CLIENT_SECRETS client_secrets.json --help false --version false --showHidden false --USE_JDK_DEFLATER false --USE_JDK_INFLATER false; [Mon Jun 22 16:03:19 EDT 2020] Executing as cnorman@WMCEA-78B on Mac OS X 10.13.6 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14; Deflater: Intel; Inflater: Intel; Provider GCS is available; Picard version: Version:4.1.7.0-41-g79586b8-SNAPSHOT; [Mon Jun 22 16:03:19 EDT 2020] picard.vcf.MergeVcfs done. Elapsed time: 0.00 minutes.; Runtime.totalMemory()=372244480; To get help, see http://broadinstitute.github.io/picard/index.html#GettingHelp; htsjdk.samtools.SAMException: Cannot read non-existent file: file:///private/tmp/test%20a/data/calling/my.vcf.gz; 	at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:498); 	at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:485); 	at picard.vcf.MergeVcfs.doWork(MergeVcfs.java:177); 	at picard.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:305); 	at org.broadinstitute.hellbender.cmdline.PicardCommandLineProgramExecutor.instanceMain(PicardCommandLineProgramExecutor.java:25); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:163); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:206); 	at org.broadinstitute.hellbender.Main.main(Main.java:292); ```. @fdchevalier It you're still convinced its not working, can you post a matched set of command line input and output like I did here, and I can try to dig a little deeper ? Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6664#issuecomment-647743321:3705,test,test,3705,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6664#issuecomment-647743321,3,"['assert', 'test']","['assertFileIsReadable', 'test']"
Testability,.8% 0 + 426 java.io.FileOutputStream.writeBytes; 2.1% 0 + 318 java.net.SocketInputStream.socketRead0; 1.7% 0 + 266 sun.nio.ch.EPollArrayWrapper.epollWait; 0.7% 0 + 99 sun.nio.ch.NativeThread.current; 0.6% 0 + 96 java.util.zip.Deflater.reset; 0.6% 0 + 88 java.util.zip.Inflater.reset; 0.4% 0 + 58 org.apache.hadoop.util.NativeCrc32.nativeComputeChunkedSumsByteArray; 0.3% 0 + 47 java.io.FileInputStream.readBytes; 0.3% 0 + 41 sun.nio.ch.FileDispatcherImpl.read0; 0.2% 0 + 26 java.lang.Throwable.fillInStackTrace; 0.1% 0 + 19 java.io.UnixFileSystem.getLength; 0.1% 0 + 13 java.lang.Object.getClass; 0.1% 0 + 12 java.lang.Object.hashCode; 0.1% 11 + 0 java.lang.ClassLoader.defineClass1; 0.1% 3 + 7 java.lang.Class.forName0; 0.1% 0 + 9 sun.nio.ch.FileDispatcherImpl.size0; 0.1% 0 + 9 java.util.zip.ZipFile.getEntry; 0.1% 0 + 8 java.lang.Class.isArray; 0.0% 0 + 7 java.io.FileOutputStream.open0; 0.0% 0 + 6 java.lang.Class.isPrimitive; 0.0% 0 + 6 java.io.FileOutputStream.close0; 73.9% 16 + 11236 Total stub (including elided). Thread-local ticks:; 60.2% 23027 Blocked (of total); 0.0% 1 Class loader; 0.0% 1 Unknown: thread_state; ```. and on igzip:. ```; Flat profile of 425.43 secs (38916 total ticks): Executor task launch worker-4. Interpreted + native Method ; 0.1% 0 + 23 java.net.Inet6AddressImpl.lookupAllHostAddr; 0.1% 0 + 16 java.io.UnixFileSystem.delete0; 0.1% 14 + 0 org.apache.spark.util.collection.TimSort.sort; 0.1% 10 + 0 org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsNewAPIHadoopDataset$1$$anonfun$12$$anonfun$apply$4.apply$mcV$sp; 0.1% 10 + 0 htsjdk.samtools.BAMRecordCodec.encode; 0.0% 0 + 5 java.net.SocketInputStream.socketRead0; 0.0% 5 + 0 org.apache.spark.util.collection.TimSort$SortState.mergeHi; 0.0% 0 + 3 java.net.Inet6AddressImpl.getHostByAddr; 0.0% 3 + 0 org.apache.spark.util.collection.ExternalSorter.insertAll; 0.0% 0 + 2 htsjdk.samtools.util.zip.IntelDeflater.deflateBytes; 0.0% 2 + 0 sun.misc.Unsafe.defineClass; 0.0% 2 + 0 sun.reflect.MethodAccessorGenerator.em,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1702#issuecomment-210127581:5333,stub,stub,5333,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1702#issuecomment-210127581,1,['stub'],['stub']
Testability,".CHM_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthLabel"": ""CHM_GRCh38_SYNDIPv20180222"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.twist_exome.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalVcfIndex"": ""test_output:VariantCallingCarro",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508:6285,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,6285,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508,76,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); at org.testng.TestNG.run(TestNG.java:1018); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:136); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:80); at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:59); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32); at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93); at com.sun.proxy.$Proxy2.stop(Unknown Source); at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.ja,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174:3219,test,testing,3219,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174,1,['test'],['testing']
Testability,.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32); 	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93); 	at com.sun.proxy.$Proxy2.stop(Unknown Source); 	at o,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293:2099,Test,TestNGTestClassProcessor,2099,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293,1,['Test'],['TestNGTestClassProcessor']
Testability,".Main.main(Main.java:292); ```. ## Cases when the error does not occur; * If I rename `test a` folder in `test-a` as previously said.; * If I copy my current `test a` in the `/tmp/` directory (`/tmp/test a/`). This may suggest that the path length plays a role.; * If I renamed the VCF files (first VCF becomes `a.vcf.gz`, second `b.vcf.gz`) (`gatk MergeVcfs -I data/calling/a.vcf.gz -I data/calling/b.vcf.gz -O out.vcf.gz`).; * If I rename the first VCF file with as many `a` character as characters found in the original filename. (aaaaaaaaaaaaaaaaaa.vcf.gz).; * If I rename the first VCF by replacing all alphabetical character with a (aaaa_aaaa2.aa_a7_1.vcf.gz); * If I introduce random `_` in the file name (aaaa_aaa_aaaa_aaaa.vcf.gz).; * If I rename the first VCF file by removing the first character (`cerc_prod2.SM_V7_1.vcf.gz` -> `erc_prod2.SM_V7_1.vcf.gz`); * If I rename the first VCF file by introducing a letter at the beginning (`cerc_prod2.SM_V7_1.vcf.gz` -> `ccerc_prod2.SM_V7_1.vcf.gz`). It really seems that the combination of the path lengh, white space and particular filename triggers this. I cannot get my head around this. I don't think this is coming from the content of the VCF as it works well in some cases. Let me know if you need me to make other tests. Fred. ----. ## Update. I investigated a little further after thinking about the tests I did. Because modifying the VCF filename did not trigger the issue and because of the presence of `tabix` related modules in the traces, I decided to see if removing `tbi` file will avoid having the error message. And it did!. After recreating the `tbi` file (`tabix data/calling/cerc_prod2.SM_V7_1.vcf.gz`), the error message appeared again. So it does not seem related to malformed index file. However, index file seems part of the problem. After renaming `test a` folder in `test-a` with the old or new index file, I did not get any error (as usual). Here is my tabix version in case:; ```bash; $ tabix -h. Version: 1.10.2; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6664#issuecomment-647808241:8331,test,tests,8331,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6664#issuecomment-647808241,4,['test'],"['test', 'test-a', 'tests']"
Testability,.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Nati,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:4666,Test,TestRunner,4666,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['Test'],['TestRunner']
Testability,.VariantContextTestUtils.assertVariantContextsAreEqual(VariantContextTestUtils.java:160); 	at org.broadinstitute.hellbender.tools.GenomicsDBImportIntegrationTest.lambda$testGenomicsDBImporter$0(GenomicsDBImportIntegrationTest.java:82); 	at org.broadinstitute.hellbender.tools.GenomicsDBImportIntegrationTest$$Lambda$57/1926180325.accept(Unknown Source); 	at org.broadinstitute.hellbender.utils.test.GenomicsDBTestUtils.assertCondition(GenomicsDBTestUtils.java:51); 	at org.broadinstitute.hellbender.tools.GenomicsDBImportIntegrationTest.testGenomicsDBImporter(GenomicsDBImportIntegrationTest.java:82); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:483); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112); 	at org.testng.TestRunner.privateRun(TestRunner.java:756); 	at org.testng.TestRunner.run(TestRunner.java:610); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218); 	at org.testng.TestNG.runSuites(TestNG.java:,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-295418143:1654,test,testng,1654,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-295418143,1,['test'],['testng']
Testability,".alt_bwamem_GRCh38DH.20150826.FIN.exome.cram -O /humgen/gsa-hpprojects/dev/shlee/1kg_GRCh38_exome/test_decram_20171002.bam; ```. Gives the same error at an approximately similar region:; ```; ...; 10:50:54.603 INFO ProgressMeter - chr1:224042054 2.2 11004000 5016945.0; 10:51:04.609 INFO ProgressMeter - chr1:248061327 2.4 11905000 5044206.5; ERROR	2017-10-02 10:51:05	Slice	Reference MD5 mismatch for slice 0:248574592-248771907, AGTGGATGAG...TGTCGGTATG; 10:51:06.940 INFO PrintReads - Shutting down engine; [October 2, 2017 10:51:06 AM EDT] org.broadinstitute.hellbender.tools.PrintReads done. Elapsed time: 2.45 minutes.; Runtime.totalMemory()=5995233280; htsjdk.samtools.cram.CRAMException: Reference sequence MD5 mismatch for slice: sequence id 0, start 248574592, span 197316, expected MD5 cc8ace0545facc11349da783af07a076; 	at htsjdk.samtools.CRAMIterator.nextContainer(CRAMIterator.java:187); 	at htsjdk.samtools.CRAMIterator.hasNext(CRAMIterator.java:261); 	at htsjdk.samtools.SamReader$AssertingIterator.hasNext(SamReader.java:601); 	at org.broadinstitute.hellbender.utils.iterators.SAMRecordToReadIterator.hasNext(SAMRecordToReadIterator.java:24); 	at java.util.Iterator.forEachRemaining(Iterator.java:115); 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801); 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); 	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151); 	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174); 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); 	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418); 	at org.broadinstitute.hellbender.engine.ReadWalker.traverse(ReadWalker.java:94); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:779); 	at org.broadinstitute.hellbender.cmdline.CommandLine",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3154#issuecomment-333560828:1648,Assert,AssertingIterator,1648,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3154#issuecomment-333560828,1,['Assert'],['AssertingIterator']
Testability,.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:80); at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:59); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32); at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93); at com.sun.proxy.$Proxy2.stop(Unknown Source); at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:116); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360); at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54); at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745);,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174:4194,Test,TestWorker,4194,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174,1,['Test'],['TestWorker']
Testability,.apply(PCollection.java:159); at com.google.cloud.dataflow.sdk.testing.DataflowAssert.that(DataflowAssert.java:93); at org.broadinstitute.hellbender.utils.dataflow.DataflowUtilsUnitTest.testApplyConvertToString(DataflowUtilsUnitTest.java:48); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:659); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:771); at org.testng.TestRunner.run(TestRunner.java:621); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199); at org.testng.TestNG.runSuitesLocally(TestNG.java:1124); at org.testng.TestNG.run(TestNG.java:1032); at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111); at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204); at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:125); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(Nativ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/658#issuecomment-122314248:4337,Test,TestRunner,4337,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/658#issuecomment-122314248,1,['Test'],['TestRunner']
Testability,".bam -O 1983.align.reorder.sorted.makrdup.bqsr.bam -R ~/Tools/hg19.2bit. -------------; 17/10/18 17:35:58 ERROR SparkUncaughtExceptionHandler: Uncaught exception in thread Thread[Executor task launch worker-0,5,main]; java.lang.OutOfMemoryError: Java heap space; 	at htsjdk.samtools.SAMUtils.compressedBasesToBytes(SAMUtils.java:146); 	at htsjdk.samtools.BAMRecord.decodeReadBases(BAMRecord.java:346); 	at htsjdk.samtools.BAMRecord.getReadBases(BAMRecord.java:275); 	at org.broadinstitute.hellbender.utils.read.SAMRecordToGATKReadAdapter.getLength(SAMRecordToGATKReadAdapter.java:222); 	at org.broadinstitute.hellbender.engine.filters.ReadFilterLibrary$MatchingBasesAndQualsReadFilter.test(ReadFilterLibrary.java:64); 	at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70); 	at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70); 	at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70); 	at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70); 	at org.broadinstitute.hellbender.engine.filters.WellformedReadFilter.test(WellformedReadFilter.java:77); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.lambda$getReads$e4b35a40$1(GATKSparkTool.java:213); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool$$Lambda$93/2063469002.call(Unknown Source); 	at org.apache.spark.api.java.JavaRDD$$anonfun$filter$1.apply(JavaRDD.scala:76); 	at org.apache.spark.api.java.JavaRDD$$anonfun$filter$1.apply(JavaRDD.scala:76); 	at scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:463); 	at scala.collection.convert.Wrappers$IteratorWrapper.hasNext(Wrappers.scala:30); 	at java.util.Iterator.forEachRemaining(Iterator.java:115); 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801); 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); 	at java.util.stream.A",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-337554749:1358,test,test,1358,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-337554749,1,['test'],['test']
Testability,.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:163); 	at org.broadinstitute.hellbender.Main.instanceMain(Main.java:149); 	at org.broadinstitute.hellbender.Main.instanceMain(Main.java:190); 	at org.broadinstitute.hellbender.CommandLineProgramTest.runCommandLine(CommandLineProgramTest.java:27); 	at org.broadinstitute.hellbender.testutils.CommandLineProgramTester.runCommandLine(CommandLineProgramTester.java:107); 	at org.broadinstitute.hellbender.tools.HaplotypeCallerSparkIntegrationTest.testNonStrictVCFModeIsConsistentWithPastResults(HaplotypeCallerSparkIntegrationTest.java:110); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.j,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:3984,test,testng,3984,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['test'],['testng']
Testability,".csv"",; ""NIST controlHCprocesshours"": ""90.94291388888888"",; ""NIST controlHCsystemhours"": ""0.182125"",; ""NIST controlHCwallclockhours"": ""63.56370277777778"",; ""NIST controlHCwallclockmax"": ""3.701625"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e372bd14-cd1f-4563-8d8a-abf6b6ca7883/call-NISTSampleHeadToHead/BenchmarkComparison/103cd89c-b177-4a0b-84fc-9553a1f8161f/call-CONTROLRuntimeTask/cacheCopy/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9843"",; ""NIST controlindelPrecision"": ""0.9895"",; ""NIST controlsnpF1Score"": ""0.9908"",; ""NIST controlsnpPrecision"": ""0.992"",; ""NIST controlsnpRecall"": ""0.9896"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e372bd14-cd1f-4563-8d8a-abf6b6ca7883/call-NISTSampleHeadToHead/BenchmarkComparison/103cd89c-b177-4a0b-84fc-9553a1f8161f/call-BenchmarkVCFControlSample/Benchmark/eaf4d582-e197-4e13-8122-5e1ec22591ae/call-CombineSummaries/summary.csv"",; ""NIST evalHCprocesshours"": ""73.06777222222223"",; ""NIST evalHCsystemhours"": ""0.1622555555555555"",; ""NIST evalHCwallclockhours"": ""46.65241388888888"",; ""NIST evalHCwallclockmax"": ""2.7461055555555554"",; ""NIST evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e372bd14-cd1f-4563-8d8a-abf6b6ca7883/call-NISTSampleHeadToHead/BenchmarkComparison/103cd89c-b177-4a0b-84fc-9553a1f8161f/call-EVALRuntimeTask/cacheCopy/monitoring.pdf"",; ""NIST evalindelF1Score"": ""0.9843"",; ""NIST evalindelPrecision"": ""0.9895"",; ""NIST evalsnpF1Score"": ""0.9908"",; ""NIST evalsnpPrecision"": ""0.992"",; ""NIST evalsnpRecall"": ""0.9896"",; ""NIST evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e372bd14-cd1f-4563-8d8a-abf6b6ca7883/call-NISTSampleHeadToHead/BenchmarkComparison/103cd89c-b177-4a0b-84fc-9553a1f8161f/call-BenchmarkVCFTestSample/Benchmark/87985440-93fa-4a33-ac09-e4cbead32bfb/call-CombineSummaries/summary.csv""; }; } ; </pre> </details>",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069381494:14291,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,14291,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069381494,6,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,.dataflow.sdk.testing.DataflowAssert.that(DataflowAssert.java:93); at org.broadinstitute.hellbender.utils.dataflow.DataflowUtilsUnitTest.testApplyConvertToString(DataflowUtilsUnitTest.java:48); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:659); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:771); at org.testng.TestRunner.run(TestRunner.java:621); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199); at org.testng.TestNG.runSuitesLocally(TestNG.java:1124); at org.testng.TestNG.run(TestNG.java:1032); at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111); at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204); at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:125); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.Dele,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/658#issuecomment-122314248:4388,test,testng,4388,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/658#issuecomment-122314248,1,['test'],['testng']
Testability,".executor.memoryOverhead' has been deprecated as of Spark 2.3 and may be removed in the future. Please use the new key 'spark.executor.memoryOverhead' instead.; 19/02/18 16:58:10 INFO org.spark_project.jetty.util.log: Logging initialized @8431ms; 19/02/18 16:58:11 INFO org.spark_project.jetty.server.Server: jetty-9.3.z-SNAPSHOT, build timestamp: unknown, git hash: unknown; 19/02/18 16:58:11 INFO org.spark_project.jetty.server.Server: Started @8536ms; 19/02/18 16:58:11 INFO org.spark_project.jetty.server.AbstractConnector: Started ServerConnector@45c90a05{HTTP/1.1,[http/1.1]}{0.0.0.0:4040}; 19/02/18 16:58:11 WARN org.apache.spark.scheduler.FairSchedulableBuilder: Fair Scheduler configuration file not found so jobs will be scheduled in FIFO order. To use fair scheduling, configure pools in fairscheduler.xml or set spark.scheduler.allocation.file to a file that contains the configuration.; 19/02/18 16:58:12 INFO org.apache.hadoop.yarn.client.RMProxy: Connecting to ResourceManager at gatk-test-2495f43b-04fc-49e7-aa0a-7108cc876246-m/10.240.0.11:8032; 19/02/18 16:58:13 INFO org.apache.hadoop.yarn.client.AHSProxy: Connecting to Application History server at gatk-test-2495f43b-04fc-49e7-aa0a-7108cc876246-m/10.240.0.11:10200; 19/02/18 16:58:15 INFO org.apache.hadoop.yarn.client.api.impl.YarnClientImpl: Submitted application application_1550508751046_0004; WARNING	2019-02-18 16:58:23	AsciiLineReader	Creating an indexable source for an AsciiFeatureCodec using a stream that is neither a PositionalBufferedStream nor a BlockCompressedInputStream; WARNING	2019-02-18 16:58:23	AsciiLineReader	Creating an indexable source for an AsciiFeatureCodec using a stream that is neither a PositionalBufferedStream nor a BlockCompressedInputStream; 19/02/18 16:58:25 INFO org.apache.hadoop.mapreduce.lib.input.FileInputFormat: Total input files to process : 1; 19/02/18 16:58:29 ERROR org.apache.spark.scheduler.TaskResultGetter: Exception while getting task result; com.esotericsoftware.kryo.KryoExc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3840#issuecomment-464825765:5006,test,test-,5006,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3840#issuecomment-464825765,1,['test'],['test-']
Testability,".getContig(), bin_start, bin_end));; > }; >; > ------------------------------; >; > In src/main/java/org/broadinstitute/hellbender/tools/copynumber/; > CreateBinningIntervals.java; > <https://github.com/broadinstitute/gatk/pull/3597#discussion_r140646304>:; >; > > + // break the intervals up to bins -- the last bin in each interval can be shorter than the others; > + IntervalList bins = new IntervalList(sequenceDictionary);; > + int bin_start, bin_end;; > + Interval new_bin;; > + for(Interval in : intervalList) {; > + bin_start = in.getStart();; > + bin_end = Math.min(bin_start + widthOfBins - 1, in.getEnd());; > + while(bin_start < in.getEnd()) {; > + new_bin = new Interval(in.getContig(), bin_start, bin_end);; > + bins.add(new_bin);; > + bin_start += widthOfBins;; > + bin_end = Math.min(bin_start + widthOfBins - 1, in.getEnd());; > + }; > + }; > +; > + // write the bins into file; >; > I would skip this comment.; > ------------------------------; >; > In src/test/java/org/broadinstitute/hellbender/tools/copynumber/; > CreateBinningIntervalsIntegrationTest.java; > <https://github.com/broadinstitute/gatk/pull/3597#discussion_r140646311>:; >; > > + // printOutputFile(outputFile);; > +; > + // read the bins from the output file; > + IntervalList binsFromFile = IntervalList.fromFile(outputFile);; > +; > + // we expect the following result; > + IntervalList binsExpected = new IntervalList(binsFromFile.getHeader().getSequenceDictionary());; > + String contig = binsFromFile.iterator().next().getContig();; > + binsExpected.add(new Interval(contig, 1, 10000));; > + binsExpected.add(new Interval(contig, 10001, 20000));; > + binsExpected.add(new Interval(contig, 20001, 20500));; > +; > + // compare the file contents to the expected result; > + Assert.assertEquals(binsFromFile, binsExpected);; > + }; > +; >; > extra whitespace line; > ------------------------------; >; > In src/test/java/org/broadinstitute/hellbender/tools/copynumber/; > CreateBinningIntervalsIntegrationTest.ja",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3597#issuecomment-331744211:12840,test,test,12840,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3597#issuecomment-331744211,1,['test'],['test']
Testability,".gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.twist_exome.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthLabel"": ""NA12878_GRCh38_TWISTExome"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA1287",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508:6696,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,6696,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508,76,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,.high_confidence.hg38.vcf.gz --known-sites /data/reference/gatk_resource/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz -O PAAD11N.recal_data.test.table; Using GATK jar /data/xieduo/WES_pipe/pipeline/bin/gatk-4.2.6.1/gatk-package-4.2.6.1-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx8G -Djava.io.tmpdir=/data/xieduo/Łuksza_2022_Nature -jar /data/xieduo/WES_pipe/pipeline/bin/gatk-4.2.6.1/gatk-package-4.2.6.1-local.jar BaseRecalibrator -R /data/reference/gatk_resource/Homo_sapiens_assembly38.fasta -I /data/xieduo/Immun_genomics/data/Łuksza_2022_Nature/bam/PAAD11N.bam --known-sites /data/xieduo/WES_pipe/pipeline/gatk_resource/dbsnp_146.hg38.vcf.gz --known-sites /data/reference/gatk_resource/1000G_phase1.snps.high_confidence.hg38.vcf.gz --known-sites /data/reference/gatk_resource/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz -O PAAD11N.recal_data.test.table; 13:36:33.528 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/data/xieduo/WES_pipe/pipeline/bin/gatk-4.2.6.1/gatk-package-4.2.6.1-local.jar!/com/intel/gkl/native/libgkl_compression.so; 13:36:33.547 WARN NativeLibraryLoader - Unable to load libgkl_compression.so from native/libgkl_compression.so (No such file or directory); 13:36:33.550 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/data/xieduo/WES_pipe/pipeline/bin/gatk-4.2.6.1/gatk-package-4.2.6.1-local.jar!/com/intel/gkl/native/libgkl_compression.so; 13:36:33.551 WARN NativeLibraryLoader - Unable to load libgkl_compression.so from native/libgkl_compression.so (No such file or directory); 13:36:33.669 INFO BaseRecalibrator - ------------------------------------------------------------; 13:36:33.670 INFO BaseRecalibrator - The Genome Analysis Toolkit (GATK) v4.2.6.1; 13:36:33.670 INFO BaseRecalibrator - For support and documentation go to https://software.broadinstitute.org/gatk/,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8005#issuecomment-1254561081:6438,test,test,6438,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8005#issuecomment-1254561081,1,['test'],['test']
Testability,.html) |; | cloud | openjdk8 | [33752.1](https://travis-ci.com/broadinstitute/gatk/jobs/498538887) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.1/tests/test/index.html) |; | unit | openjdk11 | [33752.13](https://travis-ci.com/broadinstitute/gatk/jobs/498538899) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.13/tests/test/index.html) |; | integration | openjdk11 | [33752.12](https://travis-ci.com/broadinstitute/gatk/jobs/498538898) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.12/tests/test/index.html) |; | variantcalling | openjdk8 | [33752.4](https://travis-ci.com/broadinstitute/gatk/jobs/498538890) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.4/tests/test/index.html) |; | unit | openjdk8 | [33752.3](https://travis-ci.com/broadinstitute/gatk/jobs/498538889) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.3/tests/test/index.html) |; | conda | openjdk8 | [33752.5](https://travis-ci.com/broadinstitute/gatk/jobs/498538891) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.5/tests/test/index.html) |; | integration | openjdk8 | [33752.2](https://travis-ci.com/broadinstitute/gatk/jobs/498538888) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.2/tests/test/index.html) |; | cloud | openjdk11 | [33752.14](https://travis-ci.com/broadinstitute/gatk/jobs/498538900) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.14/tests/test/index.html) |; | cloud | openjdk8 | [33752.1](https://travis-ci.com/broadinstitute/gatk/jobs/498538887) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.1/tests/test/index.html) |; | unit | openjdk11 | [33752.13](https://travis-ci.com/broadinstitute/gatk/jobs/498538899) | [logs](https://storage.go,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234:1403,test,test-logs,1403,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234,1,['test'],['test-logs']
Testability,.html) |; | unit | openjdk11 | [33752.13](https://travis-ci.com/broadinstitute/gatk/jobs/498538899) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.13/tests/test/index.html) |; | integration | openjdk11 | [33752.12](https://travis-ci.com/broadinstitute/gatk/jobs/498538898) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.12/tests/test/index.html) |; | variantcalling | openjdk8 | [33752.4](https://travis-ci.com/broadinstitute/gatk/jobs/498538890) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.4/tests/test/index.html) |; | unit | openjdk8 | [33752.3](https://travis-ci.com/broadinstitute/gatk/jobs/498538889) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.3/tests/test/index.html) |; | conda | openjdk8 | [33752.5](https://travis-ci.com/broadinstitute/gatk/jobs/498538891) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.5/tests/test/index.html) |; | integration | openjdk8 | [33752.2](https://travis-ci.com/broadinstitute/gatk/jobs/498538888) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.2/tests/test/index.html) |; | cloud | openjdk11 | [33752.14](https://travis-ci.com/broadinstitute/gatk/jobs/498538900) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.14/tests/test/index.html) |; | cloud | openjdk8 | [33752.1](https://travis-ci.com/broadinstitute/gatk/jobs/498538887) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.1/tests/test/index.html) |; | unit | openjdk11 | [33752.13](https://travis-ci.com/broadinstitute/gatk/jobs/498538899) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.13/tests/test/index.html) |; | integration | openjdk11 | [33752.12](https://travis-ci.com/broadinstitute/gatk/jobs/498538898) | [logs](https://s,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234:1608,test,test-logs,1608,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234,1,['test'],['test-logs']
Testability,.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDi,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6652#issuecomment-672024253:3155,test,testng,3155,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6652#issuecomment-672024253,1,['test'],['testng']
Testability,.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); at org.testng.TestNG.run(TestNG.java:1018); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:136); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:80); at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:59); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.gradle.messaging.dispatch.Refle,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174:2726,test,testng,2726,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174,1,['test'],['testng']
Testability,.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:659); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:771); at org.testng.TestRunner.run(TestRunner.java:621); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199); at org.testng.TestNG.runSuitesLocally(TestNG.java:1124); at org.testng.TestNG.run(TestNG.java:1032); at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111); at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204); at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:125); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140); Caused by: com.google.cloud.dataflow,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/658#issuecomment-122314248:4621,test,testng,4621,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/658#issuecomment-122314248,1,['test'],['testng']
Testability,.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6652#issuecomment-672024253:2983,test,testng,2983,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6652#issuecomment-672024253,1,['test'],['testng']
Testability,.java:117); 	at org.broadinstitute.hellbender.tools.HaplotypeCallerSpark.runTool(HaplotypeCallerSpark.java:118); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:546); 	at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:31); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:140); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:163); 	at org.broadinstitute.hellbender.Main.instanceMain(Main.java:149); 	at org.broadinstitute.hellbender.Main.instanceMain(Main.java:190); 	at org.broadinstitute.hellbender.CommandLineProgramTest.runCommandLine(CommandLineProgramTest.java:27); 	at org.broadinstitute.hellbender.testutils.CommandLineProgramTester.runCommandLine(CommandLineProgramTester.java:107); 	at org.broadinstitute.hellbender.tools.HaplotypeCallerSparkIntegrationTest.testNonStrictVCFModeIsConsistentWithPastResults(HaplotypeCallerSparkIntegrationTest.java:110); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMetho,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:3332,test,testutils,3332,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['test'],['testutils']
Testability,.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); at org.testng.TestNG.run(TestNG.java:1018); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:136); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:80); at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:59); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); at org.gradle.messaging.dispatch.ContextClas,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174:2912,test,testng,2912,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174,1,['test'],['testng']
Testability,.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:659); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:771); at org.testng.TestRunner.run(TestRunner.java:621); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199); at org.testng.TestNG.runSuitesLocally(TestNG.java:1124); at org.testng.TestNG.run(TestNG.java:1032); at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111); at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204); at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:125); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140); Caused by: com.google.cloud.dataflow.sdk.coders.CannotProvideCoderException: Cannot provide a Coder for type variable B because the actual type is unknown due to erasure.; at com.google.cloud.dataflow.sdk.coders.CoderRegis,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/658#issuecomment-122314248:4807,test,testng,4807,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/658#issuecomment-122314248,1,['test'],['testng']
Testability,.java:492); at org.testng.Assert.assertNull(Assert.java:428); at org.broadinstitute.hellbender.utils.test.SamAssertionUtils.assertSamsEqual(SamAssertionUtils.java:33); at org.broadinstitute.hellbender.utils.test.SamAssertionUtils.assertSamsEqual(SamAssertionUtils.java:59); at org.broadinstitute.hellbender.utils.test.SamAssertionUtils.assertEqualBamFiles(SamAssertionUtils.java:362); at org.broadinstitute.hellbender.utils.test.testers.AbstractMarkDuplicatesCommandLineProgramTest.testMDOrderImpl(AbstractMarkDuplicatesCommandLineProgramTest.java:604); at org.broadinstitute.hellbender.tools.spark.pipelines.MarkDuplicatesSparkIntegrationTest.testMDOrder(MarkDuplicatesSparkIntegrationTest.java:49); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.ru,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174:1986,test,testng,1986,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174,1,['test'],['testng']
Testability,.java:546); 	at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:31); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:140); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:163); 	at org.broadinstitute.hellbender.Main.instanceMain(Main.java:149); 	at org.broadinstitute.hellbender.Main.instanceMain(Main.java:190); 	at org.broadinstitute.hellbender.CommandLineProgramTest.runCommandLine(CommandLineProgramTest.java:27); 	at org.broadinstitute.hellbender.testutils.CommandLineProgramTester.runCommandLine(CommandLineProgramTester.java:107); 	at org.broadinstitute.hellbender.tools.HaplotypeCallerSparkIntegrationTest.testNonStrictVCFModeIsConsistentWithPastResults(HaplotypeCallerSparkIntegrationTest.java:110); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:3494,test,testNonStrictVCFModeIsConsistentWithPastResults,3494,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['test'],['testNonStrictVCFModeIsConsistentWithPastResults']
Testability,.java; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-39; > (162); > - _A_; > src/test/java/org/broadinstitute/hellbender/engine/FeatureSupportIntegrationTest.java; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-40; > (30); > - _A_; > src/test/java/org/broadinstitute/hellbender/utils/codecs/hapmap/HapMapUnitTest.java; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-41; > (164); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/expected_testFeatureSupportUsingVCF_output.txt; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-42; > (63); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/feature_data_source_test.vcf; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-43; > (28); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/feature_data_source_test.vcf.idx; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-44; > (0); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_bcf_file.bcf; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-45; > (0); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_bcf_file.bcf.idx; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-46; > (0); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_bed_file.bed; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-47; > (1); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_bed_file.bed.idx; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-48; > (0); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_table_file.table; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-49; > (2); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_vcf3_file.vcf; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-50; > (3,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/224#issuecomment-75657392:9781,test,test,9781,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/224#issuecomment-75657392,1,['test'],['test']
Testability,".max=512m,spark.yarn.executor.memoryOverhead=600,spark.executor.cores=2,spark.executor.instances=2. Running:; gcloud dataproc jobs submit spark --cluster droazen-test-cluster --properties spark.driver.userClassPathFirst=true,spark.io.compression.codec=lzf,spark.driver.maxResultSize=0,spark.executor.extraJavaOptions=-DGATK_STACKTRACE_ON_USER_EXCEPTION=true -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=false -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=1 ,spark.driver.extraJavaOptions=-DGATK_STACKTRACE_ON_USER_EXCEPTION=true -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=false -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=1 ,spark.kryoserializer.buffer.max=512m,spark.yarn.executor.memoryOverhead=600,spark.executor.cores=2,spark.executor.instances=2 --jar /Users/droazen/src/hellbender/build/libs/gatk-package-4.beta.6-54-g0ee99da-SNAPSHOT-spark.jar -- CountReadsSpark -I gs://hellbender/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam --sparkMaster yarn; Job [acdae2af-e0ce-4822-87f5-dcd165d85cf4] submitted.; Waiting for job output...; 20:39:42.869 WARN SparkContextFactory - Environment variables HELLBENDER_TEST_PROJECT and HELLBENDER_JSON_SERVICE_ACCOUNT_KEY must be set or the GCS hadoop connector will not be configured properly; 20:39:43.053 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/tmp/acdae2af-e0ce-4822-87f5-dcd165d85cf4/gatk-package-4.beta.6-54-g0ee99da-SNAPSHOT-spark.jar!/com/intel/gkl/native/libgkl_compression.so; [November 27, 2017 8:39:43 PM UTC] CountReadsSpark --input gs://hellbender/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam --sparkMaster yarn --readValidationStringency SILENT --interval_set_rule UNION --interval_padding 0 --interval_exclusion_padding 0 --interval_merging_rule ALL --bamPartitionSize 0 --disableSequenceDictionaryValidation false --shardedOutput false --numReducers 0 --help fal",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3855#issuecomment-347320994:2422,test,test,2422,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3855#issuecomment-347320994,1,['test'],['test']
Testability,.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:37); 	at org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:34); 	at net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:138); 	at net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:346); 	at net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:161); 	at net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:355); 	at org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(TypeCachingBytecodeGenerator.java:32); 	at org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMockType(SubclassByteBuddyMockMaker.java:71); 	at org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMock(SubclassByteBuddyMockMaker.java:42); 	at org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.createMock(ByteBuddyMockMaker.java:25); 	at org.mockito.internal.util.MockUtil.createMock(MockUtil.java:35); 	at org.mockito.internal.MockitoCore.mock(MockitoCore.java:51); 	at org.mockito.Mockito.mock(Mockito.java:1798); 	at org.mockito.Mockito.mock(Mockito.java:1711); 	at org.broadinstitute.hellbender.utils.iterators.AllLocusIteratorUnitTest.testIteratorReturnsPileupsForAllLociData(AllLocusIteratorUnitTest.java:23); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(Metho,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6119#issuecomment-532377836:2301,mock,mockito,2301,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6119#issuecomment-532377836,1,['mock'],['mockito']
Testability,.next; 0.3% 48 + 0 htsjdk.samtools.util.BlockCompressedInputStream.read; 0.3% 47 + 0 org.broadinstitute.hellbender.tools.spark.transforms.markduplicates.MarkDuplicatesSparkUtils.lambda$markPairedEnds$66146993$1; 0.3% 45 + 0 scala.collection.Iterator$$anon$13.next; 0.3% 1 + 42 org.apache.spark.util.collection.PartitionedSerializedPairBuffer.insert; 0.3% 42 + 0 org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSink$$Lambda$113.call; 0.3% 42 + 0 java.util.stream.AbstractPipeline.evaluate; 0.2% 38 + 0 java.util.HashMap.putVal; 0.2% 37 + 0 htsjdk.samtools.BinaryCigarCodec.decode; 33.6% 5071 + 112 Total compiled (including elided). Stub + native Method ; 28.5% 0 + 4400 java.lang.System.identityHashCode; 17.0% 0 + 2627 java.lang.String.intern; 5.8% 0 + 891 java.util.zip.Inflater.inflateBytes; 4.0% 0 + 615 java.io.FileOutputStream.writeBytes; 3.9% 0 + 602 htsjdk.samtools.util.zip.IntelDeflater.deflateBytes; 1.3% 0 + 200 java.io.FileOutputStream.open0; 0.8% 0 + 119 sun.nio.ch.NativeThread.current; 0.7% 0 + 103 java.util.zip.Inflater.reset; 0.6% 0 + 92 org.apache.hadoop.util.NativeCrc32.nativeComputeChunkedSumsByteArray; 0.6% 0 + 91 htsjdk.samtools.util.zip.IntelDeflater.reset; 0.4% 0 + 56 java.io.FileInputStream.readBytes; 0.3% 0 + 41 sun.nio.ch.FileDispatcherImpl.read0; 0.2% 0 + 33 java.lang.Class.isPrimitive; 0.2% 0 + 27 java.lang.Throwable.fillInStackTrace; 0.1% 1 + 19 java.io.UnixFileSystem.getLength; 0.1% 0 + 17 sun.nio.ch.FileDispatcherImpl.size0; 0.1% 0 + 14 org.apache.hadoop.util.NativeCrc32.nativeComputeChunkedSums; 0.1% 13 + 0 java.lang.ClassLoader.defineClass1; 0.1% 0 + 11 java.lang.Class.isArray; 0.1% 0 + 9 java.io.FileInputStream.available; 0.1% 0 + 8 java.lang.Object.hashCode; 0.0% 0 + 7 java.lang.System.arraycopy; 0.0% 0 + 7 sun.nio.ch.EPollArrayWrapper.epollWait; 0.0% 0 + 6 java.lang.Class.forName0; 0.0% 0 + 5 java.util.zip.ZipFile.getEntry; 65.3% 14 + 10056 Total stub (including elided). Thread-local ticks:; 60.4% 23502 Blocked (of total); ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1702#issuecomment-210127581:10368,stub,stub,10368,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1702#issuecomment-210127581,1,['stub'],['stub']
Testability,.ofThisVm(ClassFileVersion.java:147); 	at net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$CreationAction.run(ClassInjector.java:301); 	at net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$CreationAction.run(ClassInjector.java:290); 	at java.base/java.security.AccessController.doPrivileged(Native Method); 	at net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection.<clinit>(ClassInjector.java:70); 	at net.bytebuddy.dynamic.loading.ClassLoadingStrategy$Default$InjectionDispatcher.load(ClassLoadingStrategy.java:184); 	at net.bytebuddy.dynamic.TypeResolutionStrategy$Passive.initialize(TypeResolutionStrategy.java:79); 	at net.bytebuddy.dynamic.DynamicType$Default$Unloaded.load(DynamicType.java:4456); 	at org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator.mockClass(SubclassBytecodeGenerator.java:115); 	at org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:37); 	at org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:34); 	at net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:138); 	at net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:346); 	at net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:161); 	at net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:355); 	at org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(TypeCachingBytecodeGenerator.java:32); 	at org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMockType(SubclassByteBuddyMockMaker.java:71); 	at org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMock(SubclassByteBuddyMockMaker.java:42); 	at org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.createMock(ByteBuddyMockMaker.java:25); 	at org.mockito.internal.util.MockUtil.createMock(MockUtil.java:35); 	at org.mockito.internal.MockitoCore.mock(MockitoCore.java:51); 	at,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6119#issuecomment-532377836:1425,mock,mockito,1425,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6119#issuecomment-532377836,1,['mock'],['mockito']
Testability,".ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""FunctionalEquivalenceTest.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""FunctionalEquivalenceTest.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""FunctionalEquivalenceTest.replicate_no"": [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ],; ""gatk_docker"": ""image_build:gatk|4fa4b23a1b3756080aba2f1eecd791380b3921a6""; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_out",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135:4190,benchmark,benchmarking,4190,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135,2,['benchmark'],['benchmarking']
Testability,".ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""FunctionalEquivalenceTest.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""FunctionalEquivalenceTest.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""FunctionalEquivalenceTest.replicate_no"": [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ],; ""gatk_docker"": ""image_build:gatk|5cdd2eaebb27509947cde3dbd26ee9a3fce72352""; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_out",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659:4190,benchmark,benchmarking,4190,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659,2,['benchmark'],['benchmarking']
Testability,".ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""FunctionalEquivalenceTest.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""FunctionalEquivalenceTest.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""FunctionalEquivalenceTest.replicate_no"": [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ]; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_output:FunctionalEquivalenceTest.out_dataset"",; ""GatkDragenConcordanceEvaluation",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440:4293,benchmark,benchmarking,4293,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440,2,['benchmark'],['benchmarking']
Testability,.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.j,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293:1814,Test,TestNG,1814,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293,1,['Test'],['TestNG']
Testability,".samtools.AsyncSAMFileWriter.synchronouslyWrite(AsyncSAMFileWriter.java:36); 	at htsjdk.samtools.AsyncSAMFileWriter.synchronouslyWrite(AsyncSAMFileWriter.java:16); 	at htsjdk.samtools.util.AbstractAsyncWriter$WriterRunnable.run(AbstractAsyncWriter.java:124); 	at java.lang.Thread.run(Thread.java:748); Caused by: htsjdk.samtools.SAMException: Exception creating BAM index for record i 1/2 76b aligned read.; 	at htsjdk.samtools.BAMIndexer.processAlignment(BAMIndexer.java:119); 	at htsjdk.samtools.BAMFileWriter.writeAlignment(BAMFileWriter.java:139); 	... 5 more; Caused by: htsjdk.samtools.SAMException: IOException in BinaryBAMIndexWriter reference 0; 	at htsjdk.samtools.BinaryBAMIndexWriter.writeReference(BinaryBAMIndexWriter.java:151); 	at htsjdk.samtools.BAMIndexer.advanceToReference(BAMIndexer.java:138); 	at htsjdk.samtools.BAMIndexer.processAlignment(BAMIndexer.java:115); 	... 6 more; Caused by: java.nio.channels.ClosedByInterruptException; 	at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202); 	at sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:216); 	at java.nio.channels.Channels.writeFullyImpl(Channels.java:78); 	at java.nio.channels.Channels.writeFully(Channels.java:101); 	at java.nio.channels.Channels.access$000(Channels.java:61); 	at java.nio.channels.Channels$1.write(Channels.java:174); 	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82); 	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140); 	at htsjdk.samtools.BinaryBAMIndexWriter.writeReference(BinaryBAMIndexWriter.java:149); 	... 8 more; ```. One of the logs is here: https://storage.googleapis.com/hellbender-test-logs/build_reports/12617.7/tests/test/index.html. We saw a whole host of those cigar validation errors you're seeing when we updated htsdjk the last time, it's a new validation that wasn't previously checked in htsjdk, so a lot of the test files had errors in them that no one had ever noticed/bothered fixing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-329967977:2001,log,logs,2001,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-329967977,5,"['log', 'test']","['logs', 'test', 'test-logs', 'tests']"
Testability,".samuel.k@gmail.com>; Date: Fri Dec 8 00:55:14 2017 -0500. updated somatic PoNs for PreprocessIntervals drop Ns. commit cff64984d9fb42364001bda4c73d54cf68d85a5c; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 00:37:24 2017 -0500. sudo travis yml. commit 89025941febd2089d426cfa1e0f0aa6a6712e2a9; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 00:23:22 2017 -0500. travis/Docker config update (g++-6, Miniconda3); python test group assignment. commit 31f96398106c2b8577b8c25d110abea3ebe7f836; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 20:44:53 2017 -0500. WDL test bugfix. commit 9b2fb820536ec355bea0256471bd093d547f5c99; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 20:20:36 2017 -0500. update WDL test JSON files. commit e3d97644d1a2c40a5c364a96f8b67246154179c9; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 20:18:14 2017 -0500. assertions in inference task base; removed a ASCII > 128 character in log messages. commit 526cf92e623a3bbd5f9d375132b6ca046fc47620; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 20:03:04 2017 -0500. redirect tqdm progress bar to python logger. commit 2e45bd30968b921fae225de3901fb97ece690b0c; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 19:45:49 2017 -0500. more arg related fixes. commit bb89a3bb338d88199881e8aca65f656f2acd7c0a; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 19:41:20 2017 -0500. arg related bugfixes in WDL, python, and java CLIs. commit 23569787ee2c8cc6c9227a44170cbbd02fe4427f; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 17:21:05 2017 -0500. fixed issue with python boolean argparse (they use weird semantics). commit ae841c9ed4cd9b2ca1ac0e9082d175ff8ea98298; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 16:44:02 2017 -0500. shorter gCNV WDL tests. commit 5466b806e36df16cad2d045be074e7f",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598:4739,assert,assertions,4739,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598,2,"['assert', 'log']","['assertions', 'log']"
Testability,.sdk.testing.DataflowAssert.that(DataflowAssert.java:93); at org.broadinstitute.hellbender.utils.dataflow.DataflowUtilsUnitTest.testApplyConvertToString(DataflowUtilsUnitTest.java:48); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:659); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:771); at org.testng.TestRunner.run(TestRunner.java:621); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199); at org.testng.TestNG.runSuitesLocally(TestNG.java:1124); at org.testng.TestNG.run(TestNG.java:1032); at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111); at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204); at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:125); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMet,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/658#issuecomment-122314248:4395,Test,TestRunner,4395,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/658#issuecomment-122314248,1,['Test'],['TestRunner']
Testability,.serializer.KryoSerializerInstance.serialize(KryoSerializer.scala:250); at org.broadinstitute.hellbender.engine.spark.SAMRecordToGATKReadAdapterSerializerUnitTest.check(SAMRecordToGATKReadAdapterSerializerUnitTest.java:78); at org.broadinstitute.hellbender.engine.spark.SAMRecordToGATKReadAdapterSerializerUnitTest.testChangingContigsOnHeaderlessGATKRead(SAMRecordToGATKReadAdapterSerializerUnitTest.java:72); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); at org.testng.TestNG.run(TestNG.java:1018); at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:122); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.Na,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1127#issuecomment-157441550:2559,test,testng,2559,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1127#issuecomment-157441550,1,['test'],['testng']
Testability,".stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/LCR_Hg38.interval_list"",; ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/HCR_hg38.bed""; ],; ""TestWrapper.stratLabels"": [; ""LCR"",; ""HCR""; ],; ""TestWrapper.truthLabel"": ""chm"",; ""TestWrapper.truthVcf"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/chm.full.m38.vcf.gz"",; ""TestWrapper.truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/chm.full.m38.vcf.gz.tbi"",; ""TestWrapper.vcfScoreField"": ""QUAL""; },; ""eval_input"": {; ""PlotROC.dataset_name"": ""CHMI_CHMI3_WGS1_downsampled"",; ""PlotROC.sample1_indel_HCR_roc_table"": ""test_output:TestWrapper.nonsnp_roc_table_HCR"",; ""PlotROC.sample1_indel_LCR_roc_table"": ""test_output:TestWrapper.nonsnp_roc_table_LCR"",; ""PlotROC.sample1_indel_roc_table"": ""test_output:TestWrapper.nonsnp_roc_table_all"",; ""PlotROC.sample1_snp_HCR_roc_table"": ""test_output:TestWrapper.snp_roc_table_HCR"",; ""PlotROC.sample1_snp_LCR_roc_table"": ""test_output:TestWrapper.snp_roc_table_LCR"",; ""PlotROC.sample1_snp_roc_table"": ""test_output:TestWrapper.nonsnp_roc_table_all"",; ""PlotROC.sample2_indel_HCR_roc_table"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/cached_dragen_sample_data/CHMI_CHMI3_WGS1_downsampled_DRAGEN_dragen_chm_HCR_vcfeval_non_snp_roc.tsv.gz"",; ""PlotROC.sample2_indel_LCR_roc_table"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/cached_dragen_sample_data/CHMI_CHMI3_WGS1_downsampled_DRAGEN_dragen_chm_LCR_vcfeval_non_snp_roc.tsv.gz"",; ""PlotROC.sample2_indel_roc_table"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/cached_dragen_sample_data/CHMI_CHMI3_WGS1_downsampled_DRAGEN_dragen_chm_vcfeval_non_snp_roc.tsv.gz"",; ""PlotROC.sample2_snp_HCR_roc_table"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/cached_dragen_sample_data/CHMI_CHMI3_WGS1_downsampled_DRAGEN_dragen_chm_HCR_vcfeval_snp_roc.tsv.gz"",; ""PlotROC.sample2_snp_LCR_roc_table"": ""gs://dsp-me",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738147120:3319,Test,TestWrapper,3319,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738147120,2,['Test'],['TestWrapper']
Testability,.test.SamAssertionUtils.assertEqualBamFiles(SamAssertionUtils.java:362); at org.broadinstitute.hellbender.utils.test.testers.AbstractMarkDuplicatesCommandLineProgramTest.testMDOrderImpl(AbstractMarkDuplicatesCommandLineProgramTest.java:604); at org.broadinstitute.hellbender.tools.spark.pipelines.MarkDuplicatesSparkIntegrationTest.testMDOrder(MarkDuplicatesSparkIntegrationTest.java:49); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); at org.testng.TestNG.run(TestNG.java:1018); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:136); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:80); at ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174:2293,Test,TestMethodWorker,2293,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174,1,['Test'],['TestMethodWorker']
Testability,.testGenotypeCallForLotsOfAlts(GnarlyGenotyperEngineUnitTest.java:71); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.jav,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293:1491,test,testng,1491,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293,1,['test'],['testng']
Testability,.testng.internal.Invoker.invokeTestMethod(Invoker.java:845); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:771); at org.testng.TestRunner.run(TestRunner.java:621); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199); at org.testng.TestNG.runSuitesLocally(TestNG.java:1124); at org.testng.TestNG.run(TestNG.java:1032); at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111); at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204); at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:125); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140); Caused by: com.google.cloud.dataflow.sdk.coders.CannotProvideCoderException: Cannot provide a Coder for type variable B because the actual type is unknown due to erasure.; at com.google.cloud.dataflow.sdk.coders.CoderRegistry.getDefaultCoder(CoderRegistry.java:545); at com.google.cloud.dataflow.sdk.coders.CoderRegistry.getDefaultCoder(CoderRegistry.java:516); at com.google.cloud.dataflow.sdk.coders.CoderRegistry.getDefaultCoder(CoderRegistry.j,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/658#issuecomment-122314248:5032,test,testng,5032,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/658#issuecomment-122314248,1,['test'],['testng']
Testability,.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33); 	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94); 	at com.sun.proxy.$Proxy2.stop(Unknown Source); 	at o,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:5362,Test,TestNGTestClassProcessor,5362,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['Test'],['TestNGTestClassProcessor']
Testability,.utils.test.testers.AbstractMarkDuplicatesCommandLineProgramTest.testMDOrderImpl(AbstractMarkDuplicatesCommandLineProgramTest.java:604); at org.broadinstitute.hellbender.tools.spark.pipelines.MarkDuplicatesSparkIntegrationTest.testMDOrder(MarkDuplicatesSparkIntegrationTest.java:49); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); at org.testng.TestNG.run(TestNG.java:1018); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:136); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:80); at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:59); at s,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174:2400,Test,TestMethodWorker,2400,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174,1,['Test'],['TestMethodWorker']
Testability,.walkers.mutect.Mutect2Engine.makeStandardMutect2PostFilterReadTransformer(Mutect2Engine.java:165); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2.makePostReadFilterTransformer(Mutect2.java:263); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:279); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1048); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:191); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:210); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:163); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:206); at org.broadinstitute.hellbender.Main.main(Main.java:292); Caused by: htsjdk.samtools.SAMException: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai; at htsjdk.samtools.reference.FastaSequenceIndex.<init>(FastaSequenceIndex.java:74); at htsjdk.samtools.reference.IndexedFastaSequenceFile.<init>(IndexedFastaSequenceFile.java:98); at htsjdk.samtools.reference.ReferenceSequenceFileFactory.getReferenceSequenceFile(ReferenceSequenceFileFactory.java:139); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:134); ... 13 more; Caused by: java.nio.file.FileSystemException: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai: Too many open files; at sun.nio.fs.UnixException.translateToIOException(UnixException.java:103); at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:114); at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:119); at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:226); at java.nio.fi,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291:2441,benchmark,benchmark,2441,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291,1,['benchmark'],['benchmark']
Testability,"/.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068170 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068171 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068172 . G *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068173 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068174 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068175 . T <NON_REF> . . . GT:DP:GQ:MIN_DP:PL ./.:20:17:20:0,17,729; ```. When the original GVCF is imported into GenomicsDB and then extracted:. ```; ./gatk GenomicsDBImport -R src/test/resources/large/human_g1k_v37.20.21.fasta -L 20 -V src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk4.g.vcf -genomicsdb-workspace-path spanDelWorkspace; ./gatk SelectVariants -V gendb://spanDelWorkspace -R src/test/resources/large/human_g1k_v37.20.21.fasta -O test.g.vcf -L 20; ```. It contains the following records in this region:. ```; 20 10068158 . GTGTATATATATA G,<NON_REF> . . BaseQRankSum=-6.520e-01;ClippingRankSum=0.00;DP=29;ExcessHet=3.01;MQRankSum=0.328;RAW_MQ=93364.00;ReadPosRankSum=-2.530e-0; 1 GT:AD:DP:GQ:PL:SB ./.:3,4,0:7:57:104,0,57,114,69,183:0,3,2,2; 20 10068159 . T *,<NON_REF> . . DP=29 GT:AD:DP:GQ:PL:SB ./.:3,4,0:7:57:104,0,57,114,69,183:0,3,2,2; 20 10068160 . GTATATATATATGTA G,*,<NON_REF> . . DP=28;ExcessHet=3.01;RAW_MQ=87005.00 GT:AD:DP:GQ:PL:SB ./.:0,2,4,0:6:53:735,162,131,102,0,53,507,174,108,472:0,0,; 2,4; 20 10068161 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,472:0,0,2,4; 20 10068162 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,472:0,0,2,4; 20 10068163 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,472:0,0,2,4; 20 10068164 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-403519172:3457,test,test,3457,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-403519172,1,['test'],['test']
Testability,//codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `70.707% <ø> (-13.116%)` | `27 <0> (-9)` | |; | [...e/hellbender/utils/test/testers/SamFileTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L3Rlc3RlcnMvU2FtRmlsZVRlc3Rlci5qYXZh) | `90.217% <ø> (ø)` | `30 <0> (ø)` | :arrow_down: |; | [.../hellbender/utils/test/testers/CleanSamTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L3Rlc3RlcnMvQ2xlYW5TYW1UZXN0ZXIuamF2YQ==) | `0% <0%> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...llbender/utils/test/SimpleIntervalTestFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1NpbXBsZUludGVydmFsVGVzdEZhY3RvcnkuamF2YQ==) | `100% <100%> (ø)` | `5 <2> (?)` | |; | [...ute/hellbender/utils/test/GenomicsDBTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0dlbm9taWNzREJUZXN0VXRpbHMuamF2YQ==) | `91.667% <100%> (-0.641%)` | `3 <0> (ø)` | |; | [...ils/test/testers/AbstractMarkDuplicatesTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L3Rlc3RlcnMvQWJzdHJhY3RNYXJrRHVwbGljYXRlc1Rlc3Rlci5qYXZh) | `79.487% <100%> (ø)` | `17 <1> (ø)` | :arrow_down: |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21h,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-324298700:1802,test,test,1802,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-324298700,1,['test'],['test']
Testability,/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-tracking --modeling_interval_list=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/intervals8729903857029540703.tsv --output_model_path=/gpfs/gsfs7/users/sangj2/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-model --enable_explicit_gc_bias_modeling=True --read_count_tsv_files /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-07410307475890858352.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-12290301678667639499.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-21824691337189197401.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-31776045115104931009.tsv --psi_s_scale=1.000000e-04 --mapping_error_rate=1.000000e-02 --depth_correction_tau=1.000000e+04 --q_c_expectation_mode=hybrid --max_bias_factors=5 --psi_t_scale=1.000000e-03 --log_mean_bias_std=1.000000e-01 --init_ard_rel_unexplained_variance=1.000000e-01 --num_gc_bins=20 --gc_curve_sd=1.000000e+00 --active_class_padding_hybrid_mode=50000 --enable_bias_factors=True --disable_bias_factors_in_active_class=False --p_alt=1.000000e-06 --cnv_coherence_length=1.000000e+04 --max_copy_number=5 --p_active=0.010000 --class_coherence_length=10000.000000 --learning_rate=1.000000e-02 --adamax_beta1=9.000000e-01 --adamax_beta2=9.900000e-01 --log_emission_samples_per_round=50 --log_emission_sampling_rounds=10 --log_emission_sampling_median_rel_error=5.000000e-03 --max_advi_iter_first_epoch=5000 --max_advi_iter_subsequent_epochs=200 --min_training_epochs=10 --max_training_epochs=50 --initial_temperature=1.500000e+00 --num_ther,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547440019:9186,Test,Test-,9186,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547440019,1,['Test'],['Test-']
Testability,/5598?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...dataSources/vcf/VcfFuncotationFactoryUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5598/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL3ZjZi9WY2ZGdW5jb3RhdGlvbkZhY3RvcnlVbml0VGVzdC5qYXZh) | `98.104% <100%> (+0.055%)` | `30 <1> (+1)` | :arrow_up: |; | [...er/tools/funcotator/FuncotatorIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5598/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `85.253% <100%> (+0.372%)` | `113 <1> (+1)` | :arrow_up: |; | [...cotator/dataSources/vcf/VcfFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5598/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL3ZjZi9WY2ZGdW5jb3RhdGlvbkZhY3RvcnkuamF2YQ==) | `88.05% <100%> (+0.469%)` | `48 <0> (ø)` | :arrow_down: |; | [...nder/tools/funcotator/FuncotatorTestConstants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5598/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JUZXN0Q29uc3RhbnRzLmphdmE=) | `98.333% <100%> (+0.028%)` | `1 <0> (ø)` | :arrow_down: |; | [...ute/hellbender/utils/test/FuncotatorTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5598/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Z1bmNvdGF0b3JUZXN0VXRpbHMuamF2YQ==) | `95.161% <66.667%> (-3.084%)` | `7 <1> (+1)` | |; | [...nder/utils/runtime/StreamingProcessController.java](https://codecov.io/gh/broadinstitute/gatk/pull/5598/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9ydW50aW1lL1N0cmVhbWluZ1Byb2Nlc3NDb250cm9sbGVyLmphdmE=) | `67.299% <0%> (-0.474%)` | `33% <0%> (ø)` | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5598#issuecomment-456891301:2279,test,test,2279,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5598#issuecomment-456891301,1,['test'],['test']
Testability,"/BenchmarkComparison/a8851b03-1abb-4622-b481-5425ce01418b/call-BenchmarkVCFTestSample/Benchmark/7d946274-eb9e-4be8-b04f-c1b3399d4068/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""108.55041388888888"",; ""NIST controlHCsystemhours"": ""0.2213388888888889"",; ""NIST controlHCwallclockhours"": ""78.14672499999998"",; ""NIST controlHCwallclockmax"": ""4.031741666666667"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-NISTSampleHeadToHead/BenchmarkComparison/3238c3ac-5e7c-4130-bb68-26871868b49e/call-CONTROLRuntimeTask/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-NISTSampleHeadToHead/BenchmarkComparison/3238c3ac-5e7c-4130-bb68-26871868b49e/call-BenchmarkVCFControlSample/Benchmark/4121c5eb-9771-43ee-84f1-262115dcf151/call-CombineSummaries/summary.csv"",; ""NIST evalHCprocesshours"": ""93.23600000000005"",; ""NIST evalHCsystemhours"": ""0.2127972222222222"",; ""NIST evalHCwallclockhours"": ""62.422702777777786"",; ""NIST evalHCwallclockmax"": ""3.1571083333333334"",; ""NIST evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-NISTSampleHeadToHead/BenchmarkComparison/3238c3ac-5e7c-4130-bb68-26871868b49e/call-EVALRuntimeTask/monitoring.pdf"",; ""NIST evalindelF1Score"": ""0.9902"",; ""NIST evalindelPrecision"": ""0.9903"",; ""NIST evalsnpF1Score"": ""0.9899"",; ""NIST evalsnpPrecision"": ""0.9887"",; ""NIST evalsnpRecall"": ""0.9911"",; ""NIST evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-NISTSampleHeadToHead/BenchmarkComparison/3238c3ac",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497:20635,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,20635,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"/BenchmarkComparison/a98aa003-bddd-492a-8691-dfa50191e2c6/call-BenchmarkVCFTestSample/Benchmark/269b49fd-36aa-4381-a08a-a3f2a4586967/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""103.49216944444444"",; ""NIST controlHCsystemhours"": ""0.21042500000000003"",; ""NIST controlHCwallclockhours"": ""74.8884888888889"",; ""NIST controlHCwallclockmax"": ""3.995058333333333"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/acc9e2ac-b10a-4d6a-b586-cd3e47f04e41/call-NISTSampleHeadToHead/BenchmarkComparison/56974c24-19c8-4f87-b7b1-b71028109732/call-CONTROLRuntimeTask/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/acc9e2ac-b10a-4d6a-b586-cd3e47f04e41/call-NISTSampleHeadToHead/BenchmarkComparison/56974c24-19c8-4f87-b7b1-b71028109732/call-BenchmarkVCFControlSample/Benchmark/670f9cb4-5bb0-48e2-95c9-15a2e1ae7dee/call-CombineSummaries/summary.csv"",; ""NIST evalHCprocesshours"": ""103.23083611111107"",; ""NIST evalHCsystemhours"": ""0.2083694444444444"",; ""NIST evalHCwallclockhours"": ""76.16374166666664"",; ""NIST evalHCwallclockmax"": ""3.743883333333333"",; ""NIST evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/acc9e2ac-b10a-4d6a-b586-cd3e47f04e41/call-NISTSampleHeadToHead/BenchmarkComparison/56974c24-19c8-4f87-b7b1-b71028109732/call-EVALRuntimeTask/monitoring.pdf"",; ""NIST evalindelF1Score"": ""0.9902"",; ""NIST evalindelPrecision"": ""0.9903"",; ""NIST evalsnpF1Score"": ""0.9899"",; ""NIST evalsnpPrecision"": ""0.9887"",; ""NIST evalsnpRecall"": ""0.9911"",; ""NIST evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/acc9e2ac-b10a-4d6a-b586-cd3e47f04e41/call-NISTSampleHeadToHead/BenchmarkComparison/56974c24-",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099:20630,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,20630,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"/FindBreakpointEvidenceSpark.java; - input coverage-scaled thresholds, convert to absolute internally. Allow thresholds to be double instead of int; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/BreakpointDensityFilter.java; - getter functions added to calculate properties for XGBoostEvidenceFilter. Also fromStringRep() and helper constructors added for testing; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/BreakpointEvidence.java; - updates to tests reflecting changes to these interfaces; src/test/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/BreakpointDensityFilterTest.java; src/test/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/FindBreakpointEvidenceSparkUnitTest.java; src/test/java/org/broadinstitute/hellbender/tools/spark/sv/integration/FindBreakpointEvidenceSparkIntegrationTest.java; src/test/java/org/broadinstitute/hellbender/tools/spark/sv/integration/SVIntegrationTestDataProvider.java. 4. Added code; - factory to call appropriate BreakpointEvidence filter; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/BreakpointFilterFactory.java; - simple helper class to hold feature vectors for classifier; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/EvidenceFeatures.java; - implement classifier-based BreakpointEvidence filter; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/XGBoostEvidenceFilter.java; - unit test for classifier filter; src/test/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/XGBoostEvidenceFilterUnitTest.java. 5. Added resources; - Genome tracts; src/main/resources/large/hg38_centromeres.txt.gz; src/main/resources/large/hg38_gaps.txt.gz; src/main/resources/large/hg38_umap_s100.txt.gz; - Classifier binary file; src/main/resources/large/sv_evidence_classifier.bin; - Data used for validation of performance in unit tests; src/test/resources/sv_classifier_test_data.json; src/test/resources/sv_features_test_data.json",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4769#issuecomment-389218477:2674,test,test,2674,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4769#issuecomment-389218477,5,['test'],"['test', 'tests']"
Testability,/HapMapUnitTest.java; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-41; > (164); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/expected_testFeatureSupportUsingVCF_output.txt; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-42; > (63); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/feature_data_source_test.vcf; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-43; > (28); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/feature_data_source_test.vcf.idx; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-44; > (0); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_bcf_file.bcf; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-45; > (0); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_bcf_file.bcf.idx; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-46; > (0); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_bed_file.bed; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-47; > (1); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_bed_file.bed.idx; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-48; > (0); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_table_file.table; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-49; > (2); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_vcf3_file.vcf; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-50; > (3); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_vcf3_file.vcf.idx; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-51; > (0); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_vcf4_file.vcf; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-52; > ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/224#issuecomment-75657392:10119,test,test,10119,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/224#issuecomment-75657392,1,['test'],['test']
Testability,/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7539#issuecomment-955088400:2053,log,logs,2053,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7539#issuecomment-955088400,20,"['log', 'test']","['logs', 'test', 'test-logs', 'tests']"
Testability,/broadinstitute/hellbender/utils/pairhmm/LoglessPairHMM.java (1); > M src/main/java/org/broadinstitute/hellbender/utils/pairhmm/PairHMM.java (29); > D src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignAssembledContigsSparkTest.java (50); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignmentRegionTest.java (45); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigAlignerTest.java (16); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigsCollectionUnitTest.java (121); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/InversionReadLikelihoodCalculatorUnitTest.java (28); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/LocalAssemblyContigUnitTest.java (28); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSparkUnitTest.java (6); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVFastqUtilsUnitTest.java (186); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVJunctionUnitTest.java (204); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicInversionGenotyperSparkUnitTest.java (177); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSparkUnitTest.java (307); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.fa (84); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup-contigs.fa (22); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup.fa (84); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.merged.fa (46); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/9.r,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:3362,test,test,3362,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,/codecs/refseq/RefSeqFeature.java; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-30; > (258); > - _A_; > src/main/java/org/broadinstitute/hellbender/utils/codecs/refseq/Transcript.java; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-31; > (77); > - _A_; > src/main/java/org/broadinstitute/hellbender/utils/codecs/sampileup/SAMPileupCodec.java; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-32; > (359); > - _A_; > src/main/java/org/broadinstitute/hellbender/utils/codecs/sampileup/SAMPileupFeature.java; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-33; > (276); > - _A_; > src/main/java/org/broadinstitute/hellbender/utils/codecs/table/TableCodec.java; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-34; > (131); > - _A_; > src/main/java/org/broadinstitute/hellbender/utils/codecs/table/TableFeature.java; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-35; > (99); > - _M_; > src/test/java/org/broadinstitute/hellbender/cmdline/CommandLineParserTest.java; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-36; > (279); > - _A_; > src/test/java/org/broadinstitute/hellbender/engine/FeatureDataSourceUnitTest.java; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-37; > (548); > - _A_; > src/test/java/org/broadinstitute/hellbender/engine/FeatureInputUnitTest.java; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-38; > (64); > - _A_; > src/test/java/org/broadinstitute/hellbender/engine/FeatureManagerUnitTest.java; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-39; > (162); > - _A_; > src/test/java/org/broadinstitute/hellbender/engine/FeatureSupportIntegrationTest.java; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-40; > (30); > - _A_; > src/test/java/org/broadinstitute/hellbender/utils/codecs/hapmap/HapMapUnitTest.java; > https://github.com/broadinstitute/hellbender/pull/224,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/224#issuecomment-75657392:8195,test,test,8195,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/224#issuecomment-75657392,1,['test'],['test']
Testability,"/dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallingCarrot.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCallingCarrot.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCallingCarrot.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCallingCarrot.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkComparison.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkComparison.referenceVersion"": ""HG38"",; ""BenchmarkComparison.stratIntervals"": [; ""gs://gcp-public-data--broad-references/hg38/v0/exome_evaluation_regions.v1.interval_list"",; ""gs://broad-dsp-spec-ops/scratch/mshand/EvaluationStratIntervalLists/LCRFromHengHg38.interval_list""; ],; ""BenchmarkComparison.stratLabels"": [; ""exome"",; ""LCR""; ],; ""BenchmarkComparison.truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkComparison.truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkComparison.truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi""; },; ""test_cromwell_job_id"": null,; ""eval_cromwell_job_id"": null,; ""created_at"": ""2022-02-24T15:51:30.767060"",; ""created_by"": null,; ""finished_at"": null; } ; </pre> </details>",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049997691:2859,Benchmark,BenchmarkComparison,2859,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049997691,6,['Benchmark'],['BenchmarkComparison']
Testability,/gatk/pull/2778?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/2778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-80.612%)` | `0% <0%> (-19%)` | |; | [...institute/hellbender/utils/gcs/GATKGCSOptions.java](https://codecov.io/gh/broadinstitute/gatk/pull/2778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvR0FUS0dDU09wdGlvbnMuamF2YQ==) | `0% <0%> (-66.667%)` | `0% <0%> (ø)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/2778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `22.013% <0%> (-62.264%)` | `8% <0%> (-26%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/2778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `41.216% <0%> (-30.405%)` | `26% <0%> (-8%)` | |; | [...llbender/engine/spark/SparkCommandLineProgram.java](https://codecov.io/gh/broadinstitute/gatk/pull/2778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb21tYW5kTGluZVByb2dyYW0uamF2YQ==) | `68.75% <0%> (-25%)` | `6% <0%> (-1%)` | |; | [...ender/engine/datasources/ReferenceMultiSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/2778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGV,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2778#issuecomment-304471964:1824,test,test,1824,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2778#issuecomment-304471964,1,['test'],['test']
Testability,/gatk/pull/3111?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-80.612%)` | `0% <0%> (-19%)` | |; | [...institute/hellbender/utils/gcs/GATKGCSOptions.java](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvR0FUS0dDU09wdGlvbnMuamF2YQ==) | `0% <0%> (-66.667%)` | `0% <0%> (ø)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `22.013% <0%> (-62.264%)` | `8% <0%> (-26%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `41.216% <0%> (-30.405%)` | `26% <0%> (-8%)` | |; | [...llbender/engine/spark/SparkCommandLineProgram.java](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb21tYW5kTGluZVByb2dyYW0uamF2YQ==) | `68.75% <0%> (-25%)` | `6% <0%> (-1%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGV,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3111#issuecomment-308324914:1823,test,test,1823,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3111#issuecomment-308324914,1,['test'],['test']
Testability,/gatk/pull/4283?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [.../main/java/org/broadinstitute/hellbender/Main.java](https://codecov.io/gh/broadinstitute/gatk/pull/4283/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9NYWluLmphdmE=) | `70.466% <25%> (+9.733%)` | `43 <1> (+8)` | :arrow_up: |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4283/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-75.51%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4283/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4283/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4283/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `25.735% <0%> (-44.853%)` | `8% <0%> (-19%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4283/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-9%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4283/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vc,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4283#issuecomment-361224262:1844,test,test,1844,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4283#issuecomment-361224262,1,['test'],['test']
Testability,/hellbender/tools/spark/sv/SVReadLikelihoodCalculator.java (85); > A src/main/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicInversionGenotyperSpark.java (239); > A src/main/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSpark.java (501); > M src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/GenotypeLikelihoodCalculator.java (2); > M src/main/java/org/broadinstitute/hellbender/utils/genotyper/ReadLikelihoods.java (6); > M src/main/java/org/broadinstitute/hellbender/utils/genotyper/SampleList.java (2); > M src/main/java/org/broadinstitute/hellbender/utils/pairhmm/LoglessPairHMM.java (1); > M src/main/java/org/broadinstitute/hellbender/utils/pairhmm/PairHMM.java (29); > D src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignAssembledContigsSparkTest.java (50); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignmentRegionTest.java (45); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigAlignerTest.java (16); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigsCollectionUnitTest.java (121); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/InversionReadLikelihoodCalculatorUnitTest.java (28); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/LocalAssemblyContigUnitTest.java (28); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSparkUnitTest.java (6); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVFastqUtilsUnitTest.java (186); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVJunctionUnitTest.java (204); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicInversionGenotyperSparkUnitTest.java (177); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSparkUnitTest.java (307); > D src/test/resources/org/broadinstitute/hellbender/tools/,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:2743,test,test,2743,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSpark.java (501); > M src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/GenotypeLikelihoodCalculator.java (2); > M src/main/java/org/broadinstitute/hellbender/utils/genotyper/ReadLikelihoods.java (6); > M src/main/java/org/broadinstitute/hellbender/utils/genotyper/SampleList.java (2); > M src/main/java/org/broadinstitute/hellbender/utils/pairhmm/LoglessPairHMM.java (1); > M src/main/java/org/broadinstitute/hellbender/utils/pairhmm/PairHMM.java (29); > D src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignAssembledContigsSparkTest.java (50); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignmentRegionTest.java (45); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigAlignerTest.java (16); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigsCollectionUnitTest.java (121); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/InversionReadLikelihoodCalculatorUnitTest.java (28); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/LocalAssemblyContigUnitTest.java (28); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSparkUnitTest.java (6); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVFastqUtilsUnitTest.java (186); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVJunctionUnitTest.java (204); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicInversionGenotyperSparkUnitTest.java (177); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSparkUnitTest.java (307); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.fa (84); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.me,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:2936,test,test,2936,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,/java/org/broadinstitute/hellbender/utils/genotyper/SampleList.java (2); > M src/main/java/org/broadinstitute/hellbender/utils/pairhmm/LoglessPairHMM.java (1); > M src/main/java/org/broadinstitute/hellbender/utils/pairhmm/PairHMM.java (29); > D src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignAssembledContigsSparkTest.java (50); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignmentRegionTest.java (45); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigAlignerTest.java (16); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigsCollectionUnitTest.java (121); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/InversionReadLikelihoodCalculatorUnitTest.java (28); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/LocalAssemblyContigUnitTest.java (28); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSparkUnitTest.java (6); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVFastqUtilsUnitTest.java (186); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVJunctionUnitTest.java (204); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicInversionGenotyperSparkUnitTest.java (177); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSparkUnitTest.java (307); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.fa (84); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup-contigs.fa (22); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup.fa (84); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.merged.fa (46); > D src/,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:3266,test,test,3266,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,"/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/classes,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/zipfs.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/dnsns.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/sunjce_provider.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/icedtea-sound.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/nashorn.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/sunec.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/sunpkcs11.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/cldrdata.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/jaccess.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/localedata.jar,/gatk/gatk-package-unspecified-SNAPSHOT-local.jar,/jars/gatk-package-4.2.6.1-50-g40182c7-SNAPSHOT-testDependencies.jar,/jars/gatk-package-4.2.6.1-50-g40182c7-SNAPSHOT-test.jar]; 2022-08-16T22:45:53.6382333Z src/main/java/org/broadinstitute/hellbender/cmdline/CommandLineProgram.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6383952Z src/main/java/org/broadinstitute/hellbender/cmdline/CommandLineProgram.java:4: error: package com.google.common.base does not exist; 2022-08-16T22:45:53.6523417Z src/main/java/org/broadinstitute/hellbender/engine/FeatureInput.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6548080Z src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/PosteriorProbabilitiesUtils.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6571861Z src/main/java/org/broadinstitute/hellbender/engine/FeatureContext.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6588890Z src/main/java/org/broadinstitute/h",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217253370:1935,test,testDependencies,1935,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217253370,1,['test'],['testDependencies']
Testability,"/louisb/Workspace/gatk/src/main/cpp/VectorLoglessPairHMM/LoadTimeInitializer.h:4:0,; from /Users/louisb/Workspace/gatk/src/main/cpp/VectorLoglessPairHMM/utils.cc:3:; /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/../include/jni.h:45:20: fatal error: jni_md.h: No such file or directory; compilation terminated. In file included from /Users/louisb/Workspace/gatk/src/main/cpp/VectorLoglessPairHMM/template.h:86:0,; from /Users/louisb/Workspace/gatk/src/main/cpp/VectorLoglessPairHMM/avx_function_instantiations.cc:3:; /Users/louisb/Workspace/gatk/src/main/cpp/VectorLoglessPairHMM/common_data_structure.h: In instantiation of 'static NUMBER ContextBase<NUMBER>::approximateLog10SumLog10(NUMBER, NUMBER) [with NUMBER = double]':; /Users/louisb/Workspace/gatk/src/main/cpp/VectorLoglessPairHMM/pairhmm-template-kernel.cc:120:9: required from 'void initializeVectorsavxd(int, int, NUMBER*, NUMBER*, NUMBER*, Context<NUMBER>, testcase*, __m256d*, __m256d*, __m256d*, __m256d*, __m256d*, __m256d*, __m256d*) [with NUMBER = double; __m256d = __vector(4) double]'; /Users/louisb/Workspace/gatk/src/main/cpp/VectorLoglessPairHMM/pairhmm-template-kernel.cc:268:69: required from 'NUMBER compute_full_prob_avxd(testcase*, NUMBER*) [with NUMBER = double]'; /Users/louisb/Workspace/gatk/src/main/cpp/VectorLoglessPairHMM/avx_function_instantiations.cc:13:77: required from here; /Users/louisb/Workspace/gatk/src/main/cpp/VectorLoglessPairHMM/common_data_structure.h:94:16: error: 'isinf' was not declared in this scope; if (isinf(small) == -1 || isinf(big) == -1); ^; /Users/louisb/Workspace/gatk/src/main/cpp/VectorLoglessPairHMM/common_data_structure.h:94:16: note: suggested alternative:; In file included from /Users/louisb/Workspace/gatk/src/main/cpp/VectorLoglessPairHMM/headers.h:27:0,; from /Users/louisb/Workspace/gatk/src/main/cpp/VectorLoglessPairHMM/template.h:4,; from /Users/louisb/Workspace/gatk/src/main/cpp/VectorLoglessPairHMM/avx_function_instantiations.cc:3:; /usr/local/Ce",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1504#issuecomment-187417081:2306,test,testcase,2306,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1504#issuecomment-187417081,1,['test'],['testcase']
Testability,"/machineTypes/n1-standard-2"",; ""maintenanceEvent"":""NONE"",; ""networkInterfaces"":[{""accessConfigs"":[{""externalIp"":""104.198.203.242"",""type"":""ONE_TO_ONE_NAT""}],""forwardedIps"":[],""ip"":""10.128.0.163"",""network"":""projects/685190392835/networks/default""}],; ""scheduling"":{""automaticRestart"":""TRUE"",""onHostMaintenance"":""MIGRATE"",""preemptible"":""FALSE""},; ""serviceAccounts"":{; ""685190392835-compute@developer.gserviceaccount.com"":{; ""aliases"":[""default""],; ""email"":""685190392835-compute@developer.gserviceaccount.com"",; ""scopes"":[""https://www.googleapis.com/auth/userinfo.email"",; ""https://www.googleapis.com/auth/devstorage.full_control"",; ""https://www.googleapis.com/auth/compute""]; },; ""default"":{; ""aliases"":[""default""],; ""email"":""685190392835-compute@developer.gserviceaccount.com"",; ""scopes"":[""https://www.googleapis.com/auth/userinfo.email"",; ""https://www.googleapis.com/auth/devstorage.full_control"",; ""https://www.googleapis.com/auth/compute""]}; },; ""tags"":[""testing""],; ""virtualClock"":{""driftToken"":""11704388862566216373""},; ""zone"":""projects/685190392835/zones/us-central1-b""; },. ""project"":{; ""attributes"":{; ""sshKeys"":""henrik:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQChY0pdGXohYN7KRnQa3VIcDoVBrxZVHkhOFc1SROV2T+gTOunYbOW5C4V1P2MGG6FcKeoQTJzXgPbZurM5l1AfEbKeCde778QyyxbcjpYvKyY5b4qVO79nOKAg1qHIqUl+2txv7X6tPv4Q99T7UBechuc5awnkJZKqP1s1qJ9BYYYAPukZPbhAkjkvPSaJfIi+py2p6L9mXFtrAhYNH1flE9GErAsf2Hq8zQvx4hmTseumv4Fb9rVogcBJOqhmDQmYwTg2rEbdLAjbqY7Sf4kjdOfF7uhwasZgVMjF1z5utnvHd2wC/cjkuDZB4UhetLTeOWDtvgZxF/uVJSTU2AGD google-ssh {\""userName\"":\""henrik@travis-ci.org\"",\""expireOn\"":\""2016-03-04T00:52:57+0000\""}\nhenrik:ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBJ6IOlU4vY6QLWKOX52Opcdx/2zNgJyMq7ntIf8qD+CbMMfUy5C6WJnjn4E2lvYqYaVIotY196cVazh0Jj8E/co= google-ssh {\""userName\"":\""henrik@travis-ci.org\"",\""expireOn\"":\""2016-03-04T00:52:42+0000\""}\n""; },; ""numericProjectId"":685190392835,; ""projectId"":""travis-ci-prod-2""; }; },. ```. In the meantime, I've also found [this site](https:/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6042#issuecomment-513242018:2500,test,testing,2500,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6042#issuecomment-513242018,1,['test'],['testing']
Testability,/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.fa (84); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup-contigs.fa (22); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup.fa (84); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.merged.fa (46); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.merged.rmdup-contigs.fa (14); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.fastq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.fa (4); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.fa (8); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.fa (84); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.rmdup-contigs.fa (30); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.rmdup.fa (84); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.fq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.fastq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.fa (2); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assem,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:4691,test,test,4691,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,/org/broadinstitute/hellbender/tools/spark/sv/SVFastqUtils.java (101); > A src/main/java/org/broadinstitute/hellbender/tools/spark/sv/SVJunction.java (309); > A src/main/java/org/broadinstitute/hellbender/tools/spark/sv/SVReadLikelihoodCalculator.java (85); > A src/main/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicInversionGenotyperSpark.java (239); > A src/main/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSpark.java (501); > M src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/GenotypeLikelihoodCalculator.java (2); > M src/main/java/org/broadinstitute/hellbender/utils/genotyper/ReadLikelihoods.java (6); > M src/main/java/org/broadinstitute/hellbender/utils/genotyper/SampleList.java (2); > M src/main/java/org/broadinstitute/hellbender/utils/pairhmm/LoglessPairHMM.java (1); > M src/main/java/org/broadinstitute/hellbender/utils/pairhmm/PairHMM.java (29); > D src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignAssembledContigsSparkTest.java (50); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignmentRegionTest.java (45); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigAlignerTest.java (16); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigsCollectionUnitTest.java (121); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/InversionReadLikelihoodCalculatorUnitTest.java (28); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/LocalAssemblyContigUnitTest.java (28); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSparkUnitTest.java (6); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVFastqUtilsUnitTest.java (186); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVJunctionUnitTest.java (204); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicInversionGenotyperSparkUnitTest.java (1,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:2544,test,test,2544,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,"/reprocessed_data/CHMI_CHMI3_WGS4/CHMI_CHMI3_WGS4.bam""; ],; ""FunctionalEquivalenceTest.ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""FunctionalEquivalenceTest.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""FunctionalEquivalenceTest.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""FunctionalEquivalenceTest.replicate_no"": [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ],; ""gatk_docker"": ""image_build:gatk|4fa4b23a1b3756080aba2f1eecd791380b3921a6""; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEqui",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135:4108,benchmark,benchmarking,4108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135,2,['benchmark'],['benchmarking']
Testability,"/reprocessed_data/CHMI_CHMI3_WGS4/CHMI_CHMI3_WGS4.bam""; ],; ""FunctionalEquivalenceTest.ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""FunctionalEquivalenceTest.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""FunctionalEquivalenceTest.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""FunctionalEquivalenceTest.replicate_no"": [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ],; ""gatk_docker"": ""image_build:gatk|5cdd2eaebb27509947cde3dbd26ee9a3fce72352""; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEqui",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659:4108,benchmark,benchmarking,4108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659,2,['benchmark'],['benchmarking']
Testability,"/reprocessed_data/CHMI_CHMI3_WGS4/CHMI_CHMI3_WGS4.bam""; ],; ""FunctionalEquivalenceTest.ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""FunctionalEquivalenceTest.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""FunctionalEquivalenceTest.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""FunctionalEquivalenceTest.replicate_no"": [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ]; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"":",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440:4211,benchmark,benchmarking,4211,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440,2,['benchmark'],['benchmarking']
Testability,"/test/resources/large/org/broadinstitute/hellbender/tools/walkers/vqsr/scalable/train/expected/extract.nonAS.snpIndel.posUn.train.snpIndel.posOnly.IF.snp.trainingScores.hdf5 /repo/extract.nonAS.snpIndel.posUn.train.snpIndel.posOnly.IF.snp.trainingScores.hdf5. file1 file2; ---------------------------------------; x x / ; x x /data ; x x /data/scores . group : </> and </>; 0 differences found; group : </data> and </data>; 0 differences found; dataset: </data/scores> and </data/scores>; size: [445] [445]; position scores scores difference ; ------------------------------------------------------------; [ 60 ] -0.419202 -0.419202 5.55112e-17 ; 1 differences found; ```. Looks pretty negligible to me! :stuck_out_tongue_closed_eyes: Probably a result of the native code being called by the python/ML packages used in these tools; even minor changes in the compilers across Ubuntu versions might introduce differences like these. A quick fix might be to replace all system calls to `h5diff` in these tests with `h5diff --use-system-epsilon`; seems to do the trick here. But if that doesn't fix all test cases, then perhaps you can relax things with `h5diff -p EPSILON`, where `EPSILON` is a relative threshold. Probably OK to pick something like `1E-6`. OK if I leave it to you to try this or otherwise check the rest of the cases?. Sorry for the inconvenience! I think the exact-match test worked as intended here, but I probably could've put in better messaging originally. Unfortunately, it's a bit awkward to grab the output of system commands. And thanks for dealing with conda again (a necessary evil, unless we want to reimplement the entire field of machine learning in Java)! I'll experiment to see if I can't get the more recent version used in #8561 (23.10) working with the current environment---probably just some minor tweak to the pip version is needed to get around the error you're seeing. You could try unpinning it to see what gets pulled in. It would be great if we could get off",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8610#issuecomment-1848796931:1378,test,tests,1378,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8610#issuecomment-1848796931,1,['test'],['tests']
Testability,/travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbende,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7221#issuecomment-827314679:1459,test,tests,1459,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7221#issuecomment-827314679,2,['test'],"['test', 'tests']"
Testability,"0 samples generated.; 09:46:01.577 INFO GibbsSampler - 100 of 100 samples generated.; 09:46:01.577 INFO GibbsSampler - MCMC sampling complete.; 09:46:01.621 INFO MultidimensionalModeller - Smoothing iteration: 2; 09:46:01.621 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 398; 09:46:01.621 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 341; 09:46:01.622 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:46:02.459 INFO GibbsSampler - Starting MCMC sampling.; 09:46:04.896 INFO GibbsSampler - 25 of 100 samples generated.; 09:46:07.292 INFO GibbsSampler - 50 of 100 samples generated.; 09:46:09.705 INFO GibbsSampler - 75 of 100 samples generated.; 09:46:12.179 INFO GibbsSampler - 100 of 100 samples generated.; 09:46:12.179 INFO GibbsSampler - MCMC sampling complete.; 09:46:12.179 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:46:12.202 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:46:12.546 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599161.730531...; 09:46:12.546 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151592, biasVariance=0.041338, outlierProbability=0.030947}; 09:46:12.859 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599150.005317...; 09:46:12.859 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151592, biasVariance=0.036533, outlierProbability=0.037484}; 09:46:13.165 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599148.402059...; 09:46:13.165 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149236, biasVariance=0.034264, outlierProbability=0.038997}; 09:46:13.451 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599147.957754...; 09:46:13.451 INFO AlleleFractionInitializer - AlleleFractionGlobalParameter",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:7053,log,log,7053,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability,"0 samples generated.; 09:46:39.723 INFO GibbsSampler - 100 of 100 samples generated.; 09:46:39.723 INFO GibbsSampler - MCMC sampling complete.; 09:46:39.763 INFO MultidimensionalModeller - Smoothing iteration: 3; 09:46:39.763 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 341; 09:46:39.764 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 326; 09:46:39.764 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:46:40.559 INFO GibbsSampler - Starting MCMC sampling.; 09:46:42.928 INFO GibbsSampler - 25 of 100 samples generated.; 09:46:45.335 INFO GibbsSampler - 50 of 100 samples generated.; 09:46:47.720 INFO GibbsSampler - 75 of 100 samples generated.; 09:46:50.130 INFO GibbsSampler - 100 of 100 samples generated.; 09:46:50.130 INFO GibbsSampler - MCMC sampling complete.; 09:46:50.130 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:46:50.155 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:46:50.491 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599186.382799...; 09:46:50.491 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151674, biasVariance=0.041597, outlierProbability=0.031043}; 09:46:50.793 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599173.973431...; 09:46:50.793 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151674, biasVariance=0.036521, outlierProbability=0.036858}; 09:46:51.096 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599172.045766...; 09:46:51.096 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149513, biasVariance=0.034385, outlierProbability=0.039399}; 09:46:51.370 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599171.568776...; 09:46:51.370 INFO AlleleFractionInitializer - AlleleFractionGlobalParameter",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:9352,log,log,9352,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability,"0 samples generated.; 09:47:17.895 INFO GibbsSampler - 100 of 100 samples generated.; 09:47:17.895 INFO GibbsSampler - MCMC sampling complete.; 09:47:17.941 INFO MultidimensionalModeller - Smoothing iteration: 4; 09:47:17.942 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 326; 09:47:17.942 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 320; 09:47:17.942 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:47:18.756 INFO GibbsSampler - Starting MCMC sampling.; 09:47:21.195 INFO GibbsSampler - 25 of 100 samples generated.; 09:47:23.597 INFO GibbsSampler - 50 of 100 samples generated.; 09:47:26.031 INFO GibbsSampler - 75 of 100 samples generated.; 09:47:28.533 INFO GibbsSampler - 100 of 100 samples generated.; 09:47:28.533 INFO GibbsSampler - MCMC sampling complete.; 09:47:28.533 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:47:28.553 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:47:28.883 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599193.821455...; 09:47:28.884 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151686, biasVariance=0.041615, outlierProbability=0.031024}; 09:47:29.188 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599181.471228...; 09:47:29.188 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151686, biasVariance=0.036547, outlierProbability=0.036766}; 09:47:29.513 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599179.528974...; 09:47:29.514 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149492, biasVariance=0.034434, outlierProbability=0.039341}; 09:47:29.794 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599179.050215...; 09:47:29.794 INFO AlleleFractionInitializer - AlleleFractionGlobalParameter",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:11651,log,log,11651,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability,"0 samples generated.; 09:47:55.984 INFO GibbsSampler - 100 of 100 samples generated.; 09:47:55.984 INFO GibbsSampler - MCMC sampling complete.; 09:47:56.024 INFO MultidimensionalModeller - Smoothing iteration: 5; 09:47:56.025 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 320; 09:47:56.025 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 315; 09:47:56.025 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:47:56.852 INFO GibbsSampler - Starting MCMC sampling.; 09:47:59.368 INFO GibbsSampler - 25 of 100 samples generated.; 09:48:01.836 INFO GibbsSampler - 50 of 100 samples generated.; 09:48:04.204 INFO GibbsSampler - 75 of 100 samples generated.; 09:48:06.588 INFO GibbsSampler - 100 of 100 samples generated.; 09:48:06.588 INFO GibbsSampler - MCMC sampling complete.; 09:48:06.589 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:48:06.609 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:48:06.967 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599214.667518...; 09:48:06.967 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152065, biasVariance=0.041090, outlierProbability=0.031116}; 09:48:07.271 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599203.280111...; 09:48:07.271 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152065, biasVariance=0.036781, outlierProbability=0.037210}; 09:48:07.582 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599201.550266...; 09:48:07.582 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149834, biasVariance=0.034708, outlierProbability=0.039514}; 09:48:07.846 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599201.121676...; 09:48:07.846 INFO AlleleFractionInitializer - AlleleFractionGlobalParameter",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:13950,log,log,13950,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability,"0 samples generated.; 09:48:33.639 INFO GibbsSampler - 100 of 100 samples generated.; 09:48:33.639 INFO GibbsSampler - MCMC sampling complete.; 09:48:33.671 INFO MultidimensionalModeller - Smoothing iteration: 6; 09:48:33.671 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 315; 09:48:33.672 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 311; 09:48:33.672 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:48:34.470 INFO GibbsSampler - Starting MCMC sampling.; 09:48:36.720 INFO GibbsSampler - 25 of 100 samples generated.; 09:48:39.070 INFO GibbsSampler - 50 of 100 samples generated.; 09:48:41.417 INFO GibbsSampler - 75 of 100 samples generated.; 09:48:43.749 INFO GibbsSampler - 100 of 100 samples generated.; 09:48:43.749 INFO GibbsSampler - MCMC sampling complete.; 09:48:43.749 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:48:43.771 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:48:44.116 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599214.649782...; 09:48:44.116 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.041049, outlierProbability=0.031143}; 09:48:44.424 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599203.367762...; 09:48:44.424 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.036778, outlierProbability=0.037218}; 09:48:44.714 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599201.638390...; 09:48:44.714 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149830, biasVariance=0.034706, outlierProbability=0.039510}; 09:48:44.991 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599201.210843...; 09:48:44.991 INFO AlleleFractionInitializer - AlleleFractionGlobalParameter",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:16249,log,log,16249,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability,"0 samples generated.; 09:49:11.512 INFO GibbsSampler - 100 of 100 samples generated.; 09:49:11.512 INFO GibbsSampler - MCMC sampling complete.; 09:49:11.543 INFO MultidimensionalModeller - Smoothing iteration: 7; 09:49:11.543 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 311; 09:49:11.543 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 311; 09:49:11.543 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:49:12.363 INFO GibbsSampler - Starting MCMC sampling.; 09:49:14.885 INFO GibbsSampler - 25 of 100 samples generated.; 09:49:17.255 INFO GibbsSampler - 50 of 100 samples generated.; 09:49:19.604 INFO GibbsSampler - 75 of 100 samples generated.; 09:49:21.938 INFO GibbsSampler - 100 of 100 samples generated.; 09:49:21.939 INFO GibbsSampler - MCMC sampling complete.; 09:49:21.939 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:49:21.958 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:49:22.312 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599214.649782...; 09:49:22.312 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.041049, outlierProbability=0.031143}; 09:49:22.622 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599203.367762...; 09:49:22.622 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.036778, outlierProbability=0.037218}; 09:49:22.933 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599201.638390...; 09:49:22.933 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149830, biasVariance=0.034706, outlierProbability=0.039510}; 09:49:23.216 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599201.210843...; 09:49:23.216 INFO AlleleFractionInitializer - AlleleFractionGlobalParameter",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:18548,log,log,18548,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability,0%> (-44.445%)` | `87 <0> (-82)` | |; | [...ender/cmdline/programgroups/SparkProgramGroup.java](https://codecov.io/gh/broadinstitute/gatk/pull/3778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL3Byb2dyYW1ncm91cHMvU3BhcmtQcm9ncmFtR3JvdXAuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-3%)` | |; | [...ctions/RequiredFeatureInputArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/3778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL2FyZ3VtZW50Y29sbGVjdGlvbnMvUmVxdWlyZWRGZWF0dXJlSW5wdXRBcmd1bWVudENvbGxlY3Rpb24uamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-1%)` | |; | [...sformers/MisencodedBaseQualityReadTransformer.java](https://codecov.io/gh/broadinstitute/gatk/pull/3778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90cmFuc2Zvcm1lcnMvTWlzZW5jb2RlZEJhc2VRdWFsaXR5UmVhZFRyYW5zZm9ybWVyLmphdmE=) | `0% <0%> (-100%)` | `0% <0%> (-4%)` | |; | [...r/cmdline/programgroups/TestSparkProgramGroup.java](https://codecov.io/gh/broadinstitute/gatk/pull/3778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL3Byb2dyYW1ncm91cHMvVGVzdFNwYXJrUHJvZ3JhbUdyb3VwLmphdmE=) | `0% <0%> (-100%)` | `0% <0%> (-3%)` | |; | [...e/hellbender/utils/R/RScriptExecutorException.java](https://codecov.io/gh/broadinstitute/gatk/pull/3778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9SL1JTY3JpcHRFeGVjdXRvckV4Y2VwdGlvbi5qYXZh) | `0% <0%> (-100%)` | `0% <0%> (-1%)` | |; | [...der/utils/codecs/GENCODE/GencodeGtfUTRFeature.java](https://codecov.io/gh/broadinstitute/gatk/pull/3778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9jb2RlY3MvR0VOQ09ERS9HZW5jb2RlR3RmVVRSRmVhdHVyZS5qYXZh) | `0% <0%> (-100%)` | `0% <0%> (-4%)` | |; | [...dline/programgroups/SparkPipelineProgramGroup.java](https://codecov.io/gh/broadinstitute/gatk/pull/3778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcm,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3778#issuecomment-342821044:2169,Test,TestSparkProgramGroup,2169,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3778#issuecomment-342821044,1,['Test'],['TestSparkProgramGroup']
Testability,0); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:377); 	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54); 	at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); Caused by: org.testng.TestNGException:An error occurred while instantiating class org.broadinstitute.hellbender.engine.spark.ReadsPreprocessingPipelineSparkTestData. Check to make sure it can be instantiated; 	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:134); 	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79); 	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:110); 	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:195); 	at org.testng.TestClass.getInstances(TestClass.java:102); 	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82); 	at org.testng.TestClass.init(TestClass.java:74); 	at org.testng.TestClass.<init>(TestClass.java:39); 	at org.testng.TestRunner.initMethods(TestRunner.java:466); 	at org.testng.TestRunner.init(TestRunner.java:345); 	at org.testng.TestRunner.init(TestRunner.java:298); 	at org.testng.TestRunner.<init>(TestRunner.java:183); 	at org.testng.SuiteRunner$Defau,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5787#issuecomment-472107858:2345,test,testng,2345,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5787#issuecomment-472107858,1,['test'],['testng']
Testability,0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.fa (4); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.fa (8); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.fa (84); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.rmdup-contigs.fa (30); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.rmdup.fa (84); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.fq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.fastq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.fa (2); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.fa (4); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.merged.fa (46); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.merged.rmdup-contigs.fa (14); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.merged.rmdup.fa (20); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.fq (0); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSpark/inversions.vcf (25); > Patch Links:; > ; > https://github.com/broadinstitute/gatk/pull/2189.patch; > https://,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:5515,test,test,5515,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,"0-48e2-95c9-15a2e1ae7dee%2Fcall-CombineSummaries%2Fsummary.csv)|; |NIST evalHCprocesshours|103.23083611111107|; |NIST evalHCsystemhours|0.2083694444444444|; |NIST evalHCwallclockhours|76.16374166666664|; |NIST evalHCwallclockmax|3.743883333333333|; |NIST evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Facc9e2ac-b10a-4d6a-b586-cd3e47f04e41%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F56974c24-19c8-4f87-b7b1-b71028109732%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |NIST evalindelF1Score|0.9902|; |NIST evalindelPrecision|0.9903|; |NIST evalsnpF1Score|0.9899|; |NIST evalsnpPrecision|0.9887|; |NIST evalsnpRecall|0.9911|; |NIST evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Facc9e2ac-b10a-4d6a-b586-cd3e47f04e41%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F56974c24-19c8-4f87-b7b1-b71028109732%2Fcall-BenchmarkVCFTestSample%2FBenchmark%2Fb84fd1b7-a21e-4098-aeaf-05de3b35b2df%2Fcall-CombineSummaries%2Fsummary.csv)|; |ROC_Plots_Reported|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Facc9e2ac-b10a-4d6a-b586-cd3e47f04e41%2Fcall-CreateHTMLReport%2Freport.html)|. </details>. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""00d212a9-8eac-4575-9cde-b0a911b3c2f2"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-05-16 17:15:43.799630906 UTC"",; ""status"": ""succeeded"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""te",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099:5678,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,5678,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099,2,['Benchmark'],"['BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"0-90fa-cde7e1090a47/call-CHMSampleHeadToHead/BenchmarkComparison/deb85607-d693-4232-a4da-0fb88dd29cad/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-CHMSampleHeadToHead/BenchmarkComparison/deb85607-d693-4232-a4da-0fb88dd29cad/call-BenchmarkVCFTestSample/Benchmark/a15fdeb6-16e8-48d7-82cb-168726f4dc18/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-EXOME1SampleHeadToHead/BenchmarkComparison/75ea4d64-414f-43aa-a8d6-9c34870b1491/call-BenchmarkVCFControlSample/Benchmark/0f001ca8-d7af-4d01-b9ef-d6ddbe35317d/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-EXOME1SampleHeadToHead/BenchmarkComparison/75ea4d64-414f-43aa-a8d6-9c34870b1491/call-BenchmarkVCFTestSample/Benchmark/540fbadc-ba57-4012-8ff1-76461ecb7bb3/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""99.85891111111113"",; ""NIST controlHCsystemhours"": ""0.17817777777777768"",; ""NIST controlHCwallclockhours"": ""70.22329166666665"",; ""NIST controlHCwallclockmax"": ""3.8036305555555554"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOr",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169:19126,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,19126,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,0.9% 698 + 0 htsjdk.samtools.BinaryTagCodec.readTags; 0.7% 573 + 0 htsjdk.samtools.util.BlockCompressedOutputStream.write; 0.7% 535 + 0 org.broadinstitute.hellbender.utils.recalibration.covariates.ContextCovariate.recordValues; 0.6% 506 + 1 htsjdk.samtools.BinaryTagCodec.readSingleValue; 0.6% 459 + 1 scala.collection.Iterator$$anon$13.hasNext; 0.5% 400 + 0 org.broadinstitute.hellbender.relocated.com.google.common.collect.AbstractMapBasedMultimap.put; 0.5% 370 + 1 org.broadinstitute.hellbender.utils.baq.BAQ.calcBAQFromHMM; 0.5% 360 + 0 org.broadinstitute.hellbender.relocated.com.google.common.collect.ImmutableListMultimap.copyOf; 0.4% 348 + 5 scala.collection.IndexedSeqOptimized$class.zip; 0.4% 330 + 3 com.esotericsoftware.kryo.serializers.FieldSerializer$ObjectField.read; 0.4% 325 + 0 htsjdk.samtools.SAMBinaryTagAndValue.find; 0.4% 322 + 0 org.broadinstitute.hellbender.utils.read.SAMRecordToGATKReadAdapter.getReadGroup; 66.2% 45378 + 7026 Total compiled (including elided). Stub + native Method ; 11.8% 0 + 9359 java.lang.String.intern; 7.1% 0 + 5608 java.util.zip.Deflater.deflateBytes; 6.9% 0 + 5492 java.lang.System.identityHashCode; 2.8% 0 + 2196 java.util.zip.Inflater.inflateBytes; 1.8% 0 + 1447 java.net.SocketInputStream.socketRead0; 0.6% 0 + 484 java.io.FileOutputStream.writeBytes; 0.4% 0 + 285 java.util.zip.Inflater.reset; 0.3% 0 + 259 sun.nio.ch.NativeThread.current; 0.3% 0 + 222 sun.nio.ch.EPollArrayWrapper.epollWait; 0.2% 0 + 137 java.util.zip.Deflater.reset; 0.1% 0 + 115 sun.nio.ch.FileDispatcherImpl.read0; 0.1% 0 + 113 org.apache.hadoop.util.NativeCrc32.nativeComputeChunkedSumsByteArray; 0.1% 67 + 4 java.lang.ClassLoader.defineClass1; 0.1% 0 + 51 java.util.zip.ZipFile.getEntry; 0.1% 0 + 41 java.lang.Throwable.fillInStackTrace; 0.0% 0 + 24 org.apache.hadoop.util.NativeCrc32.nativeComputeChunkedSums; 0.0% 0 + 23 java.lang.System.arraycopy; 0.0% 0 + 18 java.lang.Object.clone; 0.0% 1 + 15 java.io.UnixFileSystem.getBooleanAttributes0; 0.0% 0 + 14 sun.reflect.Refl,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1657#issuecomment-208967490:4063,Stub,Stub,4063,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1657#issuecomment-208967490,1,['Stub'],['Stub']
Testability,"015f-0a1b-f1bd-00002ce33928 ; on database directory /tmp/spark-98953d35-8594-4907-b4a5-0870f1d17b3e/metastore with class loader sun.misc.Launcher$AppClassLoader@5c647e05 ; Loaded from file:/opt/cloudera/parcels/CDH-5.12.1-1.cdh5.12.1.p0.3/jars/derby-10.11.1.1.jar; java.vendor=Oracle Corporation; java.runtime.version=1.8.0_91-b14; user.dir=/opt/Software/gatk; os.name=Linux; os.arch=amd64; os.version=3.10.0-514.el7.x86_64; derby.system.home=null; Database Class Loader started - derby.database.classpath=''; 17/10/11 14:25:33 WARN metastore.ObjectStore: Version information not found in metastore. hive.metastore.schema.verification is not enabled so recording the schema version 1.1.0-cdh5.12.1; 17/10/11 14:25:33 WARN metastore.ObjectStore: Failed to get database default, returning NoSuchObjectException; SQL context available as sqlContext. **./gradlew bundle**; **[root@com1 gatk]# ./gradlew bundle; when I executed the command ”./gradlew bundle”， it appeared the error in the last ，did this matter？**. .......; [loading ZipFileIndexFileObject[/root/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.6.5/d50be1723a09be903887099ff2014ea9020333/jackson-databind-2.6.5.jar(com/fasterxml/jackson/databind/annotation/JsonSerialize$Inclusion.class)]]; [loading ZipFileIndexFileObject[/root/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-core/2.5/7ed845de1dfe070d43511fab1784e6c4118398/log4j-core-2.5.jar(org/apache/logging/log4j/core/config/plugins/PluginVisitorStrategy.class)]]; [done in 5759 ms]; 1 error; :gatkTabComplete FAILED. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':gatkTabComplete'.; > Javadoc generation failed. Generated Javadoc options file (useful for troubleshooting): '/opt/Software/gatk/build/tmp/gatkTabComplete/jadoc.options'. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. BUILD FAILED. Total time: 7.431 secs",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-335696240:3245,log,logging,3245,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-335696240,3,['log'],"['log', 'logging']"
Testability,"05,Cpu time(s),7.8149e-05,Critical path wall-clock time(s),0,Cpu time(s),0,#critical path,0; GENOMICSDB_TIMER,Time in read_all(),Wall-clock time(s),0.096994,Cpu time(s),0.0968966,Critical path wall-clock time(s),0,Cpu time(s),0,#critical path,0; WARNING: No valid combination operation found for INFO field DS - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field HaplotypeScore - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field InbreedingCoeff - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAC - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAF - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field DS - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field HaplotypeScore - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field InbreedingCoeff - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAC - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAF - the field will NOT be part of INFO fields in the generated VCF records; Created workspace /tmp/travis/genomicsdb-batchsize-tests-311791747726779418/workspace-1; GENOMICSDB_TIMER,Fetch from VCF,Wall-clock time(s),0.018375,Cpu time(s),0.0183694,Critical path wall-clock time(s),0.017755,Cpu time(s),0.0177497,#critical path,19; GENOMICSDB_TIMER,Combining cells,Wall-clock time(s),0.00309",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2634#issuecomment-298740693:4425,test,tests-,4425,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2634#issuecomment-298740693,1,['test'],['tests-']
Testability,"05f-a3fa-41fc-8d17-a2c55d875eab/call-CHMSampleHeadToHead/BenchmarkComparison/1fb97a8b-caee-4184-8e36-be21e6c43549/call-CONTROLRuntimeTask/cacheCopy/monitoring.pdf"",; ""CHM controlindelF1Score"": ""0.8724"",; ""CHM controlindelPrecision"": ""0.8814"",; ""CHM controlsnpF1Score"": ""0.9784"",; ""CHM controlsnpPrecision"": ""0.9706"",; ""CHM controlsnpRecall"": ""0.9863"",; ""CHM controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-CHMSampleHeadToHead/BenchmarkComparison/1fb97a8b-caee-4184-8e36-be21e6c43549/call-BenchmarkVCFControlSample/Benchmark/3b068fb2-7140-4c1e-8860-df8df21821ec/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""80.5165222222222"",; ""CHM evalHCsystemhours"": ""0.1713305555555555"",; ""CHM evalHCwallclockhours"": ""53.10978888888891"",; ""CHM evalHCwallclockmax"": ""2.7458416666666667"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-CHMSampleHeadToHead/BenchmarkComparison/1fb97a8b-caee-4184-8e36-be21e6c43549/call-EVALRuntimeTask/cacheCopy/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-CHMSampleHeadToHead/BenchmarkComparison/1fb97a8b-caee-4184-8e36-be21e6c43549/call-BenchmarkVCFTestSample/Benchmark/7f7c4522-e293-4a03-ada8-9541a585250b/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-EXOME1Sampl",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069766207:11269,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,11269,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069766207,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,0999 -47 ; ==============================================; Files 769 770 +1 ; Lines 40143 40264 +121 ; Branches 6993 7010 +17 ; ==============================================; - Hits 30479 30293 -186 ; - Misses 7017 7318 +301 ; - Partials 2647 2653 +6; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2389?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...institute/hellbender/engine/FeatureDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/2389?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvRmVhdHVyZURhdGFTb3VyY2UuamF2YQ==) | `75.676% <ø> (-0.901%)` | `35 <0> (-1)` | |; | [...ute/hellbender/utils/test/GenomicsDBTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2389?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0dlbm9taWNzREJUZXN0VXRpbHMuamF2YQ==) | `85.714% <100%> (ø)` | `1 <0> (ø)` | :arrow_down: |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/2389?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `77.612% <44.444%> (-8.788%)` | `32 <2> (-3)` | |; | [.../hellbender/tools/genomicsdb/GenomicsDBImport.java](https://codecov.io/gh/broadinstitute/gatk/pull/2389?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9nZW5vbWljc2RiL0dlbm9taWNzREJJbXBvcnQuamF2YQ==) | `72.321% <72.321%> (ø)` | `20 <20> (?)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/2389?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-80.612%)` | `0% <0%> (-19%)` | |; | [...institute/hellbender/utils/gcs/GATKGCSOptions.java](https://codecov.io/gh/broadinstitute/gatk/pull/2389?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9v,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-296171696:1533,test,test,1533,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-296171696,1,['test'],['test']
Testability,"09:49:14.885 INFO GibbsSampler - 25 of 100 samples generated.; 09:49:17.255 INFO GibbsSampler - 50 of 100 samples generated.; 09:49:19.604 INFO GibbsSampler - 75 of 100 samples generated.; 09:49:21.938 INFO GibbsSampler - 100 of 100 samples generated.; 09:49:21.939 INFO GibbsSampler - MCMC sampling complete.; 09:49:21.939 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:49:21.958 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:49:22.312 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599214.649782...; 09:49:22.312 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.041049, outlierProbability=0.031143}; 09:49:22.622 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599203.367762...; 09:49:22.622 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.036778, outlierProbability=0.037218}; 09:49:22.933 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599201.638390...; 09:49:22.933 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149830, biasVariance=0.034706, outlierProbability=0.039510}; 09:49:23.216 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599201.210843...; 09:49:23.216 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147681, biasVariance=0.033671, outlierProbability=0.039510}; 09:49:23.323 INFO GibbsSampler - Starting MCMC sampling.; 09:49:29.603 INFO GibbsSampler - 25 of 100 samples generated.; 09:49:36.116 INFO GibbsSampler - 50 of 100 samples generated.; 09:49:42.766 INFO GibbsSampler - 75 of 100 samples generated.; 09:49:49.322 INFO GibbsSampler - 100 of 100 samples generated.; 09:49:49.322 INFO GibbsSampler - MCMC sampling complete.; 09:49:49.355 INFO MultidimensionalModeller - Final number of segments after smoothing: 311; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:19161,log,log,19161,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,2,['log'],['log']
Testability,"0ff0b"",; ""VariantCallingCarrotOrchestrated.haplotype_scatter_count"": 50,; ""VariantCallingCarrotOrchestrated.monitoring_script"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/cromwell_monitoring_script.sh"",; ""VariantCallingCarrotOrchestrated.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrotOrchestrated.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrotOrchestrated.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrotOrchestrated.use_gatk3_haplotype_caller"": true; },; ""test_options"": null,; ""eval_input"": {; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalVcf"": ""test_output:VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1068293828:3589,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,3589,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1068293828,6,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,1%> (-0.593%)` | `44 <1> (-1)` | |; | [.../hellbender/tools/genomicsdb/GenomicsDBImport.java](https://codecov.io/gh/broadinstitute/gatk/pull/4645/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9nZW5vbWljc2RiL0dlbm9taWNzREJJbXBvcnQuamF2YQ==) | `80.083% <92.157%> (+4.325%)` | `52 <11> (-1)` | :arrow_down: |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4645/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-74.257%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4645/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4645/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-65.217%)` | `2% <0%> (-7%)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/4645/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4645/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-10%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4645/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4645#issuecomment-389699780:2478,test,test,2478,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4645#issuecomment-389699780,1,['test'],['test']
Testability,1) |; | ••••••••• 92% | [...roadinstitute/hellbender/engine/ReadsDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/2224/compare#diff-7372632F6D61696E2F6A6176612F6F72672F62726F6164696E737469747574652F68656C6C62656E6465722F656E67696E652F526561647344617461536F757263652E6A617661) |; | •••••••••• 100% | [...argumentcollections/ReadInputArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/2224/compare#diff-7372632F6D61696E2F6A6176612F6F72672F62726F6164696E737469747574652F68656C6C62656E6465722F636D646C696E652F617267756D656E74636F6C6C656374696F6E732F52656164496E707574417267756D656E74436F6C6C656374696F6E2E6A617661) |; | •••••••••• 100% | [...broadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2224/compare#diff-7372632F6D61696E2F6A6176612F6F72672F62726F6164696E737469747574652F68656C6C62656E6465722F7574696C732F6763732F4275636B65745574696C732E6A617661) |; | •••••••••• 100% | [.../org/broadinstitute/hellbender/utils/io/IOUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2224/compare#diff-7372632F6D61696E2F6A6176612F6F72672F62726F6164696E737469747574652F68656C6C62656E6465722F7574696C732F696F2F494F5574696C732E6A617661) |; | •••••••••• 100% | [...g/broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/2224/compare#diff-7372632F6D61696E2F6A6176612F6F72672F62726F6164696E737469747574652F68656C6C62656E6465722F7574696C732F746573742F42617365546573742E6A617661) |; | •••••••••• 100% | [...a/org/broadinstitute/hellbender/engine/GATKTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/2224/compare#diff-7372632F6D61696E2F6A6176612F6F72672F62726F6164696E737469747574652F68656C6C62656E6465722F656E67696E652F4741544B546F6F6C2E6A617661) |. > Powered by [Codecov](https://codecov.io?src=pr). Last update [13f88ae...ee6b523](https://codecov.io/gh/broadinstitute/gatk/compare/13f88aec9e10e76eb2445b7d2e430d33f24726ed...ee6b5239148af00243a8bb5c5303d1775be9d5c7?src=pr),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2224#issuecomment-257041772:3307,test,test,3307,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2224#issuecomment-257041772,1,['test'],['test']
Testability,"1-93b9-9cec426c5a39/call-CHMSampleHeadToHead/BenchmarkComparison/3609bc35-c943-4006-8b6f-9d71e6c68ef5/call-BenchmarkVCFControlSample/Benchmark/96b872e8-26c0-4406-a7d0-addf04f4ad0e/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""78.10857222222224"",; ""CHM evalHCsystemhours"": ""0.28728055555555554"",; ""CHM evalHCwallclockhours"": ""52.84132777777778"",; ""CHM evalHCwallclockmax"": ""2.9151722222222225"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-CHMSampleHeadToHead/BenchmarkComparison/3609bc35-c943-4006-8b6f-9d71e6c68ef5/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-CHMSampleHeadToHead/BenchmarkComparison/3609bc35-c943-4006-8b6f-9d71e6c68ef5/call-BenchmarkVCFTestSample/Benchmark/a2486748-6d71-463f-bf78-84627e64f2d1/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-EXOME1SampleHeadToHead/BenchmarkComparison/a8851b03-1abb-4622-b481-5425ce01418b/call-BenchmarkVCFControlSample/Benchmark/7730c81c-23aa-4802-9fc0-34528b6158d4/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497:18579,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,18579,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"1-93b9-9cec426c5a39/call-CHMSampleHeadToHead/BenchmarkComparison/3609bc35-c943-4006-8b6f-9d71e6c68ef5/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-CHMSampleHeadToHead/BenchmarkComparison/3609bc35-c943-4006-8b6f-9d71e6c68ef5/call-BenchmarkVCFTestSample/Benchmark/a2486748-6d71-463f-bf78-84627e64f2d1/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-EXOME1SampleHeadToHead/BenchmarkComparison/a8851b03-1abb-4622-b481-5425ce01418b/call-BenchmarkVCFControlSample/Benchmark/7730c81c-23aa-4802-9fc0-34528b6158d4/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-EXOME1SampleHeadToHead/BenchmarkComparison/a8851b03-1abb-4622-b481-5425ce01418b/call-BenchmarkVCFTestSample/Benchmark/7d946274-eb9e-4be8-b04f-c1b3399d4068/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""108.55041388888888"",; ""NIST controlHCsystemhours"": ""0.2213388888888889"",; ""NIST controlHCwallclockhours"": ""78.14672499999998"",; ""NIST controlHCwallclockmax"": ""4.031741666666667"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497:19111,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,19111,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"1. We're only processing primary lines. If there are supplementary alignments we grab those from the SA tag on the primary line.; 2. These experiments all have a single amplicon, to which the reads are aligned. All contig names are equal. That there is just one contig is tested on line 681.; 3. That is tested on line 1653 and 1661. If the reference coverage isn't properly gapped the deletionLength could be driven negative, and we won't attempt the merge.; 4. Because that's where the unaligned part of the read is, the could be ""filled in"" by a supplemental alignment.; 5. It could've been a little larger. We're trying to make sure that it isn't something that BWA would've been happy to merge into a single alignment. Negative overlap lengths are possible, and accounted for. (A negative overlap is a gap.) Line 1644 takes Math.abs(overlapLen), so a gap larger than 2, or an overlap larger than 2 are both rejected. I'll fix up the other helpful suggestions tomorrow, after my presentation. Thank you for those.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6092#issuecomment-522759928:272,test,tested,272,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6092#issuecomment-522759928,2,['test'],['tested']
Testability,"1. Yes it it reproducible. It happens every time. . 2. No, I have not examined the output files, but I have run the same app on my local machine with ; ```; spark-submit --master local[2] gatk-package-4.alpha.2-252-gf627ed4-SNAPSHOT-spark.jar PrintReadsSpark -I chr1.bam -O output.bam; ```; And the output.bam has nearly the same size in bytes as the output from the yarn cluster, so it doesn't appear to be truncated. The output .bai files have identical sizes. . Here is the full stderr log.; ```; Log Type: stderr; Log Upload Time: Fri May 05 17:04:00 +0000 2017; Log Length: 18471; SLF4J: Class path contains multiple SLF4J bindings.; SLF4J: Found binding in [jar:file:/mnt/yarn/usercache/hadoop/filecache/37/__spark_libs__6987413740287883326.zip/slf4j-log4j12-1.7.16.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: Found binding in [jar:file:/usr/lib/hadoop/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.; SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]; 17/05/05 17:03:30 INFO SignalUtils: Registered signal handler for TERM; 17/05/05 17:03:30 INFO SignalUtils: Registered signal handler for HUP; 17/05/05 17:03:30 INFO SignalUtils: Registered signal handler for INT; 17/05/05 17:03:30 INFO ApplicationMaster: Preparing Local resources; 17/05/05 17:03:32 INFO ApplicationMaster: ApplicationAttemptId: appattempt_1493961816416_0010_000002; 17/05/05 17:03:32 INFO SecurityManager: Changing view acls to: yarn,hadoop; 17/05/05 17:03:32 INFO SecurityManager: Changing modify acls to: yarn,hadoop; 17/05/05 17:03:32 INFO SecurityManager: Changing view acls groups to: ; 17/05/05 17:03:32 INFO SecurityManager: Changing modify acls groups to: ; 17/05/05 17:03:32 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(yarn, hadoop); groups with view permissions: Set(); users with modify permissions: Set(yar",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2666#issuecomment-299525046:489,log,log,489,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2666#issuecomment-299525046,4,"['Log', 'log']","['Log', 'log']"
Testability,"1. line coverage is 89% for this class. Uncovered code is for a) read without bases, b) IO exception when writing the report, c) plotting code. So i'm not too worried about this.; 2. agreed in principle. To make this doable though we need a testing framework that would make it easy to manufacture reads en bulk. Right now we'd need to make them one by one - integration test has a nice property of being portable across picard/gatk and it's easy to plug in because it has an input with many reads. I'm assuming that 'looks fine' is equivalent to 'LGTM' and will merge when tests pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1013#issuecomment-149761535:241,test,testing,241,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1013#issuecomment-149761535,3,['test'],"['test', 'testing', 'tests']"
Testability,1.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/g,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7539#issuecomment-955088400:1665,test,test-logs,1665,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7539#issuecomment-955088400,1,['test'],['test-logs']
Testability,1.379%)` | `31 <0> (+15)` | :arrow_up: |; | [...nder/tools/spark/pipelines/ReadsPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4765/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrLmphdmE=) | `89.13% <100%> (ø)` | `12 <0> (ø)` | :arrow_down: |; | [...ender/engine/spark/datasources/ReadsSparkSink.java](https://codecov.io/gh/broadinstitute/gatk/pull/4765/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVhZHNTcGFya1NpbmsuamF2YQ==) | `77.027% <70%> (-0.671%)` | `33 <6> (+4)` | |; | [...der/engine/spark/datasources/ReadsSparkSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4765/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVhZHNTcGFya1NvdXJjZS5qYXZh) | `79.545% <83.333%> (-2.506%)` | `31 <2> (-13)` | |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4765/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `65.972% <90.909%> (+2.062%)` | `37 <4> (+4)` | :arrow_up: |; | [...adinstitute/hellbender/utils/spark/SparkUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4765/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zcGFyay9TcGFya1V0aWxzLmphdmE=) | `84.524% <92.5%> (+11.797%)` | `21 <15> (+9)` | :arrow_up: |; | [...ead/markduplicates/sparkrecords/EmptyFragment.java](https://codecov.io/gh/broadinstitute/gatk/pull/4765/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9FbXB0eUZyYWdtZW50LmphdmE=) | `86.207% <0%> (-2.028%)` | `16% <0%> (+9%)` | |; | [...ils/read/markduplicates/sparkrecords/Fragment.java](https://codecov.io/gh/broadinstitute/gatk/pull/4765/diff?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4765#issuecomment-390023475:2531,test,test,2531,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4765#issuecomment-390023475,1,['test'],['test']
Testability,"1000 --max_advi_iter_subsequent_epochs=1000 --min_training_epochs=20 --max_training_epochs=100 --initial_temperature=2.000000e+00 --num_thermal_epochs=20 --convergence_snr_averaging_window=5000 --convergence_snr_trigger_threshold=1.000000e-01 --convergence_snr_countdown_window=10 --max_calling_iters=1 --caller_update_convergence_threshold=1.000000e-03 --caller_admixing_rate=7.500000e-01 --disable_caller=false --disable_sampler=false --disable_annealing=false --interval_list=/tmp/root/intervals3258684972117897378.tsv --contig_ploidy_prior_table=/gatk/snail/gcnv/grch38_germline_CN_priors.tsv --output_model_path=/gatk/snail/gcnv_180517/ploidy/hc24_soohee1k_ploidy-model; > Stdout: ; > Stderr: Traceback (most recent call last):; > File ""/tmp/root/cohort_determine_ploidy_and_depth.8539868448285133842.py"", line 78, in <module>; > args.contig_ploidy_prior_table); > File ""/opt/miniconda/envs/gatk/lib/python3.6/site-packages/gcnvkernel/io/io_ploidy.py"", line 183, in get_contig_ploidy_prior_map_from_tsv_file; > assert columns[0] == io_consts.ploidy_prior_contig_name_column; > AssertionError; > ; > 	at org.broadinstitute.hellbender.utils.python.PythonExecutorBase.getScriptException(PythonExecutorBase.java:75); > 	at org.broadinstitute.hellbender.utils.runtime.ScriptExecutor.executeCuratedArgs(ScriptExecutor.java:126); > 	at org.broadinstitute.hellbender.utils.python.PythonScriptExecutor.executeArgs(PythonScriptExecutor.java:170); > 	at org.broadinstitute.hellbender.utils.python.PythonScriptExecutor.executeScript(PythonScriptExecutor.java:151); > 	at org.broadinstitute.hellbender.utils.python.PythonScriptExecutor.executeScript(PythonScriptExecutor.java:121); > 	at org.broadinstitute.hellbender.tools.copynumber.DetermineGermlineContigPloidy.executeDeterminePloidyAndDepthPythonScript(DetermineGermlineContigPloidy.java:365); > 	at org.broadinstitute.hellbender.tools.copynumber.DetermineGermlineContigPloidy.doWork(DetermineGermlineContigPloidy.java:263); > 	at org.broadinstitute.hel",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4125#issuecomment-434527279:2349,assert,assert,2349,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4125#issuecomment-434527279,1,['assert'],['assert']
Testability,107766f09ad58785c12fc28c54667028eb89?src=pr&el=desc) will **increase** coverage by `0.033%`.; > The diff coverage is `92.308%`. ```diff; @@ Coverage Diff @@; ## master #4430 +/- ##; ==============================================; + Coverage 79.04% 79.073% +0.033% ; - Complexity 16447 16471 +24 ; ==============================================; Files 1047 1047 ; Lines 59189 59238 +49 ; Branches 9672 9690 +18 ; ==============================================; + Hits 46783 46841 +58 ; + Misses 8644 8635 -9 ; Partials 3762 3762; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4430?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...institute/hellbender/engine/FeatureDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvRmVhdHVyZURhdGFTb3VyY2UuamF2YQ==) | `76.389% <100%> (+0.333%)` | `45 <1> (+1)` | :arrow_up: |; | [...hellbender/utils/test/VariantContextTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1ZhcmlhbnRDb250ZXh0VGVzdFV0aWxzLmphdmE=) | `82.833% <90.909%> (+0.4%)` | `63 <3> (+3)` | :arrow_up: |; | [...park/sv/discovery/alignment/AlignmentInterval.java](https://codecov.io/gh/broadinstitute/gatk/pull/4430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvYWxpZ25tZW50L0FsaWdubWVudEludGVydmFsLmphdmE=) | `89.272% <0%> (ø)` | `73% <0%> (ø)` | :arrow_down: |; | [...kers/variantutils/PosteriorProbabilitiesUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9Qb3N0ZXJpb3JQcm9iYWJpbGl0aWVzVXRpbHMuamF2YQ==) | `77.966% <0%> (+0.847%)` | `43% <0%> (+1%)` | :arrow_up: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtil,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4430#issuecomment-367168210:1233,test,test,1233,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4430#issuecomment-367168210,1,['test'],['test']
Testability,"113 / 643 of them were CNV test files that I deleted in #3907, which is a shade bit more than 1%... only a small fraction of these are loaded dynamically or are index/dict files, which tests will catch (and they have already, now that I check---6 / 113). I will concede that it is likely that most of the remaining files are index files, etc., but I do see a few more bams, etc. that could stand deletion. I'm curious as to what the best way to do this sort of thing actually is!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905#issuecomment-348598077:27,test,test,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905#issuecomment-348598077,2,['test'],"['test', 'tests']"
Testability,"11:57.862 INFO IntelPairHmm - Requested threads: 4; 19:11:57.862 INFO PairHMM - Using the OpenMP multi-threaded AVX-accelerated native PairHMM implementation; 19:11:57.862 INFO ProgressMeter - Starting traversal; 19:11:57.862 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; *** glibc detected *** /for/bar/bin/java: double free or corruption (out): 0x00007f450af58700 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x3d01675dee)[0x7f45058afdee]; /lib64/libc.so.6(+0x3d01678c80)[0x7f45058b2c80]; /tmp/libgkl_smithwaterman410767516409374085.so(_Z19runSWOnePairBT_avx2iiiiPhS_iiaPcPs+0x338)[0x7f4499f4cfa8]; /tmp/libgkl_smithwaterman410767516409374085.so(Java_com_intel_gkl_smithwaterman_IntelSmithWaterman_alignNative+0xd8)[0x7f4499f4cbf8]; [0x7f44f58be6a2]; ======= Memory map: ========; ```. Then we **disabled** AVX2 in the newer cluster using Intels [sde64](https://software.intel.com/en-us/articles/intel-software-development-emulator) with `-ivb`, which directed GATK to use the Java implementation, and the filter worked without core dump. ```; sde64 -ivb -- faa.sh; Using GATK jar /app/gatk-package-4.1.8.0-local.jar; Running:; /bin/java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /app/gatk-package-4.1.8.0-local.jar FilterAlignmentArtifacts -V /output/sample.FilterMutectCalls.vcf.gz -R /db/hs37d5.fa --bwa-mem-index-image /ref/hg38.fa.img -I /output/sample.Mutect2.bam -O sample.somatic_filter2.test.vcf.gz --use-jdk-inflater true --use-jdk-deflater true; 19:41:38.956 INFO NativeLibraryLoader - Loading libgkl_utils.so from jar:file:/app/gatk-package-4.1.8.0-local.jar!/com/intel/gkl/native/libgkl_utils.so; 19:41:39.332 INFO SmithWatermanAligner - AVX accelerated SmithWaterman implementation is not supported, falling back to the Java implementation; ```; Hope this helps and we're looking forward the GKL fix. Cheers,; Richard",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5690#issuecomment-660645356:5714,test,test,5714,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5690#issuecomment-660645356,1,['test'],['test']
Testability,"14-cd1f-4563-8d8a-abf6b6ca7883/call-CHMSampleHeadToHead/BenchmarkComparison/7ff0db7c-0871-4cda-95f3-fa75436cbb21/call-CONTROLRuntimeTask/cacheCopy/monitoring.pdf"",; ""CHM controlindelF1Score"": ""0.8778"",; ""CHM controlindelPrecision"": ""0.8968"",; ""CHM controlsnpF1Score"": ""0.9813"",; ""CHM controlsnpPrecision"": ""0.9774"",; ""CHM controlsnpRecall"": ""0.9852"",; ""CHM controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e372bd14-cd1f-4563-8d8a-abf6b6ca7883/call-CHMSampleHeadToHead/BenchmarkComparison/7ff0db7c-0871-4cda-95f3-fa75436cbb21/call-BenchmarkVCFControlSample/Benchmark/16cd1efe-5cea-403e-8e85-aec15e71bd1d/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""67.35536666666667"",; ""CHM evalHCsystemhours"": ""0.1557166666666667"",; ""CHM evalHCwallclockhours"": ""42.53388888888889"",; ""CHM evalHCwallclockmax"": ""2.7197444444444443"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e372bd14-cd1f-4563-8d8a-abf6b6ca7883/call-CHMSampleHeadToHead/BenchmarkComparison/7ff0db7c-0871-4cda-95f3-fa75436cbb21/call-EVALRuntimeTask/cacheCopy/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8778"",; ""CHM evalindelPrecision"": ""0.8968"",; ""CHM evalsnpF1Score"": ""0.9813"",; ""CHM evalsnpPrecision"": ""0.9774"",; ""CHM evalsnpRecall"": ""0.9852"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e372bd14-cd1f-4563-8d8a-abf6b6ca7883/call-CHMSampleHeadToHead/BenchmarkComparison/7ff0db7c-0871-4cda-95f3-fa75436cbb21/call-BenchmarkVCFTestSample/Benchmark/2071078a-158e-4c3e-9b2f-907bd501821b/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.7573"",; ""EXOME1 controlindelPrecision"": ""0.6882"",; ""EXOME1 controlsnpF1Score"": ""0.9896"",; ""EXOME1 controlsnpPrecision"": ""0.9852"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e372bd14-cd1f-4563-8d8a-abf6b6ca7883/call-EXOME1Sam",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069381494:11270,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,11270,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069381494,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"14.186 INFO Funcotator - Deflater: IntelDeflater; 10:24:14.186 INFO Funcotator - Inflater: IntelInflater; 10:24:14.186 INFO Funcotator - GCS max retries/reopens: 20; 10:24:14.186 INFO Funcotator - Using google-cloud-java patch 6d11bef1c81f885c26b2b56c8616b7a705171e4f from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes; 10:24:14.187 WARN Funcotator -. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!. Warning: Funcotator is a BETA tool and is not yet ready for use in production. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!. 10:24:14.187 INFO Funcotator - Initializing engine; 10:24:15.574 INFO FeatureManager - Using codec VCFCodec to read file file:///omics/chatchawit/sm/out/sample21.vcf; 10:24:15.701 INFO Funcotator - Done initializing engine; log4j:WARN No appenders could be found for logger (org.broadinstitute.hellbender.tools.funcotator.dataSources.DataSourceUtils).; log4j:WARN Please initialize the log4j system properly.; log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.; 10:24:15.728 INFO FeatureManager - Using codec VCFCodec to read file file:///omics/chatchawit/bundle/dsrc/dbsnp/hg38/hg38_All_20170710.vcf.gz; 10:24:15.884 INFO FeatureManager - Using codec XsvLocatableTableCodec to read file file:///omics/chatchawit/bundle/dsrc/oreganno/hg38/oreganno.tsv; 10:24:15.945 INFO FeatureManager - Using codec GencodeGtfCodec to read file file:///omics/chatchawit/bundle/dsrc/gencode/hg38/gencode.v27.chr_patch_hapl_scaff.annotation.REORDERED.gtf; WARNING 2018-04-28 10:24:17 AsciiLineReader Creating an indexable source for an AsciiFeatureCodec using a stream that is neither a PositionalBufferedStream nor a BlockCompressedInputStream; 10:24:29.369 INFO ProgressMeter - Starting traversal; 10:24:29.370 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 10:24:36.192 INFO Funcotator - Shutting down engine; [April 28, 2018 10:24:36 AM ICT] org.broadinstitute.hell",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4712#issuecomment-385137363:2995,log,logging,2995,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4712#issuecomment-385137363,1,['log'],['logging']
Testability,14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/ga,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7539#issuecomment-955088400:1883,test,test-logs,1883,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7539#issuecomment-955088400,1,['test'],['test-logs']
Testability,14](https://travis-ci.com/broadinstitute/gatk/jobs/498538900) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.14/tests/test/index.html) |; | cloud | openjdk8 | [33752.1](https://travis-ci.com/broadinstitute/gatk/jobs/498538887) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.1/tests/test/index.html) |; | unit | openjdk11 | [33752.13](https://travis-ci.com/broadinstitute/gatk/jobs/498538899) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.13/tests/test/index.html) |; | integration | openjdk11 | [33752.12](https://travis-ci.com/broadinstitute/gatk/jobs/498538898) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.12/tests/test/index.html) |; | variantcalling | openjdk8 | [33752.4](https://travis-ci.com/broadinstitute/gatk/jobs/498538890) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.4/tests/test/index.html) |; | unit | openjdk8 | [33752.3](https://travis-ci.com/broadinstitute/gatk/jobs/498538889) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.3/tests/test/index.html) |; | conda | openjdk8 | [33752.5](https://travis-ci.com/broadinstitute/gatk/jobs/498538891) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.5/tests/test/index.html) |; | integration | openjdk8 | [33752.2](https://travis-ci.com/broadinstitute/gatk/jobs/498538888) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.2/tests/test/index.html) |; | cloud | openjdk11 | [33752.14](https://travis-ci.com/broadinstitute/gatk/jobs/498538900) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.14/tests/test/index.html) |; | cloud | openjdk8 | [33752.1](https://travis-ci.com/broadinstitute/gatk/jobs/498538887) | [logs](https://storage.googleapis.com/hellbender-test-logs/buil,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234:1238,test,tests,1238,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234,2,['test'],"['test', 'tests']"
Testability,"15c0e"",; ""VariantCallingCarrotOrchestrated.haplotype_scatter_count"": 50,; ""VariantCallingCarrotOrchestrated.monitoring_script"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/cromwell_monitoring_script.sh"",; ""VariantCallingCarrotOrchestrated.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrotOrchestrated.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrotOrchestrated.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrotOrchestrated.use_gatk3_haplotype_caller"": true; },; ""test_options"": null,; ""eval_input"": {; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalVcf"": ""test_output:VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1180757767:3676,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,3676,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1180757767,4,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"1625"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-baa5-4052-bff9-bd684393ff6c/call-NISTSampleHeadToHead/BenchmarkComparison/d1047505-b7bc-455d-851f-fbed8d81e895/call-CONTROLRuntimeTask/cacheCopy/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-baa5-4052-bff9-bd684393ff6c/call-NISTSampleHeadToHead/BenchmarkComparison/d1047505-b7bc-455d-851f-fbed8d81e895/call-BenchmarkVCFControlSample/Benchmark/5388d7b6-6bcd-451d-9a4e-925b386ecd0c/call-CombineSummaries/summary.csv"",; ""NIST evalHCprocesshours"": ""95.03499722222222"",; ""NIST evalHCsystemhours"": ""0.17304166666666665"",; ""NIST evalHCwallclockhours"": ""67.81165555555557"",; ""NIST evalHCwallclockmax"": ""3.691061111111111"",; ""NIST evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-baa5-4052-bff9-bd684393ff6c/call-NISTSampleHeadToHead/BenchmarkComparison/d1047505-b7bc-455d-851f-fbed8d81e895/call-EVALRuntimeTask/monitoring.pdf"",; ""NIST evalindelF1Score"": ""0.9902"",; ""NIST evalindelPrecision"": ""0.9903"",; ""NIST evalsnpF1Score"": ""0.9899"",; ""NIST evalsnpPrecision"": ""0.9887"",; ""NIST evalsnpRecall"": ""0.9911"",; ""NIST evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-baa5-4052-bff9-bd684393ff6c/call-NISTSampleHeadToHead/BenchmarkComparison/d1047505-b7bc-455d-851f-fbed8d81e895/call-BenchmarkVCFTestSample/Benchmark/faae76f3-8378-4271-9822-5d2587113415/call-CombineSummaries/summary.csv"",; ""ROC_Plots_Reported"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-baa5-4052-bff9-bd684393ff6c/call-CreateHTMLReport/cacheCopy/report.html""; },; ""errors"": null; } ; </pre> </details>",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194801748:20515,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,20515,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194801748,7,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"168571.4; 16:34:35.914 INFO ProgressMeter - Traversal complete. Processed 295 total variants in 0.0 minutes.; 16:34:35.920 INFO LeftAlignAndTrimVariants - Shutting down engine; [September 5, 2018 4:34:35 PM EDT] org.broadinstitute.hellbender.tools.walkers.variantutils.LeftAlignAndTrimVariants done. Elapsed time: 0.01 minutes.; Runtime.totalMemory()=249036800; Tool returned:; 0 variants left aligned; ```. md5 of input; ```; WMCF9-CB5:shlee$ md5 zeta_headless.txt ; MD5 (zeta_headless.txt) = 9569730f636c1c27353ab122a3792a14; ```; md5 of GATK3-leftalign; ```; WMCF9-CB5:shlee$ md5 zeta_leftalign_headless.txt ; MD5 (zeta_leftalign_headless.txt) = a9a07f5049188d2e57fc0b653a131887; ```; md5 of GATK4-port-leftalign; ```; WMCF9-CB5:shlee$ md5 zeta_leftalign_ck_3487_headless.txt ; MD5 (zeta_leftalign_ck_3487_headless.txt) = 61a5526841d465b14f5a4f7582d5ae55; ```. The GATK4-port-leftalign retains the same number of records as the input, whereas GATK3-leftalign drops ten. The test data variants run into and overlap each other. Combining the variant calls is a functionality in another tool, CombineVariants. Here, first let's make sure variant representations are left-aligned and not think about their overlap. ---; ### Look inside each.; input; ```; chr1 10144 . TAACCCCTAACCCTAACCCTAACCC CAACCCCTAACCCTAACCCTAACCC,TACCCCTAACCCTAACCCTAACCC,TTAACCCTAACCCTAACCC 82960.90 PASS AC=13,16,9;AF=0.0003364,0.0004141,0.0002329; chr1 10145 . AACCCCT TACCCCT,ACCCT 51129.90 PASS AC=6,17;AF=0.0001555,0.0004407; chr1 10146 . ACCCCTAACCCTAACCCTAACCCTAACCCTAACCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCCTAACCCTAACCCTAAACCCTAAACCCTAACCCTAACCCTAACCCTAACCCTAACCCCAACCCCAACCCCAACCCCAACCCCAACCCCAACCCTAACCCCTAACCCTAACCCTAACCCTACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAAC ACCCTAACCCTAACCCTAACCCTAACCCTAACCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCCTAACCCTAACCCTAAACCCTAAACCCTAACCCTAACCCTAACCCTAACCCTAACCCCAACCCCAACCCCAACCCCAACCCCAACCCCAACCCTAACCCCTAACCCTAACCCTAACCCTACCCTAACCCTAACCCTAACCCTAACCCTAA",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418875494:6023,test,test,6023,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418875494,1,['test'],['test']
Testability,"16a553/call-BenchmarkVCFTestSample/Benchmark/6b8eb5cf-ee16-48e8-a24f-de149e2eded2/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/43bcefb2-f38b-413d-9b65-06b489e64af1/call-EXOME1SampleHeadToHead/BenchmarkComparison/fa676046-ddfe-4ce8-9193-87025fd9a49b/call-BenchmarkVCFControlSample/Benchmark/8c5c120e-b932-47b0-a592-a719021e6bf9/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/43bcefb2-f38b-413d-9b65-06b489e64af1/call-EXOME1SampleHeadToHead/BenchmarkComparison/fa676046-ddfe-4ce8-9193-87025fd9a49b/call-BenchmarkVCFTestSample/Benchmark/b683956e-cbfb-4550-978b-cd6a28bf12a4/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""103.80716111111109"",; ""NIST controlHCsystemhours"": ""0.20777777777777773"",; ""NIST controlHCwallclockhours"": ""76.1228972222222"",; ""NIST controlHCwallclockmax"": ""4.163775"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/43bcefb2-f38b-413d-9b65-06b489e64af1/call-NISTSampleHeadToHead/BenchmarkComparison/24ad1003-6862-4e29-9d4d-ea8e85bcc78b/call-CONTROLRuntimeTask/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/43bcefb2-f38b-413d-9b65-06b489e64af1/call-NISTSampleHeadToHead/Ben",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574622123:19618,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,19618,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574622123,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"17 -0500. assertions in inference task base; removed a ASCII > 128 character in log messages. commit 526cf92e623a3bbd5f9d375132b6ca046fc47620; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 20:03:04 2017 -0500. redirect tqdm progress bar to python logger. commit 2e45bd30968b921fae225de3901fb97ece690b0c; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 19:45:49 2017 -0500. more arg related fixes. commit bb89a3bb338d88199881e8aca65f656f2acd7c0a; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 19:41:20 2017 -0500. arg related bugfixes in WDL, python, and java CLIs. commit 23569787ee2c8cc6c9227a44170cbbd02fe4427f; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 17:21:05 2017 -0500. fixed issue with python boolean argparse (they use weird semantics). commit ae841c9ed4cd9b2ca1ac0e9082d175ff8ea98298; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 16:44:02 2017 -0500. shorter gCNV WDL tests. commit 5466b806e36df16cad2d045be074e7f9afec0957; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 16:38:15 2017 -0500. fixed arg issues in somatic WDL; exposed all missing args to java side; major update to germline WDLs; all optional python args exposed to WDLs as optional args. commit 50cb6fd08de15469a9080cbb27ff30c8b7ee7e21; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 13:50:45 2017 -0500. missing serialVersionUID. commit 5f0f31eab63b0e6f6105708ded7f86c96c830781; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 13:35:33 2017 -0500. annotated intervals kebab case; updated germline WDL workflows. commit 29cc6234dbfb8db12559217a650c6ceb170c5797; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 13:15:28 2017 -0500. cleanup test files. commit 08a35bb4e65eceb735adcd41a91132e9a34d2b66; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 02:50:19 2017 -0500. update WDL",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598:5735,test,tests,5735,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598,1,['test'],['tests']
Testability,195c554-534f-43ef-80c2-77bdafa1827f%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|78.10181666666668|; |CHM evalHCsystemhours|0.16157500000000005|; |CHM evalHCwallclockhours|55.006172222222226|; |CHM evalHCwallclockmax|2.8554194444444443|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F2a8ce326-baa5-4052-bff9-bd684393ff6c%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa1db35b8-cc7b-4019-bdd0-9f423762542e%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; |CHM evalsnpF1Score|0.9784|; |CHM evalsnpPrecision|0.9706|; |CHM evalsnpRecall|0.9863|; |CHM evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F2a8ce326-baa5-4052-bff9-bd684393ff6c%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa1db35b8-cc7b-4019-bdd0-9f423762542e%2Fcall-BenchmarkVCFTestSample%2FBenchmark%2F5c4f9069-86b3-4d8c-b765-38a67169e4b4%2Fcall-CombineSummaries%2Fsummary.csv)|; |EXOME1 controlindelF1Score|0.727|; |EXOME1 controlindelPrecision|0.632|; |EXOME1 controlsnpF1Score|0.9878|; |EXOME1 controlsnpPrecision|0.9815|; |EXOME1 controlsnpRecall|0.9941|; |EXOME1 controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F2a8ce326-baa5-4052-bff9-bd684393ff6c%2Fcall-EXOME1SampleHeadToHead%2FBenchmarkComparison%2F688ca200-89b9-479b-b701-5fa0b0854778%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2F59d8f8b1-1323-4e56-a1b1-0b1b2c8f2cc0%2Fcall-CombineSummaries%2Fsummary.csv)|; |EXOME1 evalindelF1Score|0.727|; |EXOME1 evalindelPrecision|0.632|; |EXOME1 evalsnpF1Score|0.9878|; |EXOME1 evalsnpPrecision|0.9815|; |EXOME1 evalsnpRecall|0.9941|; |EXOME1 evalsummary|[View in the GCS Console](,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194801748:2226,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,2226,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194801748,2,['Benchmark'],"['BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"19c1c8/call-BenchmarkVCFTestSample/Benchmark/83a51739-dd4e-4f2d-b09a-3c78b132fbf1/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f7eac327-c59c-43f7-a850-21bc3e0ccf52/call-EXOME1SampleHeadToHead/BenchmarkComparison/3b586c16-feb0-4cdd-8850-8426205cced2/call-BenchmarkVCFControlSample/Benchmark/31dfb54a-9ecc-4af2-9fcd-ea9af745342e/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f7eac327-c59c-43f7-a850-21bc3e0ccf52/call-EXOME1SampleHeadToHead/BenchmarkComparison/3b586c16-feb0-4cdd-8850-8426205cced2/call-BenchmarkVCFTestSample/Benchmark/7c7e45ee-4fe9-48e6-b8ed-cd4372c9e726/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""90.94291388888888"",; ""NIST controlHCsystemhours"": ""0.182125"",; ""NIST controlHCwallclockhours"": ""63.56370277777778"",; ""NIST controlHCwallclockmax"": ""3.701625"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f7eac327-c59c-43f7-a850-21bc3e0ccf52/call-NISTSampleHeadToHead/BenchmarkComparison/d1a60d2b-8100-459a-9b05-72a22afccb4a/call-CONTROLRuntimeTask/cacheCopy/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f7eac327-c59c-43f7-a850-21bc3e0ccf52/call-NISTSampleHeadToHead/Benc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182703672:18983,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,18983,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182703672,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,1JlYWRXYWxrZXIuamF2YQ==) | `85.294% <85.294%> (ø)` | `10 <10> (?)` | |; | [...e/hellbender/utils/iterators/ShardingIterator.java](https://codecov.io/gh/broadinstitute/gatk/pull/4682/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pdGVyYXRvcnMvU2hhcmRpbmdJdGVyYXRvci5qYXZh) | `92.683% <92.683%> (ø)` | `18 <18> (?)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4682/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-74.257%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4682/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4682/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-65.217%)` | `2% <0%> (-7%)` | |; | [...ery/inference/SimpleNovelAdjacencyInterpreter.java](https://codecov.io/gh/broadinstitute/gatk/pull/4682/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvaW5mZXJlbmNlL1NpbXBsZU5vdmVsQWRqYWNlbmN5SW50ZXJwcmV0ZXIuamF2YQ==) | `73.973% <0%> (-26.027%)` | `11% <0%> (+4%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4682/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-10%)` | |; | ... and [108 more](https://codecov.io/gh/broadinstitute/gatk/pull/4682/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4682#issuecomment-384608003:3122,test,test,3122,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4682#issuecomment-384608003,1,['test'],['test']
Testability,"1_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthLabel"": ""NA12878_GRCh38_TWISTExome"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508:7322,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,7322,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508,76,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"1a3799007/call-CHMSampleHeadToHead/BenchmarkComparison/f65a7960-7b66-4a5d-a346-bd188a1b3830/call-EVALRuntimeTask/cacheCopy/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e6f57e40-2025-46fd-9aa0-d591a3799007/call-CHMSampleHeadToHead/BenchmarkComparison/f65a7960-7b66-4a5d-a346-bd188a1b3830/call-BenchmarkVCFTestSample/Benchmark/96c96714-3ac6-4d2b-a79c-57086cda6373/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e6f57e40-2025-46fd-9aa0-d591a3799007/call-EXOME1SampleHeadToHead/BenchmarkComparison/4803682b-a3c6-46d6-924b-dbc96a877e16/call-BenchmarkVCFControlSample/Benchmark/dd059ca4-251d-4793-bbff-10dd76123882/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e6f57e40-2025-46fd-9aa0-d591a3799007/call-EXOME1SampleHeadToHead/BenchmarkComparison/4803682b-a3c6-46d6-924b-dbc96a877e16/call-BenchmarkVCFTestSample/Benchmark/e3563584-017d-476b-bbca-775128c80272/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""90.94291388888888"",; ""NIST controlHCsystemhours"": ""0.182125"",; ""NIST controlHCwallclockhours"": ""63.56370277777778"",; ""NIST controlHCwallclockmax"": ""3.701625"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e6f57e40-2",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069378815:12236,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,12236,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069378815,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"1b3830/call-BenchmarkVCFTestSample/Benchmark/96c96714-3ac6-4d2b-a79c-57086cda6373/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e6f57e40-2025-46fd-9aa0-d591a3799007/call-EXOME1SampleHeadToHead/BenchmarkComparison/4803682b-a3c6-46d6-924b-dbc96a877e16/call-BenchmarkVCFControlSample/Benchmark/dd059ca4-251d-4793-bbff-10dd76123882/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e6f57e40-2025-46fd-9aa0-d591a3799007/call-EXOME1SampleHeadToHead/BenchmarkComparison/4803682b-a3c6-46d6-924b-dbc96a877e16/call-BenchmarkVCFTestSample/Benchmark/e3563584-017d-476b-bbca-775128c80272/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""90.94291388888888"",; ""NIST controlHCsystemhours"": ""0.182125"",; ""NIST controlHCwallclockhours"": ""63.56370277777778"",; ""NIST controlHCwallclockmax"": ""3.701625"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e6f57e40-2025-46fd-9aa0-d591a3799007/call-NISTSampleHeadToHead/BenchmarkComparison/ccdb901c-fb8f-49e4-b542-cf42e011a623/call-CONTROLRuntimeTask/cacheCopy/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e6f57e40-2025-46fd-9aa0-d591a3799007/call-NISTSampleHeadToHead/Benc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069378815:12756,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,12756,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069378815,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"1c1de96a2f5ffb5?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb21tYW5kTGluZVByb2dyYW0uamF2YQ==) | `68.75% <0%> (-18.75%)` | `6% <0%> (ø)` | |; | [...ender/engine/datasources/ReferenceMultiSource.java](https://codecov.io/gh/broadinstitute/gatk/compare/e1e71d7091ee703e547842d025e92ac698407ff0...71c03a3e81f2df635e709823e1c1de96a2f5ffb5?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlTXVsdGlTb3VyY2UuamF2YQ==) | `55.556% <0%> (-18.519%)` | `8% <0%> (-1%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/compare/e1e71d7091ee703e547842d025e92ac698407ff0...71c03a3e81f2df635e709823e1c1de96a2f5ffb5?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `10.169% <0%> (-13.559%)` | `1% <0%> (-1%)` | |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/compare/e1e71d7091ee703e547842d025e92ac698407ff0...71c03a3e81f2df635e709823e1c1de96a2f5ffb5?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `77.6% <0%> (-9.6%)` | `28% <0%> (-8%)` | |; | ... and [6 more](https://codecov.io/gh/broadinstitute/gatk/pull/2467?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2467?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2467?src=pr&el=footer). Last update [e1e71d7...71c03a3](https://codecov.io/gh/broadinstitute/gatk/compare/e1e71d7091ee703e547842d025e92ac698407ff0...71c03a3e81f2df635e709823e1c1de96a2f5ffb5?src=pr&el=footer&el=lastupda",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2467#issuecomment-287565894:4278,test,test,4278,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2467#issuecomment-287565894,1,['test'],['test']
Testability,1dGlscy90ZXN0L3Rlc3RlcnMvU2FtRmlsZVRlc3Rlci5qYXZh) | `90.217% <ø> (ø)` | `30 <0> (ø)` | :arrow_down: |; | [.../hellbender/utils/test/testers/CleanSamTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L3Rlc3RlcnMvQ2xlYW5TYW1UZXN0ZXIuamF2YQ==) | `0% <0%> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...llbender/utils/test/SimpleIntervalTestFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1NpbXBsZUludGVydmFsVGVzdEZhY3RvcnkuamF2YQ==) | `100% <100%> (ø)` | `5 <2> (?)` | |; | [...ute/hellbender/utils/test/GenomicsDBTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0dlbm9taWNzREJUZXN0VXRpbHMuamF2YQ==) | `91.667% <100%> (-0.641%)` | `3 <0> (ø)` | |; | [...ils/test/testers/AbstractMarkDuplicatesTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L3Rlc3RlcnMvQWJzdHJhY3RNYXJrRHVwbGljYXRlc1Rlc3Rlci5qYXZh) | `79.487% <100%> (ø)` | `17 <1> (ø)` | :arrow_down: |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-75.51%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...institute/hellbender/utils/gcs/GATKGCSOptions.java](https://codecov.io/gh/broadinstitute/gatk/pull/,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-324298700:2366,test,test,2366,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-324298700,2,['test'],"['test', 'testers']"
Testability,"1df66bb5d9/call-CHMSampleHeadToHead/BenchmarkComparison/79d1a2a4-6b5e-424a-8528-9059bda6db1c/call-BenchmarkVCFControlSample/Benchmark/3046acf7-ded7-40c8-9b7a-3826f480418f/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""67.35536666666667"",; ""CHM evalHCsystemhours"": ""0.1557166666666667"",; ""CHM evalHCwallclockhours"": ""42.53388888888889"",; ""CHM evalHCwallclockmax"": ""2.7197444444444443"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/bf86d5b6-04bd-4344-b4fc-8a1df66bb5d9/call-CHMSampleHeadToHead/BenchmarkComparison/79d1a2a4-6b5e-424a-8528-9059bda6db1c/call-EVALRuntimeTask/cacheCopy/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8778"",; ""CHM evalindelPrecision"": ""0.8968"",; ""CHM evalsnpF1Score"": ""0.9813"",; ""CHM evalsnpPrecision"": ""0.9774"",; ""CHM evalsnpRecall"": ""0.9852"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/bf86d5b6-04bd-4344-b4fc-8a1df66bb5d9/call-CHMSampleHeadToHead/BenchmarkComparison/79d1a2a4-6b5e-424a-8528-9059bda6db1c/call-BenchmarkVCFTestSample/Benchmark/2f376005-bdfb-42bd-8736-1e6df978ab80/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/bf86d5b6-04bd-4344-b4fc-8a1df66bb5d9/call-EXOME1SampleHeadToHead/BenchmarkComparison/7b11647c-6643-4c47-8e1c-3f07bd97e371/call-BenchmarkVCFControlSample/Benchmark/086348b1-f09c-49b0-b830-587e28eec63d/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.7573"",; ""EXOME1 evalindelPrecision"": ""0.6882"",; ""EXOME1 evalsnpF1Score"": ""0.9896"",; ""EXOME1 evalsnpPrecision"": ""0.9852"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/bf86d5b",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069765064:11705,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,11705,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069765064,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,1haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-9%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4590/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `0% <0%> (-22.807%)` | `0% <0%> (-2%)` | |; | [...titute/hellbender/utils/test/MiniClusterUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4590/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L01pbmlDbHVzdGVyVXRpbHMuamF2YQ==) | `78.947% <0%> (-10.526%)` | `6% <0%> (-1%)` | |; | [...adinstitute/hellbender/engine/ReadsDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4590/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUmVhZHNEYXRhU291cmNlLmphdmE=) | `89.394% <0%> (-3.03%)` | `61% <0%> (-2%)` | |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4590/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `61.94% <0%> (-2.985%)` | `30% <0%> (-3%)` | |; | [...der/engine/spark/datasources/ReadsSparkSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4590/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVhZHNTcGFya1NvdXJjZS5qYXZh) | `79.487% <0%> (-2.564%)` | `44% <0%> (ø)` | |; | [...te/hellbender/engine/spark/VariantWalkerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4590/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvVmFyaWFudFdhbGtlclNwYXJrLmphdmE=) | `72.34% <0%> (-2.128%)` | `14% <0%> (ø)` | |; | ... and [2 more](https://codecov.io/gh/broadinstitute/gatk/pull/4590/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4590#issuecomment-376423720:3011,test,test,3011,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4590#issuecomment-376423720,1,['test'],['test']
Testability,"2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ],; ""gatk_docker"": ""image_build:gatk|4fa4b23a1b3756080aba2f1eecd791380b3921a6""; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_output:FunctionalEquivalenceTest.out_dataset"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcfs"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcf_indices"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcfs"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf_index"": ""test_output:FunctionalE",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135:4659,benchmark,benchmarking,4659,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135,2,['benchmark'],['benchmarking']
Testability,"2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ],; ""gatk_docker"": ""image_build:gatk|5cdd2eaebb27509947cde3dbd26ee9a3fce72352""; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_output:FunctionalEquivalenceTest.out_dataset"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcfs"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcf_indices"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcfs"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf_index"": ""test_output:FunctionalE",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659:4659,benchmark,benchmarking,4659,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659,2,['benchmark'],['benchmarking']
Testability,"2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ]; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_output:FunctionalEquivalenceTest.out_dataset"",; ""GatkDragenConcordanceEvaluation.docker_placeholder"": ""image_build:gatk|5cdd2eaebb27509947cde3dbd26ee9a3fce72352"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcfs"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcf_indices"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcfs"",; ""GatkDragenConcordanceEvaluation.gatk_outp",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440:4762,benchmark,benchmarking,4762,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440,2,['benchmark'],['benchmarking']
Testability,"2-bff9-bd684393ff6c/call-CHMSampleHeadToHead/BenchmarkComparison/a1db35b8-cc7b-4019-bdd0-9f423762542e/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-baa5-4052-bff9-bd684393ff6c/call-CHMSampleHeadToHead/BenchmarkComparison/a1db35b8-cc7b-4019-bdd0-9f423762542e/call-BenchmarkVCFTestSample/Benchmark/5c4f9069-86b3-4d8c-b765-38a67169e4b4/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-baa5-4052-bff9-bd684393ff6c/call-EXOME1SampleHeadToHead/BenchmarkComparison/688ca200-89b9-479b-b701-5fa0b0854778/call-BenchmarkVCFControlSample/Benchmark/59d8f8b1-1323-4e56-a1b1-0b1b2c8f2cc0/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-baa5-4052-bff9-bd684393ff6c/call-EXOME1SampleHeadToHead/BenchmarkComparison/688ca200-89b9-479b-b701-5fa0b0854778/call-BenchmarkVCFTestSample/Benchmark/1b8ccc58-1ead-4443-b6a8-64f767abfc70/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""90.94291388888888"",; ""NIST controlHCsystemhours"": ""0.182125"",; ""NIST controlHCwallclockhours"": ""63.56370277777778"",; ""NIST controlHCwallclockmax"": ""3.701625"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-b",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194801748:18464,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,18464,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194801748,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,2.6](https://travis-ci.com/broadinstitute/gatk/jobs/317887706) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.6/tests/test/index.html) |; | python | openjdk8 | [29992.5](https://travis-ci.com/broadinstitute/gatk/jobs/317887705) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.5/tests/test/index.html) |; | integration | oraclejdk8 | [29992.12](https://travis-ci.com/broadinstitute/gatk/jobs/317887712) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.12/tests/test/index.html) |; | integration | openjdk11 | [29992.13](https://travis-ci.com/broadinstitute/gatk/jobs/317887713) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.13/tests/test/index.html) |; | cloud | openjdk8 | [29992.1](https://travis-ci.com/broadinstitute/gatk/jobs/317887701) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.1/tests/test/index.html) |; | cloud | openjdk11 | [29992.15](https://travis-ci.com/broadinstitute/gatk/jobs/317887715) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.15/tests/test/index.html) |; | integration | openjdk8 | [29992.2](https://travis-ci.com/broadinstitute/gatk/jobs/317887702) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.2/tests/test/index.html) |; | unit | openjdk11 | [29992.14](https://travis-ci.com/broadinstitute/gatk/jobs/317887714) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.14/tests/test/index.html) |; | variantcalling | openjdk8 | [29992.4](https://travis-ci.com/broadinstitute/gatk/jobs/317887704) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.4/tests/test/index.html) |; | unit | openjdk8 | [29992.3](https://travis-ci.com/broadinstitute/gatk/jobs/317887703) | [logs](https://storage.googleapis.com/hellbender-tes,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611733065:1231,test,tests,1231,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611733065,2,['test'],"['test', 'tests']"
Testability,"203 INFO ProgressMeter - 1:169334662 59.8 85253000 1426484.3. 20:32:43.007 INFO ProgressMeter - 1:169341665 60.1 85260000 1418372.5. 20:33:04.435 INFO ProgressMeter - 1:169350665 60.5 85269000 1410144.2. 20:33:29.473 INFO CollectAllelicCounts - Shutting down engine. [October 5, 2019 8:33:29 PM UTC] org.broadinstitute.hellbender.tools.copynumber.CollectAllelicCounts done. Elapsed time: 60.94 minutes. Runtime.totalMemory()=5,285,347,328. . . Exception in thread ""main"" java.lang.OutOfMemoryError: GC overhead limit exceeded. . . at java.util.Collections.unmodifiableList(Collections.java:1287). at htsjdk.samtools.Cigar.getCigarElements(Cigar.java:54). at org.broadinstitute.hellbender.utils.read.SAMRecordToGATKReadAdapter.getCigarElements(SAMRecordToGATKReadAdapter.java:336). at org.broadinstitute.hellbender.engine.filters.ReadFilterLibrary$ReadLengthEqualsCigarLengthReadFilter.test(ReadFilterLibrary.java:217). at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70). at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70). at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70). at org.broadinstitute.hellbender.engine.filters.WellformedReadFilter.test(WellformedReadFilter.java:77). at org.broadinstitute.hellbender.engine.filters.CountingReadFilter.test(CountingReadFilter.java:126) . . . From: Louis Bergelson <notifications@github.com> ; Sent: Thursday, October 31, 2019 12:24 PM; To: broadinstitute/gatk <gatk@noreply.github.com>; Cc: rdbremel <rdbremel017@gmail.com>; Mention <mention@noreply.github.com>; Subject: Re: [broadinstitute/gatk] Funcotator shuts down (#6182). . I thought we'd added that to the retry list. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub <https://github.com/broadinstitute/gatk/issues/6182?email_source=notifications&email_token=ANCR2VDSBPTB7S7VFLE2XWLQRMICTA5CNFSM4I2MRFQK",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6182#issuecomment-548929777:1890,test,test,1890,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6182#issuecomment-548929777,1,['test'],['test']
Testability,"21/call-BenchmarkVCFTestSample/Benchmark/2071078a-158e-4c3e-9b2f-907bd501821b/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.7573"",; ""EXOME1 controlindelPrecision"": ""0.6882"",; ""EXOME1 controlsnpF1Score"": ""0.9896"",; ""EXOME1 controlsnpPrecision"": ""0.9852"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e372bd14-cd1f-4563-8d8a-abf6b6ca7883/call-EXOME1SampleHeadToHead/BenchmarkComparison/113b01be-9124-41dd-acc0-5732ef2c7b38/call-BenchmarkVCFControlSample/Benchmark/7222f3cf-155c-423f-bc1e-8194e87ff05f/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.7573"",; ""EXOME1 evalindelPrecision"": ""0.6882"",; ""EXOME1 evalsnpF1Score"": ""0.9896"",; ""EXOME1 evalsnpPrecision"": ""0.9852"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e372bd14-cd1f-4563-8d8a-abf6b6ca7883/call-EXOME1SampleHeadToHead/BenchmarkComparison/113b01be-9124-41dd-acc0-5732ef2c7b38/call-BenchmarkVCFTestSample/Benchmark/e929ad45-5026-4630-8b85-19f6205f068c/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""90.94291388888888"",; ""NIST controlHCsystemhours"": ""0.182125"",; ""NIST controlHCwallclockhours"": ""63.56370277777778"",; ""NIST controlHCwallclockmax"": ""3.701625"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e372bd14-cd1f-4563-8d8a-abf6b6ca7883/call-NISTSampleHeadToHead/BenchmarkComparison/103cd89c-b177-4a0b-84fc-9553a1f8161f/call-CONTROLRuntimeTask/cacheCopy/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9843"",; ""NIST controlindelPrecision"": ""0.9895"",; ""NIST controlsnpF1Score"": ""0.9908"",; ""NIST controlsnpPrecision"": ""0.992"",; ""NIST controlsnpRecall"": ""0.9896"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e372bd14-cd1f-4563-8d8a-abf6b6ca7883/call-NISTSampleHeadToHead/Bench",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069381494:12761,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,12761,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069381494,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"2128d5720718a5e8; $ gradle fatJar; $ java -jar build/libs/hellbender-67b380fbed272bb92ef667ec2128d5720718a5e8-all-version-unknown-SNAPSHOT.jar BaseRecalibratorDataflow -R ./src/test/resources/human_g1k_v37.chr17_1Mb.fasta --knownSites ./src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b37.excluding_sites_after_129.chr17_69k_70k.vcf -I ./src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b37.excluding_sites_after_129.chr17_69k_70k.vcf -RECAL_TABLE_FILE gatk4.pre.cols.table --sort_by_all_columns true; [June 1, 2015 5:51:02 PM EDT] org.broadinstitute.hellbender.dev.tools.walkers.bqsr.BaseRecalibratorDataflow --knownSites /home/pgrosu/me/gg_hellbender_broad_institute/test/hellbender-67b380fbed272bb92ef667ec2128d5720718a5e8/./src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b37.excluding_sites_after_129.chr17_69k_70k.vcf --RECAL_TABLE_FILE gatk4.pre.cols.table --sort_by_all_columns true --input ./src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b37.excluding_sites_after_129.chr17_69k_70k.vcf --reference ./src/test/resources/human_g1k_v37.chr17_1Mb.fasta --run_without_dbsnp_potentially_ruining_quality false --solid_recal_mode SET_Q_ZERO --solid_nocall_strategy THROW_EXCEPTION --mismatches_context_size 2 --indels_context_size 3 --maximum_cycle_value 500 --mismatches_default_quality -1 --insertions_default_quality 45 --deletions_default_quality 45 --low_quality_tail 2 --quantizing_levels 16 --interval_set_rule UNION --interval_padding 0 --bqsrBAQGapOpenPenalty 40.0 --preserve_qscores_less_than 6 --useOriginalQualities false --defaultBaseQualities -1 --runner LOCAL --client_secret client-secrets.json --help false --version false --VERBOSITY INFO --QUIET false; [June 1, 2015 5:51:02 PM EDT] Executing as pgrosu@eofe5 on Linux 2.6.32-358.el6.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_05-b13; Version: Version:version-unknown-SNAPSHOT JdkDeflater; 17:51:02.969 [main] INFO org.broadinstitut",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/535#issuecomment-107730499:3497,test,test,3497,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/535#issuecomment-107730499,1,['test'],['test']
Testability,"2199bb/call-BenchmarkVCFTestSample/Benchmark/76484c8b-d024-45b4-b1e0-2ff2b9adf2c0/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/89508d5f-29f1-4534-9fe1-220a80de17c4/call-EXOME1SampleHeadToHead/BenchmarkComparison/1269d993-e13f-4635-a12a-e65fdaa4ed16/call-BenchmarkVCFControlSample/Benchmark/492b823a-1e34-46cd-b842-5f042bb31ee8/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/89508d5f-29f1-4534-9fe1-220a80de17c4/call-EXOME1SampleHeadToHead/BenchmarkComparison/1269d993-e13f-4635-a12a-e65fdaa4ed16/call-BenchmarkVCFTestSample/Benchmark/834b6562-65d7-4daf-857a-d9118a6456b7/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""90.94291388888888"",; ""NIST controlHCsystemhours"": ""0.182125"",; ""NIST controlHCwallclockhours"": ""63.56370277777778"",; ""NIST controlHCwallclockmax"": ""3.701625"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/89508d5f-29f1-4534-9fe1-220a80de17c4/call-NISTSampleHeadToHead/BenchmarkComparison/338d644e-3327-471e-9d17-1c103fa5e01e/call-CONTROLRuntimeTask/cacheCopy/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/89508d5f-29f1-4534-9fe1-220a80de17c4/call-NISTSampleHeadToHead/Benc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193038382:18970,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,18970,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193038382,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvQXNzZW1ibHlSZWdpb25XYWxrZXIuamF2YQ==) | `89.063% <71.429%> (+5.239%)` | `16 <1> (+1)` | :arrow_up: |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/2371?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-80.612%)` | `0% <0%> (-19%)` | |; | [...institute/hellbender/utils/gcs/GATKGCSOptions.java](https://codecov.io/gh/broadinstitute/gatk/pull/2371?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvR0FUS0dDU09wdGlvbnMuamF2YQ==) | `0% <0%> (-66.667%)` | `0% <0%> (ø)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/2371?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `22.013% <0%> (-62.264%)` | `8% <0%> (-26%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/2371?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2371?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `41.216% <0%> (-30.405%)` | `26% <0%> (-8%)` | |; | [...llbender/engine/spark/SparkCommandLineProgram.java](https://codecov.io/gh/broadinstitute/gatk/pull/2371?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb21tYW5kTGluZVByb2dyYW0uamF2YQ==) | `68.75% <0%> (-25%)` | `6% <0%> (-1%)` | |; | ... and [11 more](https://codecov.io/gh/broadinstitute/gatk/pull/2371?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2371#issuecomment-281648939:3083,test,test,3083,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2371#issuecomment-281648939,1,['test'],['test']
Testability,21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `22.013% <0%> (-62.264%)` | `8% <0%> (-26%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/3733?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...llbender/engine/spark/SparkCommandLineProgram.java](https://codecov.io/gh/broadinstitute/gatk/pull/3733?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb21tYW5kTGluZVByb2dyYW0uamF2YQ==) | `68.75% <0%> (-25%)` | `6% <0%> (-1%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/3733?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `0% <0%> (-23.729%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3733?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.545% <0%> (-22.078%)` | `30% <0%> (-9%)` | |; | [...ender/engine/datasources/ReferenceMultiSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/3733?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlTXVsdGlTb3VyY2UuamF2YQ==) | `64.286% <0%> (-10.714%)` | `10% <0%> (ø)` | |; | [...titute/hellbender/utils/test/MiniClusterUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3733?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L01pbmlDbHVzdGVyVXRpbHMuamF2YQ==) | `78.947% <0%> (-10.526%)` | `6% <0%> (-1%)` | |; | ... and [10 more](https://codecov.io/gh/broadinstitute/gatk/pull/3733?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3733#issuecomment-338711707:3571,test,test,3571,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3733#issuecomment-338711707,1,['test'],['test']
Testability,24); 	at java.lang.Thread.run(Thread.java:748); Caused by: org.testng.TestNGException:An error occurred while instantiating class org.broadinstitute.hellbender.engine.spark.ReadsPreprocessingPipelineSparkTestData. Check to make sure it can be instantiated; 	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:134); 	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79); 	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:110); 	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:195); 	at org.testng.TestClass.getInstances(TestClass.java:102); 	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82); 	at org.testng.TestClass.init(TestClass.java:74); 	at org.testng.TestClass.<init>(TestClass.java:39); 	at org.testng.TestRunner.initMethods(TestRunner.java:466); 	at org.testng.TestRunner.init(TestRunner.java:345); 	at org.testng.TestRunner.init(TestRunner.java:298); 	at org.testng.TestRunner.<init>(TestRunner.java:183); 	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:603); 	at org.testng.SuiteRunner.init(SuiteRunner.java:196); 	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127); 	at org.testng.TestNG.createSuiteRunner(TestNG.java:1231); 	at org.testng.TestNG.createSuiteRunners(TestNG.java:1210); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1058); 	at org.testng.TestNG.runSuites(TestNG.java:997); 	at org.testng.TestNG.run(TestNG.java:965); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:129); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:88); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	... 22 more; ```; It looks to me that this change is whats failing? https://github.com/cbeust/testng/pull/1848/files. We have test classes that can't be pr,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5787#issuecomment-472107858:3277,Test,TestRunner,3277,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5787#issuecomment-472107858,1,['Test'],['TestRunner']
Testability,24:49.937 INFO Funcotator - Deflater: IntelDeflater; 23:24:49.937 INFO Funcotator - Inflater: IntelInflater; 23:24:49.937 INFO Funcotator - GCS max retries/reopens: 20; 23:24:49.937 INFO Funcotator - Using google-cloud-java patch 6d11bef1c81f885c26b2b56c8616b7a705171e4f from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes; 23:24:49.937 WARN Funcotator - . !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!. Warning: Funcotator is a BETA tool and is not yet ready for use in production. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!. 23:24:49.937 INFO Funcotator - Initializing engine; 23:24:51.025 INFO FeatureManager - Using codec VCFCodec to read file file:///omics/chatchawit/sm/out/test.vcf; 23:24:51.169 INFO Funcotator - Done initializing engine; log4j:WARN No appenders could be found for logger (org.broadinstitute.hellbender.tools.funcotator.dataSources.DataSourceUtils).; log4j:WARN Please initialize the log4j system properly.; log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.; 23:24:51.204 INFO FeatureManager - Using codec VCFCodec to read file file:///omics/chatchawit/bundle/dsrc/dbsnp/hg38/hg38_All_20170710.vcf.gz; 23:24:51.451 INFO FeatureManager - Using codec XsvLocatableTableCodec to read file file:///omics/chatchawit/bundle/dsrc/oreganno/hg38/oreganno.tsv; 23:24:51.535 INFO FeatureManager - Using codec GencodeGtfCodec to read file file:///omics/chatchawit/bundle/dsrc/gencode/hg38/gencode.v27.chr_patch_hapl_scaff.annotation.REORDERED.gtf; WARNING	2018-05-23 23:24:53	AsciiLineReader	Creating an indexable source for an AsciiFeatureCodec using a stream that is neither a PositionalBufferedStream nor a BlockCompressedInputStream; 23:25:09.380 INFO ProgressMeter - Starting traversal; 23:25:09.381 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 23:25:20.674 INFO ProgressMeter - chr1:24929636 0.2 3000 15941.9; 23:25:42.601 INFO ProgressMeter - chr1:6468,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4712#issuecomment-391421032:3038,log,logging,3038,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4712#issuecomment-391421032,1,['log'],['logging']
Testability,"262a9"",; ""VariantCallingCarrotOrchestrated.haplotype_scatter_count"": 50,; ""VariantCallingCarrotOrchestrated.monitoring_script"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/cromwell_monitoring_script.sh"",; ""VariantCallingCarrotOrchestrated.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrotOrchestrated.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrotOrchestrated.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrotOrchestrated.use_gatk3_haplotype_caller"": true; },; ""test_options"": null,; ""eval_input"": {; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalVcf"": ""test_output:VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1143746325:3589,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,3589,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1143746325,2,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"269728/call-BenchmarkVCFTestSample/Benchmark/02bfdee5-dde8-4c1d-b628-b21e4512fd42/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f61c0caa-70a3-4ee5-8542-e78ba8364985/call-EXOME1SampleHeadToHead/BenchmarkComparison/ba4f3a3f-c40c-4037-837a-0bf9a85d0ece/call-BenchmarkVCFControlSample/Benchmark/61548750-761a-42ff-8d40-c80f94866dcd/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f61c0caa-70a3-4ee5-8542-e78ba8364985/call-EXOME1SampleHeadToHead/BenchmarkComparison/ba4f3a3f-c40c-4037-837a-0bf9a85d0ece/call-BenchmarkVCFTestSample/Benchmark/476aa516-7233-4df2-8fc5-83b3f2df9eb6/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""95.8154"",; ""NIST controlHCsystemhours"": ""0.1727638888888889"",; ""NIST controlHCwallclockhours"": ""69.03862222222223"",; ""NIST controlHCwallclockmax"": ""3.457286111111111"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f61c0caa-70a3-4ee5-8542-e78ba8364985/call-NISTSampleHeadToHead/BenchmarkComparison/8286c085-644b-44b0-aebc-84ef994ec99b/call-CONTROLRuntimeTask/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f61c0caa-70a3-4ee5-8542-e78ba8364985/call-NISTSampleHeadToHead/Bench",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535665125:19661,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,19661,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535665125,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,297321); Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | cloud | 8 | [3300297321.10](https://github.com/broadinstitute/gatk/actions/runs/3300297321/jobs/5444638536) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300297321.10/tests/test/index.html) |; | unit | 11 | [3300297321.13](https://github.com/broadinstitute/gatk/actions/runs/3300297321/jobs/5444638791) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300297321.13/tests/test/index.html) |; | cloud | 11 | [3300297321.11](https://github.com/broadinstitute/gatk/actions/runs/3300297321/jobs/5444638641) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300297321.11/tests/test/index.html) |; | conda | 8 | [3300297321.3](https://github.com/broadinstitute/gatk/actions/runs/3300297321/jobs/5444856356) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300297321.3/tests/test/index.html) |; | integration | 11 | [3300297321.12](https://github.com/broadinstitute/gatk/actions/runs/3300297321/jobs/5444638712) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300297321.12/tests/test/index.html) |; | unit | 8 | [3300297321.1](https://github.com/broadinstitute/gatk/actions/runs/3300297321/jobs/5444856205) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300297321.1/tests/test/index.html) |; | variantcalling | 8 | [3300297321.2](https://github.com/broadinstitute/gatk/actions/runs/3300297321/jobs/5444856277) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300297321.2/tests/test/index.html) |; | integration | 8 | [3300297321.0](https://github.com/broadinstitute/gatk/actions/runs/3300297321/jobs/5444856114) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300297321.0/tests/tes,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1287425480:1116,test,test-logs,1116,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1287425480,1,['test'],['test-logs']
Testability,2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9Db3ZlcmFnZS5qYXZh) | `87.5% <0%> (-12.5%)` | `5% <0%> (-1%)` | |; | [.../main/java/org/broadinstitute/hellbender/Main.java](https://codecov.io/gh/broadinstitute/gatk/pull/4282/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9NYWluLmphdmE=) | `60.733% <0%> (-9.733%)` | `35% <0%> (-8%)` | |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/4282/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb250ZXh0RmFjdG9yeS5qYXZh) | `71.233% <0%> (-2.74%)` | `11% <0%> (ø)` | |; | [...er/engine/spark/datasources/VariantsSparkSink.java](https://codecov.io/gh/broadinstitute/gatk/pull/4282/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvVmFyaWFudHNTcGFya1NpbmsuamF2YQ==) | `83.333% <0%> (-2.713%)` | `13% <0%> (-4%)` | |; | [...hellbender/utils/test/VariantContextTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4282/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1ZhcmlhbnRDb250ZXh0VGVzdFV0aWxzLmphdmE=) | `79.73% <0%> (-2.703%)` | `57% <0%> (-3%)` | |; | [...bender/tools/walkers/annotator/StrandBiasTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4282/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9TdHJhbmRCaWFzVGVzdC5qYXZh) | `85% <0%> (-2.5%)` | `32% <0%> (-1%)` | |; | [...e/hellbender/tools/walkers/vqsr/VQSLODTranche.java](https://codecov.io/gh/broadinstitute/gatk/pull/4282/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvVlFTTE9EVHJhbmNoZS5qYXZh) | `82.178% <0%> (-1.98%)` | `17% <0%> (-1%)` | |; | ... and [51 more](https://codecov.io/gh/broadinstitute/gatk/pull/4282/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4282#issuecomment-361140567:3089,test,test,3089,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4282#issuecomment-361140567,1,['test'],['test']
Testability,2aec499d-c11f-4a23-912b-8a61f9982437%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|86.06659722222223|; |CHM evalHCsystemhours|0.19141388888888877|; |CHM evalHCwallclockhours|60.83952500000001|; |CHM evalHCwallclockmax|3.1510444444444445|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff61c0caa-70a3-4ee5-8542-e78ba8364985%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F394f0e4c-4f60-420b-8477-3199ef269728%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; |CHM evalsnpF1Score|0.9784|; |CHM evalsnpPrecision|0.9706|; |CHM evalsnpRecall|0.9863|; |CHM evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff61c0caa-70a3-4ee5-8542-e78ba8364985%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F394f0e4c-4f60-420b-8477-3199ef269728%2Fcall-BenchmarkVCFTestSample%2FBenchmark%2F02bfdee5-dde8-4c1d-b628-b21e4512fd42%2Fcall-CombineSummaries%2Fsummary.csv)|; |EXOME1 controlindelF1Score|0.727|; |EXOME1 controlindelPrecision|0.632|; |EXOME1 controlsnpF1Score|0.9878|; |EXOME1 controlsnpPrecision|0.9815|; |EXOME1 controlsnpRecall|0.9941|; |EXOME1 controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff61c0caa-70a3-4ee5-8542-e78ba8364985%2Fcall-EXOME1SampleHeadToHead%2FBenchmarkComparison%2Fba4f3a3f-c40c-4037-837a-0bf9a85d0ece%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2F61548750-761a-42ff-8d40-c80f94866dcd%2Fcall-CombineSummaries%2Fsummary.csv)|; |EXOME1 evalindelF1Score|0.727|; |EXOME1 evalindelPrecision|0.632|; |EXOME1 evalsnpF1Score|0.9878|; |EXOME1 evalsnpPrecision|0.9815|; |EXOME1 evalsnpRecall|0.9941|; |EXOME1 evalsummary|[View in the GCS Console](,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535665125:2215,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,2215,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535665125,2,['Benchmark'],"['BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"2c-8d1f-5692eee05534/call-CHMSampleHeadToHead/BenchmarkComparison/b7ddd5f2-fded-4076-b163-33ad637fb5bd/call-BenchmarkVCFControlSample/Benchmark/10080eab-b0ad-4752-80cb-fc6d34bd9ad9/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""93.63756388888888"",; ""CHM evalHCsystemhours"": ""0.6379805555555556"",; ""CHM evalHCwallclockhours"": ""70.50882222222222"",; ""CHM evalHCwallclockmax"": ""3.5186027777777777"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-CHMSampleHeadToHead/BenchmarkComparison/b7ddd5f2-fded-4076-b163-33ad637fb5bd/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-CHMSampleHeadToHead/BenchmarkComparison/b7ddd5f2-fded-4076-b163-33ad637fb5bd/call-BenchmarkVCFTestSample/Benchmark/c718736b-bf86-491f-9f9c-56c07cbd0c90/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-EXOME1SampleHeadToHead/BenchmarkComparison/85b07a68-f04f-4396-80b4-f153b2d0020d/call-BenchmarkVCFControlSample/Benchmark/efb3b5ff-3860-46c3-8c6c-9141d1ff0e0a/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441:18564,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,18564,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"2c55d875eab/call-CHMSampleHeadToHead/BenchmarkComparison/1fb97a8b-caee-4184-8e36-be21e6c43549/call-BenchmarkVCFControlSample/Benchmark/3b068fb2-7140-4c1e-8860-df8df21821ec/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""80.5165222222222"",; ""CHM evalHCsystemhours"": ""0.1713305555555555"",; ""CHM evalHCwallclockhours"": ""53.10978888888891"",; ""CHM evalHCwallclockmax"": ""2.7458416666666667"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-CHMSampleHeadToHead/BenchmarkComparison/1fb97a8b-caee-4184-8e36-be21e6c43549/call-EVALRuntimeTask/cacheCopy/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-CHMSampleHeadToHead/BenchmarkComparison/1fb97a8b-caee-4184-8e36-be21e6c43549/call-BenchmarkVCFTestSample/Benchmark/7f7c4522-e293-4a03-ada8-9541a585250b/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-EXOME1SampleHeadToHead/BenchmarkComparison/3ba68beb-5853-4beb-b31c-cbef12825001/call-BenchmarkVCFControlSample/Benchmark/18840f82-6653-4365-8e02-daf8790ea4f0/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069766207:11704,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,11704,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069766207,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,3); at java.lang.reflect.Method.invoke(Method.java:483); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); at org.testng.TestNG.run(TestNG.java:1018); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:136); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:80); at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:59); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); at org.gradle.messaging.dispatch.ContextClassLoader,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174:2919,Test,TestNG,2919,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174,1,['Test'],['TestNG']
Testability,3); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:659); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:771); at org.testng.TestRunner.run(TestRunner.java:621); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199); at org.testng.TestNG.runSuitesLocally(TestNG.java:1124); at org.testng.TestNG.run(TestNG.java:1032); at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111); at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204); at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:125); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140); Caused by: com.google.cloud.dataflow.sdk.coders.CannotProvideCoderException: Cannot provide a Coder for type variable B because the actual type is unknown due to erasure.; at com.google.cloud.dataflow.sdk.coders.CoderRegistry.get,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/658#issuecomment-122314248:4814,Test,TestNG,4814,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/658#issuecomment-122314248,1,['Test'],['TestNG']
Testability,"3.8113680Z src/main/java/org/broadinstitute/hellbender/utils/variant/GATKVariantContextUtils.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.8117654Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:3: error: package com.google.common.collect does not exist; 2022-08-16T22:45:53.8118430Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:4: error: package com.google.common.collect does not exist; 2022-08-16T22:45:53.8124030Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:32: error: cannot find symbol; 2022-08-16T22:45:53.8124383Z private static BiMap<Log.LogLevel, Level> loggingLevelNamespaceMap;; 2022-08-16T22:45:53.8124657Z symbol: class BiMap; 2022-08-16T22:45:53.8124810Z location: class LoggingUtils; 2022-08-16T22:45:53.8125227Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:41: error: cannot find symbol; 2022-08-16T22:45:53.8125528Z private static BiMap<Log.LogLevel, java.util.logging.Level> javaUtilLevelNamespaceMap;; 2022-08-16T22:45:53.8125793Z symbol: class BiMap; 2022-08-16T22:45:53.8126059Z location: class LoggingUtils; 2022-08-16T22:45:53.8134767Z src/main/java/org/broadinstitute/hellbender/utils/gcs/BucketUtils.java:13: error: package com.google.common.base does not exist; 2022-08-16T22:45:53.8135486Z src/main/java/org/broadinstitute/hellbender/utils/gcs/BucketUtils.java:14: error: package com.google.common.io does not exist; 2022-08-16T22:45:53.8163449Z src/main/java/org/broadinstitute/hellbender/tools/walkers/ReferenceConfidenceVariantContextMerger.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.8167163Z src/main/java/org/broadinstitute/hellbender/tools/walkers/ReferenceConfidenceVariantContextMerger.java:245: error: cannot find symbol; 2022-08-16T22:45:53.8167305Z @VisibleForTesting; 2022-08-16T22:45:53.8167581Z symbol: class VisibleForTesting; 2022-08-16T22:45:53.8167809Z location: class Refere",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217253370:15512,Log,LogLevel,15512,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217253370,1,['Log'],['LogLevel']
Testability,"317b4"",; ""VariantCallingCarrotOrchestrated.haplotype_scatter_count"": 50,; ""VariantCallingCarrotOrchestrated.monitoring_script"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/cromwell_monitoring_script.sh"",; ""VariantCallingCarrotOrchestrated.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrotOrchestrated.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrotOrchestrated.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrotOrchestrated.use_gatk3_haplotype_caller"": true; },; ""test_options"": null,; ""eval_input"": {; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalVcf"": ""test_output:VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1068293845:3589,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,3589,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1068293845,6,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"32	LN:40652; @SQ	SN:chrUn_gl000233	LN:45941; @SQ	SN:chrUn_gl000234	LN:40531; @SQ	SN:chrUn_gl000235	LN:34474; @SQ	SN:chrUn_gl000236	LN:41934; @SQ	SN:chrUn_gl000237	LN:45867; @SQ	SN:chrUn_gl000238	LN:39939; @SQ	SN:chrUn_gl000239	LN:33824; @SQ	SN:chrUn_gl000240	LN:41933; @SQ	SN:chrUn_gl000241	LN:42152; @SQ	SN:chrUn_gl000242	LN:43523; @SQ	SN:chrUn_gl000243	LN:43341; @SQ	SN:chrUn_gl000244	LN:39929; @SQ	SN:chrUn_gl000245	LN:36651; @SQ	SN:chrUn_gl000246	LN:38154; @SQ	SN:chrUn_gl000247	LN:36422; @SQ	SN:chrUn_gl000248	LN:39786; @SQ	SN:chrUn_gl000249	LN:38502; @RG	ID:test-sample	SM:test-sample	PL:ILLUMINA; A00226:391:HKFF3DRXX:1:2218:20229:31485	16	chr1	26644464	60	70M18D65M16S	*	0	0	CACCTAAAAAGCTGCTACCAAGACAGCCACGAAGATCCTACCAAAATGAAGCGCTTCCTCTTCCTCCTACCTATGGTACAGGTAAGAGTAACGCCTGGCACCACTGCCAGGACTCCCCAAGGTTGCTTGGCATGGGAAGGGACTACTTCAA	FFF:FFFF,FFF,FFFFFFF,:F::FFFFFFFFFFFFF,FFFF:::FFFFFFFF,FFFFF,FFFFFF,,FFFFFF::FFFFFFFFFFFFFFFFFF:FFFFF:FF,FFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF	MD:Z:70^TCACCATCAGCCTCCTGG0T17C31A14	RG:Z:test-sample	NM:i:21	AS:i:96	XS:i:20; A00226:391:HKFF3DRXX:1:2218:20419:31532	16	chr1	26644464	60	70M18D65M16S	*	0	0	CACCTAAAAAGCTGCTACCAAGACAGCCACGAAGATCCTACCAAAATGAAGCGCTTCCTCTTCCTCCGACCTATGGTACAGGTAAGAGTAACGCCTGGCACCACTGCCAGGACTCCCCAAGGTTGCTTGGCATGGGAAGGGACTACTTCAA	FFFFFFFFFFFFFFFFFFFFFFFFFF:FFFF:FFFFFFFFFFFFFFFFFFFFFF,FFFFF:FFFFFF,:FFF,FFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF	MD:Z:67T2^TCACCATCAGCCTCCTGG0T17C31A14	RG:Z:test-sample	NM:i:22	AS:i:91	XS:i:0; A00226:391:HKFF3DRXX:1:2246:13404:22294	16	chr1	26644472	60	62M18D87M2S	*	0	0	AAGCTGCTACCAAGACAGCCACGAAGATCCTACCAAAATGAAGCGCTTCCTCTTCCTCCTACCTATGGTACAGGTAAGAGCAACGCCTGGCACCACTGCCAGGACTCCCCAAAGTTGCTTGGCATGGAGGGAGGGCATACAGGATGTGACT	FFFFFFFFFFFFFFFFFFFFFFFFFFFFF:F,FFFFFFFFFFFFFFF:FFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF	MD:Z:62^TCACCATCAGCCTCCTGG0T86	RG:Z:test-sample	NM:i:19	AS:i:120	XS:i:20; ```; </details>",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6733#issuecomment-667631472:3945,test,test-sample,3945,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6733#issuecomment-667631472,3,['test'],['test-sample']
Testability,3251324) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_38100.12/tests/test/index.html) |; | integration | openjdk8 | [38100.2](https://app.travis-ci.com/broadinstitute/gatk/jobs/563251314) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_38100.2/tests/test/index.html) |; | integration | openjdk8 | [38100.2](https://app.travis-ci.com/broadinstitute/gatk/jobs/563251314) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_38100.2/tests/test/index.html) |; | integration | openjdk11 | [38100.12](https://app.travis-ci.com/broadinstitute/gatk/jobs/563251324) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_38100.12/tests/test/index.html) |; | integration | openjdk8 | [38100.2](https://app.travis-ci.com/broadinstitute/gatk/jobs/563251314) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_38100.2/tests/test/index.html) |; | integration | openjdk11 | [38100.12](https://app.travis-ci.com/broadinstitute/gatk/jobs/563251324) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_38100.12/tests/test/index.html) |; | integration | openjdk11 | [38100.12](https://app.travis-ci.com/broadinstitute/gatk/jobs/563251324) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_38100.12/tests/test/index.html) |; | integration | openjdk11 | [38100.12](https://app.travis-ci.com/broadinstitute/gatk/jobs/563251324) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_38100.12/tests/test/index.html) |; | integration | openjdk8 | [38100.2](https://app.travis-ci.com/broadinstitute/gatk/jobs/563251314) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_38100.2/tests/test/index.html) |; | integration | openjdk11 | [38100.12](https://app.travis-ci.com/broadinstitute/gatk/jobs,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7715#issuecomment-1067136084:1305,test,tests,1305,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7715#issuecomment-1067136084,2,['test'],"['test', 'tests']"
Testability,"3317. Error is:. ```; testMDOrder[1](src/test/resources/org/broadinstitute/hellbender/tools/picard/sam/MarkDuplicates/mdOrderBug2.bam, src/test/resources/org/broadinstitute/hellbender/tools/picard/sam/MarkDuplicates/expected.mdOrderBug2.bam). java.lang.AssertionError: SAM file /tmp/markdups5286910037691954939.bam differs from expected output:src/test/resources/org/broadinstitute/hellbender/tools/picard/sam/MarkDuplicates/expected.mdOrderBug2.bam name differs. File 1: 20GAVAAXX100126:4:24:10635:52735 File 2: 20FUKAAXX100202:1:22:1193:123181 expected [null] but found [name differs. File 1: 20GAVAAXX100126:4:24:10635:52735 File 2: 20FUKAAXX100202:1:22:1193:123181]; at org.testng.Assert.fail(Assert.java:94); at org.testng.Assert.failNotSame(Assert.java:492); at org.testng.Assert.assertNull(Assert.java:428); at org.broadinstitute.hellbender.utils.test.SamAssertionUtils.assertSamsEqual(SamAssertionUtils.java:33); at org.broadinstitute.hellbender.utils.test.SamAssertionUtils.assertSamsEqual(SamAssertionUtils.java:59); at org.broadinstitute.hellbender.utils.test.SamAssertionUtils.assertEqualBamFiles(SamAssertionUtils.java:362); at org.broadinstitute.hellbender.utils.test.testers.AbstractMarkDuplicatesCommandLineProgramTest.testMDOrderImpl(AbstractMarkDuplicatesCommandLineProgramTest.java:604); at org.broadinstitute.hellbender.tools.spark.pipelines.MarkDuplicatesSparkIntegrationTest.testMDOrder(MarkDuplicatesSparkIntegrationTest.java:49); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); at org.testng.internal.Invoker.invo",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174:1219,assert,assertSamsEqual,1219,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174,1,['assert'],['assertSamsEqual']
Testability,33752.12](https://travis-ci.com/broadinstitute/gatk/jobs/498538898) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.12/tests/test/index.html) |; | variantcalling | openjdk8 | [33752.4](https://travis-ci.com/broadinstitute/gatk/jobs/498538890) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.4/tests/test/index.html) |; | unit | openjdk8 | [33752.3](https://travis-ci.com/broadinstitute/gatk/jobs/498538889) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.3/tests/test/index.html) |; | conda | openjdk8 | [33752.5](https://travis-ci.com/broadinstitute/gatk/jobs/498538891) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.5/tests/test/index.html) |; | integration | openjdk8 | [33752.2](https://travis-ci.com/broadinstitute/gatk/jobs/498538888) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.2/tests/test/index.html) |; | cloud | openjdk11 | [33752.14](https://travis-ci.com/broadinstitute/gatk/jobs/498538900) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.14/tests/test/index.html) |; | cloud | openjdk8 | [33752.1](https://travis-ci.com/broadinstitute/gatk/jobs/498538887) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.1/tests/test/index.html) |; | unit | openjdk11 | [33752.13](https://travis-ci.com/broadinstitute/gatk/jobs/498538899) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.13/tests/test/index.html) |; | integration | openjdk11 | [33752.12](https://travis-ci.com/broadinstitute/gatk/jobs/498538898) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.12/tests/test/index.html) |; | variantcalling | openjdk8 | [33752.4](https://travis-ci.com/broadinstitute/gatk/jobs/498538890) | [logs](https://storage.googleapis.com/hellbender,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234:1858,test,tests,1858,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234,2,['test'],"['test', 'tests']"
Testability,"34-9fe1-220a80de17c4/call-CHMSampleHeadToHead/BenchmarkComparison/a2a2515a-b32a-44a6-a6d1-9a6d0d2199bb/call-BenchmarkVCFControlSample/Benchmark/2c4ad666-e885-4e23-bd5c-d54ca521ffbf/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""78.99195555555558"",; ""CHM evalHCsystemhours"": ""0.16168333333333337"",; ""CHM evalHCwallclockhours"": ""55.43875833333334"",; ""CHM evalHCwallclockmax"": ""2.913311111111111"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/89508d5f-29f1-4534-9fe1-220a80de17c4/call-CHMSampleHeadToHead/BenchmarkComparison/a2a2515a-b32a-44a6-a6d1-9a6d0d2199bb/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/89508d5f-29f1-4534-9fe1-220a80de17c4/call-CHMSampleHeadToHead/BenchmarkComparison/a2a2515a-b32a-44a6-a6d1-9a6d0d2199bb/call-BenchmarkVCFTestSample/Benchmark/76484c8b-d024-45b4-b1e0-2ff2b9adf2c0/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/89508d5f-29f1-4534-9fe1-220a80de17c4/call-EXOME1SampleHeadToHead/BenchmarkComparison/1269d993-e13f-4635-a12a-e65fdaa4ed16/call-BenchmarkVCFControlSample/Benchmark/492b823a-1e34-46cd-b842-5f042bb31ee8/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/89508d5f-",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193038382:17918,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,17918,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193038382,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"35:58 ERROR SparkUncaughtExceptionHandler: Uncaught exception in thread Thread[Executor task launch worker-0,5,main]; java.lang.OutOfMemoryError: Java heap space; 	at htsjdk.samtools.SAMUtils.compressedBasesToBytes(SAMUtils.java:146); 	at htsjdk.samtools.BAMRecord.decodeReadBases(BAMRecord.java:346); 	at htsjdk.samtools.BAMRecord.getReadBases(BAMRecord.java:275); 	at org.broadinstitute.hellbender.utils.read.SAMRecordToGATKReadAdapter.getLength(SAMRecordToGATKReadAdapter.java:222); 	at org.broadinstitute.hellbender.engine.filters.ReadFilterLibrary$MatchingBasesAndQualsReadFilter.test(ReadFilterLibrary.java:64); 	at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70); 	at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70); 	at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70); 	at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70); 	at org.broadinstitute.hellbender.engine.filters.WellformedReadFilter.test(WellformedReadFilter.java:77); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.lambda$getReads$e4b35a40$1(GATKSparkTool.java:213); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool$$Lambda$93/2063469002.call(Unknown Source); 	at org.apache.spark.api.java.JavaRDD$$anonfun$filter$1.apply(JavaRDD.scala:76); 	at org.apache.spark.api.java.JavaRDD$$anonfun$filter$1.apply(JavaRDD.scala:76); 	at scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:463); 	at scala.collection.convert.Wrappers$IteratorWrapper.hasNext(Wrappers.scala:30); 	at java.util.Iterator.forEachRemaining(Iterator.java:115); 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801); 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); 	at java.util.stream.ReduceOps$ReduceOp.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-337554749:1458,test,test,1458,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-337554749,1,['test'],['test']
Testability,"362f7c/call-BenchmarkVCFTestSample/Benchmark/e167fc81-8ff7-44bd-b5bd-291161e3967e/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-3c4c-4274-972c-9d1e4be850d5/call-EXOME1SampleHeadToHead/BenchmarkComparison/5bf5f11a-64cb-4b50-8d05-b61b7f4c803c/call-BenchmarkVCFControlSample/Benchmark/c64dbce6-4a90-42c0-a84b-59857afb98a5/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-3c4c-4274-972c-9d1e4be850d5/call-EXOME1SampleHeadToHead/BenchmarkComparison/5bf5f11a-64cb-4b50-8d05-b61b7f4c803c/call-BenchmarkVCFTestSample/Benchmark/d501a36a-a881-4e5c-9499-ef7dea22980f/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""90.94291388888888"",; ""NIST controlHCsystemhours"": ""0.182125"",; ""NIST controlHCwallclockhours"": ""63.56370277777778"",; ""NIST controlHCwallclockmax"": ""3.701625"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-3c4c-4274-972c-9d1e4be850d5/call-NISTSampleHeadToHead/BenchmarkComparison/4ffa2353-b1bc-4960-a5a4-96291208a7eb/call-CONTROLRuntimeTask/cacheCopy/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-3c4c-4274-972c-9d1e4be850d5/call-NISTSampleHeadToHead/Benc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590:19643,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,19643,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallingCarrot.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCallingCarrot.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCallingCarrot.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCallingCarrot.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkComparison.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkComparison.referenceVersion"": ""HG38"",; ""BenchmarkComparison.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/exome_evaluation_regions.v1.interval_list"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCRFromHengHg38.interval_list""; ],; ""BenchmarkComparison.stratLabels"": [; ""exome"",; ""LCR""; ],; ""BenchmarkComparison.truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkComparison.truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkComparison.truthVcfIndex"": ""gs://dsp-methods-c",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1050206972:2475,Benchmark,BenchmarkComparison,2475,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1050206972,2,['Benchmark'],['BenchmarkComparison']
Testability,"38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallingCarrot.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCallingCarrot.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCallingCarrot.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCallingCarrot.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkComparison.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkComparison.referenceVersion"": ""HG38"",; ""BenchmarkComparison.stratIntervals"": [; ""gs://gcp-public-data--broad-references/hg38/v0/exome_evaluation_regions.v1.interval_list"",; ""gs://broad-dsp-spec-ops/scratch/mshand/EvaluationStratIntervalLists/LCRFromHengHg38.interval_list""; ],; ""BenchmarkComparison.stratLabels"": [; ""exome"",; ""LCR""; ],; ""BenchmarkComparison.truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkComparison.truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkComparison.truthVcfIndex"": ""gs://dsp-methods-carrot-d",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049997691:2475,Benchmark,BenchmarkComparison,2475,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049997691,2,['Benchmark'],['BenchmarkComparison']
Testability,"383b-01a9-4bc0-90fa-cde7e1090a47/call-CHMSampleHeadToHead/BenchmarkComparison/deb85607-d693-4232-a4da-0fb88dd29cad/call-BenchmarkVCFControlSample/Benchmark/c0877490-fd2d-4f42-bb92-f06210e94d95/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""84.33091111111112"",; ""CHM evalHCsystemhours"": ""0.18621944444444444"",; ""CHM evalHCwallclockhours"": ""61.43"",; ""CHM evalHCwallclockmax"": ""3.073069444444444"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-CHMSampleHeadToHead/BenchmarkComparison/deb85607-d693-4232-a4da-0fb88dd29cad/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-CHMSampleHeadToHead/BenchmarkComparison/deb85607-d693-4232-a4da-0fb88dd29cad/call-BenchmarkVCFTestSample/Benchmark/a15fdeb6-16e8-48d7-82cb-168726f4dc18/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-EXOME1SampleHeadToHead/BenchmarkComparison/75ea4d64-414f-43aa-a8d6-9c34870b1491/call-BenchmarkVCFControlSample/Benchmark/0f001ca8-d7af-4d01-b9ef-d6ddbe35317d/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169:18594,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,18594,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,39662 | CONTROLSNAPSHOT2018HG002 | CHM_GRCh38_SYNDIPv20180222 | summary | VcfEval; INDEL | 0.8814 | 0.8636 | 0.8724 | 485076 | 465627 | 65264 | 73548 | NA | gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/7012fa81-18fd-4c9c-8722-22c9d7fa642d/call-CHMSampleHeadToHead/BenchmarkComparison/ae3dcac7-7105-4847-ac07-f9f64a43c4c8/call-BenchmarkVCFControlSample/Benchmark/67f50e9a-e7a3-4b31-9d14-d700b46ddfa5/call-VcfEvalWriteXMLfile/shard-0/CONTROLSNAPSHOT2018HG002_CHM_GRCh38_SYNDIPv20180222_vcfeval.xml | 429205 | CONTROLSNAPSHOT2018HG002 | CHM_GRCh38_SYNDIPv20180222 | summary | VcfEval; Type | Precision | Recall | F1_Score | TP_Eval | TP_Base | FP | FN | Stratifier | IGV_Session | UNK | Name | Truth_Set | Summary_Type | Comparison_Engine; SNP | 0.9743 | 0.99 | 0.9821 | 3384890 | 3391796 | 89358 | 34303 | HCR | gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/7012fa81-18fd-4c9c-8722-22c9d7fa642d/call-CHMSampleHeadToHead/BenchmarkComparison/ae3dcac7-7105-4847-ac07-f9f64a43c4c8/call-BenchmarkVCFControlSample/Benchmark/67f50e9a-e7a3-4b31-9d14-d700b46ddfa5/call-VcfEvalWriteXMLfile/shard-1/CONTROLSNAPSHOT2018HG002_CHM_GRCh38_SYNDIPv20180222_HCR_vcfeval.xml | 474825 | CONTROLSNAPSHOT2018HG002 | CHM_GRCh38_SYNDIPv20180222 | summary | VcfEval; INDEL | 0.9117 | 0.9113 | 0.9115 | 276082 | 269292 | 26752 | 26209 | HCR | gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/7012fa81-18fd-4c9c-8722-22c9d7fa642d/call-CHMSampleHeadToHead/BenchmarkComparison/ae3dcac7-7105-4847-ac07-f9f64a43c4c8/call-BenchmarkVCFControlSample/Benchmark/67f50e9a-e7a3-4b31-9d14-d700b46ddfa5/call-VcfEvalWriteXMLfile/shard-1/CONTROLSNAPSHOT2018HG002_CHM_GRCh38_SYNDIPv20180222_HCR_vcfeval.xml | 36612 | CONTROLSNAPSHOT2018HG002 | CHM_GRCh38_SYNDIPv20180222 | summary | VcfEval; Type | Precision | Recall | F1_Score | TP_Eval | TP_Base | FP | FN | Stratifier | IGV_Session | UNK | Name | Truth_Set | Summary_Type | Comparison_Engine; SNP | 0.8454 ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1850884297:1951,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,1951,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1850884297,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"39:43 PM UTC] Executing as root@droazen-test-cluster-m on Linux 3.16.0-4-amd64 amd64; OpenJDK 64-Bit Server VM 1.8.0_131-8u131-b11-1~bpo8+1-b11; Version: 4.beta.6-54-g0ee99da-SNAPSHOT; 20:39:43.245 INFO CountReadsSpark - HTSJDK Defaults.COMPRESSION_LEVEL : 1; 20:39:43.245 INFO CountReadsSpark - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 20:39:43.245 INFO CountReadsSpark - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : false; 20:39:43.245 INFO CountReadsSpark - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 20:39:43.245 INFO CountReadsSpark - Deflater: IntelDeflater; 20:39:43.245 INFO CountReadsSpark - Inflater: IntelInflater; 20:39:43.245 INFO CountReadsSpark - GCS max retries/reopens: 20; 20:39:43.245 INFO CountReadsSpark - Using google-cloud-java: 0.30.0-alpha; 20:39:43.245 INFO CountReadsSpark - Initializing engine; 20:39:43.245 INFO CountReadsSpark - Done initializing engine; 17/11/27 20:39:44 INFO org.spark_project.jetty.util.log: Logging initialized @3893ms; 17/11/27 20:39:44 INFO org.spark_project.jetty.server.Server: jetty-9.3.z-SNAPSHOT; 17/11/27 20:39:44 INFO org.spark_project.jetty.server.Server: Started @3988ms; 17/11/27 20:39:44 INFO org.spark_project.jetty.server.AbstractConnector: Started ServerConnector@7fbe38a{HTTP/1.1,[http/1.1]}{0.0.0.0:4040}; 17/11/27 20:39:44 INFO com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase: GHFS version: 1.6.1-hadoop2; 17/11/27 20:39:45 INFO org.apache.hadoop.yarn.client.RMProxy: Connecting to ResourceManager at droazen-test-cluster-m/10.240.0.10:8032; 17/11/27 20:39:47 INFO org.apache.hadoop.yarn.client.api.impl.YarnClientImpl: Submitted application application_1511814592376_0002; 17/11/27 20:39:52 INFO org.spark_project.jetty.server.AbstractConnector: Stopped Spark@7fbe38a{HTTP/1.1,[http/1.1]}{0.0.0.0:4040}; 20:39:52.363 INFO CountReadsSpark - Shutting down engine; [November 27, 2017 8:39:52 PM UTC] org.broadinstitute.hellbender.tools.spark.pipelines.CountReadsSpark done. Elapsed time: 0.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3855#issuecomment-347320994:4586,log,log,4586,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3855#issuecomment-347320994,2,"['Log', 'log']","['Logging', 'log']"
Testability,3RvckxvZ2xlc3NQYWlySE1NLmphdmE=) | `83.562% <62.5%> (-3.535%)` | `10 <0> (+1)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/2574?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-80.612%)` | `0% <0%> (-19%)` | |; | [...institute/hellbender/utils/gcs/GATKGCSOptions.java](https://codecov.io/gh/broadinstitute/gatk/pull/2574?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvR0FUS0dDU09wdGlvbnMuamF2YQ==) | `0% <0%> (-66.667%)` | `0% <0%> (ø)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/2574?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `22.013% <0%> (-62.264%)` | `8% <0%> (-26%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/2574?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...llbender/engine/spark/SparkCommandLineProgram.java](https://codecov.io/gh/broadinstitute/gatk/pull/2574?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb21tYW5kTGluZVByb2dyYW0uamF2YQ==) | `68.75% <0%> (-25%)` | `6% <0%> (-1%)` | |; | [...ender/engine/datasources/ReferenceMultiSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/2574?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlTXVsdGlTb3VyY2UuamF2YQ==) | `55.556% <0%> (-18.519%)` | `8% <0%> (-1%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2574?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcv,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2574#issuecomment-292193941:2421,test,test,2421,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2574#issuecomment-292193941,1,['test'],['test']
Testability,"3d-9b65-06b489e64af1/call-CHMSampleHeadToHead/BenchmarkComparison/258eacc8-3768-44a8-86dc-1b2b0516a553/call-BenchmarkVCFControlSample/Benchmark/b89e3e0d-4f93-4b2d-9008-041545f2764c/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""87.0306027777778"",; ""CHM evalHCsystemhours"": ""0.19828888888888896"",; ""CHM evalHCwallclockhours"": ""62.522422222222225"",; ""CHM evalHCwallclockmax"": ""3.293238888888889"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/43bcefb2-f38b-413d-9b65-06b489e64af1/call-CHMSampleHeadToHead/BenchmarkComparison/258eacc8-3768-44a8-86dc-1b2b0516a553/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/43bcefb2-f38b-413d-9b65-06b489e64af1/call-CHMSampleHeadToHead/BenchmarkComparison/258eacc8-3768-44a8-86dc-1b2b0516a553/call-BenchmarkVCFTestSample/Benchmark/6b8eb5cf-ee16-48e8-a24f-de149e2eded2/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/43bcefb2-f38b-413d-9b65-06b489e64af1/call-EXOME1SampleHeadToHead/BenchmarkComparison/fa676046-ddfe-4ce8-9193-87025fd9a49b/call-BenchmarkVCFControlSample/Benchmark/8c5c120e-b932-47b0-a592-a719021e6bf9/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/43bcefb2-",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574622123:18566,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,18566,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574622123,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"4 [addAssemblyQNames -> getKmerIntervals] mapPartitionsToPair, then reduceByKey, then mapPartitions; * Job 5 [getAssemblyQNames] mapPartitions twice and a collect; * Job 6 [generateFastqs] mapPartitions and combineByKey, then write FASTQ to files. A few observations:; * Jobs 0,1,3 are simple map jobs - very quick 1-2 mins each.; * Job 2 is a simple MR, with a tiny shuffle to sum by key (<1MB of shuffle data); * Job 4 takes a bit longer longer (3min), and shuffles ~3GB. This is a lot faster than when I ran it before with less memory, when it took 9 min. Is it creating a lot of garbage? If you wanted to speed things up you might look at what this is doing on a local machine and see if there are any opportunities to improve CPU efficiency.; * Job 5 takes ~8 mins, and has no shuffle. CPU intensive processing again?; * Job 6 take a little over 3 mins, shuffling ~3GB. Overall, it looks like it’s performing pretty well. There is very little data being shuffled relative to the size of the input (~6GB to 133GB input), so it’s not worth looking into optimizing the data structures there. The input data is being read multiple times, so it _might_ be worth seeing if it can be cached by Spark to avoid reading from disk over and over again. This is only worth it if you have sufficient memory available across the cluster to hold the input (which will be bigger than the on-disk size) _plus_ enough memory for the processing, which as we saw is quite memory hungry anyway. There might be some CPU efficiencies to pursue, especially if some code paths are creating a lot of objects that need garbage collecting (as Jobs 4 and 5 seem to be). Jobs 4 and 5 seem to have some skew (judging from the task time distribution in the UI). You might investigate this by logging the amount of data that each task processes (or rather than logging, generating another output that is some description of the task data - or use a Spark accumulator), and then seeing if there's some way to make it more uniform.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2458#issuecomment-292171884:3162,log,logging,3162,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2458#issuecomment-292171884,2,['log'],['logging']
Testability,"4-972c-9d1e4be850d5/call-CHMSampleHeadToHead/BenchmarkComparison/092bfb4f-d978-4964-a8ae-e5a7f7362f7c/call-BenchmarkVCFControlSample/Benchmark/6ab078fb-b668-452c-bbaa-8fb1fd8e25ba/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""84.26158888888888"",; ""CHM evalHCsystemhours"": ""0.19243055555555555"",; ""CHM evalHCwallclockhours"": ""60.242008333333345"",; ""CHM evalHCwallclockmax"": ""3.176513888888889"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-3c4c-4274-972c-9d1e4be850d5/call-CHMSampleHeadToHead/BenchmarkComparison/092bfb4f-d978-4964-a8ae-e5a7f7362f7c/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-3c4c-4274-972c-9d1e4be850d5/call-CHMSampleHeadToHead/BenchmarkComparison/092bfb4f-d978-4964-a8ae-e5a7f7362f7c/call-BenchmarkVCFTestSample/Benchmark/e167fc81-8ff7-44bd-b5bd-291161e3967e/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-3c4c-4274-972c-9d1e4be850d5/call-EXOME1SampleHeadToHead/BenchmarkComparison/5bf5f11a-64cb-4b50-8d05-b61b7f4c803c/call-BenchmarkVCFControlSample/Benchmark/c64dbce6-4a90-42c0-a84b-59857afb98a5/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590:18591,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,18591,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"4-972c-9d1e4be850d5/call-CHMSampleHeadToHead/BenchmarkComparison/092bfb4f-d978-4964-a8ae-e5a7f7362f7c/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-3c4c-4274-972c-9d1e4be850d5/call-CHMSampleHeadToHead/BenchmarkComparison/092bfb4f-d978-4964-a8ae-e5a7f7362f7c/call-BenchmarkVCFTestSample/Benchmark/e167fc81-8ff7-44bd-b5bd-291161e3967e/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-3c4c-4274-972c-9d1e4be850d5/call-EXOME1SampleHeadToHead/BenchmarkComparison/5bf5f11a-64cb-4b50-8d05-b61b7f4c803c/call-BenchmarkVCFControlSample/Benchmark/c64dbce6-4a90-42c0-a84b-59857afb98a5/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-3c4c-4274-972c-9d1e4be850d5/call-EXOME1SampleHeadToHead/BenchmarkComparison/5bf5f11a-64cb-4b50-8d05-b61b7f4c803c/call-BenchmarkVCFTestSample/Benchmark/d501a36a-a881-4e5c-9499-ef7dea22980f/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""90.94291388888888"",; ""NIST controlHCsystemhours"": ""0.182125"",; ""NIST controlHCwallclockhours"": ""63.56370277777778"",; ""NIST controlHCwallclockmax"": ""3.701625"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-3",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590:19123,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,19123,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"4-9fe1-220a80de17c4/call-CHMSampleHeadToHead/BenchmarkComparison/a2a2515a-b32a-44a6-a6d1-9a6d0d2199bb/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/89508d5f-29f1-4534-9fe1-220a80de17c4/call-CHMSampleHeadToHead/BenchmarkComparison/a2a2515a-b32a-44a6-a6d1-9a6d0d2199bb/call-BenchmarkVCFTestSample/Benchmark/76484c8b-d024-45b4-b1e0-2ff2b9adf2c0/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/89508d5f-29f1-4534-9fe1-220a80de17c4/call-EXOME1SampleHeadToHead/BenchmarkComparison/1269d993-e13f-4635-a12a-e65fdaa4ed16/call-BenchmarkVCFControlSample/Benchmark/492b823a-1e34-46cd-b842-5f042bb31ee8/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/89508d5f-29f1-4534-9fe1-220a80de17c4/call-EXOME1SampleHeadToHead/BenchmarkComparison/1269d993-e13f-4635-a12a-e65fdaa4ed16/call-BenchmarkVCFTestSample/Benchmark/834b6562-65d7-4daf-857a-d9118a6456b7/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""90.94291388888888"",; ""NIST controlHCsystemhours"": ""0.182125"",; ""NIST controlHCwallclockhours"": ""63.56370277777778"",; ""NIST controlHCwallclockmax"": ""3.701625"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/89508d5f-2",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193038382:18450,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,18450,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193038382,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,4.1 has the improved reporting on system errors. Not sure if it fixes this issue. Would it be possible to include new logs by running 4.1 if you encounter the issue again?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4518#issuecomment-460418712:118,log,logs,118,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4518#issuecomment-460418712,1,['log'],['logs']
Testability,"4.285 INFO BaseRecalibrationEngine - 	ContextCovariate; 13:35:34.285 INFO BaseRecalibrationEngine - 	CycleCovariate; 13:35:34.344 INFO ProgressMeter - Starting traversal; 13:35:34.344 INFO ProgressMeter - Current Locus Elapsed Minutes Reads Processed Reads/Minute; 13:35:44.363 INFO ProgressMeter - chr1:5384544 0.2 214000 1281820.9; ```. 2. Using full path with non-ascii characters in base directory as tmp path and it failed:; ```; /data/xieduo/WES_pipe/pipeline/bin/gatk-4.2.6.1/gatk --java-options ""-Xmx8G -Djava.io.tmpdir=/data/xieduo/Łuksza_2022_Nature"" BaseRecalibrator -R /data/reference/gatk_resource/Homo_sapiens_assembly38.fasta -I /data/xieduo/Immun_genomics/data/Łuksza_2022_Nature/bam/PAAD11N.bam --known-sites /data/xieduo/WES_pipe/pipeline/gatk_resource/dbsnp_146.hg38.vcf.gz --known-sites /data/reference/gatk_resource/1000G_phase1.snps.high_confidence.hg38.vcf.gz --known-sites /data/reference/gatk_resource/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz -O PAAD11N.recal_data.test.table; Using GATK jar /data/xieduo/WES_pipe/pipeline/bin/gatk-4.2.6.1/gatk-package-4.2.6.1-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx8G -Djava.io.tmpdir=/data/xieduo/Łuksza_2022_Nature -jar /data/xieduo/WES_pipe/pipeline/bin/gatk-4.2.6.1/gatk-package-4.2.6.1-local.jar BaseRecalibrator -R /data/reference/gatk_resource/Homo_sapiens_assembly38.fasta -I /data/xieduo/Immun_genomics/data/Łuksza_2022_Nature/bam/PAAD11N.bam --known-sites /data/xieduo/WES_pipe/pipeline/gatk_resource/dbsnp_146.hg38.vcf.gz --known-sites /data/reference/gatk_resource/1000G_phase1.snps.high_confidence.hg38.vcf.gz --known-sites /data/reference/gatk_resource/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz -O PAAD11N.recal_data.test.table; 13:36:33.528 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/data/xieduo/WES_pipe/pipeline/bin/gatk-4.2.6.1/gatk-",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8005#issuecomment-1254561081:5584,test,test,5584,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8005#issuecomment-1254561081,1,['test'],['test']
Testability,4.6](https://travis-ci.com/broadinstitute/gatk/jobs/317851324) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.6/tests/test/index.html) |; | python | openjdk8 | [29984.5](https://travis-ci.com/broadinstitute/gatk/jobs/317851323) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.5/tests/test/index.html) |; | integration | oraclejdk8 | [29984.12](https://travis-ci.com/broadinstitute/gatk/jobs/317851330) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.12/tests/test/index.html) |; | integration | openjdk11 | [29984.13](https://travis-ci.com/broadinstitute/gatk/jobs/317851331) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.13/tests/test/index.html) |; | cloud | openjdk8 | [29984.1](https://travis-ci.com/broadinstitute/gatk/jobs/317851319) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.1/tests/test/index.html) |; | cloud | openjdk11 | [29984.15](https://travis-ci.com/broadinstitute/gatk/jobs/317851333) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.15/tests/test/index.html) |; | unit | openjdk11 | [29984.14](https://travis-ci.com/broadinstitute/gatk/jobs/317851332) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.14/tests/test/index.html) |; | integration | openjdk8 | [29984.2](https://travis-ci.com/broadinstitute/gatk/jobs/317851320) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.2/tests/test/index.html) |; | variantcalling | openjdk8 | [29984.4](https://travis-ci.com/broadinstitute/gatk/jobs/317851322) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.4/tests/test/index.html) |; | unit | openjdk8 | [29984.3](https://travis-ci.com/broadinstitute/gatk/jobs/317851321) | [logs](https://storage.googleapis.com/hellbender-tes,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611695380:1231,test,tests,1231,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611695380,2,['test'],"['test', 'tests']"
Testability,40cb2f902d15b01d84f20b36ae9e8a?src=pr&el=desc) will **increase** coverage by `0.01%`.; > The diff coverage is `88.889%`. ```diff; @@ Coverage Diff @@; ## master #4764 +/- ##; ============================================; + Coverage 80.07% 80.08% +0.01% ; - Complexity 17420 17571 +151 ; ============================================; Files 1080 1081 +1 ; Lines 63131 63815 +684 ; Branches 10200 10400 +200 ; ============================================; + Hits 50549 51103 +554 ; - Misses 8590 8702 +112 ; - Partials 3992 4010 +18; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4764?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ellbender/cmdline/StandardArgumentDefinitions.java](https://codecov.io/gh/broadinstitute/gatk/pull/4764/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL1N0YW5kYXJkQXJndW1lbnREZWZpbml0aW9ucy5qYXZh) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...ellbender/utils/test/CommandLineProgramTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/4764/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0NvbW1hbmRMaW5lUHJvZ3JhbVRlc3Rlci5qYXZh) | `90.909% <0%> (-4.329%)` | `9 <0> (ø)` | |; | [...walkers/haplotypecaller/HaplotypeCallerEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/4764/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9IYXBsb3R5cGVDYWxsZXJFbmdpbmUuamF2YQ==) | `78.967% <100%> (+0.315%)` | `67 <0> (+1)` | :arrow_up: |; | [...org/broadinstitute/hellbender/engine/GATKTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/4764/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvR0FUS1Rvb2wuamF2YQ==) | `91.429% <100%> (+0.124%)` | `93 <0> (ø)` | :arrow_down: |; | [...tools/walkers/haplotypecaller/HaplotypeCaller.java](https://codecov.io/gh/broadinstitute/gatk/pull/4764/dif,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4764#issuecomment-388488961:1238,test,test,1238,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4764#issuecomment-388488961,1,['test'],['test']
Testability,41); Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | cloud | 11 | [3002176541.11](https://github.com/broadinstitute/gatk/runs/8212856906?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.11/tests/test/index.html) |; | cloud | 8 | [3002176541.10](https://github.com/broadinstitute/gatk/runs/8212856796?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.10/tests/test/index.html) |; | unit | 11 | [3002176541.13](https://github.com/broadinstitute/gatk/runs/8212857102?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.13/tests/test/index.html) |; | integration | 11 | [3002176541.12](https://github.com/broadinstitute/gatk/runs/8212857016?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.12/tests/test/index.html) |; | unit | 8 | [3002176541.1](https://github.com/broadinstitute/gatk/runs/8213287905?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.1/tests/test/index.html) |; | integration | 8 | [3002176541.0](https://github.com/broadinstitute/gatk/runs/8213287794?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.0/tests/test/index.html) |; | variantcalling | 8 | [3002176541.2](https://github.com/broadinstitute/gatk/runs/8213288012?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.2/tests/test/index.html) |; | conda | 8 | [3002176541.3](https://github.com/broadinstitute/gatk/runs/8213288138?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.3/tests/test/index.html,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1238473387:1120,test,test-logs,1120,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1238473387,1,['test'],['test-logs']
Testability,4124cd2?src=pr&el=desc) will **decrease** coverage by `0.012%`.; > The diff coverage is `73.656%`. ```diff; @@ Coverage Diff @@; ## master #3690 +/- ##; ===============================================; - Coverage 79.396% 79.383% -0.012% ; - Complexity 17357 17393 +36 ; ===============================================; Files 1138 1142 +4 ; Lines 62637 62823 +186 ; Branches 9521 9548 +27 ; ===============================================; + Hits 49731 49871 +140 ; - Misses 9110 9142 +32 ; - Partials 3796 3810 +14; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3690?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ber/coverage/readcount/ReadCountFileHeaderKey.java](https://codecov.io/gh/broadinstitute/gatk/pull/3690?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2NvdmVyYWdlL3JlYWRjb3VudC9SZWFkQ291bnRGaWxlSGVhZGVyS2V5LmphdmE=) | `0% <0%> (ø)` | `0 <0> (?)` | |; | [...der/utils/test/IntegerReadCountFileComparator.java](https://codecov.io/gh/broadinstitute/gatk/pull/3690?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0ludGVnZXJSZWFkQ291bnRGaWxlQ29tcGFyYXRvci5qYXZh) | `70.732% <70.732%> (ø)` | `6 <6> (?)` | |; | [...pynumber/utils/CachedBinarySearchIntervalList.java](https://codecov.io/gh/broadinstitute/gatk/pull/3690?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL0NhY2hlZEJpbmFyeVNlYXJjaEludGVydmFsTGlzdC5qYXZh) | `74.603% <74.603%> (ø)` | `18 <18> (?)` | |; | [...bender/tools/copynumber/CollectFragmentCounts.java](https://codecov.io/gh/broadinstitute/gatk/pull/3690?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL0NvbGxlY3RGcmFnbWVudENvdW50cy5qYXZh) | `88.406% <88.406%> (ø)` | `11 <11> (?)` | |; | [...er/tools/spark/sv/discovery/AlignmentInterval.java](https://codecov.io/gh/broadinstitute/gatk/pull/3690?src=pr&el=tr,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3690#issuecomment-335961649:1255,test,test,1255,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3690#issuecomment-335961649,1,['test'],['test']
Testability,43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Delegat,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:4820,test,testng,4820,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['test'],['testng']
Testability,"44.2. 20:33:29.473 INFO CollectAllelicCounts - Shutting down engine. [October 5, 2019 8:33:29 PM UTC] org.broadinstitute.hellbender.tools.copynumber.CollectAllelicCounts done. Elapsed time: 60.94 minutes. Runtime.totalMemory()=5,285,347,328. . . Exception in thread ""main"" java.lang.OutOfMemoryError: GC overhead limit exceeded. . . at java.util.Collections.unmodifiableList(Collections.java:1287). at htsjdk.samtools.Cigar.getCigarElements(Cigar.java:54). at org.broadinstitute.hellbender.utils.read.SAMRecordToGATKReadAdapter.getCigarElements(SAMRecordToGATKReadAdapter.java:336). at org.broadinstitute.hellbender.engine.filters.ReadFilterLibrary$ReadLengthEqualsCigarLengthReadFilter.test(ReadFilterLibrary.java:217). at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70). at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70). at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70). at org.broadinstitute.hellbender.engine.filters.WellformedReadFilter.test(WellformedReadFilter.java:77). at org.broadinstitute.hellbender.engine.filters.CountingReadFilter.test(CountingReadFilter.java:126) . . . From: Louis Bergelson <notifications@github.com> ; Sent: Thursday, October 31, 2019 12:24 PM; To: broadinstitute/gatk <gatk@noreply.github.com>; Cc: rdbremel <rdbremel017@gmail.com>; Mention <mention@noreply.github.com>; Subject: Re: [broadinstitute/gatk] Funcotator shuts down (#6182). . I thought we'd added that to the retry list. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub <https://github.com/broadinstitute/gatk/issues/6182?email_source=notifications&email_token=ANCR2VDSBPTB7S7VFLE2XWLQRMICTA5CNFSM4I2MRFQKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOECYS3SA#issuecomment-548482504> , or unsubscribe <https://github.com/notifications/unsubscribe-auth/ANCR2VEH2EZJ2ZO3725ROVLQRMICTANCNFSM4I",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6182#issuecomment-548929777:2088,test,test,2088,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6182#issuecomment-548929777,1,['test'],['test']
Testability,"4_gnomAD_only_WGS_FD_tumor-normal_reference_workflow_v04_no_gnomAD_no_PON](https://user-images.githubusercontent.com/15612230/182359001-a173e711-748b-49ec-b03f-71e5a8293c51.png). We also conducted experiments with a subset of the WES FD sample (FD_1, 1/3 of the full ~100x FD dataset):. - calling without germline resource and without PON; - calling with PON only, without germline resource; - calling with germline resource only, without PON; - calling with both germline resource and PON. The results (please note that the labeling conventions are now different compared to WGS experiments, apologies for the inconvenience):. ![FD_1_T_tumor-normal_WES_muTect2_FD_1_tumor-normal_muTect2_PON_FD_1_tumor-normal_muTect2_gnomAD_FD_1_tumor-normal_muTect2_PON_gnomAD](https://user-images.githubusercontent.com/15612230/182358963-97f04d12-94c6-4f77-acef-c3ebcd78a98f.png). 2. The reference is GRCh38.primary_assembly.genome.fa; The benchmark (""gold standard"") call set contains only variants on chr1-chr22, which AFAIK are identical or almost identical between the different b38 versions. 3. In my minimal WES example, most of the new FPs (150/158) from v4.1.9.0 are not present in raw, unfiltered calls from v.4.1.8.1. This was found the following way.; Compare FPs by CHROM, POS, REF, ALT using the scratch output of som.py (ran with --keep-scratch):. `; comm -23 <(bcftools query -f ""%CHROM %POS %REF %ALT\n"" WES_FD_TN_4190_filter_som_py/fp.vcf.gz | sort) <(bcftools query -f ""%CHROM %POS %REF %ALT\n"" WES_FD_TN_4181_filter_som_py/fp.vcf.gz | sort) | sed 's/ /\t/g' > new_FPs.txt; `; `; wc -l new_FPs.txt ; `; `; 158 new_FPs.txt; `. Find new FPs present in the raw output of v.4.1.8.1, again matching by CHROM, POS, REF, ALT:. `; awk 'NR==FNR{a[$1""_""$2""_""$3""_""$4]=1; next;}{if(substr($0,1,1)!=""#"" && a[$1""_""$2""_""$4""_""$5]==1) print $0}' new_FPs.txt WES_FD_TN_4181.vcf | wc -l; `; `; 8; `. For the 8 new FPs that have been detected, but filtered in v.4.1.8.1 (all of which are SNVs), find FILTER classific",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7921#issuecomment-1202344705:2002,benchmark,benchmark,2002,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7921#issuecomment-1202344705,1,['benchmark'],['benchmark']
Testability,4e0445d6df3469d?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb21tYW5kTGluZVByb2dyYW0uamF2YQ==) | `68.75% <0%> (-18.75%)` | `6% <0%> (ø)` | |; | [...ender/engine/datasources/ReferenceMultiSource.java](https://codecov.io/gh/broadinstitute/gatk/compare/dfa9cf1a420490285b7be7917082222a07e2b042...f539662b2a136507a34ea2da64e0445d6df3469d?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlTXVsdGlTb3VyY2UuamF2YQ==) | `55.556% <0%> (-18.519%)` | `8% <0%> (-1%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/compare/dfa9cf1a420490285b7be7917082222a07e2b042...f539662b2a136507a34ea2da64e0445d6df3469d?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `10.169% <0%> (-13.559%)` | `1% <0%> (-1%)` | |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/compare/dfa9cf1a420490285b7be7917082222a07e2b042...f539662b2a136507a34ea2da64e0445d6df3469d?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `77.6% <0%> (-9.6%)` | `28% <0%> (-8%)` | |; | [...ender/utils/nio/SeekableByteChannelPrefetcher.java](https://codecov.io/gh/broadinstitute/gatk/compare/dfa9cf1a420490285b7be7917082222a07e2b042...f539662b2a136507a34ea2da64e0445d6df3469d?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vU2Vla2FibGVCeXRlQ2hhbm5lbFByZWZldGNoZXIuamF2YQ==) | `70.946% <0%> (-6.757%)` | `18% <0%> (-4%)` | |; | ... and [4 more](https://codecov.io/gh/broadinstitute/gatk/pull/2455?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2455?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/do,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2455#issuecomment-285859315:3918,test,test,3918,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2455#issuecomment-285859315,1,['test'],['test']
Testability,"4e798"",; ""VariantCallingCarrotOrchestrated.haplotype_scatter_count"": 50,; ""VariantCallingCarrotOrchestrated.monitoring_script"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/cromwell_monitoring_script.sh"",; ""VariantCallingCarrotOrchestrated.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrotOrchestrated.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrotOrchestrated.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrotOrchestrated.use_gatk3_haplotype_caller"": true; },; ""test_options"": null,; ""eval_input"": {; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalVcf"": ""test_output:VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1155389940:3676,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,3676,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1155389940,2,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvRmVhdHVyZURhdGFTb3VyY2UuamF2YQ==) | `77.477% <ø> (+0.901%)` | `38% <ø> (+2%)` | :white_check_mark: |; | [...tools/walkers/genotyper/AlleleSubsettingUtils.java](https://codecov.io/gh/broadinstitute/gatk/compare/30365e7bea2d081204a11e7d916026cb3494961f...09a6f249352cd17f9214fccb5a4b3ac2c31f2cce?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2dlbm90eXBlci9BbGxlbGVTdWJzZXR0aW5nVXRpbHMuamF2YQ==) | `87.037% <ø> (+0.926%)` | `40% <ø> (+1%)` | :white_check_mark: |; | [...ark/pipelines/metrics/MeanQualityByCycleSpark.java](https://codecov.io/gh/broadinstitute/gatk/compare/30365e7bea2d081204a11e7d916026cb3494961f...09a6f249352cd17f9214fccb5a4b3ac2c31f2cce?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvbWV0cmljcy9NZWFuUXVhbGl0eUJ5Q3ljbGVTcGFyay5qYXZh) | `91.667% <ø> (+1.042%)` | `10% <ø> (ø)` | :x: |; | [...ute/hellbender/utils/test/IntegrationTestSpec.java](https://codecov.io/gh/broadinstitute/gatk/compare/30365e7bea2d081204a11e7d916026cb3494961f...09a6f249352cd17f9214fccb5a4b3ac2c31f2cce?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0ludGVncmF0aW9uVGVzdFNwZWMuamF2YQ==) | `74.194% <ø> (+1.075%)` | `26% <ø> (+1%)` | :white_check_mark: |; | ... and [3 more](https://codecov.io/gh/broadinstitute/gatk/pull/2404/changes?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2404?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2404?src=pr&el=footer). Last update [30365e7...09a6f24](https://codecov.io/gh/broadinstitute/gatk/compare/30365e7bea2d081204a11e7d916026cb3494961f...09a6f249352cd17f9214fccb",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2404#issuecomment-279082842:4362,test,test,4362,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2404#issuecomment-279082842,1,['test'],['test']
Testability,4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `22.013% <0%> (-62.264%)` | `8% <0%> (-26%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/2634?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...llbender/engine/spark/SparkCommandLineProgram.java](https://codecov.io/gh/broadinstitute/gatk/pull/2634?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb21tYW5kTGluZVByb2dyYW0uamF2YQ==) | `68.75% <0%> (-25%)` | `6% <0%> (-1%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2634?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `53.247% <0%> (-18.831%)` | `28% <0%> (-7%)` | |; | [...ender/engine/datasources/ReferenceMultiSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/2634?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlTXVsdGlTb3VyY2UuamF2YQ==) | `55.556% <0%> (-18.519%)` | `8% <0%> (-1%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/2634?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `10.169% <0%> (-13.559%)` | `1% <0%> (-1%)` | |; | [...titute/hellbender/utils/test/MiniClusterUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2634?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L01pbmlDbHVzdGVyVXRpbHMuamF2YQ==) | `78.947% <0%> (-10.526%)` | `6% <0%> (-1%)` | |; | ... and [8 more](https://codecov.io/gh/broadinstitute/gatk/pull/2634?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2634#issuecomment-298806429:3595,test,test,3595,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2634#issuecomment-298806429,1,['test'],['test']
Testability,5 | CONTROLSNAPSHOT2018HG002 | CHM_GRCh38_SYNDIPv20180222 | summary | VcfEval; INDEL | 0.9117 | 0.9113 | 0.9115 | 276082 | 269292 | 26752 | 26209 | HCR | gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/7012fa81-18fd-4c9c-8722-22c9d7fa642d/call-CHMSampleHeadToHead/BenchmarkComparison/ae3dcac7-7105-4847-ac07-f9f64a43c4c8/call-BenchmarkVCFControlSample/Benchmark/67f50e9a-e7a3-4b31-9d14-d700b46ddfa5/call-VcfEvalWriteXMLfile/shard-1/CONTROLSNAPSHOT2018HG002_CHM_GRCh38_SYNDIPv20180222_HCR_vcfeval.xml | 36612 | CONTROLSNAPSHOT2018HG002 | CHM_GRCh38_SYNDIPv20180222 | summary | VcfEval; Type | Precision | Recall | F1_Score | TP_Eval | TP_Base | FP | FN | Stratifier | IGV_Session | UNK | Name | Truth_Set | Summary_Type | Comparison_Engine; SNP | 0.8454 | 0.8568 | 0.8511 | 87700 | 95535 | 16041 | 15964 | LCR | gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/7012fa81-18fd-4c9c-8722-22c9d7fa642d/call-CHMSampleHeadToHead/BenchmarkComparison/ae3dcac7-7105-4847-ac07-f9f64a43c4c8/call-BenchmarkVCFControlSample/Benchmark/67f50e9a-e7a3-4b31-9d14-d700b46ddfa5/call-VcfEvalWriteXMLfile/shard-2/CONTROLSNAPSHOT2018HG002_CHM_GRCh38_SYNDIPv20180222_LCR_vcfeval.xml | 65355 | CONTROLSNAPSHOT2018HG002 | CHM_GRCh38_SYNDIPv20180222 | summary | VcfEval; INDEL | 0.8184 | 0.7901 | 0.804 | 211469 | 201230 | 46925 | 53465 | LCR | gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/7012fa81-18fd-4c9c-8722-22c9d7fa642d/call-CHMSampleHeadToHead/BenchmarkComparison/ae3dcac7-7105-4847-ac07-f9f64a43c4c8/call-BenchmarkVCFControlSample/Benchmark/67f50e9a-e7a3-4b31-9d14-d700b46ddfa5/call-VcfEvalWriteXMLfile/shard-2/CONTROLSNAPSHOT2018HG002_CHM_GRCh38_SYNDIPv20180222_LCR_vcfeval.xml | 396094 | CONTROLSNAPSHOT2018HG002 | CHM_GRCh38_SYNDIPv20180222 | summary | VcfEval; Type | Precision | Recall | F1_Score | TP_Eval | TP_Base | FP | FN | Stratifier | IGV_Session | UNK | Name | Truth_Set | Summary_Type | Comparison_Engine; SNP | 0.9706 | 0,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1850884297:3169,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,3169,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1850884297,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,5); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:377); 	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54); 	at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); Caused by: org.testng.TestNGException:An error occurred while instantiating class org.broadinstitute.hellbender.engine.spark.ReadsPreprocessingPipelineSparkTestData. Check to make sure it can be instantiated; 	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:134); 	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79); 	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:110); 	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:195); 	at org.testng.TestClass.getInstances(TestClass.java:102); 	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82); 	at org.testng.TestClass.init(TestClass.java:74); 	at org.testng.TestClass.<init>(TestClass.java:39); 	at org.testng.TestRunner.initMethods(TestRunner.java:466); 	at org.testng.TestRunner.init(TestRunner.java:345); 	at org.testng.TestRunner.init(TestRunner.java:298); 	at org.testng.TestRunner.<init>(TestRunner.java:183); 	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:603); 	at org.testng.SuiteRunner.init(SuiteRunner.java:196); 	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127); 	at org.testng.TestNG.createSuiteRunner(TestNG.java:1231); 	at org.testng.TestNG.createSuiteRunners(TestNG.java:1210); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1058); 	at org.testng.TestNG.runSuites(TestN,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5787#issuecomment-472107858:2728,test,testng,2728,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5787#issuecomment-472107858,1,['test'],['testng']
Testability,"5-8542-e78ba8364985/call-CHMSampleHeadToHead/BenchmarkComparison/394f0e4c-4f60-420b-8477-3199ef269728/call-BenchmarkVCFControlSample/Benchmark/2aec499d-c11f-4a23-912b-8a61f9982437/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""86.06659722222223"",; ""CHM evalHCsystemhours"": ""0.19141388888888877"",; ""CHM evalHCwallclockhours"": ""60.83952500000001"",; ""CHM evalHCwallclockmax"": ""3.1510444444444445"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f61c0caa-70a3-4ee5-8542-e78ba8364985/call-CHMSampleHeadToHead/BenchmarkComparison/394f0e4c-4f60-420b-8477-3199ef269728/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f61c0caa-70a3-4ee5-8542-e78ba8364985/call-CHMSampleHeadToHead/BenchmarkComparison/394f0e4c-4f60-420b-8477-3199ef269728/call-BenchmarkVCFTestSample/Benchmark/02bfdee5-dde8-4c1d-b628-b21e4512fd42/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f61c0caa-70a3-4ee5-8542-e78ba8364985/call-EXOME1SampleHeadToHead/BenchmarkComparison/ba4f3a3f-c40c-4037-837a-0bf9a85d0ece/call-BenchmarkVCFControlSample/Benchmark/61548750-761a-42ff-8d40-c80f94866dcd/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f61c0caa-",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535665125:18609,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,18609,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535665125,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"5-8542-e78ba8364985/call-CHMSampleHeadToHead/BenchmarkComparison/394f0e4c-4f60-420b-8477-3199ef269728/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f61c0caa-70a3-4ee5-8542-e78ba8364985/call-CHMSampleHeadToHead/BenchmarkComparison/394f0e4c-4f60-420b-8477-3199ef269728/call-BenchmarkVCFTestSample/Benchmark/02bfdee5-dde8-4c1d-b628-b21e4512fd42/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f61c0caa-70a3-4ee5-8542-e78ba8364985/call-EXOME1SampleHeadToHead/BenchmarkComparison/ba4f3a3f-c40c-4037-837a-0bf9a85d0ece/call-BenchmarkVCFControlSample/Benchmark/61548750-761a-42ff-8d40-c80f94866dcd/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f61c0caa-70a3-4ee5-8542-e78ba8364985/call-EXOME1SampleHeadToHead/BenchmarkComparison/ba4f3a3f-c40c-4037-837a-0bf9a85d0ece/call-BenchmarkVCFTestSample/Benchmark/476aa516-7233-4df2-8fc5-83b3f2df9eb6/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""95.8154"",; ""NIST controlHCsystemhours"": ""0.1727638888888889"",; ""NIST controlHCwallclockhours"": ""69.03862222222223"",; ""NIST controlHCwallclockmax"": ""3.457286111111111"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535665125:19141,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,19141,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535665125,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"508d5f-29f1-4534-9fe1-220a80de17c4/call-CHMSampleHeadToHead/BenchmarkComparison/a2a2515a-b32a-44a6-a6d1-9a6d0d2199bb/call-CONTROLRuntimeTask/cacheCopy/monitoring.pdf"",; ""CHM controlindelF1Score"": ""0.8724"",; ""CHM controlindelPrecision"": ""0.8814"",; ""CHM controlsnpF1Score"": ""0.9784"",; ""CHM controlsnpPrecision"": ""0.9706"",; ""CHM controlsnpRecall"": ""0.9863"",; ""CHM controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/89508d5f-29f1-4534-9fe1-220a80de17c4/call-CHMSampleHeadToHead/BenchmarkComparison/a2a2515a-b32a-44a6-a6d1-9a6d0d2199bb/call-BenchmarkVCFControlSample/Benchmark/2c4ad666-e885-4e23-bd5c-d54ca521ffbf/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""78.99195555555558"",; ""CHM evalHCsystemhours"": ""0.16168333333333337"",; ""CHM evalHCwallclockhours"": ""55.43875833333334"",; ""CHM evalHCwallclockmax"": ""2.913311111111111"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/89508d5f-29f1-4534-9fe1-220a80de17c4/call-CHMSampleHeadToHead/BenchmarkComparison/a2a2515a-b32a-44a6-a6d1-9a6d0d2199bb/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/89508d5f-29f1-4534-9fe1-220a80de17c4/call-CHMSampleHeadToHead/BenchmarkComparison/a2a2515a-b32a-44a6-a6d1-9a6d0d2199bb/call-BenchmarkVCFTestSample/Benchmark/76484c8b-d024-45b4-b1e0-2ff2b9adf2c0/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/89508d5f-29f1-4534-9fe1-220a80de17c4/call-EXOME1SampleHead",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193038382:17493,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,17493,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193038382,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"50b72"",; ""VariantCallingCarrotOrchestrated.haplotype_scatter_count"": 50,; ""VariantCallingCarrotOrchestrated.monitoring_script"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/cromwell_monitoring_script.sh"",; ""VariantCallingCarrotOrchestrated.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrotOrchestrated.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrotOrchestrated.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrotOrchestrated.use_gatk3_haplotype_caller"": true; },; ""test_options"": null,; ""eval_input"": {; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalVcf"": ""test_output:VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1155442844:3676,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,3676,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1155442844,2,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,51314) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_38100.2/tests/test/index.html) |; | integration | openjdk8 | [38100.2](https://app.travis-ci.com/broadinstitute/gatk/jobs/563251314) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_38100.2/tests/test/index.html) |; | integration | openjdk11 | [38100.12](https://app.travis-ci.com/broadinstitute/gatk/jobs/563251324) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_38100.12/tests/test/index.html) |; | integration | openjdk8 | [38100.2](https://app.travis-ci.com/broadinstitute/gatk/jobs/563251314) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_38100.2/tests/test/index.html) |; | integration | openjdk11 | [38100.12](https://app.travis-ci.com/broadinstitute/gatk/jobs/563251324) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_38100.12/tests/test/index.html) |; | integration | openjdk11 | [38100.12](https://app.travis-ci.com/broadinstitute/gatk/jobs/563251324) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_38100.12/tests/test/index.html) |; | integration | openjdk11 | [38100.12](https://app.travis-ci.com/broadinstitute/gatk/jobs/563251324) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_38100.12/tests/test/index.html) |; | integration | openjdk8 | [38100.2](https://app.travis-ci.com/broadinstitute/gatk/jobs/563251314) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_38100.2/tests/test/index.html) |; | integration | openjdk11 | [38100.12](https://app.travis-ci.com/broadinstitute/gatk/jobs/563251324) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_38100.12/tests/test/index.html) |; | integration | openjdk8 | [38100.2](https://app.travis-ci.com/broadinstitute/gatk/jobs/,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7715#issuecomment-1067136084:1529,test,tests,1529,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7715#issuecomment-1067136084,2,['test'],"['test', 'tests']"
Testability,52); Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | cloud | 11 | [2935907552.11](https://github.com/broadinstitute/gatk/runs/8042744893?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.11/tests/test/index.html) |; | cloud | 8 | [2935907552.10](https://github.com/broadinstitute/gatk/runs/8042744743?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.10/tests/test/index.html) |; | unit | 11 | [2935907552.13](https://github.com/broadinstitute/gatk/runs/8042745129?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.13/tests/test/index.html) |; | integration | 11 | [2935907552.12](https://github.com/broadinstitute/gatk/runs/8042744999?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.12/tests/test/index.html) |; | conda | 8 | [2935907552.3](https://github.com/broadinstitute/gatk/runs/8043019512?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.3/tests/test/index.html) |; | unit | 8 | [2935907552.1](https://github.com/broadinstitute/gatk/runs/8043019322?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.1/tests/test/index.html) |; | variantcalling | 8 | [2935907552.2](https://github.com/broadinstitute/gatk/runs/8043019429?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.2/tests/test/index.html) |; | integration | 8 | [2935907552.0](https://github.com/broadinstitute/gatk/runs/8043019196?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.0/tests/test/index.html,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1228829876:1120,test,test-logs,1120,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1228829876,1,['test'],['test-logs']
Testability,52.13](https://travis-ci.com/broadinstitute/gatk/jobs/498538899) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.13/tests/test/index.html) |; | integration | openjdk11 | [33752.12](https://travis-ci.com/broadinstitute/gatk/jobs/498538898) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.12/tests/test/index.html) |; | variantcalling | openjdk8 | [33752.4](https://travis-ci.com/broadinstitute/gatk/jobs/498538890) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.4/tests/test/index.html) |; | unit | openjdk8 | [33752.3](https://travis-ci.com/broadinstitute/gatk/jobs/498538889) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.3/tests/test/index.html) |; | conda | openjdk8 | [33752.5](https://travis-ci.com/broadinstitute/gatk/jobs/498538891) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.5/tests/test/index.html) |; | integration | openjdk8 | [33752.2](https://travis-ci.com/broadinstitute/gatk/jobs/498538888) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.2/tests/test/index.html) |; | cloud | openjdk11 | [33752.14](https://travis-ci.com/broadinstitute/gatk/jobs/498538900) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.14/tests/test/index.html) |; | cloud | openjdk8 | [33752.1](https://travis-ci.com/broadinstitute/gatk/jobs/498538887) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.1/tests/test/index.html) |; | unit | openjdk11 | [33752.13](https://travis-ci.com/broadinstitute/gatk/jobs/498538899) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.13/tests/test/index.html) |; | integration | openjdk11 | [33752.12](https://travis-ci.com/broadinstitute/gatk/jobs/498538898) | [logs](https://storage.googleapis.com/hellbender-tes,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234:1647,test,tests,1647,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234,2,['test'],"['test', 'tests']"
Testability,52.1](https://travis-ci.com/broadinstitute/gatk/jobs/498538887) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.1/tests/test/index.html) |; | unit | openjdk11 | [33752.13](https://travis-ci.com/broadinstitute/gatk/jobs/498538899) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.13/tests/test/index.html) |; | integration | openjdk11 | [33752.12](https://travis-ci.com/broadinstitute/gatk/jobs/498538898) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.12/tests/test/index.html) |; | variantcalling | openjdk8 | [33752.4](https://travis-ci.com/broadinstitute/gatk/jobs/498538890) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.4/tests/test/index.html) |; | unit | openjdk8 | [33752.3](https://travis-ci.com/broadinstitute/gatk/jobs/498538889) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.3/tests/test/index.html) |; | conda | openjdk8 | [33752.5](https://travis-ci.com/broadinstitute/gatk/jobs/498538891) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.5/tests/test/index.html) |; | integration | openjdk8 | [33752.2](https://travis-ci.com/broadinstitute/gatk/jobs/498538888) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.2/tests/test/index.html) |; | cloud | openjdk11 | [33752.14](https://travis-ci.com/broadinstitute/gatk/jobs/498538900) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.14/tests/test/index.html) |; | cloud | openjdk8 | [33752.1](https://travis-ci.com/broadinstitute/gatk/jobs/498538887) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.1/tests/test/index.html) |; | unit | openjdk11 | [33752.13](https://travis-ci.com/broadinstitute/gatk/jobs/498538899) | [logs](https://storage.googleapis.com/hellbender-test-logs/bu,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234:1442,test,tests,1442,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234,2,['test'],"['test', 'tests']"
Testability,"521dc-3c4c-4274-972c-9d1e4be850d5/call-CHMSampleHeadToHead/BenchmarkComparison/092bfb4f-d978-4964-a8ae-e5a7f7362f7c/call-CONTROLRuntimeTask/cacheCopy/monitoring.pdf"",; ""CHM controlindelF1Score"": ""0.8724"",; ""CHM controlindelPrecision"": ""0.8814"",; ""CHM controlsnpF1Score"": ""0.9784"",; ""CHM controlsnpPrecision"": ""0.9706"",; ""CHM controlsnpRecall"": ""0.9863"",; ""CHM controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-3c4c-4274-972c-9d1e4be850d5/call-CHMSampleHeadToHead/BenchmarkComparison/092bfb4f-d978-4964-a8ae-e5a7f7362f7c/call-BenchmarkVCFControlSample/Benchmark/6ab078fb-b668-452c-bbaa-8fb1fd8e25ba/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""84.26158888888888"",; ""CHM evalHCsystemhours"": ""0.19243055555555555"",; ""CHM evalHCwallclockhours"": ""60.242008333333345"",; ""CHM evalHCwallclockmax"": ""3.176513888888889"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-3c4c-4274-972c-9d1e4be850d5/call-CHMSampleHeadToHead/BenchmarkComparison/092bfb4f-d978-4964-a8ae-e5a7f7362f7c/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-3c4c-4274-972c-9d1e4be850d5/call-CHMSampleHeadToHead/BenchmarkComparison/092bfb4f-d978-4964-a8ae-e5a7f7362f7c/call-BenchmarkVCFTestSample/Benchmark/e167fc81-8ff7-44bd-b5bd-291161e3967e/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-3c4c-4274-972c-9d1e4be850d5/call-EXOME1SampleHead",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590:18166,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,18166,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,5355 | CONTROLSNAPSHOT2018HG002 | CHM_GRCh38_SYNDIPv20180222 | summary | VcfEval; INDEL | 0.8184 | 0.7901 | 0.804 | 211469 | 201230 | 46925 | 53465 | LCR | gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/7012fa81-18fd-4c9c-8722-22c9d7fa642d/call-CHMSampleHeadToHead/BenchmarkComparison/ae3dcac7-7105-4847-ac07-f9f64a43c4c8/call-BenchmarkVCFControlSample/Benchmark/67f50e9a-e7a3-4b31-9d14-d700b46ddfa5/call-VcfEvalWriteXMLfile/shard-2/CONTROLSNAPSHOT2018HG002_CHM_GRCh38_SYNDIPv20180222_LCR_vcfeval.xml | 396094 | CONTROLSNAPSHOT2018HG002 | CHM_GRCh38_SYNDIPv20180222 | summary | VcfEval; Type | Precision | Recall | F1_Score | TP_Eval | TP_Base | FP | FN | Stratifier | IGV_Session | UNK | Name | Truth_Set | Summary_Type | Comparison_Engine; SNP | 0.9706 | 0.9863 | 0.9784 | 3473278 | 3489284 | 105213 | 48308 | NA | gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/7012fa81-18fd-4c9c-8722-22c9d7fa642d/call-CHMSampleHeadToHead/BenchmarkComparison/ae3dcac7-7105-4847-ac07-f9f64a43c4c8/call-BenchmarkVCFTestSample/Benchmark/5aa299b6-f2b6-4d42-b478-16a83445bdaa/call-VcfEvalWriteXMLfile/shard-0/TESTSNAPSHOT2018HG002_CHM_GRCh38_SYNDIPv20180222_vcfeval.xml | 539662 | TESTSNAPSHOT2018HG002 | CHM_GRCh38_SYNDIPv20180222 | summary | VcfEval; INDEL | 0.8814 | 0.8636 | 0.8724 | 485076 | 465627 | 65264 | 73548 | NA | gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/7012fa81-18fd-4c9c-8722-22c9d7fa642d/call-CHMSampleHeadToHead/BenchmarkComparison/ae3dcac7-7105-4847-ac07-f9f64a43c4c8/call-BenchmarkVCFTestSample/Benchmark/5aa299b6-f2b6-4d42-b478-16a83445bdaa/call-VcfEvalWriteXMLfile/shard-0/TESTSNAPSHOT2018HG002_CHM_GRCh38_SYNDIPv20180222_vcfeval.xml | 429205 | TESTSNAPSHOT2018HG002 | CHM_GRCh38_SYNDIPv20180222 | summary | VcfEval; Type | Precision | Recall | F1_Score | TP_Eval | TP_Base | FP | FN | Stratifier | IGV_Session | UNK | Name | Truth_Set | Summary_Type | Comparison_Engine; SNP | 0.9743 | 0.99 | 0.9821 | 338,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1850884297:4390,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,4390,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1850884297,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"55d875eab/call-CHMSampleHeadToHead/BenchmarkComparison/1fb97a8b-caee-4184-8e36-be21e6c43549/call-EVALRuntimeTask/cacheCopy/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-CHMSampleHeadToHead/BenchmarkComparison/1fb97a8b-caee-4184-8e36-be21e6c43549/call-BenchmarkVCFTestSample/Benchmark/7f7c4522-e293-4a03-ada8-9541a585250b/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-EXOME1SampleHeadToHead/BenchmarkComparison/3ba68beb-5853-4beb-b31c-cbef12825001/call-BenchmarkVCFControlSample/Benchmark/18840f82-6653-4365-8e02-daf8790ea4f0/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-EXOME1SampleHeadToHead/BenchmarkComparison/3ba68beb-5853-4beb-b31c-cbef12825001/call-BenchmarkVCFTestSample/Benchmark/194337cf-f57b-46fa-812c-e6510f51fd8d/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""90.94291388888888"",; ""NIST controlHCsystemhours"": ""0.182125"",; ""NIST controlHCwallclockhours"": ""63.56370277777778"",; ""NIST controlHCwallclockmax"": ""3.701625"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069766207:12236,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,12236,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069766207,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"591a3799007/call-CHMSampleHeadToHead/BenchmarkComparison/f65a7960-7b66-4a5d-a346-bd188a1b3830/call-BenchmarkVCFControlSample/Benchmark/8d0e47ca-66f5-42a0-8785-6aa8d2db2663/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""80.5165222222222"",; ""CHM evalHCsystemhours"": ""0.1713305555555555"",; ""CHM evalHCwallclockhours"": ""53.10978888888891"",; ""CHM evalHCwallclockmax"": ""2.7458416666666667"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e6f57e40-2025-46fd-9aa0-d591a3799007/call-CHMSampleHeadToHead/BenchmarkComparison/f65a7960-7b66-4a5d-a346-bd188a1b3830/call-EVALRuntimeTask/cacheCopy/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e6f57e40-2025-46fd-9aa0-d591a3799007/call-CHMSampleHeadToHead/BenchmarkComparison/f65a7960-7b66-4a5d-a346-bd188a1b3830/call-BenchmarkVCFTestSample/Benchmark/96c96714-3ac6-4d2b-a79c-57086cda6373/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e6f57e40-2025-46fd-9aa0-d591a3799007/call-EXOME1SampleHeadToHead/BenchmarkComparison/4803682b-a3c6-46d6-924b-dbc96a877e16/call-BenchmarkVCFControlSample/Benchmark/dd059ca4-251d-4793-bbff-10dd76123882/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e6f57e40-",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069378815:11704,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,11704,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069378815,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"59328. BUILD SUCCESSFUL. Total time: 27.859 secs. This build could be faster, please consider using the Gradle Daemon: http://gradle.org/docs/2.4/userguide/gradle_daemon.html; $; ```. Below is by running one of the local tests directly - thank you for the directions to the Readme as I was launching it previously differently compared to the recommended way:. ```; $ build/install/hellbender/bin/hellbender BaseRecalibratorDataflow -R src/test/resources/org/broadinstitute/hellbender/tools/BQSR/human_b36_both.chr1_1k.fasta -I src/test/resources/org/broadinstitute/hellbender/tools/BQSR/originalQuals.1kg.chr1.1-1K.1RG.dictFix.bam --secret client-secrets.json -OQ -knownSites src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b36.excluding_sites_after_129.chr1_1k.vcf --RECAL_TABLE_FILE walktest.tmp -sortAllCols; [Tue Jun 02 03:22:33 EDT 2015] org.broadinstitute.hellbender.dev.tools.walkers.bqsr.BaseRecalibratorDataflow --knownSites /home/pgrosu/me/gg_hellbender_broad_institute/hellbender/src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b36.excluding_sites_after_129.chr1_1k.vcf --RECAL_TABLE_FILE walktest.tmp --sort_by_all_columns true --input src/test/resources/org/broadinstitute/hellbender/tools/BQSR/originalQuals.1kg.chr1.1-1K.1RG.dictFix.bam --reference src/test/resources/org/broadinstitute/hellbender/tools/BQSR/human_b36_both.chr1_1k.fasta --useOriginalQualities true --client_secret client-secrets.json --run_without_dbsnp_potentially_ruining_quality false --solid_recal_mode SET_Q_ZERO --solid_nocall_strategy THROW_EXCEPTION --mismatches_context_size 2 --indels_context_size 3 --maximum_cycle_value 500 --mismatches_default_quality -1 --insertions_default_quality 45 --deletions_default_quality 45 --low_quality_tail 2 --quantizing_levels 16 --interval_set_rule UNION --interval_padding 0 --bqsrBAQGapOpenPenalty 40.0 --preserve_qscores_less_than 6 --defaultBaseQualities -1 --runner LOCAL --help false --version false --VERBOSITY INFO --QUI",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/535#issuecomment-107794672:1223,test,test,1223,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/535#issuecomment-107794672,1,['test'],['test']
Testability,"5c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 10,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""Benchmark.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""Benchmark.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""Benchmark.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""Benchmark.evalVcfIndex"": ""test_output:VariantCalling.output_vcf_index"",; ""Benchmark.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""Benchmark.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""Benchmark.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""Benchmark.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""Benchmark.referenceVersion"": ""HG38"",; ""Benchmark.stratIntervals"": [; ""gs://gcp-public-data--broad-references/hg38/v0/exome_evaluation_regions.v1.interval_list"",; ""gs://broad-dsp-spec-ops/scratch/mshand/EvaluationStratIntervalLists/LCRFromHengHg38.interval_list""; ],; ""Benchmark.stratLabels"": [; ""exome"",; ""LCR""; ],; ""Benchmark.truthLabel"": ""HG",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1024013091:1780,Benchmark,Benchmark,1780,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1024013091,3,['Benchmark'],['Benchmark']
Testability,"5d88de-5810-47e1-972a-18ff0169fe27%2Fcall-CombineSummaries%2Fsummary.csv)|; |NIST evalHCprocesshours|92.82975|; |NIST evalHCsystemhours|0.17177777777777778|; |NIST evalHCwallclockhours|66.4404388888889|; |NIST evalHCwallclockmax|3.325327777777778|; |NIST evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F89508d5f-29f1-4534-9fe1-220a80de17c4%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F338d644e-3327-471e-9d17-1c103fa5e01e%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |NIST evalindelF1Score|0.9902|; |NIST evalindelPrecision|0.9903|; |NIST evalsnpF1Score|0.9899|; |NIST evalsnpPrecision|0.9887|; |NIST evalsnpRecall|0.9911|; |NIST evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F89508d5f-29f1-4534-9fe1-220a80de17c4%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F338d644e-3327-471e-9d17-1c103fa5e01e%2Fcall-BenchmarkVCFTestSample%2FBenchmark%2Fe37c2b01-a62d-4b8c-9fb3-6f86d8377ca7%2Fcall-CombineSummaries%2Fsummary.csv)|; |ROC_Plots_Reported|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F89508d5f-29f1-4534-9fe1-220a80de17c4%2Fcall-CreateHTMLReport%2FcacheCopy%2Freport.html)|. </details>. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""3d572c63-96eb-4429-98da-e698e4540893"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-07-22 17:23:11.546909540 UTC"",; ""status"": ""succeeded"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallin",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193038382:5671,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,5671,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193038382,2,['Benchmark'],"['BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"5ea4d64-414f-43aa-a8d6-9c34870b1491/call-BenchmarkVCFControlSample/Benchmark/0f001ca8-d7af-4d01-b9ef-d6ddbe35317d/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-EXOME1SampleHeadToHead/BenchmarkComparison/75ea4d64-414f-43aa-a8d6-9c34870b1491/call-BenchmarkVCFTestSample/Benchmark/540fbadc-ba57-4012-8ff1-76461ecb7bb3/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""99.85891111111113"",; ""NIST controlHCsystemhours"": ""0.17817777777777768"",; ""NIST controlHCwallclockhours"": ""70.22329166666665"",; ""NIST controlHCwallclockmax"": ""3.8036305555555554"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-NISTSampleHeadToHead/BenchmarkComparison/75625b9d-e48b-4859-803e-58989e3ccf62/call-CONTROLRuntimeTask/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-NISTSampleHeadToHead/BenchmarkComparison/75625b9d-e48b-4859-803e-58989e3ccf62/call-BenchmarkVCFControlSample/Benchmark/21373bda-c620-4200-ad29-1e3886ea52ad/call-CombineSummaries/summary.csv"",; ""NIST evalHCprocesshours"": ""104.20126111111112"",; ""NIST evalHCsystemhours"": ""0.20587777777777783"",; ""NIST evalHCwallclockhours"": ""76.10080000000004"",; ""NIST evalHCwallclockmax"": ""3.949438888888889"",; ""NIST evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169:20198,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,20198,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"5efb7"",; ""VariantCallingCarrotOrchestrated.haplotype_scatter_count"": 50,; ""VariantCallingCarrotOrchestrated.monitoring_script"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/cromwell_monitoring_script.sh"",; ""VariantCallingCarrotOrchestrated.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrotOrchestrated.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrotOrchestrated.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrotOrchestrated.use_gatk3_haplotype_caller"": true; },; ""test_options"": null,; ""eval_input"": {; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalVcf"": ""test_output:VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508:4336,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,4336,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508,4,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,5kTWFya0R1cGxpY2F0ZXNQaXBlbGluZVNwYXJrLmphdmE=) | `92.593% <100%> (+13.645%)` | `7 <0> (+3)` | :arrow_up: |; | [...ellbender/tools/spark/pathseq/PathSeqBwaSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4666/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9wYXRoc2VxL1BhdGhTZXFCd2FTcGFyay5qYXZh) | `67.391% <100%> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [...ender/engine/spark/datasources/ReadsSparkSink.java](https://codecov.io/gh/broadinstitute/gatk/pull/4666/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVhZHNTcGFya1NpbmsuamF2YQ==) | `73.043% <50%> (-2.411%)` | `26 <2> (+2)` | |; | [...der/tools/walkers/mutect/M2ArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/4666/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NMkFyZ3VtZW50Q29sbGVjdGlvbi5qYXZh) | `96.875% <0%> (-3.125%)` | `3% <0%> (+2%)` | |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4666/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `62.921% <0%> (-1.523%)` | `49% <0%> (+16%)` | |; | [...hellbender/utils/read/markduplicates/ReadsKey.java](https://codecov.io/gh/broadinstitute/gatk/pull/4666/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL1JlYWRzS2V5LmphdmE=) | `93.103% <0%> (-1.341%)` | `15% <0%> (+6%)` | |; | [...itute/hellbender/tools/walkers/bqsr/ApplyBQSR.java](https://codecov.io/gh/broadinstitute/gatk/pull/4666/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Jxc3IvQXBwbHlCUVNSLmphdmE=) | `90.909% <0%> (-0.758%)` | `11% <0%> (+5%)` | |; | ... and [56 more](https://codecov.io/gh/broadinstitute/gatk/pull/4666/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4666#issuecomment-382129089:3138,test,test,3138,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4666#issuecomment-382129089,1,['test'],['test']
Testability,6); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33);,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:5191,test,testng,5191,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['test'],['testng']
Testability,6); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33); 	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94); 	at com.sun.proxy.$Proxy5.stop(Unknown Source); 	at ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6652#issuecomment-672024253:3345,test,testing,3345,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6652#issuecomment-672024253,1,['test'],['testing']
Testability,61.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7539#issuecomment-955088400:1447,test,test-logs,1447,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7539#issuecomment-955088400,1,['test'],['test-logs']
Testability,612 | CONTROLSNAPSHOT2018HG002 | CHM_GRCh38_SYNDIPv20180222 | summary | VcfEval; Type | Precision | Recall | F1_Score | TP_Eval | TP_Base | FP | FN | Stratifier | IGV_Session | UNK | Name | Truth_Set | Summary_Type | Comparison_Engine; SNP | 0.8454 | 0.8568 | 0.8511 | 87700 | 95535 | 16041 | 15964 | LCR | gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/7012fa81-18fd-4c9c-8722-22c9d7fa642d/call-CHMSampleHeadToHead/BenchmarkComparison/ae3dcac7-7105-4847-ac07-f9f64a43c4c8/call-BenchmarkVCFControlSample/Benchmark/67f50e9a-e7a3-4b31-9d14-d700b46ddfa5/call-VcfEvalWriteXMLfile/shard-2/CONTROLSNAPSHOT2018HG002_CHM_GRCh38_SYNDIPv20180222_LCR_vcfeval.xml | 65355 | CONTROLSNAPSHOT2018HG002 | CHM_GRCh38_SYNDIPv20180222 | summary | VcfEval; INDEL | 0.8184 | 0.7901 | 0.804 | 211469 | 201230 | 46925 | 53465 | LCR | gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/7012fa81-18fd-4c9c-8722-22c9d7fa642d/call-CHMSampleHeadToHead/BenchmarkComparison/ae3dcac7-7105-4847-ac07-f9f64a43c4c8/call-BenchmarkVCFControlSample/Benchmark/67f50e9a-e7a3-4b31-9d14-d700b46ddfa5/call-VcfEvalWriteXMLfile/shard-2/CONTROLSNAPSHOT2018HG002_CHM_GRCh38_SYNDIPv20180222_LCR_vcfeval.xml | 396094 | CONTROLSNAPSHOT2018HG002 | CHM_GRCh38_SYNDIPv20180222 | summary | VcfEval; Type | Precision | Recall | F1_Score | TP_Eval | TP_Base | FP | FN | Stratifier | IGV_Session | UNK | Name | Truth_Set | Summary_Type | Comparison_Engine; SNP | 0.9706 | 0.9863 | 0.9784 | 3473278 | 3489284 | 105213 | 48308 | NA | gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/7012fa81-18fd-4c9c-8722-22c9d7fa642d/call-CHMSampleHeadToHead/BenchmarkComparison/ae3dcac7-7105-4847-ac07-f9f64a43c4c8/call-BenchmarkVCFTestSample/Benchmark/5aa299b6-f2b6-4d42-b478-16a83445bdaa/call-VcfEvalWriteXMLfile/shard-0/TESTSNAPSHOT2018HG002_CHM_GRCh38_SYNDIPv20180222_vcfeval.xml | 539662 | TESTSNAPSHOT2018HG002 | CHM_GRCh38_SYNDIPv20180222 | summary | VcfEval; INDEL | 0.8814 | 0.8636 | 0,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1850884297:3701,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,3701,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1850884297,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"625"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-3c4c-4274-972c-9d1e4be850d5/call-NISTSampleHeadToHead/BenchmarkComparison/4ffa2353-b1bc-4960-a5a4-96291208a7eb/call-CONTROLRuntimeTask/cacheCopy/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-3c4c-4274-972c-9d1e4be850d5/call-NISTSampleHeadToHead/BenchmarkComparison/4ffa2353-b1bc-4960-a5a4-96291208a7eb/call-BenchmarkVCFControlSample/Benchmark/8cf95ec9-48a7-4e20-a8fe-816dc3e652ae/call-CombineSummaries/summary.csv"",; ""NIST evalHCprocesshours"": ""100.56416111111112"",; ""NIST evalHCsystemhours"": ""0.19999166666666665"",; ""NIST evalHCwallclockhours"": ""74.00048055555555"",; ""NIST evalHCwallclockmax"": ""4.007605555555555"",; ""NIST evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-3c4c-4274-972c-9d1e4be850d5/call-NISTSampleHeadToHead/BenchmarkComparison/4ffa2353-b1bc-4960-a5a4-96291208a7eb/call-EVALRuntimeTask/monitoring.pdf"",; ""NIST evalindelF1Score"": ""0.9902"",; ""NIST evalindelPrecision"": ""0.9903"",; ""NIST evalsnpF1Score"": ""0.9899"",; ""NIST evalsnpPrecision"": ""0.9887"",; ""NIST evalsnpRecall"": ""0.9911"",; ""NIST evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-3c4c-4274-972c-9d1e4be850d5/call-NISTSampleHeadToHead/BenchmarkComparison/4ffa2353-b1bc-4960-a5a4-96291208a7eb/call-BenchmarkVCFTestSample/Benchmark/6b79227b-3ca8-4f5b-96b6-60d57760cc5b/call-CombineSummaries/summary.csv"",; ""ROC_Plots_Reported"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9bc521dc-3c4c-4274-972c-9d1e4be850d5/call-CreateHTMLReport/cacheCopy/report.html""; },; ""errors"": null; } ; </pre> </details>",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590:21175,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,21175,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590,7,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"625"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f7eac327-c59c-43f7-a850-21bc3e0ccf52/call-NISTSampleHeadToHead/BenchmarkComparison/d1a60d2b-8100-459a-9b05-72a22afccb4a/call-CONTROLRuntimeTask/cacheCopy/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f7eac327-c59c-43f7-a850-21bc3e0ccf52/call-NISTSampleHeadToHead/BenchmarkComparison/d1a60d2b-8100-459a-9b05-72a22afccb4a/call-BenchmarkVCFControlSample/Benchmark/9f6d4e85-981d-4607-8ff6-97495034807f/call-CombineSummaries/summary.csv"",; ""NIST evalHCprocesshours"": ""96.65376666666666"",; ""NIST evalHCsystemhours"": ""0.17881944444444442"",; ""NIST evalHCwallclockhours"": ""68.38394444444445"",; ""NIST evalHCwallclockmax"": ""3.8226138888888888"",; ""NIST evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f7eac327-c59c-43f7-a850-21bc3e0ccf52/call-NISTSampleHeadToHead/BenchmarkComparison/d1a60d2b-8100-459a-9b05-72a22afccb4a/call-EVALRuntimeTask/monitoring.pdf"",; ""NIST evalindelF1Score"": ""0.9902"",; ""NIST evalindelPrecision"": ""0.9903"",; ""NIST evalsnpF1Score"": ""0.9899"",; ""NIST evalsnpPrecision"": ""0.9887"",; ""NIST evalsnpRecall"": ""0.9911"",; ""NIST evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f7eac327-c59c-43f7-a850-21bc3e0ccf52/call-NISTSampleHeadToHead/BenchmarkComparison/d1a60d2b-8100-459a-9b05-72a22afccb4a/call-BenchmarkVCFTestSample/Benchmark/e62b142c-c39c-4c1f-9a08-c41a96647879/call-CombineSummaries/summary.csv"",; ""ROC_Plots_Reported"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f7eac327-c59c-43f7-a850-21bc3e0ccf52/call-CreateHTMLReport/cacheCopy/report.html""; },; ""errors"": null; } ; </pre> </details>",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182703672:20515,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,20515,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182703672,7,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"62542e/call-BenchmarkVCFTestSample/Benchmark/5c4f9069-86b3-4d8c-b765-38a67169e4b4/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-baa5-4052-bff9-bd684393ff6c/call-EXOME1SampleHeadToHead/BenchmarkComparison/688ca200-89b9-479b-b701-5fa0b0854778/call-BenchmarkVCFControlSample/Benchmark/59d8f8b1-1323-4e56-a1b1-0b1b2c8f2cc0/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-baa5-4052-bff9-bd684393ff6c/call-EXOME1SampleHeadToHead/BenchmarkComparison/688ca200-89b9-479b-b701-5fa0b0854778/call-BenchmarkVCFTestSample/Benchmark/1b8ccc58-1ead-4443-b6a8-64f767abfc70/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""90.94291388888888"",; ""NIST controlHCsystemhours"": ""0.182125"",; ""NIST controlHCwallclockhours"": ""63.56370277777778"",; ""NIST controlHCwallclockmax"": ""3.701625"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-baa5-4052-bff9-bd684393ff6c/call-NISTSampleHeadToHead/BenchmarkComparison/d1047505-b7bc-455d-851f-fbed8d81e895/call-CONTROLRuntimeTask/cacheCopy/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-baa5-4052-bff9-bd684393ff6c/call-NISTSampleHeadToHead/Benc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194801748:18984,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,18984,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194801748,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,639); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); at org.testng.TestNG.run(TestNG.java:1018); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:136); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:80); at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:59); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32); at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93); at com.sun.proxy.$Proxy2.stop(,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174:3116,Test,TestNGTestClassProcessor,3116,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174,1,['Test'],['TestNGTestClassProcessor']
Testability,"64e; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 08:04:19 2017 -0500. mkl. commit 43e2a65201286161fcd5bfe7dbb21ae888e19dac; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 06:56:20 2017 -0500. added cpu argument for germline tasks. commit 4433a62c2173c7f29d0f264c084bbaf2f6738782; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 02:45:38 2017 -0500. revert travis yml forks; verbose logging germline wdl. commit ae05801e33c37b3bf2685fba202032a270804873; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Fri Dec 8 00:55:14 2017 -0500. updated somatic PoNs for PreprocessIntervals drop Ns. commit cff64984d9fb42364001bda4c73d54cf68d85a5c; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 00:37:24 2017 -0500. sudo travis yml. commit 89025941febd2089d426cfa1e0f0aa6a6712e2a9; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 00:23:22 2017 -0500. travis/Docker config update (g++-6, Miniconda3); python test group assignment. commit 31f96398106c2b8577b8c25d110abea3ebe7f836; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 20:44:53 2017 -0500. WDL test bugfix. commit 9b2fb820536ec355bea0256471bd093d547f5c99; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 20:20:36 2017 -0500. update WDL test JSON files. commit e3d97644d1a2c40a5c364a96f8b67246154179c9; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 20:18:14 2017 -0500. assertions in inference task base; removed a ASCII > 128 character in log messages. commit 526cf92e623a3bbd5f9d375132b6ca046fc47620; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 20:03:04 2017 -0500. redirect tqdm progress bar to python logger. commit 2e45bd30968b921fae225de3901fb97ece690b0c; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 19:45:49 2017 -0500. more arg related fixes. commit bb89a3bb338d88199881e8aca65f656f2acd7c0a; Author: ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598:4248,test,test,4248,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598,1,['test'],['test']
Testability,661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7539#issuecomment-955088400:1230,test,test-logs,1230,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7539#issuecomment-955088400,1,['test'],['test-logs']
Testability,66366Z [0K; 2022-08-16T22:45:53.8466494Z [0K; 2022-08-16T22:45:53.8482815Z src/main/java/org/broadinstitute/hellbender/tools/walkers/readorientation/LearnReadOrientationModel.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.8483576Z src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/StrandOddsRatio.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.8485557Z src/main/java/org/broadinstitute/hellbender/utils/variant/writers/SomaticGVCFWriter.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.8486273Z src/main/java/org/broadinstitute/hellbender/utils/variant/writers/SomaticGVCFWriter.java:4: error: package com.google.common.collect does not exist; 2022-08-16T22:45:53.8489006Z src/main/java/org/broadinstitute/hellbender/cmdline/CommandLineProgram.java:479: error: cannot find symbol; 2022-08-16T22:45:53.8489149Z @VisibleForTesting; 2022-08-16T22:45:53.8489418Z symbol: class VisibleForTesting; 2022-08-16T22:45:53.8489587Z location: class CommandLineProgram; 2022-08-16T22:45:53.8514933Z src/main/java/org/broadinstitute/hellbender/cmdline/GATKPlugin/DefaultGATKVariantAnnotationArgumentCollection.java:3: error: package com.google.common.collect does not exist; 2022-08-16T22:45:53.8515375Z [done in 2341 ms]; 2022-08-16T22:45:53.8515491Z 1 error; 2022-08-16T22:45:53.8515610Z 101 warnings; 2022-08-16T22:45:53.8515748Z expected [99] but found [1]; 2022-08-16T22:45:53.8515934Z at org.testng.Assert.fail(Assert.java:97); 2022-08-16T22:45:53.8516162Z at org.testng.Assert.assertEqualsImpl(Assert.java:136); 2022-08-16T22:45:53.8516413Z at org.testng.Assert.assertEquals(Assert.java:118); 2022-08-16T22:45:53.8516617Z at org.testng.Assert.assertEquals(Assert.java:839); 2022-08-16T22:45:53.8517212Z at org.broadinstitute.hellbender.utils.help.DocumentationGenerationIntegrationTest.documentationSmokeTest2(DocumentationGenerationIntegrationTest.java:131); ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217253370:23254,test,testng,23254,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217253370,15,"['Assert', 'assert', 'test']","['Assert', 'assertEquals', 'assertEqualsImpl', 'testng']"
Testability,667% <100%> (+3.333%)` | `29 <12> (+6)` | :arrow_up: |; | [...ead/markduplicates/sparkrecords/EmptyFragment.java](https://codecov.io/gh/broadinstitute/gatk/pull/4752/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9FbXB0eUZyYWdtZW50LmphdmE=) | `88.889% <100%> (+0.654%)` | `9 <2> (+2)` | :arrow_up: |; | [...forms/markduplicates/MarkDuplicatesSparkUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4752/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay90cmFuc2Zvcm1zL21hcmtkdXBsaWNhdGVzL01hcmtEdXBsaWNhdGVzU3BhcmtVdGlscy5qYXZh) | `89.27% <75%> (-0.73%)` | `69 <2> (ø)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/4752/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...ellbender/utils/test/CommandLineProgramTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/4752/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0NvbW1hbmRMaW5lUHJvZ3JhbVRlc3Rlci5qYXZh) | `91.667% <0%> (-3.571%)` | `11% <0%> (+2%)` | |; | [...itute/hellbender/engine/spark/GATKRegistrator.java](https://codecov.io/gh/broadinstitute/gatk/pull/4752/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvR0FUS1JlZ2lzdHJhdG9yLmphdmE=) | `100% <0%> (ø)` | `6% <0%> (+3%)` | :arrow_up: |; | [...titute/hellbender/engine/TwoPassVariantWalker.java](https://codecov.io/gh/broadinstitute/gatk/pull/4752/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvVHdvUGFzc1ZhcmlhbnRXYWxrZXIuamF2YQ==) | `95% <0%> (ø)` | `4% <0%> (?)` | |; | ... and [5 more](https://codecov.io/gh/broadinstitute/gatk/pull/4752/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4752#issuecomment-388967022:3212,test,test,3212,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4752#issuecomment-388967022,1,['test'],['test']
Testability,"69341665 60.1 85260000 1418372.5. 20:33:04.435 INFO ProgressMeter - 1:169350665 60.5 85269000 1410144.2. 20:33:29.473 INFO CollectAllelicCounts - Shutting down engine. [October 5, 2019 8:33:29 PM UTC] org.broadinstitute.hellbender.tools.copynumber.CollectAllelicCounts done. Elapsed time: 60.94 minutes. Runtime.totalMemory()=5,285,347,328. . . Exception in thread ""main"" java.lang.OutOfMemoryError: GC overhead limit exceeded. . . at java.util.Collections.unmodifiableList(Collections.java:1287). at htsjdk.samtools.Cigar.getCigarElements(Cigar.java:54). at org.broadinstitute.hellbender.utils.read.SAMRecordToGATKReadAdapter.getCigarElements(SAMRecordToGATKReadAdapter.java:336). at org.broadinstitute.hellbender.engine.filters.ReadFilterLibrary$ReadLengthEqualsCigarLengthReadFilter.test(ReadFilterLibrary.java:217). at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70). at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70). at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70). at org.broadinstitute.hellbender.engine.filters.WellformedReadFilter.test(WellformedReadFilter.java:77). at org.broadinstitute.hellbender.engine.filters.CountingReadFilter.test(CountingReadFilter.java:126) . . . From: Louis Bergelson <notifications@github.com> ; Sent: Thursday, October 31, 2019 12:24 PM; To: broadinstitute/gatk <gatk@noreply.github.com>; Cc: rdbremel <rdbremel017@gmail.com>; Mention <mention@noreply.github.com>; Subject: Re: [broadinstitute/gatk] Funcotator shuts down (#6182). . I thought we'd added that to the retry list. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub <https://github.com/broadinstitute/gatk/issues/6182?email_source=notifications&email_token=ANCR2VDSBPTB7S7VFLE2XWLQRMICTA5CNFSM4I2MRFQKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOECYS3SA#issuecomment-548482504> , or un",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6182#issuecomment-548929777:1989,test,test,1989,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6182#issuecomment-548929777,1,['test'],['test']
Testability,"6a-b586-cd3e47f04e41/call-CHMSampleHeadToHead/BenchmarkComparison/1731c546-7466-4adf-9790-3f99d07df05b/call-BenchmarkVCFControlSample/Benchmark/669edf6c-76a1-4d82-8cf7-5cd104df2496/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""83.2423166666667"",; ""CHM evalHCsystemhours"": ""0.18843333333333337"",; ""CHM evalHCwallclockhours"": ""61.06540555555557"",; ""CHM evalHCwallclockmax"": ""3.1854916666666666"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/acc9e2ac-b10a-4d6a-b586-cd3e47f04e41/call-CHMSampleHeadToHead/BenchmarkComparison/1731c546-7466-4adf-9790-3f99d07df05b/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/acc9e2ac-b10a-4d6a-b586-cd3e47f04e41/call-CHMSampleHeadToHead/BenchmarkComparison/1731c546-7466-4adf-9790-3f99d07df05b/call-BenchmarkVCFTestSample/Benchmark/8e83736f-3023-4bee-9c42-36c836b75297/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/acc9e2ac-b10a-4d6a-b586-cd3e47f04e41/call-EXOME1SampleHeadToHead/BenchmarkComparison/a98aa003-bddd-492a-8691-dfa50191e2c6/call-BenchmarkVCFControlSample/Benchmark/a332ee8c-3de3-4a6f-b1de-7b273c094e84/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/acc9e2ac-",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099:18574,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,18574,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,6ab078fb-b668-452c-bbaa-8fb1fd8e25ba%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|84.26158888888888|; |CHM evalHCsystemhours|0.19243055555555555|; |CHM evalHCwallclockhours|60.242008333333345|; |CHM evalHCwallclockmax|3.176513888888889|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9bc521dc-3c4c-4274-972c-9d1e4be850d5%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F092bfb4f-d978-4964-a8ae-e5a7f7362f7c%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; |CHM evalsnpF1Score|0.9784|; |CHM evalsnpPrecision|0.9706|; |CHM evalsnpRecall|0.9863|; |CHM evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9bc521dc-3c4c-4274-972c-9d1e4be850d5%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F092bfb4f-d978-4964-a8ae-e5a7f7362f7c%2Fcall-BenchmarkVCFTestSample%2FBenchmark%2Fe167fc81-8ff7-44bd-b5bd-291161e3967e%2Fcall-CombineSummaries%2Fsummary.csv)|; |EXOME1 controlindelF1Score|0.727|; |EXOME1 controlindelPrecision|0.632|; |EXOME1 controlsnpF1Score|0.9878|; |EXOME1 controlsnpPrecision|0.9815|; |EXOME1 controlsnpRecall|0.9941|; |EXOME1 controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9bc521dc-3c4c-4274-972c-9d1e4be850d5%2Fcall-EXOME1SampleHeadToHead%2FBenchmarkComparison%2F5bf5f11a-64cb-4b50-8d05-b61b7f4c803c%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2Fc64dbce6-4a90-42c0-a84b-59857afb98a5%2Fcall-CombineSummaries%2Fsummary.csv)|; |EXOME1 evalindelF1Score|0.727|; |EXOME1 evalindelPrecision|0.632|; |EXOME1 evalsnpF1Score|0.9878|; |EXOME1 evalsnpPrecision|0.9815|; |EXOME1 evalsnpRecall|0.9941|; |EXOME1 evalsummary|[View in the GCS Console](,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590:2225,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,2225,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590,2,['Benchmark'],"['BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"6ca7883/call-CHMSampleHeadToHead/BenchmarkComparison/7ff0db7c-0871-4cda-95f3-fa75436cbb21/call-EVALRuntimeTask/cacheCopy/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8778"",; ""CHM evalindelPrecision"": ""0.8968"",; ""CHM evalsnpF1Score"": ""0.9813"",; ""CHM evalsnpPrecision"": ""0.9774"",; ""CHM evalsnpRecall"": ""0.9852"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e372bd14-cd1f-4563-8d8a-abf6b6ca7883/call-CHMSampleHeadToHead/BenchmarkComparison/7ff0db7c-0871-4cda-95f3-fa75436cbb21/call-BenchmarkVCFTestSample/Benchmark/2071078a-158e-4c3e-9b2f-907bd501821b/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.7573"",; ""EXOME1 controlindelPrecision"": ""0.6882"",; ""EXOME1 controlsnpF1Score"": ""0.9896"",; ""EXOME1 controlsnpPrecision"": ""0.9852"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e372bd14-cd1f-4563-8d8a-abf6b6ca7883/call-EXOME1SampleHeadToHead/BenchmarkComparison/113b01be-9124-41dd-acc0-5732ef2c7b38/call-BenchmarkVCFControlSample/Benchmark/7222f3cf-155c-423f-bc1e-8194e87ff05f/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.7573"",; ""EXOME1 evalindelPrecision"": ""0.6882"",; ""EXOME1 evalsnpF1Score"": ""0.9896"",; ""EXOME1 evalsnpPrecision"": ""0.9852"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e372bd14-cd1f-4563-8d8a-abf6b6ca7883/call-EXOME1SampleHeadToHead/BenchmarkComparison/113b01be-9124-41dd-acc0-5732ef2c7b38/call-BenchmarkVCFTestSample/Benchmark/e929ad45-5026-4630-8b85-19f6205f068c/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""90.94291388888888"",; ""NIST controlHCsystemhours"": ""0.182125"",; ""NIST controlHCwallclockhours"": ""63.56370277777778"",; ""NIST controlHCwallclockmax"": ""3.701625"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e372bd14",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069381494:12239,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,12239,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069381494,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,7-4415-9118-d0ebbe156bfd%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|84.26158888888888|; |CHM evalHCsystemhours|0.19243055555555555|; |CHM evalHCwallclockhours|60.242008333333345|; |CHM evalHCwallclockmax|3.176513888888889|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F0e5c32ab-65e6-451f-a04e-6a3f5e7fe5c8%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa332776f-175a-4595-bdeb-ab62e7f89921%2Fcall-EVALRuntimeTask%2FcacheCopy%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; |CHM evalsnpF1Score|0.9784|; |CHM evalsnpPrecision|0.9706|; |CHM evalsnpRecall|0.9863|; |CHM evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F0e5c32ab-65e6-451f-a04e-6a3f5e7fe5c8%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa332776f-175a-4595-bdeb-ab62e7f89921%2Fcall-BenchmarkVCFTestSample%2FBenchmark%2F362a3e75-6a39-4bde-bb79-e6562dc66dd9%2Fcall-CombineSummaries%2Fsummary.csv)|; |EXOME1 controlindelF1Score|0.727|; |EXOME1 controlindelPrecision|0.632|; |EXOME1 controlsnpF1Score|0.9878|; |EXOME1 controlsnpPrecision|0.9815|; |EXOME1 controlsnpRecall|0.9941|; |EXOME1 controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F0e5c32ab-65e6-451f-a04e-6a3f5e7fe5c8%2Fcall-EXOME1SampleHeadToHead%2FBenchmarkComparison%2Fefb51584-614a-4702-bc80-17a6a388e888%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2Fea5e6517-663b-4cfb-b264-0dc933da9ae3%2Fcall-CombineSummaries%2Fsummary.csv)|; |EXOME1 evalindelF1Score|0.727|; |EXOME1 evalindelPrecision|0.632|; |EXOME1 evalsnpF1Score|0.9878|; |EXOME1 evalsnpPrecision|0.9815|; |EXOME1 evalsnpRecall|0.9941|; |EXOME1 evalsummary|[View in the GCS Console](,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535104202:2237,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,2237,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535104202,2,['Benchmark'],"['BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"7-a850-21bc3e0ccf52/call-CHMSampleHeadToHead/BenchmarkComparison/cd28fe49-1672-4321-a836-47f76419c1c8/call-BenchmarkVCFControlSample/Benchmark/d5df8455-36cf-4ecb-8dc2-ec35b974c0b7/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""78.23616944444446"",; ""CHM evalHCsystemhours"": ""0.16188333333333332"",; ""CHM evalHCwallclockhours"": ""55.167422222222214"",; ""CHM evalHCwallclockmax"": ""2.887522222222222"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f7eac327-c59c-43f7-a850-21bc3e0ccf52/call-CHMSampleHeadToHead/BenchmarkComparison/cd28fe49-1672-4321-a836-47f76419c1c8/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f7eac327-c59c-43f7-a850-21bc3e0ccf52/call-CHMSampleHeadToHead/BenchmarkComparison/cd28fe49-1672-4321-a836-47f76419c1c8/call-BenchmarkVCFTestSample/Benchmark/83a51739-dd4e-4f2d-b09a-3c78b132fbf1/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f7eac327-c59c-43f7-a850-21bc3e0ccf52/call-EXOME1SampleHeadToHead/BenchmarkComparison/3b586c16-feb0-4cdd-8850-8426205cced2/call-BenchmarkVCFControlSample/Benchmark/31dfb54a-9ecc-4af2-9fcd-ea9af745342e/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f7eac327-",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182703672:17931,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,17931,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182703672,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"7-a850-21bc3e0ccf52/call-CHMSampleHeadToHead/BenchmarkComparison/cd28fe49-1672-4321-a836-47f76419c1c8/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f7eac327-c59c-43f7-a850-21bc3e0ccf52/call-CHMSampleHeadToHead/BenchmarkComparison/cd28fe49-1672-4321-a836-47f76419c1c8/call-BenchmarkVCFTestSample/Benchmark/83a51739-dd4e-4f2d-b09a-3c78b132fbf1/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f7eac327-c59c-43f7-a850-21bc3e0ccf52/call-EXOME1SampleHeadToHead/BenchmarkComparison/3b586c16-feb0-4cdd-8850-8426205cced2/call-BenchmarkVCFControlSample/Benchmark/31dfb54a-9ecc-4af2-9fcd-ea9af745342e/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f7eac327-c59c-43f7-a850-21bc3e0ccf52/call-EXOME1SampleHeadToHead/BenchmarkComparison/3b586c16-feb0-4cdd-8850-8426205cced2/call-BenchmarkVCFTestSample/Benchmark/7c7e45ee-4fe9-48e6-b8ed-cd4372c9e726/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""90.94291388888888"",; ""NIST controlHCsystemhours"": ""0.182125"",; ""NIST controlHCwallclockhours"": ""63.56370277777778"",; ""NIST controlHCwallclockmax"": ""3.701625"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f7eac327-c",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182703672:18463,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,18463,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182703672,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"7.4107682Z src/main/java/org/broadinstitute/hellbender/utils/variant/GATKVariantContextUtils.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.4116317Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:3: error: package com.google.common.collect does not exist; 2022-08-16T00:09:07.4117746Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:4: error: package com.google.common.collect does not exist; 2022-08-16T00:09:07.4124264Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:32: error: cannot find symbol; 2022-08-16T00:09:07.4124816Z private static BiMap<Log.LogLevel, Level> loggingLevelNamespaceMap;; 2022-08-16T00:09:07.4125855Z symbol: class BiMap; 2022-08-16T00:09:07.4126189Z location: class LoggingUtils; 2022-08-16T00:09:07.4126674Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:41: error: cannot find symbol; 2022-08-16T00:09:07.4127264Z private static BiMap<Log.LogLevel, java.util.logging.Level> javaUtilLevelNamespaceMap;; 2022-08-16T00:09:07.4127999Z symbol: class BiMap; 2022-08-16T00:09:07.4128334Z location: class LoggingUtils; 2022-08-16T00:09:07.4137968Z src/main/java/org/broadinstitute/hellbender/utils/gcs/BucketUtils.java:13: error: package com.google.common.base does not exist; 2022-08-16T00:09:07.4139500Z src/main/java/org/broadinstitute/hellbender/utils/gcs/BucketUtils.java:14: error: package com.google.common.io does not exist; 2022-08-16T00:09:07.4190745Z src/main/java/org/broadinstitute/hellbender/tools/walkers/ReferenceConfidenceVariantContextMerger.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.4198885Z src/main/java/org/broadinstitute/hellbender/tools/walkers/ReferenceConfidenceVariantContextMerger.java:242: error: cannot find symbol; 2022-08-16T00:09:07.4199424Z @VisibleForTesting; 2022-08-16T00:09:07.4200130Z symbol: class VisibleForTesting; 2022-08-16T00:09:07.4200630Z location: class Refere",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217242480:13474,Log,LogLevel,13474,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217242480,1,['Log'],['LogLevel']
Testability,71); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Delegat,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293:1557,test,testng,1557,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293,1,['test'],['testng']
Testability,714% <100%> (+1.429%)` | `42 <0> (+2)` | :arrow_up: |; | [...er/tools/spark/sv/discovery/AlignmentInterval.java](https://codecov.io/gh/broadinstitute/gatk/pull/4175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvQWxpZ25tZW50SW50ZXJ2YWwuamF2YQ==) | `89.272% <0%> (+0.383%)` | `73% <0%> (+1%)` | :arrow_up: |; | [...rg/broadinstitute/hellbender/utils/io/IOUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pby9JT1V0aWxzLmphdmE=) | `61.616% <0%> (+1.01%)` | `50% <0%> (+1%)` | :arrow_up: |; | [...ender/utils/nio/SeekableByteChannelPrefetcher.java](https://codecov.io/gh/broadinstitute/gatk/pull/4175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vU2Vla2FibGVCeXRlQ2hhbm5lbFByZWZldGNoZXIuamF2YQ==) | `78.313% <0%> (+1.205%)` | `27% <0%> (+2%)` | :arrow_up: |; | [...te/hellbender/engine/spark/VariantWalkerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvVmFyaWFudFdhbGtlclNwYXJrLmphdmE=) | `74.468% <0%> (+2.128%)` | `14% <0%> (ø)` | :arrow_down: |; | [...der/engine/spark/datasources/ReadsSparkSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVhZHNTcGFya1NvdXJjZS5qYXZh) | `80.198% <0%> (+2.97%)` | `38% <0%> (ø)` | :arrow_down: |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `64.925% <0%> (+2.985%)` | `33% <0%> (+3%)` | :arrow_up: |; | ... and [11 more](https://codecov.io/gh/broadinstitute/gatk/pull/4175/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4175#issuecomment-358271180:3112,test,test,3112,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4175#issuecomment-358271180,1,['test'],['test']
Testability,"72; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Wed Dec 6 11:13:58 2017 -0500. editable, full path. commit d998f2d5c2b33dd41e291be9bfeaea72fe479b8a; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Wed Dec 6 10:56:24 2017 -0500. revert Dockerfile, change yml. commit 930d7486b7d2cf918fcb16dd03394bb9c9f0611b; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Wed Dec 6 10:34:46 2017 -0500. more Dockerfile. commit 94112131526b514ef254bcc2c50a239dbae35aa1; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Wed Dec 6 10:25:13 2017 -0500. more Dockerfile. commit 7d2646240a65f5c0f09f5f25f3e19e9d9bf004d9; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Wed Dec 6 10:06:11 2017 -0500. more Dockerfile. commit f1235c25aeba85570b5ce389a34975f1b7b5ec3c; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Wed Dec 6 09:39:46 2017 -0500. Dockerfile edit. commit 3df84dd4693f28e4e8b34fd33f877e99749dffce; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 5 16:08:06 2017 -0500. Update test PoNs. commit 2c3b20e62a1cba7af24c0b0846eb1629422f51e6; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 5 15:49:38 2017 -0500. Update test files. commit c65c6e9144ef396792364ab2e06b7b436bb97684; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 5 15:30:59 2017 -0500. Adding no-GC/do-GC WDL tests. commit 56451843066a456d9cf8e6eac55ae4df2c518ec3; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 5 12:51:17 2017 -0500. Updates to handle SAM header changes from sl_wgs_acnv_headers and updates to mb_gcnv_python_kernel. commit d02d04df684a2820308a1d1c2bfda4b7d1c5f05e; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Mon Nov 13 12:52:33 2017 -0500. Added CLIs and WDL for python gCNV pipeline. commit 66ed74b68375d43514ef84658e7a6c771ed9053c; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Wed Nov 15 01:50:03 2017 -0500. Polished code, ready for review; ; gCNV computational kernel (initial release); ; renaming gammas_s to psi_s to uniformity (sampl",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598:9520,test,test,9520,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598,1,['test'],['test']
Testability,72?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvU2hhcmQuamF2YQ==) | `100% <100%> (ø)` | `15 <5> (+5)` | :arrow_up: |; | [.../hellbender/utils/iterators/FilteringIterator.java](https://codecov.io/gh/broadinstitute/gatk/pull/2372?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pdGVyYXRvcnMvRmlsdGVyaW5nSXRlcmF0b3IuamF2YQ==) | `90% <90%> (ø)` | `8 <8> (?)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/2372?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-75.51%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/2372?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...institute/hellbender/utils/gcs/GATKGCSOptions.java](https://codecov.io/gh/broadinstitute/gatk/pull/2372?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvR0FUS0dDU09wdGlvbnMuamF2YQ==) | `0% <0%> (-66.667%)` | `0% <0%> (ø)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/2372?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `22.013% <0%> (-62.264%)` | `8% <0%> (-26%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/2372?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | ... and [17 more](https://codecov.io/gh/broadinstitute/gatk/pull/2372?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2372#issuecomment-307349042:3547,test,test,3547,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2372#issuecomment-307349042,1,['test'],['test']
Testability,"72d292e2b7acc692670e; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Thu Dec 7 13:57:16 2023 -0500. revert backport of MeanField. commit 67fb373687d32ec7e0fa329d4f3864e2cccabc53; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Wed Dec 6 10:45:11 2023 -0500. just used sample_node, finally deterministic?!. commit 754c424566cb9c191b9775b02d464488d7f68f68; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Wed Dec 6 07:22:51 2023 -0500. port stable logsumexp, though it doesn't seem to make a difference in ploidy. commit 95c944d792642ba5ec8dceaaff67d3a35cb3eab0; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 5 23:51:01 2023 -0500. working with Mixture, still nondeterministic. commit 426375ac6473999ba249e775f2aa7d622534d510; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 5 22:32:44 2023 -0500. stochastic node cleanup. commit dc66f3f6a07dc82ba4258b3c0a65d990355da8d7; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 5 21:38:52 2023 -0500. safe log in log ploidy priors. commit 9712fa169a08edcf1a7a56622708e610b862631e; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 5 21:35:05 2023 -0500. still debugging stochastic node. commit a79762c616f8758e0fd073b9e8e5d1ad30c1d5d0; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Thu Nov 9 16:48:05 2023 -0500. blas in base, conda with libmamba solver. commit b4f5301c28a03689fca0b95ef652a51dd991686d; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Thu Nov 9 12:45:53 2023 -0500. freeze conda and set libmamba in base. commit f57a13a08fc3d049f0271e9aa94639ecb87b50f2; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Thu Nov 9 07:29:30 2023 -0500. libmamba 23.9.0. commit 45058f27aae9c9240a167f126e32a6bddd3353ff; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Wed Nov 8 23:33:51 2023 -0500. conda 23.9.0. commit d95494d282dd42ea3377de6c2d3554a3a5db65e4; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Mon Oct 30 17:04:34 2023 -0400. minor fixes to get ploidy working. commit c6a21f33f1",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8561#issuecomment-1854434322:5067,log,log,5067,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8561#issuecomment-1854434322,2,['log'],['log']
Testability,749554cafe9f8cf869fac1fcede0c?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZmlsdGVycy9NYXBwaW5nUXVhbGl0eVJlYWRGaWx0ZXIuamF2YQ==) | `100% <100%> (ø)` | `5 <5> (+2)` | :white_check_mark: |; | [...institute/hellbender/utils/gcs/GATKGCSOptions.java](https://codecov.io/gh/broadinstitute/gatk/compare/92cb86051b59acb6b18115135a5b5db99b617d22...6737d16d1f0749554cafe9f8cf869fac1fcede0c?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvR0FUS0dDU09wdGlvbnMuamF2YQ==) | `0% <0%> (-66.667%)` | `0% <0%> (ø)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/compare/92cb86051b59acb6b18115135a5b5db99b617d22...6737d16d1f0749554cafe9f8cf869fac1fcede0c?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `22.013% <0%> (-62.264%)` | `8% <0%> (-26%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/compare/92cb86051b59acb6b18115135a5b5db99b617d22...6737d16d1f0749554cafe9f8cf869fac1fcede0c?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/compare/92cb86051b59acb6b18115135a5b5db99b617d22...6737d16d1f0749554cafe9f8cf869fac1fcede0c?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `43.75% <0%> (-31.944%)` | `27% <0%> (-9%)` | |; | [...llbender/engine/spark/SparkCommandLineProgram.java](https://codecov.io/gh/broadinstitute/gatk/compare/92cb86051b59acb6b18115135a5b5db99b617d22...6737d16d1f0749554cafe9f8cf869fac1fcede0c?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb21tYW5kTGlu,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2433#issuecomment-283613034:2083,test,test,2083,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2433#issuecomment-283613034,1,['test'],['test']
Testability,"76.2/tests/index.html; https://s3.amazonaws.com/archive.travis-ci.org/jobs/94993317/log.txt; https://travis-ci.org/broadinstitute/gatk/jobs/94993317. Error is:. ```; testMDOrder[1](src/test/resources/org/broadinstitute/hellbender/tools/picard/sam/MarkDuplicates/mdOrderBug2.bam, src/test/resources/org/broadinstitute/hellbender/tools/picard/sam/MarkDuplicates/expected.mdOrderBug2.bam). java.lang.AssertionError: SAM file /tmp/markdups5286910037691954939.bam differs from expected output:src/test/resources/org/broadinstitute/hellbender/tools/picard/sam/MarkDuplicates/expected.mdOrderBug2.bam name differs. File 1: 20GAVAAXX100126:4:24:10635:52735 File 2: 20FUKAAXX100202:1:22:1193:123181 expected [null] but found [name differs. File 1: 20GAVAAXX100126:4:24:10635:52735 File 2: 20FUKAAXX100202:1:22:1193:123181]; at org.testng.Assert.fail(Assert.java:94); at org.testng.Assert.failNotSame(Assert.java:492); at org.testng.Assert.assertNull(Assert.java:428); at org.broadinstitute.hellbender.utils.test.SamAssertionUtils.assertSamsEqual(SamAssertionUtils.java:33); at org.broadinstitute.hellbender.utils.test.SamAssertionUtils.assertSamsEqual(SamAssertionUtils.java:59); at org.broadinstitute.hellbender.utils.test.SamAssertionUtils.assertEqualBamFiles(SamAssertionUtils.java:362); at org.broadinstitute.hellbender.utils.test.testers.AbstractMarkDuplicatesCommandLineProgramTest.testMDOrderImpl(AbstractMarkDuplicatesCommandLineProgramTest.java:604); at org.broadinstitute.hellbender.tools.spark.pipelines.MarkDuplicatesSparkIntegrationTest.testMDOrder(MarkDuplicatesSparkIntegrationTest.java:49); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174:1090,test,test,1090,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174,1,['test'],['test']
Testability,7738 17588 -150 ; ==============================================; Files 1154 1151 -3 ; Lines 64092 63666 -426 ; Branches 9757 9748 -9 ; ==============================================; - Hits 50988 50305 -683 ; - Misses 9214 9486 +272 ; + Partials 3890 3875 -15; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `70.707% <ø> (-13.116%)` | `27 <0> (-9)` | |; | [...e/hellbender/utils/test/testers/SamFileTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L3Rlc3RlcnMvU2FtRmlsZVRlc3Rlci5qYXZh) | `90.217% <ø> (ø)` | `30 <0> (ø)` | :arrow_down: |; | [.../hellbender/utils/test/testers/CleanSamTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L3Rlc3RlcnMvQ2xlYW5TYW1UZXN0ZXIuamF2YQ==) | `0% <0%> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...llbender/utils/test/SimpleIntervalTestFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1NpbXBsZUludGVydmFsVGVzdEZhY3RvcnkuamF2YQ==) | `100% <100%> (ø)` | `5 <2> (?)` | |; | [...ute/hellbender/utils/test/GenomicsDBTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0dlbm9taWNzREJUZXN0VXRpbHMuamF2YQ==) | `91.667% <100%> (-0.641%)` | `3 <0> (ø)` | |; | [...ils/test/testers/AbstractMarkDuplicatesTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRp,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-324298700:1513,test,test,1513,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-324298700,2,['test'],"['test', 'testers']"
Testability,"79b8a; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Wed Dec 6 10:56:24 2017 -0500. revert Dockerfile, change yml. commit 930d7486b7d2cf918fcb16dd03394bb9c9f0611b; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Wed Dec 6 10:34:46 2017 -0500. more Dockerfile. commit 94112131526b514ef254bcc2c50a239dbae35aa1; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Wed Dec 6 10:25:13 2017 -0500. more Dockerfile. commit 7d2646240a65f5c0f09f5f25f3e19e9d9bf004d9; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Wed Dec 6 10:06:11 2017 -0500. more Dockerfile. commit f1235c25aeba85570b5ce389a34975f1b7b5ec3c; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Wed Dec 6 09:39:46 2017 -0500. Dockerfile edit. commit 3df84dd4693f28e4e8b34fd33f877e99749dffce; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 5 16:08:06 2017 -0500. Update test PoNs. commit 2c3b20e62a1cba7af24c0b0846eb1629422f51e6; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 5 15:49:38 2017 -0500. Update test files. commit c65c6e9144ef396792364ab2e06b7b436bb97684; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 5 15:30:59 2017 -0500. Adding no-GC/do-GC WDL tests. commit 56451843066a456d9cf8e6eac55ae4df2c518ec3; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 5 12:51:17 2017 -0500. Updates to handle SAM header changes from sl_wgs_acnv_headers and updates to mb_gcnv_python_kernel. commit d02d04df684a2820308a1d1c2bfda4b7d1c5f05e; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Mon Nov 13 12:52:33 2017 -0500. Added CLIs and WDL for python gCNV pipeline. commit 66ed74b68375d43514ef84658e7a6c771ed9053c; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Wed Nov 15 01:50:03 2017 -0500. Polished code, ready for review; ; gCNV computational kernel (initial release); ; renaming gammas_s to psi_s to uniformity (sample-specific unexplained variance); ; renamed determine_ploidy_and_depth.py to cohort_determine_ploidy_and_depth.py; finite-temperature forward-backward",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598:9669,test,test,9669,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598,1,['test'],['test']
Testability,79ee628a95e90a74be03c2af4e4c563?src=pr&el=desc) will **increase** coverage by `0.065%`.; > The diff coverage is `81.538%`. ```diff; @@ Coverage Diff @@; ## master #3990 +/- ##; ===============================================; + Coverage 78.769% 78.835% +0.065% ; + Complexity 16501 16496 -5 ; ===============================================; Files 1065 1064 -1 ; Lines 58788 58671 -117 ; Branches 9578 9572 -6 ; ===============================================; - Hits 46307 46253 -54 ; + Misses 8754 8695 -59 ; + Partials 3727 3723 -4; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3990?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...oadinstitute/hellbender/engine/ReferenceShard.java](https://codecov.io/gh/broadinstitute/gatk/pull/3990/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUmVmZXJlbmNlU2hhcmQuamF2YQ==) | `81.25% <ø> (+2.989%)` | `8 <0> (-1)` | :arrow_down: |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3990/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `64.925% <ø> (-1.001%)` | `33 <0> (-2)` | |; | [...nder/engine/datasources/ReferenceHadoopSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/3990/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlSGFkb29wU291cmNlLmphdmE=) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...llbender/engine/spark/SparkCommandLineProgram.java](https://codecov.io/gh/broadinstitute/gatk/pull/3990/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb21tYW5kTGluZVByb2dyYW0uamF2YQ==) | `88.889% <ø> (-4.861%)` | `4 <0> (-3)` | |; | [...stitute/hellbender/engine/ReferenceFileSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/3990/diff?src=pr&el=tree#diff-c3JjL21haW4vamF,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3990#issuecomment-352498162:1253,test,test,1253,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3990#issuecomment-352498162,1,['test'],['test']
Testability,"7df05b/call-BenchmarkVCFTestSample/Benchmark/8e83736f-3023-4bee-9c42-36c836b75297/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/acc9e2ac-b10a-4d6a-b586-cd3e47f04e41/call-EXOME1SampleHeadToHead/BenchmarkComparison/a98aa003-bddd-492a-8691-dfa50191e2c6/call-BenchmarkVCFControlSample/Benchmark/a332ee8c-3de3-4a6f-b1de-7b273c094e84/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/acc9e2ac-b10a-4d6a-b586-cd3e47f04e41/call-EXOME1SampleHeadToHead/BenchmarkComparison/a98aa003-bddd-492a-8691-dfa50191e2c6/call-BenchmarkVCFTestSample/Benchmark/269b49fd-36aa-4381-a08a-a3f2a4586967/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""103.49216944444444"",; ""NIST controlHCsystemhours"": ""0.21042500000000003"",; ""NIST controlHCwallclockhours"": ""74.8884888888889"",; ""NIST controlHCwallclockmax"": ""3.995058333333333"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/acc9e2ac-b10a-4d6a-b586-cd3e47f04e41/call-NISTSampleHeadToHead/BenchmarkComparison/56974c24-19c8-4f87-b7b1-b71028109732/call-CONTROLRuntimeTask/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/acc9e2ac-b10a-4d6a-b586-cd3e47f04e41/call-NISTSampleHeadT",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099:19626,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,19626,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"7fb5bd/call-BenchmarkVCFTestSample/Benchmark/c718736b-bf86-491f-9f9c-56c07cbd0c90/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-EXOME1SampleHeadToHead/BenchmarkComparison/85b07a68-f04f-4396-80b4-f153b2d0020d/call-BenchmarkVCFControlSample/Benchmark/efb3b5ff-3860-46c3-8c6c-9141d1ff0e0a/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-EXOME1SampleHeadToHead/BenchmarkComparison/85b07a68-f04f-4396-80b4-f153b2d0020d/call-BenchmarkVCFTestSample/Benchmark/272d076b-7300-4ea4-bbf7-d63f80fad94b/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""108.95665833333332"",; ""NIST controlHCsystemhours"": ""0.21568055555555551"",; ""NIST controlHCwallclockhours"": ""78.62844166666666"",; ""NIST controlHCwallclockmax"": ""4.166558333333334"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-NISTSampleHeadToHead/BenchmarkComparison/043115ef-b68a-49a3-8272-8352b304c3aa/call-CONTROLRuntimeTask/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-NISTSampleHead",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441:19616,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,19616,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"7g 240.3g   1416 S  86.7 95.5   7398:14 java; ```. ```; #!/bin/bash -l; #$ -l mem_total=251; #$ -P casa; #$ -pe omp 32; #$ -l h_rt=240:00:00; module load miniconda/4.9.2; module load gatk/[4.2.6.1](http://4.2.6.1/); conda activate /share/pkg.7/gatk/[4.2.6.1/install/gatk-4.2.6.1](http://4.2.6.1/install/gatk-4.2.6.1). CHR=$1; DB=""genomicsDB.rb.chr$CHR""; rm -rf $DB; # mkdir -p $DB; # mkdir tmp; echo ""Processing chr$CHR""; echo ""NSLOTS: $NSLOTS""; # head sample_map.chr$CHR.reblock.list; head sample_map.chr$CHR; wc   sample_map.chr$CHR; gatk --java-options ""-Xmx150g -Xms16g"" \;        GenomicsDBImport \;        --sample-name-map sample_map.chr$CHR \;        --genomicsdb-workspace-path $DB \;        --genomicsdb-shared-posixfs-optimizations True\;        --tmp-dir tmp \;        --L chr$CHR\;        --batch-size 50 \;        --bypass-feature-reader\;        --reader-threads 5\;        --merge-input-intervals \;        --overwrite-existing-genomicsdb-workspace\;        --consolidate. ```; End of log on chr3. ```; 07:19:44.855 INFO  GenomicsDBImport - Done importing batch 38/65; 08:05:11.651 INFO  GenomicsDBImport - Done importing batch 39/65; 08:49:12.112 INFO  GenomicsDBImport - Done importing batch 40/65; 09:32:39.526 INFO  GenomicsDBImport - Done importing batch 41/65; 10:23:36.849 INFO  GenomicsDBImport - Done importing batch 42/65; 11:24:50.566 INFO  GenomicsDBImport - Done importing batch 43/65; 12:17:11.236 INFO  GenomicsDBImport - Done importing batch 44/65; 13:11:10.869 INFO  GenomicsDBImport - Done importing batch 45/65; 13:56:22.927 INFO  GenomicsDBImport - Done importing batch 46/65; 14:45:02.333 INFO  GenomicsDBImport - Done importing batch 47/65; 15:35:20.713 INFO  GenomicsDBImport - Done importing batch 48/65; 16:32:30.162 INFO  GenomicsDBImport - Done importing batch 49/65; 17:18:42.636 INFO  GenomicsDBImport - Done importing batch 50/65; 18:09:09.353 INFO  GenomicsDBImport - Done importing batch 51/65; 18:53:04.283 INFO  GenomicsDBImport - Done importing batch",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7968#issuecomment-1246785232:1652,log,log,1652,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7968#issuecomment-1246785232,1,['log'],['log']
Testability,"8 16:58:10 INFO org.spark_project.jetty.util.log: Logging initialized @8431ms; 19/02/18 16:58:11 INFO org.spark_project.jetty.server.Server: jetty-9.3.z-SNAPSHOT, build timestamp: unknown, git hash: unknown; 19/02/18 16:58:11 INFO org.spark_project.jetty.server.Server: Started @8536ms; 19/02/18 16:58:11 INFO org.spark_project.jetty.server.AbstractConnector: Started ServerConnector@45c90a05{HTTP/1.1,[http/1.1]}{0.0.0.0:4040}; 19/02/18 16:58:11 WARN org.apache.spark.scheduler.FairSchedulableBuilder: Fair Scheduler configuration file not found so jobs will be scheduled in FIFO order. To use fair scheduling, configure pools in fairscheduler.xml or set spark.scheduler.allocation.file to a file that contains the configuration.; 19/02/18 16:58:12 INFO org.apache.hadoop.yarn.client.RMProxy: Connecting to ResourceManager at gatk-test-2495f43b-04fc-49e7-aa0a-7108cc876246-m/10.240.0.11:8032; 19/02/18 16:58:13 INFO org.apache.hadoop.yarn.client.AHSProxy: Connecting to Application History server at gatk-test-2495f43b-04fc-49e7-aa0a-7108cc876246-m/10.240.0.11:10200; 19/02/18 16:58:15 INFO org.apache.hadoop.yarn.client.api.impl.YarnClientImpl: Submitted application application_1550508751046_0004; WARNING	2019-02-18 16:58:23	AsciiLineReader	Creating an indexable source for an AsciiFeatureCodec using a stream that is neither a PositionalBufferedStream nor a BlockCompressedInputStream; WARNING	2019-02-18 16:58:23	AsciiLineReader	Creating an indexable source for an AsciiFeatureCodec using a stream that is neither a PositionalBufferedStream nor a BlockCompressedInputStream; 19/02/18 16:58:25 INFO org.apache.hadoop.mapreduce.lib.input.FileInputFormat: Total input files to process : 1; 19/02/18 16:58:29 ERROR org.apache.spark.scheduler.TaskResultGetter: Exception while getting task result; com.esotericsoftware.kryo.KryoException: java.lang.NullPointerException; Serialization trace:; genotypes (htsjdk.variant.variantcontext.VariantContext); interval (org.broadinstitute.hellbender.engine.s",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3840#issuecomment-464825765:5180,test,test-,5180,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3840#issuecomment-464825765,1,['test'],['test-']
Testability,"8"",; ""TestWrapper.scattered_calling_intervals_list"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/wgs_scattered_calling_intervals.txt"",; ""TestWrapper.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/LCR_Hg38.interval_list"",; ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/HCR_hg38.bed""; ],; ""TestWrapper.stratLabels"": [; ""LCR"",; ""HCR""; ],; ""TestWrapper.truthLabel"": ""chm"",; ""TestWrapper.truthVcf"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/chm.full.m38.vcf.gz"",; ""TestWrapper.truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/chm.full.m38.vcf.gz.tbi"",; ""TestWrapper.vcfScoreField"": ""QUAL""; },; ""eval_input"": {; ""PlotROC.dataset_name"": ""CHMI_CHMI3_WGS1_downsampled"",; ""PlotROC.sample1_indel_HCR_roc_table"": ""test_output:TestWrapper.nonsnp_roc_table_HCR"",; ""PlotROC.sample1_indel_LCR_roc_table"": ""test_output:TestWrapper.nonsnp_roc_table_LCR"",; ""PlotROC.sample1_indel_roc_table"": ""test_output:TestWrapper.nonsnp_roc_table_all"",; ""PlotROC.sample1_snp_HCR_roc_table"": ""test_output:TestWrapper.snp_roc_table_HCR"",; ""PlotROC.sample1_snp_LCR_roc_table"": ""test_output:TestWrapper.snp_roc_table_LCR"",; ""PlotROC.sample1_snp_roc_table"": ""test_output:TestWrapper.nonsnp_roc_table_all"",; ""PlotROC.sample2_indel_HCR_roc_table"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/cached_dragen_sample_data/CHMI_CHMI3_WGS1_downsampled_DRAGEN_dragen_chm_HCR_vcfeval_non_snp_roc.tsv.gz"",; ""PlotROC.sample2_indel_LCR_roc_table"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/cached_dragen_sample_data/CHMI_CHMI3_WGS1_downsampled_DRAGEN_dragen_chm_LCR_vcfeval_non_snp_roc.tsv.gz"",; ""PlotROC.sample2_indel_roc_table"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/cached_dragen_sample_data/CHMI_CHMI3_WGS1_downsampled_DRAGEN_dragen_chm_vcfeval_non_snp_roc.tsv.gz"",; ""PlotROC.sample2_snp_HCR_roc_table"": ""gs://dsp-methods-carrot-data/test_data/Dragen_",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738147120:3150,Test,TestWrapper,3150,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738147120,2,['Test'],['TestWrapper']
Testability,8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-json\2.3.0.RELEASE\spring-boot-starter-json-2.3.0.RELEASE.jar;E:\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-databind-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:2655,log,logging,2655,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233,1,['log'],['logging']
Testability,"8.dict"",; ""FunctionalEquivalenceTest.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""FunctionalEquivalenceTest.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""FunctionalEquivalenceTest.replicate_no"": [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ],; ""gatk_docker"": ""image_build:gatk|4fa4b23a1b3756080aba2f1eecd791380b3921a6""; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_output:FunctionalEquivalenceTest.out_dataset"",; ""GatkDragenConcordanceEvaluation.drag",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135:4272,benchmark,benchmarking,4272,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135,2,['benchmark'],['benchmarking']
Testability,"8.dict"",; ""FunctionalEquivalenceTest.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""FunctionalEquivalenceTest.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""FunctionalEquivalenceTest.replicate_no"": [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ],; ""gatk_docker"": ""image_build:gatk|5cdd2eaebb27509947cde3dbd26ee9a3fce72352""; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_output:FunctionalEquivalenceTest.out_dataset"",; ""GatkDragenConcordanceEvaluation.drag",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659:4272,benchmark,benchmarking,4272,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659,2,['benchmark'],['benchmarking']
Testability,"8.dict"",; ""FunctionalEquivalenceTest.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""FunctionalEquivalenceTest.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""FunctionalEquivalenceTest.replicate_no"": [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ]; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_output:FunctionalEquivalenceTest.out_dataset"",; ""GatkDragenConcordanceEvaluation.docker_placeholder"": ""image_build:gatk|5cdd2eaebb27509947cde3dbd26ee9a3fce72352"",",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440:4375,benchmark,benchmarking,4375,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440,2,['benchmark'],['benchmarking']
Testability,"8.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""7b1f3c2d-059a-4391-92d7-b2f88045d8d5"",; ""eval_cromwell_job_id"": ""ba9f32d5-7b46-462c-8d1f-5692eee05534"",; ""created_at"": ""2023-08-21T22:38:12.285936"",; ""created_by"": null,; ""finished_at"": ""2023-08-22T09:23:01.973"",; ""results"": {; ""CHM controlHCprocesshours"": ""90.613975"",; ""CHM controlHCsystemhours"": ""0.19898611111111109"",; ""CHM controlHCwallclockhours"": ""63.943677777777786"",; ""CHM controlHCwallclockmax"": ""3.1089944444444444"",; ""CHM controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-CHMSampleHeadToHead/BenchmarkComparison/b7ddd5f2-fded-4076-b163-33ad637fb5bd/call-CONTROLRuntimeTask/monitoring.pdf"",; ""CHM controlindelF1Score"": ""0.8724"",; ""CHM controlindelPrecision"": ""0.8814"",; ""CHM controlsnpF1Score"": ""0.9784"",; ""CHM controlsnpPrecision"": ""0.9706"",; ""CHM controlsnpRecall"": ""0.9863"",; ""CHM controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-CHMSampleHeadToHead/BenchmarkComparison/b7ddd5f2-fded-4076-b163-33ad637fb5bd/call-BenchmarkVCFControlSample/Benchmark/10080eab-b0ad-4752-80cb-fc6d34bd9ad9/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""93.63756388888888"",; ""CHM evalHCsystemhours"": ""0.6379805555555556"",; ""CHM evalHCwallclockhours"": ""70.50882222222222"",; ""CHM evalHCwallclockmax"": ""3.5186027777777777"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/c",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441:17162,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,17162,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"80k is what I had easy access to and what I'm the most invested in; benchmarking right now. Master does fine with the same params. It's slow,; but no failures. We decided to split into 1000 shards (Eric is convinced; that there's a substantial startup cost per shard so we do better in total; cpu-hours on fewer shards) and each of those takes about 24 hours. On Thu, May 10, 2018, 11:09 AM Louis Bergelson <notifications@github.com>; wrote:. > @ldgauthier <https://github.com/ldgauthier> You're running 80k? Does that; > run using the current master version of GATK? I assumed you were rerunning; > a 20k shard with the same settings we had used for the 20k.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/4645#issuecomment-388082988>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdLdlQoWlC8kjRvJJermDYEjltVUFks5txFgigaJpZM4TOtSm>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4645#issuecomment-388183296:68,benchmark,benchmarking,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4645#issuecomment-388183296,1,['benchmark'],['benchmarking']
Testability,"8419ce/call-BenchmarkVCFTestSample/Benchmark/4353eabb-b85f-4cce-a275-4dba68f9d644/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/beb77715-227e-4dbd-803f-4458c83607c8/call-EXOME1SampleHeadToHead/BenchmarkComparison/bec4eb1e-a99f-4e27-a91c-a56274c3824a/call-BenchmarkVCFControlSample/Benchmark/4d248a53-86e2-46f5-9d28-3364c82b9d0c/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/beb77715-227e-4dbd-803f-4458c83607c8/call-EXOME1SampleHeadToHead/BenchmarkComparison/bec4eb1e-a99f-4e27-a91c-a56274c3824a/call-BenchmarkVCFTestSample/Benchmark/fcd023fe-e278-475d-8fce-613b57518972/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""96.55857222222222"",; ""NIST controlHCsystemhours"": ""0.1707444444444444"",; ""NIST controlHCwallclockhours"": ""69.28645"",; ""NIST controlHCwallclockmax"": ""3.8631972222222224"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/beb77715-227e-4dbd-803f-4458c83607c8/call-NISTSampleHeadToHead/BenchmarkComparison/243c7bf2-b0d7-48ed-acd0-e2ebd74b9fd3/call-CONTROLRuntimeTask/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/beb77715-227e-4dbd-803f-4458c83607c8/call-NISTSampleHeadToHead/Ben",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1546478988:19656,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,19656,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1546478988,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,88); scala.collection.Iterator$$anon$14.hasNext(Iterator.scala:388); scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:327); scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:327); scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:327); scala.collection.convert.Wrappers$IteratorWrapper.hasNext(Wrappers.scala:29); org.broadinstitute.hellbender.tools.spark.transforms.BaseRecalibratorSparkFn.lambda$apply$26a6df3e$1(BaseRecalibratorSparkFn.java:27); org.broadinstitute.hellbender.tools.spark.transforms.BaseRecalibratorSparkFn$$Lambda$65/1110390847.call(Unknown Source); ```. and . ```; org.broadinstitute.hellbender.engine.filters.ReadFilter.lambda$and$cbfb947b$1(ReadFilter.java:31); org.broadinstitute.hellbender.engine.filters.ReadFilter$$Lambda$33/1797796358.test(Unknown Source); org.broadinstitute.hellbender.engine.filters.ReadFilter.lambda$and$cbfb947b$1(ReadFilter.java:31); org.broadinstitute.hellbender.engine.filters.ReadFilter$$Lambda$33/1797796358.test(Unknown Source); org.broadinstitute.hellbender.engine.filters.ReadFilter.lambda$and$cbfb947b$1(ReadFilter.java:31); org.broadinstitute.hellbender.engine.filters.ReadFilter$$Lambda$33/1797796358.test(Unknown Source); org.broadinstitute.hellbender.engine.filters.ReadFilter.lambda$and$cbfb947b$1(ReadFilter.java:31); org.broadinstitute.hellbender.engine.filters.ReadFilter$$Lambda$33/1797796358.test(Unknown Source); org.broadinstitute.hellbender.engine.filters.WellformedReadFilter.test(WellformedReadFilter.java:31); org.broadinstitute.hellbender.engine.spark.GATKSparkTool.lambda$getReads$e4b35a40$1(GATKSparkTool.java:196); org.broadinstitute.hellbender.engine.spark.GATKSparkTool$$Lambda$39/818029262.call(Unknown Source); org.apache.spark.api.java.JavaRDD$$anonfun$filter$1.apply(JavaRDD.scala:78); org.apache.spark.api.java.JavaRDD$$anonfun$filter$1.apply(JavaRDD.scala:78); scala.collection.Iterator$$anon$14.hasNext(Iterator.scala:390); scala.collection.Iterator$$anon$14.hasNext(Iterator.scala:388); ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1657#issuecomment-203742647:2854,test,test,2854,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1657#issuecomment-203742647,1,['test'],['test']
Testability,"8851b03-1abb-4622-b481-5425ce01418b/call-BenchmarkVCFControlSample/Benchmark/7730c81c-23aa-4802-9fc0-34528b6158d4/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-EXOME1SampleHeadToHead/BenchmarkComparison/a8851b03-1abb-4622-b481-5425ce01418b/call-BenchmarkVCFTestSample/Benchmark/7d946274-eb9e-4be8-b04f-c1b3399d4068/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""108.55041388888888"",; ""NIST controlHCsystemhours"": ""0.2213388888888889"",; ""NIST controlHCwallclockhours"": ""78.14672499999998"",; ""NIST controlHCwallclockmax"": ""4.031741666666667"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-NISTSampleHeadToHead/BenchmarkComparison/3238c3ac-5e7c-4130-bb68-26871868b49e/call-CONTROLRuntimeTask/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-NISTSampleHeadToHead/BenchmarkComparison/3238c3ac-5e7c-4130-bb68-26871868b49e/call-BenchmarkVCFControlSample/Benchmark/4121c5eb-9771-43ee-84f1-262115dcf151/call-CombineSummaries/summary.csv"",; ""NIST evalHCprocesshours"": ""93.23600000000005"",; ""NIST evalHCsystemhours"": ""0.2127972222222222"",; ""NIST evalHCwallclockhours"": ""62.422702777777786"",; ""NIST evalHCwallclockmax"": ""3.1571083333333334"",; ""NIST evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497:20182,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,20182,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,8d8a55b?src=pr&el=desc) will **decrease** coverage by `0.012%`.; > The diff coverage is `n/a`. ```diff; @@ Coverage Diff @@; ## master #5566 +/- ##; ===============================================; - Coverage 87.046% 87.034% -0.012% ; - Complexity 31524 31535 +11 ; ===============================================; Files 1928 1930 +2 ; Lines 145340 145443 +103 ; Branches 16089 16090 +1 ; ===============================================; + Hits 126513 126585 +72 ; - Misses 12966 12999 +33 ; + Partials 5861 5859 -2; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5566?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...r/tools/walkers/mutect/Mutect2FilteringEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NdXRlY3QyRmlsdGVyaW5nRW5naW5lLmphdmE=) | `80.743% <0%> (-4.581%)` | `89% <0%> (ø)` | |; | [...ute/hellbender/utils/test/FuncotatorTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Z1bmNvdGF0b3JUZXN0VXRpbHMuamF2YQ==) | `95.161% <0%> (-3.084%)` | `7% <0%> (+1%)` | |; | [...GATKPlugin/GATKReadFilterPluginDescriptorTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL0dBVEtQbHVnaW4vR0FUS1JlYWRGaWx0ZXJQbHVnaW5EZXNjcmlwdG9yVGVzdC5qYXZh) | `88.62% <0%> (-1.76%)` | `48% <0%> (+1%)` | |; | [...Plugin/GATKAnnotationPluginDescriptorUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL0dBVEtQbHVnaW4vR0FUS0Fubm90YXRpb25QbHVnaW5EZXNjcmlwdG9yVW5pdFRlc3QuamF2YQ==) | `88.235% <0%> (-1.43%)` | `58% <0%> (+1%)` | |; | [.../tools/walkers/haplotypecaller/RefVsAnyResult.java](https://codecov.io/gh/b,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5566#issuecomment-452843310:1266,test,test,1266,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5566#issuecomment-452843310,1,['test'],['test']
Testability,"9.1 85227000 1443218.8. 20:32:01.576 INFO ProgressMeter - 1:169321662 59.4 85240000 1434518.9. 20:32:22.203 INFO ProgressMeter - 1:169334662 59.8 85253000 1426484.3. 20:32:43.007 INFO ProgressMeter - 1:169341665 60.1 85260000 1418372.5. 20:33:04.435 INFO ProgressMeter - 1:169350665 60.5 85269000 1410144.2. 20:33:29.473 INFO CollectAllelicCounts - Shutting down engine. [October 5, 2019 8:33:29 PM UTC] org.broadinstitute.hellbender.tools.copynumber.CollectAllelicCounts done. Elapsed time: 60.94 minutes. Runtime.totalMemory()=5,285,347,328. . . Exception in thread ""main"" java.lang.OutOfMemoryError: GC overhead limit exceeded. . . at java.util.Collections.unmodifiableList(Collections.java:1287). at htsjdk.samtools.Cigar.getCigarElements(Cigar.java:54). at org.broadinstitute.hellbender.utils.read.SAMRecordToGATKReadAdapter.getCigarElements(SAMRecordToGATKReadAdapter.java:336). at org.broadinstitute.hellbender.engine.filters.ReadFilterLibrary$ReadLengthEqualsCigarLengthReadFilter.test(ReadFilterLibrary.java:217). at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70). at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70). at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70). at org.broadinstitute.hellbender.engine.filters.WellformedReadFilter.test(WellformedReadFilter.java:77). at org.broadinstitute.hellbender.engine.filters.CountingReadFilter.test(CountingReadFilter.java:126) . . . From: Louis Bergelson <notifications@github.com> ; Sent: Thursday, October 31, 2019 12:24 PM; To: broadinstitute/gatk <gatk@noreply.github.com>; Cc: rdbremel <rdbremel017@gmail.com>; Mention <mention@noreply.github.com>; Subject: Re: [broadinstitute/gatk] Funcotator shuts down (#6182). . I thought we'd added that to the retry list. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub <https://github.com/broadinstitu",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6182#issuecomment-548929777:1783,test,test,1783,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6182#issuecomment-548929777,1,['test'],['test']
Testability,917082222a07e2b042...f539662b2a136507a34ea2da64e0445d6df3469d?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL0NvbW1hbmRMaW5lUHJvZ3JhbS5qYXZh) | `93.258% <100%> (ø)` | `29 <1> (ø)` | :x: |; | [...institute/hellbender/utils/gcs/GATKGCSOptions.java](https://codecov.io/gh/broadinstitute/gatk/compare/dfa9cf1a420490285b7be7917082222a07e2b042...f539662b2a136507a34ea2da64e0445d6df3469d?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvR0FUS0dDU09wdGlvbnMuamF2YQ==) | `0% <0%> (-66.667%)` | `0% <0%> (ø)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/compare/dfa9cf1a420490285b7be7917082222a07e2b042...f539662b2a136507a34ea2da64e0445d6df3469d?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `22.013% <0%> (-62.264%)` | `8% <0%> (-26%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/compare/dfa9cf1a420490285b7be7917082222a07e2b042...f539662b2a136507a34ea2da64e0445d6df3469d?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/compare/dfa9cf1a420490285b7be7917082222a07e2b042...f539662b2a136507a34ea2da64e0445d6df3469d?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `43.75% <0%> (-29.861%)` | `27% <0%> (-9%)` | |; | [...llbender/engine/spark/SparkCommandLineProgram.java](https://codecov.io/gh/broadinstitute/gatk/compare/dfa9cf1a420490285b7be7917082222a07e2b042...f539662b2a136507a34ea2da64e0445d6df3469d?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb21tYW5kTGlu,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2455#issuecomment-285859315:2048,test,test,2048,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2455#issuecomment-285859315,1,['test'],['test']
Testability,92ac698407ff0...71c03a3e81f2df635e709823e1c1de96a2f5ffb5?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvRmVhdHVyZVdhbGtlci5qYXZh) | `89.655% <100%> (+6.897%)` | `9 <2> (+1)` | :arrow_up: |; | [...institute/hellbender/utils/gcs/GATKGCSOptions.java](https://codecov.io/gh/broadinstitute/gatk/compare/e1e71d7091ee703e547842d025e92ac698407ff0...71c03a3e81f2df635e709823e1c1de96a2f5ffb5?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvR0FUS0dDU09wdGlvbnMuamF2YQ==) | `0% <0%> (-66.667%)` | `0% <0%> (ø)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/compare/e1e71d7091ee703e547842d025e92ac698407ff0...71c03a3e81f2df635e709823e1c1de96a2f5ffb5?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `22.013% <0%> (-62.264%)` | `8% <0%> (-26%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/compare/e1e71d7091ee703e547842d025e92ac698407ff0...71c03a3e81f2df635e709823e1c1de96a2f5ffb5?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/compare/e1e71d7091ee703e547842d025e92ac698407ff0...71c03a3e81f2df635e709823e1c1de96a2f5ffb5?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `43.75% <0%> (-29.861%)` | `27% <0%> (-9%)` | |; | [...llbender/engine/spark/SparkCommandLineProgram.java](https://codecov.io/gh/broadinstitute/gatk/compare/e1e71d7091ee703e547842d025e92ac698407ff0...71c03a3e81f2df635e709823e1c1de96a2f5ffb5?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb21tYW5kTGlu,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2467#issuecomment-287565894:2408,test,test,2408,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2467#issuecomment-287565894,1,['test'],['test']
Testability,960189E7] but found [17960189]; Expected :1.7960189E7; Actual :17960189; <Click to see difference>. 	at org.testng.Assert.fail(Assert.java:94); 	at org.testng.Assert.failNotEquals(Assert.java:513); 	at org.testng.Assert.assertEqualsImpl(Assert.java:135); 	at org.testng.Assert.assertEquals(Assert.java:116); 	at org.broadinstitute.hellbender.utils.test.VariantContextTestUtils.assertAttributeEquals(VariantContextTestUtils.java:24); 	at org.broadinstitute.hellbender.utils.test.VariantContextTestUtils.assertAttributesEquals(VariantContextTestUtils.java:101); 	at org.broadinstitute.hellbender.utils.test.VariantContextTestUtils.assertVariantContextsAreEqual(VariantContextTestUtils.java:160); 	at org.broadinstitute.hellbender.tools.GenomicsDBImportIntegrationTest.lambda$testGenomicsDBImporter$0(GenomicsDBImportIntegrationTest.java:82); 	at org.broadinstitute.hellbender.tools.GenomicsDBImportIntegrationTest$$Lambda$57/1926180325.accept(Unknown Source); 	at org.broadinstitute.hellbender.utils.test.GenomicsDBTestUtils.assertCondition(GenomicsDBTestUtils.java:51); 	at org.broadinstitute.hellbender.tools.GenomicsDBImportIntegrationTest.testGenomicsDBImporter(GenomicsDBImportIntegrationTest.java:82); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:483); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112); 	at org.testng.TestRunner.privateRun(TestRunne,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-295418143:1051,test,test,1051,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-295418143,1,['test'],['test']
Testability,966](https://travis-ci.com/broadinstitute/gatk/builds/224227338); Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbend,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7221#issuecomment-827314679:1036,test,tests,1036,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7221#issuecomment-827314679,2,['test'],"['test', 'tests']"
Testability,96b872e8-26c0-4406-a7d0-addf04f4ad0e%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|78.10857222222224|; |CHM evalHCsystemhours|0.28728055555555554|; |CHM evalHCwallclockhours|52.84132777777778|; |CHM evalHCwallclockmax|2.9151722222222225|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F81dbf637-d90c-4111-93b9-9cec426c5a39%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F3609bc35-c943-4006-8b6f-9d71e6c68ef5%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; |CHM evalsnpF1Score|0.9784|; |CHM evalsnpPrecision|0.9706|; |CHM evalsnpRecall|0.9863|; |CHM evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F81dbf637-d90c-4111-93b9-9cec426c5a39%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F3609bc35-c943-4006-8b6f-9d71e6c68ef5%2Fcall-BenchmarkVCFTestSample%2FBenchmark%2Fa2486748-6d71-463f-bf78-84627e64f2d1%2Fcall-CombineSummaries%2Fsummary.csv)|; |EXOME1 controlindelF1Score|0.727|; |EXOME1 controlindelPrecision|0.632|; |EXOME1 controlsnpF1Score|0.9878|; |EXOME1 controlsnpPrecision|0.9815|; |EXOME1 controlsnpRecall|0.9941|; |EXOME1 controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F81dbf637-d90c-4111-93b9-9cec426c5a39%2Fcall-EXOME1SampleHeadToHead%2FBenchmarkComparison%2Fa8851b03-1abb-4622-b481-5425ce01418b%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2F7730c81c-23aa-4802-9fc0-34528b6158d4%2Fcall-CombineSummaries%2Fsummary.csv)|; |EXOME1 evalindelF1Score|0.727|; |EXOME1 evalindelPrecision|0.632|; |EXOME1 evalsnpF1Score|0.9878|; |EXOME1 evalsnpPrecision|0.9815|; |EXOME1 evalsnpRecall|0.9941|; |EXOME1 evalsummary|[View in the GCS Console](,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497:2215,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,2215,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497,2,['Benchmark'],"['BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,98 +/- ##; ===============================================; + Coverage 79.721% 79.721% +0.001% ; - Complexity 18162 18189 +27 ; ===============================================; Files 1223 1223 ; Lines 66649 66735 +86 ; Branches 10409 10426 +17 ; ===============================================; + Hits 53133 53202 +69 ; - Misses 9309 9317 +8 ; - Partials 4207 4216 +9; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3598?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...tools/walkers/genotyper/AlleleSubsettingUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3598?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2dlbm90eXBlci9BbGxlbGVTdWJzZXR0aW5nVXRpbHMuamF2YQ==) | `88.596% <ø> (ø)` | `43 <0> (ø)` | :arrow_down: |; | [...e/hellbender/utils/variant/GATKVCFHeaderLines.java](https://codecov.io/gh/broadinstitute/gatk/pull/3598?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy92YXJpYW50L0dBVEtWQ0ZIZWFkZXJMaW5lcy5qYXZh) | `99.281% <100%> (+0.016%)` | `10 <3> (+3)` | :arrow_up: |; | [...hellbender/utils/test/VariantContextTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3598?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1ZhcmlhbnRDb250ZXh0VGVzdFV0aWxzLmphdmE=) | `79.602% <79.31%> (-0.906%)` | `49 <24> (+24)` | |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/3598?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb250ZXh0RmFjdG9yeS5qYXZh) | `71.233% <0%> (-2.74%)` | `11% <0%> (ø)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3598?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `79.87% <0%> (+1.948%)` | `39% <0%> (ø)` | :arrow_down: |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3598#issuecomment-330959993:1556,test,test,1556,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3598#issuecomment-330959993,1,['test'],['test']
Testability,"98; @SQ	SN:chrUn_gl000220	LN:161802; @SQ	SN:chrUn_gl000221	LN:155397; @SQ	SN:chrUn_gl000222	LN:186861; @SQ	SN:chrUn_gl000223	LN:180455; @SQ	SN:chrUn_gl000224	LN:179693; @SQ	SN:chrUn_gl000225	LN:211173; @SQ	SN:chrUn_gl000226	LN:15008; @SQ	SN:chrUn_gl000227	LN:128374; @SQ	SN:chrUn_gl000228	LN:129120; @SQ	SN:chrUn_gl000229	LN:19913; @SQ	SN:chrUn_gl000230	LN:43691; @SQ	SN:chrUn_gl000231	LN:27386; @SQ	SN:chrUn_gl000232	LN:40652; @SQ	SN:chrUn_gl000233	LN:45941; @SQ	SN:chrUn_gl000234	LN:40531; @SQ	SN:chrUn_gl000235	LN:34474; @SQ	SN:chrUn_gl000236	LN:41934; @SQ	SN:chrUn_gl000237	LN:45867; @SQ	SN:chrUn_gl000238	LN:39939; @SQ	SN:chrUn_gl000239	LN:33824; @SQ	SN:chrUn_gl000240	LN:41933; @SQ	SN:chrUn_gl000241	LN:42152; @SQ	SN:chrUn_gl000242	LN:43523; @SQ	SN:chrUn_gl000243	LN:43341; @SQ	SN:chrUn_gl000244	LN:39929; @SQ	SN:chrUn_gl000245	LN:36651; @SQ	SN:chrUn_gl000246	LN:38154; @SQ	SN:chrUn_gl000247	LN:36422; @SQ	SN:chrUn_gl000248	LN:39786; @SQ	SN:chrUn_gl000249	LN:38502; @RG	ID:test-sample	SM:test-sample	PL:ILLUMINA; A00226:391:HKFF3DRXX:1:2218:20229:31485	16	chr1	26644464	60	70M18D65M16S	*	0	0	CACCTAAAAAGCTGCTACCAAGACAGCCACGAAGATCCTACCAAAATGAAGCGCTTCCTCTTCCTCCTACCTATGGTACAGGTAAGAGTAACGCCTGGCACCACTGCCAGGACTCCCCAAGGTTGCTTGGCATGGGAAGGGACTACTTCAA	FFF:FFFF,FFF,FFFFFFF,:F::FFFFFFFFFFFFF,FFFF:::FFFFFFFF,FFFFF,FFFFFF,,FFFFFF::FFFFFFFFFFFFFFFFFF:FFFFF:FF,FFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF	MD:Z:70^TCACCATCAGCCTCCTGG0T17C31A14	RG:Z:test-sample	NM:i:21	AS:i:96	XS:i:20; A00226:391:HKFF3DRXX:1:2218:20419:31532	16	chr1	26644464	60	70M18D65M16S	*	0	0	CACCTAAAAAGCTGCTACCAAGACAGCCACGAAGATCCTACCAAAATGAAGCGCTTCCTCTTCCTCCGACCTATGGTACAGGTAAGAGTAACGCCTGGCACCACTGCCAGGACTCCCCAAGGTTGCTTGGCATGGGAAGGGACTACTTCAA	FFFFFFFFFFFFFFFFFFFFFFFFFF:FFFF:FFFFFFFFFFFFFFFFFFFFFF,FFFFF:FFFFFF,:FFF,FFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF	MD:Z:67T2^TCACCATCAGCCTCCTGG0T17C31A14	RG:Z:test-sample	NM:i:22	AS:i:91	XS:i:0; A00226:391:HKFF3DRXX:1:2246:13404:22294	16	chr1	26644472",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6733#issuecomment-667631472:3495,test,test-sample,3495,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6733#issuecomment-667631472,1,['test'],['test-sample']
Testability,"98aa003-bddd-492a-8691-dfa50191e2c6/call-BenchmarkVCFControlSample/Benchmark/a332ee8c-3de3-4a6f-b1de-7b273c094e84/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/acc9e2ac-b10a-4d6a-b586-cd3e47f04e41/call-EXOME1SampleHeadToHead/BenchmarkComparison/a98aa003-bddd-492a-8691-dfa50191e2c6/call-BenchmarkVCFTestSample/Benchmark/269b49fd-36aa-4381-a08a-a3f2a4586967/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""103.49216944444444"",; ""NIST controlHCsystemhours"": ""0.21042500000000003"",; ""NIST controlHCwallclockhours"": ""74.8884888888889"",; ""NIST controlHCwallclockmax"": ""3.995058333333333"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/acc9e2ac-b10a-4d6a-b586-cd3e47f04e41/call-NISTSampleHeadToHead/BenchmarkComparison/56974c24-19c8-4f87-b7b1-b71028109732/call-CONTROLRuntimeTask/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/acc9e2ac-b10a-4d6a-b586-cd3e47f04e41/call-NISTSampleHeadToHead/BenchmarkComparison/56974c24-19c8-4f87-b7b1-b71028109732/call-BenchmarkVCFControlSample/Benchmark/670f9cb4-5bb0-48e2-95c9-15a2e1ae7dee/call-CombineSummaries/summary.csv"",; ""NIST evalHCprocesshours"": ""103.23083611111107"",; ""NIST evalHCsystemhours"": ""0.2083694444444444"",; ""NIST evalHCwallclockhours"": ""76.16374166666664"",; ""NIST evalHCwallclockmax"": ""3.743883333333333"",; ""NIST evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/acc9e2ac-b10a-4d6a-b586-c",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099:20177,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,20177,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"9M274H""), true, 60, 23, 254, AlnModType.NONE);; final AlignmentInterval region3 = new AlignmentInterval(new SimpleInterval(""20"", 1, 413), 613, 1025, TextCigarCodec.decode(""612H413M""), true, 60, 0, 413, AlnModType.NONE);. final AlignedContig alignedContig = new AlignedContig(""asm00001:tig0001"", contigSequence, Arrays.asList(region0, region1, region2, region3), false);. final List<ChimericAlignment> assembledBreakpointsFromAlignmentIntervals = ChimericAlignment.parseOneContig(alignedContig, SVDiscoveryTestDataProvider.seqDict, true, StructuralVariationDiscoveryArgumentCollection.DiscoverVariantsFromContigsAlignmentsSparkArgumentCollection.DEFAULT_MIN_ALIGNMENT_LENGTH, StructuralVariationDiscoveryArgumentCollection.DiscoverVariantsFromContigsAlignmentsSparkArgumentCollection.CHIMERIC_ALIGNMENTS_HIGHMQ_THRESHOLD, true);. Assert.assertEquals(assembledBreakpointsFromAlignmentIntervals.size(), 1);; final ChimericAlignment chimericAlignment = assembledBreakpointsFromAlignmentIntervals.get(0);; Assert.assertEquals(chimericAlignment.sourceContigName, ""asm00001:tig0001"");; final NovelAdjacencyReferenceLocations breakpoints = new NovelAdjacencyReferenceLocations(chimericAlignment, contigSequence, SVDiscoveryTestDataProvider.seqDict);; }; ```. In versions of the code prior to #3752 (I think) this set of alignments was being filtered out by the method `isNotSimpleTranslocation` in the `parseOneContig` method of `ChimericAlignment`. Now that check's logic has changed and `isLikelySimpleTranslocation` returns false instead of true and so this alignment is not being filtered out any more. . When it gets to `NovelAdjacencyReferenceLocations.TanDupBreakpointsInference()` both `upstreamBreakpointRefPos` and `downstreamBreakpointRefPos` are being set to zero. It's not immediately clear to me how to fix this. A few thoughts:. - Are we supposed to be processing this `ChimericAlignment` through the main code path right now? ; - Why do we subtract 1 from the start position of the `rightRefe",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3874#issuecomment-347627504:2804,Assert,Assert,2804,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3874#issuecomment-347627504,1,['Assert'],['Assert']
Testability,"9] malloc+0x169`: . ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x000014cfb1d504f9, pid=1182729, tid=1195264; #; # JRE version: OpenJDK Runtime Environment (17.0.3) (build 17.0.3-internal+0-adhoc..src); # Java VM: OpenJDK 64-Bit Server VM (17.0.3-internal+0-adhoc..src, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64); # Problematic frame:; # C [libc.so.6+0xaf4f9] malloc+0x169; #; # Core dump will be written. Default location: Core dumps may be processed with ""/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h"" (or dumping to /gpfs/gpfs_de6000/home/dalegre/projects/1000-Genomes/jointcalling-test/goast_workflows/JointCalling/test_samples-1000.1.3/core.1182729); #; # If you would like to submit a bug report, please visit:; # https://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; [dalegre@login4601 fdone]$ head -n 20 hs_err_pid1182729.log; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x000014cfb1d504f9, pid=1182729, tid=1195264; #; # JRE version: OpenJDK Runtime Environment (17.0.3) (build 17.0.3-internal+0-adhoc..src); # Java VM: OpenJDK 64-Bit Server VM (17.0.3-internal+0-adhoc..src, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64); # Problematic frame:; # C [libc.so.6+0xaf4f9] malloc+0x169; #; # Core dump will be written. Default location: Core dumps may be processed with ""/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h"" (or dumping to /gpfs/gpfs_de6000/home/dalegre/projects/1000-Genomes/jointcalling-test/goast_workflows/JointCalling/test_samples-1000.1.3/core.1182729); #; # If you would like to submit a bug report, please visit:; # https://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #. ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8683#issuecomment-1936285520:1197,log,log,1197,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8683#issuecomment-1936285520,2,"['log', 'test']","['log', 'test']"
Testability,9f8a6cdb6e87...b1802b27996e3b0ee8a1b4a035a8ac78282b8666?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvQXNzZW1ibHlSZWdpb25XYWxrZXJTcGFyay5qYXZh) | `0% <ø> (-90.566%)` | `0% <ø> (ø)` | |; | [...institute/hellbender/utils/gcs/GATKGCSOptions.java](https://codecov.io/gh/broadinstitute/gatk/compare/14f73e217970a1c53092dee88c409f8a6cdb6e87...b1802b27996e3b0ee8a1b4a035a8ac78282b8666?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvR0FUS0dDU09wdGlvbnMuamF2YQ==) | `0% <ø> (-66.667%)` | `0% <ø> (ø)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/compare/14f73e217970a1c53092dee88c409f8a6cdb6e87...b1802b27996e3b0ee8a1b4a035a8ac78282b8666?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `22.013% <ø> (-62.264%)` | `8% <ø> (+8%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/compare/14f73e217970a1c53092dee88c409f8a6cdb6e87...b1802b27996e3b0ee8a1b4a035a8ac78282b8666?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <ø> (-60.87%)` | `2% <ø> (+2%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/compare/14f73e217970a1c53092dee88c409f8a6cdb6e87...b1802b27996e3b0ee8a1b4a035a8ac78282b8666?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `44.444% <ø> (-29.861%)` | `28% <ø> (+28%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/compare/14f73e217970a1c53092dee88c409f8a6cdb6e87...b1802b27996e3b0ee8a1b4a035a8ac78282b8666?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2385#issuecomment-279409892:3578,test,test,3578,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2385#issuecomment-279409892,1,['test'],['test']
Testability,9hbGxlbGVzcGVjaWZpYy9BU19RdWFsQnlEZXB0aC5qYXZh) | `11.321% <0%> (-74.394%)` | `6% <0%> (ø)` | |; | [...institute/hellbender/utils/gcs/GATKGCSOptions.java](https://codecov.io/gh/broadinstitute/gatk/pull/3694?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvR0FUS0dDU09wdGlvbnMuamF2YQ==) | `0% <0%> (-66.667%)` | `0% <0%> (ø)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3694?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/3694?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `22.013% <0%> (-62.264%)` | `8% <0%> (-26%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/3694?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...rs/annotator/allelespecific/AS\_StrandBiasTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3694?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9hbGxlbGVzcGVjaWZpYy9BU19TdHJhbmRCaWFzVGVzdC5qYXZh) | `54.331% <0%> (-29.003%)` | `32% <0%> (-1%)` | |; | [...kers/annotator/allelespecific/AS\_FisherStrand.java](https://codecov.io/gh/broadinstitute/gatk/pull/3694?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9hbGxlbGVzcGVjaWZpYy9BU19GaXNoZXJTdHJhbmQuamF2YQ==) | `12.5% <0%> (-27.5%)` | `2% <0%> (ø)` | |; | [...s/annotator/allelespecific/AS\_StrandOddsRatio.java](https://codecov.io/gh/broadinstitute/gatk/pull/36,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3694#issuecomment-336936118:2462,test,test,2462,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3694#issuecomment-336936118,1,['test'],['test']
Testability,": Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 10:20:30 2017 -0500. the proper python environment yml for mkl and open -- leads to orders of magnitude speedup!. commit fea6bf874e0b62262a3b1d239ce4d76792d5c416; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 09:31:43 2017 -0500. revert. commit 456c53f88d01b603f4175d8896a0dac036af03f8; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 08:17:22 2017 -0500. enabled openmp g++ linking in theano. commit e2afef14ddb957f2dbdea76fd783d3bfb8d7a64e; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 08:04:19 2017 -0500. mkl. commit 43e2a65201286161fcd5bfe7dbb21ae888e19dac; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 06:56:20 2017 -0500. added cpu argument for germline tasks. commit 4433a62c2173c7f29d0f264c084bbaf2f6738782; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 02:45:38 2017 -0500. revert travis yml forks; verbose logging germline wdl. commit ae05801e33c37b3bf2685fba202032a270804873; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Fri Dec 8 00:55:14 2017 -0500. updated somatic PoNs for PreprocessIntervals drop Ns. commit cff64984d9fb42364001bda4c73d54cf68d85a5c; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 00:37:24 2017 -0500. sudo travis yml. commit 89025941febd2089d426cfa1e0f0aa6a6712e2a9; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 00:23:22 2017 -0500. travis/Docker config update (g++-6, Miniconda3); python test group assignment. commit 31f96398106c2b8577b8c25d110abea3ebe7f836; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 20:44:53 2017 -0500. WDL test bugfix. commit 9b2fb820536ec355bea0256471bd093d547f5c99; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 20:20:36 2017 -0500. update WDL test JSON files. commit e3d97644d1a2c40a5c364a96f8b67246154179c9; Author: Mehrtash Babadi <mehrtash",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598:3686,log,logging,3686,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598,1,['log'],['logging']
Testability,: true; 16:01:36.872 INFO Funcotator - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 16:01:36.872 INFO Funcotator - Deflater: IntelDeflater; 16:01:36.872 INFO Funcotator - Inflater: IntelInflater; 16:01:36.872 INFO Funcotator - GCS max retries/reopens: 20; 16:01:36.872 INFO Funcotator - Requester pays: disabled; 16:01:36.872 INFO Funcotator - Initializing engine; 16:01:37.316 INFO FeatureManager - Using codec VCFCodec to read file file:///home/deepak/software_library/gatk-4.1.7.0/SAMPL3_VARIANTFIL.vcf; 16:01:37.360 INFO Funcotator - Done initializing engine; 16:01:37.360 INFO Funcotator - Validating Sequence Dictionaries...; 16:01:37.366 INFO Funcotator - Processing user transcripts/defaults/overrides...; 16:01:37.366 INFO Funcotator - Initializing data sources...; 16:01:37.368 INFO DataSourceUtils - Initializing data sources from directory: /media/deepak/EXTRA/FUNCOTATOR_DATA/DATA_SOURCES; 16:01:37.369 WARN DataSourceUtils - Could not read MANIFEST.txt: unable to log data sources version information.; 16:01:37.375 INFO DataSourceUtils - Resolved data source file path: file:///home/deepak/software_library/gatk-4.1.7.0/simple_uniprot_Dec012014.tsv -> file:///media/deepak/EXTRA/FUNCOTATOR_DATA/DATA_SOURCES/data_source_14/hg38/simple_uniprot_Dec012014.tsv; 16:01:37.391 INFO DataSourceUtils - Resolved data source file path: file:///home/deepak/software_library/gatk-4.1.7.0/hgnc_download_Nov302017.tsv -> file:///media/deepak/EXTRA/FUNCOTATOR_DATA/DATA_SOURCES/data_source_13/hg38/hgnc_download_Nov302017.tsv; 16:01:37.393 INFO DataSourceUtils - Resolved data source file path: file:///home/deepak/software_library/gatk-4.1.7.0/oreganno.tsv -> file:///media/deepak/EXTRA/FUNCOTATOR_DATA/DATA_SOURCES/data_source_12/hg38/oreganno.tsv; 16:01:37.398 INFO DataSourceUtils - Resolved data source file path: file:///home/deepak/software_library/gatk-4.1.7.0/gencode.v28.annotation.REORDERED.gtf -> file:///media/deepak/EXTRA/FUNCOTATOR_DATA/DATA_SOURCES/data_source_11/hg38/genc,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6598#issuecomment-664565036:3399,log,log,3399,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6598#issuecomment-664565036,1,['log'],['log']
Testability,:+1 merge as soon as tests pass @lbergelson (don't wait for further review!),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2618#issuecomment-296822830:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2618#issuecomment-296822830,1,['test'],['tests']
Testability,:+1: ; I checked it by running like this:. ```; GATK_STACKTRACE_ON_USER_EXCEPTION=true ./gatk-launch CountReads -I ./src/test/resources/org/broadinstitute/hellbender/utils/test/SamAssertionUtilsUnitTest/valid.cram -R ./src/test/resources/problematicFASTA.fasta; ```. and another time with `GATK_STACKTRACE_ON_USER_EXCEPTION=false`; (not that there is a stacktrace on the second invocation too because of https://github.com/broadinstitute/gatk/issues/1598,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1596#issuecomment-199406170:121,test,test,121,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1596#issuecomment-199406170,3,['test'],['test']
Testability,:+1: Good magic. Merge when tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/949#issuecomment-145678870:28,test,tests,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/949#issuecomment-145678870,1,['test'],['tests']
Testability,":+1: Looks good -- I made a few small changes, and will merge once tests pass. We'll need two more PRs (which I am working on now): one to hook up @cmnbroad 's work in https://github.com/broadinstitute/barclay/pull/33, and a second to hook up @lbergelson 's work in https://github.com/samtools/htsjdk/pull/796",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2344#issuecomment-277354344:67,test,tests,67,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2344#issuecomment-277354344,1,['test'],['tests']
Testability,:+1: Looks good -- I'll merge once tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2791#issuecomment-306277827:35,test,tests,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2791#issuecomment-306277827,1,['test'],['tests']
Testability,":+1: Looks good, merging -- as I suggested above though, we should do a separate PR at some point to add a multithreaded test case for the OMP implementation.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2574#issuecomment-294223763:121,test,test,121,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2574#issuecomment-294223763,1,['test'],['test']
Testability,:+1: Merge after addressing the issue with your test case (show that the test case fails before the fix and passes after it),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2531#issuecomment-289558786:48,test,test,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2531#issuecomment-289558786,2,['test'],['test']
Testability,:+1: Merge once tests pass,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/439#issuecomment-95953703:16,test,tests,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/439#issuecomment-95953703,3,['test'],['tests']
Testability,:+1: Merge when tests pass,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1153#issuecomment-157887024:16,test,tests,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1153#issuecomment-157887024,2,['test'],['tests']
Testability,:+1: Merge when tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/942#issuecomment-144828765:16,test,tests,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/942#issuecomment-144828765,1,['test'],['tests']
Testability,:+1: One comment to address then merge at will once tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/904#issuecomment-141514913:52,test,tests,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/904#issuecomment-141514913,1,['test'],['tests']
Testability,:+1: One test is better than none test.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/844#issuecomment-143355094:9,test,test,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/844#issuecomment-143355094,2,['test'],['test']
Testability,":+1: Thanks @kgururaj. We'll merge once tests pass and the release is in maven central. . How does this affect https://github.com/broadinstitute/gatk/pull/4047, by the way?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4066#issuecomment-355683067:40,test,tests,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4066#issuecomment-355683067,1,['test'],['tests']
Testability,:+1: Thanks for fixing this. Just the comment on the comment. Feel free to merge when that is updated. I do think this test class is still very confusing in general though. . I don't understand why it's testing on a random combinatorial set of inputs instead of choosing a few explicitly. Surely showing that a method throws on null input once is just as good as showing it 10 time. Refactoring the whole thing seems out of scope though.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/743#issuecomment-124566502:119,test,test,119,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/743#issuecomment-124566502,2,['test'],"['test', 'testing']"
Testability,:+1: from me -- feel free to rebase and merge once tests pass,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/119#issuecomment-70304001:51,test,tests,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/119#issuecomment-70304001,1,['test'],['tests']
Testability,:+1: good to merge once tests pass in Travis,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/168#issuecomment-73317563:24,test,tests,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/168#issuecomment-73317563,1,['test'],['tests']
Testability,":+1: looks fine, merge when tests pass @cmnbroad",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2611#issuecomment-296275782:28,test,tests,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2611#issuecomment-296275782,1,['test'],['tests']
Testability,:+1: looks good -- will merge after we try re-running the travis tests,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2391#issuecomment-278085683:65,test,tests,65,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2391#issuecomment-278085683,1,['test'],['tests']
Testability,:+1: looks good -- will merge once tests pass,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4108#issuecomment-356352482:35,test,tests,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4108#issuecomment-356352482,1,['test'],['tests']
Testability,":+1: looks good, I'll merge as soon as tests pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2566#issuecomment-291902125:39,test,tests,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2566#issuecomment-291902125,1,['test'],['tests']
Testability,:+1: merge after addressing comments (and tests pass),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2500#issuecomment-288135546:42,test,tests,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2500#issuecomment-288135546,1,['test'],['tests']
Testability,":+1: merge after addressing comments. If the test I requested is too slow to be part of our test suite, should create a ticket ""Fix performance issues in `BAMInputFormat.setIntervals()` with large interval lists""",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1516#issuecomment-188935087:45,test,test,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1516#issuecomment-188935087,2,['test'],['test']
Testability,:+1: merge at will when tests pass,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/579#issuecomment-113574831:24,test,tests,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/579#issuecomment-113574831,1,['test'],['tests']
Testability,:+1: merge once tests pass,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/495#issuecomment-99993617:16,test,tests,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/495#issuecomment-99993617,7,['test'],['tests']
Testability,:+1: merge when ready. Is this all of the spark tests that weren't already marked as in the spark group?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1814#issuecomment-218600386:48,test,tests,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1814#issuecomment-218600386,1,['test'],['tests']
Testability,:+1: merge when tests pass,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/915#issuecomment-142427859:16,test,tests,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/915#issuecomment-142427859,10,['test'],['tests']
Testability,":+1: minor comments only, merge after addressing and tests pass",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/937#issuecomment-144461692:53,test,tests,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/937#issuecomment-144461692,1,['test'],['tests']
Testability,:+1: rebase and merge at will. good job on the tests,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/584#issuecomment-116948609:47,test,tests,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/584#issuecomment-116948609,1,['test'],['tests']
Testability,:+1: rebase and merge when tests pass,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/902#issuecomment-144896806:27,test,tests,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/902#issuecomment-144896806,1,['test'],['tests']
Testability,:+1: seems reasonable to me -- merge when tests pass @lbergelson,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4494#issuecomment-370527694:42,test,tests,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4494#issuecomment-370527694,1,['test'],['tests']
Testability,:+1: when tests pass. looks good. codeship likes it too!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/518#issuecomment-101424080:10,test,tests,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/518#issuecomment-101424080,1,['test'],['tests']
Testability,"://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""TestWrapper.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""TestWrapper.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""TestWrapper.reference"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""TestWrapper.referenceVersion"": ""hg38"",; ""TestWrapper.scattered_calling_intervals_list"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/wgs_scattered_calling_intervals.txt"",; ""TestWrapper.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/LCR_Hg38.interval_list"",; ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/HCR_hg38.bed""; ],; ""TestWrapper.stratLabels"": [; ""LCR"",; ""HCR""; ],; ""TestWrapper.truthLabel"": ""chm"",; ""TestWrapper.truthVcf"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/chm.full.m38.vcf.gz"",; ""TestWrapper.truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/chm.full.m38.vcf.gz.tbi"",; ""TestWrapper.vcfScoreField"": ""QUAL""; },; ""eval_input"": {; ""PlotROC.dataset_name"": ""CHMI_CHMI3_WGS1_downsampled"",; ""PlotROC.sample1_indel_HCR_roc_table"": ""test_output:TestWrapper.nonsnp_roc_table_HCR"",; ""PlotROC.sample1_indel_LCR_roc_table"": ""test_output:TestWrapper.nonsnp_roc_table_LCR"",; ""PlotROC.sample1_indel_roc_table"": ""test_output:TestWrapper.nonsnp_roc_table_all"",; ""PlotROC.sample1_snp_HCR_roc_table"": ""test_output:TestWrapper.snp_roc_table_HCR"",; ""PlotROC.sample1_snp_LCR_roc_table"": ""test_output:TestWrapper.snp_roc_table_LCR"",; ""PlotROC.sample1_snp_roc_table"": ""test_output:TestWrapper.nonsnp_roc_table_all"",; ""PlotROC.sample2_indel_HCR_roc_table"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/cached_dragen_sample_data/CHMI_CHMI3_WGS1_downsampled_DRAGEN_dragen_chm_HCR_vcfeval_non_snp_roc.tsv.gz"",; ""PlotROC.sample2_indel_LCR_roc_table"": ""gs://dsp-meth",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738147120:2693,Test,TestWrapper,2693,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738147120,2,['Test'],['TestWrapper']
Testability,":04.928 INFO ProgressMeter - 1:23419224 5.0 81370 16387.6; 09:54:15.956 INFO ProgressMeter - 1:23812728 5.1 82750 16070.6; 09:54:31.008 INFO ProgressMeter - 1:24023237 5.4 83470 15457.4; 09:54:33.610 INFO PairHMM - Total compute time in PairHMM computeLogLikelihoods() : 58.921665822; 09:54:33.611 INFO SmithWatermanAligner - Total compute time in java Smith-Waterman : 72.92 sec; 09:54:33.612 INFO Mutect2 - Shutting down engine; [March 7, 2019 9:54:33 AM EST] org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2 done. Elapsed time: 5.51 minutes.; Runtime.totalMemory()=193003520; java.lang.IllegalArgumentException: readMaxLength must be > 0 but got 0; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:730); 	at org.broadinstitute.hellbender.utils.pairhmm.PairHMM.initialize(PairHMM.java:152); 	at org.broadinstitute.hellbender.utils.pairhmm.N2MemoryPairHMM.initialize(N2MemoryPairHMM.java:28); 	at org.broadinstitute.hellbender.utils.pairhmm.LoglessPairHMM.initialize(LoglessPairHMM.java:7); 	at org.broadinstitute.hellbender.utils.pairhmm.PairHMM.initialize(PairHMM.java:177); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.initializePairHMM(PairHMMLikelihoodCalculationEngine.java:242); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.computeReadLikelihoods(PairHMMLikelihoodCalculationEngine.java:177); 	at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2Engine.callRegion(Mutect2Engine.java:229); 	at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2.apply(Mutect2.java:232); 	at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.processReadShard(AssemblyRegionWalker.java:291); 	at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:267); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:966); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandL",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5543#issuecomment-470579844:5044,Log,LoglessPairHMM,5044,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5543#issuecomment-470579844,1,['Log'],['LoglessPairHMM']
Testability,:1.7960189E7; Actual :17960189; <Click to see difference>. 	at org.testng.Assert.fail(Assert.java:94); 	at org.testng.Assert.failNotEquals(Assert.java:513); 	at org.testng.Assert.assertEqualsImpl(Assert.java:135); 	at org.testng.Assert.assertEquals(Assert.java:116); 	at org.broadinstitute.hellbender.utils.test.VariantContextTestUtils.assertAttributeEquals(VariantContextTestUtils.java:24); 	at org.broadinstitute.hellbender.utils.test.VariantContextTestUtils.assertAttributesEquals(VariantContextTestUtils.java:101); 	at org.broadinstitute.hellbender.utils.test.VariantContextTestUtils.assertVariantContextsAreEqual(VariantContextTestUtils.java:160); 	at org.broadinstitute.hellbender.tools.GenomicsDBImportIntegrationTest.lambda$testGenomicsDBImporter$0(GenomicsDBImportIntegrationTest.java:82); 	at org.broadinstitute.hellbender.tools.GenomicsDBImportIntegrationTest$$Lambda$57/1926180325.accept(Unknown Source); 	at org.broadinstitute.hellbender.utils.test.GenomicsDBTestUtils.assertCondition(GenomicsDBTestUtils.java:51); 	at org.broadinstitute.hellbender.tools.GenomicsDBImportIntegrationTest.testGenomicsDBImporter(GenomicsDBImportIntegrationTest.java:82); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:483); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112); 	at org.testng.TestRunner.privateRun(TestRunner.java:756); 	at org.testng.TestRunner.r,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-295418143:1076,assert,assertCondition,1076,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-295418143,1,['assert'],['assertCondition']
Testability,:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33); 	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94); 	at com.sun.proxy.$Proxy2.stop(Unknown Source); 	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.jav,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:5440,test,testng,5440,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['test'],['testng']
Testability,":38 2023 -0500. minor pymc/pytensor version upgrades, fix 2-interval edge case, update some theano docs. commit 9c9d0c570dd2712631739e0a9d41e90c4ccd3456; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 12 23:36:55 2023 -0500. update VETS expected, verbose conda env create, pin torch CPU MKL, add pysam, fixed more tests. commit c0a17dfcf9fa1139927570d2f16125bc15a2c19f; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 12 20:07:08 2023 -0500. fix CNV plotting. commit dd2dd503a92e6fbb5a49be6a88d2e813eb8bf85b; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 12 15:14:08 2023 -0500. update gCNV expected results, generated on WSL Ubuntu 20.04.2. commit 27d76e8f22d61df90eeb337e033ae128ce07ab90; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 12 14:53:04 2023 -0500. update python env integration tests. commit 348df9192235f7d1ea941d0b31e5c96acc0d6491; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 12 10:59:23 2023 -0500. disable CNN tests, add deprecation message. commit ed59372b4be226785af1d3fb1b1a39a9ad3b4f6a; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 12 09:55:24 2023 -0500. clean up rebase. commit 18e530db26f803ee46a0006843cb36d4ed4194b4; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Fri Dec 8 11:31:46 2023 -0500. postprocess fixed. commit f510c2e9f10d7066c15f1835669d676964b8a4cb; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Fri Dec 8 10:13:01 2023 -0500. fix deprecated np.int in optimizer. commit 939a032f356f2f8f67b5aae426fc427d1d1ea6c4; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Fri Dec 8 09:50:57 2023 -0500. remove unnecessary seeding in cohort denoising script. commit cf82ea5c99250f1784f8b1a9279e7dbb8841fa89; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Fri Dec 8 09:38:08 2023 -0500. add back setup.py files. commit 8348f546de6b3d32e1f02f6851730226c0dbffc9; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Fri Dec 8 09:37:09 2023 -0500. update pymc version in init. commit 85",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8561#issuecomment-1854434322:1599,test,tests,1599,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8561#issuecomment-1854434322,1,['test'],['tests']
Testability,:42:45.795 INFO PrintReadsSpark - Defaults.CUSTOM_READER_FACTORY :; 21:42:45.795 INFO PrintReadsSpark - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 21:42:45.796 INFO PrintReadsSpark - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 21:42:45.796 INFO PrintReadsSpark - Defaults.REFERENCE_FASTA : null; 21:42:45.796 INFO PrintReadsSpark - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 21:42:45.796 INFO PrintReadsSpark - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 21:42:45.796 INFO PrintReadsSpark - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : false; 21:42:45.796 INFO PrintReadsSpark - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 21:42:45.796 INFO PrintReadsSpark - Defaults.USE_CRAM_REF_DOWNLOAD : false; 21:42:45.796 INFO PrintReadsSpark - Deflater IntelDeflater; 21:42:45.796 INFO PrintReadsSpark - Initializing engine; 21:42:45.796 INFO PrintReadsSpark - Done initializing engine; 17/02/06 21:42:46 INFO org.spark_project.jetty.util.log: Logging initialized @2790ms; 17/02/06 21:42:46 INFO org.spark_project.jetty.server.Server: jetty-9.2.z-SNAPSHOT; 17/02/06 21:42:46 INFO org.spark_project.jetty.server.ServerConnector: Started ServerConnector@5148cf20{HTTP/1.1}{0.0.0.0:4040}; 17/02/06 21:42:46 INFO org.spark_project.jetty.server.Server: Started @2906ms; 17/02/06 21:42:47 INFO com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase: GHFS version: 1.6.0-hadoop2; 17/02/06 21:42:48 INFO org.apache.hadoop.yarn.client.RMProxy: Connecting to ResourceManager at mw-test-m/10.128.0.7:8032; 17/02/06 21:42:48 INFO org.apache.hadoop.yarn.client.api.impl.YarnClientImpl: Submitted application application_1486412429336_0010; 17/02/06 21:42:53 INFO com.google.cloud.genomics.dataflow.utils.GCSOptions: Creating storgae client for PrintReadsSpark; 17/02/06 21:42:53 INFO com.google.cloud.genomics.dataflow.readers.bam.SeekableGCSStream: Creating SeekableGCSStream: gs://mw-pathseq-test/hs37d5cs.reads.sorted.bam.bai; 17/02/06 21:42:53 INFO com.google.cloud.genomics.d,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2394#issuecomment-277823929:4672,log,log,4672,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2394#issuecomment-277823929,2,"['Log', 'log']","['Logging', 'log']"
Testability,":53 2023 -0500. freeze conda and set libmamba in base. commit f57a13a08fc3d049f0271e9aa94639ecb87b50f2; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Thu Nov 9 07:29:30 2023 -0500. libmamba 23.9.0. commit 45058f27aae9c9240a167f126e32a6bddd3353ff; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Wed Nov 8 23:33:51 2023 -0500. conda 23.9.0. commit d95494d282dd42ea3377de6c2d3554a3a5db65e4; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Mon Oct 30 17:04:34 2023 -0400. minor fixes to get ploidy working. commit c6a21f33f1f17b2bc9b878d8d6bfc6d7da784933; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Mon Oct 30 16:33:22 2023 -0400. truncated normal fixes. commit 81e3fff0a099731730d1657fc12f56abdc2b2927; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Mon Oct 30 16:03:02 2023 -0400. minor clip fix. commit 2fb94e88ab457ec037d304f7a80384b70a8685cc; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Mon Oct 30 15:17:06 2023 -0400. use model.rvs_to_values for registry; inference completes but numerical tests seem off!. commit 5d2062f3301f682dbf427d898521ec6da8338944; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Mon Oct 30 15:03:40 2023 -0400. VarMap and transformed name in register, exact match error to warn. commit 3dca890329396c9afae52aa8779cdfb97c18fa7c; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Wed Oct 25 23:28:32 2023 -0400. inference works! oh wow. commit d056855608fdf222a38a25d8de41f11fa1e82c22; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Oct 24 22:11:30 2023 -0400. past full denoising instantiation and through to first calling epoch before hitting another shape error. commit fcfdb29e79e0652d24a5f509ade6e941f84293c2; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Oct 24 00:17:46 2023 -0400. revert pytensorf. commit 2ec79b362bdfcd34b3ca1736e6327ecbbe2269ad; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Oct 24 00:16:04 2023 -0400. HalfFlat typo. commit 6eb1594d62ed62b992db04c523ffc598845d3b4c; Author: Samuel Lee <",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8561#issuecomment-1854434322:6568,test,tests,6568,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8561#issuecomment-1854434322,1,['test'],['tests']
Testability,:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32); 	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93); 	at com.sun.proxy.$Proxy,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293:2065,Test,TestNGTestClassProcessor,2065,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293,1,['Test'],['TestNGTestClassProcessor']
Testability,:An error occurred while instantiating class org.broadinstitute.hellbender.engine.spark.ReadsPreprocessingPipelineSparkTestData. Check to make sure it can be instantiated; 	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:134); 	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79); 	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:110); 	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:195); 	at org.testng.TestClass.getInstances(TestClass.java:102); 	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82); 	at org.testng.TestClass.init(TestClass.java:74); 	at org.testng.TestClass.<init>(TestClass.java:39); 	at org.testng.TestRunner.initMethods(TestRunner.java:466); 	at org.testng.TestRunner.init(TestRunner.java:345); 	at org.testng.TestRunner.init(TestRunner.java:298); 	at org.testng.TestRunner.<init>(TestRunner.java:183); 	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:603); 	at org.testng.SuiteRunner.init(SuiteRunner.java:196); 	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127); 	at org.testng.TestNG.createSuiteRunner(TestNG.java:1231); 	at org.testng.TestNG.createSuiteRunners(TestNG.java:1210); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1058); 	at org.testng.TestNG.runSuites(TestNG.java:997); 	at org.testng.TestNG.run(TestNG.java:965); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:129); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:88); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	... 22 more; ```; It looks to me that this change is whats failing? https://github.com/cbeust/testng/pull/1848/files. We have test classes that can't be properly instantiated in our suite that causes the new version of testNG to fall over.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5787#issuecomment-472107858:3414,test,testng,3414,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5787#issuecomment-472107858,29,"['Test', 'test']","['TestNG', 'TestNGTestClassProcessor', 'test', 'testNG', 'testing', 'testng']"
Testability,":VariantCallingCarrotOrchestrated.NIST_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referen",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1067505110:8477,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,8477,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1067505110,8,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,:thumbsup: ready to merge once the test passes (probably a transient Travis error),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5471#issuecomment-443544817:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5471#issuecomment-443544817,1,['test'],['test']
Testability,; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest.checkGenomicsDBAgainstExpected(GenomicsDBImportIntegrationTest.java:521); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest.testWriteToAndQueryFromGCS(GenomicsDBImportIntegrationTest.java:1104); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.Te,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6652#issuecomment-672024253:2109,test,testng,2109,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6652#issuecomment-672024253,1,['test'],['testng']
Testability,; 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32); 	at org.gradle.int,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293:1952,Test,TestNG,1952,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293,1,['Test'],['TestNG']
Testability,"; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthLabel"": ""CHM_GRCh38_SYNDIPv20180222"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.twist_exome.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlVcf"": ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508:5485,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,5485,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508,76,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"; ##fileformat=VCFv4.2; ##ALT=<ID=NON_REF,Description=""Represents any possible alternative allele at this location"">; ##FORMAT=<ID=AD,Number=R,Type=Integer,Description=""Allelic depths (counting only informative reads out of the total reads) for the ref and alt alleles in the order listed"">; ##FORMAT=<ID=AF,Number=A,Type=Float,Description=""Allele fractions for alt alleles in the order listed"">; ##FORMAT=<ID=DP,Number=1,Type=Integer,Description=""Approximate read depth (reads with MQ=255 or with bad mates are filtered)"">; ##FORMAT=<ID=F1R2,Number=R,Type=Integer,Description=""Count of reads in F1R2 pair orientation supporting each allele"">; ##FORMAT=<ID=F2R1,Number=R,Type=Integer,Description=""Count of reads in F2R1 pair orientation supporting each allele"">; ##FORMAT=<ID=GP,Number=G,Type=Float,Description=""Phred-scaled posterior probabilities for genotypes as defined in the VCF specification"">; ##FORMAT=<ID=GQ,Number=1,Type=Integer,Description=""Genotype Quality"">; ##FORMAT=<ID=GT,Number=1,Type=String,Description=""Genotype"">; ##FORMAT=<ID=ICNT,Number=2,Type=Integer,Description=""Counts of INDEL informative reads based on the reference confidence model"">; ##FORMAT=<ID=MB,Number=4,Type=Integer,Description=""Per-sample component statistics to detect mate bias"">; ##FORMAT=<ID=MIN_DP,Number=1,Type=Integer,Description=""Minimum DP observed within the GVCF block"">; ##FORMAT=<ID=PL,Number=G,Type=Integer,Description=""Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification"">; ##FORMAT=<ID=PRI,Number=G,Type=Float,Description=""Phred-scaled prior probabilities for genotypes"">; ##FORMAT=<ID=PS,Number=1,Type=Integer,Description=""Physical phasing ID information, where each unique ID within a given sample (but not across samples) connects records within a phasing group"">; ##FORMAT=<ID=SB,Number=4,Type=Integer,Description=""Per-sample component statistics which comprise the Fisher's Exact Test to detect strand bias"">; ##FORMAT=<ID=SPL,Number=.,Type=Integer,Descrip",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7797#issuecomment-1112612397:2096,Test,Test,2096,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7797#issuecomment-1112612397,1,['Test'],['Test']
Testability,; > (0); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_bed_file.bed; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-47; > (1); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_bed_file.bed.idx; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-48; > (0); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_table_file.table; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-49; > (2); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_vcf3_file.vcf; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-50; > (3); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_vcf3_file.vcf.idx; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-51; > (0); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_vcf4_file.vcf; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-52; > (3); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/minimal_vcf4_file.vcf.idx; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-53; > (0); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/unindexed.vcf; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-54; > (5); > - _A_; > src/test/resources/org/broadinstitute/hellbender/engine/unsupported_format_file; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-55; > (1); > - _A_; > src/test/resources/org/broadinstitute/hellbender/utils/codecs/hapmap/genotypes_chr1_ASW_phase3.3_first500.hapmap; > https://github.com/broadinstitute/hellbender/pull/224/files#diff-56; > (500); > ; > Patch Links:; > - https://github.com/broadinstitute/hellbender/pull/224.patch; > - https://github.com/broadinstitute/hellbender/pull/224.diff; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/broadinstitute/hellbender/pull/224.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/224#issuecomment-75657392:11136,test,test,11136,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/224#issuecomment-75657392,4,['test'],['test']
Testability,; > M src/main/java/org/broadinstitute/hellbender/utils/genotyper/ReadLikelihoods.java (6); > M src/main/java/org/broadinstitute/hellbender/utils/genotyper/SampleList.java (2); > M src/main/java/org/broadinstitute/hellbender/utils/pairhmm/LoglessPairHMM.java (1); > M src/main/java/org/broadinstitute/hellbender/utils/pairhmm/PairHMM.java (29); > D src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignAssembledContigsSparkTest.java (50); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignmentRegionTest.java (45); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigAlignerTest.java (16); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigsCollectionUnitTest.java (121); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/InversionReadLikelihoodCalculatorUnitTest.java (28); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/LocalAssemblyContigUnitTest.java (28); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSparkUnitTest.java (6); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVFastqUtilsUnitTest.java (186); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVJunctionUnitTest.java (204); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicInversionGenotyperSparkUnitTest.java (177); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSparkUnitTest.java (307); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.fa (84); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup-contigs.fa (22); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup.fa (84); > D src/test/resources/org/broadinstitute/he,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:3154,test,test,3154,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,; Caused by: org.testng.TestNGException:An error occurred while instantiating class org.broadinstitute.hellbender.engine.spark.ReadsPreprocessingPipelineSparkTestData. Check to make sure it can be instantiated; 	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:134); 	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79); 	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:110); 	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:195); 	at org.testng.TestClass.getInstances(TestClass.java:102); 	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82); 	at org.testng.TestClass.init(TestClass.java:74); 	at org.testng.TestClass.<init>(TestClass.java:39); 	at org.testng.TestRunner.initMethods(TestRunner.java:466); 	at org.testng.TestRunner.init(TestRunner.java:345); 	at org.testng.TestRunner.init(TestRunner.java:298); 	at org.testng.TestRunner.<init>(TestRunner.java:183); 	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:603); 	at org.testng.SuiteRunner.init(SuiteRunner.java:196); 	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127); 	at org.testng.TestNG.createSuiteRunner(TestNG.java:1231); 	at org.testng.TestNG.createSuiteRunners(TestNG.java:1210); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1058); 	at org.testng.TestNG.runSuites(TestNG.java:997); 	at org.testng.TestNG.run(TestNG.java:965); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:129); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:88); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	... 22 more; ```; It looks to me that this change is whats failing? https://github.com/cbeust/testng/pull/1848/files. We have test classes that can't be properly instantiated in our suite that causes t,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5787#issuecomment-472107858:3325,test,testng,3325,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5787#issuecomment-472107858,1,['test'],['testng']
Testability,"; Date: Wed Dec 13 00:14:34 2023 -0500. staged base rc1. commit 74f8fa724dfac142ccd7ac79a757c0e5ac3bb06c; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Wed Dec 13 00:01:38 2023 -0500. minor pymc/pytensor version upgrades, fix 2-interval edge case, update some theano docs. commit 9c9d0c570dd2712631739e0a9d41e90c4ccd3456; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 12 23:36:55 2023 -0500. update VETS expected, verbose conda env create, pin torch CPU MKL, add pysam, fixed more tests. commit c0a17dfcf9fa1139927570d2f16125bc15a2c19f; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 12 20:07:08 2023 -0500. fix CNV plotting. commit dd2dd503a92e6fbb5a49be6a88d2e813eb8bf85b; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 12 15:14:08 2023 -0500. update gCNV expected results, generated on WSL Ubuntu 20.04.2. commit 27d76e8f22d61df90eeb337e033ae128ce07ab90; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 12 14:53:04 2023 -0500. update python env integration tests. commit 348df9192235f7d1ea941d0b31e5c96acc0d6491; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 12 10:59:23 2023 -0500. disable CNN tests, add deprecation message. commit ed59372b4be226785af1d3fb1b1a39a9ad3b4f6a; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 12 09:55:24 2023 -0500. clean up rebase. commit 18e530db26f803ee46a0006843cb36d4ed4194b4; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Fri Dec 8 11:31:46 2023 -0500. postprocess fixed. commit f510c2e9f10d7066c15f1835669d676964b8a4cb; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Fri Dec 8 10:13:01 2023 -0500. fix deprecated np.int in optimizer. commit 939a032f356f2f8f67b5aae426fc427d1d1ea6c4; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Fri Dec 8 09:50:57 2023 -0500. remove unnecessary seeding in cohort denoising script. commit cf82ea5c99250f1784f8b1a9279e7dbb8841fa89; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Fri Dec 8 09:38:08 2023 -0500. add back setup.py file",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8561#issuecomment-1854434322:1448,test,tests,1448,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8561#issuecomment-1854434322,1,['test'],['tests']
Testability,"; Note that although the error log below says exome, this is a genome sample. I tried raising the ulimit to the same number this other user tried, but I still can get through BaseRecalibratorSpark. I've been trying for awhile to push this data through MarkDuplicatesSpark and finally gave up and switched back to the Picard MarkDuplicates. But even though I got through Picard MarkDuplicates I'm having problems with BaseRecalibratorSpark. I'm running in local mode with 250gb of memory and 128 cores available. . Is there something else for Spark that I can modify to prevent so many tasks getting created in stage 0.0? I'm running on a shared computing system, so it's quite possible that I can't change the ulimit number of open files. I am able to set ulimit -s unlimited, but I might not be able to set ulimit -n beyond a particular threshold on this system. I'll continue to explore the ulimit setting but I'd like to know if there's something else I could try instead. The relevant portion of the error logs are below... 20/01/05 17:43:23 INFO TaskSetManager: Starting task 4991.0 in stage 0.0 (TID 49; 91, localhost, executor driver, partition 4991, PROCESS_LOCAL, 4959 bytes); 20/01/05 17:43:23 INFO Executor: Running task 4991.0 in stage 0.0 (TID 4991); 20/01/05 17:43:23 INFO TaskSetManager: Finished task 4843.0 in stage 0.0 (TID 48; 43) in 74817 ms on localhost (executor driver) (4864/5114); 20/01/05 17:43:23 ERROR Executor: Exception in task 4876.0 in stage 0.0 (TID 487; 6); org.broadinstitute.hellbender.exceptions.UserException$NoSuitableCodecs: Cannot ; read file:///scratch/tmp/spark-ecd63991-68be-4879-b481-68e6789a2004/userFiles-b7; 2d4821-5e36-4d36-aa79-aa6263768669/dbsnp_138.hg19.vcf because no suitable codecs; found; at org.broadinstitute.hellbender.engine.FeatureManager.getCodecForFile(F; eatureManager.java:468); at org.broadinstitute.hellbender.engine.FeatureDataSource.getCodecForFea; tureInput(FeatureDataSource.java:324); at org.broadinstitute.hellbender.engine.Fea",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855:1102,log,logs,1102,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855,1,['log'],['logs']
Testability,; at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); at org.testng.TestNG.run(TestNG.java:1018); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:136); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:80); at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:59); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32); ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174:2974,test,testng,2974,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174,1,['test'],['testng']
Testability,; at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:659); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:771); at org.testng.TestRunner.run(TestRunner.java:621); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199); at org.testng.TestNG.runSuitesLocally(TestNG.java:1124); at org.testng.TestNG.run(TestNG.java:1032); at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111); at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204); at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:125); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140); Caused by: com.google.cloud.dataflow.sdk.coders.CannotProvideCoderException: Cannot provide a Coder for type variable B because the actual type is unknown due to erasure.; at com.google.cloud.dataflow.sdk.coders.CoderRegistry.getDefaultCoder(CoderRegistry.java:545); at com.google.clo,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/658#issuecomment-122314248:4869,test,testng,4869,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/658#issuecomment-122314248,1,['test'],['testng']
Testability,; |---|---|---|---|; | [...nnotator/allelespecific/AS\_ReadPosRankSumTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3803/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9hbGxlbGVzcGVjaWZpYy9BU19SZWFkUG9zUmFua1N1bVRlc3QuamF2YQ==) | `100% <ø> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [...ender/tools/walkers/annotator/AnnotationUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3803/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9Bbm5vdGF0aW9uVXRpbHMuamF2YQ==) | `85.714% <ø> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...lbender/utils/variant/GATKVariantContextUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3803/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy92YXJpYW50L0dBVEtWYXJpYW50Q29udGV4dFV0aWxzLmphdmE=) | `83.52% <ø> (ø)` | `215 <0> (ø)` | :arrow_down: |; | [...titute/hellbender/utils/logging/OneShotLogger.java](https://codecov.io/gh/broadinstitute/gatk/pull/3803/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9sb2dnaW5nL09uZVNob3RMb2dnZXIuamF2YQ==) | `72.727% <0%> (-27.273%)` | `2 <0> (-1)` | |; | [...ellbender/tools/walkers/annotator/QualByDepth.java](https://codecov.io/gh/broadinstitute/gatk/pull/3803/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9RdWFsQnlEZXB0aC5qYXZh) | `97.297% <100%> (+2.853%)` | `17 <0> (+1)` | :arrow_up: |; | [...r/tools/walkers/annotator/ClippingRankSumTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3803/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9DbGlwcGluZ1JhbmtTdW1UZXN0LmphdmE=) | `100% <100%> (ø)` | `4 <1> (+1)` | :arrow_up: |; | [...ools/walkers/annotator/DepthPerAlleleBySample.java](https://codecov.io/gh/broadinstitute/gatk/pull/3803/diff?src,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3803#issuecomment-343218257:1910,log,logging,1910,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3803#issuecomment-343218257,1,['log'],['logging']
Testability,";. final long t0 = System.nanoTime();; apacheLog(vals);; final long t1 = System.nanoTime();; ndLog(vals);; final long t2 = System.nanoTime();; ndJustCreate(vals);; final long t3 = System.nanoTime();. currentApacheStats.addValue((t1 - t0) / 1000000.0);; currentNd4jStats.addValue((t2 - t1) / 1000000.0);; currentNd4jCreationStats.addValue((t3 - t2) / 1000000.0);; }; }. for (int idx = 0; idx < sizes.length; idx++) {; System.out.println(String.format(""N = %d, ApacheFastMath = %f +/- %f ms, Nd4jLog = %f +/- %f ms, Nd4jOverhead = %f +/- %f ms"",; sizes[idx],; apacheStats.get(idx).getMean(), apacheStats.get(idx).getStandardDeviation(),; nd4jStats.get(idx).getMean(), nd4jStats.get(idx).getStandardDeviation(),; nd4jCreationStats.get(idx).getMean(), nd4jCreationStats.get(idx).getStandardDeviation()));; }. }. private double[] apacheLog(final double[] vals) {; return Arrays.stream(vals).parallel().map(FastMath::log).toArray();; }. private double[] ndLog(final double[] vals) {; return Transforms.log(Nd4j.create(vals), false).data().asDouble();; }. private double[] ndJustCreate(final double[] vals) {; return Nd4j.create(vals).data().asDouble();; }; ```. Nd4j is on maven (add `compile 'org.nd4j:nd4j-native-platform:0.5.0'` to the gradle build script). Here's another run [nd4j:0.5.0, 2.8 GHz Core i7]:; ```N = 1, ApacheFastMath = 0.021837 +/- 0.164358 ms, Nd4jLog = 0.029076 +/- 0.083403 ms, Nd4jOverhead = 0.012227 +/- 0.011450 ms; N = 10, ApacheFastMath = 0.230046 +/- 1.897271 ms, Nd4jLog = 0.042676 +/- 0.020724 ms, Nd4jOverhead = 0.016770 +/- 0.009369 ms; N = 100, ApacheFastMath = 0.052309 +/- 0.065039 ms, Nd4jLog = 0.037651 +/- 0.011225 ms, Nd4jOverhead = 0.017572 +/- 0.006995 ms; N = 1000, ApacheFastMath = 0.165869 +/- 1.852535 ms, Nd4jLog = 0.067076 +/- 0.017515 ms, Nd4jOverhead = 0.027893 +/- 0.009753 ms; N = 10000, ApacheFastMath = 0.164083 +/- 0.393109 ms, Nd4jLog = 0.331356 +/- 0.089105 ms, Nd4jOverhead = 0.152498 +/- 0.054611 ms; N = 100000, ApacheFastMath = 0.828509 +/- 0.259",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2577#issuecomment-292667861:2130,log,log,2130,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2577#issuecomment-292667861,1,['log'],['log']
Testability,</summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|90.613975|; |CHM controlHCsystemhours|0.19898611111111109|; |CHM controlHCwallclockhours|63.943677777777786|; |CHM controlHCwallclockmax|3.1089944444444444|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fba9f32d5-7b46-462c-8d1f-5692eee05534%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fb7ddd5f2-fded-4076-b163-33ad637fb5bd%2Fcall-CONTROLRuntimeTask%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fba9f32d5-7b46-462c-8d1f-5692eee05534%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fb7ddd5f2-fded-4076-b163-33ad637fb5bd%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2F10080eab-b0ad-4752-80cb-fc6d34bd9ad9%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|93.63756388888888|; |CHM evalHCsystemhours|0.6379805555555556|; |CHM evalHCwallclockhours|70.50882222222222|; |CHM evalHCwallclockmax|3.5186027777777777|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fba9f32d5-7b46-462c-8d1f-5692eee05534%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fb7ddd5f2-fded-4076-b163-33ad637fb5bd%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; |CHM evalsnpF1Score|0.9784|; |CHM evalsnpPrecision|0.9706|; |CHM evalsnpRecall|0.9863|; |CHM evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/Benchma,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441:1105,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,1105,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441,2,['Benchmark'],"['BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,<0%> (?)` | |; | [...r/tools/walkers/mutect/Mutect2FilteringEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/4653/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NdXRlY3QyRmlsdGVyaW5nRW5naW5lLmphdmE=) | `82.993% <0%> (+0.116%)` | `40% <0%> (ø)` | :arrow_down: |; | [...roadinstitute/hellbender/utils/read/ReadUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4653/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL1JlYWRVdGlscy5qYXZh) | `79.753% <0%> (+0.146%)` | `184% <0%> (-1%)` | :arrow_down: |; | [...ls/copynumber/utils/CombineSegmentBreakpoints.java](https://codecov.io/gh/broadinstitute/gatk/pull/4653/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL0NvbWJpbmVTZWdtZW50QnJlYWtwb2ludHMuamF2YQ==) | `91.597% <0%> (+0.585%)` | `35% <0%> (+8%)` | :arrow_up: |; | [...ava/org/broadinstitute/hellbender/utils/Utils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4653/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9VdGlscy5qYXZh) | `81.527% <0%> (+1.092%)` | `139% <0%> (-1%)` | :arrow_down: |; | [...ataSources/xsv/LocatableXsvFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/4653/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL3hzdi9Mb2NhdGFibGVYc3ZGdW5jb3RhdGlvbkZhY3RvcnkuamF2YQ==) | `86.916% <0%> (+1.731%)` | `29% <0%> (+5%)` | :arrow_up: |; | [...itute/hellbender/utils/test/SamAssertionUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4653/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1NhbUFzc2VydGlvblV0aWxzLmphdmE=) | `75.281% <0%> (+2.46%)` | `40% <0%> (-6%)` | :arrow_down: |; | ... and [1 more](https://codecov.io/gh/broadinstitute/gatk/pull/4653/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4653#issuecomment-382141714:3766,test,test,3766,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4653#issuecomment-382141714,1,['test'],['test']
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""05eb46d2-1bd0-4796-9df2-9a4d0fee745e"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-03-15 18:03:52.615116907 UTC"",; ""status"": ""evalfailed"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exome1_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/exome_calling_regions.v1.interval_list"",; ""VariantCallingCarrotOrchestrated.e",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1068678287:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1068678287,1,['test'],['test']
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""074e8b3b-5149-4e7d-8dcd-0aca2643b625"",; ""test_id"": ""15973a95-055a-4540-9590-ce40f34411f5"",; ""name"": ""GATK HaplotypeCaller vs Nightly Test_run_2022-03-01 22:04:38.405022793 UTC"",; ""status"": ""succeeded"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""test_options"": null,; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallingCarrot.control_vcf"",; ""BenchmarkComparison.controlVcf",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1056204611:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1056204611,1,['test'],['test']
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""0e62f4fd-87ba-4804-b1b8-bebe2bdaf4b3"",; ""test_id"": ""8003518b-70d4-495a-8b84-e91ef320647f"",; ""name"": ""HaplotypeCaller DRAGEN WGS1 revised 8_run_2020-10-29 12:03:54.221081034 UTC"",; ""status"": ""succeeded"",; ""test_input"": {; ""in_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/chm.full.m38.interval_list"",; ""in_dataset_name"": ""CH1_CHM13_WGS1_downsampled"",; ""in_dragstr_params"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.gatk-dragstr-table.txt"",; ""in_enableBQD"": ""true"",; ""in_enableDRAGSTR"": ""true"",; ""in_enableDRDQ"": ""true"",; ""in_enableFRD"": ""true"",; ""in_evalLabel"": ""GATK"",; ""in_gatk_docker_override"": ""image_build:gatk|4fa4b23a1b3756080aba2f1eecd791380b3921a6"",; ""in_hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""in_input_bam"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam"",; ""in_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam.bai"",; ""in_make_bamout"": ""true"",; ""in_make_gvcf"": ""false"",; ""in_preemptible"": ""0"",; ""in_refDict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""in_refIndex"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""in_ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""in_ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""in_ref_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""in_reference"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""in_referenceVersion"": ""hg38"",; ""in_scattered_calling_intervals_list"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/wgs_scattered_calli",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-718999737:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-718999737,1,['test'],['test']
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""1cb48356-6b1e-467f-8f58-2007ed2bffb3"",; ""test_id"": ""8003518b-70d4-495a-8b84-e91ef320647f"",; ""name"": ""HaplotypeCaller DRAGEN WGS1 revised 8_run_2020-10-29 12:00:54.299420663 UTC"",; ""status"": ""succeeded"",; ""test_input"": {; ""in_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/chm.full.m38.interval_list"",; ""in_dataset_name"": ""CH1_CHM13_WGS1_downsampled"",; ""in_dragstr_params"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.gatk-dragstr-table.txt"",; ""in_enableBQD"": ""true"",; ""in_enableDRAGSTR"": ""true"",; ""in_enableDRDQ"": ""true"",; ""in_enableFRD"": ""true"",; ""in_evalLabel"": ""GATK"",; ""in_gatk_docker_override"": ""image_build:gatk|d060380d5e76d367bf631e49d931cafd17a3d42a"",; ""in_hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""in_input_bam"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam"",; ""in_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam.bai"",; ""in_make_bamout"": ""true"",; ""in_make_gvcf"": ""false"",; ""in_preemptible"": ""0"",; ""in_refDict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""in_refIndex"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""in_ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""in_ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""in_ref_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""in_reference"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""in_referenceVersion"": ""hg38"",; ""in_scattered_calling_intervals_list"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/wgs_scattered_calli",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6920#issuecomment-718718815:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6920#issuecomment-718718815,1,['test'],['test']
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""202a0396-1aaa-4fc4-b59e-5f068894e566"",; ""test_id"": ""15973a95-055a-4540-9590-ce40f34411f5"",; ""name"": ""GATK HaplotypeCaller vs Nightly Test_run_2022-03-01 18:37:45.839345051 UTC"",; ""status"": ""succeeded"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""test_options"": null,; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallingCarrot.control_vcf"",; ""BenchmarkComparison.controlVcf",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055772104:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055772104,1,['test'],['test']
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""294dd9eb-5bbd-4756-b71f-479bf9b15d69"",; ""test_id"": ""dfc196dd-c732-4bcb-996c-85c1233cb91e"",; ""name"": ""HaplotypeCaller DRAGEN WGS1_run_2020-12-03 17:12:22.583536574 UTC"",; ""status"": ""evalfailed"",; ""test_input"": {; ""TestWrapper.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/chm.full.m38.interval_list"",; ""TestWrapper.dataset_name"": ""CH1_CHM13_WGS1_downsampled"",; ""TestWrapper.dragstr_params"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.gatk-dragstr-table.txt"",; ""TestWrapper.enableBQD"": ""true"",; ""TestWrapper.enableDRAGSTR"": ""true"",; ""TestWrapper.enableDRDQ"": ""true"",; ""TestWrapper.enableFRD"": ""true"",; ""TestWrapper.evalLabel"": ""GATK"",; ""TestWrapper.gatk_docker_override"": ""image_build:gatk|b42606886deb0d0e1cc05a9ac3c2673f75309c67"",; ""TestWrapper.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""TestWrapper.input_bam"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam"",; ""TestWrapper.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam.bai"",; ""TestWrapper.make_bamout"": ""true"",; ""TestWrapper.make_gvcf"": ""false"",; ""TestWrapper.preemptible"": ""0"",; ""TestWrapper.refDict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""TestWrapper.refIndex"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""TestWrapper.ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""TestWrapper.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""TestWrapper.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""TestWrapper.reference"": ""gs://gcp-public-data--broad-references/hg38/v0/H",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738501925:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738501925,11,"['Test', 'test']","['TestWrapper', 'test']"
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""2fdf5679-5350-4af0-8574-089aa3a6589b"",; ""test_id"": ""bfab1ecf-024f-4c42-9b32-4e9a5d5643f8"",; ""name"": ""HaplotypeCaller DRAGEN WGS1 revised 7_run_2020-10-29 01:02:53.874008692 UTC"",; ""status"": ""failed"",; ""test_input"": {; ""in_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/chm.full.m38.interval_list"",; ""in_dataset_name"": ""CH1_CHM13_WGS1_downsampled"",; ""in_dragstr_params"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.gatk-dragstr-table.txt"",; ""in_enableBQD"": ""true"",; ""in_enableDRAGSTR"": ""true"",; ""in_enableDRDQ"": ""true"",; ""in_enableFRD"": ""true"",; ""in_evalLabel"": ""GATK"",; ""in_gatk_docker_override"": ""image_build:gatk|d060380d5e76d367bf631e49d931cafd17a3d42a"",; ""in_hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""in_input_bam"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam"",; ""in_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam.bai"",; ""in_make_bamout"": ""true"",; ""in_make_gvcf"": ""false"",; ""in_preemptible"": ""0"",; ""in_refDict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""in_refIndex"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""in_ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""in_ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""in_ref_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""in_reference"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""in_referenceVersion"": ""hg38"",; ""in_scattered_calling_intervals_list"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/wgs_scattered_calling_",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6920#issuecomment-718477822:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6920#issuecomment-718477822,1,['test'],['test']
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""3b13e474-9e2d-41cd-b846-c5ed41305f3a"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-03-15 02:48:40.559977508 UTC"",; ""status"": ""testfailed"",; ""test_input"": {; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|0a267ad11c3612a61464a84a0ead0d4d89a0ff0b"",; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exome1_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/h",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1068237327:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1068237327,2,['test'],"['test', 'testfailed']"
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""49a3a4ec-c92e-4181-b681-9dd431472165"",; ""test_id"": ""15973a95-055a-4540-9590-ce40f34411f5"",; ""name"": ""GATK HaplotypeCaller vs Nightly Test_run_2022-02-24 15:51:30.766998897 UTC"",; ""status"": ""evalfailed"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallingCarrot.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:V",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1050011219:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1050011219,1,['test'],['test']
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""50da448b-32dd-4f51-bf84-79b351ccb980"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-03-16 19:52:46.276710483 UTC"",; ""status"": ""succeeded"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exome1_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/exome_calling_regions.v1.interval_list"",; ""VariantCallingCarrotOrchestrated.ex",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069766207:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069766207,1,['test'],['test']
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""6353c465-595d-4a96-9f7d-3ea5d54634ca"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-03-16 14:19:54.191815405 UTC"",; ""status"": ""succeeded"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exome1_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/exome_calling_regions.v1.interval_list"",; ""VariantCallingCarrotOrchestrated.ex",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069381494:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069381494,1,['test'],['test']
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""74900cef-79db-4b52-a5fa-c5f980b5f455"",; ""test_id"": ""29f208c1-d953-4329-9915-323d69ac9a96"",; ""name"": ""FE Test CHM v2.1_run_2021-01-14 17:21:29.274230536 UTC"",; ""status"": ""testfailed"",; ""test_input"": {; ""FunctionalEquivalenceTest.confidence_intervals"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list""; ],; ""FunctionalEquivalenceTest.create_roc_plot"": [; ""true"",; ""false"",; ""false"",; ""false""; ],; ""FunctionalEquivalenceTest.dataset"": [; ""CHM"",; ""CHM"",; ""CHM"",; ""CHM""; ],; ""FunctionalEquivalenceTest.dragen_vcf_indices"": [; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS1/CHMI_CHMI3_WGS1.vcf.gz.tbi"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS2/CHMI_CHMI3_WGS2.vcf.gz.tbi"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS3/CHMI_CHMI3_WGS3.vcf.gz.tbi"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS4/CHMI_CHMI3_WGS4.vcf.gz.tbi""; ],; ""FunctionalEquivalenceTest.dragen_vcfs"": [; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS1/CHMI_CHMI3_WGS1.vcf.gz"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS2/CHMI_CHMI3_WGS2.vcf.gz"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS3/CHMI_CHMI3_WGS3.vcf.gz"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS4/CHMI_CHMI3_WGS4.vcf.gz""; ],; ""FunctionalEquivalenceTest.dragstr_params"": [; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS1/CHMI_CHMI3_WGS1.gatk-dragstr-table.txt"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS2/CHMI_CHMI3_WGS2.gatk-dragstr-table.txt"",; ""gs://broad-dsde-methods-drage",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760368032:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760368032,7,"['Test', 'benchmark', 'test']","['Test', 'benchmarking', 'test', 'testfailed']"
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""7d96ffaf-77c1-440b-89c0-9cd08a352840"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-03-15 02:45:40.427499888 UTC"",; ""status"": ""testfailed"",; ""test_input"": {; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exome1_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/h",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1067506391:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1067506391,2,['test'],"['test', 'testfailed']"
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""81cc98a3-f4cc-4e96-aa4a-493a718eb5a0"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-03-16 14:20:46.087542573 UTC"",; ""status"": ""succeeded"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exome1_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/exome_calling_regions.v1.interval_list"",; ""VariantCallingCarrotOrchestrated.ex",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069378815:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069378815,1,['test'],['test']
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""847e7d4f-7906-4e81-b34e-b5593784d0b0"",; ""test_id"": ""acce36f4-84fb-4770-b82a-a758dbb79bc8"",; ""name"": ""GATK HaplotypeCaller Test_run_2022-01-27 19:46:31.156656310 UTC"",; ""status"": ""testfailed"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 10,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""Benchmark.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""Benchmark.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""Benchmark.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""Benchmark.evalVcfIndex"": ""test_output:VariantCalling.output_vcf_index"",; ""Benchmark.hapMap"": ""gs://gcp-public",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1024013091:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1024013091,2,['test'],"['test', 'testfailed']"
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""869dc901-0125-41f2-8977-19fbf51bdafd"",; ""test_id"": ""15973a95-055a-4540-9590-ce40f34411f5"",; ""name"": ""GATK HaplotypeCaller vs Nightly Test_run_2022-02-01 19:09:10.650558739 UTC"",; ""status"": ""testfailed"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 10,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCalling.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:Variant",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1027634854:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1027634854,2,['test'],"['test', 'testfailed']"
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""8746ca71-df06-4807-9040-5d25e7efb50b"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-03-16 19:53:45.833801080 UTC"",; ""status"": ""succeeded"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exome1_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/exome_calling_regions.v1.interval_list"",; ""VariantCallingCarrotOrchestrated.ex",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069765064:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069765064,1,['test'],['test']
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""88f12a77-2c28-4def-9ba3-1d88b80f037c"",; ""test_id"": ""15973a95-055a-4540-9590-ce40f34411f5"",; ""name"": ""GATK HaplotypeCaller vs Nightly Test_run_2022-02-24 19:51:30.490690587 UTC"",; ""status"": ""succeeded"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallingCarrot.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:Va",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1050349258:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1050349258,1,['test'],['test']
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""c0f6e7ff-f1ff-484d-9627-2317207526c9"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-06-01 17:59:13.998233683 UTC"",; ""status"": ""buildfailed"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exome1_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/exome_calling_regions.v1.interval_list"",; ""VariantCallingCarrotOrchestrated.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1143995846:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1143995846,1,['test'],['test']
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""ca06f9ae-eecd-4168-9abe-50cd10e03db8"",; ""test_id"": ""acce36f4-84fb-4770-b82a-a758dbb79bc8"",; ""name"": ""GATK HaplotypeCaller Test_run_2022-01-31 15:46:11.708783346 UTC"",; ""status"": ""testfailed"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 10,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""Benchmark.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""Benchmark.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""Benchmark.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""Benchmark.evalVcfIndex"": ""test_output:VariantCalling.output_vcf_index"",; ""Benchmark.hapMap"": ""gs://gcp-public",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1026489631:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1026489631,2,['test'],"['test', 'testfailed']"
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""d1c6dc68-9474-4803-89f3-7e22c52f2fd6"",; ""test_id"": ""15973a95-055a-4540-9590-ce40f34411f5"",; ""name"": ""GATK HaplotypeCaller vs Nightly Test_run_2022-02-23 21:13:30.630066805 UTC"",; ""status"": ""carrotfailed"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCalling.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:Varia",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049392143:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049392143,1,['test'],['test']
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""d3db55ce-0828-4ea8-b4f4-7ff0576ac886"",; ""test_id"": ""29f208c1-d953-4329-9915-323d69ac9a96"",; ""name"": ""FE Test CHM v2.1_run_2021-01-14 19:14:37.025662193 UTC"",; ""status"": ""succeeded"",; ""test_input"": {; ""FunctionalEquivalenceTest.confidence_intervals"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list""; ],; ""FunctionalEquivalenceTest.create_roc_plot"": [; ""true"",; ""false"",; ""false"",; ""false""; ],; ""FunctionalEquivalenceTest.dataset"": [; ""CHM"",; ""CHM"",; ""CHM"",; ""CHM""; ],; ""FunctionalEquivalenceTest.dragen_vcf_indices"": [; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS1/CHMI_CHMI3_WGS1.vcf.gz.tbi"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS2/CHMI_CHMI3_WGS2.vcf.gz.tbi"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS3/CHMI_CHMI3_WGS3.vcf.gz.tbi"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS4/CHMI_CHMI3_WGS4.vcf.gz.tbi""; ],; ""FunctionalEquivalenceTest.dragen_vcfs"": [; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS1/CHMI_CHMI3_WGS1.vcf.gz"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS2/CHMI_CHMI3_WGS2.vcf.gz"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS3/CHMI_CHMI3_WGS3.vcf.gz"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS4/CHMI_CHMI3_WGS4.vcf.gz""; ],; ""FunctionalEquivalenceTest.dragstr_params"": [; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS1/CHMI_CHMI3_WGS1.gatk-dragstr-table.txt"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS2/CHMI_CHMI3_WGS2.gatk-dragstr-table.txt"",; ""gs://broad-dsde-methods-dragen",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760609431:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760609431,6,"['Test', 'benchmark', 'test']","['Test', 'benchmarking', 'test']"
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""d8145d39-c8a5-4ca1-8130-a9f0765b6b9c"",; ""test_id"": ""29f208c1-d953-4329-9915-323d69ac9a96"",; ""name"": ""FE Test CHM v2.1_run_2021-01-14 15:41:29.307869023 UTC"",; ""status"": ""testfailed"",; ""test_input"": {; ""FunctionalEquivalenceTest.confidence_intervals"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list""; ],; ""FunctionalEquivalenceTest.create_roc_plot"": [; ""true"",; ""false"",; ""false"",; ""false""; ],; ""FunctionalEquivalenceTest.dataset"": [; ""CHM"",; ""CHM"",; ""CHM"",; ""CHM""; ],; ""FunctionalEquivalenceTest.dragen_vcf_indices"": [; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS1/CHMI_CHMI3_WGS1.vcf.gz.tbi"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS2/CHMI_CHMI3_WGS2.vcf.gz.tbi"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS3/CHMI_CHMI3_WGS3.vcf.gz.tbi"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS4/CHMI_CHMI3_WGS4.vcf.gz.tbi""; ],; ""FunctionalEquivalenceTest.dragen_vcfs"": [; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS1/CHMI_CHMI3_WGS1.vcf.gz"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS2/CHMI_CHMI3_WGS2.vcf.gz"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS3/CHMI_CHMI3_WGS3.vcf.gz"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS4/CHMI_CHMI3_WGS4.vcf.gz""; ],; ""FunctionalEquivalenceTest.dragstr_params"": [; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS1/CHMI_CHMI3_WGS1.gatk-dragstr-table.txt"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS2/CHMI_CHMI3_WGS2.gatk-dragstr-table.txt"",; ""gs://broad-dsde-methods-drage",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760301328:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760301328,7,"['Test', 'benchmark', 'test']","['Test', 'benchmarking', 'test', 'testfailed']"
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""e296eb66-95b2-428a-a31e-3118047b197d"",; ""test_id"": ""15973a95-055a-4540-9590-ce40f34411f5"",; ""name"": ""GATK HaplotypeCaller vs Nightly Test_run_2022-02-23 19:59:31.084286796 UTC"",; ""status"": ""testfailed"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://emeryj-testing/CarrotData/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://emeryj-testing/CarrotData/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://emeryj-testing/CarrotData/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCalling.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCalling.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""BenchmarkCompariso",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049165952:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049165952,4,['test'],"['test', 'testfailed', 'testing']"
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""ea93cfbf-57fe-4ca6-bf87-78535e66ffb2"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-03-15 18:03:51.605578569 UTC"",; ""status"": ""evalfailed"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exome1_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/exome_calling_regions.v1.interval_list"",; ""VariantCallingCarrotOrchestrated.e",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1068654852:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1068654852,1,['test'],['test']
Testability,"<details><summary>CARROT test run finished</summary> <pre lang=""json""> ; {; ""run_id"": ""f282b866-8383-4e5e-a4c9-b2ee7929609f"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-06-01 15:19:15.189539495 UTC"",; ""status"": ""buildfailed"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exome1_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/exome_calling_regions.v1.interval_list"",; ""VariantCallingCarrotOrchestrated.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1143792534:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1143792534,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : FE Test CHM v2.1_run_2021-01-14 15:41:29.307869023 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""d8145d39-c8a5-4ca1-8130-a9f0765b6b9c"",; ""test_id"": ""29f208c1-d953-4329-9915-323d69ac9a96"",; ""name"": ""FE Test CHM v2.1_run_2021-01-14 15:41:29.307869023 UTC"",; ""status"": ""building"",; ""test_input"": {; ""FunctionalEquivalenceTest.confidence_intervals"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list""; ],; ""FunctionalEquivalenceTest.create_roc_plot"": [; ""true"",; ""false"",; ""false"",; ""false""; ],; ""FunctionalEquivalenceTest.dataset"": [; ""CHM"",; ""CHM"",; ""CHM"",; ""CHM""; ],; ""FunctionalEquivalenceTest.dragen_vcf_indices"": [; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS1/CHMI_CHMI3_WGS1.vcf.gz.tbi"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS2/CHMI_CHMI3_WGS2.vcf.gz.tbi"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS3/CHMI_CHMI3_WGS3.vcf.gz.tbi"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS4/CHMI_CHMI3_WGS4.vcf.gz.tbi""; ],; ""FunctionalEquivalenceTest.dragen_vcfs"": [; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS1/CHMI_CHMI3_WGS1.vcf.gz"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS2/CHMI_CHMI3_WGS2.vcf.gz"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS3/CHMI_CHMI3_WGS3.vcf.gz"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS4/CHMI_CHMI3_WGS4.vcf.gz""; ],; ""FunctionalEquivalenceTest.dragstr_params"": [; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS1/CHMI_CHMI3_WGS1.gatk-dragstr-table.txt"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS2/CHMI_CHMI3_WGS2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135,7,"['Test', 'benchmark', 'test']","['Test', 'benchmarking', 'test']"
Testability,"<details><summary>Started a CARROT test run : FE Test CHM v2.1_run_2021-01-14 17:21:29.274230536 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""74900cef-79db-4b52-a5fa-c5f980b5f455"",; ""test_id"": ""29f208c1-d953-4329-9915-323d69ac9a96"",; ""name"": ""FE Test CHM v2.1_run_2021-01-14 17:21:29.274230536 UTC"",; ""status"": ""building"",; ""test_input"": {; ""FunctionalEquivalenceTest.confidence_intervals"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list""; ],; ""FunctionalEquivalenceTest.create_roc_plot"": [; ""true"",; ""false"",; ""false"",; ""false""; ],; ""FunctionalEquivalenceTest.dataset"": [; ""CHM"",; ""CHM"",; ""CHM"",; ""CHM""; ],; ""FunctionalEquivalenceTest.dragen_vcf_indices"": [; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS1/CHMI_CHMI3_WGS1.vcf.gz.tbi"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS2/CHMI_CHMI3_WGS2.vcf.gz.tbi"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS3/CHMI_CHMI3_WGS3.vcf.gz.tbi"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS4/CHMI_CHMI3_WGS4.vcf.gz.tbi""; ],; ""FunctionalEquivalenceTest.dragen_vcfs"": [; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS1/CHMI_CHMI3_WGS1.vcf.gz"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS2/CHMI_CHMI3_WGS2.vcf.gz"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS3/CHMI_CHMI3_WGS3.vcf.gz"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS4/CHMI_CHMI3_WGS4.vcf.gz""; ],; ""FunctionalEquivalenceTest.dragstr_params"": [; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS1/CHMI_CHMI3_WGS1.gatk-dragstr-table.txt"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS2/CHMI_CHMI3_WGS2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659,7,"['Test', 'benchmark', 'test']","['Test', 'benchmarking', 'test']"
Testability,"<details><summary>Started a CARROT test run : FE Test CHM v2.1_run_2021-01-14 19:14:37.025662193 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""d3db55ce-0828-4ea8-b4f4-7ff0576ac886"",; ""test_id"": ""29f208c1-d953-4329-9915-323d69ac9a96"",; ""name"": ""FE Test CHM v2.1_run_2021-01-14 19:14:37.025662193 UTC"",; ""status"": ""building"",; ""test_input"": {; ""FunctionalEquivalenceTest.confidence_intervals"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.interval_list""; ],; ""FunctionalEquivalenceTest.create_roc_plot"": [; ""true"",; ""false"",; ""false"",; ""false""; ],; ""FunctionalEquivalenceTest.dataset"": [; ""CHM"",; ""CHM"",; ""CHM"",; ""CHM""; ],; ""FunctionalEquivalenceTest.dragen_vcf_indices"": [; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS1/CHMI_CHMI3_WGS1.vcf.gz.tbi"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS2/CHMI_CHMI3_WGS2.vcf.gz.tbi"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS3/CHMI_CHMI3_WGS3.vcf.gz.tbi"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS4/CHMI_CHMI3_WGS4.vcf.gz.tbi""; ],; ""FunctionalEquivalenceTest.dragen_vcfs"": [; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS1/CHMI_CHMI3_WGS1.vcf.gz"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS2/CHMI_CHMI3_WGS2.vcf.gz"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS3/CHMI_CHMI3_WGS3.vcf.gz"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS4/CHMI_CHMI3_WGS4.vcf.gz""; ],; ""FunctionalEquivalenceTest.dragstr_params"": [; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS1/CHMI_CHMI3_WGS1.gatk-dragstr-table.txt"",; ""gs://broad-dsde-methods-dragen/reprocessed_data/CHMI_CHMI3_WGS2/CHMI_CHMI3_WGS2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440,7,"['Test', 'benchmark', 'test']","['Test', 'benchmarking', 'test']"
Testability,"<details><summary>Started a CARROT test run : GATK HaplotypeCaller Test_run_2022-01-31 15:46:11.708783346 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""ca06f9ae-eecd-4168-9abe-50cd10e03db8"",; ""test_id"": ""acce36f4-84fb-4770-b82a-a758dbb79bc8"",; ""name"": ""GATK HaplotypeCaller Test_run_2022-01-31 15:46:11.708783346 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 10,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""Benchmark.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""Benchmark.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""Benchmark.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""Benchmark.evalVcfIndex"": ""test_output:Varian",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1025921276:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1025921276,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : GATK HaplotypeCaller vs Nightly Test_run_2022-02-01 19:09:10.650558739 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""869dc901-0125-41f2-8977-19fbf51bdafd"",; ""test_id"": ""15973a95-055a-4540-9590-ce40f34411f5"",; ""name"": ""GATK HaplotypeCaller vs Nightly Test_run_2022-02-01 19:09:10.650558739 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 10,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallin",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1027191801:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1027191801,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : GATK HaplotypeCaller vs Nightly Test_run_2022-02-23 19:59:31.084286796 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""e296eb66-95b2-428a-a31e-3118047b197d"",; ""test_id"": ""15973a95-055a-4540-9590-ce40f34411f5"",; ""name"": ""GATK HaplotypeCaller vs Nightly Test_run_2022-02-23 19:59:31.084286796 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://emeryj-testing/CarrotData/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://emeryj-testing/CarrotData/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://emeryj-testing/CarrotData/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCalling.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCalling.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkCompar",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049160705:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049160705,3,['test'],"['test', 'testing']"
Testability,"<details><summary>Started a CARROT test run : GATK HaplotypeCaller vs Nightly Test_run_2022-02-23 21:13:30.630066805 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""d1c6dc68-9474-4803-89f3-7e22c52f2fd6"",; ""test_id"": ""15973a95-055a-4540-9590-ce40f34411f5"",; ""name"": ""GATK HaplotypeCaller vs Nightly Test_run_2022-02-23 21:13:30.630066805 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallin",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049221485:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049221485,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : GATK HaplotypeCaller vs Nightly Test_run_2022-02-24 15:51:30.766998897 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""49a3a4ec-c92e-4181-b681-9dd431472165"",; ""test_id"": ""15973a95-055a-4540-9590-ce40f34411f5"",; ""name"": ""GATK HaplotypeCaller vs Nightly Test_run_2022-02-24 15:51:30.766998897 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallin",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049997691:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049997691,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : GATK HaplotypeCaller vs Nightly Test_run_2022-02-24 19:51:30.490690587 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""88f12a77-2c28-4def-9ba3-1d88b80f037c"",; ""test_id"": ""15973a95-055a-4540-9590-ce40f34411f5"",; ""name"": ""GATK HaplotypeCaller vs Nightly Test_run_2022-02-24 19:51:30.490690587 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallin",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1050206972:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1050206972,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : GATK HaplotypeCaller vs Nightly Test_run_2022-03-01 18:37:45.839345051 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""202a0396-1aaa-4fc4-b59e-5f068894e566"",; ""test_id"": ""15973a95-055a-4540-9590-ce40f34411f5"",; ""name"": ""GATK HaplotypeCaller vs Nightly Test_run_2022-03-01 18:37:45.839345051 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""test_options"": null,; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""te",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055740510:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055740510,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : GATK HaplotypeCaller vs Nightly Test_run_2022-03-01 22:04:38.405022793 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""074e8b3b-5149-4e7d-8dcd-0aca2643b625"",; ""test_id"": ""15973a95-055a-4540-9590-ce40f34411f5"",; ""name"": ""GATK HaplotypeCaller vs Nightly Test_run_2022-03-01 22:04:38.405022793 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""test_options"": null,; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""te",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055904955:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055904955,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : HaplotypeCaller CARROT Regression Tests_run_2022-03-15 02:45:40.427499888 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""7d96ffaf-77c1-440b-89c0-9cd08a352840"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-03-15 02:45:40.427499888 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrches",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1067505110:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1067505110,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : HaplotypeCaller CARROT Regression Tests_run_2022-03-15 02:48:40.559977508 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""3b13e474-9e2d-41cd-b846-c5ed41305f3a"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-03-15 02:48:40.559977508 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|0a267ad11c3612a61464a84a0ead0d4d89a0ff0b"",; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrches",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1067506417:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1067506417,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : HaplotypeCaller CARROT Regression Tests_run_2022-03-15 18:03:51.605578569 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""ea93cfbf-57fe-4ca6-bf87-78535e66ffb2"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-03-15 18:03:51.605578569 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exome1_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_test",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1068293828:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1068293828,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : HaplotypeCaller CARROT Regression Tests_run_2022-03-15 18:03:52.615116907 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""05eb46d2-1bd0-4796-9df2-9a4d0fee745e"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-03-15 18:03:52.615116907 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exome1_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_test",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1068293845:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1068293845,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : HaplotypeCaller CARROT Regression Tests_run_2022-03-16 14:19:54.191815405 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""6353c465-595d-4a96-9f7d-3ea5d54634ca"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-03-16 14:19:54.191815405 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exome1_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_test",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069182277:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069182277,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : HaplotypeCaller CARROT Regression Tests_run_2022-03-16 14:20:46.087542573 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""81cc98a3-f4cc-4e96-aa4a-493a718eb5a0"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-03-16 14:20:46.087542573 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exome1_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_test",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069183151:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069183151,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : HaplotypeCaller CARROT Regression Tests_run_2022-03-16 19:52:46.276710483 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""50da448b-32dd-4f51-bf84-79b351ccb980"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-03-16 19:52:46.276710483 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exome1_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_test",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069554598:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069554598,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : HaplotypeCaller CARROT Regression Tests_run_2022-03-16 19:53:45.833801080 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""8746ca71-df06-4807-9040-5d25e7efb50b"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-03-16 19:53:45.833801080 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exome1_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_test",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069555422:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069555422,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : HaplotypeCaller CARROT Regression Tests_run_2022-06-01 15:19:15.189539495 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""f282b866-8383-4e5e-a4c9-b2ee7929609f"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-06-01 15:19:15.189539495 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exome1_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_test",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1143746325:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1143746325,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : HaplotypeCaller CARROT Regression Tests_run_2022-06-01 17:59:13.998233683 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""c0f6e7ff-f1ff-484d-9627-2317207526c9"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-06-01 17:59:13.998233683 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exome1_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_test",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1143962171:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1143962171,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : HaplotypeCaller DRAGEN WGS1 revised 7_run_2020-10-29 01:05:55.379753448 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""e3422e8d-d2d8-48f2-b608-c51cbc762018"",; ""test_id"": ""bfab1ecf-024f-4c42-9b32-4e9a5d5643f8"",; ""name"": ""HaplotypeCaller DRAGEN WGS1 revised 7_run_2020-10-29 01:05:55.379753448 UTC"",; ""status"": ""building"",; ""test_input"": {; ""in_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/chm.full.m38.interval_list"",; ""in_dataset_name"": ""CH1_CHM13_WGS1_downsampled"",; ""in_dragstr_params"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.gatk-dragstr-table.txt"",; ""in_enableBQD"": ""true"",; ""in_enableDRAGSTR"": ""true"",; ""in_enableDRDQ"": ""true"",; ""in_enableFRD"": ""true"",; ""in_evalLabel"": ""GATK"",; ""in_gatk_docker_override"": ""image_build:gatk|d060380d5e76d367bf631e49d931cafd17a3d42a"",; ""in_hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""in_input_bam"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam"",; ""in_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam.bai"",; ""in_make_bamout"": ""true"",; ""in_make_gvcf"": ""false"",; ""in_preemptible"": ""0"",; ""in_refDict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""in_refIndex"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""in_ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""in_ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""in_ref_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""in_reference"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""in_referenceVersion"": ""hg38"",; ""in_scattered_calling_intervals_list"": ""gs:/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6920#issuecomment-718295174:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6920#issuecomment-718295174,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : HaplotypeCaller DRAGEN WGS1 revised 8_run_2020-10-29 12:00:54.299420663 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""1cb48356-6b1e-467f-8f58-2007ed2bffb3"",; ""test_id"": ""8003518b-70d4-495a-8b84-e91ef320647f"",; ""name"": ""HaplotypeCaller DRAGEN WGS1 revised 8_run_2020-10-29 12:00:54.299420663 UTC"",; ""status"": ""building"",; ""test_input"": {; ""in_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/chm.full.m38.interval_list"",; ""in_dataset_name"": ""CH1_CHM13_WGS1_downsampled"",; ""in_dragstr_params"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.gatk-dragstr-table.txt"",; ""in_enableBQD"": ""true"",; ""in_enableDRAGSTR"": ""true"",; ""in_enableDRDQ"": ""true"",; ""in_enableFRD"": ""true"",; ""in_evalLabel"": ""GATK"",; ""in_gatk_docker_override"": ""image_build:gatk|d060380d5e76d367bf631e49d931cafd17a3d42a"",; ""in_hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""in_input_bam"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam"",; ""in_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam.bai"",; ""in_make_bamout"": ""true"",; ""in_make_gvcf"": ""false"",; ""in_preemptible"": ""0"",; ""in_refDict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""in_refIndex"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""in_ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""in_ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""in_ref_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""in_reference"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""in_referenceVersion"": ""hg38"",; ""in_scattered_calling_intervals_list"": ""gs:/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6920#issuecomment-718707253:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6920#issuecomment-718707253,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : HaplotypeCaller DRAGEN WGS1 revised 8_run_2020-10-29 12:03:54.221081034 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""0e62f4fd-87ba-4804-b1b8-bebe2bdaf4b3"",; ""test_id"": ""8003518b-70d4-495a-8b84-e91ef320647f"",; ""name"": ""HaplotypeCaller DRAGEN WGS1 revised 8_run_2020-10-29 12:03:54.221081034 UTC"",; ""status"": ""building"",; ""test_input"": {; ""in_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/chm.full.m38.interval_list"",; ""in_dataset_name"": ""CH1_CHM13_WGS1_downsampled"",; ""in_dragstr_params"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.gatk-dragstr-table.txt"",; ""in_enableBQD"": ""true"",; ""in_enableDRAGSTR"": ""true"",; ""in_enableDRDQ"": ""true"",; ""in_enableFRD"": ""true"",; ""in_evalLabel"": ""GATK"",; ""in_gatk_docker_override"": ""image_build:gatk|4fa4b23a1b3756080aba2f1eecd791380b3921a6"",; ""in_hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""in_input_bam"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam"",; ""in_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam.bai"",; ""in_make_bamout"": ""true"",; ""in_make_gvcf"": ""false"",; ""in_preemptible"": ""0"",; ""in_refDict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""in_refIndex"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""in_ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""in_ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""in_ref_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""in_reference"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""in_referenceVersion"": ""hg38"",; ""in_scattered_calling_intervals_list"": ""gs:/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-718708689:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-718708689,1,['test'],['test']
Testability,"<details><summary>Started a CARROT test run : HaplotypeCaller DRAGEN WGS1_run_2020-12-03 17:12:22.583536574 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""294dd9eb-5bbd-4756-b71f-479bf9b15d69"",; ""test_id"": ""dfc196dd-c732-4bcb-996c-85c1233cb91e"",; ""name"": ""HaplotypeCaller DRAGEN WGS1_run_2020-12-03 17:12:22.583536574 UTC"",; ""status"": ""building"",; ""test_input"": {; ""TestWrapper.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/chm.full.m38.interval_list"",; ""TestWrapper.dataset_name"": ""CH1_CHM13_WGS1_downsampled"",; ""TestWrapper.dragstr_params"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.gatk-dragstr-table.txt"",; ""TestWrapper.enableBQD"": ""true"",; ""TestWrapper.enableDRAGSTR"": ""true"",; ""TestWrapper.enableDRDQ"": ""true"",; ""TestWrapper.enableFRD"": ""true"",; ""TestWrapper.evalLabel"": ""GATK"",; ""TestWrapper.gatk_docker_override"": ""image_build:gatk|b42606886deb0d0e1cc05a9ac3c2673f75309c67"",; ""TestWrapper.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""TestWrapper.input_bam"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam"",; ""TestWrapper.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam.bai"",; ""TestWrapper.make_bamout"": ""true"",; ""TestWrapper.make_gvcf"": ""false"",; ""TestWrapper.preemptible"": ""0"",; ""TestWrapper.refDict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""TestWrapper.refIndex"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""TestWrapper.ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""TestWrapper.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""TestWrapper.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""TestWr",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738147120:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738147120,11,"['Test', 'test']","['TestWrapper', 'test']"
Testability,=) | `80.822% <ø> (ø)` | `16 <0> (ø)` | :arrow_down: |; | [...lbender/tools/IndexFeatureFileIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5812/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9JbmRleEZlYXR1cmVGaWxlSW50ZWdyYXRpb25UZXN0LmphdmE=) | `88.938% <ø> (-2.212%)` | `32 <0> (-1)` | |; | [...nder/utils/io/DeleteRecursivelyOnExitPathHook.java](https://codecov.io/gh/broadinstitute/gatk/pull/5812/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pby9EZWxldGVSZWN1cnNpdmVseU9uRXhpdFBhdGhIb29rLmphdmE=) | `70% <0%> (-5%)` | `3 <0> (ø)` | |; | [...gine/spark/datasources/ReadsSparkSinkUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5812/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVhZHNTcGFya1NpbmtVbml0VGVzdC5qYXZh) | `75.61% <100%> (ø)` | `23 <0> (ø)` | :arrow_down: |; | [...r/testutils/testers/MarkDuplicatesSparkTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/5812/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90ZXN0dXRpbHMvdGVzdGVycy9NYXJrRHVwbGljYXRlc1NwYXJrVGVzdGVyLmphdmE=) | `89.773% <100%> (ø)` | `22 <0> (ø)` | :arrow_down: |; | [...ender/tools/walkers/fasta/FastaReferenceMaker.java](https://codecov.io/gh/broadinstitute/gatk/pull/5812/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Zhc3RhL0Zhc3RhUmVmZXJlbmNlTWFrZXIuamF2YQ==) | `87.234% <100%> (+0.87%)` | `11 <0> (ø)` | :arrow_down: |; | [...nder/tools/walkers/genotyper/GenotypingEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/5812/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2dlbm90eXBlci9HZW5vdHlwaW5nRW5naW5lLmphdmE=) | `70.248% <100%> (ø)` | `72 <0> (ø)` | :arrow_down: |; | [...der/tools/spark/CreateHadoopBamSplittingIndex.java](https://codecov.io/gh/b,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5812#issuecomment-474932948:2182,test,testutils,2182,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5812#issuecomment-474932948,2,['test'],"['testers', 'testutils']"
Testability,==; Files 1928 1930 +2 ; Lines 145340 145387 +47 ; Branches 16089 16088 -1 ; ===============================================; + Hits 126513 126549 +36 ; - Misses 12966 12981 +15 ; + Partials 5861 5857 -4; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5573?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ools/walkers/annotator/VariantAnnotatorEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/5573/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9WYXJpYW50QW5ub3RhdG9yRW5naW5lLmphdmE=) | `91.304% <ø> (ø)` | `70 <0> (ø)` | :arrow_down: |; | [...line/GATKPlugin/testpluggables/TestAnnotation.java](https://codecov.io/gh/broadinstitute/gatk/pull/5573/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL0dBVEtQbHVnaW4vdGVzdHBsdWdnYWJsZXMvVGVzdEFubm90YXRpb24uamF2YQ==) | `0% <0%> (ø)` | `0 <0> (?)` | |; | [...line/GATKPlugin/testpluggables/TestReadFilter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5573/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL0dBVEtQbHVnaW4vdGVzdHBsdWdnYWJsZXMvVGVzdFJlYWRGaWx0ZXIuamF2YQ==) | `0% <0%> (ø)` | `0 <0> (?)` | |; | [...dinstitute/hellbender/engine/GATKToolUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5573/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvR0FUS1Rvb2xVbml0VGVzdC5qYXZh) | `91.017% <100%> (+0.473%)` | `71 <0> (ø)` | :arrow_down: |; | [...ine/GATKPlugin/GATKReadFilterPluginDescriptor.java](https://codecov.io/gh/broadinstitute/gatk/pull/5573/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL0dBVEtQbHVnaW4vR0FUS1JlYWRGaWx0ZXJQbHVnaW5EZXNjcmlwdG9yLmphdmE=) | `83.846% <100%> (+0.252%)` | `49 <2> (ø)` | :arrow_down: |; | [...GATKPlugin/GATKReadFilterPluginDescriptorTest.java](https://codecov.io/gh/broadinstitute/gatk,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5573#issuecomment-455708523:1575,test,testpluggables,1575,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5573#issuecomment-455708523,2,"['Test', 'test']","['TestReadFilter', 'testpluggables']"
Testability,====; Files 1088 1089 +1 ; Lines 63975 66116 +2141 ; Branches 10313 10913 +600 ; ===============================================; + Hits 51407 53317 +1910 ; - Misses 8555 8661 +106 ; - Partials 4013 4138 +125; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4545?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ender/engine/spark/datasources/ReadsSparkSink.java](https://codecov.io/gh/broadinstitute/gatk/pull/4545/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVhZHNTcGFya1NpbmsuamF2YQ==) | `77.027% <ø> (ø)` | `33 <0> (ø)` | :arrow_down: |; | [...hellbender/tools/spark/pipelines/SortSamSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4545/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvU29ydFNhbVNwYXJrLmphdmE=) | `100% <100%> (+29.412%)` | `6 <3> (+2)` | :arrow_up: |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4545/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `65.541% <40%> (-0.432%)` | `39 <1> (+2)` | |; | [...der/engine/spark/datasources/ReadsSparkSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4545/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVhZHNTcGFya1NvdXJjZS5qYXZh) | `80.208% <87.5%> (+0.663%)` | `31 <0> (ø)` | :arrow_down: |; | [...itute/hellbender/utils/test/SamAssertionUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4545/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1NhbUFzc2VydGlvblV0aWxzLmphdmE=) | `70.256% <0%> (-2.564%)` | `42% <0%> (-4%)` | |; | [...nder/tools/funcotator/TranscriptSelectionMode.java](https://codecov.io/gh/broadinstitute/gatk/pull/4545/diff?src=pr&el=tree#diff-c3Jj,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4545#issuecomment-374774747:1591,test,test,1591,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4545#issuecomment-374774747,1,['test'],['test']
Testability,======; + Hits 30174 30401 +227 ; - Misses 6767 6830 +63 ; - Partials 2619 2629 +10; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2488?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/compare/e1e71d7091ee703e547842d025e92ac698407ff0...8e22a8a5969d2efc6f49ac272e53e893eb5eb048?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `68.217% <ø> (-5.394%)` | `33 <0> (-3)` | |; | [...nder/tools/walkers/genotyper/GenotypingEngine.java](https://codecov.io/gh/broadinstitute/gatk/compare/e1e71d7091ee703e547842d025e92ac698407ff0...8e22a8a5969d2efc6f49ac272e53e893eb5eb048?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2dlbm90eXBlci9HZW5vdHlwaW5nRW5naW5lLmphdmE=) | `45.267% <0%> (-1.635%)` | `36% <0%> (+4%)` | |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/compare/e1e71d7091ee703e547842d025e92ac698407ff0...8e22a8a5969d2efc6f49ac272e53e893eb5eb048?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `86.4% <0%> (-0.8%)` | `35% <0%> (-1%)` | |; | [...notyper/GenotypeCalculationArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/compare/e1e71d7091ee703e547842d025e92ac698407ff0...8e22a8a5969d2efc6f49ac272e53e893eb5eb048?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2dlbm90eXBlci9HZW5vdHlwZUNhbGN1bGF0aW9uQXJndW1lbnRDb2xsZWN0aW9uLmphdmE=) | `100% <0%> (ø)` | `2% <0%> (ø)` | :arrow_down: |; | [...ute/hellbender/cmdline/StrictBooleanConverter.java](https://codecov.io/gh/broadinstitute/gatk/compare/e1e71d7091ee703e547842d025e92ac698407ff0...8e22a8a5969d2efc6f49ac272e53e893eb5eb048?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbG,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2488#issuecomment-287907716:1703,test,test,1703,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2488#issuecomment-287907716,1,['test'],['test']
Testability,=============; Files 1075 1074 -1 ; Lines 62917 62907 -10 ; Branches 10181 10181 ; ==============================================; - Hits 50222 50057 -165 ; - Misses 8714 8875 +161 ; + Partials 3981 3975 -6; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4664?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4664/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-74.257%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4664/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4664/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-65.217%)` | `2% <0%> (-7%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4664/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-10%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4664/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `0% <0%> (-22.807%)` | `0% <0%> (-2%)` | |; | [...titute/hellbender/utils/test/MiniClusterUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4664/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vc,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4664#issuecomment-381982668:1571,test,test,1571,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4664#issuecomment-381982668,1,['test'],['test']
Testability,===============; Files 1048 1049 +1 ; Lines 59579 59580 +1 ; Branches 9730 9730 ; ===============================================; - Hits 47122 46885 -237 ; - Misses 8679 8927 +248 ; + Partials 3778 3768 -10; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4293?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4293/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-75.51%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4293/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4293/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4293/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `25.735% <0%> (-44.853%)` | `8% <0%> (-19%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4293/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-9%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4293/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vc,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4293#issuecomment-361362648:1573,test,test,1573,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4293#issuecomment-361362648,1,['test'],['test']
Testability,===============; Files 1782 1782 ; Lines 132603 134161 +1558 ; Branches 14761 15067 +306 ; ==============================================; + Hits 114543 116007 +1464 ; - Misses 12740 12805 +65 ; - Partials 5320 5349 +29; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5038?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...itute/hellbender/tools/walkers/mutect/Mutect2.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NdXRlY3QyLmphdmE=) | `89.286% <0%> (-3.571%)` | `18 <1> (ø)` | |; | [...formers/PalindromeArtifactClipReadTransformer.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90cmFuc2Zvcm1lcnMvUGFsaW5kcm9tZUFydGlmYWN0Q2xpcFJlYWRUcmFuc2Zvcm1lci5qYXZh) | `97.143% <80%> (-2.857%)` | `21 <0> (+4)` | |; | [...iscovery/TestUtilsForAssemblyBasedSVDiscovery.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvVGVzdFV0aWxzRm9yQXNzZW1ibHlCYXNlZFNWRGlzY292ZXJ5LmphdmE=) | `88.889% <0%> (-6.633%)` | `12% <0%> (-1%)` | |; | [...dataSources/vcf/VcfFuncotationFactoryUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL3ZjZi9WY2ZGdW5jb3RhdGlvbkZhY3RvcnlVbml0VGVzdC5qYXZh) | `97.656% <0%> (-0.43%)` | `40% <0%> (+11%)` | |; | [.../AssemblyContigAlignmentsConfigPickerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvYWxpZ25tZW50L0Fzc2VtYmx5Q29udGlnQWxpZ25tZW50c0NvbmZpZ1BpY2tlclVuaXRUZXN0LmphdmE=) | `99.415% <0%> (-0.19%)` | `34% <0%> (+14%)` | ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406399931:1554,Test,TestUtilsForAssemblyBasedSVDiscovery,1554,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406399931,1,['Test'],['TestUtilsForAssemblyBasedSVDiscovery']
Testability,=================; Files 1039 1040 +1 ; Lines 59173 59338 +165 ; Branches 9686 9706 +20 ; =============================================; + Hits 46429 46699 +270 ; + Misses 8993 8888 -105 ; Partials 3751 3751; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4261?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4261/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-75.51%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4261/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4261/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4261/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `25.735% <0%> (-44.853%)` | `8% <0%> (-19%)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/4261/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4261/diff?src=pr&el=tree#dif,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4261#issuecomment-360582924:1565,test,test,1565,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4261#issuecomment-360582924,1,['test'],['test']
Testability,=====================; Files 1041 1041 ; Lines 59099 59099 ; Branches 9673 9673 ; ===============================================; - Hits 46379 46137 -242 ; - Misses 8978 9231 +253 ; + Partials 3742 3731 -11; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4207?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4207/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-75.51%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4207/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4207/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4207/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `25.735% <0%> (-44.853%)` | `8% <0%> (-19%)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/4207/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4207/diff?src=pr&el=tree#dif,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4207#issuecomment-359069626:1567,test,test,1567,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4207#issuecomment-359069626,1,['test'],['test']
Testability,=====================; Files 1041 1041 ; Lines 59113 59113 ; Branches 9673 9673 ; ===============================================; - Hits 46391 46157 -234 ; - Misses 8983 9228 +245 ; + Partials 3739 3728 -11; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4217?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4217/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-75.51%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4217/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4217/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4217/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `25.735% <0%> (-44.853%)` | `8% <0%> (-19%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4217/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-9%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4217/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vc,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4217#issuecomment-359382718:1567,test,test,1567,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4217#issuecomment-359382718,1,['test'],['test']
Testability,======================; Files 1039 1039 ; Lines 59173 59173 ; Branches 9686 9686 ; ==============================================; - Hits 46426 46195 -231 ; - Misses 8996 9237 +241 ; + Partials 3751 3741 -10; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4259?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4259/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-75.51%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4259/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4259/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4259/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `25.735% <0%> (-44.853%)` | `8% <0%> (-19%)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/4259/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4259/diff?src=pr&el=tree#dif,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4259#issuecomment-360544364:1562,test,test,1562,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4259#issuecomment-360544364,1,['test'],['test']
Testability,======================; Files 1058 1058 ; Lines 59682 59682 ; Branches 9712 9712 ; ==============================================; - Hits 46840 46588 -252 ; - Misses 9084 9346 +262 ; + Partials 3758 3748 -10; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3946?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3946/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-75.51%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3946/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/3946/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/3946/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `25.735% <0%> (-60.294%)` | `8% <0%> (-25%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3946/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-9%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/3946/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vc,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3946#issuecomment-351112321:1563,test,test,1563,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3946#issuecomment-351112321,1,['test'],['test']
Testability,=======================; Files 1062 1062 ; Lines 61677 61677 ; Branches 9983 9983 ; ==============================================; - Hits 49243 49079 -164 ; - Misses 8539 8708 +169 ; + Partials 3895 3890 -5; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4590?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4590/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-75.51%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4590/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4590/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-65.217%)` | `2% <0%> (-7%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4590/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-9%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4590/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `0% <0%> (-22.807%)` | `0% <0%> (-2%)` | |; | [...titute/hellbender/utils/test/MiniClusterUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4590/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcm,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4590#issuecomment-376423720:1562,test,test,1562,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4590#issuecomment-376423720,1,['test'],['test']
Testability,========================; Files 1187 1192 +5 ; Lines 65403 65446 +43 ; Branches 9932 9939 +7 ; ===============================================; + Hits 51987 52011 +24 ; - Misses 9429 9437 +8 ; - Partials 3987 3998 +11; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3611?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ools/spark/pathseq/PSFilterArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/3611/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9wYXRoc2VxL1BTRmlsdGVyQXJndW1lbnRDb2xsZWN0aW9uLmphdmE=) | `79.31% <ø> (-0.69%)` | `2 <0> (ø)` | |; | [...ols/spark/pathseq/loggers/PSFilterEmptyLogger.java](https://codecov.io/gh/broadinstitute/gatk/pull/3611/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9wYXRoc2VxL2xvZ2dlcnMvUFNGaWx0ZXJFbXB0eUxvZ2dlci5qYXZh) | `0% <0%> (ø)` | `0 <0> (?)` | |; | [...ools/spark/pathseq/loggers/PSFilterFileLogger.java](https://codecov.io/gh/broadinstitute/gatk/pull/3611/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9wYXRoc2VxL2xvZ2dlcnMvUFNGaWx0ZXJGaWxlTG9nZ2VyLmphdmE=) | `100% <100%> (ø)` | `8 <8> (?)` | |; | [...itute/hellbender/tools/spark/pathseq/PSFilter.java](https://codecov.io/gh/broadinstitute/gatk/pull/3611/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9wYXRoc2VxL1BTRmlsdGVyLmphdmE=) | `94.828% <100%> (+2.775%)` | `28 <6> (-5)` | :arrow_down: |; | [...er/tools/spark/pathseq/loggers/PSScoreMetrics.java](https://codecov.io/gh/broadinstitute/gatk/pull/3611/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9wYXRoc2VxL2xvZ2dlcnMvUFNTY29yZU1ldHJpY3MuamF2YQ==) | `100% <100%> (ø)` | `1 <1> (?)` | |; | [...tools/spark/pathseq/loggers/PSScoreFileLogger.java](https://codecov.io/gh/broadinstitute/gatk/pull/3611/diff?src=pr,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3611#issuecomment-332025444:1552,log,loggers,1552,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3611#issuecomment-332025444,1,['log'],['loggers']
Testability,==========================; Files 743 744 +1 ; Lines 38991 39038 +47 ; Methods 0 0 ; Messages 0 0 ; Branches 8120 8130 +10 ; ==========================================; + Hits 29687 29714 +27 ; - Misses 6734 6749 +15 ; - Partials 2570 2575 +5 ; ```. ![Sunburst](https://codecov.io/gh/broadinstitute/gatk/pull/2331/graphs/sunburst.svg?src=pr&size=150). | Diff Coverage | File Path |; |---|---|; | •••••• 66% | [...a/org/broadinstitute/hellbender/engine/GATKTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/2331/compare#diff-7372632F6D61696E2F6A6176612F6F72672F62726F6164696E737469747574652F68656C6C62656E6465722F656E67696E652F4741544B546F6F6C2E6A617661) |; | •••••• 68% | [...roadinstitute/hellbender/engine/ReadsDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/2331/compare#diff-7372632F6D61696E2F6A6176612F6F72672F62726F6164696E737469747574652F68656C6C62656E6465722F656E67696E652F526561647344617461536F757263652E6A617661) |; | ••••••• 73% | *new* [...broadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/2331/compare#diff-7372632F6D61696E2F6A6176612F6F72672F62726F6164696E737469747574652F68656C6C62656E6465722F7574696C732F746573742F586F72577261707065722E6A617661) |; | •••••••••• 100% | [.../hellbender/cmdline/StandardArgumentDefinitions.java](https://codecov.io/gh/broadinstitute/gatk/pull/2331/compare#diff-7372632F6D61696E2F6A6176612F6F72672F62726F6164696E737469747574652F68656C6C62656E6465722F636D646C696E652F5374616E64617264417267756D656E74446566696E6974696F6E732E6A617661) |; | •••••••••• 100% | [...lbender/utils/nio/SeekableByteChannelPrefetcher.java](https://codecov.io/gh/broadinstitute/gatk/pull/2331/compare#diff-7372632F6D61696E2F6A6176612F6F72672F62726F6164696E737469747574652F68656C6C62656E6465722F7574696C732F6E696F2F5365656B61626C65427974654368616E6E656C507265666574636865722E6A617661) |; | •••••••••• 100% | [...broadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2331#issuecomment-271027025:1362,test,test,1362,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2331#issuecomment-271027025,1,['test'],['test']
Testability,=================================; + Coverage 79.04% 79.05% +0.01% ; - Complexity 16447 16450 +3 ; ============================================; Files 1047 1047 ; Lines 59189 59188 -1 ; Branches 9672 9672 ; ============================================; + Hits 46783 46788 +5 ; + Misses 8644 8638 -6 ; Partials 3762 3762; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4401?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...nder/tools/examples/ExampleVariantWalkerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4401/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leGFtcGxlcy9FeGFtcGxlVmFyaWFudFdhbGtlclNwYXJrLmphdmE=) | `73.077% <100%> (-0.997%)` | `5 <0> (ø)` | |; | [...park/sv/discovery/alignment/AlignmentInterval.java](https://codecov.io/gh/broadinstitute/gatk/pull/4401/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvYWxpZ25tZW50L0FsaWdubWVudEludGVydmFsLmphdmE=) | `89.272% <0%> (ø)` | `73% <0%> (ø)` | :arrow_down: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4401/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `80% <0%> (+1.29%)` | `39% <0%> (ø)` | :arrow_down: |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4401/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `78.261% <0%> (+4.348%)` | `9% <0%> (+1%)` | :arrow_up: |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/4401/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `80% <0%> (+30%)` | `3% <0%> (+2%)` | :arrow_up: |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4401#issuecomment-367136245:1853,test,test,1853,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4401#issuecomment-367136245,1,['test'],['test']
Testability,==================================; Files 1080 1080 ; Lines 63109 63093 -16 ; Branches 10184 10179 -5 ; ===============================================; - Hits 50475 50460 -15 ; - Misses 8646 8648 +2 ; + Partials 3988 3985 -3; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4711?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...institute/hellbender/exceptions/UserException.java](https://codecov.io/gh/broadinstitute/gatk/pull/4711/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9leGNlcHRpb25zL1VzZXJFeGNlcHRpb24uamF2YQ==) | `70.229% <0%> (-1.089%)` | `3 <0> (ø)` | |; | [.../tools/copynumber/PostprocessGermlineCNVCalls.java](https://codecov.io/gh/broadinstitute/gatk/pull/4711/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL1Bvc3Rwcm9jZXNzR2VybWxpbmVDTlZDYWxscy5qYXZh) | `91.071% <100%> (ø)` | `23 <0> (ø)` | :arrow_down: |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4711/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `63.91% <100%> (-0.535%)` | `33 <1> (ø)` | |; | [...dinstitute/hellbender/utils/R/RScriptExecutor.java](https://codecov.io/gh/broadinstitute/gatk/pull/4711/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9SL1JTY3JpcHRFeGVjdXRvci5qYXZh) | `80.556% <100%> (ø)` | `17 <0> (ø)` | :arrow_down: |; | [...rg/broadinstitute/hellbender/utils/io/IOUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4711/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pby9JT1V0aWxzLmphdmE=) | `62.366% <60%> (-0.011%)` | `45 <2> (-7)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/4711/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbm,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4711#issuecomment-384791581:1559,test,test,1559,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4711#issuecomment-384791581,1,['test'],['test']
Testability,======================================; Files 1056 1056 ; Lines 59183 59637 +454 ; Branches 9622 9750 +128 ; ===============================================; - Hits 46755 7359 -39396 ; - Misses 8686 51158 +42472 ; + Partials 3742 1120 -2622; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4107?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...stitute/hellbender/tools/HaplotypeCallerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4107/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9IYXBsb3R5cGVDYWxsZXJTcGFyay5qYXZh) | `0% <0%> (-82.022%)` | `0 <0> (-23)` | |; | [...r/utils/solver/UnivariateSolverJobDescription.java](https://codecov.io/gh/broadinstitute/gatk/pull/4107/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zb2x2ZXIvVW5pdmFyaWF0ZVNvbHZlckpvYkRlc2NyaXB0aW9uLmphdmE=) | `0% <0%> (-100%)` | `0% <0%> (-6%)` | |; | [...ools/spark/pathseq/loggers/PSFilterFileLogger.java](https://codecov.io/gh/broadinstitute/gatk/pull/4107/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9wYXRoc2VxL2xvZ2dlcnMvUFNGaWx0ZXJGaWxlTG9nZ2VyLmphdmE=) | `0% <0%> (-100%)` | `0% <0%> (-8%)` | |; | [...ender/tools/ApplyBQSRUniqueArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/4107/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9BcHBseUJRU1JVbmlxdWVBcmd1bWVudENvbGxlY3Rpb24uamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-2%)` | |; | [...ender/utils/downsampling/ReservoirDownsampler.java](https://codecov.io/gh/broadinstitute/gatk/pull/4107/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvUmVzZXJ2b2lyRG93bnNhbXBsZXIuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-21%)` | |; | [...er/tools/walkers/annotator/ReadPosRankSumTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4107/diff?src=p,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4107#issuecomment-356345394:1541,log,loggers,1541,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4107#issuecomment-356345394,1,['log'],['loggers']
Testability,=======================================; - Coverage 86.658% 79.205% -7.452% ; + Complexity 39020 36810 -2210 ; ===============================================; Files 2337 2337 ; Lines 182961 182961 ; Branches 20080 20079 -1 ; ===============================================; - Hits 158550 144915 -13635 ; - Misses 17363 31204 +13841 ; + Partials 7048 6842 -206 ; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/8064?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute) | Coverage Δ | |; |---|---|---|; | [...hellbender/tools/copynumber/GermlineCNVCaller.java](https://codecov.io/gh/broadinstitute/gatk/pull/8064?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL0dlcm1saW5lQ05WQ2FsbGVyLmphdmE=) | `81.000% <ø> (ø)` | |; | [...adinstitute/hellbender/utils/help/TestWDLTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/8064?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9oZWxwL1Rlc3RXRExUb29sLmphdmE=) | `0.000% <0.000%> (-100.000%)` | :arrow_down: |; | [...kers/filters/VariantFiltrationIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/8064?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2ZpbHRlcnMvVmFyaWFudEZpbHRyYXRpb25JbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `0.658% <0.000%> (-99.342%)` | :arrow_down: |; | [...s/variantutils/VariantsToTableIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/8064?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8064#issuecomment-1284626564:2006,Test,TestWDLTool,2006,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8064#issuecomment-1284626564,1,['Test'],['TestWDLTool']
Testability,=========================================; + Hits 50679 55644 +4965 ; - Misses 8579 9335 +756 ; - Partials 3987 4253 +266; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4805?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...pleNovelAdjacencyAndChimericAlignmentEvidence.java](https://codecov.io/gh/broadinstitute/gatk/pull/4805/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvaW5mZXJlbmNlL1NpbXBsZU5vdmVsQWRqYWNlbmN5QW5kQ2hpbWVyaWNBbGlnbm1lbnRFdmlkZW5jZS5qYXZh) | `62.963% <0%> (-24.537%)` | `13% <0%> (+3%)` | |; | [...overy/inference/NovelAdjacencyAndAltHaplotype.java](https://codecov.io/gh/broadinstitute/gatk/pull/4805/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvaW5mZXJlbmNlL05vdmVsQWRqYWNlbmN5QW5kQWx0SGFwbG90eXBlLmphdmE=) | `75.556% <0%> (-3.81%)` | `30% <0%> (+1%)` | |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4805/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `62.887% <0%> (-3.086%)` | `53% <0%> (+16%)` | |; | [...ead/markduplicates/sparkrecords/EmptyFragment.java](https://codecov.io/gh/broadinstitute/gatk/pull/4805/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9FbXB0eUZyYWdtZW50LmphdmE=) | `86.207% <0%> (-2.682%)` | `16% <0%> (+7%)` | |; | [...transforms/markduplicates/MarkDuplicatesSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4805/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay90cmFuc2Zvcm1zL21hcmtkdXBsaWNhdGVzL01hcmtEdXBsaWNhdGVzU3BhcmsuamF2YQ==) | `96.429% <0%> (-1.648%)` | `29% <0%> (+10%)` | |; | [...iscoverFromLocalAssemblyContigAlignmentsSpark.java](https://codecov.io/gh/broadinstit,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4805#issuecomment-391588915:1676,test,test,1676,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4805#issuecomment-391588915,1,['test'],['test']
Testability,===========================================; - Coverage 80.422% 80.42% -0.003% ; - Complexity 17290 17299 +9 ; ==============================================; Files 1165 1165 ; Lines 62597 62644 +47 ; Branches 9768 9780 +12 ; ==============================================; + Hits 50342 50378 +36 ; - Misses 8350 8355 +5 ; - Partials 3905 3911 +6; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3243?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ypecaller/AssemblyBasedCallerGenotypingEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/3243?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9Bc3NlbWJseUJhc2VkQ2FsbGVyR2Vub3R5cGluZ0VuZ2luZS5qYXZh) | `77.848% <ø> (ø)` | `59 <0> (ø)` | :arrow_down: |; | [.../tools/walkers/mutect/SomaticGenotypingEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/3243?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9Tb21hdGljR2Vub3R5cGluZ0VuZ2luZS5qYXZh) | `93.617% <100%> (-0.045%)` | `57 <1> (ø)` | |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/3243?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb250ZXh0RmFjdG9yeS5qYXZh) | `66.667% <0%> (-3.333%)` | `10% <0%> (ø)` | |; | [...te/hellbender/utils/genotyper/ReadLikelihoods.java](https://codecov.io/gh/broadinstitute/gatk/pull/3243?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nZW5vdHlwZXIvUmVhZExpa2VsaWhvb2RzLmphdmE=) | `86.106% <0%> (-0.391%)` | `141% <0%> (-2%)` | |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3243?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `84.153% <0%> (+0.449%)` | `47% <0%> (+11%)` | :arrow_up: |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3243#issuecomment-314324015:2174,test,test,2174,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3243#issuecomment-314324015,1,['test'],['test']
Testability,============================================; Files 1119 1189 +70 ; Lines 60168 65580 +5412 ; Branches 9498 9959 +461 ; ===============================================; + Hits 47643 52102 +4459 ; - Misses 8822 9487 +665 ; - Partials 3703 3991 +288; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3447?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [.../broadinstitute/hellbender/utils/LoggingUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3447/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9Mb2dnaW5nVXRpbHMuamF2YQ==) | `82.222% <ø> (ø)` | `11 <0> (ø)` | :arrow_down: |; | [...ellbender/cmdline/StandardArgumentDefinitions.java](https://codecov.io/gh/broadinstitute/gatk/pull/3447/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL1N0YW5kYXJkQXJndW1lbnREZWZpbml0aW9ucy5qYXZh) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3447/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `65.926% <ø> (ø)` | `35 <0> (ø)` | :arrow_down: |; | [...ellbender/utils/config/CustomBooleanConverter.java](https://codecov.io/gh/broadinstitute/gatk/pull/3447/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9jb25maWcvQ3VzdG9tQm9vbGVhbkNvbnZlcnRlci5qYXZh) | `100% <100%> (ø)` | `2 <2> (?)` | |; | [...rg/broadinstitute/hellbender/utils/io/IOUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3447/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pby9JT1V0aWxzLmphdmE=) | `60.104% <100%> (+0.418%)` | `50 <2> (+1)` | :arrow_up: |; | [...stitute/hellbender/cmdline/CommandLineProgram.java](https://codecov.io/gh/broadinstitute/gatk/pull/3447/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aX,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3447#issuecomment-323474032:1552,test,test,1552,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3447#issuecomment-323474032,1,['test'],['test']
Testability,=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...llbender/engine/spark/SparkCommandLineProgram.java](https://codecov.io/gh/broadinstitute/gatk/pull/3352?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb21tYW5kTGluZVByb2dyYW0uamF2YQ==) | `68.75% <0%> (-25%)` | `6% <0%> (-1%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3352?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `53.947% <0%> (-20.395%)` | `29% <0%> (-7%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/3352?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `10.169% <0%> (-13.559%)` | `1% <0%> (-1%)` | |; | [...ender/engine/datasources/ReferenceMultiSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/3352?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlTXVsdGlTb3VyY2UuamF2YQ==) | `70.37% <0%> (-11.111%)` | `10% <0%> (ø)` | |; | [...titute/hellbender/utils/test/MiniClusterUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3352?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L01pbmlDbHVzdGVyVXRpbHMuamF2YQ==) | `78.947% <0%> (-10.526%)` | `6% <0%> (-1%)` | |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3352?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `78.519% <0%> (-5.185%)` | `31% <0%> (-5%)` | |; | ... and [5 more](https://codecov.io/gh/broadinstitute/gatk/pull/3352?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3352#issuecomment-317572507:3280,test,test,3280,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3352#issuecomment-317572507,2,['test'],['test']
Testability,=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...llbender/engine/spark/SparkCommandLineProgram.java](https://codecov.io/gh/broadinstitute/gatk/pull/3495?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb21tYW5kTGluZVByb2dyYW0uamF2YQ==) | `68.75% <0%> (-25%)` | `6% <0%> (-1%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3495?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `55.263% <0%> (-19.079%)` | `30% <0%> (-8%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/3495?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `10.169% <0%> (-13.559%)` | `1% <0%> (-1%)` | |; | [...ender/engine/datasources/ReferenceMultiSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/3495?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlTXVsdGlTb3VyY2UuamF2YQ==) | `70.37% <0%> (-11.111%)` | `10% <0%> (ø)` | |; | [...titute/hellbender/utils/test/MiniClusterUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3495?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L01pbmlDbHVzdGVyVXRpbHMuamF2YQ==) | `78.947% <0%> (-10.526%)` | `6% <0%> (-1%)` | |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3495?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `78.519% <0%> (-5.185%)` | `31% <0%> (-5%)` | |; | ... and [6 more](https://codecov.io/gh/broadinstitute/gatk/pull/3495?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3495#issuecomment-324605546:3285,test,test,3285,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3495#issuecomment-324605546,2,['test'],['test']
Testability,=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `41.216% <0%> (-30.405%)` | `26% <0%> (-8%)` | |; | [...llbender/engine/spark/SparkCommandLineProgram.java](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb21tYW5kTGluZVByb2dyYW0uamF2YQ==) | `68.75% <0%> (-25%)` | `6% <0%> (-1%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `10.169% <0%> (-13.559%)` | `1% <0%> (-1%)` | |; | [...ender/engine/datasources/ReferenceMultiSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlTXVsdGlTb3VyY2UuamF2YQ==) | `70.37% <0%> (-11.111%)` | `10% <0%> (ø)` | |; | [...titute/hellbender/utils/test/MiniClusterUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L01pbmlDbHVzdGVyVXRpbHMuamF2YQ==) | `78.947% <0%> (-10.526%)` | `6% <0%> (-1%)` | |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `77.863% <0%> (-5.344%)` | `31% <0%> (-5%)` | |; | ... and [5 more](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3111#issuecomment-308324914:3273,test,test,3273,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3111#issuecomment-308324914,2,['test'],['test']
Testability,=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9tZXRyaWNzL2FuYWx5c2lzL0FsbGVsZUZyZXF1ZW5jeVFDTWV0cmljLmphdmE=) | `100.000% <ø> (ø)` | |; | [...trics/analysis/BaseDistributionByCycleMetrics.java](https://codecov.io/gh/broadinstitute/gatk/pull/7749?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9tZXRyaWNzL2FuYWx5c2lzL0Jhc2VEaXN0cmlidXRpb25CeUN5Y2xlTWV0cmljcy5qYXZh) | `100.000% <ø> (ø)` | |; | [...r/tools/spark/pathseq/loggers/PSFilterMetrics.java](https://codecov.io/gh/broadinstitute/gatk/pull/7749?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9wYXRoc2VxL2xvZ2dlcnMvUFNGaWx0ZXJNZXRyaWNzLmphdmE=) | `77.778% <ø> (ø)` | |; | [...er/tools/spark/pathseq/loggers/PSScoreMetrics.java](https://codecov.io/gh/broadinstitute/gatk/pull/7749?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9wYXRoc2VxL2xvZ2dlcnMvUFNTY29yZU1ldHJpY3MuamF2YQ==) | `100.000% <ø> (ø)` | |; | [...lbender/utils/help/GATKHelpDocWorkUnitHandler.java](https://codecov.io/gh/broadinstitute/gatk/pull/7749?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9oZWxwL0dBVEtIZWxwRG9jV29ya1VuaXRIYW5kbGVyLmphdmE=) | `33.333% <13.333%> (-36.667%)` | :arrow_down: |; | [...ender/tools/spark/sv/utils/GATKSVVCFConstants.java](https://codecov.io/gh/broadinstitute/gatk/pull/7749?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#di,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7749#issuecomment-1115305512:3525,log,loggers,3525,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7749#issuecomment-1115305512,1,['log'],['loggers']
Testability,> * `gatk_override`. this will need to be a parameter (but can be optional and have a default) in order to have our integration tests run `GvsJointVariantCalling.wdl` anyway. > * `interval_list`. this will need to be a parameter (but can be optional and have a default) in order to have our integration tests run `GvsJointVariantCalling.wdl` on exomes. > * `use_VQSR_lite`; > * `extract_do_not_filter_override`. these two will need to be a parameter (but can be optional and have a default) in order to have our integration tests run `GvsJointVariantCalling.wdl` with VQSR classic anyway. > * `filter_set_name`; > * `extract_table_prefix`. these two can just default to the `call_set_identifier` with weird characters parsed out,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8404#issuecomment-1634174283:128,test,tests,128,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8404#issuecomment-1634174283,3,['test'],['tests']
Testability,"> + }; > +; >; > extra whitespace line; > ------------------------------; >; > In src/test/java/org/broadinstitute/hellbender/tools/copynumber/; > CreateBinningIntervalsIntegrationTest.java; > <https://github.com/broadinstitute/gatk/pull/3597#discussion_r140646314>:; >; > > + runCommandLine(args);; > +; > + // read the contents of the output file and print them out; > + // printOutputFile(outputFile);; > +; > + // read the bins from the output file; > + IntervalList binsFromFile = IntervalList.fromFile(outputFile);; > +; > + // we expect the following result; > + IntervalList binsExpected = new IntervalList(binsFromFile.getHeader().getSequenceDictionary());; > + String contig = binsFromFile.iterator().next().getContig();; > + binsExpected.add(new Interval(contig, 1, 10000));; > + binsExpected.add(new Interval(contig, 10001, 20000));; > + binsExpected.add(new Interval(contig, 20001, 20500));; > +; > + // compare the file contents to the expected result; >; > Unnecessary comment; > ------------------------------; >; > In src/test/java/org/broadinstitute/hellbender/tools/copynumber/; > CreateBinningIntervalsIntegrationTest.java; > <https://github.com/broadinstitute/gatk/pull/3597#discussion_r140646351>:; >; > > + ""-"" + CreateBinningIntervals.WIDTH_OF_BINS_SHORT_NAME, Integer.toString(widthOfBins),; > + ""-"" + CreateBinningIntervals.PADDING_SHORT_NAME, Integer.toString(padding),; > + ""-O"", outputFile.getAbsolutePath(); > + };; > + runCommandLine(args);; > +; > + // read the contents of the output file and print them out; > + // printOutputFile(outputFile);; > +; > + // read the bins from the output file; > + IntervalList binsFromFile = IntervalList.fromFile(outputFile);; > +; > + // we expect the following result; > + IntervalList binsExpected = new IntervalList(binsFromFile.getHeader().getSequenceDictionary());; > + String contig = binsFromFile.iterator().next().getContig();; > + binsExpected.add(new Interval(contig, 1, 10000000));; >; > I think how you have it is fine, ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3597#issuecomment-331744211:14718,test,test,14718,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3597#issuecomment-331744211,1,['test'],['test']
Testability,"> ; > ; > @teepean We generally don't test on Windows, though we do try to keep things working there if possible. Is there any chance you could try running [this branch](https://github.com/broadinstitute/gatk/tree/cn_temp_dr_windows) in the same environment that previously failed, and see if it solves the problem ? Thx ?. This fixed the problem and everything else seems to be working correctly. Thank you!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5805#issuecomment-473995484:38,test,test,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5805#issuecomment-473995484,1,['test'],['test']
Testability,"> > > LGTM. Seems superficially odd that we ultimately want to _reduce_ the disk size for pgen on larger callsets, but I trust the results of your analysis; > > ; > > ; > > Disk size is less of a concern because (at least with GCP historically) going too low on disk size risks much slower I/O without commiserate savings.; > ; > Yes, that's also what I thought as well. That's why it seemed a little odd that this PR included a change that _lowered_ the default disk size on the VMs if they weren't specified from 500 to 200. I always thought going too low was the worry, and that disk size in general isn't much of a concern. But this PR appears to lower the default disk size by 60%, unless I am reading that completely wrong. The logs showed a max of 7% disk space, so it seemed fair to reduce it somewhat. But your comment reminded me that I also meant to adjust the `effective_extract_memory_gib` calculation, so I will do that now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8979#issuecomment-2349192759:734,log,logs,734,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8979#issuecomment-2349192759,1,['log'],['logs']
Testability,"> > I've manually kicked off our integration tests on this branch. If that passes (it should take a couple of hours), I'll give this a thumb.; > ; > SG! I also pushed this to Agora and will test it out using our genomic extraction workflow. our error is resolved with this PR",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/9023#issuecomment-2447390883:45,test,tests,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/9023#issuecomment-2447390883,2,['test'],"['test', 'tests']"
Testability,"> @Ben-Habermeyer We had a few PRs in late 2021 that may have fixed this. If it's still occurring in the latest GATK version I would like to take a look at it. ok @davidbenjamin I got a chance to test with latest release `4.3.0.0` and the issue seems to be mostly resolved when running `--alleles` on our test samples. Additionally, `FilterMutectCalls` works on low DP variants. . For control samples, using the `--alleles` option results in an error due to the value of the stats `callable`. . Combination of this call:; ```; chr18 77560878 . AA TT . . AS_SB_TABLE=0,0|0,0;DP=1;ECNT=2;MBQ=0,90;MFRL=0,100;MMQ=60,60;MPOS=29;POPAF=7.30;TLOD=4.20 GT:AD:AF:DP:F1R2:F2R1:FAD:PGT:PID:PS:SB 0|1:0,1:0.667:1:0,1:0,0:0,1:0|1:77560878_AA_TT:77560878:0,0,0,1; ```; and the stats file containing:; ```; callable 1.0; ```; results in FilterMutectCalls exception; ```; java.lang.IllegalArgumentException: logValues must be non-infinite and non-NAN; at org.broadinstitute.hellbender.utils.NaturalLogUtils.logSumExp(NaturalLogUtils.java:84); at org.broadinstitute.hellbender.utils.NaturalLogUtils.normalizeLog(NaturalLogUtils.java:51); at org.broadinstitute.hellbender.utils.NaturalLogUtils.normalizeFromLogToLinearSpace(NaturalLogUtils.java:27); at org.broadinstitute.hellbender.tools.walkers.mutect.filtering.Mutect2FilteringEngine.posteriorProbabilityOfError(Mutect2FilteringEngine.java:93); at org.broadinstitute.hellbender.tools.walkers.mutect.clustering.SomaticClusteringModel.probabilityOfSequencingError(SomaticClusteringModel.java:140); at org.broadinstitute.hellbender.tools.walkers.mutect.clustering.SomaticClusteringModel.probabilityOfSomaticVariant(SomaticClusteringModel.java:146); at org.broadinstitute.hellbender.tools.walkers.mutect.clustering.SomaticClusteringModel.performEMIteration(SomaticClusteringModel.java:345); at org.broadinstitute.hellbender.tools.walkers.mutect.clustering.SomaticClusteringModel.learnAndClearAccumulatedData(SomaticClusteringModel.java:330); at org.broadinstitute.hellbe",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7276#issuecomment-1293969047:196,test,test,196,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7276#issuecomment-1293969047,3,"['log', 'test']","['logValues', 'test']"
Testability,"> @bbimber The test that failed just got fixed in master so you should be good to ignore it... it is @lbergelson PR into your code that you are patching so i don't know if he should approve this or not... Thanks @jamesemery. The PR in question was initiated by me, but having @lbergelson approving seems fine. The goal here is to get https://github.com/broadinstitute/gatk/pull/8752 approved.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8871#issuecomment-2189877643:15,test,test,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8871#issuecomment-2189877643,1,['test'],['test']
Testability,"> @droazen Mark has been CNV tech lead for some time now, so I’ll let him take a first crack at this or delegate. However, I will point out #4782, which is tangentially related. Looks like handling the global compiler lock appropriately should also address the main issue. Finally, I’ll add that we should include such computing environments in our future testing infrastructure. Dear samuelklee, . Thank you for your concern. I just finish my testing with GATK/4.1.3.0, which is suffered from the same exceptions, too. I hope to get good news from you and Mark soon. . Best regards and thank you!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547952358:356,test,testing,356,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547952358,2,['test'],['testing']
Testability,"> @dror27 - I addressed the comments that were assigned to me. There is some documentation task left and that failing test and then we are ready, I think. I'm finding out that the failing test is due to different floating point accuracy between the platform on which the expected file is generated and the one running the test. I will change the way the expected and generated files are changed against to accommodate for that . <pre>; < -5.6956674728026115; < -5.6956674728026115; < -5.6956674728026115; ---; > -5.695667472802612; > -5.695667472802612; > -5.695667472802612; </pre>",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8697#issuecomment-2028622690:118,test,test,118,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8697#issuecomment-2028622690,3,['test'],['test']
Testability,"> @haileypfox It looks like you accidentally deleted our primary HG38 reference in this branch, and as a result lots of tests are failing. @droazen I noticed that as well. I redownloaded it",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7343#issuecomment-884366549:120,test,tests,120,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7343#issuecomment-884366549,1,['test'],['tests']
Testability,"> @icemduru Can you provide more details on your issue? How many samples do you have? How did you combine them and what are your command lines for this process? Can you provide more details on the system that you are running these commands on?; > ; > GenotypeGVCFs is not known to have memory leak issues. Our tests indicated that it only needs around 4~6GBs of total memory to genotype 120 whole genome samples (Per contig). Thanks for reply. I have 370 samples. I have run HaplotypeCaller for each of them. Then run GenomicsDBImport for each of the chromosome (it is a plant genome, about 420 mb in total genome size). Then tried to run GenotypeGVCFs for each chromosome. I attached the log file for chr1. ; [slurm-22616776.out_text.txt](https://github.com/user-attachments/files/16580529/slurm-22616776.out_text.txt)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8918#issuecomment-2283648218:310,test,tests,310,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8918#issuecomment-2283648218,2,"['log', 'test']","['log', 'tests']"
Testability,"> @ilyasoifer could you please take a look at the two failing CI/tests and see if there is something to be done - or it is a usual/environmental thing? Thanx. @dror27 - looks like an environment thing (because I see that other PRs also fail), but let's wait for a bit with merging",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8982#issuecomment-2393492898:65,test,tests,65,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8982#issuecomment-2393492898,1,['test'],['tests']
Testability,"> @ilyasoifer do you have the means to quickly run minimap2? I would recommend simply realigning src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam with minimap2 and making a quick ""are tests consistent with pervious versions"" test with a checked in vcf output. I don't know how to wrangle minimap2 to handle mates correctly however so i don't know if this is easy. Added test like this",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8337#issuecomment-1560517319:101,test,test,101,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8337#issuecomment-1560517319,4,['test'],"['test', 'tests']"
Testability,> @lbergelson @gokalpcelik any chance of giving me access to the workspace for the 330 whole exomes?. Hi @nalinigans ; Unfortunately this is on my private company server but I may be able to conduct tests if you need me to. I can generate a fork of gatk and update GenomicsDB to test it.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8989#issuecomment-2434590689:199,test,tests,199,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8989#issuecomment-2434590689,2,['test'],"['test', 'tests']"
Testability,"> @oldmikeyang Do you get the same result if the inputs and outputs to `MarkDuplicatesSpark` are on the local filesystem rather than HDFS?; > ; > @jamesemery Can you comment?. I just try the MarkDuplicatesSpark from local file system without the HDFS.; the application will failure. It said can't find the file, but the file is on the local file system. ```; ls -la /home/test/WGS_pipeline/TEST/output/spark_412.bowtie2.bam; -rw-rw-r--. 1 test test 4668988887 Oct 4 11:27 /home/test/WGS_pipeline/TEST/output/spark_412.bowtie2.bam; ```. Here is SPARK information. ```; A USER ERROR has occurred: Failed to read bam header from; /home/test/WGS_pipeline/TEST/output/spark_412.bowtie2.bam; Caused by:File does not exist: /home/test/WGS_pipeline/TEST/output/spark_412.bowtie2.bam; 	at org.apache.hadoop.hdfs.server.namenode.INodeFile.valueOf(INodeFile.java:72); 	at org.apache.hadoop.hdfs.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.getBlockLocations(NameNodeRpcServer.java:692); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.getBlockLocations(ClientNamenodeProtocolServerSideTranslatorPB.java:381); 	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:447); 	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:989); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:850); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:793); 	at java.security.AccessController.doPrivileged(Native Method); 	at javax.security.auth.Subject.doAs(Subject.java:422); 	at org.apache.hadoop.sec",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294:372,test,test,372,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294,10,"['TEST', 'test']","['TEST', 'test']"
Testability,> @slw287r I found the error and have fixed it in a branch. I will test it on a few genomes and then submit a PR. That's cool! thanks,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6724#issuecomment-690803941:67,test,test,67,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6724#issuecomment-690803941,1,['test'],['test']
Testability,"> Another potential solution is to audit every Dataflow (and spark) code that can receive SAMRecords as input, and make sure they call some utility ""putHeadersBack"" function. I agree. I think this is the most practical solution. (Having the coder/serializer do it is difficult, as it's hard to get the header to the serializer, unless it is passed statically, which I think we'd rather avoid.). This would look something like `reads.map(read -> ReadUtils.addHeader(header, read))`, and would be added after every shuffle. Since we should be very aware where every shuffle is happening (and we want to minimize their number) it shouldn't be too onerous. The other related point that Uri has touched on is the need for an efficient encoding of reads (even without the header), which is critical to making the computations run in a reasonable amount of time. The approach I've taken in https://github.com/broadinstitute/hellbender/pull/899 is to use the htsjdk BAMEncoder to serialize reads (Hadoop-BAM does something very similar), and it works very well in my tests of sorting large BAMs. Does https://github.com/broadinstitute/hellbender/pull/899 plus ""putHeadersBack"" sound like a reasonable solution?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/900#issuecomment-141004828:1059,test,tests,1059,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/900#issuecomment-141004828,1,['test'],['tests']
Testability,"> At the very least we should add a unit test that generates the evidenceIndexBySampleIndex cache, then calls marginalize() (both types) and asserts that we have emptied the cache. I would do the same for appendEvidence() and addMissingAlleles(). It's simpler than this because allele operations such as `marginalize()` and `addMissingAlleles` don't modify the evidence list. While they require care with the likelihoods arrays they don't require anything at all from the evidence-to-index caches. As I mentioned above, I left the cache updating in `appendEvidence` as it was because it was so simple. I will try to write the test for removing evidence tomorrow. Tempting to try tonight, but I'm trying to accept the reality that working until 2 am is a bad idea.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6593#issuecomment-633180869:41,test,test,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6593#issuecomment-633180869,3,"['assert', 'test']","['asserts', 'test']"
Testability,"> Can you check the headers of your gvcf inputs to see if any of them has this old tag?. #####this is the tag for gatk4.4; ##fileformat=VCFv4.2; ##ALT=<ID=NON_REF,Description=""Represents any possible alternative allele not already represented at this location by REF and ALT"">; ##FILTER=<ID=LowQual,Description=""Low quality"">; ##FORMAT=<ID=AD,Number=R,Type=Integer,Description=""Allelic depths for the ref and alt alleles in the order listed"">; ##FORMAT=<ID=DP,Number=1,Type=Integer,Description=""Approximate read depth (reads with MQ=255 or with bad mates are filtered)"">; ##FORMAT=<ID=GQ,Number=1,Type=Integer,Description=""Genotype Quality"">; ##FORMAT=<ID=GT,Number=1,Type=String,Description=""Genotype"">; ##FORMAT=<ID=MIN_DP,Number=1,Type=Integer,Description=""Minimum DP observed within the GVCF block"">; ##FORMAT=<ID=PGT,Number=1,Type=String,Description=""Physical phasing haplotype information, describing how the alternate alleles are phased in relation to one another; will always be hetero; zygous and is not intended to describe called alleles"">; ##FORMAT=<ID=PID,Number=1,Type=String,Description=""Physical phasing ID information, where each unique ID within a given sample (but not across samples) connects records within a phasing gr; oup"">; ##FORMAT=<ID=PL,Number=G,Type=Integer,Description=""Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification"">; ##FORMAT=<ID=PS,Number=1,Type=Integer,Description=""Phasing set (typically the position of the first variant in the set)"">; ##FORMAT=<ID=SB,Number=4,Type=Integer,Description=""Per-sample component statistics which comprise the Fisher's Exact Test to detect strand bias."">; ##GATKCommandLine=<ID=HaplotypeCaller,CommandLine=""HaplotypeCaller --emit-ref-confidence GVCF --output CMC_C_1.g.vcf --input CMC_C_1.sorted.markdup.addRG.bam --reference kxc_hic_final.fast; a --use-posteriors-to-calculate-qual false --dont-use-dragstr-priors false --use-new-qual-calculator true --annotate-with-num-discovered-alleles false",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8574#issuecomment-1793390789:1630,Test,Test,1630,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8574#issuecomment-1793390789,1,['Test'],['Test']
Testability,> Can you link to successful run(s) using the new image (or would you like others to test it out)?. Can has! Please ignore the confusingness of the branch name 🙈 . https://job-manager.dsde-prod.broadinstitute.org/jobs/245e1b69-a628-41c0-8e64-ebd3ae37ce30,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8085#issuecomment-1307347727:85,test,test,85,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8085#issuecomment-1307347727,1,['test'],['test']
Testability,"> David, do you have a sense of what the values are for the old model versus new, maybe from the test cases I gave you? I want to make sure our 30 emission cutoff is still reasonable. @ldgauthier For single-sample biallelics quals are very similar to the old model, so the cutoff of 30 should be fine. For multi-sample calls the new model is smarter about inferring allele frequency but I expect this effect to be minor. The definition of qual is the same in both cases, so to the extent that both models are essentially correct (as they both are except for multiallelics) they will agree closely.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2098#issuecomment-242792762:97,test,test,97,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2098#issuecomment-242792762,1,['test'],['test']
Testability,"> Did you confirm that these tests actually fail without your bug fix to hook up the argument, @davidbenjamin ?. Yes, they fail.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4192#issuecomment-359052159:29,test,tests,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4192#issuecomment-359052159,1,['test'],['tests']
Testability,"> Do you have numbers for the performance here? How big is this code in the profiler before or after? I'm curious. The unit tests are about 5% faster. In practice, this won't affect HaplotyeCaller because the overwhelming majority of the CPU cost of those tests comes from the ploidy = 20, allele count = 6 cases. For anything else the genotyping likelihoods calculation is not only not a bottleneck, it's completely negligible.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-580337113:124,test,tests,124,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-580337113,2,['test'],['tests']
Testability,"> Doesn't seem to be the subject of this ticket, but are all the `call_PS` supposed to be null?. Yeah, that's (I'm pretty sure anyway) because the WGS test data has no PS fields in them. I have that other ticket to update the test data. And need to resolve that.; I did do an export of Avros using some Exomes that have PS and they were defined in the AVRO. Will mention that above.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8536#issuecomment-1741454224:151,test,test,151,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8536#issuecomment-1741454224,2,['test'],['test']
Testability,"> First pass -- do you know if the tests are actually executing? There seem to be a ton of warnings about lines in the tests not being covered by tests... 🤔. That's a good question, actually. I assume they're running, but I can look into it. The codecov results are weird. A couple of them are showing some exception handling code that's not covered (which I can write a couple more tests for if we want), but it's also calling out the test file, which doesn't make a lot of sense to me.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8708#issuecomment-1971908372:35,test,tests,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8708#issuecomment-1971908372,5,['test'],"['test', 'tests']"
Testability,"> Furthermore, I'd like for the tool to automatically interpret this mode, when not given an -L intervals list, to not split reference contigs. I.e. a contig is an interval. (Perhaps already the tool behavior?). @sooheelee I just tested this and the `BALANCING_WITHOUT_INTERVAL_SUBDIVISION` already works the way you want it to.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4188#issuecomment-359218363:230,test,tested,230,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4188#issuecomment-359218363,1,['test'],['tested']
Testability,"> Have you run this with `all_chrs` (e.g. not just 20/X/Y). That uses a different truth path. I kicked off a run, but the new BGE test uses the `full_exome_interval_list` because that's what the exome test does, so the two outputs should be the same.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8920#issuecomment-2237349497:130,test,test,130,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8920#issuecomment-2237349497,2,['test'],['test']
Testability,"> Have you tested this on a quickstart?. I have not, I'd certainly be interested in some pairing / mobbing to do that. Also this requires the [Cromwell shell escape fixes](https://github.com/broadinstitute/cromwell/pull/6989/files) to be available in production. I hope to merge that soon but I'm not sure these days how long after merge to Cromwell develop before code goes to production.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8170#issuecomment-1402746956:11,test,tested,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8170#issuecomment-1402746956,1,['test'],['tested']
Testability,"> Hi Kevin, our team would like to get this merged into `ah_var_store` soon per VS-1254. I'm aware of only a handful of outstanding issues:; > ; > * The failing PGEN tests. I'm happy to help here in any way I can though right now I don't have a sense of what could be causing this beyond the platform differences you suggested.; > ; > * The `10` vs `10.0` change we discussed recently to avoid division by zero.; > ; > * We'll want to merge / rebase from `ah_var_store` and then build a new GATK Docker image which would be entered into `GetToolVersions` in `GvsUtils.wdl`. I'm happy to take on building this image once the merge / rebase is ready. Hi Miguel, sorry about the delay. I'm working on the failing tests issue this afternoon. I know what the issue is, so I just have to implement a fix, which I think should be fairly simple. Once I have that ready and have confirmed the tests aren't failing anymore, I'll do the rebase and then let you know.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8708#issuecomment-2004517723:166,test,tests,166,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8708#issuecomment-2004517723,3,['test'],['tests']
Testability,"> Hopefully, this will mitigate the issues on NFS and CIFS. Has this been tested? @nalinigans",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5608#issuecomment-458515123:74,test,tested,74,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5608#issuecomment-458515123,1,['test'],['tested']
Testability,"> I agree with you that this is a real problem. I don't understand the logic, why HALF of PCR_ERROR_QUAL? if that's really 20, then it's way too low!!. The intent of this code is that downstream code will not do anything special to avoid over-counting ; overlapping mates, so that assigning half of the PCR qual effectively gives the full PCR qual for the fragment. Of course, this assumption is wrong in the case of M2. > I also object to the second part (when the bases disagree.) imagine that one base is A@Q2 and the other is T@Q60...why would you put both bases to Q0 in that case?. Good point. > We should take some time to figure out the model that allows for PCR error and then derive the posterior posteriors from that... Are you suggesting something like there are binary indicators for PCR error, read 1 sequencing error, read 2 sequencing error, with priors given by the PCR and base qualities, and we want the posteriors of these indicators given that the bases agree / disagree?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4958#issuecomment-400799135:71,log,logic,71,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4958#issuecomment-400799135,1,['log'],['logic']
Testability,"> I am curious why the WDL auto tests did not catch this.. @LeeTL1220 In `scripts/m2_cromwell_tests/test_m2_wdl_multi.json` we test with; ```; ""Mutect2_Multi.run_orientation_bias_filter"": true`,; ""Mutect2_Multi.artifact_modes"": [""G/T"", ""C/T""],; ```; whereas the probable bug I foresaw would only occur if these lines were omitted.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5019#issuecomment-405939434:32,test,tests,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5019#issuecomment-405939434,2,['test'],"['test', 'tests']"
Testability,> I find it a little disconcerting that we apparently were skipping a mitochondrial variant in the M2 tests. Nothing to worry about — that number change (if that's what you're referring to) is just a hard-coded read count. It changes every time windows are adjusted.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6507#issuecomment-600382382:102,test,tests,102,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6507#issuecomment-600382382,1,['test'],['tests']
Testability,"> I have no objection to these changes, especially since this is just bringing us back to where we were in genomicsDB in the last release. We should spawn a ticket to track reintroducing these improvements and perhaps we should also add a macos test to our travis array so we can catch this kind of issue in the future? I think there is a macOS VM availible on travis that we could rerun some of the integration tests on. Yes, travis has macOS VM. It is very slow, so would recommend only sanity checks on it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6204#issuecomment-539574124:245,test,test,245,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6204#issuecomment-539574124,2,['test'],"['test', 'tests']"
Testability,> I'm assuming that the changes to the tests are automatically applied and don't need a careful review. Yes.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6474#issuecomment-593771654:39,test,tests,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6474#issuecomment-593771654,1,['test'],['tests']
Testability,> I'm very pleased with the test results so far. What is the test result?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2098#issuecomment-242400374:28,test,test,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2098#issuecomment-242400374,2,['test'],['test']
Testability,"> I've manually kicked off our integration tests on this branch. If that passes (it should take a couple of hours), I'll give this a thumb. SG! I also pushed this to Agora and will test it out using our genomic extraction workflow",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/9023#issuecomment-2447173093:43,test,tests,43,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/9023#issuecomment-2447173093,2,['test'],"['test', 'tests']"
Testability,"> Is it possible to add an integration test to this? Since the change did not fail any test, it seems that the integrationtest is missing. Unit test fixed to include checking of variant type (which it did not include before - hence the non-failure). Test data adjusted accordingly.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8442#issuecomment-1806779412:39,test,test,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8442#issuecomment-1806779412,4,"['Test', 'test']","['Test', 'test']"
Testability,"> Is the 1bp alignment really zero length somehow -- is that the issue?. Yes! In a different sense.; The explanation below is a bit mind-numbing, so please bear with me:. --------. So, to illustrate further, this is the alignment that prompted this PR: [ribbon plot](http://www.genomeribbon.com/?perma=Vg2BPO7Yay). Turning off the filter step in `AssemblyContigAlignmentsConfigPicker` by setting `ALIGNMENT_LOW_READ_UNIQUENESS_THRESHOLD = 0;` (hence the comment _""The aim is to make the downstream logic agnostic to upstream filtering detail""_), the middle alignment--actually only 2 alignment but we do gap-split--is uniquely covering only 1 base. It would generate the following without this PR; ```; chr21	42283722	CPX_chr21:42283722-42284027	C	<CPX>	.	.	ALIGN_LENGTHS=733;ALT_ARRANGEMENT;CTG_NAMES=asm029245:tig00000;END=42284027;HQ_MAPPINGS=1;MAPPING_QUALITIES=60;MAX_ALIGN_LENGTH=733;SEGMENTS=chr21:42283722-42283784,chr21:42283784-42284027;SEQ_ALT_HAPLOTYPE=CAC;SVLEN=-303;SVTYPE=CPX;TOTAL_MAPPINGS=1; ```; with this PR, it would generate:; ```; chr21	42283722	CPX_chr21:42283722-42284027	C	<CPX>	.	.	ALIGN_LENGTHS=733;ALT_ARRANGEMENT=UINS-1;CTG_NAMES=asm029245:tig00000;END=42284027;HQ_MAPPINGS=1;MAPPING_QUALITIES=60;MAX_ALIGN_LENGTH=733;SEGMENTS=chr21:42283722-42284027;SEQ_ALT_HAPLOTYPE=CAC;SVLEN=-303;SVTYPE=CPX;TOTAL_MAPPINGS=1; ```; The differences are in annotations `ALT_ARRANGEMENT` and `SEGMENTS`:; * without the PR, the code hyper-segments the region into 2 segments, with no `ALT_ARRANGEMENT`. This is technically wrong.; * with the PR, the two segmentations are ""merged"" into one, and the `ALT_ARRANGEMENT` annotation correctly says there's one ""unmapped"" base (technically not unmapped, but it would bring in more noise because a single base could map to 1/4 of the genome). And yes, the hyper-segmentation problem is still there for cases where de-overlapped alignments are 2bp long (or very short, 3bp, 5bp, etc.), but in that case the `ALT_ARRANGEMENT` won't be empty. And the",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4962#issuecomment-406061907:498,log,logic,498,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4962#issuecomment-406061907,1,['log'],['logic']
Testability,"> It seems like the patch in 4.1.6 didn't go far enough and that exception needs to be replaced with a continue in all cases. That would work, but I see where I caused the regression upstream. I chopped leading and trailing deletions from haplotype cigars, same as for read cigars, but for haplotypes we want to keep these deletions because the start and end positions need to remain pegged to the reference start and end. I have a fix + regression test branch, which is running on every M2 validation.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6533#issuecomment-609115892:449,test,test,449,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6533#issuecomment-609115892,1,['test'],['test']
Testability,"> Just noting here that @gokalpcelik was kind enough to run some tests on this branch and noticed that I probably broke posterior sampling—it appears that I reverted to the non-online, memory intensive implementation that we ran into previously during development. Need to carve out some time to fix this issue and more generally polish things up, but I have other more pressing deadlines at the moment. @gokalpcelik I think I fixed this posterior-sampling issue. I haven't yet done my own testing, but let me know if you beat me to it!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8561#issuecomment-2035026135:65,test,tests,65,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8561#issuecomment-2035026135,2,['test'],"['testing', 'tests']"
Testability,"> Looks good. Have you run the integration tests. I didn't run the integration test because it didn't seem necessary (no changes that effect the data, just the table(s) TTL). If you think I should, happy to kick it off.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8595#issuecomment-1834388772:43,test,tests,43,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8595#issuecomment-1834388772,2,['test'],"['test', 'tests']"
Testability,"> One final thing: i'm happy to try to debug this, and was going to write a test case based on the existing GenomicsDB integration tests. However, when I try to run any integration test involving genomicsdb, I get an exception like the following. I am on windows, so perhaps this is the issue?; > ; > 09:03:37.460 FATAL GenomicsDBLibLoader -; > java.io.FileNotFoundException: File /tiledbgenomicsdb.dll was not found inside JAR.; > at org.genomicsdb.GenomicsDBLibLoader.loadLibraryFromJar(GenomicsDBLibLoader.java:118) ~[genomicsdb-1.3.2.jar:?]; > at org.genomicsdb.GenomicsDBLibLoader.loadLibrary(GenomicsDBLibLoader.java:55) [genomicsdb-1.3.2.jar:?]; > at org.genomicsdb.GenomicsDBUtilsJni.(GenomicsDBUtilsJni.java:30) [genomicsdb-1.3.2.jar:?]; > at org.genomicsdb.GenomicsDBUtils.createTileDBWorkspace(GenomicsDBUtils.java:46) [genomicsdb-1.3.2.jar:?]; > at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.overwriteCreateOrCheckWorkspace(GenomicsDBImport.java:1005) [classes/:?]; > at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.onTraversalStart(GenomicsDBImport.java:661) [classes/:?]; > at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1056) [classes/:?]. Yes, Windows is not supported by GenomicsDB. This is mentioned obliquely in the requirements for gatk too -; ```; Operating system. The GATK runs natively on most if not all flavors of UNIX, which includes MacOSX, Linux and BSD. It is possible to get it ; running on some recent versions of Windows, but we don't provide any support nor instructions for that. If you need to run on; a Windows machine, consider using Docker.; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7005#issuecomment-754106359:76,test,test,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7005#issuecomment-754106359,3,['test'],"['test', 'tests']"
Testability,"> Perhaps we want that the author certifies it is in a usable state for its intended use?. It's good that the author certifies it, but we are going to be tearing the tools apart and rebuilding them without necessarily understanding the details of the output. We need to have tests that will tell us if we've broken them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/382#issuecomment-93804346:275,test,tests,275,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/382#issuecomment-93804346,1,['test'],['tests']
Testability,"> Still interested in the reference sample increase results. I wrote a unit test for that. QUAL decreases slowly as ref samples increase (e.g. one million ref samples decrease QUAL by about log_10 10^6 = 6), which I believe is the correct behavior. Overwhelming evidence that a variant is rare _ought_ to make any genotyper more skeptical about it. Note that this will only lose variants with very weak evidence. As for the command line unification that @vruano suggested, I put in a few hours and it's trickier than expected. If we use `pnrm` then we have to add an instance of `AFCalculatorImplementation`, which would need a `Supplier<AlleleFrequencyCalculator>`. But unlike the old exact model `AFCalculator`s the new one knows the heterozygosity priors (needed for Dirichlet prior pseudocounts) and needs to get those in its constructor. But this would mean that `AFCalculatorImplementation` would have to know about the heterozygosity command line arguments which would would in turn demand that it be refactored as something other than an `Enum`. As inelegant as the current hack of having a separate argument that overrides `pnrm` is, I think it's actually cleaner than the alternative.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2098#issuecomment-242264411:76,test,test,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2098#issuecomment-242264411,1,['test'],['test']
Testability,"> The four test failures in `ExtractCohortToPgenTest` appear to be real:; > ; > ```; > 2024-03-12T20:53:02.3169070Z Gradle suite > Gradle test > org.broadinstitute.hellbender.tools.gvs.extract.ExtractCohortToPgenTest > testFinalVQSRLitePgenfromRangesAvro �[31mFAILED�[39m�[0K; > 2024-03-12T20:53:02.3171276Z java.lang.AssertionError: expected [-1] but found [13570]�[0K; > 2024-03-12T20:53:02.3172934Z at org.testng.Assert.fail(Assert.java:97); > 2024-03-12T20:53:02.3173927Z at org.testng.Assert.assertEqualsImpl(Assert.java:136); > 2024-03-12T20:53:02.3174922Z at org.testng.Assert.assertEquals(Assert.java:118); > 2024-03-12T20:53:02.3175853Z at org.testng.Assert.assertEquals(Assert.java:729); > 2024-03-12T20:53:02.3176775Z at org.testng.Assert.assertEquals(Assert.java:739); > 2024-03-12T20:53:02.3178703Z at org.broadinstitute.hellbender.tools.gvs.extract.ExtractCohortToPgenTest.testFinalVQSRLitePgenfromRangesAvro(ExtractCohortToPgenTest.java:78); > ```. That's weird, because it looks like it's succeeding in the other test tasks where it's running. The place it's failing is an extremely simple equality assertion of two compressed files, though. I wonder if there's something about operating system differences that can change the compression slightly. I'll see if I can find a better way to do that check",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8708#issuecomment-2000109415:11,test,test,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8708#issuecomment-2000109415,26,"['Assert', 'assert', 'test']","['Assert', 'AssertionError', 'assertEquals', 'assertEqualsImpl', 'assertion', 'test', 'testFinalVQSRLitePgenfromRangesAvro', 'testng']"
Testability,"> The point of the singleton pattern is for testing: tests can substitute their own instance instead of the default one. They put in a mock that doesn't need to call out to the internet - this way it's both faster and self-contained (as unit tests are supposed to be). Using a singleton should not be needed, since mocks are sufficient in this case. I think the difficulty is that there are two objects, `RefAPISource` and `RefAPIMetadata`, which need managing separately. The need for a singleton disappears if the objects are combined into one, e.g. by subsuming `RefAPIMetadata` into `RefAPISource`. Then the issue may be that you want to ensure that the lookup table is not recreated too often (since it is expensive), but I think that can be solved by ensuring that there is a single instance in a test (by using TestNG's `@BeforeClass`). > We still need some way to stub, because there are places deep in the code that call RefApiSource.getInstance(). This goes away if you remove the need for a singleton, like in this PR. > We could have a getDataflowInstance() and a getSparkInstance() - the former would normally return the code formerly known as RefApiSource, except if tests set up the mock. . I think it's better to have a uniform interface to get references, so that callers don't need to know if the reference is being retrieved via the Google API, a file on HDFS, or a local file. This is what `ReadsDataflowSource` does for reads; `ReferenceHadoopSource` from this PR does a similar thing for references.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/804#issuecomment-130827161:44,test,testing,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/804#issuecomment-130827161,10,"['Test', 'mock', 'stub', 'test']","['TestNG', 'mock', 'mocks', 'stub', 'test', 'testing', 'tests']"
Testability,"> The test contains the argument --intervals chrX:1000000-5000000, but I'm not sure why that would be an issue. . This is from `htslib::faidx_fetch_seq_into_buffer` because the reference for the test does not contain the contig `chrX`. We could just log this once and continue. Is this what you want? Or do you want an exception at this point?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7751#issuecomment-1091973132:6,test,test,6,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7751#issuecomment-1091973132,3,"['log', 'test']","['log', 'test']"
Testability,"> Therefore we don't actually have to take the log of the probability and normalize it, we can just take the probability straight from HypergeometricDistribution. The problem is mostly inside `HypergeometricDistribution`. A better implementation of this class should cache the last value, such that computing `hypergeo(i)` and then `hypergeo(i+1)` consecutively does not unnecessarily trigger full computation, which is quite expensive. Anyway, the current implementation is fine given that exact test is unlikely to be a bottleneck in its current use.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2307#issuecomment-266857573:47,log,log,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2307#issuecomment-266857573,2,"['log', 'test']","['log', 'test']"
Testability,"> This Python scripts could use some docs (and perhaps tests?); it's not clear to me when / how one would use them. yes, that's fair. I modified the doc I created (CREATING_WEIGHTED_BED_FILES_ORIGINAL.md). In truth, ""original"" may be a misnomer. It's the information in the github issue ALONG WITH updated instructions for when to use the new python files. Given the feedback, I further updated the document with a comment at the top saying when they should be run (TL;DR, on a new genome or a new reference... so basically extremely rarely). Given this, I don't think unit test or extensive documentation are needed for them. The files are small, the inputs are few, and the code is commented. We are likely to not need to run them for again for years, so I don't consider extra documentation or testing to be worth the effort at the moment.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8507#issuecomment-1717680203:55,test,tests,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8507#issuecomment-1717680203,3,['test'],"['test', 'testing', 'tests']"
Testability,"> Why do you think these were accidentally added?. To be more specific I think the files were not accidentally added, but multiple copies of these files were added in the 050ef8abd378944d3ee6045b2979ecf66529cbb2 commit in May of 2020 and I think the paths I'm removing here were not the intended paths. Copies of these files were added at the root of the GATK repo, under `NA12878`, and under `src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/ReblockGVCF/NA12878`. I'm planning to keep the copies at that last path and move those files to the new repo.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8225#issuecomment-1448498914:398,test,test,398,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8225#issuecomment-1448498914,1,['test'],['test']
Testability,"> Why not break up these two things and push the annotation close to where the breakpoint-detected variants are created (ie. in discoverSimpleVariants or something), and then call the imprecise variant detector after that?. I wanted to do that but since the original code was brought in (and tested) that way with the imprecise variant logic, I refrained from doing that. ; Now done in commit 9fa39908fff6f382d899bc66f1760dbcfd22e540.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3934#issuecomment-357543055:292,test,tested,292,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3934#issuecomment-357543055,2,"['log', 'test']","['logic', 'tested']"
Testability,"> Yes, GenotypeGVCFs prunes alleles that lack sufficient evidence. The force output intervals only guarantees that the site is emitted, but it may be emitted as monomorphic. OK, but I think my test shows that's not happening. In the --force-output-intervals case of testForceOutputNonRef(), all VCs in actualVC2 are not polymorphic. Despite this, some of them have alternate alleles? see the new test case I added at GenotypeGVCFsIntegrationTest line 614",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-577501077:193,test,test,193,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-577501077,3,['test'],"['test', 'testForceOutputNonRef']"
Testability,"> Your solution doesn't address your third listed drawback to the current; approach. Ah, but I believe it does if you're careful. We have this code:; ```; for ( final AssemblyResult result : assemble(correctedReads, refHaplotype, givenHaplotypes, header, aligner) ) {; if ( result.getStatus() == AssemblyResult.Status.ASSEMBLED_SOME_VARIATION ) {; // do some QC on the graph; sanityCheckGraph(result.getGraph(), refHaplotype);; // add it to graphs with meaningful non-reference features; assemblyResultByGraph.put(result.getGraph(),result);; nonRefGraphs.add(result.getGraph());; }; }. findBestPaths(nonRefGraphs, refHaplotype, refLoc, activeRegionExtendedLocation, assemblyResultByGraph, resultSet, aligner);; ```; If assembly fails eg due to cycles at every kmer then there's nothing to iterate over in the `for` loop but it still reaches `findBestPaths` (this puts assembled haplotypes into `resultSet` as a side effect, and it forces the reference haplotype in by fiat if there are no graphs). As long as the new GGA haplotypes are added after `findBestPaths` and not anywhere inside the `assemble` method or in that `for` loop it should be okay. Would you like me to write an integration test for this case?. > It's not obvious to me why we wanted the given alleles in the graph; originally. . . Regardless of the reason, I think the new proposal captures any benefit of putting them in the graph, because if they *are* in the graph it leaves them alone. If they're not in the graph, then we get a haplotype that's as close to the reference as possible, which is what the current code does. In such a case there's nothing gained by putting it in the graph. > I'd feel better if we had a better guess at what the original method was trying to do. Despite my optimism about theoretically beautiful things, me too. Who wrote the original GGA code?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5857#issuecomment-479931906:1193,test,test,1193,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5857#issuecomment-479931906,1,['test'],['test']
Testability,"> actually it looks like there are legit failing tests. Yup, it looks like a hunk of the integration tests are operating in TSV mode (which we don't officially support any longer... but I suppose they can stay). So in order to make those pass, I had to put some things behind an explicit check for BQ being set as the output type",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8994#issuecomment-2457960879:49,test,tests,49,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8994#issuecomment-2457960879,2,['test'],['tests']
Testability,> but I thought you said you'd add a regression test with the user's data. I must have. There is a regression test now.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6510#issuecomment-603614945:48,test,test,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6510#issuecomment-603614945,2,['test'],['test']
Testability,"> do you have a run of the integration test for this branch?. Yup, [this run](https://app.terra.bio/#workspaces/broad-firecloud-dsde/VS-415%20GVS%20Quickstart%20Default%20Extract%20Scatter/job_history/ff9d7466-79f1-4c96-a7b9-dd2354dc1c76) utilized this `vs_464_update_quickstart_integration` branch to test the `vs_415_default_extract_scatter_width` changes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7881#issuecomment-1150403388:39,test,test,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7881#issuecomment-1150403388,2,['test'],['test']
Testability,"> is there a reason to keep GvsPrepareBulkImport.wdl and GvsBulkIngestGenomes.wdl as two separate WDLs?. Not AFAICT, addressed in [this commit](https://github.com/broadinstitute/gatk/pull/8404/commits/2a0bf3bb2bba91f98e5b905b150d5888f192e84e). > can we emove GvsUnified.wdl and use GvsJointVariantCalling.wdl to call the steps?. I'm not sure how that would work. `GvsJointVariantCalling.wdl` intentionally hardcodes several parameters to `GvsUnified` that `GvsQuickstartIntegration.wdl` needs to override:. - `gatk_override`; - `extract_table_prefix`; - `interval_list`; - `use_VQSR_lite`; - `extract_do_not_filter_override`; - `filter_set_name`. Happy to discuss further if I'm missing something here. > fix in get_columns_for_import.py (column -> col from https://github.com/broadinstitute/gatk/pull/8379/files?w=0). Thanks, added [here](https://github.com/broadinstitute/gatk/pull/8404/commits/d628a8ef34c8dbb3c0efaa51cd93bb28e2a18058). Do we know why there isn't an existing test that would have found this?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8404#issuecomment-1633236629:979,test,test,979,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8404#issuecomment-1633236629,1,['test'],['test']
Testability,"> lgtm -- except for making me remember how the 'GQ > x' was implemented due to the enum... backing away slowly. yeah that's pretty gross. didn't want to touch it with a ten-foot pole -- but i looked through and checked that the logic will work as intended if you use ""NONE"" (it just adds nothing to the set of states to ignore)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7206#issuecomment-821322370:229,log,logic,229,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7206#issuecomment-821322370,1,['log'],['logic']
Testability,">; > I am not sure I quite understand this comment. The (large) gapped; > alignment (aka the originating alignment), when split into child; > alignments, shouldn't have the same aligner score as each of the child,; > right? To me the AS is a score computed from similarities between the query; > and the target based on given penalties (at least most aligners does it; > this way), so if a large gap exists, the score actually takes that gap into; > account (opening and continuation). When we split the originating alignment; > into its children, each child alignment should have its own score, with; > their sum not the same as the originating alignment's because the gap is; > now not part of any child alignment.; >. That's true from the definition of aligner score, but for our; breakpoint-calling purposes, we're just reformatting the alignments so; they're in an easier format to work with. I.e. we could have kept the large; gap in the alignment, and then added some extra logic to call events based; on the cigar of the alignment, with no difference in the outcome. Just; because we split it to make things easier for us code-wise doesn't mean we; should have to recompute aligner scores -- we should just use the score of; the un-split alignment (since presumably that's a longer alignment with a; higher mapping quality). But, maybe in the end I'm arguing for keeping the splitting after the; scoring, just so that we can preserve that original score and mapping; quality of the gapped alignment. Correct, but I am having thoughts about this now (not to pick only one—that; > would be wrong—but to ditch them altogether probably under some condition; > and redo the alignment step), exactly because of this behavior I observe.; > Think about the case where one originating gapped (say insertion); > alignment, after splitting, has one of the two children contained in; > another alignment (not its sibling, that's impossible) in terms of their; > read span. Now the originating gapped align",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3805#issuecomment-351086323:981,log,logic,981,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3805#issuecomment-351086323,1,['log'],['logic']
Testability,">> interval_list. > this will need to be a parameter (but can be optional and have a default) in order to have our integration tests run GvsJointVariantCalling.wdl on exomes. Genomes too, the integration test specifies a 20/X/Y interval list. >> filter_set_name; >> extract_table_prefix. > these two can just default to the call_set_identifier with weird characters parsed out. Yeah I think that would work for the integration test(s), each variation goes into a different BQ dataset anyway. @RoriCremer can correct me if I'm wrong, but I thought the raison d'être of the beta WDL was specifically to hardcode away as many parameters as possible (even optional ones with defaults) to present a simplified interface for non-expert users. I agree we'll probably have to allow some additional parameters for testability (`gatk_override` at a minimum), but do we really want to add all of these?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8404#issuecomment-1634248008:127,test,tests,127,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8404#issuecomment-1634248008,4,['test'],"['test', 'testability', 'tests']"
Testability,">Integration test plz. Hmm, the existing integration test does not exercise `process_vcf_headers` so it wouldn't test these changes. However, in the spirit of ""the VDS integration tests should exercise what we intend to use for AoU"", perhaps at least the VDS integration tests should be modified to exercise this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8533#issuecomment-1739135880:13,test,test,13,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8533#issuecomment-1739135880,5,['test'],"['test', 'tests']"
Testability,"@AJDCiarla . Hello. So, to preface my answers it's also important to note that I am having these issues on Firefox. Now that I tried it in Chromium the Sign in link works. `When did you start having trouble signing into your GATK account?`; The issue is actually not with my account. I cannot even get to the Sign-in screen that you show.; `What is the username/email address associated with your GATK Forum account?`; As I mentioned before, the issue is not account specific. In fact I don't really remember if I still have one. My plan was to try my email and if it was already in the system to recover it.; `Could you please walk me through more of what you are seeing/doing when trying to log into your existing GATK account?`; When I open the [forum page](https://gatk.broadinstitute.org/hc/en-us/community/topics) and click New Post button or if I just click the ""Sign in"" button in the top panel. ![image](https://user-images.githubusercontent.com/22867431/204882347-257314af-1421-4e74-87e2-dffe760480d1.png). I don't get redirected to the Sign in page, but to the main page of GATK; ; ![image](https://user-images.githubusercontent.com/22867431/204882697-43bd0d15-0dd8-479b-af69-78951bb7d56c.png). The URL that I see in the browser does have some extra info:. https://gatk.broadinstitute.org/hc/en-us/signin?return_to=https%3A%2F%2Fgatk.broadinstitute.org%2Fhc%2Fen-us%2Fcommunity%2Fposts%2Fnew . But it still doesn't change where I end up.; The same is happening eevn if I run Firefox with `--safe-mode` to see if it's due to any of my extensions.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8115#issuecomment-1332595323:693,log,log,693,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8115#issuecomment-1332595323,1,['log'],['log']
Testability,"@Aqoolare You might, but there are scaling issues when running within a single java process which is what you're doing. There are issues with lock contention and garbage collection which cause more cores to not be utilized very well. (Lots of cores waiting while garbage collection stops the world, that sort of thing.). . You could definitely test it. We found that 8-16 cores was optimal for our use cases for running in spark local mode, but spark performance is extremely finicky and it's very possible your system might do better than what I'm used to. If you wantt to go very parallel it works better to run an actual spark cluster. You should be able to utilize cores more efficiently that way, but it's more complicated to set up and operatte and there are still bottlenecks that keep it from being infinitely scaleable. (IO bandwidth and network traffic being important ones). . There are lots of articles on the internet about how to set up a local yarn cluster that can help walk you through it if you want to try. . I'm going to close this ticket since it seems like the problem is solved. Feel free to reopen or open a new one if you have other issues.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7796#issuecomment-1111473992:344,test,test,344,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7796#issuecomment-1111473992,1,['test'],['test']
Testability,"@AxVE Thanks for this PR. We really appreciate your interest and work on resolving this issue! It might take a little bit for me to get to reviewing it properly, we're currently preparing for our release and we're a bit swamped with various issues. I'm worried about changing the `userClassPathFirst` property. We added that a long time ago because it fixed some issues we were running into at the time. It's completely possible that we no longer have the same issue and it's a harmful remnant from a previous time, but I'm afraid that changing it might have unanticipated consequences in our own spark environment. Unfortunately we don't have good automated tests that would necessarily identify any issue. @cwhelan Would you be able to test your pipeline with - ""spark.driver.userClassPathFirst"" : ""false"" and see if you run into any issues? . I'm also a bit confused about why the change to the arguments is necessary. Clearly in your environment it is, but it goes against my understanding of how we set the arguments to spark submit, so I want to properly understand why the existing --deploy-mode arguments aren't working for you before adding an additional hardcoded argument to the launch script. (As I'm sure you've seen, the launch script is a pretty crufty and brittle piece of code that was really meant to be replaced with a more robust solution by now, so any additional complexity in would be great to avoid...)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3946#issuecomment-351430567:659,test,tests,659,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3946#issuecomment-351430567,2,['test'],"['test', 'tests']"
Testability,"@DanielAmsel @fpbarthel ; An update on this - for some test data Daniel sent me, Funcotator is choosing transcript `ENST00000559482.1`. For this transcript there are several exons that are not expressed, leading to `intron` annotations. This is in `CANONICAL` transcript selection mode (which is the default). For example, the locus `chr15:90631830` is intronic in that transcript:. ![image](https://user-images.githubusercontent.com/11667487/101508612-e4dac000-3945-11eb-8902-27dc889c3808.png). The details on how Funcotator chooses transcripts can be found here:; https://gatk.broadinstitute.org/hc/en-us/articles/360035889931-Funcotator-Information-and-Tutorial#2.2.2",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5777#issuecomment-740719094:55,test,test,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5777#issuecomment-740719094,1,['test'],['test']
Testability,"@DanishIntizar Hello! Thank you for this pr. This is great to see an official plugin from amazon available. I appreciate that you took the time to make it an optional include. I think if we're going to include it we might as well just add it as one of our normal dependencies though. Assuming there aren't any dependency conflicts it **should** (always a risky statement) be independent from everything else. . Thanks also for identifying the different issues you mentioned. It's expected that it won't work with most picard tools as you discovered, but we're actively in the process of updating more of them too support Paths instead of Files so that will slowly improve. The second issue is more worrisome. We regularly use an equivalent provider with google to read reference files through the exact same code, so I suspect there is either some sort of mismatched assumptions in the way they are handling things. Maybe something strange with the Path.resolve methods or the like. (Or in in the much worse potential case a bug in their look ahead caching.). I'd like to look into that before we'd merge this. Ideally we would have tests for this. Are there any public AWS paths we could read from without any secret authentication?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8672#issuecomment-1930094721:1133,test,tests,1133,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8672#issuecomment-1930094721,1,['test'],['tests']
Testability,"@DarioS For now we're just testing on artificial ""truth"" VCFs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7669#issuecomment-1154395845:27,test,testing,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7669#issuecomment-1154395845,1,['test'],['testing']
Testability,@DonFreed Both of these changes look more correct than what we were doing before. But as louis pointed out two of the integration tests failed on parsing the header. You should fix these tests.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3472#issuecomment-324062155:130,test,tests,130,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3472#issuecomment-324062155,2,['test'],['tests']
Testability,"@DonFreed, I agree with @magicDGS's assessment about it. This feels like a fix that was applied to Gatk3 but doesn't translate to 4? Of course, there could be implementations of GATKRead that don't obey the given contract about copying, but it's worth fixing those since we were more careful to think about copy/no copy when we wrote the new interface. . Of note: if you haven't seen it, `GATKRead` provides a set of unsafe `getBaseQualitiesNoCopy()` methods for times when the copy is a performance bottleneck and you can guarantee safe use of the underlying array. . I'm going to close this. Feel free to reopen if you disagree / can provide a unit test that demonstrates the issue still exists.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4926#issuecomment-399219562:651,test,test,651,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4926#issuecomment-399219562,1,['test'],['test']
Testability,"@EdwardDixon I did not know that! In that case master does already require AVX. If it only impacts this tool and we provide sufficient warning and instructions, I think the single intel-optimized conda environment will be so much easier to test and maintain. Users who don't have AVX can simply install an older tensorflow in their environment, but GATK doesn't need to worry about it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429142837:240,test,test,240,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429142837,1,['test'],['test']
Testability,"@EdwardDixon Thanks for trying this - it would be great if we were able to have a single conda env, but a couple of questions:. - We'd need to understand the affect of this change on our build times. It looks like the travis builds are failing because the dependency downloads are resulting in so many progress messages that we're exceeding the allowable log length, probably because the download is either large or slow. I'm not sure if thats transient or not.; - We try to carefully control the size of our (already sizable) docker image. We'll need to understand how this impacts that.; - @lucidtronix Any thoughts on moving from tensorflow 1.4 to 1.9 ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-416943910:355,log,log,355,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-416943910,1,['log'],['log']
Testability,"@EdwardDixon You might try adding ""-q"" to the `conda` [command](https://github.com/broadinstitute/gatk/blob/master/Dockerfile#L58) in the Dockerfile to see if that allows the build to proceed. If that works, then we can see what the test results look like, and the resulting docker image size.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429992564:233,test,test,233,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429992564,1,['test'],['test']
Testability,"@Emmalynchen I wouldn't worry about the `log4j:WARN` messages discussed in this thread---they're just harmless annoyances that pop up because we haven't gotten around to making sure the HDF5Library dependency uses the same logger as the rest of the GATK. Looking at your initial post (before you edited it), it looks like DenoiseReadCounts is failing because the panel of normals contains different intervals than those in the read-count collection you are trying to denoise:. ```; 22:50:58.635 INFO SVDDenoisingUtils - Validating sample intervals against original intervals used to build panel of normals...; 22:50:59.487 INFO DenoiseReadCounts - Shutting down engine; [May 7, 2019 10:50:59 PM UTC] org.broadinstitute.hellbender.tools.copynumber.DenoiseReadCounts done. Elapsed time: 0.06 minutes.; Runtime.totalMemory()=894959616; java.lang.IllegalArgumentException: Sample intervals must be identical to the original intervals used to build the panel of normals.; ```. You might try asking for more pointers over in the GATK Forums (https://gatkforums.broadinstitute.org/gatk), if you need them. Good luck!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3763#issuecomment-491473550:223,log,logger,223,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3763#issuecomment-491473550,1,['log'],['logger']
Testability,"@EvanTheB You have a point, because the implementation of `logSumLog` (okay it's log10 but that's ugly so let's pretend we live in a parallel universe where the GATK uses only natural log) is (assume that `B < A` below); ```; log (10^A + 10^B . . .) = A + log(1 + 10^(B - A) . . .); ```; the accuracy of which could certainly be improved via the dedicated `log1p` method, especially when `B << A`. But accuracy alone doesn't necessarily address the issue. I mean, the results we're getting are like 10^-21 instead of 0. If the numerical answer is epsilon, the crucial thing is that epsilon must be negative, not that abs(epsilon) be minimized. Now, one could always truncated the (alternating) Taylor series for `log(1 + 10^(B - A) . . .)` at some fixed order that guarantees it's an underestimate, but first, even if that's the implementation of `log1p` it's brittle to rely on that; and second, it's not guaranteed that the leading term in dominant. Another alternative is instead of calculating the probability of all the non-variant (that is, hom ref but also het ref / span del and hom span del) genotypes add up just the variant genotypes and subtract those probabilities from 1. I hesitate to do this because it's less efficient when there are many alt alleles (there are many more variant genotypes than non-variant). Granted, it's only when span dels are present, but I still don't like it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4980#issuecomment-402746850:59,log,logSumLog,59,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4980#issuecomment-402746850,5,['log'],"['log', 'logSumLog']"
Testability,"@GATKSupportTeam @gbrandt6 We think that this might have been fixed by @ldgauthier 's just-merged PR https://github.com/broadinstitute/gatk/pull/7186. Can you ask the user to re-test with that patch? If the user is not comfortable building GATK from source, it will be included in an official release on 11/2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7465#issuecomment-954938155:178,test,test,178,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7465#issuecomment-954938155,1,['test'],['test']
Testability,"@Horneth I put together a new version for you to try, but it requires upgrading gcloud. Here's how to do it:. * clone the gcloud repo, switch to the [jp_aggressive_reopen](https://github.com/jean-philippe-martin/gcloud-java/tree/jp_aggressive_reopen) branch; ```; git clone https://github.com/jean-philippe-martin/gcloud-java; cd gcloud-java; git checkout jp_aggressive_reopen; ```. * install the modified version locally; (should report having installed version google-cloud-nio-0.17.3-alpha-SNAPSHOT-shaded.jar); ```; $ mvn install -DskipTests | tee log.txt; $ grep nio/ log.txt | grep -i installing | grep shaded; ```. * return to the gatk folder. ```; cd ../gatk; ```. * switch to the [jp_gcloud_17_snapshot](https://github.com/broadinstitute/gatk/tree/jp_gcloud_17_snapshot) branch; (this version uses google-cloud-nio-0.17.3-alpha-SNAPSHOT-shaded.jar). ```; $ git fetch --all; $ git checkout jp_gcloud_17_snapshot; ```. * compile gatk and try it out. ```; $ ./gradlew installAll; $ ./gatk-launch ...; ```. I'd like to test it myself but haven't yet been able to reproduce the bug on my end. Please let me know how this variant works for you! If this solves the problem then we'll go through the steps to push this into the main version.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-302798685:552,log,log,552,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-302798685,3,"['log', 'test']","['log', 'test']"
Testability,"@Horneth Thank you. . It's very strange. I would expect to see a difference. I wonder if something is wrong with the wiring of those arguments. What version of gatk are you running? (you can find out by using --version`); ; I'm not sure what to make of the memory usage. I'm not sure that `free` will tell you anything useful about java memory, since java usually expands to fill all available memory and then garbage collects as needed. A better estimate of memory use might be to set the `XX:-PrintGCDetails` jvm option and look at what's retained after garbage collection. Or if you're logging into the vms, something like jstat or a proper profiler can tell a lot more about the memory usage.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2640#issuecomment-298707289:589,log,logging,589,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2640#issuecomment-298707289,1,['log'],['logging']
Testability,@KevinCLydon I addressed the comments that we had here. I didn't get the python unit test running yet though. (or fix jaccoco),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-2411978064:85,test,test,85,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-2411978064,1,['test'],['test']
Testability,"@LeeTL1220 - correct. It does bucket/local transfers in any combination. Really, it should handle transfers between any two valid NIO endpoints (though right now only buckets and local are tested in the unit tests).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5150#issuecomment-417719781:189,test,tested,189,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5150#issuecomment-417719781,2,['test'],"['tested', 'tests']"
Testability,"@LeeTL1220 @jonn-smith apologies for the blips in getting tests to pass on Travis, but I think this branch should be OK now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5556#issuecomment-451482997:58,test,tests,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5556#issuecomment-451482997,1,['test'],['tests']
Testability,@LeeTL1220 Added in a specific integration test for the `FILTER` field. Also rebased on master to fix the unrelated R test failures.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5598#issuecomment-456984341:43,test,test,43,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5598#issuecomment-456984341,2,['test'],['test']
Testability,"@LeeTL1220 Apologies, I don't think I have the bandwidth for a detailed re-review, but I'm OK with the XSV code if @jonn-smith approves. However, I still don't understand the test files and left some comments there.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4276#issuecomment-377939130:175,test,test,175,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4276#issuecomment-377939130,1,['test'],['test']
Testability,@LeeTL1220 Can you look into this. It seems like the wdl tests may be failing to run and saying they passed anyway.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3558#issuecomment-328559733:57,test,tests,57,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3558#issuecomment-328559733,1,['test'],['tests']
Testability,@LeeTL1220 Did we decide to merge this so that it can be in and assume that the tests we have done are good enough for it?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5872#issuecomment-494397877:80,test,tests,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5872#issuecomment-494397877,1,['test'],['tests']
Testability,@LeeTL1220 I put in a test that fails without the patch.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5121#issuecomment-413603322:22,test,test,22,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5121#issuecomment-413603322,1,['test'],['test']
Testability,"@LeeTL1220 Just noticed integration tests are failing...perhaps I should continue reviewing, and you can address comments and the tests at the same time?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4205#issuecomment-358979126:36,test,tests,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4205#issuecomment-358979126,2,['test'],['tests']
Testability,"@LeeTL1220 Note that I've validated with womtool, but as we've seen (#4281), changes of this sort (which deal with optional parameters, etc.) may slip through even if tests pass. You should take a careful look to make sure everything is in order!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4288#issuecomment-361293506:167,test,tests,167,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4288#issuecomment-361293506,1,['test'],['tests']
Testability,"@LeeTL1220 OK, so what do you recommend then? I don't want to have to embed this in the docker image for GATK, but it sounds like for testing we might have to.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5872#issuecomment-482299167:134,test,testing,134,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5872#issuecomment-482299167,1,['test'],['testing']
Testability,"@LeeTL1220 Ok, the branch is rebased/squashed, and the travis tests are re-running. Ready for your review.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3172#issuecomment-311674562:62,test,tests,62,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3172#issuecomment-311674562,1,['test'],['tests']
Testability,@LeeTL1220 Sorry - I didn't see the before it was restarted so I'm unsure which test failed. Looks like its nearly finished.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4931#issuecomment-399577738:80,test,test,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4931#issuecomment-399577738,1,['test'],['test']
Testability,@LeeTL1220 Thanks! Are the first and last lines the only thing you changed? The rest of it looks identical to the original. . Will use the TestNG annotations in the future.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2708#issuecomment-300835333:139,Test,TestNG,139,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2708#issuecomment-300835333,1,['Test'],['TestNG']
Testability,"@LeeTL1220 Whoops, surprise side effects. I think I resolved them but you may as well wait for tests to pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4360#issuecomment-363792322:95,test,tests,95,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4360#issuecomment-363792322,1,['test'],['tests']
Testability,"@LeeTL1220 asked me to summarize some PyMC3 and PyStan benchmarks. Let T = number of targets, N = number of samples, and M = number of ADVI iterations. From the notebooks posted above:. PyMC3, T = 500, N = 100, M = 2000: 45 seconds on my laptop single-core CPU (including Theano graph compilation); PyStan, T = 500, N = 100, M = 2000: 45 seconds compilation + 4.5 minutes on my laptop single-core CPU. PyMC3, T = 10^5, N = 100, M = 350: 15 minutes on my desktop single-core CPU; PyMC3, T = 10^5, N = 100, M = 350: 4 minutes on the gsa5 Tesla K40c GPU. PyMC3, T = 1.5 *10^5, N = 200, M = 350: 10 minutes on the gsa5 Tesla K40c GPU. I didn't run these last few benchmarks on PyStan because I figured they would take too long.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2984#issuecomment-320235070:55,benchmark,benchmarks,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2984#issuecomment-320235070,2,['benchmark'],['benchmarks']
Testability,"@LeeTL1220 done. I put it in the M2 integration test because it is part of a bigger potential issue, that of phantom alleles from the likelihoods that don't make it into the variant call. Back to you.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3636#issuecomment-333874263:48,test,test,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3636#issuecomment-333874263,1,['test'],['test']
Testability,"@LeeTL1220 that's totally fair. There are a few problems with putting in the tests, though. I don't know that I can publicly release the data that are being tested because of their provenance (pretty sure I can't). . The second reason is that the whole reference sequences are not checked into git lfs. Without it I can't annotate on a set of variants from around the whole genome, and the whole reference is pretty big. . The last thing I can think of is a data source problem - I don't have all the data sources checked into git lfs (for similar reasons, especially now with dbSNP in there). Also, these have already made their way into master. So if this is really a problem, we should get them out of there ASAP.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4563#issuecomment-376939652:77,test,tests,77,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4563#issuecomment-376939652,2,['test'],"['tested', 'tests']"
Testability,"@LeeTL1220, I believe that it is because of huge coverage issues. Do you have any log? Does the output file contain something? I expect that the time for processing huge covered data will be slow because of the implementation. I'm sure that things will be better when downsampling is implemented.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1920#issuecomment-226807475:82,log,log,82,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1920#issuecomment-226807475,1,['log'],['log']
Testability,"@MartonKN It looks like the relevant code is lines 713-5 of `SelectVariants`:; ```; if (rsIDsToRemove != null && !rsIDsToRemove.isEmpty()) {; compositeFilter = compositeFilter.and(new CountingVariantFilter(new VariantIDsVariantFilter(rsIDsToRemove).negate()));; }; ```; and in `VariantIDsVariantFilter`; ```; public boolean test(final VariantContext vc) {; return includeIDs.contains(vc.getID());; }; ```; This seems like it should do the right thing, except that `vc.getID()` is a `String`, *not* a `List<String>`. @vdauwera can we assume that a `VariantContext` ID will not contain a semicolon, and therefore we can parse by splitting on `';'`?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5260#issuecomment-440420519:324,test,test,324,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5260#issuecomment-440420519,1,['test'],['test']
Testability,@MartonKN Looks good! You can merge once tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5464#issuecomment-443263606:41,test,tests,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5464#issuecomment-443263606,1,['test'],['tests']
Testability,@MartonKN You can merge once tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5452#issuecomment-442892032:29,test,tests,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5452#issuecomment-442892032,1,['test'],['tests']
Testability,"@MartonKN please review code changes, @sooheelee please review docs. You can ignore the fact that tests are failing for the time being; these are just the gCNV WDL tests, see note in #3925.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4027#issuecomment-354859784:98,test,tests,98,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4027#issuecomment-354859784,2,['test'],['tests']
Testability,@MinS1 @MengZhang2019 Would it be possible for one of you to attach a full log file? Also are you sure there is sufficient disk available? I have a feeling this may relate to temp or memory swap storage.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6293#issuecomment-625922070:75,log,log,75,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6293#issuecomment-625922070,1,['log'],['log']
Testability,"@NeginValizadegan Thanks for looking into it, and sorry you're still seeing the issue. . Is that error message from the 2.10.1 version? It doesn't line up with the code in 2.27.1 so either you're posting your original error, or you're not getting the version of picard you expect. Would it be possible to include the entire program log, and the command line to run it here?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3154#issuecomment-1414024739:332,log,log,332,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3154#issuecomment-1414024739,1,['log'],['log']
Testability,@RoriCremer @mcovarr are there any test runs I can look at?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8534#issuecomment-1759744706:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8534#issuecomment-1759744706,1,['test'],['test']
Testability,"@SHuang-Broad . Here are the tail end of the PrintReadsSpark jobs (tested on bam, cram and sam filetypes) . Writing to a bam failed while writing bai index... (others worked while writing to a cram and sam); ```; 2019-06-03 22:34:34 INFO IndexFileMerger:100 - Done merging .sbi files; 2019-06-03 22:34:34 INFO IndexFileMerger:69 - Merging .bai files in temp directory hdfs:///project/casa/gcad/adsp.cc/sv/A-ACT-AC000014-BL-NCR-15AD78694.hg38.realign.bqsr.bam.parts/ to hdfs:///project/casa/gcad/adsp.cc/sv/A-ACT-AC000014-BL-NCR-15AD78694.hg38.realign.bqsr.bam.bai; 2019-06-03 22:34:48 INFO AbstractConnector:318 - Stopped Spark@6be766d1{HTTP/1.1,[http/1.1]}{0.0.0.0:4040}; 2019-06-03 22:34:48 INFO SparkUI:54 - Stopped Spark web UI at http://scc-hadoop.bu.edu:4040; 2019-06-03 22:34:48 INFO YarnClientSchedulerBackend:54 - Interrupting monitor thread; 2019-06-03 22:34:48 INFO YarnClientSchedulerBackend:54 - Shutting down all executors; 2019-06-03 22:34:48 INFO YarnSchedulerBackend$YarnDriverEndpoint:54 - Asking each executor to shut down; 2019-06-03 22:34:48 INFO SchedulerExtensionServices:54 - Stopping SchedulerExtensionServices; (serviceOption=None,; services=List(),; started=false); 2019-06-03 22:34:48 INFO YarnClientSchedulerBackend:54 - Stopped; 2019-06-03 22:34:48 INFO MapOutputTrackerMasterEndpoint:54 - MapOutputTrackerMasterEndpoint stopped!; 2019-06-03 22:34:49 INFO MemoryStore:54 - MemoryStore cleared; 2019-06-03 22:34:49 INFO BlockManager:54 - BlockManager stopped; 2019-06-03 22:34:49 INFO BlockManagerMaster:54 - BlockManagerMaster stopped; 2019-06-03 22:34:49 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint:54 - OutputCommitCoordinator stopped!; 2019-06-03 22:34:49 INFO SparkContext:54 - Successfully stopped SparkContext; 22:34:49.027 INFO PrintReadsSpark - Shutting down engine; [June 3, 2019 10:34:49 PM EDT] org.broadinstitute.hellbender.tools.spark.pipelines.PrintReadsSpark done. Elapsed time: 3.72 minutes.; Runtime.totalMemory()=3829923840; htsjdk.samt",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5942#issuecomment-498502370:67,test,tested,67,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5942#issuecomment-498502370,1,['test'],['tested']
Testability,"@SHuang-Broad ; I have addressed comments and changed the SSRAligner interface to make it more general in terms of the type of inputs (base sequence providers) and the type of outputs that it will generate. . Also I added and example as to how to address your SVFastqUtil.FastqRead to SAMRecord realigner may look like but is untested. perhaps you can take on that commit and add the test, . does not need to be part of this PR push though.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4780#issuecomment-390809079:384,test,test,384,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4780#issuecomment-390809079,1,['test'],['test']
Testability,"@SHuang-Broad @akiezun I've updated the PR to build jbwa, and now the test is passing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1750#issuecomment-214361202:70,test,test,70,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1750#issuecomment-214361202,1,['test'],['test']
Testability,"@SHuang-Broad I see. So the conversion to SAM and back when we write the file actually changes the results (or at least their annotations). It makes me a little nervous that in one version of the pipeline the records go through `BwaMemAlignmentUtils.applyAlignment` and in the other they don't, since that method has some complex logic. Right now we have two possible paths:. `AlignedAssemblyOrExcuse -> SAMRecord -> writeToFile -> GATKRead -> AlignmentRegion`. or . `AlignedAssemblyOrExcuse -> AlignmentRegion`. What if we always converted to `SAMRecord`? It's a little more expensive but it would cut down on alternate code paths and conversion code, and IMO would make the code a lot simpler to read if I didn't have to think about which code path I was in. I'm also worried that the different conversions could lead to bugs that will be hard to debug since you have to know the code path that generated them. @tedsharpe what do you think?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2595#issuecomment-294168022:330,log,logic,330,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2595#issuecomment-294168022,1,['log'],['logic']
Testability,"@SHuang-Broad If this looks OK, feel free to merge once tests pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4246#issuecomment-360001838:56,test,tests,56,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4246#issuecomment-360001838,1,['test'],['tests']
Testability,@SHuang-Broad Lets see if it passes tests...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6042#issuecomment-511925308:36,test,tests,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6042#issuecomment-511925308,1,['test'],['tests']
Testability,@SHuang-Broad Thanks the code looks much better. Next step is tests then?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4602#issuecomment-387119743:62,test,tests,62,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4602#issuecomment-387119743,1,['test'],['tests']
Testability,"@SHuang-Broad The `testSAMWriter_chr20.bam` bam that you added here should probably have gone into git lfs (`src/test/resources/large`), rather than directly into the repo. It's too late to fix (once it's in master, it's in the git history forever), but in the future please try to store test data bigger than ~1-2 MB or so in lfs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4562#issuecomment-376937414:113,test,test,113,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4562#issuecomment-376937414,2,['test'],['test']
Testability,"@SHuang-Broad You can adjust the Spark verbosity, but unfortunately we don't know of a way to reduce the Spark log spam without losing the logging output we actually care about.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6400#issuecomment-581523090:111,log,log,111,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6400#issuecomment-581523090,2,['log'],"['log', 'logging']"
Testability,@SHuang-Broad done (assuming tests pass). Is this what you meant?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2330#issuecomment-270453748:29,test,tests,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2330#issuecomment-270453748,1,['test'],['tests']
Testability,@SHuang-Broad looks good. I still think you should rename that integration test though.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2452#issuecomment-288187411:75,test,test,75,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2452#issuecomment-288187411,1,['test'],['test']
Testability,"@SHuang-Broad please take a look at changes. I have moved soft/hardReclip code output of CigarUtils into AlignmentInterval where it is used. Is ""package"" protected for the sake of testing otherwise it would be private. Thanks, V.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3531#issuecomment-326697886:180,test,testing,180,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3531#issuecomment-326697886,1,['test'],['testing']
Testability,@SHuang-Broad sorry that is just over 1000 lines... that said alot of it is just testing-code; I don't know what you do with testing c. I normally don't care much about its form.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3531#issuecomment-325502243:81,test,testing-code,81,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3531#issuecomment-325502243,2,['test'],"['testing', 'testing-code']"
Testability,"@SHuang-Broad thanks for the regex. Where have you been using the regex? I couldn't find it in htsjdk or GATK, and in fact neither of these seem to have tests for hg38-style contig/chromosome names. Ideally htsjdk would have code for this so that both Hadoop-BAM and GATK could call it directly.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3360#issuecomment-322730591:153,test,tests,153,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3360#issuecomment-322730591,1,['test'],['tests']
Testability,@SHuang-Broad thanks for the summary. I think this is OK to go in (once you resolve conflicts and make sure tests pass) -- we can go over and resolve some of the details in future changes.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3805#issuecomment-355578346:108,test,tests,108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3805#issuecomment-355578346,1,['test'],['tests']
Testability,"@SebastianHollizeck I believe the bug is not in `FilterMutectCalls` but upstream in `LearnReadOrientationModel` in the edge case of 3-base contexts that have no data in some of the samples. It's strange because we have an integration test for this already, and I would appreciate getting your input files to `LearnReadOrientationModel` for debugging. I think the following quick fix will work: untar your artifact priors, delete all but sample b, and re-tar, then run `FilterMutectCalls` as before. Is there a reason why all samples except b have very little data, and have no data at all for most 3-base contexts? To be clear, we want to fix the bug even if the data are weird, but I want to double-check that this is expected.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6202#issuecomment-597735514:234,test,test,234,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6202#issuecomment-597735514,1,['test'],['test']
Testability,"@Sun-shan Yes, you can clone this repo, and then follow [these](https://github.com/broadinstitute/gatk#creating-a-gatk-project-in-the-intellij-ide-last-tested-with-version-201624) instructions in the README.md to set up an IntelliJ project.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4156#issuecomment-357970316:152,test,tested-with-version-,152,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4156#issuecomment-357970316,1,['test'],['tested-with-version-']
Testability,"@SusieX . Marking duplicates: I do recommend removing duplicates (we run MarkDuplicates from Picard). . BQSR: The pipeline we're developing is for Whole Genome data, so our bams have gone through BQSR in the whole genome pipeline. We're using those recalibrated base qualities. I haven't tested running BQSR only on the mitochondria so I don't know how well that would work. . If you do need to run BQSR only on the mitochondria I'd start by using the phylotree sites as `--known-sites`, but you'd need to have those sites in vcf format. Again, I haven't tested this so I don't know how well it will perform. If you end up using BQSR I think you're pipeline (BAM -> remove dup -> BQ recalibrate -> Mutect2 call -> FilterMutectCalls) is correct. Good luck!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431852996:288,test,tested,288,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431852996,2,['test'],['tested']
Testability,@TedBrookings feel free to cherry-pick if I cannot merge this into master today (because of the gcloud test stuff),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5005#issuecomment-404303174:103,test,test,103,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5005#issuecomment-404303174,1,['test'],['test']
Testability,"@TianJin297 I'm sorry you're hitting this issue. I haven't seen this error myself so I'm not sure exactly what's going on. We test with spark 2.0.2 and hadoop 2.7.3. (We're currently using google dataproc for most of our work, using [image version 1.1](https://cloud.google.com/dataproc/docs/concepts/dataproc-versions)) I would suspect that newer versions would also work, but I can definitely tell you that gatk has issues with any spark before 2.0.2. . We'll need to see if we can reproduce locally, it's possible that it's a bug unrelated to the spark version.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3050#issuecomment-306836459:126,test,test,126,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3050#issuecomment-306836459,1,['test'],['test']
Testability,"@Tintest I also met this problem. However, I solved it by ""export HOME"" before calling gatk command in my shell file call_gatk.sh. ```; export HOME=/scratch/cqs/shengq2/temp/; source activate gatk; gatk --java-options ""-Xmx40G"" DetermineGermlineContigPloidy \; ...; ```. And, here is my shell file test.sh to call singularity :; ```; export R_LIBS=; export PYTHONPATH=; export JAVA_HOME=. singularity exec gatk.4.1.0.0.simg bash /scratch/cqs/shengq2/temp/call_gatk.sh; ```. Putting the ""export HOME"" in test.sh with ""export JAVA_HOME"" before calling singularity didn't work. You have to put it in call_gatk.sh.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4782#issuecomment-511885475:298,test,test,298,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4782#issuecomment-511885475,2,['test'],['test']
Testability,"@Tintest Sorry for the slow reply. I'm not sure exactly what the issue is. I've never seen this exact error before. . I have two guesses, one is that there's something really weird going on in spark that's causing that null pointer exception which is killing the heartbeat. I'm not sure how to debug that without your access to your input data . The other theory which I think is more likely, is that you're running out of memory and it's causing weird errors to occur. How much memory is available to your job? You can set the java -Xmx value with `--java-options ""-Xmx120g""` as a GATK option. I would check that you're not running out of memory on your machine, or giving the job too little. I think for BaseRecalibratorSpark you want at least 2-4g per core, but haven't tested it in a long time so I might be wrong about that.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4515#issuecomment-373250134:773,test,tested,773,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4515#issuecomment-373250134,1,['test'],['tested']
Testability,"@Unip0rn Thank you for the pr. I'm not sure I understand what you're trying to do here though. currently when I run `./gatk --list` it prints the list of gatk tools. ex:; ```; USAGE: <program name> [-h]. Available Programs:; --------------------------------------------------------------------------------------; Base Calling: Tools that process sequencing machine data, e.g. Illumina base calls, and detect sequencing level attributes, e.g. adapters; CheckIlluminaDirectory (Picard) Asserts the validity for specified Illumina basecalling data.; CollectIlluminaBasecallingMetrics (Picard) Collects Illumina Basecalling metrics for a sequencing run.; CollectIlluminaLaneMetrics (Picard) Collects Illumina lane metrics for the given BaseCalling analysis directory.; ExtractIlluminaBarcodes (Picard) Tool determines the barcode for each read in an Illumina lane.; IlluminaBasecallsToFastq (Picard) Generate FASTQ file(s) from Illumina basecall read data. ...; ```. With this change it instead prints the gatk launcher help, which is not the intended result. ; ```; Usage template for all tools (uses --spark-runner LOCAL when used with a Spark tool); gatk AnyTool toolArgs. Usage template for Spark tools (will NOT work on non-Spark tools); gatk SparkTool toolArgs [ -- --spark-runner <LOCAL | SPARK | GCS> sparkArgs ]. Getting help; gatk --list Print the list of available tools. gatk Tool --help Print help on a particular tool. Configuration File Specification; --gatk-config-file PATH/TO/GATK/PROPERTIES/FILE. gatk forwards commands to GATK and adds some sugar for submitting spark jobs. --spark-runner <target> controls how spark tools are run; valid targets are:; LOCAL: run using the in-memory spark runner; SPARK: run using spark-submit on an existing cluster; --spark-master must be specified; --spark-submit-command may be specified to control the Spark submit command; arguments to spark-submit may optionally be specified after --; GCS: run using Google cloud dataproc; commands after the --",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5541#issuecomment-449068030:484,Assert,Asserts,484,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5541#issuecomment-449068030,1,['Assert'],['Asserts']
Testability,"@V-Z The error you encountered is a regression in `new-qual` that was introduced in `4.0.5.0`. You can track this issue here: https://github.com/broadinstitute/gatk/issues/4975. For the purposes of this ticket, you might want to do a test with GATK 4.0.4.0 and `new-qual`, and see if that works.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4544#issuecomment-401931618:234,test,test,234,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4544#issuecomment-401931618,1,['test'],['test']
Testability,"@Vzzarr Don't worry, these things are complicated and take time to learn! You can use whatever you want, I just know more gradle than maven so it's easier for me to help with that. . I'm having trouble reproducing the error you're having. Is your project on github? Or at a minimum could you paste your pom file here? . In the meantime, could you try cloning https://github.com/lbergelson/gatk-downstream-test and seeing if `mvn compile` completes successfully?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3724#issuecomment-339761069:405,test,test,405,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3724#issuecomment-339761069,1,['test'],['test']
Testability,"@YunLemon Thank you for your interest in the project, but those wait statements are necessary to allow are long running tests to complete without timing out. As you can see the build is now failing because it's timing out after the default 10 minutes of no recorded output.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7418#issuecomment-900407313:120,test,tests,120,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7418#issuecomment-900407313,1,['test'],['tests']
Testability,"@adamjorr The test failures are in `BaseRecalibratorIntegrationTest.testBQSR` and `BaseRecalibratorSparkIntegrationTest.testBQSRSpark`. These are old, brittle tests that fail if there is not an exact match with the expected output. You can put a breakpoint in your IDE where the failure occurs and copy the actual result file to the expected file, but first you should spot-check the difference, which should be minor.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6389#issuecomment-580358184:14,test,test,14,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6389#issuecomment-580358184,4,['test'],"['test', 'testBQSR', 'testBQSRSpark', 'tests']"
Testability,"@ahaessly I've asked @jamesemery to review, as this touches some of his code. In the mean time, though, could you please add at least one good integration test for the new `ShiftFasta` tool?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6694#issuecomment-773489477:155,test,test,155,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6694#issuecomment-773489477,1,['test'],['test']
Testability,@ahaessly It would be good to have tests that show that new allele subsetting does what we expect.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6278#issuecomment-557591907:35,test,tests,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6278#issuecomment-557591907,1,['test'],['tests']
Testability,"@akiezun , the whole directory `src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunBWAMEMViaCommandLine` can be deleted as well.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1941#issuecomment-232457785:36,test,test,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1941#issuecomment-232457785,1,['test'],['test']
Testability,"@akiezun . I don't have anything against porting the classes that are ported except `MostLikelyAllele` which is only reference by testing code (or perhaps I'm missing something?) It might need to be ported eventually but not at this time. Coverage is poor for PairHMM instances and this seems due to the fact that there are no unit test for PairHMM's computeLikelihoods and it was covered just by integration test back in GATK3. Can you add some unit-testing here? That would require to include an implementor of LikelihoodMatrix also in the pull request. Apart from that please correct code formatting issues (finals, missing {} and so forth).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/543#issuecomment-109616565:130,test,testing,130,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/543#issuecomment-109616565,4,['test'],"['test', 'testing']"
Testability,@akiezun :+1: Squash and merge. Thanks for adding those tests.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/636#issuecomment-123047973:56,test,tests,56,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/636#issuecomment-123047973,1,['test'],['tests']
Testability,"@akiezun @droazen @lbergelson Found the issue with FTZ being cleared. The FTZ setting only applies to the thread where FTZ is set. When running tests in gradle/testng, each test is run in a new thread. However, the pairHMM native library is only loaded for the first HaplotypeCaller test, since code in `VectorLoglessPairHMM.java` prevents the library from being loaded more than once in the same JVM. This means only the first test uses FTZ. A code change that loads the pairHMM native library for each test resolves the issue, and all `HaplotypeCallerIntegrationTest` tests pass. Another option to explore is setting FTZ in `main`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1771#issuecomment-216259701:144,test,tests,144,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1771#issuecomment-216259701,7,['test'],"['test', 'testng', 'tests']"
Testability,@akiezun @droazen Here are my performance results for the latest commit using `-ERC GVCF` and `--activeRegionsOnly`. **Original Code**. ```; Elapsed time: 2.54 minutes.; Time in Smith-Waterman search = 0.0037741310000000004 sec; Time in Smith-Waterman full = 19.315050559 sec; Total Smith-Waterman calls = 84948 (0 substring matches = 0.00 %); ```. **Code with lastIndexOf for array**. ```; Elapsed time: 2.43 minutes.; Time in Smith-Waterman search = 0.020596938000000002 sec; Time in Smith-Waterman full = 12.461222691000001 sec; Total Smith-Waterman calls = 84948 (69338 substring matches = 81.62 %); ```. ~5% improvement for this test case. The Smith-Waterman profiling is currently enabled by default. There is also code to dump every Smith-Waterman call and result (currently disabled by default).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1677#issuecomment-204507562:634,test,test,634,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1677#issuecomment-204507562,1,['test'],['test']
Testability,"@akiezun @tomwhite @droazen Is the plan that Cloudera will spin up an additional CI system that will run the same test suite on spark? Or should we modify our travis instance to run twice, once with google local dataflow, and once with cloudera local spark?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/546#issuecomment-109322309:114,test,test,114,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/546#issuecomment-109322309,1,['test'],['test']
Testability,@akiezun Adding a ticket for figuring out what to do with tests #468. I'm not going to address it in this.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/443#issuecomment-97166807:58,test,tests,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/443#issuecomment-97166807,1,['test'],['tests']
Testability,"@akiezun All tests are passing. I handled the log10s from htsjdk with a couple of atrocious hacks, though, and I'll solicit @lbergelson's advice on writing a better facade before handing it back to you.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/917#issuecomment-151360924:13,test,tests,13,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/917#issuecomment-151360924,1,['test'],['tests']
Testability,@akiezun Are there any tests that run now without indelBQSR on? ; When you say doesn't affect results you mean byte identical or analysis shows it's unimportant? I'm assuming some minor differences but not meaningful.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1821#issuecomment-219435045:23,test,tests,23,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1821#issuecomment-219435045,1,['test'],['tests']
Testability,"@akiezun As a heads up, codeship is running our tests now as well. It seems fast and easy to set up, but doesn't seem like it lets us use sudo at all. It doesn't seem to be viewable publicly, and it's not building separate pull request branches, although it's possible it's smart and can realize that this is really a fast forward so it's not bothering. I sent them questions asking about it being publicly viewable, external pull requests, and installing tools that require sudo, we'll see what they say.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/518#issuecomment-101424138:48,test,tests,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/518#issuecomment-101424138,1,['test'],['tests']
Testability,@akiezun Back to you with what I think is a legitimate test failure.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/497#issuecomment-100282965:55,test,test,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/497#issuecomment-100282965,1,['test'],['test']
Testability,"@akiezun Back to you. I can move the changes to .travis.yml to a different pull request if you prefer. I think they're useful, but they're essentially unrelated to this. I think the changes to the test logging should probably stay in this pull request though.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1742#issuecomment-212990230:197,test,test,197,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1742#issuecomment-212990230,2,"['log', 'test']","['logging', 'test']"
Testability,"@akiezun Back to you. I think there's a minor bug. Could you add a test that covers that case and show if it's a bug or not? (Seems like this class should be Iterable, but that's a different issues)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1621#issuecomment-200896376:67,test,test,67,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1621#issuecomment-200896376,1,['test'],['test']
Testability,@akiezun Can you assess whether we have enough unit tests for MarkDuplicatesSpark at this point?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/591#issuecomment-161368319:52,test,tests,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/591#issuecomment-161368319,1,['test'],['tests']
Testability,"@akiezun Can you determine whether you're using the HDFS -> GCS adapter in your test case? The adapter historically did have performance problems of this magnitude. As @jean-philippe-martin mentioned, we should benchmark the new NIO -> GCS support as well.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1755#issuecomment-213097025:80,test,test,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1755#issuecomment-213097025,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,@akiezun Can you open a ticket to add a continuous test in jenkins to ensure that BQSR will continue to run in < 3.5 GB?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1460#issuecomment-198378888:51,test,test,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1460#issuecomment-198378888,1,['test'],['test']
Testability,"@akiezun Can you please test gatk-protected with a local snapshot of this branch, and confirm that protected still builds and tests pass?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1863#issuecomment-222192463:24,test,test,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1863#issuecomment-222192463,2,['test'],"['test', 'tests']"
Testability,"@akiezun Can you please test with `--activeRegionsOnly` and `-ERC GVCF` on `dr_runnable_haplotypecaller`, and see if the gains hold up (or increase/decrease)?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1677#issuecomment-204212568:24,test,test,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1677#issuecomment-204212568,1,['test'],['test']
Testability,"@akiezun Change the cloud tests to broadcast a 2bit reference stored in our test GCS bucket for now? Should work fine. We need to benchmark the performance of broadcasting a 2bit reference in the cloud vs. reading it directly from a bucket from every worker, but this will require some code changes before we can do the comparison.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1756#issuecomment-213150052:26,test,tests,26,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1756#issuecomment-213150052,3,"['benchmark', 'test']","['benchmark', 'test', 'tests']"
Testability,"@akiezun Changed the .travis.yml so that the tests don't run on cloud side of things. It's super ugly though, I thought there would be a clean way to do it, but I can't figure one out, it's just a bunch of if statements in the travis file. . We're getting a coverage failure though, since tests cases are covering less code now. We could avoid this by disabling coverage entirely for external pull requests. Thoughts?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1050#issuecomment-151265843:45,test,tests,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1050#issuecomment-151265843,2,['test'],['tests']
Testability,"@akiezun Classes most in need of review/extra scrutiny:. `AssemblyRegion` (especially `createFromReadShard()`); `AssemblyRegionEvaluator`; `AssemblyRegionWalker`; `ReadShard`; `ReadFilterLibrary` (small change, but needs review); `DepthPerSampleHC`; `StrandBiasBySample`; `ActivityProfile`; `ActivityProfileState`; `BandPassActivityProfile`; `PairHMM`; `AssemblyRegionUnitTest` (especially `testCreateFromReadShard()`); `ReadShardUnitTest`; `ActivityProfileUnitTest`; `BandPassActivityProfileUnitTest`. You should do a review pass over the rest as well, but focus on the above.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1714#issuecomment-211121484:391,test,testCreateFromReadShard,391,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1714#issuecomment-211121484,1,['test'],['testCreateFromReadShard']
Testability,@akiezun Could you do the 100GB-scale test described above before the holiday break (or delegate to someone else if you don't have time)? Thanks!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/995#issuecomment-164995745:38,test,test,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/995#issuecomment-164995745,1,['test'],['test']
Testability,@akiezun Do you think we should move the various variant context test routines out of BaseTest? It seems weird that they live there.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1906#issuecomment-225286963:65,test,test,65,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1906#issuecomment-225286963,1,['test'],['test']
Testability,@akiezun Have you tested that this is a fix for your problem on the cluster?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1390#issuecomment-166641179:18,test,tested,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1390#issuecomment-166641179,1,['test'],['tested']
Testability,"@akiezun How big a file are we talking about? (i.e., which of the current testing files should I convert to ADAM/Parquet?)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/896#issuecomment-151655488:74,test,testing,74,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/896#issuecomment-151655488,1,['test'],['testing']
Testability,@akiezun I believe that CollectTargetedPcrMetrics integration test... fails due to its inability to output min_normalized_coverage when using the PER_TARGET_COVERAGE option.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/996#issuecomment-149579546:62,test,test,62,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/996#issuecomment-149579546,1,['test'],['test']
Testability,"@akiezun I had a clean-room version of `lastIndexOf(byte[] source, byte[] target)` ready to go. It's based on KMP algorithm described in [Algorithms, 4th edition](http://algs4.cs.princeton.edu/home/), modified to work on `byte []` and to search from right to left. Here are some profiling results from runs with instrumentation code.; - `Elapsed time` is reported by HaplotypeCaller; - `Smith-Waterman search` is time spent in lastIndexOf; - `Smith-Waterman full` is time spent in full Smith-Waterman. **Command**. ```; ./gatk-launch HaplotypeCaller -R src/test/resources/large/human_g1k_v37.20.21.fasta -I src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam -O out.g.vcf -ERC GVCF; ```. **Original Code**. ```; Elapsed time: 5.35 minutes.; Time in Smith-Waterman search = 0.004659962; Time in Smith-Waterman full = 44.342853681; Smith-Waterman calls = 103995 (0 substring match); ```. **Code with KMP search**. ```; Elapsed time: 4.90 minutes.; Time in Smith-Waterman search = 0.129977206; Time in Smith-Waterman full = 27.955518434000002; Smith-Waterman calls = 103995 (85728 substring match); ```. **Code with String.lastIndexOf**. ```; Elapsed time: 4.92 minutes.; Time in Smith-Waterman search = 0.081916556; Time in Smith-Waterman full = 27.025490193000003; Smith-Waterman calls = 103995 (85728 substring match); ```. There wasn't a lot of difference in KMP vs. String, so I didn't include KMP in the first commit. But, these numbers may not capture the `String` creation penalty.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1677#issuecomment-204224591:557,test,test,557,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1677#issuecomment-204224591,2,['test'],['test']
Testability,"@akiezun I have switched a lot so far; currently I'm stuck on `GenotypeLikelihoodCalculator`, which relies on `GenotypeLikelihoods` in htsjdk, which is log10. I could write a simple wrapper class to present a natural log interface. Is there a better solution?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/917#issuecomment-149321469:217,log,log,217,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/917#issuecomment-149321469,1,['log'],['log']
Testability,"@akiezun I keep encountering user exceptions on spark that are missing important information. Until we fix those cases ( #1786 is one example) I think we should have it on for spark. Seeing a stack trace is less frustrating than seeing ""User Exception: null"". I would recommend keeping it on for spark by default until we tested more combinations of inputs and outputs on more machines. . If you disagree though I can turn it off.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1785#issuecomment-215731585:322,test,tested,322,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1785#issuecomment-215731585,1,['test'],['tested']
Testability,"@akiezun I started looking at this, but I have a question about the sequence dictionary. I've added intervals tests to CountVariantsSparkIntegrationTest, but I get. ```; We require at least one input source that has a sequence dictionary (reference or reads) when intervals are specified; ```. Any thoughts about how to specify the sequence dictionary when the only input is a VCF (count_variants.vcf in this test)?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1651#issuecomment-224561479:110,test,tests,110,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1651#issuecomment-224561479,2,['test'],"['test', 'tests']"
Testability,@akiezun I'd like to amend my review completed note. Won't the `commentPrefix == null` case incorrectly filter out every line? . Please add tests for compareTextFile with and without a comment prefix.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/636#issuecomment-122372713:140,test,tests,140,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/636#issuecomment-122372713,1,['test'],['tests']
Testability,"@akiezun In that case, merge when ready and we'll have to deal with the breakage in protected separately. This is going to cause issues for people who need to test out public snapshots of branches with protected, so we should fix soon.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1863#issuecomment-222206552:159,test,test,159,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1863#issuecomment-222206552,1,['test'],['test']
Testability,@akiezun Isn't the problem though that you'd have to actually log in to the dataproc instances to do this? How would you auto-discover the machines to log in to?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1609#issuecomment-228138523:62,log,log,62,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1609#issuecomment-228138523,2,['log'],['log']
Testability,"@akiezun Looks good, needs some explanation for confused future people I think. We want it to be discoverable when the test suit has slightly different numbers of tests depending on where it runs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1760#issuecomment-213594256:119,test,test,119,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1760#issuecomment-213594256,2,['test'],"['test', 'tests']"
Testability,"@akiezun Moved `lastInstanceOf` to `Utils`, removed profiling code, added tests, and squashed/merged. This can go in after `HaplotypeCaller` as we discussed with @droazen.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1677#issuecomment-210511399:74,test,tests,74,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1677#issuecomment-210511399,1,['test'],['tests']
Testability,"@akiezun Please review. The test is hideous, but I'm not sure if there's a way to make it much cleaner.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1430#issuecomment-171005444:28,test,test,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1430#issuecomment-171005444,1,['test'],['test']
Testability,"@akiezun Review complete. I like the filtering for comments. Just two trivial nitpicks. Up to you if you want to keep the plotting or not. It's not really being tested properly and we're not really supporting it, but if we have the command line options it doesn't hurt to exercise them. Squash and merge whenever you're ready.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/636#issuecomment-122370261:161,test,tested,161,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/636#issuecomment-122370261,1,['test'],['tested']
Testability,"@akiezun Seems fine to me, good to delete the pointless TestMath. David wants AlignmentContext back, so save that. The tests to prove that you can't create a utility class seem a bit pointless to me, but they're not hurting anything if you want them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1513#issuecomment-187260801:56,Test,TestMath,56,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1513#issuecomment-187260801,2,"['Test', 'test']","['TestMath', 'tests']"
Testability,"@akiezun Seems to have conflict, probably with the always sort branch that I just merged. Everything else looks good though. I'm confused why we didn't notice this in our earlier testing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1419#issuecomment-169720555:179,test,testing,179,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1419#issuecomment-169720555,1,['test'],['testing']
Testability,"@akiezun Sure! Here you go:. https://storage.googleapis.com/hellbender/test/build_reports/3776.2/tests/index.html; https://s3.amazonaws.com/archive.travis-ci.org/jobs/94993317/log.txt; https://travis-ci.org/broadinstitute/gatk/jobs/94993317. Error is:. ```; testMDOrder[1](src/test/resources/org/broadinstitute/hellbender/tools/picard/sam/MarkDuplicates/mdOrderBug2.bam, src/test/resources/org/broadinstitute/hellbender/tools/picard/sam/MarkDuplicates/expected.mdOrderBug2.bam). java.lang.AssertionError: SAM file /tmp/markdups5286910037691954939.bam differs from expected output:src/test/resources/org/broadinstitute/hellbender/tools/picard/sam/MarkDuplicates/expected.mdOrderBug2.bam name differs. File 1: 20GAVAAXX100126:4:24:10635:52735 File 2: 20FUKAAXX100202:1:22:1193:123181 expected [null] but found [name differs. File 1: 20GAVAAXX100126:4:24:10635:52735 File 2: 20FUKAAXX100202:1:22:1193:123181]; at org.testng.Assert.fail(Assert.java:94); at org.testng.Assert.failNotSame(Assert.java:492); at org.testng.Assert.assertNull(Assert.java:428); at org.broadinstitute.hellbender.utils.test.SamAssertionUtils.assertSamsEqual(SamAssertionUtils.java:33); at org.broadinstitute.hellbender.utils.test.SamAssertionUtils.assertSamsEqual(SamAssertionUtils.java:59); at org.broadinstitute.hellbender.utils.test.SamAssertionUtils.assertEqualBamFiles(SamAssertionUtils.java:362); at org.broadinstitute.hellbender.utils.test.testers.AbstractMarkDuplicatesCommandLineProgramTest.testMDOrderImpl(AbstractMarkDuplicatesCommandLineProgramTest.java:604); at org.broadinstitute.hellbender.tools.spark.pipelines.MarkDuplicatesSparkIntegrationTest.testMDOrder(MarkDuplicatesSparkIntegrationTest.java:49); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.testng.internal",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174:71,test,test,71,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162574174,14,"['Assert', 'log', 'test']","['Assert', 'AssertionError', 'log', 'test', 'testMDOrder', 'testng', 'tests']"
Testability,"@akiezun There is no logic change, just things like using Java 8 to get one-liners and replacing argument-checking boilerplate with our existing utility methods.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1855#issuecomment-221764597:21,log,logic,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1855#issuecomment-221764597,1,['log'],['logic']
Testability,"@akiezun This is blocked, since we need to know which three unit tests fail and when (reproducible). If they fail occasionally also we need to know how can we be sure that it is fixed.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/364#issuecomment-93833601:65,test,tests,65,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/364#issuecomment-93833601,1,['test'],['tests']
Testability,@akiezun This should pass. The issue was that `test` didn't depend on `extractIntelDeflater` and was correctly failing when it wasn't found.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1742#issuecomment-212593861:47,test,test,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1742#issuecomment-212593861,1,['test'],['test']
Testability,"@akiezun We can definitely get this in for alpha, but we need to confirm that the intermittent test failures on this branch are really gone.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1268#issuecomment-162669644:95,test,test,95,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1268#issuecomment-162669644,1,['test'],['test']
Testability,"@akiezun We can set up travis on mac. It will be a bit of a hassle. Do we want to run our whole test suit on mac? Or do we only want to test the pairhmm since ostensibly the rest of it ""just works"" thanks to the magic of java?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1813#issuecomment-218858668:96,test,test,96,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1813#issuecomment-218858668,2,['test'],['test']
Testability,"@akiezun We'll miss out on that .5% coverage the the cloud tests hit, but should be fine otherwise. 👍 if the pingponging is annoying you. I have an open ticket with coveralls to address it, but no one has ever responded... so I doubt it will ever be resolved.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1932#issuecomment-227786552:59,test,tests,59,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1932#issuecomment-227786552,1,['test'],['tests']
Testability,"@akiezun Yes, the task is to add more integration tests that use `--joinStrategy BROADCAST`. Currently almost all of the tests use `SHUFFLE`, even though that's no longer the default.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1140#issuecomment-157802235:50,test,tests,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1140#issuecomment-157802235,2,['test'],['tests']
Testability,"@akiezun You need to allow a set of comparison `FeatureInputs` (what GATK3 calls ""getCompRodBindings"") to be passed in at construction, in addition to the DBSNP `FeatureInput`. Then you need to modify your `initializeOverlapAnnotator()` method slightly to add entries for the non-DBSNP ""comp"" `FeatureInputs` as well, and it should just work, I think. Could you please do this + add a test? This feature is needed/used by the HC, among other tools. Relevant code from GATK3:. ```; final Map<RodBinding<VariantContext>, String> overlapBindings = new LinkedHashMap<>();; for ( final RodBinding<VariantContext> b : walker.getCompRodBindings()); if ( b.isBound() ) overlapBindings.put(b, b.getName());; if ( dbSNPBinding != null && ! overlapBindings.keySet().contains(VCFConstants.DBSNP_KEY) ); overlapBindings.put(dbSNPBinding, VCFConstants.DBSNP_KEY); // add overlap detection with DBSNP by default. variantOverlapAnnotator = new VariantOverlapAnnotator(dbSNPBinding, overlapBindings, engine.getGenomeLocParser());; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1485#issuecomment-183559648:385,test,test,385,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1485#issuecomment-183559648,1,['test'],['test']
Testability,"@akiezun `CEUTrio.HiSeq.WGS.b37.NA12878.20.bam` should be renamed to include the interval it spans, so as not to imply that it contains all of chromosome 20. Perhaps it should also be shrunk further to cut down on unnecessary test suite runtime. Since BQSR is never run with `-L` I think it's defensible to add this smaller slice of the existing NA12878 bam so that we can run the test over an entire file, but it should definitely be in lfs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1745#issuecomment-212974541:226,test,test,226,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1745#issuecomment-212974541,2,['test'],['test']
Testability,"@akiezun a few minor comments. There's getting to be a bunch of duplicated code between the spark/non-spark tools and in the tests. I think it would be worth it to deduplicate the tools at least, maybe not worth doing for the tests though.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1773#issuecomment-215872350:125,test,tests,125,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1773#issuecomment-215872350,2,['test'],['tests']
Testability,"@akiezun back to you with a comment. <!-- Reviewable comment -K2OCrEDRCLfJof_Cdgp:-1160907455 -->. ---. Reviewed 2 of 2 files at r1.; Review status: all files reviewed at latest revision, 2 unresolved discussions. ---. <sup>**[src/main/java/org/broadinstitute/hellbender/engine/datasources/ReferenceAPISource.java, line 155 [r1]](https://reviewable.io:443/reviews/broadinstitute/gatk/1058#-K2OAVk5uR5BT7DB8ujU)** ([raw file](https://github.com/broadinstitute/gatk/blob/a5c03b9e93125bf1acd9e9969a81f236a128ee6d/src/main/java/org/broadinstitute/hellbender/engine/datasources/ReferenceAPISource.java#L155)):</sup>; Should this be a `UserException`? It seems like it's probably a bug in the calling code if it's going off the end of a contig, unless you think the likely path is that they've specified the wrong reference. In either case, I think the message should mention that fewer bases were retrieved than requested in addtion to displaying the interval. It might be worth making this a more specific exception subclass too, I can imagine potential situations where people would want to catch and handle this differently. . <!-- Reviewable comment -K2OAVk5uR5BT7DB8ujV:-2111080668 -->. ---. <sup>**[src/test/java/org/broadinstitute/hellbender/engine/datasources/ReferenceAPISourceUnitTest.java, line 170 [r1]](https://reviewable.io:443/reviews/broadinstitute/gatk/1058#-K2OCQKoj0hZv86WbYXu)** ([raw file](https://github.com/broadinstitute/gatk/blob/a5c03b9e93125bf1acd9e9969a81f236a128ee6d/src/test/java/org/broadinstitute/hellbender/engine/datasources/ReferenceAPISourceUnitTest.java#L170)):</sup>; It would be nice if this were more specific so we can be sure the test isn't passing accidentally due to a failed authentication or downed webserver. <!-- Reviewable comment -K2OCQKpe3Ja-0PPUKjV:775526476 -->. ---. Comments from the [review on Reviewable.io](https://reviewable.io:443/reviews/broadinstitute/gatk/1058). <!-- Sent from Reviewable.io -->",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1058#issuecomment-154172680:1204,test,test,1204,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1058#issuecomment-154172680,3,['test'],['test']
Testability,@akiezun fixed the tests,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1549#issuecomment-192506528:19,test,tests,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1549#issuecomment-192506528,1,['test'],['tests']
Testability,"@akiezun please review, I didn't add any tests because it's tricky to test `Main.main` due to the use of System.exit`",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1596#issuecomment-198469559:41,test,tests,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1596#issuecomment-198469559,2,['test'],"['test', 'tests']"
Testability,"@akiezun test failure with:. ```; org.broadinstitute.hellbender.exceptions.UserException$BadArgumentValue: A USER ERROR has occurred: Invalid command line: Argument disable_indel_quals has a bad value: false. GATK4 does not support BQSR on indels; ```. I think you have to change the default value. (Or better yet, delete the option if it it's only valid to set it to true)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1126#issuecomment-157188809:9,test,test,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1126#issuecomment-157188809,1,['test'],['test']
Testability,"@akiezun the main change to existing code is the updated argument passing in Picard integration tests. The only modifications to non-Picard files were added methods in MathUtils, as mentioned above, and removing unused imports.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/347#issuecomment-89317171:96,test,tests,96,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/347#issuecomment-89317171,1,['test'],['tests']
Testability,@akiezun using the same command lines from #1414 . I get different sorting with / without --sort_by_all_columns. ```; ./gatk-launch BaseRecalibrator -I src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam -O gatk4.tbl --knownSites src/test/resources/large/dbsnp_138.b37.20.21.vcf -R src/test/resources/large/human_g1k_v37.20.21.fasta; ```. ```; java -jar ~/Workspace/GenomeAnalysisTK.jar -T BaseRecalibrator -I src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam -o gatk3.tbl --knownSites src/test/resources/large/dbsnp_138.b37.20.21.vcf -R src/test/resources/large/human_g1k_v37.20.21.fasta --sort_by_all_columns; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1416#issuecomment-169454358:156,test,test,156,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1416#issuecomment-169454358,6,['test'],['test']
Testability,"@akiezun yes, version 7.3.0. The other thing I didn't mention is that AnySAMInputFormat will need to be changed to CRAMInputFormat for the test. (I opened https://github.com/HadoopGenomics/Hadoop-BAM/issues/35 to fix this properly.)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1160#issuecomment-158358290:139,test,test,139,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1160#issuecomment-158358290,1,['test'],['test']
Testability,@akiezun 👍 Lets wait for tests though just in case something horrible happens.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1781#issuecomment-215197050:25,test,tests,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1781#issuecomment-215197050,1,['test'],['tests']
Testability,"@akiezun, I tested the branch in my computer and now I can run the shadow jar. Thanks a lot, @gspowley.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1991#issuecomment-231978913:12,test,tested,12,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1991#issuecomment-231978913,1,['test'],['tested']
Testability,"@akiezun, thanks for the comments. I addressed the issues, and I'll implement the test as soon as possible.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1774#issuecomment-218828242:82,test,test,82,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1774#issuecomment-218828242,1,['test'],['test']
Testability,"@akiezun, would you please review? ; Since there are concerns about messing with the build script, and considering that this solution right now is just a temporary one, being able running the unit test on travis and on my machine seems enough.; Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1701#issuecomment-215542886:197,test,test,197,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1701#issuecomment-215542886,1,['test'],['test']
Testability,@apete Thanks a lot. I will rerun the tests in a bit then.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3970#issuecomment-351838513:38,test,tests,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3970#issuecomment-351838513,1,['test'],['tests']
Testability,"@apete Thanks for all the help, sorry it was such an ordeal. Running the tests locally takes quite a long time, so pushing a PR is really the best way to run them anyway.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3970#issuecomment-352451239:73,test,tests,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3970#issuecomment-352451239,1,['test'],['tests']
Testability,"@asmirnov239 @sooheelee Let's hold off on reviewing until the other PR (#4335) upon which this is rebased is merged. At that point, @mbabadi can rebase (it might also be helpful to split test files into their own commit, since there are a lot that have been changed) and then we can review. We can go ahead and start evaluations on this branch, though!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4396#issuecomment-365728666:187,test,test,187,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4396#issuecomment-365728666,1,['test'],['test']
Testability,"@asmirnov239 Evaluations can wait until they've been automated, but don't forget to test this change at some point.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4988#issuecomment-407141271:84,test,test,84,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4988#issuecomment-407141271,1,['test'],['test']
Testability,"@asmirnov239 I've borrowed the CopyNumberTestUtils class from #7889 into which you moved the method for detecting deltas in the doubles. I'm going to merge this PR once tests pass, so just be aware of this when rebasing your branch if you make any further changes. We might consider adding a simple test of the test method itself. I'll let you do it in your branch, or we can file an issue and tackle it after everything is merged.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7652#issuecomment-1165717972:169,test,tests,169,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7652#issuecomment-1165717972,3,['test'],"['test', 'tests']"
Testability,@asmirnov239 and Jack Fu are currently developing tests using Talkowski-SV truth that will ultimately cover #5633. Should be adapted to fit into whatever framework arises from #4630.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4123#issuecomment-459834130:50,test,tests,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4123#issuecomment-459834130,1,['test'],['tests']
Testability,"@bbimber - here some answers:. * The `LocusWalker` in the GATK4 framework provides the traversal over each locus, and provides the information for the reference (`ReferenceContext`) and the pileup (`AlignmentContext`). I guess that this is similar to a rod-walker in the previous framework if a `FeatureInput` is present (accessed by the `FeatureContext`); * The apply function params are never null, but they may be empty. The reference context could be tested if it is empty by using `hasBackingDataSource()`. Other contexts can be tested with other methods to check if they are empty.; * For auto-discovery of feature inputs, mark the field with `FeatureInput<>` for the type of feature that you want; if you require more than one, a list of `FeatureInput` can be provided. Then, the features for the feature class can be retrieved from the `FeatureContext` on the apply function.; * For argument exceptions, use the ones in `UserException` or `CommandLineProgramException`, depending on which one fits better on your use case... If you wanna check an example of a locus walker with features, see [`ExampleLocusWalker`](https://github.com/broadinstitute/gatk/blob/4ef87ca10c3b57af76d829995e532c279b17cff2/src/main/java/org/broadinstitute/hellbender/tools/examples/ExampleLocusWalker.java). I hope that it helps!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-337598527:455,test,tested,455,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-337598527,2,['test'],['tested']
Testability,"@bbimber @mlathara Here is a pretty good article for optimizing the GenomicsDBImport [https://gatk.broadinstitute.org/hc/en-us/articles/360056138571-GDBI-usage-and-performance-guidelines] There is some advice about handling many small contigs that may be useful. . To troubleshoot the GenomicsDBImport high memory issue my script have, I reran the script on chr1 to narrow down the source of the high memory issue. These are running on reblocked gvcfs. . 1. Without --bypass-feature-reader and -consolidate; 2. With --bypass-feature-reader; 3. With --consolidate without --bypass-feature-reader (This ended up on a node with 384gb.) The other ran on 256GB nodes. . Test 2 ran the fastest with the lowest memory requirements (Wall clock 76 hours); Test 1 ran slower and required more memory 40-50% of 256GB (Wall Clock 94 hours); Test 3 ran initially faster with less memory than test 1 but by batch 65 it was using 75% of 384 GB. This job has not finished and appears stuck on importing batch 65. So the consolidate option appears to have a memory leak or using just requiring too much memory. The -consolidate option was the culprit. So rerunning chr1-3 with just the --bypass-feature-reader option (test2) ran fine without lots of memory being used. Below is the time output from chr1. The output shows the Maximum resident set size (kbytes): **2630440**. Using GATK jar /share/pkg.7/gatk/4.2.6.1/install/gatk-4.2.6.1/gatk-package-4.2.6.1-local.jar defined in environment variable GATK_LOCAL_JAR; ```; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx200g -Xms16g -jar /share/pkg.7/gatk/4.2.6.1/install/gatk-4.2.6.1/gatk-package-4.2.6.1-local.jar GenomicsDBImport --sample-name-map sample_map.chr1 --genomicsdb-workspace-path genomicsDB.rb.bypass.time.chr1 --genomicsdb-shared-posixfs-optimizations True --tmp-dir tmp --bypass-feature-reader --L chr1 --batch-size 50 --reade",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7968#issuecomment-1252598687:665,Test,Test,665,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7968#issuecomment-1252598687,4,"['Test', 'test']","['Test', 'test']"
Testability,"@bbimber Good questions all. Whenever we do these ports we have to strike a balance between minimizing the changes and updating to GATK4 standards. Generally, though, we want the code to conform to GATK4. This PR is large and likely to require some iteration so I'd be ok with starting with just the minimal ""porting"" changes to keep things simple, and then doing a code hygiene pass at the end. The ""porting"" changes should include things like updated javadoc, GATK4-style command line arguments, updating of outdated GATK3 terminology such as ""ROD"", Utils.nonNull assertions, etc. The finals and curly braces can wait for a separate pass (we will want to do those in this PR though). If you're not sure what to include or not just ask. I like the idea of keeping the GATK3 tests working as we go along. We should make a clear distinction between the old and new tests though. Ideally the GATK3 tests would be in a separate commit that we can just delete at the end, but that can get unwieldy if the files in the commit need to change as we go along. Alternatively you could isolate them into a separate directory. They should either be disabled or made dependent on a test method (see the `@Test` annotation properties `enabled` and `dependsOn`) that is easily toggled so they can be run locally, but don't run on the CI server. Otherwise the CI server build will always fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:566,assert,assertions,566,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352,4,"['assert', 'test']","['assertions', 'tests']"
Testability,"@bbimber I appreciate the attempt to update the tests, but I think your previous version was much better (modulo use of the data provider).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7238#issuecomment-831449931:48,test,tests,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7238#issuecomment-831449931,1,['test'],['tests']
Testability,"@bbimber I believe we resolve it from jcenter. There were some issues around it because we removed jcenter resolution from our build at one point when it was slated to shut down. Testing didn't see any issue because it was being silently mirrored through our artifactory instance and we didn't realize that. Jcenter changed their plans from shutting down to going into indefinite read only mode, so we re-added it. . I think if you're seeing problems it's either because:; 1. You are building on a version of gatk which removed jcenter; 2. Your custom build doesn't resolve from jcenter; 3. We have a new issue I don't know about yet. . Can you rule out 1 and 2 before we start debugging 3? . In your build.gradle you should should see ` jcenter()` in your `repositories {}` block. It's very possible that we're relying on an outdated version and maybe we should update to a new one which isn't on the ill fated Jcenter only. @TedBrookings any thoughts about that? I think this is your dependency.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7839#issuecomment-1122757145:179,Test,Testing,179,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7839#issuecomment-1122757145,1,['Test'],['Testing']
Testability,"@bbimber I don't think `IntegrationTestSpec` has any provisions for this, and it has a number of other limitations around output files as well. We mostly only keep it around to make it easier to port GATK3 test - I'd recommend writing new tests using `ArgumentsBuilder` and `runCommandLine`, and checking results manually, perhaps by delegating to the static assert* methods in `IntegrationTestSpec`. Take a look at `HaplotypeCallerIntegrationTest` as an example. For the case of multiple outputs, create a temporary directory and specify that for the prefix input.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5446#issuecomment-441636281:206,test,test,206,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5446#issuecomment-441636281,3,"['assert', 'test']","['assert', 'test', 'tests']"
Testability,"@bbimber I have an updated version of this branch that contains the raw GATK3 sources as the first commit, but I don't want to clobber anything you may be in the process of pushing up, so I'll wait for you to tell me when to push it. One thing to note is that currently this branch doesn't compile (even without my commit). I just want to make sure github has all of your changes, since I know you had the old tests working with it. With my commit, the history looks like this:. ![image](https://user-images.githubusercontent.com/10062863/44674969-25280580-a9fd-11e8-94d2-c41c2d9be61e.png)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-416303132:410,test,tests,410,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-416303132,1,['test'],['tests']
Testability,"@bbimber I haven't heard anything from @vdauwera, but based on discussions with @droazen now that he is back, I think we're inclined to prefer to keep this as part of GATK. We can certainly work with you on making this less onerous than the last PR, which involved engine level changes. We will require tests that use data contained in the repo, though.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413526947:303,test,tests,303,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413526947,1,['test'],['tests']
Testability,@bbimber I just uploaded the the test files from GATK3 and a copy of the reference and DBSNP to the following bucket gs://variant-eval-test-data/. Let me know if you have any questions,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-362726181:33,test,test,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-362726181,2,['test'],"['test', 'test-data']"
Testability,@bbimber I think I uploaded them all though `/private/gatk-tools-private/src/test/resources/yri.trio.gatk_glftrio.intersection.annotated.filtered.chr1.vcf` doesn't exist in the gatk3 repo as named. I grabbed each of the versions that followed the naming convention for you though.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-366330322:77,test,test,77,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-366330322,1,['test'],['test']
Testability,"@bbimber I was hoping this could be reduced to a single new `File, PedigreeValidationType` constructor overload, and the new `File` getter (and without any changes to the existing subclasses). Its also not a perfect solution, but I'd prefer to minimize addition of any new methods that expose founderIDs or SampleDB, since we aspire to factor out the existing code that uses those from this class completely. As for the failed test, it looks like the tests timed out for some reason, hopefully transient, but it I'm guessing its unrelated.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7277#issuecomment-855914785:427,test,test,427,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7277#issuecomment-855914785,2,['test'],"['test', 'tests']"
Testability,@bbimber I'm not sure if you're able to see the Travis results but the tests here: https://travis-ci.com/broadinstitute/gatk/jobs/283620338 are failing. I reproduced them locally while running `GenotypeGVCFsIntegrationTest.testEntireVariant`.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-582245246:71,test,tests,71,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-582245246,2,['test'],"['testEntireVariant', 'tests']"
Testability,"@bbimber In general I agree that keeping the number of one-off test files to a minimum is good, but unlike the text files we're using here, VCF files have a documented file format, a tested parser, and are intended to be machine readable. So I think including the expected txt files in this case is dramatically better than hand-written parsing code.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7238#issuecomment-831480111:63,test,test,63,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7238#issuecomment-831480111,2,['test'],"['test', 'tested']"
Testability,@bbimber Thank you for finding and fixing this! Once you address the comments and add a unit test as I outlined above this should be ready to merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-577331771:93,test,test,93,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-577331771,1,['test'],['test']
Testability,"@bbimber Thank you for your comment. In response to 1 this is a minor oversight, you are welcome to submit a PR to change that default back if you think it is important.; As for 2, that was GATK3 logic (which I think was intending to reflect Rtable file formatting) to keep the names as they are. You are welcome to submit a PR changing that argument though there is reason to preserve continuity with GATK tool that users are used to if they are doing specific things with the DepthOfCoverage.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6623#issuecomment-640719106:196,log,logic,196,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6623#issuecomment-640719106,1,['log'],['logic']
Testability,@bbimber The test that failed just got fixed in master so you should be good to ignore it... it is @lbergelson PR into your code that you are patching so i don't know if he should approve this or not...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8871#issuecomment-2189743128:13,test,test,13,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8871#issuecomment-2189743128,1,['test'],['test']
Testability,"@bbimber This this looks pretty good now - I don't have any new substantive comments. We just need to get the other PRs in and the tests passing and this should be good to go. There is one outstanding thing that would be nice, but I'll leave it up to you as to whether you want to address it. `VariantStratifier` and it's subclasses still have `initialize` methods that take no arguments. As far as I can tell, this is unnecessary now that they are required to have a constructor that take a `VariantEvalEngine`. If you feel so inclined, the `initialize` content can be moved into the constructors, and the initialize method, and call to it, can be eliminated (BTW, the constructors in those classes should be moved to be after the variable declarations). Overall, though, I think this PR makes a pretty big improvement to the state of things. Thanks for doing it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-775474714:131,test,tests,131,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-775474714,1,['test'],['tests']
Testability,"@bbimber Unfortunately it's not so simple -- some of the GATK3 test data cannot be shared externally at all due to, eg., IRB restrictions. Someone will have to look at the test data in question to make sure that it can be shared. We'll update you once we've done this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-358032795:63,test,test,63,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-358032795,2,['test'],['test']
Testability,"@bbimber We believe that this should be fixed by https://github.com/broadinstitute/gatk/pull/7670, which will go out in the next GATK release. If you're able to test with that patch and give feedback on whether it resolves the error for you, that would be helpful!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7687#issuecomment-1048160591:161,test,test,161,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7687#issuecomment-1048160591,1,['test'],['test']
Testability,"@bbimber We just added full versions of the B37 and HG38 references to the repo a couple of days ago. You'll have to rebase this branch on current master to access them, but it might make it easier to port some of the GATK3 tests that use b37.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-430743842:224,test,tests,224,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-430743842,1,['test'],['tests']
Testability,"@bbimber Yes, most of those travis jobs are unique and do not overlap in terms of coverage. The unit and integration tests are each run in two separate jobs, one on Java 8 and one on Java 11, but the other jobs run python tools, cloud tests, WDL tests, etc. and do not overlap.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-827951442:117,test,tests,117,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-827951442,3,['test'],['tests']
Testability,"@bbimber question for you - what is the primary motivation for wanting to merge the scattered workspaces back into a single workspace here? I'm assuming the scatter is because you have a large enough dataset that you need multiple nodes to run the import in parallel. (side note: we're planning on enabling reading vcfs through native htslib in GenomicsDBImport which should drive down memory usage for cases that are able to take advantage of that route. This might make it more feasible to use `--max-intervals-to-import-in-parallel` for multiple threads on a single node ). If the large dataset is the primary reason, wouldn't you want the benefits of distributed processing on the query side as well? You mentioned in the previous thread that you saw the fact that a single workspace is a valid GenomicsDB workspace as a benefit...and that's certainly true - but if performance is the driving factor then it might be worth it to keep the workspace separate. @droazen Could you elaborate on what you envision we should do here? This approach should work as long as the same command line is used for each import with a different/unique interval list each time. Are you asking for a test case to be run just for sanity? Or add test cases to GATK? Or add a tool to do this...?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6620#issuecomment-635081015:1184,test,test,1184,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6620#issuecomment-635081015,2,['test'],['test']
Testability,"@bbimber, I have placed another version of consolidate_genomicsdb_array [here](https://github.com/GenomicsDB/GenomicsDB/releases/download/v1.4.3/consolidate_genomicsdb_array). This allows for batch-wise consolidation with the `--batch-size` or `-b` option. The tool also does better reuse of the consolidation buffers between reads, so might work a little better. Be aware that the total time to consolidate increases with the batch option and the final batches require almost as much memory as consolidating all the fragments at once. Please try consolidating any one GenomicsDB array to see how it functions as we are still working at making this scalable in a better way. This is just a draft version and if you can share some of the resulting logs, that will be very helpful. Please do let me know the total size of all the `__book_keeping.tdb.gz` files in your fragments. Just a back-of-envelope calculation, you probably need about 40 times that total size of memory to successfully consolidate.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7674#issuecomment-1081029205:747,log,logs,747,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7674#issuecomment-1081029205,1,['log'],['logs']
Testability,"@bbimber, your approach should mostly work, this is exactly what I am going to allow with the standalone tool, a new arg for `batch-wise consolidation`. The tool is also better optimized with memory allocations and you can specify the batch size to the tool for batch-wise consolidation which should clamp down the memory use. Still testing out the tool, hopefully I can get some version to you over the weekend or on Monday.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7674#issuecomment-1073040553:333,test,testing,333,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7674#issuecomment-1073040553,1,['test'],['testing']
Testability,"@bhanugandham @fleharty this issue touches upon our discussion of https://gatkforums.broadinstitute.org/gatk/discussion/24335/loh-detection-using-gatk4s-somatic-cnv-workflow. We might consider just a simple modification of the genotyping step (e.g., keeping all ROHs longer than a hard threshold) to start, which would probably cover the most common use cases with minimal effort. Can use 100% HCC1143 in tumor-only mode as an initial test, but it would be good to collect other examples.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3915#issuecomment-531833700:435,test,test,435,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3915#issuecomment-531833700,1,['test'],['test']
Testability,"@bhanugandham Can the user provide a runnable test case that reproduces this issue? Once we have that, we can debug.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6776#issuecomment-683941047:46,test,test,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6776#issuecomment-683941047,1,['test'],['test']
Testability,@bhanugandham Have people been having trouble installing java 8 recently? I just found out that you now need to log into an oracle account to download it which is gross and off putting.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6024#issuecomment-507804068:112,log,log,112,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6024#issuecomment-507804068,1,['log'],['log']
Testability,@bhanugandham No need to write a test (which is hard to do for someting like this). I just wanted you to run manually and make sure the output looked ok.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5567#issuecomment-454390396:33,test,test,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5567#issuecomment-454390396,1,['test'],['test']
Testability,@broadinstitute/gatk-sv-methods ready for review. Need to write some tests though.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5132#issuecomment-422530496:69,test,tests,69,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5132#issuecomment-422530496,1,['test'],['tests']
Testability,@bw2 Do you have a small file that reproduces this issue? We'll need a runnable test case that reproduces this in order to debug further.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7838#issuecomment-1147820902:80,test,test,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7838#issuecomment-1147820902,1,['test'],['test']
Testability,"@byoo Could you take the unfiltered vcf: `/gpfs/data/software/cromwell/log/cromwell-executions/Mutect2/0c2281d2-9d90-4ee3-88bb-f0bb015cdb7c/call-Filter/attempt-4/inputs/-356078842/Ameloblastoma_FFPE_P5-unfiltered.vcf.gz`, and restrict it to a small interval (at big as one chromosome and small as just the problematic site) surrounding the variant that causes the error? If the stderr isn't enough to identify the site approximately, you could run `gatk FilterMutectCalls -V unfiltered.vcf -O tmp.vcf` locally without any of the optional inputs and I believe tmp.vcf would be produced with every site up to but not including the problematic one.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5553#issuecomment-450606674:71,log,log,71,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5553#issuecomment-450606674,1,['log'],['log']
Testability,"@byoo Thanks, we will fix that one ASAP. By the way, we are doing a big refactoring of Mutect2 filtering, which won't change the outputs but will improve the internal software engineering so that we can write better unit tests to catch these sorts of things.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5563#issuecomment-452851947:221,test,tests,221,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5563#issuecomment-452851947,1,['test'],['tests']
Testability,@chadisaad Could you make your file test-unfiltered.vcf available?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6058#issuecomment-519134296:36,test,test-unfiltered,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6058#issuecomment-519134296,1,['test'],['test-unfiltered']
Testability,@chandrans Can you check to see why this is failing tests now?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4673#issuecomment-390752790:52,test,tests,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4673#issuecomment-390752790,1,['test'],['tests']
Testability,"@chandrans Can you please ask the user to test with the `4.0.0.0` (or `4.0.1.0`) release, as there were major performance improvements to the `HaplotypeCaller` just before the release.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3631#issuecomment-361988531:42,test,test,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3631#issuecomment-361988531,1,['test'],['test']
Testability,"@chandrans Hmn, I don't really know what's happening. We wouldn't expect gatk4 haplotype caller to be that much slower. . It looks like they're running beta2 which is kind of old as well. Can you ask them what exact version they're using?. Can you ask if they have the log (stdout + stderr) for the gatk4 non-spark run? I can't tell what pairhmm they're actually running with and the logs would help with that. . Can you also find out what sort of hardware they're running on? Specifically, is it an intel machine with support for AVX?. A good setting for` --nativePairHmmThreads` is probably 4-8, you won't see any improvement after that. I also noticed that they're setting -XX:+UseParallelGC -XX:ParallelGCThreads=32 for the gatk3. They would be better off setting it to 2-4 threads. Performance gets worse beyond that typically from what I've seen. They can set the same thing for gatk4 using`--javaOptions ' -XX:+UseParallelGC -XX:ParallelGCThreads=4'`. Their spark configuration looks wrong in a number of ways which is probably a big part of why they're not seeing any improvement. In general you want executors with ~4-8 cores and at least 4g of memory per core. I don't know how much memory their nodes have, and I don't know if they're running with autoscaling turned on, but I suspect they're only allocating 1 executor on 1 node and then it's thrashing memory because it's trying to run 32 threads at once. Spark tuning for haplotype caller is going to be complicated though and I don't know how to do it will yet, we will be revisiting it in the next quarter probably. They're also running withs spark 2.1.0, we currently require spark 2.0.2 which is an unfortunately specific version, we're planning on upgrading to spark 2.2.+ in the next quarter. . You should make it clear to them that the results will not be the same between 3, 4, and 4-spark yet and that 4 is in rapid state of flux and has known performance issues that we're planning on working soon. Even so though, that slowdow",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3631#issuecomment-332879964:269,log,log,269,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3631#issuecomment-332879964,2,['log'],"['log', 'logs']"
Testability,"@chandrans I don't have access to dsde-docs so I can't see the ticket/test files (we asked @vdauwera to give me access last week for a different issue, but I don't have it yet).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4525#issuecomment-377963524:70,test,test,70,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4525#issuecomment-377963524,1,['test'],['test']
Testability,"@chandrans I'm not sure if this is related or not, but I would love to get a test case from them. That's an unhelpful error message at the very least.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2116#issuecomment-410702793:77,test,test,77,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2116#issuecomment-410702793,1,['test'],['test']
Testability,"@chandrans Please ask the user to repeat the test, with the following adjustments:. * Run both GATK 3.7 and GATK 4.0.1.1 (latest release) on the same machine, one right after another, on chromosome 20 only (using `-L` in both cases), and ensure that there are no other expensive processes running on this machine during the tests. Run each version 3 times, and take the average of the results.; * Add `-pairHMM AVX_LOGLESS_CACHING` to both the GATK3 and GATK4 command lines, to guarantee that the native PairHMM will be used in both cases.; * Get rid of the `--native-pair-hmm-threads 32` in the GATK 4 command line. Too many threads can sometimes make performance worse by introducing too much contention.; * Check both the GATK3 and GATK4 output to ensure that the Intel inflater and deflater were used in both cases.; * Check both the GATK3 and GATK4 command lines to be sure they are equivalent (eg., if one is running with -ERC GVCF, the other one should as well).; * Compute wall-clock time by running the Unix `time` command, if the user is not already doing so (eg., `time ./gatk HaplotypeCaller....`",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4361#issuecomment-363583464:45,test,test,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4361#issuecomment-363583464,2,['test'],"['test', 'tests']"
Testability,@chandrans Someone will have to take a look in a profiler to see what's going on with these particular samples. Can you add a *runnable* test case that reproduces the issue here (and confirm yourself that you can reproduce it).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4512#issuecomment-371588108:137,test,test,137,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4512#issuecomment-371588108,1,['test'],['test']
Testability,"@chapmanb I forgot to say that with the fix I can run your test command successfully. Without the fix I was getting the same error that you got. If you want to try out the fix you will have to build Hadoop-BAM, see https://github.com/broadinstitute/gatk/wiki/Build-GATK-with-a-locally-built-htsjdk-or-Hadoop-BAM. When building GATK, do something like:. ```bash; ./gradlew clean installDist sparkJar -DhadoopBam.version=...; ```. For the record, here is the command I ran:; ```bash; ./gatk-launch HaplotypeCallerSpark -I hdfs:///user/$USER/debug-ref-name/gatkspark_refname.bam -R hdfs:///user/$USER/debug-ref-name/Homo_sapiens_assembly38.2bit -O hdfs:///user/$USER/debug-ref-name/out/NA24631-chr15_68578892_84670250-block.vcf.gz -pairHMM AVX_LOGLESS_CACHING -L regions.bed \; -- \; --sparkRunner SPARK --sparkMaster yarn-client --sparkSubmitCommand spark2-submit \; --driver-memory 4G \; --num-executors 30 \; --executor-cores 1 \; --executor-memory 4G \; --conf spark.dynamicAllocation.enabled=false; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3659#issuecomment-341184164:59,test,test,59,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3659#issuecomment-341184164,1,['test'],['test']
Testability,"@chapmanb thanks for providing a test case to reproduce this. I've been travelling and haven't had a chance to look at it yet, but I will soon.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3659#issuecomment-340014626:33,test,test,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3659#issuecomment-340014626,1,['test'],['test']
Testability,"@chutianwen Thanks for reporting this. I'm pretty sure the issue is with your hdfs paths. You say that you're not running on a cluster, which makes me suspect you also don't have hdfs configured. Let me know if that isn't the case and your files are on hdfs. Try using file paths instead of the hdfs ones you're using. If you checked out the git-lfs files then the following command should work if you're in the gatk directory. ```; /bin/gatk/gatk­launch \; ReadsPipelineSpark \; -O CEUTrio.HiSeq.WEx.b37.NA12892.readnamesort.bam.md.bqsr \; -I src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam \; -R src/test/resources/large/human_g1k_v37.20.21.2bit \; --knownSites src/test/resources/large/dbsnp_138.b37.20.21.vcf \; --shardedOutput true \; --emit_original_quals \; --duplicates_scoring_strategy SUM_OF_BASE_QUALITIES; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1876#issuecomment-224326591:548,test,test,548,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1876#issuecomment-224326591,3,['test'],['test']
Testability,"@cmnbroad - I am not concern about the methods, because they are perfectly configurable, and actually this issue is not that important for some of my projects (e.g., `ReadTools`), which does not use the base walker clases from GATK. Nevertheless, I guess that what @droazen is suggesting is quite important and I appreciate the interest for making better the downstream toolkits integration. Here, a real use case: I've just started to write a new toolkit that will use some walker classes from GATK (by now, `LocusWalker` or the `ReadSliderWalker` from #4682). With the current way of configuring the output, I will need to implement a layer for both walker classes (e.g., `MyLocusWalker` and `MyReadSliderWalker`) and use them in my implemented tools. In addition, I would like to bundle some tools from the GATK/Picard (`IndexFeatureFile `), but they would print inconsistent logs with the rest of my toolkits and they aren't overridable because the classes are final; thus, I would use a decorator over this tools to print the proper startup messages. After a while, I might implement a `VariantWalker`, which will require that I implement another layer (`MyVariantWalker`). Thus, I end up with a lot of naive classes implemented on top of the base walkers and wrappers around bundled GATK/Picard tools. This is very difficult to maintain, because if a change is done at the `CommandLineProgram` abstract class for the logging output (a new method, for example), I will need to update every naive class and wrapper if I bump the GATK version. In addition, extensions of my own toolkit (if any) would need to do the same, making the class-dependency tree so deep that it is difficult to follow (with GATK3, this problem was really driving me crazy when I tried to implement custom tools). On the other hand, there is another use case for the GATK itself: once barclay has a common class for CLP, GATK would be able to run directly Picard tools without the decorator; nevertheless, they will still n",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4101#issuecomment-382994646:879,log,logs,879,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4101#issuecomment-382994646,1,['log'],['logs']
Testability,"@cmnbroad - I can add more tests if there is available data for it, so it will be nice if you can figure out if the data can be made public. Now, the coverage for the tool is 74-75%, because there is no test for known indels; but the test outputs were generated with GATK3 (I can't remember, as I told you before, with which version). Should I close this PR and open a new one with the documentation and arguments with the current style of GATK4, and the tests that are now? I can also add the tests from the tutorial that @sooheelee has gave me, but they are kind of big (probably they should be added with lfs). Just let me know the approach that we should take here...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-364866520:27,test,tests,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-364866520,5,['test'],"['test', 'tests']"
Testability,"@cmnbroad - it is not enough for me to make it `@Hidden`. In my downstream toolkits , I don't want it to appear wherever command line is printed (headers, logs, etc), because I am not supporting custom configuration files. In the case that `Main` is not accounting for the configuration file and an user provide their own, then the command line might indicate wrongly that the configuration was set, but it wasn't. I really need a way to remove completely the argument. If someone print the help with hidden arguments, then they will misunderstand that the configuration can be overwrite, even more if they know the configuration system of GATK. The only solution for my use case is to being able to remove completely the argument, not just reducing visibility.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4474#issuecomment-371730828:155,log,logs,155,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4474#issuecomment-371730828,1,['log'],['logs']
Testability,"@cmnbroad - yes, missed one expected file after subsetting the data. tests passed. is seeing the status something i could have seen by myself? in travis i only see the projects I own, with no clear way to look up this unless i'm linked from the PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-432261666:69,test,tests,69,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-432261666,1,['test'],['tests']
Testability,"@cmnbroad . 1. We could write tests for some parts of the python package, e.g. those relating to I/O. The code also contains a number of stand-alone compiled theano functions that could be tested (e.g. forward-backward algorithm). Beyond that, most of the code juggle symbolic tensors that ultimately get compiled by theano into one giant _step function_. It is going to be hard to write surgical unit tests for such a code (and possibly unnecessary/wasteful). The ultimate requirement from the computational core is to (1) make correct inferences on simulated data, (2) pass certain sensitivity/specificity requirements on real data.; I vote for _not_ unit testing the python package (except for I/O), and to treat it as a black box with certain required specifications. The java-side integration tests can test most of the relevant cases. 2. Regarding logging, the scripts log both to console and optionally to a logfile at specified verbosity levels. At the moment, I am using the following formatter `%(asctime)s %(name)-12s %(levelname)-8s %(message)s`. We can easily change it to match GATK-style logs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3838#issuecomment-345778623:30,test,tests,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3838#issuecomment-345778623,10,"['log', 'test']","['log', 'logfile', 'logging', 'logs', 'test', 'tested', 'testing', 'tests']"
Testability,"@cmnbroad : first - would it be possible to kick off travis tests? i refactored this and dont seem to be able to do that. Second, yes, I was trying to reorder and condense the commits but clearly didnt work. I think the problem was trying to put your GATK3 commit first (which would seem to make sense). in any case, I just recreated this, putting a pristine GATK3 first, following a consolidated set of my commits with 1) the limited core changes, 2) the meat of the VariantEval port, and 3) A separate commit with a port of GATK3 VariantEvalIntegrationTest which is useful for validation but should not be merged. To your points:. 1) I substantially cut down the incoming large files, mostly by limiting the intervals of new large VCFs. 2) On the plugin: this was discussed above, and I initially also pointed out this should ultimately go into Barclay. You are actually the one who proposed staging it in GATK. I am not entirely sure I understand the reticence on plugins; however, my goal is to get VariantEval ported by touching as little of it as possible. This is already sucking up a ton of time. I flipped VariantEvalUtils to gather a list of classes from the appropriate package instead of a full-on plugin. That should satisfy that concern?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431913735:60,test,tests,60,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431913735,1,['test'],['tests']
Testability,"@cmnbroad : thanks for the reply. yes, obviously tests would need to be added/updated. there's no question it needs robust testing. . my main concern is that VariantEval is a fairly sprawling tool with all sorts of add-ons. The majority of the untouched code taken verbatim from GATK3 isnt going to pass muster based on the bar of our last PR without a lot of petty revision (and maybe some useful updates). There are certainly some code improvements one could make across VariantEval, but I'm just not that keen on combing through the whole thing if it can be avoided. . how about this: while tests need to be updated (as discussed above, they work on the GATK3 data, which isnt checked in), the code in this PR is functional. Would you be willing to review a couple classes, maybe VariantEval itself and a few ancillary classes to see what scope of work we're talking about?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413642544:49,test,tests,49,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413642544,3,['test'],"['testing', 'tests']"
Testability,"@cmnbroad @droazen Good morning - I'm writing to follow up again. I appreciate that this not GATK's main priority, but I'm at the point where I need to either unblock this or fork GATK and publish another artifact so we can move our projects forward. The crux of what I'm trying to achieve with these changes is for our VariantQC tool; however, I'm bumping into several situations where MultiVariantWalkers need to be able to determine the FeatureInput source of the variants. I recognize that this and my original PR #6973 has taken a non-trivial amount of @cmnbroad time, but we have basically been stalled with an otherwise approved PR since Feb 8. The PRs blocking that PR are this one and the related #7021. They both involve creating a way to connect VariantContext to FeatureInput - a capability that would benefit the GATK engine and I have been told by @cmnbroad you're interested in having. It seems like the primary problem associated with these changes is ensuring tests and VariantContext comparison code still works, since VariantContexts are going to tend to report a source. I dont know your internal conversations, so I'm guessing based on what's written in github. As I've said, I'd like to do whatever I can to get these changes into a form that takes as little of your effort as possible. . While this particular PR seems close, there is clearly some cleanup needed from what's there now, including code review from @lbergelson that no one ever fixed. Would it help if I put together #4571 and #7021 into a new branch where I also work through associated test changes and try to get this into one concise piece of code to review? Basically try to put everything together to be the minimal amount of work needed on your side? I havent heard anything one way or the other from GATK staff as to whether this would actually be helpful or not. Are there higher order design decisions that need to be considered that I'm not seeing? . I completely understand your time constraints - I'm ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4571#issuecomment-822691252:977,test,tests,977,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4571#issuecomment-822691252,1,['test'],['tests']
Testability,"@cmnbroad @lbergelson Looks like `SparkContextFactory.DEFAULT_TEST_PROPERTIES` is currently initialized statically at class-loading time, resulting in a call to `getGcsHadoopAdapterTestProperties()` even when we're not running the test suite.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3591#issuecomment-330902481:231,test,test,231,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3591#issuecomment-330902481,1,['test'],['test']
Testability,@cmnbroad @samuelklee Seems like there's at least one test failure on this branch: . ```; PythonEnvironmentIntegrationTest. testGATKPythonEnvironmentPackagePresent; java.lang.AssertionError: The installed version of r-backports does not match the 1.1.10 version that was requested. Check the build log to see the actual version that was resolved by conda.; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6955#issuecomment-726961872:54,test,test,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6955#issuecomment-726961872,4,"['Assert', 'log', 'test']","['AssertionError', 'log', 'test', 'testGATKPythonEnvironmentPackagePresent']"
Testability,"@cmnbroad After thinking about this I went ahead and created VariantEvalEngine. Doing this in one PR will simplify some of the sticking points around what is a final change vs. what it expected to be fixed later. With this change, the goal is to strip most logic from VariantEval into the engine. This engine can be constructed with a VariantEvalArgumentCollection, and any kind of GATKTool as the owner. I tried to minimize the amount of context the VariantEvalEngine needed to hang on to. This means all the child classes have visibility on the VariantEvalEngine, but are no longer directly exposed to either the walker class or the argument collection. . All the logic around gathering the arguments to form DrivingVariants is moved to a static method in VariantEvalEngine. . I also rebased and fixed conflicts.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-750428516:257,log,logic,257,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-750428516,2,['log'],['logic']
Testability,"@cmnbroad Ah, thanks for reminding me of that. When will Java 8 be removed from the test suite? Looks like the numerical differences are big enough for some values that further relaxing the delta allowed for matching the expected results doesn't really make sense. I just opened #8111 which just does a hacky runtime check of the Java version and checks against the appropriate set of expected results accordingly. Seems to work locally, but let's see how the tests shake out. I also went ahead and unpinned the Java 11 version there. Whenever we get rid of Java 8, we can get rid of the ""legacy"" set of of expected results as well. I'll file a reminder issue if that PR ends up getting merged. Again, @tmelman might want to keep tabs on all of this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8107#issuecomment-1331241135:84,test,test,84,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8107#issuecomment-1331241135,2,['test'],"['test', 'tests']"
Testability,@cmnbroad Back to you. Looks good. Much happier with this. Could you fix the typo and add a test case with no options just to make sure nothing weird happens.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/584#issuecomment-114236320:92,test,test,92,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/584#issuecomment-114236320,1,['test'],['test']
Testability,@cmnbroad Can this be closed as resolved? Are all the remaining issues with CRAM tests (like disabled tests) captured in separate tickets?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/590#issuecomment-157761427:81,test,tests,81,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/590#issuecomment-157761427,2,['test'],['tests']
Testability,@cmnbroad Can you please try your tests with this snapshot of GKL:. https://oss.sonatype.org/content/repositories/snapshots/com/intel/gkl/gkl/0.4.1-SNAPSHOT/. This fixes the GC issues in `IntelInflater` and `IntelDeflater` we discussed today.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2490#issuecomment-289518026:34,test,tests,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2490#issuecomment-289518026,1,['test'],['tests']
Testability,@cmnbroad Can you take a look at this branch with its test?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7063#issuecomment-771034031:54,test,test,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7063#issuecomment-771034031,1,['test'],['test']
Testability,"@cmnbroad Could you make this bug your top priority, if possible? This appears to be a rather serious issue with GATK4/htsjdk cram support. Depends on the merge of https://github.com/broadinstitute/gatk/pull/1670 for the `PrintReads` test case and test file, but this problem existed before that patch.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1673#issuecomment-203660996:234,test,test,234,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1673#issuecomment-203660996,2,['test'],['test']
Testability,@cmnbroad Could you update the tests that you think are most necessary and remove any commented out ones that are not functional as we discussed last week. Sorry for the long delay on this.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/871#issuecomment-153460553:31,test,tests,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/871#issuecomment-153460553,1,['test'],['tests']
Testability,@cmnbroad Filed an issue for the repeating of tests of the docker image (openjdk vs. oraclejdk is irrelevant on the docker tests). #2748,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2726#issuecomment-303595530:46,test,tests,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2726#issuecomment-303595530,2,['test'],['tests']
Testability,@cmnbroad Gross. If it was deliberate can we change the test to use whatever the new behavior is?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-296267831:56,test,test,56,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-296267831,1,['test'],['test']
Testability,"@cmnbroad Hope you had a good break. As you might have seen above, I refactored out VariantEvalEngine, which I think will address some of the problems, like passing the walker around, which you didnt like in the PR. . I might not have as good an eye over tests as you, but I believe the failures mostly relate to the change to set 'source' on the VCs. As you probably know, that means it's passed into the resulting VCF, and will change test expectations in some cases. You said someone at GATK was looking into that, but I would be happy to take a stab if your team has ideas on how to address this. If I'm missing test failures beyond that I can take a look.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-754015497:255,test,tests,255,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-754015497,3,['test'],"['test', 'tests']"
Testability,"@cmnbroad I [tried to convince you](https://github.com/broadinstitute/gatk/pull/5378#issuecomment-443382334) that a test on jimfs was better than an integration test, because it exercises the same code (from the parts we want to test, I assume we're not interested in testing GCS itself) but runs faster. Since you insist, I can certainly do the same as an actual integration test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014:116,test,test,116,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014,5,['test'],"['test', 'testing']"
Testability,"@cmnbroad I added the changes you suggested, could you take a look? . I added a set of methods to `PythonScriptExecutor` mirroring existing ones that return booleans. I tried to extract as much common code as possible. Also, because now the entry point in `ScriptExecutor` that return `ProcessOutput` does not process and throw any exceptions, I extracted that processing code and manually call it from `GermlineCNVCaller`. Let me know if you have a better idea on a better way to handle it. If that looks good to you, could you also suggest what unit tests you would like me to add?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6866#issuecomment-719058249:552,test,tests,552,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6866#issuecomment-719058249,1,['test'],['tests']
Testability,"@cmnbroad I addressed your comments, except for making a negative test case for GermlineCNVCaller - I added that to #6893 issue with an ongoing list of needed tests. Let me know if the changes look good to you.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6866#issuecomment-747633673:66,test,test,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6866#issuecomment-747633673,2,['test'],"['test', 'tests']"
Testability,@cmnbroad I am going to restart and see if it goes away. I am only bugging you about it since it is the python test. But my PR goes nowhere near that code.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4931#issuecomment-399570983:111,test,test,111,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4931#issuecomment-399570983,1,['test'],['test']
Testability,"@cmnbroad I called for volunteers on Slack to test out the new environment in #5026 on a Mac (since I don’t use one), but didn’t get any takers. I’m not sure if it’s a particular package causing the conflict, but I won’t be able to test on my end. In general, I don’t think conda can guarantee cross-platform environments. So we may have to do some further tweaking to the YML or have a separate (and hopefully equivalent) one for Macs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6786#issuecomment-692241551:46,test,test,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6786#issuecomment-692241551,2,['test'],['test']
Testability,"@cmnbroad I cleaned up some of the hashes and was able to create the conda environment locally. Can you try on your mac? We'll see if tests pass on Travis as well, then merge if all is good.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4061#issuecomment-355647907:134,test,tests,134,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4061#issuecomment-355647907,1,['test'],['tests']
Testability,"@cmnbroad I did a pass with a little cleanup. I think this is ready for review, but has a couple things I left the might help review:. 1) As noted above, the primary purpose here is to migrate to MultiVariantWalkerGroupedOnStart, and remove the redundant re-querying of comp alleles. This seems to work, but has the effect of altering behavior in some cases, described more above. In VariantEvalUtils.java I left some debugging code that illustrates the behavior difference that will occur. . 2) It is a fair question as to whether changing the behavior of what is or isnt considered an overlap is appropriate. For now I'm making changes as though it is, since it's sort of a fringe case and this is a beta tool, but it should be discussed. 3) There are ~6 tests with altered expectations, due to that change in detecting overlaps. I just checked in their updated expectations, since it helps illustrate how the iteration change would impact results",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-732478578:757,test,tests,757,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-732478578,1,['test'],['tests']
Testability,@cmnbroad I did some cleanup and added a few more tests. Anything else?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6262#issuecomment-558304744:50,test,tests,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6262#issuecomment-558304744,1,['test'],['tests']
Testability,"@cmnbroad I didn't add a test case here because it seemed like overkill, but I can do so if you think it's necessary.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4546#issuecomment-374743257:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4546#issuecomment-374743257,1,['test'],['test']
Testability,@cmnbroad I extracted a bunch of methods to RunTimeUtils and made it cleaner. I fixed a todo in CommandLineProgram that was related as well. It's hard to test these things because the tests sometimes but don't always the jar with a manifest so I didn't test most of the new methods. I can try to do something more clever if you think it's necessary though...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5537#issuecomment-449460839:154,test,test,154,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5537#issuecomment-449460839,3,['test'],"['test', 'tests']"
Testability,"@cmnbroad I have responded to your comments, most of those TODOs in the test files were leftover working ones that I forgot to remove. I have cleaned the tests up so hopefully it will be painless (relatively) to review.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3851#issuecomment-347921477:72,test,test,72,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3851#issuecomment-347921477,2,['test'],"['test', 'tests']"
Testability,"@cmnbroad I put in a test in GATK that should fail if the dependency is moved to Picard. So, you are 100% correct that these changes will need to go into Picard.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3250#issuecomment-316558645:21,test,test,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3250#issuecomment-316558645,1,['test'],['test']
Testability,"@cmnbroad I realized that this test doesn't use the .crai at all, and if I create a .bai it won't use that either. Perhaps it would be better to remove the index file all-together?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2174#issuecomment-248308401:31,test,test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2174#issuecomment-248308401,1,['test'],['test']
Testability,"@cmnbroad I refactored the training java wrapper into separate wrappers to write tensors (CNNVariantWriteTensors.java) and to train (CNNVariantTrain.java) I think this simplified the meaning/necessity of many of the arguments, which was unclear when all those tools were rolled together. . I'm working on a release-style integration test that chains all the tools together, like @droazen discussed a few meetings ago, but for this PR I think I will have to do something simpler. Because of some issues with the GSA5 environment and GPU, I still have to write in a Python2/3 agnostic way, which precludes the use of type hints. I would like to update, but I'm blocked by BITs in the short term.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4245#issuecomment-367449432:333,test,test,333,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4245#issuecomment-367449432,1,['test'],['test']
Testability,"@cmnbroad I responded to your comments, what do you want to about names? Do you think we should refactor the haplotype caller tests to run with all the types of I also bumped to a more stable looking version of native bindings while I was at it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3600#issuecomment-331546971:126,test,tests,126,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3600#issuecomment-331546971,1,['test'],['tests']
Testability,"@cmnbroad I see. The ""CI"" variable does seem brittle, especially since I'm not strictly sure where it is set. I think a somewhat safer place would be to add some global test flag to the docker image would be to add it to the run_unit_tests.sh script. That way we know it is getting triggered exactly before we run the tests in just the docker environment. Is there some way of detecting what conda environment is active outside of conda.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5819#issuecomment-474871354:169,test,test,169,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5819#issuecomment-474871354,2,['test'],"['test', 'tests']"
Testability,@cmnbroad I think Sam has reviewed the rest of this PR. Thank you for helping me get the argument part working! Assuming tests pass this is ready for a final review.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7996#issuecomment-1282892145:121,test,tests,121,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7996#issuecomment-1282892145,1,['test'],['tests']
Testability,"@cmnbroad I understand that I could have retained a bunch of single-use text files, but it seemed like the more permutations one adds, the less it makes sense to have a separate, very redundant, static text file to check each scenario. There's a ton of VariantContext-related tests that parse the output VCF to test some feature as opposed to checking in a bunch of VCF text files.... While I'll grant the 4th test case I added (where we pass chr 2) isnt especially compelling over just testing chr 1, one could argue more breadth is a good thing here. if you want clarity, pulling that VariantEval report parsing code into a method called extractUniqueContigsFromEvalReport(), or simply adding a comment line, supports this goal. Anyway, I'm checking in slightly clarified version of this now, simply to get tests running. If you respond to the above, maybe we go with that. In the interest of time, I'll stage and check in the version which restores the text files and goes that route.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7238#issuecomment-831459741:276,test,tests,276,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7238#issuecomment-831459741,5,['test'],"['test', 'testing', 'tests']"
Testability,"@cmnbroad I was going to actually fix the test data, but when I made the test data valid I started getting test failures. @droazen seemed like he preferred the quick and dirty solution, but maybe I communicated the state poorly to him.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3421#issuecomment-321351249:42,test,test,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3421#issuecomment-321351249,3,['test'],['test']
Testability,@cmnbroad I will write a test for this tomorrow.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5567#issuecomment-454252597:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5567#issuecomment-454252597,1,['test'],['test']
Testability,"@cmnbroad I'm testing the alternative of using `pythonw` instead of `python`. It works on Mac. If also works on Linux (Docker), isn't it an easier fix?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4087#issuecomment-356113814:14,test,testing,14,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4087#issuecomment-356113814,1,['test'],['testing']
Testability,"@cmnbroad I've implemented a compromise approach in `ReservoirDownsampler.consumeFinalizedItems()` that I think satisfies both of our concerns:. * If `consumeFinalizedItems()` is called after end of input has been signaled, it always clears state (including the end of input flag itself), regardless of whether there are any finalized items; * If `consumeFinalizedItems()` is called before end of input has been signaled, it returns an empty List and does not clear state, since in that case the downsampling process is still ongoing and we want to preserve pending items. I've also added tests to verify this new behavior. Let me know what you think.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5594#issuecomment-458679171:589,test,tests,589,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5594#issuecomment-458679171,1,['test'],['tests']
Testability,@cmnbroad Is there an issue on TestNg tracking that?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-296245720:31,Test,TestNg,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-296245720,1,['Test'],['TestNg']
Testability,"@cmnbroad It looks like this resolves the git-lfs quota issues, but apparently the M2 WDL tests are failing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3179#issuecomment-311404012:90,test,tests,90,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3179#issuecomment-311404012,1,['test'],['tests']
Testability,@cmnbroad It's in the docker tests.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6307#issuecomment-564596826:29,test,tests,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6307#issuecomment-564596826,1,['test'],['tests']
Testability,@cmnbroad Looks good but I noticed failing tests in VariantsSparkSinkUnitTest where you missed an F -> I,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6246#issuecomment-551159792:43,test,tests,43,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6246#issuecomment-551159792,1,['test'],['tests']
Testability,"@cmnbroad Looks good, just kill that file that snuck back in and assure me that the progress logger actually outputs messages and not some variant of `StringArray[10929123@asdfa]` :)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/612#issuecomment-126799547:93,log,logger,93,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/612#issuecomment-126799547,1,['log'],['logger']
Testability,@cmnbroad Merge when tests pass,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6804#issuecomment-689799104:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6804#issuecomment-689799104,1,['test'],['tests']
Testability,"@cmnbroad OK, I tracked down two issues:. - The CpG and repeat status are dictates by the sequence spanning where ReferenceContext thinks it starts. This value is difference in the MultiVariantWalker version than before (basically the version on master can be expanded). I need to think about this. I half-fixed this, which restores the indel -related tests back to their original values (i.e. we no longer change behavior).; ; - I think in some cases the MultiVariantWalker will miss overlapping comp variants upstream of the eval.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-747566966:352,test,tests,352,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-747566966,1,['test'],['tests']
Testability,"@cmnbroad OK, considerable progress here. I was able to adjust behavior such that only two tests have changed behavior from GATK4/master. I think this is now correct. One instance of changed behavior is the Snpeff/overlap one we discussed above. The second is the one where we now provide the full genome as REF, not the truncated genome. I think this difference is justified since the tool now requires a reference, and the prior version was arguably too lenient on validation of contigs. Anyway, this branch now also removes by debugging code and comments. I think it is ready for a review. To some other questions you had above:. 1) The HashMap<FeatureInput<VariantContext>, HashMap<String, Collection<VariantContext>>> can be wrapped in a class with just a couple of methods, so we don't have to manifest that long type all over the place. I realize that's non-optimal, but this isnt anything I introduced here. I would really like to keep this PR as limited as we can, and address some larger refactoring in a different PR, once we've migrated to MultiVariantWalkerGroupedOnStart. 2) I know this PR still in an interim state, but passing the VariantWalker in as an argument to the comp methods doesn't seem like a step forward to me. If we can't solve that problem completely in this PR (which is fine, I'm all for trying to contain this), are those changes necessary ? Perhaps that part should just wait for the next round. As noted above, I'd like to propose this as iterative, with a second PR coming soon. I did this b/c it moved us toward not needing to pass around the walker. It minimizes the code that has access to the walker (as opposed to setting it after creating the instance of the Evaluator, etc. Yes, it exposes it for two methods, but those classes no longer hang on to it. I would like to ultimately remove this entirely. 3) To re-iterate testEvalTrackWithoutGenotypesWithSampleFields: the input file, noGenotypes.vcf, has a header dictionary with the full set of contigs, and a",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-747619130:91,test,tests,91,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-747619130,1,['test'],['tests']
Testability,"@cmnbroad OK, finally got a clean test run.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-827756253:34,test,test,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-827756253,1,['test'],['test']
Testability,"@cmnbroad OK, new test added",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-827196883:18,test,test,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-827196883,1,['test'],['test']
Testability,"@cmnbroad OK, rebase + conflicts fixed. The changes in the Arguments looked pretty limited: just one File->GATKPath and another instance of File->Path. To move forward: I left some debugging code that makes it relatively easy to explore the behavior change. See: https://github.com/broadinstitute/gatk/pull/6973/files#diff-510f106f1226c4aaef8bf898603f9c124a60065d56d08c8f333b42443fedc68cR235. I left the code that did the original re-query for variants. It logs when the old/new set of variants isnt equal, which you can also put a breakpoint on. What's going to help you review this and/or discuss whether you think this is an acceptable difference?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-739047755:457,log,logs,457,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-739047755,1,['log'],['logs']
Testability,@cmnbroad Or maybe it's silly to bother with since we're moving all the logging to log4j anyway.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/603#issuecomment-122924448:72,log,logging,72,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/603#issuecomment-122924448,1,['log'],['logging']
Testability,"@cmnbroad Someone once actually fixed all the bam files so they were valid and we rejected it because people were afraid that the fixes were not going to maintain the test conditions properly. So my guess is no, we will never do #569.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3421#issuecomment-321351743:167,test,test,167,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3421#issuecomment-321351743,1,['test'],['test']
Testability,"@cmnbroad Sorry for the very long delay before reviewing this. I think this is a good solution. I think the test is a bit weird at the moment, but it's a weird thing to try and test. . 1: Could you make `setLoggingLevel` a static method in `Utils`, and give it a clear comment saying that it changes the global logging level (it does change the global logging level yes? Do I misunderstand what's happening? ) . 2: Could you then move the test to `UtilsUnitTest` run through all 4 levels of logging in the test, and then reset it to the initial state (if that's possible..) . Thanks for figuring this out and sorry for delay.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/603#issuecomment-122420930:108,test,test,108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/603#issuecomment-122420930,7,"['log', 'test']","['logging', 'test']"
Testability,"@cmnbroad Sorry to bug here, but I am wondering if it would be possible for someone to review. This is a limited change that basically consolidates some internal code in PedigreeAnnotation and exposes a couple protected getters. Tests are passing. Thanks in advance.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7277#issuecomment-853234849:229,Test,Tests,229,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7277#issuecomment-853234849,1,['Test'],['Tests']
Testability,@cmnbroad Thank you again! I responded/fixed all of your comments/review and will hopefully obtain some test data later this afternoon!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5762#issuecomment-474890328:104,test,test,104,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5762#issuecomment-474890328,1,['test'],['test']
Testability,"@cmnbroad Thank you for pointing out those build failures and even digging down to the apparent cause! I investigated and the issue wasn't inability to decompress gzip files (or at least wasn't only that), but XReadLines trims the lines by default and my code doesn't. The ""expected"" files have an extra tab at the end of some lines (the CHROM line for example) that this was picking up. What I've done is updated XReadLines so it can take Paths as input, so we get good matching behavior without having to duplicate code. While I was at it I also exposed XReadLines' ability to strip out comments, so assertEqualTextFiles didn't need to re-implement it anymore. Assuming Travis passes, this should be ready to review. I have the feeling we're getting close!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456919065:602,assert,assertEqualTextFiles,602,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456919065,1,['assert'],['assertEqualTextFiles']
Testability,"@cmnbroad Thank you so much for the reply. I don't have a small test case for you, but I can provide some other information.; It is RNA seq data and passes validation check (`java -jar picard.jar ValidateSamFile I=S3_2.unmapped.split.bam MODE=SUMMARY`).; BaseRecalibrator cmd:; `gatk BaseRecalibrator -R Homo_sapiens_assembly38.fasta -I S3_2.unmapped.split.bam --use-original-qualities -O S3_2.unmapped.recal_data.csv -known-sites Homo_sapiens_assembly38.dbsnp138.vcf -known-sites Mills_and_1000G_gold_standard.indels.hg38.vcf.gz --known-sites Homo_sapiens_assembly38.known_indels.vcf.gz`; ApplyBQSR cmd:; `gatk ApplyBQSR -R Homo_sapiens_assembly38.fasta -I S3_2.unmapped.split.bam -O S3_2.unmapped.aligned.duplicates_marked.recalibrated.bam -bqsr S3_2.unmapped.recal_data.csv --add-output-sam-program-record --use-original-qualities`; RecalTables in S3_2.unmapped.recal_data.csv are empty. Here is the screen dump of BaseRecalibrator and ApplyBQSR.; BaseRecalibrator; ```; Using GATK jar <XXX>/gatk-4.1.4.1-83-g031c407-SNAPSHOT/gatk-package-4.1.4.1-83-g031c407-SNAPSHOT-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar <XXX>/gatk-4.1.4.1-83-g031c407-SNAPSHOT/gatk-package-4.1.4.1-83-g031c407-SNAPSHOT-local.jar BaseRecalibrator -R Homo_sapiens_assembly38.fasta -I S3_2.unmapped.split.bam --use-original-qualities -O S3_2.unmapped.recal_data.csv -known-sites Homo_sapiens_assembly38.dbsnp138.vcf -known-sites Mills_and_1000G_gold_standard.indels.hg38.vcf.gz --known-sites Homo_sapiens_assembly38.known_indels.vcf.gz; 23:39:34.668 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:<XXX>/gatk-4.1.4.1-83-g031c407-SNAPSHOT/gatk-package-4.1.4.1-83-g031c407-SNAPSHOT-local.jar!/com/intel/gkl/native/libgkl_compression.so; Feb 26, 2020 11:39:34 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6242#issuecomment-592005237:64,test,test,64,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6242#issuecomment-592005237,1,['test'],['test']
Testability,@cmnbroad Thanks for restarting - we have clean tests now.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7238#issuecomment-831412250:48,test,tests,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7238#issuecomment-831412250,1,['test'],['tests']
Testability,@cmnbroad Thanks for the links. . The test as it existed before seems like a typo that happened to work due to coincidental weird behavior in testng. It's really confusing that `Arrays.asList(int[])` is `List<int[]>` and not `List<Integer>`,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2611#issuecomment-296283147:38,test,test,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2611#issuecomment-296283147,2,['test'],"['test', 'testng']"
Testability,"@cmnbroad The path to the c++ compiler can be specifically provided to theano by setting `theano.config.cxx` in python scripts, or by creating a `.theanorc` in the home directory, or by setting the environmental variable `THEANO_FLAGS=cxx=<path_to_g++>,...`. If a working c++ compiler exists and provided to theano, it is fair to assume that the graph _will_ compile. If the c++ compiler is not explicitly specified, theano will try to discover it. It first tries to execute `g++ -v` in the present environment and if it succeeds, it resolves the absolute path to the executable. On darwin, it further searches for `clang++` and on Win32, it looks for a working mingw gcc setup. We could _enforce_ the presence of a c++ compiler at the beginning of all python scripts and throw an exception and an informative message instead of numpy/python fallback. If we do so, the integration tests (and all gCNV CLI tools) will fail and will force the user to install a c++ compiler. In your opinion, is this fail-fast strategy a better approach, given that python fallback runs 2~3 orders of magnitude slower?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3912#issuecomment-350193484:881,test,tests,881,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3912#issuecomment-350193484,1,['test'],['tests']
Testability,"@cmnbroad There used to be, but I don't actually know for sure. I'm not sure how to figure it out either without just deleting R from the installation and running the test suite... I didn't know picard required R?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4209#issuecomment-359099269:167,test,test,167,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4209#issuecomment-359099269,1,['test'],['test']
Testability,"@cmnbroad We're seeing some weird Python failures in this branch (https://storage.googleapis.com/hellbender-test-logs/build_reports/master_32072.5/tests/test/index.html and https://storage.googleapis.com/hellbender-test-logs/build_reports/master_32072.5/tests/test/index.html). Example error:. ```; org.broadinstitute.hellbender.utils.python.PythonScriptExecutorException: A nack was received from the Python process (most likely caused by a raised exception caused by): nkm received. : Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/opt/miniconda/envs/gatk/lib/python3.6/site-packages/vqsr_cnn/vqsr_cnn/models.py"", line 26, in start_session_get_args_and_model; return args_and_model_from_semantics(semantics_json, weights_hd5, tensor_type); File ""/opt/miniconda/envs/gatk/lib/python3.6/site-packages/vqsr_cnn/vqsr_cnn/models.py"", line 33, in args_and_model_from_semantics; model = set_args_and_get_model_from_semantics(args, semantics_json, weights_hd5); File ""/opt/miniconda/envs/gatk/lib/python3.6/site-packages/vqsr_cnn/vqsr_cnn/models.py"", line 90, in set_args_and_get_model_from_semantics; model = load_model(weights_hd5, custom_objects=get_metric_dict(args.labels)); File ""/opt/miniconda/envs/gatk/lib/python3.6/site-packages/keras/engine/saving.py"", line 419, in load_model; model = _deserialize_model(f, custom_objects, compile); File ""/opt/miniconda/envs/gatk/lib/python3.6/site-packages/keras/engine/saving.py"", line 224, in _deserialize_model; model_config = json.loads(model_config.decode('utf-8')); AttributeError: 'str' object has no attribute 'decode'. 	at org.broadinstitute.hellbender.utils.python.StreamingPythonScriptExecutor.waitForAck(StreamingPythonScriptExecutor.java:222); 	at org.broadinstitute.hellbender.utils.python.StreamingPythonScriptExecutor.sendSynchronousCommand(StreamingPythonScriptExecutor.java:183); 	at org.broadinstitute.hellbender.tools.walkers.vqsr.CNNScoreVariants.initializePythonArgsAndModel(CNNScoreVariants.java:557); 	a",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6718#issuecomment-724836660:108,test,test-logs,108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6718#issuecomment-724836660,6,['test'],"['test', 'test-logs', 'tests']"
Testability,@cmnbroad We've merged the htsjdk changes! Could you refactor the progress logger by extending the new `AbstractProgressLogger`. Thanks and sorry for the delay.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/612#issuecomment-125967537:75,log,logger,75,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/612#issuecomment-125967537,1,['log'],['logger']
Testability,@cmnbroad Would you mind profiling `setHeaderStrict()` against `setHeader()` when you get a chance to determine whether the former is more costly than the latter? We've seen a spike in our test suite runtimes today and I want to rule this out as a potential cause. A simple loop that calls each method on each read in a bam + the unix time command should suffice.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1541#issuecomment-191873209:189,test,test,189,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1541#issuecomment-191873209,1,['test'],['test']
Testability,"@cmnbroad Yeah, the M2 failures went away in the most recent build, only to be replaced with the `XHMMSegmentCallerBaseIntegrationTest` transient failure :) . Since @mbabadi has a PR that fixes `XHMMSegmentCallerBaseIntegrationTest`, we can merge this into master, rebase that PR on top of it and merge, and then we should have passing tests again!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3179#issuecomment-311409797:336,test,tests,336,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3179#issuecomment-311409797,1,['test'],['tests']
Testability,@cmnbroad You're ok with this test being removed? Just wanted to double check before merging.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5537#issuecomment-451000856:30,test,test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5537#issuecomment-451000856,1,['test'],['test']
Testability,"@cmnbroad and @jonn-smith Thanks! It now says ""First-time contributors need a maintainer to approve running workflows"" - does something else need to be approved? I'm not actually a first-time GATK contributor, but I'm not sure how that logic is determined/enforced. I dont have merge privileges' either. @jonn-smith: good to virtually meet you. As I alluded to above, my goal is to extend funcotator to make a new output format that more or less takes the annotations and writes them as discrete INFO fields, rather than the concatenated string. This PR will hopefully largely unblock us. As this develops, do you have any interest in us trying to contribute features back into GATK, or should be just keep separate. There may also be a handful of more minor extensions as we use this more, such as adding a config option to include/exclude specific VCF INFO fields, rather than always transfer 100% of them (which appears to be behavior today, but I just reviewed briefly). Obviously these would be case-by-case, but I'm happy to try to push features back here if you have interest/time in reviewing them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8124#issuecomment-1353346614:236,log,logic,236,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8124#issuecomment-1353346614,1,['log'],['logic']
Testability,"@cmnbroad and @samuelklee : I am going to remove the test (``testNonStrictBAMWithSilentValidationStringency`) and if auto-tests pass, I am going to merge.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3203#issuecomment-314456914:53,test,test,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3203#issuecomment-314456914,3,['test'],"['test', 'testNonStrictBAMWithSilentValidationStringency', 'tests']"
Testability,"@cmnbroad apologies, I intended to upload the log from the same shard, the stderr is re-uploaded here. All shards of 4.0.6.0 failed, while all shards of 4.0.4.0 succeeded. . [gengvcferr.txt](https://github.com/broadinstitute/gatk/files/2207790/gengvcferr.txt)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5024#issuecomment-406119705:46,log,log,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5024#issuecomment-406119705,1,['log'],['log']
Testability,@cmnbroad back to you. If you can come up with a meaningful test for this it wouldn't be a bad thing as well.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/566#issuecomment-112518160:60,test,test,60,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/566#issuecomment-112518160,1,['test'],['test']
Testability,@cmnbroad can you clarify when you'd like to see the version number. When gatk runs it does print the version:. ```; /gatk-launch FlagStat --input ./src/test/resources/org/broadinstitute/hellbender/tools/valid.bam; ```. prints. ```; ... Version: Version:4.alpha.rc1-2-g29dfbf5-SNAPSHOT JdkDeflater; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1287#issuecomment-163744324:153,test,test,153,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1287#issuecomment-163744324,1,['test'],['test']
Testability,"@cmnbroad could the failing WDL test simply be due to some Spark configuration issue, rather than memory? Locally, for both 1) the WDL test within the Docker and 2) CreateReadCountPanelOfNormalsIntegrationTest using 17.0.3 without the Docker, I seem to hit the exception discussed here: https://stackoverflow.com/questions/72724816/running-unit-tests-with-spark-3-3-0-on-java-17-fails-with-illegalaccesserror-cl. Not sure why CreateReadCountPanelOfNormalsIntegrationTest seems to pass in the CI environments, but perhaps it'll be more obvious to you?. Just for context, note that this tool relies on the Spark MLlib implementation of PCA.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8035#issuecomment-1409180990:32,test,test,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8035#issuecomment-1409180990,3,['test'],"['test', 'tests-with-spark-']"
Testability,"@cmnbroad could you point me to the relevant tests so I can figure out the various resource files that I assume the tests use in their commands? I want to make sure I get you everything you need, as I may make you a new small reference, given the small data I have available right now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371499166:45,test,tests,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371499166,2,['test'],['tests']
Testability,"@cmnbroad finally got a clean test run. what do you think about the PRs? should i squash/rebase #7219 (or maybe you'd be OK doing that via github on approval)? with that done, i will then squash/rebase this PR?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-828093693:30,test,test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-828093693,1,['test'],['test']
Testability,"@cmnbroad hopefully a simple update, it compiles fine but we'll see if tests pass....",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3962#issuecomment-351552151:71,test,tests,71,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3962#issuecomment-351552151,1,['test'],['tests']
Testability,"@cmnbroad is correct, reducing parallelism from cram in a test run from 8 to 4 threads allowed the run to progress normally. ; Since there is a task to remove this adhoc parallelism for a spark alternative I guess that is the way to go from this point on. #6876. However that actually would not solve the mem consumption issues as spark to work effectively the memory would need to be scaled up if you really want to run in parallel, is that right?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7189#issuecomment-818754629:58,test,test,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7189#issuecomment-818754629,1,['test'],['test']
Testability,@cmnbroad it appears we have clean tests now?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-829791315:35,test,tests,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-829791315,1,['test'],['tests']
Testability,@cmnbroad just dropped the GATK3 tests and squashed. let's hope this is it!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440500843:33,test,tests,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440500843,1,['test'],['tests']
Testability,"@cmnbroad just to check one thing: are you expecting that #4571 is actually going to get resolved outside of this PR? based on it not having any action in the last year I figured that PR was dead and I'd need to deal with anything related to that here? I had been focusing on VariantEval, but I will look into these other tests",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-749802223:322,test,tests,322,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-749802223,1,['test'],['tests']
Testability,"@cmnbroad ok, I see the difference, coincidentally I used only Picard tools as a test.; Running PrintReads as you suggested definitely displays the right version; `Picard Version: 2.18.2`; Thank you",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4733#issuecomment-387087349:81,test,test,81,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4733#issuecomment-387087349,1,['test'],['test']
Testability,"@cmnbroad on a related note -- it might be worthwhile to setup the Docker to include a dynamic BLAS library and pass it to theano. I will test how it affects the performance. NumPy is usually either linked against MKL or OpenBLAS. If theano has no dynamic BLAS lib available to link the compiled graph against, it will fall back to NumPy for linalg ops. It is not too bad since the only cost is the c++/python communication overhead.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3912#issuecomment-350264808:138,test,test,138,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3912#issuecomment-350264808,1,['test'],['test']
Testability,"@cmnbroad one of the tests failed; however, it seems to just be a timeout:. https://api.travis-ci.org/v3/job/457478297/log.txt. are you able to restart them? again, I believe this addresses all concerns listed above except for the iteration (which will be addressed in the engine in a new PR), and the naming of CompRod and EvalRod classes. I'm fine changing these and associated outputs; however, I would appreciate suggestions on the best new names. CompInput, CompFeatureInput, CompSource, CompTrack, or something like that?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440333816:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440333816,2,"['log', 'test']","['log', 'tests']"
Testability,@cmnbroad please review (assuming there aren't any test failures that I missed in my local testing),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3421#issuecomment-321078016:51,test,test,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3421#issuecomment-321078016,2,['test'],"['test', 'testing']"
Testability,@cmnbroad rebased and reverted the dockerfile. Tests pass locally. I'm also running a test in the cloud to see the impact of environment variables on speedup.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5725#issuecomment-476752829:47,Test,Tests,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5725#issuecomment-476752829,2,"['Test', 'test']","['Tests', 'test']"
Testability,"@cmnbroad rebasing is done. To summarize changes since your last review:. - I backed out the earlier changes to FeatureInput/FeatureDataSource in favor of those from #7219 ; - I dont entirely know why this didnt hit before, but I made an update to VariantStratifiers to make tests pass. See: https://github.com/broadinstitute/gatk/pull/6973/commits/1569a909d3dc2301337e46441cc0cd969843c8d1. The gist is that we now instantiate those classes and pass VariantEvalEngine. Two of these classes had validation in their constructors, and could throw a CommandLineException if the tool was executed with bad arguments. This exception was getting caught and re-thrown as GATKException with the misleading message ""Problem making an instance of ...."". This proposal is to make a separate VariantStratifier.validateArgs() method, with a default no-op validation, and to call this only after instantiation. This was already exercised under the tests, such as testMultipleEvalTracksAlleleCountWithoutMerge(). VariantEval tests pass locally for me. With luck, tests will pass here.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-827805993:275,test,tests,275,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-827805993,5,['test'],"['testMultipleEvalTracksAlleleCountWithoutMerge', 'tests']"
Testability,"@cmnbroad sorry to pester but i'm hoping to keep momentum here. were there any issues with the PR except for improving the test (which is done)? Only one test failed, with a test compile error related to GencodeGtfCodecUnitTest (https://travis-ci.com/github/broadinstitute/gatk/jobs/501273207). Given all else passed this seems like a test artifact?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-827593892:123,test,test,123,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-827593892,4,['test'],['test']
Testability,@cmnbroad tests seem to be passing,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7041#issuecomment-784431044:10,test,tests,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7041#issuecomment-784431044,1,['test'],['tests']
Testability,"@cmnbroad thank you so much for looking into this carefully! I have pushed a fix for the issue. In addition to using an `ArrayList` in `XReadLines` (to speed up all callers), I also fixed `assertEqualTextFiles` to do a streaming comparison so it uses less memory (and might even run a bit faster).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462862138:189,assert,assertEqualTextFiles,189,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462862138,1,['assert'],['assertEqualTextFiles']
Testability,"@cmnbroad thanks for the additional info. Some more detail from my side in case others stumble upon the same problem... * My input file comes from gnomad (`gs://gnomad-public/release/2.0.2/vcf/genomes/gnomad.genomes.r2.0.2.sites.chr18.vcf.bgz`). I editied it only to turn chromosome ""18"" into ""chr18"". * bcftools handles the duplicate INFO correctly and it fixes it! In case someone find it useful this is the command I used to retain only the AF tag and discard missing values:. ```; bcftools annotate -O z -i 'INFO/AF > 0' -x ^INFO/AF gnomad.r2.0.2.biallelic.hg38.chr18.vcf.gz > gnomad.r2.0.2.simple.hg38.chr18.vcf.gz; ```. * Unrelated to this particular issue, `gatk GetPileupSummaries` (next command in my workflow) doesn't like tags with missing values, I get a NumberFormatException error (I think, I don't have the logs). Hence the option `INFO/AF > 0` in bcftools.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4252#issuecomment-365640704:822,log,logs,822,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4252#issuecomment-365640704,1,['log'],['logs']
Testability,@cmnbroad thanks for your review. I changed the default behavior to work around the issue and now the test is passing.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7739#issuecomment-1081159176:102,test,test,102,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7739#issuecomment-1081159176,1,['test'],['test']
Testability,"@cmnbroad yes, i saw the conflict and will get to that and rebase. regarding test expectation changes: in a couple instances the genome territory number changes quite a lot. this is because I needed to switch the genome from the chr20-21 version to the full thing, since the input VCF has variants from other contigs. The old test probably should not have worked (the reference genome was basically ignored then). The biggest changes are in testSelect1.expected.txt and testStandardIndelEval.expected.txt. These changes are generally related to comp overlaps, and I am pretty sure all similar to my example above. To state another way: the tool as-is builds a whitelist of sites, by first identifying any variant overlapping the driving variants (possibly limited by -L). If a multi-site variant overlaps one of those sites, it expands the ReferenceContext. This means if the original variant was a single-base variant at 1423282, but is it overlapped by a large indel starting at 1423281, then the reference context is expanded accordingly. The problem is that the tool as-is then iterates these expanded reference contexts, and asks for every variant in the Comp VCFs that overlaps (defined as starts within) these expanded intervals, not limiting itself to the Eval variants.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-736096877:77,test,test,77,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-736096877,3,['test'],"['test', 'testStandardIndelEval']"
Testability,"@cmnbroad yes, please change the dataflow tests too.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/419#issuecomment-112536828:42,test,tests,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/419#issuecomment-112536828,1,['test'],['tests']
Testability,"@cmnbroad yes, was literally just checking that in. I agree it's probably better to rethrow and preserve the stack than preserving the original class like my first commit did. Do you expect that so few of the travisci suites seem to actually run these integration tests? only three actually failed?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-827938856:264,test,tests,264,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-827938856,1,['test'],['tests']
Testability,"@cmnbroad yes, you're right. anyway, tests are now clean",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7238#issuecomment-831526305:37,test,tests,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7238#issuecomment-831526305,1,['test'],['tests']
Testability,"@cmnbroad you're right, I forgot to update the CNNVariantPipeline test with the new arguments. Should be fixed now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5042#issuecomment-411107905:66,test,test,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5042#issuecomment-411107905,1,['test'],['test']
Testability,"@cmnbroad, I opened a PR to fix `CountingReadFilter` and here I push two commits: one removing the complicated implementation and comming back to an independent `CountingVariantFilter`and the second with the tests. Can you review?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2195#issuecomment-273099363:208,test,tests,208,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2195#issuecomment-273099363,1,['test'],['tests']
Testability,"@cmnbroad, is 400MB (fasta, dictionary & index) too large for you?; It is possible for me to ~halve this but I have to construct artificial contigs. It is also possible to gz zip the fasta and the test would have to include a step to expand it out.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-373170450:197,test,test,197,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-373170450,1,['test'],['test']
Testability,"@cmnbroad, passing MIN_DP to the attributesToIgnore list still checks it! It's ignored only when I remove it inside assertAttributesEquals() method. Is this expected?. Also, I get similar double vs integer checks fail for END and DP. In case of SB, the comparator fails as two arrays toString() methods differ (I guess):. java.lang.AssertionError: Attribute SB expected [0,0,13,14] but found [0, 0, 13, 14]; Expected: 0,0,13,14; Actual: [0, 0, 13, 14]. Haven't reached to the ""longer than expected"" error you mentioned.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-295403243:116,assert,assertAttributesEquals,116,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-295403243,2,"['Assert', 'assert']","['AssertionError', 'assertAttributesEquals']"
Testability,"@cmnbroad, recommended variant argument collection classes are done. The GenomicsDB test was failing as the Tabix index files for the vcfs were not found. I have added them as git large files.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-294211502:84,test,test,84,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-294211502,1,['test'],['test']
Testability,"@cmnbroad, that's not wholly unreasonable, but i'd like to push back on a number of these points. . 1) First - would GATK consider simply letting us take over VariantEval and maintain as a GATK4-based tool in another repo? My understanding from GATK4 issues is that plan was to never migrate VariantEval (i think in favor of other picard/gatk QC tools). There is a bit of a conflict between keeping a lean core engine and having all these tools built off it. I would think there's an argument for keeping your core engine and the many tools built off it separated (GATK3 seemed to include some dead tools, for example). I appreciate we're the ones pushing this migration, but I hope on the other side you can appreciate the bar is pretty significant on our time. . 2) What new plugins are you talking about? VariantStratification and VariantEvaluator are part of GATK3's VariantEval? Yeah, I wrote a base PluginDescriptor class patterned on how ReadFilters work. It probably should exist in a more core position in code. While there's some good ideas in the argument-parsing/plugin code of GATK/Barlcay, frankly seems like much of it isnt fully developed yet, which is why I kept this separated at the moment. . 3) Be aware, the GATK3 tests depend on ~30GB of files. I dont know the limits of git lfs, but I did not currently have plans to check those in. I assumed I would convert these to use GATK4 chr20/21 data for a final commit, but felt there was a lot of value in using unaltered GATK3 data to confirm parity (and it was during the migration).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407123968:1235,test,tests,1235,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407123968,1,['test'],['tests']
Testability,"@cwhelan , I've made the changes requested and update the tests accordingly. Would you please take a look again? Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2320#issuecomment-274279076:58,test,tests,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2320#issuecomment-274279076,1,['test'],['tests']
Testability,"@cwhelan , addressed comments in 4 commits, with the first 3 addressing requested changes in main and the last dealing with integration test.; Please review again. Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2621#issuecomment-298986792:136,test,test,136,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2621#issuecomment-298986792,1,['test'],['test']
Testability,"@cwhelan , just updated with all runtime logged. Same location, with all runtime in one file.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1997#issuecomment-245436962:41,log,logged,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1997#issuecomment-245436962,1,['log'],['logged']
Testability,"@cwhelan , you are right! With forced repartition and ~40K files, [this](http://dataflow03.broadinstitute.org:8088/proxy/application_1464285223085_0196/stages/stage?id=2&attempt=0) shows results for one test run. Just noticed there's another function . ```; public JavaPairRDD<String,String> wholeTextFiles(String path, int minPartitions); ```. will give it a try tomorrow.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1877#issuecomment-224170497:203,test,test,203,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1877#issuecomment-224170497,1,['test'],['test']
Testability,"@cwhelan . Thanks for adding the docs!. However, I still have concerns about three classes: `StrandedInterval`, `EvidenceTargetLink` and `BreakpointEvidence`. They seem to be tightly coupled, through an un-documented concept called ""distal target"" (not sure if people with more experience would immediately understand what it is, but it took me some time to grasp). . * My understanding is that a target in the ""distal target"" is really an interval that is spanned and/or suggested by a piece of evidence. The ""distal"" part is for representing mate of discordant read pairs, and non primary locations of split reads. Hence the first mention to distal target, in base class `BreakpointEvidence`'s methods `hasDistalTargets()` and `getDistalTargets()`, should document it. * By studying the possible arrangements of innies, outties, lefies and righties, the `strand` information stored in `StrandedInterval` could be understood, where upstream/downstream of possible event breakpoint location has 1-1 correspondence with the ""target""'s strand. (BTW, the doc currently for the class refers to a method called ""getStrand()"" in BreakpointEvidence, which I couldn't find). But using the word ""strand"" is confusing I think, and some example in the documentation/example in `StrandedInterval` is needed.; * `StrandedInterval` at its current state, is almost synonymous to ""distal target region"". I am not advocating that this to be done in this PR, but the BreakpointEvidence is so central to the logic (except the kmer acrobatics) that we should document it better.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3628#issuecomment-333680006:1489,log,logic,1489,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3628#issuecomment-333680006,1,['log'],['logic']
Testability,"@cwhelan . Thanks for the comments! I've addressed them, and wrote a new unit test for the newly added utility.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1938#issuecomment-230084977:78,test,test,78,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1938#issuecomment-230084977,1,['test'],['test']
Testability,"@cwhelan . Thanks for the review!; I've incorporated most of your review suggestions, with the fowling exception because I need to think about what need to be done to make less review rounds. > This logic does more than detect variants, though.. it also annotates existing variants with the imprecise evidence. I'm also a little hesitant to move this all into its own separate class -- we really should be moving towards a model where we look at all three sources of evidence (breakpoint assemblies, imprecise evidence clusters, and coverage) simultaneously for eg @mwalker174 's work, and splitting handling of imprecise evidence into its own class seems like a step in the wrong direction. I agree. That's what I'm thinking about for complex inversions as well. So what about the following in this particular PR:. 1. move `StructuralVariationDiscoveryPipelineSpark.makeEvidenceLinkTree()` into `ImpreciseVariantDetector`;; 2. drop `ImpreciseVariantDetector.detectImpreciseVariantsAndAddReadAnnotations()` considering it really only delegates to `processEvidenceTargetLinks()`; 3. rename `ImpreciseVariantDetector` as `EvidenceTargetLinkHandler`; 4. reduce the work of `DiscoverVariantsFromContigAlignmentsSAMSpark.discoverVariantsAndWriteVCF()` into detecting only simple variants based on assemblies and name it `discoverSimpleVariants()`; 5. let `StructuralVariationDiscoveryPipelineSpark` call into `EvidenceTargetLinkHandler.processEvidenceTargetLinks()` to get back VariantContexts, then write VCF . `processEvidenceTargetLinks()` really does two things at the moment: annotation on breakpoints and call imprecise deletions; preferably, we should go the all-evidence-at-the-same-time approach and decouple the two but I am trying to not mess with it right now. If you agree, I'll implement it in a separate commit.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3934#issuecomment-357345426:199,log,logic,199,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3934#issuecomment-357345426,1,['log'],['logic']
Testability,@cwhelan I've addressed the comments in the separate commits. The commit messages decribes what was done in each push.. Please take another look. Thanks!. The tests are failing because of travis. They run successfully when manually rebooted but the status here don't get updated...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2567#issuecomment-292063168:159,test,tests,159,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2567#issuecomment-292063168,1,['test'],['tests']
Testability,"@cwhelan I've been thinking about this a lot more since we were looking at your integration test results. The PGT calls are inconsistent between HaplotypeCaller/CombineGVCFs and GenotypeGVCFs since we correct hom vars with 0|1 PGT in GGVCFs: https://github.com/broadinstitute/gatk/blob/851c8408d11042a402debf183d4fb69048a16c0e/src/main/java/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFsEngine.java#L436; but I like the idea that the PGT is still showing that there are two different haplotypes at that site. I'm leaning towards removing that ""cleanup"", which will mean a lot of hom var sites will have PGTs that are ""inconsistent"" as the user was complaining about, but I will add some documentation. What do you think?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6432#issuecomment-705613003:92,test,test,92,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6432#issuecomment-705613003,1,['test'],['test']
Testability,"@cwhelan I've having problems with the non-Spark JAR though:. ``` bash; $ gradle clean installDist; $ java -jar build/libs/gatk-4.pre-alpha-*-SNAPSHOT.jar; Exception in thread ""main"" java.lang.NoClassDefFoundError: org/apache/logging/log4j/LogManager; at org.broadinstitute.hellbender.cmdline.ClassFinder.<clinit>(ClassFinder.java:29); at org.broadinstitute.hellbender.Main.extractCommandLineProgram(Main.java:108); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:66); at org.broadinstitute.hellbender.Main.main(Main.java:86); Caused by: java.lang.ClassNotFoundException: org.apache.logging.log4j.LogManager; at java.net.URLClassLoader$1.run(URLClassLoader.java:372); at java.net.URLClassLoader$1.run(URLClassLoader.java:361); at java.security.AccessController.doPrivileged(Native Method); at java.net.URLClassLoader.findClass(URLClassLoader.java:360); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); ... 4 more; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1213#issuecomment-162013287:226,log,logging,226,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1213#issuecomment-162013287,4,"['Log', 'log']","['LogManager', 'logging']"
Testability,"@cwhelan Is there any chance you could run an SV pipeline with this change and see if it works? We added the classpath setting a long time ago for mysterious reasons, and have been afraid to remove it because we don't have good automated tests that run on the actual dataproc environment. I ran our very simple tests with this change but I want to check that it doesn't have negative consequences for your tools. I would really like to merge this if we can because it's recommended that you don't use this option unless you absolutely have to.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3946#issuecomment-357066967:238,test,tests,238,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3946#issuecomment-357066967,2,['test'],['tests']
Testability,"@cwhelan Ready to test. I copied the file to GCS, and forced-pushed an update to the branch to fix the scripts and to allow reading from GCS.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2527#issuecomment-289068970:18,test,test,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2527#issuecomment-289068970,1,['test'],['test']
Testability,@cwhelan This is a fix for the horrible spark problem in master. Would you mind testing it?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2618#issuecomment-296821445:80,test,testing,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2618#issuecomment-296821445,1,['test'],['testing']
Testability,@cwhelan my understanding is that this is blocked because tests won't pass until there's a GDB update -- yes?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-415848233:58,test,tests,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-415848233,1,['test'],['tests']
Testability,@cwhelan thanks for the clear up on the tests! Just updated with some fix and the output is now the same as master up to some formatting changes.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2258#issuecomment-261665373:40,test,tests,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2258#issuecomment-261665373,1,['test'],['tests']
Testability,@cwhelan updated by removing 3 commits that have the unused classes and functions. Also did the changes as you suggested. PR test cluster is failing but doesn't seem to be related to this PR and engine team is aware of this.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3427#issuecomment-322529717:125,test,test,125,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3427#issuecomment-322529717,1,['test'],['test']
Testability,@danking That's the idea. I may have closed this prematurely because I didn't wait for the pr with tests (#4000). You're supposed to be able to pick up the workspace directory and move it around no problem now.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3411#issuecomment-356033474:99,test,tests,99,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3411#issuecomment-356033474,1,['test'],['tests']
Testability,"@dantefff Thank you for making this fix. It seems like the recommended solution based on https://blogs.apache.org/logging/entry/log4j-2-11-released. . The downside is that it seems to nearly double the size of the packaged jars. I'm going to try to look into why that is exactly and see if there's a work around. The annoying thing is that we're not really aiming to actually produce a multi-version jar, we just want to incorporate the files that are version specific for the version we need. So I suspect there's probably a way to do this without including many additional versions of each file in the final jar. It might be a bit more involved. . It looks like travis started finally, but I also pushed a copy to lb_test_multijar to force it to build.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7339#issuecomment-876666468:114,log,logging,114,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7339#issuecomment-876666468,1,['log'],['logging']
Testability,"@dantefff Ugh... our tests don't catch this because it's a problem in the shading process where we package everything in our jar. Our tests don't use he shaded jar because it takes a long time to build and we've never seen an error like this before. Similarly, when I run my own tests locally I usually don't build the shaded jar for speed reasons and haven't noticed this error. I guess we need to run a test on the actual final artifact to catch this sort of problem. Thanks for finding a solution.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7338#issuecomment-876584599:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7338#issuecomment-876584599,4,['test'],"['test', 'tests']"
Testability,"@david-wb @popboy126 I'm having trouble reproducing the shutdown issue on our own cluster, I sometimes get the message `Shutdown hook called before final status was reported.` but the job status is SUCCEEDED. This happens if I run with the System.exit(0) or not. Could one of you test with this branch and let me know if it solves your issue? I think my cluster configuration must be different then yours in some way.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3400#issuecomment-319778125:280,test,test,280,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3400#issuecomment-319778125,1,['test'],['test']
Testability,@david-wb Thanks for the detailed information. That's really helpful. I don't think we're going to be able to get to this for the next few weeks since we're pretty swamped with work for our beta release. Hopefully it's not blocking you since it seems like the output of the tools is correct. We'll get back to you when we have a proposed PR for a fix that you can test.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2666#issuecomment-300306287:364,test,test,364,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2666#issuecomment-300306287,1,['test'],['test']
Testability,@davidaadams updated with a test as well as some new convinience test methods (which themselves don't yet have tests...),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1044#issuecomment-150667485:28,test,test,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1044#issuecomment-150667485,3,['test'],"['test', 'tests']"
Testability,"@davidadamsphd I've pushed a new version that properly tests the case of a `PCollection` with a mix of different `GATKRead` implementations. I've also verified in a debugger that the new version is actually invoking the `GATKReadCoder` properly. Since there are some interesting questions raised about the need to call `setCoder()` manually on our transforms, I'd like to request a re-review to get your thoughts.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/642#issuecomment-121021847:55,test,tests,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/642#issuecomment-121021847,1,['test'],['tests']
Testability,"@davidadamsphd Looks good. Just two very minor comments. I didn't actually tweak the shard size and run it to test, did you try it? . Feel free to merge once you're ready.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/757#issuecomment-125369727:110,test,test,110,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/757#issuecomment-125369727,1,['test'],['test']
Testability,@davidadamsphd Please review ( assuming tests pass...),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/582#issuecomment-113638709:40,test,tests,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/582#issuecomment-113638709,1,['test'],['tests']
Testability,"@davidadamsphd Sure, here is a quick guide to the code:. -`BaseRecalibratorSpark` is the standalone BQSR tool, and calls into the `BaseRecalibratorSparkFn` (which is also called from `ReadsPipelineSpark`). -`ApplyBQSRSpark` is the standalone ApplyBQSR tool, and calls into the `ApplyBQSRSparkFn` (also called from `ReadsPipelineSpark`). -Integration tests for the above are in `BaseRecalibratorSparkIntegrationTest` and `ApplyBQSRSparkIntegrationTest`. -Almost all other changes in the branch are related to the BQSR engine refactoring, which I summarize below:; - We pulled out the guts of the walker `BaseRecalibrator` tool, combined it with all of the code from the former `RecalibrationEngine` class (now deleted) to make a new `BaseRecalibrationEngine` class under `utils/recalibration`.; - We stripped out all copies of the code in `BaseRecalibrationEngine` from the walker, dataflow, and spark versions of BQSR, and modified them to call into `BaseRecalibrationEngine`.; - We moved all auxiliary classes needed by the `BaseRecalibrationEngine` (eg., the covariates, etc.) into `utils/recalibration`.; - We refactored the argument collections. Now there is a single shared `RecalibrationArgumentCollection` that contains **only** the parameters for the `BaseRecalibrationEngine` itself, and this argument collection is exposed by all 3 versions of the tool. Input/output arguments have been removed from this argument collection and put into the individual implementations of BQSR, since they vary between the walker, dataflow, and spark versions of the tool. This eliminates awkward problems such as having both a `knownSites` argument AND a `BQSRKnownVariants` exposed at the same time, with only 1 of them usable for a given version of a tool. The dataflow-only `BaseRecalibrationArgumentCollection` has been deleted completely as no longer needed.; - We tweaked the names of some tool arguments to enforce consistency between the 3 versions of the tool as well as the rest of hellbender (eg.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/911#issuecomment-142340073:350,test,tests,350,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/911#issuecomment-142340073,1,['test'],['tests']
Testability,"@davidadamsphd passing through would work, but it's going to take some work. And if we have to do this for every single object that may be different between Spark and Dataflow, we may have more interface-redefining ahead of us. There may be another way. Perhaps we can use the name of the ""referenceset"" to distinguish the cases, as ReferenceDataflowSource has started doing. It's already the case that if you're using RefAPI, your reference name is going to be gg://reference/_some_id_. This is easy to distinguish from e.g. a Hadoop DFS path. We could use a similar mechanism for the mocks: perhaps have a special case in ReferenceDataflowSource that if the referenceset name is ""mock"", then it returns the static ReferenceDataflowSource.mockInstance member (that the test would then have to set up, naturally, just like it calls setInstance today). This is closer to what @tomwhite wrote, and may satisfy all of the goals of point (1). What do you both think?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/804#issuecomment-130905343:586,mock,mocks,586,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/804#issuecomment-130905343,4,"['mock', 'test']","['mock', 'mockInstance', 'mocks', 'test']"
Testability,@davidadamsphd please send me a testcase,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1414#issuecomment-169403974:32,test,testcase,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1414#issuecomment-169403974,1,['test'],['testcase']
Testability,"@davidadamsphd, @lbergelson, and myself met for an hour or two just now to discuss this issue, and after reviewing all the options I think we were convinced by the following argument:. The `SAMRecord` class currently allows its header to be set to null, so if there are cases where the class won't function properly or can enter into an inconsistent state when a header is not present these should be treated as bugs and patched, and we should add unit tests to htsjdk to prove that headerless `SAMRecords` function properly. Then in hellbender we can freely use headerless `SAMRecords` everywhere, only restoring the header to the record when writing out the final bam (since our bam writers do require that a header be present in the records, I believe). . I've created https://github.com/broadinstitute/hellbender/issues/903 to make the necessary changes in htsjdk, and assigned it to @cmnbroad. He said he could get to it early next week. What do you guys think of this approach to the problem?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/900#issuecomment-141218134:453,test,tests,453,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/900#issuecomment-141218134,1,['test'],['tests']
Testability,"@davidadamsphd, I've followed your suggestion and removed the serializer from the registrator until we've properly addressed #900. I've added a unit test for the serializer (just for the serializer itself, since having a different registrator is problematic given we have a shared spark context for all tests). As a check I ran the Spark mark duplicates code with this change and the tests passed. I've also sorted a large BAM with #901 and this change and it worked well. @jean-philippe-martin, definitely! The serialization code should carry over to dataflow coders. @lbergelson, yes, we absolutely want to scrutinize all the types that go through the shuffle to make sure they are reasonably compact.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/899#issuecomment-141050487:149,test,test,149,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/899#issuecomment-141050487,3,['test'],"['test', 'tests']"
Testability,"@davidbenjamin & @ldgauthier Sorry for commenting on a closed/merged PR but I wasn't sure where else to take the discussion. If there's a more appropriate place please redirect me!. First off, this is very cool and I'm so glad to see this making it's way into HC/M2! It's super helpful for functional annotation/clinical interpretation. Thanks for working on this!. I had two thoughts which maybe belong as separate issues, but I figured I'd raise them here first and see what you thought:. 1. It would actually be useful to be able to combine this behavior with GVCF mode in some cases. I understand all the caveats about merging and joint-genotyping when this has been done, but there are use cases for single-sample calling where both GCVF and MNP mode combined would be useful. E.g. in a clinical setting it's very useful to have the GVCF with the reference blocks, and also call MNPs as MNPs. There would be no merging in this case. Any chance this could be allowed, perhaps with a warning or requirement that `--unsafe` be on?; 2. IIRC RBP would also phase combinations of `indel-SNP` and `indel-indel` in addition to `SNP-SNP`. I'm curious how hard it would be to apply the same grouping logic across indels as well? I tried to read the code in the PR, but honestly I don't think I understand the ramifications of including indels sufficiently well. Would there be any conceptual objections or road-blocks to doing this?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4650#issuecomment-396290602:1195,log,logic,1195,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4650#issuecomment-396290602,1,['log'],['logic']
Testability,"@davidbenjamin : my read of the code is that yes, we would need to alter traversal. It is worth pointing out that GenotypeGVCFs already supports the ""--includeNonVariantSites"" argument, which is similar. The difference between what I propose and --includeNonVariantSites is that this new option would only output a site if present in the provided whitelist file. . I briefly looked at the guts of traversal - my guess is that we could do one of two things: a) make GenotypeGVCFs use some kind of MultiVariantWalker logic (not impossible, but more invasive), or b) traverse every site, but only output the site if non-variant or if present in the whitelist FeatureInput. The latter breaks some of the benefits of this over --includeNonVariantSites; however, at least it's not writing the output for most. If you are willing to look at this great, though I'm also happy to take a stab at it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6239#issuecomment-552531250:515,log,logic,515,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6239#issuecomment-552531250,1,['log'],['logic']
Testability,@davidbenjamin ; Perhaps some random seed number is hostname architecture sensitive? are native libraries involved? If this is using spark perhaps the test becomes non-deterministic?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1320#issuecomment-163340555:151,test,test,151,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1320#issuecomment-163340555,1,['test'],['test']
Testability,"@davidbenjamin ; The code looks great, can you add some tests. Perhaps add something that tests when the variant context is outside the read as well. Some of the difficulties we are having now may have been prevented had we originally put in tests.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6355#issuecomment-571827627:56,test,tests,56,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6355#issuecomment-571827627,3,['test'],['tests']
Testability,"@davidbenjamin ; This will make the WDL default to producing a MAF from Funcotator instead of a VCF. There is no flag to switch between the two, so if you know of people that still want VCF output, please speak up now... Can you review the WDL and autotest-WDL changes? This has been tested in FireCloud and looks good (minus an issue that I have already filed), though I had to manually review. The Method configuration in FireCloud still uses the GATK jar override for this. Just in case you wanted to run it. Otherwise, we should blank out that parameter. As a reminder, I tested:; - mutect2.wdl: manually on local backend and FireCloud; - mutect2_nio.wdl: manually on FireCloud. Please review both WDL files. @jonn-smith Could you review the rest? I.e. the bug fixes. Apologies that I did not split these into two PRs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4941#issuecomment-402846788:284,test,tested,284,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4941#issuecomment-402846788,2,['test'],['tested']
Testability,@davidbenjamin @droazen Though the automated tests will now catch this (as of this PR).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5121#issuecomment-413612426:45,test,tests,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5121#issuecomment-413612426,1,['test'],['tests']
Testability,"@davidbenjamin @droazen unfortunately the new PON does not make up for the precision loss introduced in v4.1.9.0.; In v4.4.0.0 we get just 2 fewer FP SNVs in our performance evaluation, compared to the old PON.; Benchmarking results in WES tumor-normal mode, HCC1395 benchmark, and:. - v4.1.8.1 (last release with high SNV precision), v4.1.9.0 (first release affected by precision drop), v4.4.0.0 (current release); - oldPON: 1000g_pon.hg38.vcf.gz, newPON: mutect2-hg38-pon.vcf.gz; ![FD_TN_4181_FD_TN_4181_oldPON_FD_TN_4181_newPON_FD_TN_4190_FD_TN_4190_oldPON_FD_TN_4190_newPON_FD_TN_4400_FD_TN_4400_oldPON_FD_TN_4400_newPON](https://user-images.githubusercontent.com/15612230/236126940-9fc26627-260a-43c2-b409-69fbcec6ad47.png). Any chance to get this issue fixed? With Mutect3 not being available and v4.1.8.1 being affected by the log4j vulnerability, it is quite regrettable to be stuck with inferior precision. Extended methods, code, and data to reproduce the issue are here: ; [https://github.com/ddrichel/Mutect2_calling_performance_bug](https://github.com/ddrichel/Mutect2_calling_performance_bug)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7921#issuecomment-1534177043:212,Benchmark,Benchmarking,212,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7921#issuecomment-1534177043,2,"['Benchmark', 'benchmark']","['Benchmarking', 'benchmark']"
Testability,"@davidbenjamin @jonn-smith I have pushed the latest version of the code. Most of the changes since this was last shown are adding checks to about every level of the code for infinite loops (several places in the dangling end recovery code, and several places the new BestHaplotypeFinder). Additionally tests have been updated to capture these cases as well as several of the changes to functionality (no longer forcing reference start kmer to have a junction tree, limiting the cases where we actually attempt to follow an unsupported reference path when constructing a haplotype, reintroducing reference path weight to the calculation, etc...).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6034#issuecomment-520991019:302,test,tests,302,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6034#issuecomment-520991019,1,['test'],['tests']
Testability,@davidbenjamin @jonn-smith The test failure is a false alarm. Please review as if the tests were passing.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4941#issuecomment-402846895:31,test,test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4941#issuecomment-402846895,2,['test'],"['test', 'tests']"
Testability,@davidbenjamin An easy one for you. I think you can ignore failing cloud tests for the moment.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4149#issuecomment-358059202:73,test,tests,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4149#issuecomment-358059202,1,['test'],['tests']
Testability,@davidbenjamin Are you sure that your code is clocking in as faster than the previous incarnation? I noticed you did away with some of the allele computation caching which i could believe didn't matter but I've also noticed that the Carrot tests show your eval runtime for each of the 3 samples we test taking longer than the eval (which is from GATK nightly). Its not a huge slowdown but its also not expected right?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1534884545:240,test,tests,240,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1534884545,2,['test'],"['test', 'tests']"
Testability,"@davidbenjamin As discussed in person, it's my hope that the `AssemblyRegionWalker` changes in https://github.com/broadinstitute/gatk/commit/1ef09b3ca265209e0777c77a8519da74480908ce (which have now been merged into master!) will address `Mutect2` memory usage, and make these somewhat confusing new downsampling arguments unnecessary. That patch reduces the number of reads stored in memory at once by the engine by roughly an order of magnitude without doing any extra downsampling at all. I suggest that we do an evaluation to test whether this really resolves the issues you encountered. `Mutect2` is already hooked up to the new, lower-memory traversal code in the latest gatk/master, so all you have to do is re-run your benchmarking test. I'd suggest that you:. 1. Run with default settings in the latest master, and see if that alone does the trick!. 2. If not, try turning up the existing downsampling a bit. Eg., run with `--maxReadsPerAlignmentStart 10` instead of the default of 50. 3. If that still doesn't resolve the problem, we can revisit this PR and consider a simplified version of the downsampling args here for merge.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-325073233:529,test,test,529,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-325073233,3,"['benchmark', 'test']","['benchmarking', 'test']"
Testability,@davidbenjamin Back to you. Now the code is very small indeed. Perhaps its worth writing a test of this code however....,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6661#issuecomment-669392145:91,test,test,91,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6661#issuecomment-669392145,1,['test'],['test']
Testability,@davidbenjamin Can I get a review on this? I'm not quite sure how to go about testing this (since i think the only reason it appeared in the first place was because it was a very complicated site that was forcing some edges to be filtered to satisfy the variants per graph limit (but non-deterministically).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7851#issuecomment-1130024159:78,test,testing,78,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7851#issuecomment-1130024159,1,['test'],['testing']
Testability,@davidbenjamin Can we get a regression test for this?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6908#issuecomment-715578503:39,test,test,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6908#issuecomment-715578503,1,['test'],['test']
Testability,@davidbenjamin Can you add a test to prove that this fixes https://github.com/broadinstitute/gatk/issues/6744 ?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6871#issuecomment-705655153:29,test,test,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6871#issuecomment-705655153,1,['test'],['test']
Testability,@davidbenjamin Can you craft a simple unit test for these annotations to make sure this stays fixed?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2239#issuecomment-257574869:43,test,test,43,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2239#issuecomment-257574869,1,['test'],['test']
Testability,"@davidbenjamin Can you implement a simple integration test for this arg, to ensure it doesn't break again?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4128#issuecomment-357045030:54,test,test,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4128#issuecomment-357045030,1,['test'],['test']
Testability,@davidbenjamin Can you look at the test? I didn't want to check in a file with the old erroneous behavior so its hard to demonstrate what this fixed but i tried to make it clear in the comments.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7740#issuecomment-1082335904:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7740#issuecomment-1082335904,1,['test'],['test']
Testability,@davidbenjamin Can you make a test for this?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3636#issuecomment-333833919:30,test,test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3636#issuecomment-333833919,1,['test'],['test']
Testability,@davidbenjamin Can you run a quick test to make sure this works properly?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5872#issuecomment-481382172:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5872#issuecomment-481382172,1,['test'],['test']
Testability,"@davidbenjamin Can you tell me whether this is a straight-up port of the GATK3 version of this code, or whether you've made any changes in the process of porting?. I will test out this change, in combination with a change from @samuelklee / @ronlevine, in a branch in protected, and craft passing integration tests there before merging this here in public.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2710#issuecomment-301086407:171,test,test,171,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2710#issuecomment-301086407,2,['test'],"['test', 'tests']"
Testability,@davidbenjamin Can you tell me whether you were running with or without an interval list in your tests?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-330904636:97,test,tests,97,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-330904636,1,['test'],['tests']
Testability,"@davidbenjamin Could you review these changes. I added tests to check that my filtering is doing the right thing, but there aren't any tests that check that the likelihood calculation is correct.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2170#issuecomment-247693318:55,test,tests,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2170#issuecomment-247693318,2,['test'],['tests']
Testability,@davidbenjamin Could you run JProfiler on your test case and post the CPU profile here? Profiling beats manual code inspection any day of the week ;),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3788#issuecomment-341738058:47,test,test,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3788#issuecomment-341738058,1,['test'],['test']
Testability,@davidbenjamin Feel free to merge if tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4297#issuecomment-361394130:37,test,tests,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4297#issuecomment-361394130,1,['test'],['tests']
Testability,"@davidbenjamin Feel free to merge if tests pass. For future reference, I'd like to start having automated tests for supported WDLs. Can you file an issue? Not required for this PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4069#issuecomment-357288119:37,test,tests,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4069#issuecomment-357288119,2,['test'],['tests']
Testability,@davidbenjamin Feel free to merge once test failures are resolved.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4132#issuecomment-357115303:39,test,test,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4132#issuecomment-357115303,1,['test'],['test']
Testability,"@davidbenjamin Funcotator is not quite ready to outright replace Oncotator, but there is a test WDL for it in the M2/unsupported folder. . It can run off the same docker image, but you need to download the data sources (or provide your own - the default downloadable tar.gz is about 300MB and extracts to about 3GB). There is a short set of instructions in the tool doc for how to run it (I'm still working on the tutorial for the forum). . One current limitation is that it only consumes and produces VCF files, which may be an issue for some users. . I should add that while I have done _some_ testing with GRCh38, I have not extensively tested with that reference.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4188#issuecomment-359019952:91,test,test,91,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4188#issuecomment-359019952,3,['test'],"['test', 'tested', 'testing']"
Testability,"@davidbenjamin Hmm, it doesn't seem to resolve the issue for me. I tested as below and same exception was thrown. Could you confirm if I tested correctly?. ```; java -jar gatk-package-4.0.12.0-18-g0570670-SNAPSHOT-local.jar FilterMutectCalls -V test-unfiltered.vcf -O test-filtered.vcf.gz; ```. $ cat test-unfiltered.vcf; ```; ##fileformat=VCFv4.2; ##FORMAT=<ID=AD,Number=R,Type=Integer,Description=""Allelic depths for the ref and alt alleles in the order listed"">; ##FORMAT=<ID=AF,Number=A,Type=Float,Description=""Allele fractions of alternate alleles in the tumor"">; ##FORMAT=<ID=DP,Number=1,Type=Integer,Description=""Approximate read depth (reads with MQ=255 or with bad mates are filtered)"">; ##FORMAT=<ID=F1R2,Number=R,Type=Integer,Description=""Count of reads in F1R2 pair orientation supporting each allele"">; ##FORMAT=<ID=F2R1,Number=R,Type=Integer,Description=""Count of reads in F2R1 pair orientation supporting each allele"">; ##FORMAT=<ID=GQ,Number=1,Type=Integer,Description=""Genotype Quality"">; ##FORMAT=<ID=GT,Number=1,Type=String,Description=""Genotype"">; ##FORMAT=<ID=PGT,Number=1,Type=String,Description=""Physical phasing haplotype information, describing how the alternate alleles are phased in relation to one another"">; ##FORMAT=<ID=PID,Number=1,Type=String,Description=""Physical phasing ID information, where each unique ID within a given sample (but not across samples) connects records within a phasing group"">; ##FORMAT=<ID=PL,Number=G,Type=Integer,Description=""Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification"">; ##FORMAT=<ID=PS,Number=1,Type=Integer,Description=""Phasing set (typically the position of the first variant in the set)"">; ##FORMAT=<ID=P_PRIOR_RO,Number=1,Type=Float,Description=""prior probability of read orientation-based artifacts under the present referene context"">; ##FORMAT=<ID=P_RO,Number=1,Type=Float,Description=""posterior probability of read orientation-based artifacts"">; ##FORMAT=<ID=ROF_TYPE,Number=1,Type=String,D",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5563#issuecomment-452485251:67,test,tested,67,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5563#issuecomment-452485251,5,['test'],"['test-filtered', 'test-unfiltered', 'tested']"
Testability,"@davidbenjamin How's the patch coming? Did the M2 validation tests pass on your branch? We'll definitely try to expedite the code review, but I'll think we'll want some additional heavy-duty testing prior to release.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6533#issuecomment-610995045:61,test,tests,61,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6533#issuecomment-610995045,2,['test'],"['testing', 'tests']"
Testability,"@davidbenjamin I added the AF thresholding and limited it to just the NON_REF allele. There's a mildly awkward check in the integration test for it. If you can formulate an elegant unit test that makes for nice round numbers I'm happy to add it, but that's beyond me. I lost the new Twist exome, but once I can get ahold of it I'll make a GVCF and see what happens.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449127402:136,test,test,136,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449127402,2,['test'],['test']
Testability,@davidbenjamin I also ran an additional test outside of our repo to make sure that this was working properly.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4423#issuecomment-374646199:40,test,test,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4423#issuecomment-374646199,1,['test'],['test']
Testability,"@davidbenjamin I believe that the `trim()` call in question has always been on the original region, going back to GATK 3.x. Here's the equivalent line from the GATK 3.x `HaplotypeCaller` (line 901 HaplotypeCaller.java):. ```; final ActiveRegionTrimmer.Result trimmingResult = trimmer.trim(originalActiveRegion,allVariationEvents);; ```. And, as in GATK 4.x, the clipping code in GATK 3.x called `clone()` on each read prior to clipping. It's worth testing whether the equivalent argument in GATK 3.x (which was named `--dontUseSoftClippedBases`) worked at all.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6686#issuecomment-652520169:448,test,testing,448,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6686#issuecomment-652520169,1,['test'],['testing']
Testability,"@davidbenjamin I checked with our diagnostic lab director about which data can be put on the public repo (anonymized of course). The only file that cannot be used is the one labeled ""Exome_NBPF16_SNP.bam"", the other bam files I shared with you are from control samples and can be used in the integration test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3697#issuecomment-453800471:304,test,test,304,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3697#issuecomment-453800471,1,['test'],['test']
Testability,@davidbenjamin I didn't come across this issue but I also did not test for it specifically.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1858#issuecomment-443290180:66,test,test,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1858#issuecomment-443290180,1,['test'],['test']
Testability,"@davidbenjamin I do think we should throw this switch soon, perhaps even for the next release, provided we keep the old code path intact for now. There are two things that could affect the exact timing of the PR:. 1. I have a major `HaplotypeCaller` testing branch still in flight that I'd prefer to get merged before we throw the switch. I'd expect this to hit master sometime next week. 2. There has been some talk of a supplemental evaluation to the palantir HC tie-out for the exomes on the cloud pipeline. I defer to @ldgauthier as to whether this change should wait until after that.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4614#issuecomment-377549195:250,test,testing,250,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4614#issuecomment-377549195,1,['test'],['testing']
Testability,"@davidbenjamin I feel like we need to put good, continuous *performance* regression tests in place for the `HaplotypeCaller` so that we can make changes of this nature without fear. Testing for a performance regression in the `HaplotypeCaller` is currently very non-trivial -- you have to run with and without intervals, with and without -ERC GVCF, on both exome and genome to be confident that you haven't killed performance in a certain mode.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3184#issuecomment-358777173:84,test,tests,84,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3184#issuecomment-358777173,2,"['Test', 'test']","['Testing', 'tests']"
Testability,"@davidbenjamin I figured out that particular case we talked about earlier. The case (`depth = 0` but `PileupElement` is not empty) happens when all the reads have deletion at the locus. Instead of logging a message, now I simply skip such a locus.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3721#issuecomment-348321755:197,log,logging,197,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3721#issuecomment-348321755,1,['log'],['logging']
Testability,@davidbenjamin I have refactored this branch to account for changes to the codebase adjacent to this code. In the interest of not possibly harming any of the old results I have made this a toggle and I have also made the setting apply symmetrically to tails and heads and added a few simple tests in the existing framework.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6113#issuecomment-640870830:291,test,tests,291,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6113#issuecomment-640870830,1,['test'],['tests']
Testability,@davidbenjamin I kicked Travis and now tests are green so you can merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4801#issuecomment-393179618:39,test,tests,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4801#issuecomment-393179618,1,['test'],['tests']
Testability,"@davidbenjamin I looked into this more. From what I can tell, when a site is polymorphic, GenotypeGVCFs is going to trim to found alleles. Under normal conditions, when a site is not polymorphic, it doesnt get output. When output is forced (--force-output-interverals or output-all-sites), then the VC is just output as-is. This PR initially fixed the bug in removeNonRefAlleles(). I think GenotypeGVCFs should also prune unused alleles. If the site is not polymorphic, by definition I think that means removing all ALTs? I just checked in a few tweaks:. 1) I switched from the original test gVCF data I added to use an existing gVCF from GATK. This has the advantage of containing actual callable sites, not adding new data, and contains existing multi-allelic sites. . 2) I added code to GenotypeGVCFs so unused alleles will be trimmed as part of removeNonRefAlleles. I could understand if you want to change the name of that method now. This is currently always true; however, I could see a rationale for making --retain-unused-alleles-from-force-output-sites as a command line argument (i'd argue to default to false).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-577859097:587,test,test,587,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-577859097,1,['test'],['test']
Testability,"@davidbenjamin I made the changes you requested, plus some additional cleanup. Since this function takes a `normalizedTable` it only ever actually sees tables whose sums are less than 400. The smallest p-value we'd expect given that we can't have entries that are larger than 400 is around 1e-120. Therefore we don't actually have to take the log of the probability and normalize it, we can just take the probability straight from `HypergeometricDistribution`. We also don't need `relErr`. . Also given this, I didn't make the changes @lh3 described, although this would clearly be a good way to reduce the computation needed for calculating the p-value with larger tables. . If you think it would be useful to keep these numerical stability features, I can add them back in, but removing them feels more readable to me given that we are only calculating small tables.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2307#issuecomment-266828114:343,log,log,343,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2307#issuecomment-266828114,1,['log'],['log']
Testability,@davidbenjamin I see that the variant from the test files that changed has disappeared. Can you explain what was causing it before and how you fixed it?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6498#issuecomment-599596290:47,test,test,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6498#issuecomment-599596290,1,['test'],['test']
Testability,"@davidbenjamin I think all requested changes are in, with the exception of modifying the gVCF to create a site with two ALT alleles in addition to NON_REF. I'll try to find an example in our data, but I'm not sure I understand gVCF format enough to do that. do you happen to know if you have existing test data multi-ALT gVCFs?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-577418870:301,test,test,301,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-577418870,1,['test'],['test']
Testability,"@davidbenjamin I think one essential test you haven't done is to run master with more aggressive downsampling settings using the existing `--maxReadsPerAlignmentStart` argument, and compare that against your branch. This would help us determine whether or not the existing downsampling functionality really is inadequate to control peak memory use and runtime. The current default in `Mutect2` for `--maxReadsPerAlignmentStart` is 50, which is almost certainly much higher than it needs to be. That's 50 * 300 = 15,000 reads per assembly region, with on the order of ~2 regions in memory at any time = 30,000 reads. I propose that we try a run with the current vanilla master and `--maxReadsPerAlignmentStart 3`, and compare that to an identical run on your branch with your new downsampling options.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-341838476:37,test,test,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-341838476,1,['test'],['test']
Testability,"@davidbenjamin I think so, but I didn't test beyond the cases at the ends of chromosomes so it's possible that I didn't fix it completely. . I can come back to this after I review your adaptive pruning PR",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3944#issuecomment-443735719:40,test,test,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3944#issuecomment-443735719,1,['test'],['test']
Testability,@davidbenjamin I think we are just waiting on a test for this. Is there any other reason this is blocked?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6968#issuecomment-838841233:48,test,test,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6968#issuecomment-838841233,1,['test'],['test']
Testability,"@davidbenjamin I'm not sure I follow your logic. But if you believe the current implementing is doing the expected thing I'd like to understand. In the example above, the site is multi-allelic in the gVCF. However, when run through GenotypeGVCFs it's reduced to being bi-allelic, and the QUAL of the bi-allelic site in the genotyped GVCF doesn't change - it's still `595.64`. . To rephrase the issue - I find that if I run `GenotypeGVCFs -stand-call-conf 0.0` on that variant, it emits a variant with QUAL 595.64. But if I run `GenotypeGVCFs -stand-call-conf 100` that variant doesn't get emitted. I _think_ that's wrong, or at the very least misleading.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5793#issuecomment-480071811:42,log,logic,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5793#issuecomment-480071811,1,['log'],['logic']
Testability,"@davidbenjamin I've significantly refactored the production code, see the last commit. Most of this refactoring was to done make the code for the accounting of different modes (SNP/INDEL/both x BGMM/python x non/allele-specific) more minimal and straightforward. I've also combined the score/apply steps using the TwoPassVariantWalker. There's still lots of documentation, cleanup, and hardening/validation to be done, but most of the key methods and design choices have been documented, so I think it could be worth a quick review at this stage. Again, no need to nitpick code-style details, etc. (unless you really want to!) In the meantime, I'm going to do some more testing/tieout to make sure the refactor didn't break anything. This covers ~1800 LOC, which is roughly 50% of the equivalent VQSR code. Even modulo the remaining work just mentioned, which may add a few hundred LOC, I think this is a decent improvement---additional functionality, stability, etc. notwithstanding!. There's stubs for adding the truth-sensitivity conversion you proposed---should be pretty straightforward. I think it should also still be pretty easy for future pushes to add features like extraction/downsampling of unlabeled data, etc., but please do keep an eye out for design choices that may ultimately be constraining.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7659#issuecomment-1044836946:670,test,testing,670,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7659#issuecomment-1044836946,2,"['stub', 'test']","['stubs', 'testing']"
Testability,"@davidbenjamin I've spun this off into a separate ticket. I think this might be serious/widespread enough that we'll want a 4.1.6.1 release once we have a working fix. I recommend that we manually do full-scale test runs of both HaplotypeCaller and Mutect2 to confirm that the issue is resolved rather than relying on the integration tests, which are not large-scale enough to catch edge cases like this, unfortunately.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6533#issuecomment-606748607:211,test,test,211,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6533#issuecomment-606748607,2,['test'],"['test', 'tests']"
Testability,"@davidbenjamin If it passes testing and the conflict resolution is trivial, feel free to merge",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4001#issuecomment-353505269:28,test,testing,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4001#issuecomment-353505269,1,['test'],['testing']
Testability,"@davidbenjamin If you have the time to spare, by all means! Would save @asmirnov239 some work. Feel free to submit a PR against GATK public with this change, plus any unit test, etc., you feel is appropriate. Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1950#issuecomment-300906769:172,test,test,172,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1950#issuecomment-300906769,1,['test'],['test']
Testability,"@davidbenjamin Just added an additional automated test thanks to @sooheelee , but please ignore commit message.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3538#issuecomment-326306087:50,test,test,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3538#issuecomment-326306087,1,['test'],['test']
Testability,"@davidbenjamin LODs are fixed, but I'm not super happy with them. They fluctuate a lot, making for a big GVCF. How easy would it be to modify the likelihood calculation to integrate over all AFs greater than some threshold of interest? I'm hoping that would produce more stability. Just to give you an idea of the fluctuation, below are some lines from my integration test VCF where I block anything less than -2 and between -2 and 0. I tried a few other thresholds, but it's just a lot of variability. I have a hunch it has to do with the minimum base quality in the pileup. ```; #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT NA12878; chrM 1 . G <NON_REF> . . END=4 GT:DP:MIN_DP:TLOD 0/0:67:48:-1.958e+00; chrM 5 . A <NON_REF> . . END=5 GT:DP:MIN_DP:TLOD 0/0:107:107:-2.033e+00; chrM 6 . C <NON_REF> . . END=6 GT:DP:MIN_DP:TLOD 0/0:123:123:-1.603e+00; chrM 7 . A <NON_REF> . . END=8 GT:DP:MIN_DP:TLOD 0/0:135:135:-2.138e+00; chrM 9 . G <NON_REF> . . END=9 GT:DP:MIN_DP:TLOD 0/0:138:138:-1.975e+00; chrM 10 . T <NON_REF> . . END=13 GT:DP:MIN_DP:TLOD 0/0:178:154:-2.226e+00; chrM 14 . T <NON_REF> . . END=15 GT:DP:MIN_DP:TLOD 0/0:208:205:-1.974e+00; chrM 16 . A <NON_REF> . . END=23 GT:DP:MIN_DP:TLOD 0/0:259:218:-2.424e+00; chrM 24 . A <NON_REF> . . END=25 GT:DP:MIN_DP:TLOD 0/0:312:310:-8.945e-01; chrM 26 . C <NON_REF> . . END=26 GT:DP:MIN_DP:TLOD 0/0:317:317:-2.509e+00; chrM 27 . C <NON_REF> . . END=27 GT:DP:MIN_DP:TLOD 0/0:335:335:-1.962e+00; chrM 28 . A <NON_REF> . . END=50 GT:DP:MIN_DP:TLOD 0/0:492:343:-2.821e+00; chrM 51 . T <NON_REF> . . END=51 GT:DP:MIN_DP:TLOD 0/0:700:700:-3.808e-01; chrM 52 . T <NON_REF> . . END=63 GT:DP:MIN_DP:TLOD 0/0:822:722:-2.943e+00; chrM 64 . C <NON_REF> . . END=64 GT:DP:MIN_DP:TLOD 0/0:909:909:-1.492e+00; chrM 65 . T <NON_REF> . . END=86 GT:DP:MIN_DP:TLOD 0/0:1064:938:-3.065e+00; chrM 87 . A C,<NON_REF> . . DP=942;ECNT=8;POP_AF=5.000e-08,5.000e-08;TLOD=-2.463e+00,-2.668e+00 GT:AD:AF:DP:F1R2:F2R1:MBQ:MFRL:MMQ:MPOS:ORIGINAL_CONTIG_MISMATCH:SA_MAP_AF:SA_PO",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-437501517:368,test,test,368,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-437501517,1,['test'],['test']
Testability,@davidbenjamin My review is complete. Lots of tiny documentation issues. I'd refactor that unit test with a data provider as well.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/767#issuecomment-126069170:96,test,test,96,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/767#issuecomment-126069170,1,['test'],['test']
Testability,"@davidbenjamin Oncotator runs in the M2 WDL travis tests (last I checked). It just uses no datasources. Oncotator is disabled for the CNV WDL travis tests. I did this because the CNV Oncotator uses a different docker image, which is fairly large. @davidbenjamin @samuelklee Life is only a little bit easier if the WDL is self-contained. The sub-...-workflows gets a little hairy for setting optional parameters (particularly runtime parameters).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4271#issuecomment-360865879:51,test,tests,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4271#issuecomment-360865879,2,['test'],['tests']
Testability,"@davidbenjamin One factor is that @droazen wanted to make sure nothing changed until the GATK4 HaplotypeCaller got the stamp of approval. I'm very pleased with the test results so far. Still interested in the reference sample increase results. I'd also want to QC a medium-sized callset to make sure the changes make sense, but then I'd be happy. What about you @vdauwera ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2098#issuecomment-241810167:164,test,test,164,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2098#issuecomment-241810167,1,['test'],['test']
Testability,"@davidbenjamin Oops, I shouldn't approve changes that break the tests.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7105#issuecomment-952035049:64,test,tests,64,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7105#issuecomment-952035049,1,['test'],['tests']
Testability,"@davidbenjamin Since the error doesn't occur with GATK 4.1.4.1, it's possible that this is a side effect of the changes to `LeftAlignIndels` that went into GATK 4.1.5.0 in https://github.com/broadinstitute/gatk/pull/6427. @gbrandt6 Could you or the user test whether the error occurs in GATK 4.1.5.0? If it does, that would definitely implicate https://github.com/broadinstitute/gatk/pull/6427 as the source of the regression.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6765#issuecomment-680237910:254,test,test,254,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6765#issuecomment-680237910,1,['test'],['test']
Testability,"@davidbenjamin Since this changes the `CreateSomaticPanelOfNormals` test code, would you mind having a look when you get a chance?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6746#issuecomment-705672747:68,test,test,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6746#issuecomment-705672747,1,['test'],['test']
Testability,"@davidbenjamin Since this issue was related to changes from one of your refactoring PRs, would you mind reviewing this branch and adding a quick unit test? Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8445#issuecomment-1658659432:150,test,test,150,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8445#issuecomment-1658659432,1,['test'],['test']
Testability,"@davidbenjamin Sorry I've been out and just got around to looking at this. Given that this test appears to run just fine in the Java 11 job (which is not run on our docker), I suspect the failure may have something to do with the jar file we use to test on the docker (which is not the same jar we use on the non-docker tests). . I pulled your branch and all of the generation tasks (gatk doc, wdl gen, javadoc) seem to work fine, so given how much time it looks like this has taken up, I think it would make sense to either disable this test (on the docker only - see below - since we want it to still run in the other CI integration test job), or else remove the variantcalling package from the test package list (if thats the one thats causing the failure ?). And then create a ticket for me with whatever data you have, which I'll follow up on. If you restore everything to its natural state, you should be able to add this to the `DocumentationGenerationIntegrationTest.documentationSmokeTest` method and then it will be skipped only when running on the docker:. ```; final DocumentationGenerationIntegrationTest dt = new DocumentationGenerationIntegrationTest();; if (dt.isGATKDockerContainer()) {; throw new SkipException(""See gatk issue #..."");; }; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1216668361:91,test,test,91,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1216668361,6,['test'],"['test', 'tests']"
Testability,@davidbenjamin Testing failure is transient. Please review...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5062#issuecomment-408470885:15,Test,Testing,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5062#issuecomment-408470885,1,['Test'],['Testing']
Testability,"@davidbenjamin Thank you for your kind explanations! It motivated me to read JVM spec.; BTW, it looks that at least another edge case exists, which is not fixed by the PRs.; I tested with `gatk-4.0.12.0-20-gf9a2e5c-SNAPSHOT`. Variant (also wonder how 0 values for DP and AD can be interpreted) :; ```; 19 53302899 . G C . . DP=72;ECNT=2;MBQ=0,0;MFRL=0,0;MMQ=0,0;MPOS=0;POPAF=7.30;REF_BASES=GGTATACAAGGTTTGACATCT;SAAF=0.00,0.00,NaN;SAPP=0.025,0.025,0.950;TLOD=6.82 GT:AD:AF:DP:F1R2:F2R1:PGT:PID:PS:P_PRIOR_RO:P_RO:ROF_TYPE 0|1:0,0:0.962:0:0,0:0,0:0|1:53302899_G_C:53302899:1.444e-05:2.931e-03:F2R1; ```. Stacktrace:; ```; java.lang.IllegalArgumentException: errorRateLog10 must be good probability but got NaN; at org.broadinstitute.hellbender.utils.QualityUtils.phredScaleLog10ErrorRate(QualityUtils.java:321); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2FilteringEngine.lambda$applyGermlineVariantFilter$16(Mutect2FilteringEngine.java:286); at java.util.stream.DoublePipeline$3$1.accept(DoublePipeline.java:231); at java.util.Spliterators$DoubleArraySpliterator.forEachRemaining(Spliterators.java:1198); at java.util.Spliterator$OfDouble.forEachRemaining(Spliterator.java:822); at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:545); at java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260); at java.util.stream.IntPipeline.toArray(IntPipeline.java:502); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2FilteringEngine.applyGermlineVariantFilter(Mutect2FilteringEngine.java:286); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2FilteringEngine.calculateFilters(Mutect2FilteringEngine.java:519); at org.broadinstitute.hellbender.tools.walkers.mutect.FilterMutectCalls.firstPassApply(FilterMutectCalls.java:130); at org.broadinstitute.hellbender.engine.TwoPas",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5563#issuecomment-452818901:176,test,tested,176,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5563#issuecomment-452818901,1,['test'],['tested']
Testability,"@davidbenjamin Thanks for the test! Unfortunately none of the spike-in bams I have are public, but I will ask Sarah Calvo if she knows of any samples that would work as a spike-in and are public. Maybe we can track one down.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408863715:30,test,test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408863715,1,['test'],['test']
Testability,"@davidbenjamin Thanks for the workaround in the 4.1.9.0 release!. I tested the updated `CreateSomaticPanelOfNormals` with `genomicsDBs` computed in 4.1.7.0 as above and it seems that the workaround recovers a lot of multiallelic variants that were already missing in 4.1.7.0. Using the record and variant counts in 4.1.7.0 as 100% reference, I'm getting 57% more records (all multiallelic) or 142% more variants. No sites from 4.1.7.0 are missing in 4.1.9.0. As a side note, all of the new records have `FRACTION=1` and most (90%) have `BETA=1,1;FRACTION=1`. Among shared records, all multiallelic sites also have `FRACTION=1` and almost always different beta parameter estimates compared to 4.1.7.0. As expected, biallelic sites are unchanged. As far as I understand, these annotations are irrelevant in deciding whether a site should be output or not, so this is not a concern.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6744#issuecomment-707740253:68,test,tested,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6744#issuecomment-707740253,1,['test'],['tested']
Testability,@davidbenjamin Thanks for your review; I've tried to address your comments but let me know if anything still looks like it could use some work or if you spot anything new. Still waiting for tests to pass on this update (bar the GenomicsDB tests that I expect to fail).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-402264086:190,test,tests,190,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-402264086,2,['test'],['tests']
Testability,"@davidbenjamin This filter looks fine to me, but could you add a test? You should have the data from the mitochondria bug already, right? Also if this potentially affects HaplotypeCaller should this fix be somewhere deeper so the filter is used by both tools or would we want the fix to be different?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408416074:65,test,test,65,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408416074,1,['test'],['test']
Testability,@davidbenjamin This is the issue I was talking about -- the relevant code is in `MannWhitneyU`:. ```; double sumOfAllSmallerBins = histo.get(testStatU).getValue() / 2.0;. for (final Histogram.Bin<Double> bin : histo.values()) {; if (bin.getId() < testStatU) sumOfAllSmallerBins += bin.getValue();; }. return sumOfAllSmallerBins / histo.getCount();; ```. Where `testStatU` is a double. This has caused issues like the one reported in https://github.com/broadinstitute/gatk/pull/5190. I'm wondering whether the class can be refactored to not use a double as a key.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4290#issuecomment-422126933:141,test,testStatU,141,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4290#issuecomment-422126933,3,['test'],['testStatU']
Testability,@davidbenjamin What is the issue with subworkflows? We import some subworkflows in the CNV WDLs. I think sub-subworkflows are when things get hairy... @jonn-smith @LeeTL1220 Let me know at what point we should switch over to Funcotator (or make it an option) in the CNV WDLs as well. I'd also feel more comfortable if the Funcotator/Oncotator tests actually ran on Travis.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4271#issuecomment-360860397:343,test,tests,343,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4271#issuecomment-360860397,1,['test'],['tests']
Testability,"@davidbenjamin Whoops, this was not supposed to be merged until after https://github.com/broadinstitute/gatk/pull/2186, and after the `MathUtils` change we talked about. Can you open a second PR with the `MathUtils` change (and revert the changes to VQSR test data)?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2235#issuecomment-257418802:255,test,test,255,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2235#issuecomment-257418802,1,['test'],['test']
Testability,@davidbenjamin Why `assertion` vs `assert`? I think it reads better as the more active verb. This is just quibbling though. @droazen What color should we paint the bike shed?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2543#issuecomment-290763984:20,assert,assertion,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2543#issuecomment-290763984,2,['assert'],"['assert', 'assertion']"
Testability,@davidbenjamin Will you have time to do this one? The fix for this arg was merged without a test.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4136#issuecomment-358031279:92,test,test,92,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4136#issuecomment-358031279,1,['test'],['test']
Testability,"@davidbenjamin Would you be able to add the requested test when you have time, since you created this class?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2178#issuecomment-288540358:54,test,test,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2178#issuecomment-288540358,1,['test'],['test']
Testability,"@davidbenjamin Yes, I am testing that patch out now -- should be ready for you to try out tomorrow!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-321368872:25,test,testing,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-321368872,1,['test'],['testing']
Testability,"@davidbenjamin Yes, that's correct -- the HC testing branch is coming soon, and I think we should be able to get both that branch and the switch to newQual in for the next release (assuming that there are no outstanding objections from anyone else on the switch).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4614#issuecomment-393280404:45,test,testing,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4614#issuecomment-393280404,1,['test'],['testing']
Testability,"@davidbenjamin again, sorry to keep bugging on this thread, but it's been a while and we're really hoping to push these changes through since they're blocking a project. I believe I addressed everything in your review. I did identify another (arguably pre-existing) issue in GenotypGVCFs that would be exposed whenever it runs in all-sites mode or in force-output mode - the lack of allele trimming. This PR addresses that, including test cases, though I havent heard back about this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-581418093:434,test,test,434,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-581418093,1,['test'],['test']
Testability,@davidbenjamin back to you. I notice a test is broken?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1699748712:39,test,test,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1699748712,1,['test'],['test']
Testability,"@davidbenjamin blast from the past! I cleaned this up and generalized the checks. Based on walking the debugger through my new test, I don't think the strictness should change for things that are actually valid, but I guess we'll see what Travis says.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6430#issuecomment-705608038:127,test,test,127,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6430#issuecomment-705608038,1,['test'],['test']
Testability,"@davidbenjamin comparing [better error bars for samples with small contamination](https://github.com/broadinstitute/gatk/pull/7003) version to master 4.2.0.0. - running on large set of probably considered as a small panel with high read depth.; percent of observations with all compared variables equal 88%, values unequal 12%. We can conclude that over all the Zero contamination remains Zero contamination but with non zero stdError (accepted after the binary searched). . **only 0.5%** of samples which were reported zero on version 4.2.0.0 are now reported as non zero contamination when the stdError was not accepted and the min maf iteration continued. ### Need to distinguish between **true zero contamination** ie was not found after running all maf iterations over all strategies (HOMO ALT,REF,UNSCRUPULOUS_HOM_REF) to a zero contamination after accepting stdError of Zero contamination of a single strategy. it is about **15%** of samples which will be reported non zero if continuing the maf iterations . @itaibeno to test on larger panel and report here. @davidbenjamin - could you consider running all maf iterations and report contamination per strategy,minMaf and loci if exists?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7177#issuecomment-856187340:1029,test,test,1029,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7177#issuecomment-856187340,1,['test'],['test']
Testability,"@davidbenjamin going to upgrade to latest this week and test it out; FWIW with 4.1.1.0 this appears to be an issue for calls output from Mutect2 with very low DP. E.g. the following VCF raises this exception for `FilterMutectCalls`; ```; #CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO	FORMAT	NEC-2b; chr5	85458177	.	A	G	.	.	DP=1;ECNT=1;MBQ=0,90;MFRL=0,171;MMQ=60,60;MPOS=17;POPAF=7.30;TLOD=4.20	GT:AD:AF:DP:F1R2:F2R1:SB	0/1:0,1:0.667:1:0,1:0,0:0,0,1,0; chr13	38648250	.	A	G	.	.	DP=2;ECNT=1;MBQ=0,37;MFRL=0,47;MMQ=60,60;MPOS=32;POPAF=7.30;TLOD=7.40	GT:AD:AF:DP:F1R2:F2R1:SB	0/1:0,2:0.750:2:0,2:0,0:0,0,2,0; chr16	10195584	.	C	T	.	.	DP=1;ECNT=1;MBQ=0,90;MFRL=0,159;MMQ=60,60;MPOS=32;POPAF=7.30;TLOD=4.20	GT:AD:AF:DP:F1R2:F2R1:SB	0/1:0,1:0.667:1:0,1:0,0:0,0,1,0; chr16	54464154	.	G	A	.	.	DP=1;ECNT=1;MBQ=0,90;MFRL=0,145;MMQ=60,60;MPOS=15;POPAF=7.30;TLOD=4.20	GT:AD:AF:DP:F1R2:F2R1:SB	0/1:0,1:0.667:1:0,1:0,0:0,0,0,1; chr18	10035436	.	C	T	.	.	DP=1;ECNT=1;MBQ=0,45;MFRL=0,131;MMQ=60,60;MPOS=16;POPAF=7.30;TLOD=4.20	GT:AD:AF:DP:F1R2:F2R1:SB	0/1:0,1:0.667:1:0,0:0,1:0,0,1,0; chr18	10511383	.	A	G	.	.	DP=1;ECNT=1;MBQ=0,45;MFRL=0,160;MMQ=60,60;MPOS=22;POPAF=7.30;TLOD=4.20	GT:AD:AF:DP:F1R2:F2R1:SB	0/1:0,1:0.667:1:0,1:0,0:0,0,0,1; chr18	75229298	.	A	G	.	.	DP=1;ECNT=1;MBQ=0,90;MFRL=0,127;MMQ=60,60;MPOS=8;POPAF=7.30;TLOD=4.20	GT:AD:AF:DP:F1R2:F2R1:SB	0/1:0,1:0.667:1:0,1:0,0:0,0,0,1; chr18	77560878	.	AA	TT	.	.	DP=1;ECNT=1;MBQ=0,90;MFRL=0,100;MMQ=60,60;MPOS=29;POPAF=7.30;TLOD=4.20	GT:AD:AF:DP:F1R2:F2R1:SB	0/1:0,1:0.667:1:0,1:0,0:0,0,0,1; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7276#issuecomment-1201455808:56,test,test,56,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7276#issuecomment-1201455808,1,['test'],['test']
Testability,"@davidbenjamin looks like i have to wait for the test to pass because travis is having problems. What was happening is that the list of alleles didn't necessarily overlap with the VC being evaluated here (the `AssemblyBasedCallerUtils.getAllelesConsistentWithGivenAlleles(givenAlleles, vc)` was among other things responsible for filtering out alleles that don't overlap the site at all. This was responsible for the users issue because there were alleles from adjacent --alleles file variants 20 bases downstream that caused that condition to fail.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7740#issuecomment-1081925541:49,test,test,49,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7740#issuecomment-1081925541,1,['test'],['test']
Testability,"@davidbenjamin looks that it works for CombineVariants now (not on the full set of data). However, I am getting a lot of random errors for HaplotypeCallerSpark (4.1.8.1):. > 20/09/15 21:46:45 ERROR Executor: Exception in task 14.0 in stage 5.0 (TID 464); > java.util.ConcurrentModificationException; > 	at java.util.ArrayList.sort(ArrayList.java:1456). after rerunning with the same parameters for some runs problems disappeared, for some doesn't, and I must rerun them once again. There was no this kind of issue when I was using 4.1.3.0 HaplotypeCallerSpark O_o. I am confused O_o for what version tools works and for what doesn't. [H1_1.2.gatk.spark.HaplotypeCaller.gvcf.log](https://github.com/broadinstitute/gatk/files/5229907/H1_1.2.gatk.spark.HaplotypeCaller.gvcf.log); [H1_2.5.gatk.spark.HaplotypeCaller.gvcf.log](https://github.com/broadinstitute/gatk/files/5229908/H1_2.5.gatk.spark.HaplotypeCaller.gvcf.log). in contrast to the working processes; [H1_2.3.gatk.spark.HaplotypeCaller.gvcf.log](https://github.com/broadinstitute/gatk/files/5229912/H1_2.3.gatk.spark.HaplotypeCaller.gvcf.log). exactly same HPC infrastructure O_o. ________________; I think I have stuck once again somewhere in #5680 and #6730",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6473#issuecomment-693185541:674,log,log,674,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6473#issuecomment-693185541,6,['log'],['log']
Testability,"@davidbenjamin mutect2_pon.wdl and mutect2.wdl worked great without docker installed. Thanks!. @samuelklee @sooheelee As a user, I found a json template useful for two reasons, though it may be up to how a wdl is written.; 1) womtool generates inputs from all the dependent wdls including unnecessary ones for the workflow. (e.g. mutect2_pon.wdl); 2) womtool didn't provide default values. Looking at mutect_resources.wdl, I wondered what the good value for minimum_allele_frequency is (or what GATK team used for creating the resource bundle). In addition, I thought a test to validate every wdl would be helpful. (womtool validate [a wdl])",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4188#issuecomment-360544256:570,test,test,570,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4188#issuecomment-360544256,1,['test'],['test']
Testability,"@davidbenjamin ready for re-review. I'm going to do a little performance benchmarking in the meantime. It takes ~40min to call the whole contig for my 4000X bams, which isn't terrible, but it isn't great. Anecdotally it seems like the AF thresholding slowed things down, but I'll collect some numbers.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449458286:73,benchmark,benchmarking,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449458286,1,['benchmark'],['benchmarking']
Testability,"@davidbenjamin removing the final Mish-step in ""evaluateFinalModelParameters"" like we talked about made a huge difference in the VQSLODs in the test data. I'm going to continue looking into it, but I really want to get this fix for production into this week's release.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6425#issuecomment-582086983:144,test,test,144,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6425#issuecomment-582086983,1,['test'],['test']
Testability,"@davidbenjamin sorry to bug, but we're really hoping to get this resolved. see my last post - while i think it's clear GATK wasnt pruning alleles in any kind of force-output/output-all case, my latest changes add this and also add test cases around it. i'm now using one of the pre-existing gVCFs as test data, which improves the test coverage as well.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-578837930:231,test,test,231,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-578837930,3,['test'],['test']
Testability,@davidbenjamin thank you for letting me know. I will try version 4.1.1.0 for now and I will report if I identify any further issues. Happy to test intermediate versions if that is of any help.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6037#issuecomment-512358166:142,test,test,142,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6037#issuecomment-512358166,1,['test'],['test']
Testability,"@davidbenjamin the benchmark data is still not ours, it is the current somatic ""gold standard"" HCC1395 from [https://www.nature.com/articles/s41587-021-00993-6](https://www.nature.com/articles/s41587-021-00993-6), based on data from multiple WGS sequencing runs with combined 1,500x coverage, etc.... Apart from that, we are on the same page here. Now that the change leading to the apparent differences in performance is found, and holds up to scrutiny so far (thanks for looking into it), it is a more real possibility than ever that this is not a bug but a case of Mutect2 outperforming the ""gold standard"". Let's keep the issue open for now, I am still investigating and would like to have a place to report my progress.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7921#issuecomment-1543422454:19,benchmark,benchmark,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7921#issuecomment-1543422454,1,['benchmark'],['benchmark']
Testability,"@davidbenjamin there is one test that failed. is this possible an intermittent /timeout problem? i dont have permission to restart them, but i dont see an actual test failure in it: https://travis-ci.com/broadinstitute/gatk/jobs/283688682",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-582418410:28,test,test,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-582418410,2,['test'],['test']
Testability,@davidbenjamin would you be able to take a look at reproducing this issue? I think @tfenne's test case is what you want to look at.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5696#issuecomment-475409316:93,test,test,93,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5696#issuecomment-475409316,1,['test'],['test']
Testability,"@davidbenjamin, et al. I have two recommendations:. 1) Though I prefer to work symbolically and through proofs, it might be nice to first expand on the validation by proof in the JavaDoc - including for the specific function's header - and anywhere else where necessary across the GATK code, just for sanity's sake, and for tying things together neatly and properly. This process of always going through the mathematical steps alerts me when I code that I have not missed anything. . 2) When dealing with multiple levels of transformations, it probably would be good to formulate a collection of complete set of simple tests. Since like you mentioned {phased} is a subset (⊂) of {unphased}, then the paths of phased genotypes one works with would also be ideal to test on. Does this function have any validation tests confirming the correct likelihoods, which would be performed for both phased and unphased genotypes? These can be generated tests, if original files do not exists. Hope it helps,; Paul",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2019#issuecomment-236759221:619,test,tests,619,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2019#issuecomment-236759221,4,['test'],"['test', 'tests']"
Testability,"@davidbernick @cmnbroad Thanks for reporting this. It looks like there is a bug with writing sharded BAM output to GCS. I'm currently testing a fix in Disq, but in the meantime you could drop `--sharded-output true` as a workaround to see if that fixes the problem.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5545#issuecomment-451945287:134,test,testing,134,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5545#issuecomment-451945287,1,['test'],['testing']
Testability,@davidbernick Created https://github.com/broadinstitute/gatk/issues/2289 to track the task of getting the tests passing again.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2288#issuecomment-264213774:106,test,tests,106,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2288#issuecomment-264213774,1,['test'],['tests']
Testability,@davidbernick Does it work with the 1.0 image? It would be good to get these nightly tests working again.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2183#issuecomment-252995422:85,test,tests,85,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2183#issuecomment-252995422,1,['test'],['tests']
Testability,@davidbernick I was going to tackle this by cloning https://gatk-jenkins.broadinstitute.org/job/gatk-perf-test-spark-readpipeline and adjusting some of the parameters. Are there any issues or gotchas I should know about? /cc @lbergelson,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3573#issuecomment-329210063:106,test,test-spark-readpipeline,106,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3573#issuecomment-329210063,1,['test'],['test-spark-readpipeline']
Testability,"@davidbernick It needs to be done in travis, I'm afraid, otherwise it's not going to solve our problem of people not noticing regressions until after merge. I'll craft a fast-running test case for you and post it here.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2298#issuecomment-287472115:183,test,test,183,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2298#issuecomment-287472115,1,['test'],['test']
Testability,"@davidbernick Since you set up the jenkins tests for us, would you be able to help us out with this ticket? We've gotten weary of catching Spark regressions post-merge with jenkins, and want to set up fast dataproc-based tests in travis that run on every pull request, and just run simple Spark tools like PrintReadsSpark to try to catch at least the most basic kinds of breakage before a branch is merged.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2298#issuecomment-286240726:43,test,tests,43,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2298#issuecomment-286240726,2,['test'],['tests']
Testability,"@davidbernick Thanks for looking into this. ; 1. It looks like we have a big 200G called /app disk but we're only writing to the root for some reason. Can we write there instead? ; 2. 👍 to removing most of the old jobs. It would be nice if we could save the job status logs but delete the artifacts and temp files. If that's hard to do though it's fine to just rotate out the old ones. Can we keep two months of jobs? That would be enough buffer so we can look back and see when something went wrong. For the performance tests you wrote, if there's any way we can keep their historical run times that would be best since they're mostly useful to see trends against the repositories history.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2180#issuecomment-248319308:269,log,logs,269,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2180#issuecomment-248319308,2,"['log', 'test']","['logs', 'tests']"
Testability,"@davidbernick thanks!. I noticed that the existing jobs are now failing with a GCS error (see https://gatk-jenkins.broadinstitute.org/job/gatk-perf-test-spark-markeddupe/436/console):. ```; Error code 404 trying to get security access token from Compute Engine metadata for the default service account. This may be because the virtual machine instance does not have permission scopes specified.; ```. There has been a change to the GCS library (https://github.com/broadinstitute/gatk/commit/b47838c9a5fa172ed6669ed4872b04d91c962a85), but when I ran a GCS pipeline manually on my machine it worked fine, even with this change. Any thoughts?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3573#issuecomment-329446325:148,test,test-spark-markeddupe,148,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3573#issuecomment-329446325,1,['test'],['test-spark-markeddupe']
Testability,"@dheiman Good catch. It is indeed not being populated. The fix is pretty quick - I've implemented it already, I just need to add in some test cases.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7408#issuecomment-899832078:137,test,test,137,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7408#issuecomment-899832078,1,['test'],['test']
Testability,"@droazen , I got a genomicsdb.jar from @kgururaj and just tried out the GenomicsDB cloud tests. The call stack that I got from my test run in nalini_new_genomicsdb_jar branch mentions that we do need the **fs.gs.project.id** hadoop configuration set. The google service json I use for our internal testing has this key, but the Hellbender service json does not. . Any ideas on how to get this key for the tests? Would this value be HELLBENDER_TEST_PROJECT? How is it being made available to the spark cloud tests for example? I do see it being configured in src/main/java/org/broadinstitute/hellbender/engine/spark/SparkContextFactory.java. ```; hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Must supply a value for configuration setting: **fs.gs.project.id**; 	at com.google.cloud.hadoop.util.ConfigurationUtil.getMandatoryConfig(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641:89,test,tests,89,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641,6,['test'],"['test', 'test-logs', 'testing', 'tests']"
Testability,"@droazen , I was able to reproduce your result. I tried to isolate what made it work or not. I tried with two kinds of inputs:; - on the hellbender bucket, or; - on my own bucket. I tried with two choices for `GOOGLE_APPLICATION_CREDENTIALS`:; - default credentials, or; - my own. I tried with two different clusters:; - one created in the Broad project, or; - one created in my own project. With every one of those eight combinations, I got the same result: the dreaded ""Error code 404 trying to get security access token from Compute Engine metadata for the default service account."". ```; ./gatk-launch CountReadsSpark -I gs://hellbender/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam -- --sparkRunner GCS --cluster jp-test-cluster --executor-cores 2 --num-executors 2; com.google.cloud.storage.StorageException: Error code 404 trying to get security access token from Compute Engine metadata for the default service account. This may be because the virtual machine instance does not have permission scopes specified.; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3855#issuecomment-352147413:641,test,test,641,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3855#issuecomment-352147413,2,['test'],"['test', 'test-cluster']"
Testability,"@droazen , its coming along nicely. The test first writes the three gvcfs provided for hg00096, hg00268 and na19625 to GenomicsDB. Then I use VariantContextTestUtils.assertVariantContextsAreEqual() method to compare the variants for chromosome 20 from GenomicsDB and combined.gatk3.7.g.vcf.gz.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-292008988:40,test,test,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-292008988,2,"['assert', 'test']","['assertVariantContextsAreEqual', 'test']"
Testability,"@droazen , please take a look! Ready to review. The tests pass, the only red is the build being preempted.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2013#issuecomment-233412029:52,test,tests,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2013#issuecomment-233412029,1,['test'],['tests']
Testability,"@droazen - Still some questions about integration tests (on the comment with your suggestion, but here too):. * I am not sure if the test that you are proposing will work with all the implementations of `createTempFile`: depends on how it is handle, as a `File` or as a `Path`; * I think that this depends a lot on the parts of the codebase that we are looking at, so maybe before accepting this a pass should be done for the usages and how the `java.io.tmpdir` is used. Waiting for your feedback before doing something that does not make sense...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4469#issuecomment-385942269:50,test,tests,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4469#issuecomment-385942269,2,['test'],"['test', 'tests']"
Testability,"@droazen - perfect! Thanks for the information about the new point release. I added a new test for the `--maximum-mapping-quality` argument, as the `--minimum-mapping-quality` was already included. I will add another commit with the rest of the read-filter related constant to the new class. Once the test pass it will be ready for the next pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4103#issuecomment-360858400:90,test,test,90,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4103#issuecomment-360858400,2,['test'],['test']
Testability,"@droazen - please, clarify how the tests should be done. I'm going to be on vacation next week, so feel free to add them to this branch if you would like to speed up the process (taking into account that #3998 depends on this now). Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4469#issuecomment-377577797:35,test,tests,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4469#issuecomment-377577797,1,['test'],['tests']
Testability,"@droazen - this is prepared for a review. All the test pass, but there are several an annoying hacks:. * Using the java property `""java.io.tmpdir` for default tmp directory instead of HTSJDK method (it looks somehow broken, and it is not used anymore); * Using `java.nio.Path.toString` directly, instead of using the URI form. Otherwise, the temp directory won't work for the default FileSystem. I guess that a better option is check if that path is associated with the default FS and if so do not use the URI and otherwise use it. What do you think?. Waiting for your first pass once test show up to do not fail. Thank you!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3998#issuecomment-358933952:50,test,test,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3998#issuecomment-358933952,2,['test'],['test']
Testability,"@droazen - this is prepared from the next pass. Maybe you can answer the following questions before doing a full second pass:. * Your comment about ""Assert that you get the correct number of shards back"" is tested implicitly, by iterating over the expected shards. Should I really make it explicit?; * Does realistic size reads adds something to the unit test itself? The integration test for the real data (and probably a future PR with other sliding-window implementations) might be enough for the purpose of real data...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4682#issuecomment-389185267:149,Assert,Assert,149,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4682#issuecomment-389185267,4,"['Assert', 'test']","['Assert', 'test', 'tested']"
Testability,"@droazen -- ; I haven't worked with Travis much -- so it'll be slower for me. I'd rather do this in Jenkins if that's ok. To do ""fast"" dataproc tests, I need a script that will run fast. For our current tests, I have: . 1. Grab gatk and make a docker. That takes about 10 minutes. It needs to be a ""fresh"" docker to match the PR. . 2. ; ```; ./gatk-launch MarkDuplicatesSpark \; --shardedOutput true \; -O /scratch/tmp.md.bam \; --numReducers 0 \; --apiKey $APIKEY \; -I $bamIn \; -- \; --sparkRunner GCS \; --driver-memory 8G \; --cluster $CLUSTERNAME \; --executor-cores 3 \; --executor-memory 25G \; --conf spark.yarn.executor.memoryOverhead=2500""; ```; That's what I currently launch for Spark Tests. If you give me something that you know will run faster (with data locations to run it against to make sure it runs faster), I can have a per-PR test that runs in Jenkins in 10 minutes (docker)+however-long-the-command-takes. Also, if you have a ""smaller"" BAM that makes more sense to run, let me know.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2298#issuecomment-286761079:144,test,tests,144,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2298#issuecomment-286761079,4,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,"@droazen . I have fixed the issue according Mr wangdy12 ' ways, I tested and the results is good . please reference A GATK4.0 Spark bug about HaplotypeCallerSpark and How to fix #4231 .",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4488#issuecomment-371694170:66,test,tested,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4488#issuecomment-371694170,1,['test'],['tested']
Testability,@droazen : Thanks a lot for prioritizing and attending to this. The security posture has greatly improved from where we started. Community greatly benefits from your effort. I have migrated to using the 4.5 release after some regression testing. Below is a list of critical and high findings with 4.5 release. There are links to snyk version update recommendations. I know sometimes its not easy just to upgrade the library version as we could end up with run time errors. I am adding this here so that its handy when ever you look at this further. Thanks again. . packageName | version | severity | language | module_id; -- | -- | -- | -- | --; com.google.protobuf:protobuf-java | 3.7.1 | high | java | [SNYK-JAVA-COMGOOGLEPROTOBUF-2331703 ](https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLEPROTOBUF-2331703 ); com.google.protobuf:protobuf-java | 3.7.1 | high | java | [SNYK-JAVA-COMGOOGLEPROTOBUF-3167772](https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLEPROTOBUF-3167772); io.netty:netty-codec-http2 | 4.1.96.Final | high | java | [SNYK-JAVA-IONETTY-5953332](https://security.snyk.io/vuln/SNYK-JAVA-IONETTY-5953332); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342645](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342645); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342646](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342646); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342647](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342647); log4j:log4j | 1.2.17 | critical | java | [SNYK-JAVA-LOG4J-572732](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-572732); net.minidev:json-smart | 1.3.2 | high | java | [SNYK-JAVA-NETMINIDEV-3369748](https://security.snyk.io/vuln/SNYK-JAVA-NETMINIDEV-3369748); org.apache.zookeeper:zookeeper | 3.6.3 | high | java | [SNYK-JAVA-ORGAPACHEZOOKEEPER-5961102](https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEZOOKEEPER-5961102); org.codehaus.jettison:jettison | 1.1 | high | java | [SNYK-JAVA-ORGCODEHAUSJETTISON-3168085](https://,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8215#issuecomment-1890593067:237,test,testing,237,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8215#issuecomment-1890593067,1,['test'],['testing']
Testability,"@droazen @cmnbroad @KevinCLydon This PR is blocking #6973, and it's been stuck for a while. I would like to offer my help in doing any work to get this closed out. #4571 is related and I could offer help on that and updating needed tests if this could help get all this closed out.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7021#issuecomment-789761202:232,test,tests,232,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7021#issuecomment-789761202,1,['test'],['tests']
Testability,@droazen @cmnbroad @lucidtronix @mepowers All tests passing! Hope we are now good to merge?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-438265002:46,test,tests,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-438265002,1,['test'],['tests']
Testability,"@droazen @cmnbroad This PR is blocking #6973, and it's been stuck for a while. I would like to offer my help in doing any work to get this closed out. #7021 is related and I could offer help on that and updating needed tests if this could help get all this closed out.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4571#issuecomment-789760761:219,test,tests,219,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4571#issuecomment-789760761,1,['test'],['tests']
Testability,"@droazen @cmnbroad sorry to bug you on this, but it looks like the last round of test failures were largely related to the free dockerhub account exceeding the max pulls. is there a chance you'd be able to restart the tests and/or review? thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-824992510:81,test,test,81,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-824992510,2,['test'],"['test', 'tests']"
Testability,@droazen @cmnbroad thanks for taking a look. I've added some direct unit tests for `PushPullTransformer` and `PushToPullIterator`.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5311#issuecomment-440308460:73,test,tests,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5311#issuecomment-440308460,1,['test'],['tests']
Testability,"@droazen @cwhelan Yes, it appears to be fixed. (Don't have a failing test that I can run on the old behavior, but a quick test of the latest code in master appears to have repaired the flaw.)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2037#issuecomment-358093905:69,test,test,69,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2037#issuecomment-358093905,2,['test'],['test']
Testability,"@droazen @davidbenjamin any thoughts regarding the last bullet above in https://github.com/broadinstitute/gatk/pull/6885#issuecomment-891907471 on possible integration tests? Started looking at this today and was wondering if you might have any suggestions. Ideally, we'd want to test that the exposure was done correctly through the 3 affected tools: HaplotypeCaller, Mutect2, and FilterAlignmentArtifacts. I can certainly take the approach outlined above and 1) on master, pick one or more integration tests for each tool, then generate results by changing the original unexposed constants and running on the relevant test data, 2) on this branch, commit those new results, then add corresponding versions of the integration tests that change the exposed inputs and check against the results. However, not sure if we'll want to clutter the repo with more test files just for this sort of exposing of constants, and such tests don't really feel complete anyway. So alternatively, I could probably write a script to do essentially the same thing and just check consistency between the branches for a bunch of randomly generated SW parameter values, perhaps also running on more substantial test files for each tool. I can document this process and then we can move on without committing any new tests or test files once we're satisfied that the exposure was done correctly. Or if you guys have additional suggestions, would be glad to hear them!. Finally, it looks like FilterAlignmentArtifacts doesn't have any integration tests for correctness---let me know if there are auxiliary tests we'd want to run there. Anyway, probably overthinking things, but the exposure was enough of a headache that I want to make sure I did it right. But would also rather fully hash out what to do beforehand, so I don't end up having to redo things after review.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-896314077:168,test,tests,168,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-896314077,12,['test'],"['test', 'tests']"
Testability,"@droazen @kcibul Would it be possible to dump the combinedGvcf from the merged tiledb here so we could try running that line through gatk3? . I'm very certain that if that method exits with 0 in gatk3 or gatk4 it will immediately result in a divide by 0 exception. I can't be 100% sure that this case would exit with 0 in gatk3 without actually testing it though. . If we were to assume that the result of this is 0 in both gatk3 and 4, what would the right thing to do here be? Output 0 for the annotation?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2658#issuecomment-299221012:345,test,testing,345,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2658#issuecomment-299221012,1,['test'],['testing']
Testability,"@droazen @kgururaj, we list out the INFO fields that are not currently supported in GenomicsDB. Below is the complete list. This will also cause the test to fail:. WARNING: No valid combination operation found for INFO field DS - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field ExcessHet - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field HaplotypeScore - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field InbreedingCoeff - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAC - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAF - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field DS - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field ExcessHet - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field HaplotypeScore - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field InbreedingCoeff - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAC - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAF - the field will NOT be part of INFO fields in the generated VCF records",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-293495550:149,test,test,149,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-293495550,1,['test'],['test']
Testability,"@droazen @lbergelson I've added a test merging many contigs to several contigs. I mentioned this briefly during the monday meeting, but will reiterate that for the purposes of testing out the merge contigs feature I'm using vcfs instead of gvcfs (I was able to get some vcfs that fit the purpose, not sure how to get gvcfs). . The idea is that these tests are specifically targeted to exercise the merge contigs portion of the logic. All the stuff that would be different for gvcfs (combining VCF attributes, etc) is tested by other tests and unaffected by this particular feature.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6681#issuecomment-692934659:34,test,test,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6681#issuecomment-692934659,6,"['log', 'test']","['logic', 'test', 'tested', 'testing', 'tests']"
Testability,@droazen @lbergelson i can't reproduce the error that travis is reporting on the pull req: https://travis-ci.org/broadinstitute/hellbender/builds/58990321; Here's what I run:. ```; git clone --depth=50 git://github.com/broadinstitute/hellbender.git broadinstitute/hellbender; cd broadinstitute/hellbender/; git fetch origin +refs/pull/383/merge:; git checkout -qf FETCH_HEAD; gradle assemble; gradle check; ```. and my tests all pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/383#issuecomment-94321119:419,test,tests,419,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/383#issuecomment-94321119,1,['test'],['tests']
Testability,"@droazen @ldgauthier I'm assuming the travis failure is not caused by this? looking at some of the travis logs its complaining about ""Timeout waiting for network availability"" and the previous travis CI in master failed too...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5970#issuecomment-519716794:106,log,logs,106,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5970#issuecomment-519716794,1,['log'],['logs']
Testability,"@droazen @magicDGS There's a test failure because the ADAM project relies on deprecated code in HTSJDK that was removed in 2.7.0. We'll either need to disable the ADAM functionality or get a patched version of ADAM. I have a [patch for ADAM](https://github.com/bigdatagenomics/adam/pull/1235), but I don't think they release very often. We could host a patched artifact until then.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2247#issuecomment-257909408:29,test,test,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2247#issuecomment-257909408,1,['test'],['test']
Testability,@droazen @mcovarr ; This incorporates the code from https://github.com/broadinstitute/gatk/pull/8231/files into gatk. There are two caveats that I've described above which may need input from the GVS team. . If tests are passing we should probably do a light review to make sure nothing is obviously bonkers in unintentional ways from the merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8256#issuecomment-1479964495:211,test,tests,211,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8256#issuecomment-1479964495,1,['test'],['tests']
Testability,"@droazen @samuelklee I rebased this. It's ready for review I think. I removed an existing argument in this pr, if we want I can deprecated it instead, it will probably take some extra logic to account for both arguments existing though.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6388#issuecomment-669411846:184,log,logic,184,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6388#issuecomment-669411846,1,['log'],['logic']
Testability,"@droazen @samuelklee this is a duplicate PR, I close the previous one. Travis was behaving strangely on the previous PR (oddly not picking up the correct commit for `continuous-integration/travis-ci/pr` test).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3183#issuecomment-311481750:203,test,test,203,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3183#issuecomment-311481750,1,['test'],['test']
Testability,@droazen @vdauwera -- sorry to bump this but I'm hitting this problem with additional unrelated samples and could provide additional test cases if this isn't enough to debug. Thanks much.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3466#issuecomment-352183647:133,test,test,133,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3466#issuecomment-352183647,1,['test'],['test']
Testability,"@droazen Actually, `IntelInflater` is already being used with block-gzipped VCFs. On this [line in htsjdk](https://github.com/samtools/htsjdk/blob/912c28bec415c430b43515652ccaf13222b07e7b/src/main/java/htsjdk/variant/vcf/AbstractVCFCodec.java#L629), the `AbstractVCFCodec` creates a `BlockCompressedInputStream` using the default `BlockGunzipper`, which is `IntelInflater` by default in GATK. I verified `IntelInflater` is used by running this GATK command with a debug version of GKL (to display usage info):; ```; ./gatk-launch CountVariants -V src/test/resources/large/dbsnp_138.b37.20.21.vcf.blockgz.gz; ```. We could add an issue to htsjdk to support different `Inflater` implementations for each block-gzipped VCF codec instance, but I don't think it's a high priority. I propose we close this issue.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2420#issuecomment-293929859:551,test,test,551,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2420#issuecomment-293929859,1,['test'],['test']
Testability,"@droazen Actually, its not. When I switched over to relying on a test instead of truncation, I omitted the picard tools from the test since there is a corresponding PR/test for Picard, so there is no need to wait. I'm going to rebase on current master to re-run the test, and then we can merge this (pending of course that we resolve the `AnnotatePairOrientation` status. @LeeTL1220 - should `AnnotatePairOrientation` be `@Experimental` or `@Beta` ? Currently now its tagged `@Beta` but says `Experimental` in the command line description.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5551#issuecomment-472552477:65,test,test,65,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5551#issuecomment-472552477,4,['test'],['test']
Testability,@droazen Added a test to BQSR spark,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2042#issuecomment-237341645:17,test,test,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2042#issuecomment-237341645,1,['test'],['test']
Testability,@droazen After wrangling with this for a few hours I couldn't quite even get rid of the chr20-21 b37 mini references. There are too many integration tests of deep parts of the engine that I don't feel comfortable messing with. I'm throwing in the towel.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5313#issuecomment-451712041:149,test,tests,149,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5313#issuecomment-451712041,1,['test'],['tests']
Testability,@droazen An existing integration test already tested the full pipeline including merging VCFs with GenomicsDB and creating the panel. I modified the input VCFs to contain multiallelic sites that previously failed.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6871#issuecomment-705910895:33,test,test,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6871#issuecomment-705910895,2,['test'],"['test', 'tested']"
Testability,@droazen Back at you with a couple of questions about the test cases / explanations and one minor grammatical edit.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4455#issuecomment-368604893:58,test,test,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4455#issuecomment-368604893,1,['test'],['test']
Testability,@droazen Back to you. I rebased the branch. I did not add unit tests for `makeNewSACs()` and `determineSACIndicesToUse()` because they are now private.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1852#issuecomment-239446149:63,test,tests,63,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1852#issuecomment-239446149,1,['test'],['tests']
Testability,"@droazen Can you re-assign to someone not me? This would also imply changes to the travis tests, to make sure that it is using the correct user. Probably other downstream effects that I have not determined.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3644#issuecomment-333545888:90,test,tests,90,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3644#issuecomment-333545888,1,['test'],['tests']
Testability,"@droazen Changes to the native code include removing SSE code, ifdef'ed code for profiling, and unused sandbox code. The goal is to reduce the amount of C code we need to maintain. Let me know if you have any concerns. We can have a code review after integrating into HaplotypeCaller. @lbergelson Thanks for helping debug the build. I doubt the code will build as is with clang, it currently uses gcc intrinsics to test machine capabilities. I added support for GATK_SKIP_NATIVE_BUILD env variable. Submitting changes to get debug info from Travis soon.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1504#issuecomment-185850134:103,sandbox,sandbox,103,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1504#issuecomment-185850134,2,"['sandbox', 'test']","['sandbox', 'test']"
Testability,@droazen Could you review this quickly? I moved my bogus screen scraping test so that it's less bogus :(,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/343#issuecomment-90224782:73,test,test,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/343#issuecomment-90224782,1,['test'],['test']
Testability,"@droazen Curious why this was closed as obsolete ? We still have the tool, there are no tests, and I don't see an obvious Picard equivalent, at least with a similar name.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1230#issuecomment-294154545:88,test,tests,88,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1230#issuecomment-294154545,1,['test'],['tests']
Testability,@droazen Didn't we try this before and start getting intermittently failing tests?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1769#issuecomment-214485232:76,test,tests,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1769#issuecomment-214485232,1,['test'],['tests']
Testability,"@droazen Do we still even need `LeftAlignIndels`? It seems to duplicate behavior of `LeftAlignAndTrimVariants`, which does have an integration test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/150#issuecomment-577852333:143,test,test,143,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/150#issuecomment-577852333,1,['test'],['test']
Testability,@droazen Do you still want to give me a memory patch to test?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-321352223:56,test,test,56,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-321352223,1,['test'],['test']
Testability,@droazen FYI I made a snapshot and pointed gatk-protected to it. All HaplotypeCaller-related unit tests and integration tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1918#issuecomment-232558536:98,test,tests,98,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1918#issuecomment-232558536,2,['test'],['tests']
Testability,"@droazen For some reason, the fix in `CommandLineProgram` from #2190 stopped working in this branch (although I couldn't reproduce locally), which is why I tried making the `CommandLineProgram` field in `FeatureManager` transient again to see if it fixed the issue. Which it did. I've now avoided the issue entirely by removing the need for the `CommandLineProgram` field, by passing the instance to the method that needs it. This also addresses the point that @cmnbroad made about serializing the whole tool. The tests pass with this change. This probably needs testing on Google Cloud. @jean-philippe-martin have you run this successfully with the new NIO library (0.5.1)?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2220#issuecomment-258810989:514,test,tests,514,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2220#issuecomment-258810989,2,['test'],"['testing', 'tests']"
Testability,"@droazen Here's the fix, but I'm only about 99.6% sure the tests will pass, so don't merge yet.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3383#issuecomment-318741849:59,test,tests,59,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3383#issuecomment-318741849,1,['test'],['tests']
Testability,@droazen I actually don't think most of those tests should be `cloud` tests. ; BucketUtilsTest.testIsCloudStorageURL for instance. It seems dangerous if that method requires being logged into gcloud. Separate issue for that here: https://github.com/broadinstitute/gatk/issues/2707,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2706#issuecomment-300806630:46,test,tests,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2706#issuecomment-300806630,4,"['log', 'test']","['logged', 'testIsCloudStorageURL', 'tests']"
Testability,@droazen I added a test with some documentation about the issue and the no-calls.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7740#issuecomment-1082329542:19,test,test,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7740#issuecomment-1082329542,1,['test'],['test']
Testability,"@droazen I addressed your comments, but I also added some more fixes (and tests!)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5863#issuecomment-486413930:74,test,tests,74,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5863#issuecomment-486413930,1,['test'],['tests']
Testability,"@droazen I can't speak to that. I have only tried one time with cloud buffering turned off and it didn't fail, but that's not enough to be sure that it never happens. I'll run more tests to see whether that can be confirmed or not. I'm sorry I didn't understand your question properly. I was just trying to see if cloud buffering turned off could give us enough memory back to enable batchSize 200, and it did.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300825294:181,test,tests,181,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300825294,1,['test'],['tests']
Testability,"@droazen I checked and `PrintReadsSparkIntegrationTest` and `PrintVariantsSparkIntegrationTest` both test GCS inputs and outputs, so it should be OK to take `PrintReadsSpark` and `PrintVariantsSpark` out of beta too.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5991#issuecomment-500831950:101,test,test,101,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5991#issuecomment-500831950,1,['test'],['test']
Testability,@droazen I did the easy ones and logged my tech debt in #6203 as per our Slack convo,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6079#issuecomment-539174090:33,log,logged,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6079#issuecomment-539174090,1,['log'],['logged']
Testability,"@droazen I didn't get a chance to do this yet. Once I do (most likely during next week), I will post here about any progress. However, as per @mlathara's message (https://github.com/broadinstitute/gatk/issues/6667#issuecomment-646167430), I do expect this to fix the issue. This potential fix has already been implemented by the bcbio_nextgen guys, so I'm going to be testing that precisely (https://github.com/bcbio/bcbio-nextgen/commit/336920a630d7f50b341eeeb4bad4ea6ab213f995). For what it's worth, I do think that setting up the VCF codec as default (instead of BCF) makes sense, at least until this bug is fixed. https://github.com/broadinstitute/gatk/issues/6667#issuecomment-646232210",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6548#issuecomment-646706502:368,test,testing,368,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6548#issuecomment-646706502,1,['test'],['testing']
Testability,"@droazen I didn't really look at runtime scientifically, so I can't comment on that. I pasted this table and explanation into the picard issue, but I think it had already been closed at that point, so I'm not sure how many people saw it:. > I have some _small_ test BAMs that are constructed by extracting reads overlapping a few hundred kb of genome from WGS samples. I made the table below using such a BAM made from the 1KG PCR-free WGS data from NA19625. Not ideal, but I would _think_ would perform fairly similar to a full WGS bam for compression purposes. What I see is that at compression level 1 the intel deflator produces a significantly larger BAM that the JDK deflator at level=1. . Compression Level | Intel Deflater File Size | Intel Deflater % of JDK l=5 | JDK Deflater File Size | JDK Delfater % of JDK l=5; ---|------------|----------|---------------|---------; 1 | 54,840,445 | 175.23% | 38,543,684 | 123.16%; 2 | 35,782,642 | 114.33% | 36,745,494 | 117.41%; 3 | 34,989,899 | 111.80% | 35,262,326 | 112.67%; 4 | 31,815,698 | 101.66% | 32,549,560 | 104.00%; 5 | 31,240,892 | 99.82% | 31,296,433 | 100.00%; 6 | 30,675,174 | 98.01% | 30,577,906 | 97.70%; 7 | 30,379,699 | 97.07% | 30,380,325 | 97.07%; 8 | 30,124,200 | 96.25% | 30,124,375 | 96.25%; 9 | 30,064,322 | 96.06% | 30,064,325 | 96.06%. That does seem to suggest that the intel deflator at `level=2` produces a BAM that is smaller than the JDK deflator at either level 2 or 1, and if it is also faster in your testing, that sounds pretty good for intermediate files. It's still ~15% bigger than a `level=5` BAM though, so unless the vast majority of users are switching over to CRAM for storage, I'd hesitate to change the default compression level in any of the toolkits.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3413#issuecomment-323840661:261,test,test,261,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3413#issuecomment-323840661,2,['test'],"['test', 'testing']"
Testability,"@droazen I didn't specify `-Xmx`, just gave more memory to the server (up to 32GB). The most memory BQSR consumed before it failed was about 28GB: ``Runtime.totalMemory()=28631367680``. I'm testing to see if scattering BaseRecalibrator and then calling GatherBQSRReports would help",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4334#issuecomment-364228046:190,test,testing,190,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4334#issuecomment-364228046,1,['test'],['testing']
Testability,"@droazen I don't really have much of an opinion about the loggers. I think we chose log4j2 pretty arbitrarily and because it seemed popular. We don't have very complex logging needs so any logger pretty much satisfied our needs. . If there's a good reason to switch to SLF4J with a log4j backend that seems fine to me. It makes sense to use the more general solution so that people can use whatever backend they want. . I do know that we've encountered a lot of issues with having multiple copies of different logging frameworks included as transitive dependencies on spark. So there may be some hassle switching over, we'd have to run tests on google cloud to make sure we don't start crashing all of a sudden for logger related classpath issues. . @magicDGS I don't think anyone here cares that much about which logger we're using as long as it doesn't get in our way. If you want to do the switchover I think we'd be happy to accept a pull request as long as it didn't cause problems with our spark tools. Are you able to run our spark tools on gcloud dataproc?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2176#issuecomment-259003257:58,log,loggers,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2176#issuecomment-259003257,7,"['log', 'test']","['logger', 'loggers', 'logging', 'tests']"
Testability,@droazen I fixed the tests (it was an errant find and replace error). I have spot checked the changes and it looks like nothing obviously off-target in there. I need another approval in order to finally merge this branch.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5913#issuecomment-602812944:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5913#issuecomment-602812944,1,['test'],['tests']
Testability,@droazen I fixed the tests. Can you take a look? I know you have opinions,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7947#issuecomment-1189114262:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7947#issuecomment-1189114262,1,['test'],['tests']
Testability,"@droazen I hacked one of the TrainVariantAnnotationsModelIntegrationTest cases to run in your Docker (only necessary because it seems like `gradlew test --tests *TrainVariantAnnotationsModelIntegrationTest` doesn't recognize tests that use a `DataProvider`, but perhaps I did something wrong). Here are the differences:. ```; (gatk) root@a87e0994889e:/repo# h5diff -v /repo/src/test/resources/large/org/broadinstitute/hellbender/tools/walkers/vqsr/scalable/train/expected/extract.nonAS.snpIndel.posUn.train.snpIndel.posOnly.IF.snp.trainingScores.hdf5 /repo/extract.nonAS.snpIndel.posUn.train.snpIndel.posOnly.IF.snp.trainingScores.hdf5. file1 file2; ---------------------------------------; x x / ; x x /data ; x x /data/scores . group : </> and </>; 0 differences found; group : </data> and </data>; 0 differences found; dataset: </data/scores> and </data/scores>; size: [445] [445]; position scores scores difference ; ------------------------------------------------------------; [ 60 ] -0.419202 -0.419202 5.55112e-17 ; 1 differences found; ```. Looks pretty negligible to me! :stuck_out_tongue_closed_eyes: Probably a result of the native code being called by the python/ML packages used in these tools; even minor changes in the compilers across Ubuntu versions might introduce differences like these. A quick fix might be to replace all system calls to `h5diff` in these tests with `h5diff --use-system-epsilon`; seems to do the trick here. But if that doesn't fix all test cases, then perhaps you can relax things with `h5diff -p EPSILON`, where `EPSILON` is a relative threshold. Probably OK to pick something like `1E-6`. OK if I leave it to you to try this or otherwise check the rest of the cases?. Sorry for the inconvenience! I think the exact-match test worked as intended here, but I probably could've put in better messaging originally. Unfortunately, it's a bit awkward to grab the output of system commands. And thanks for dealing with conda again (a necessary evil, unless we want ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8610#issuecomment-1848796931:148,test,test,148,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8610#issuecomment-1848796931,4,['test'],"['test', 'tests']"
Testability,"@droazen I have a PR for gatk-bwa-mem that adds a footer to the image file so that we can test integrity. I also added code to test every (I think) call that returns an error indication, and pass this info up the chain. Could you review the PR or delegate, please?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3209#issuecomment-313504079:90,test,test,90,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3209#issuecomment-313504079,2,['test'],['test']
Testability,@droazen I have added the tests you were asking for and changed the reference base code to the slower but safer version (plus this version should hopefully pass the tests now). Let me know if this looks good to you! Then I can rebase and merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/894#issuecomment-142348807:26,test,tests,26,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/894#issuecomment-142348807,2,['test'],['tests']
Testability,@droazen I have pushed the cache removal step down to a more testable point in the code and added the assertion to the existing testing infrastructure. Can you take a quick look at this branch so it can go in at some point?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5911#issuecomment-491914930:61,test,testable,61,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5911#issuecomment-491914930,3,"['assert', 'test']","['assertion', 'testable', 'testing']"
Testability,"@droazen I implemented the pr skipping on push builds if there's a pr branch. It seems to work. It has to spin up a vm to do the check, but that takes about a minute instead of many, and it avoids running tests and downloading lfs. The good things is that if it fails for some reason it should just continue on with the build, so flakiness in the github api or network connectivitiy will just result in some extra builds completing rather than extra failures. . <img width=""1054"" alt=""screen shot 2018-09-05 at 11 19 14 am"" src=""https://user-images.githubusercontent.com/4700332/45103843-c5b5ae00-b0fe-11e8-9934-0025af9836ee.png"">. I think I should add a github token though so we don't get api throttling. Should I just add one from my own account?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5156#issuecomment-418773830:205,test,tests,205,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5156#issuecomment-418773830,1,['test'],['tests']
Testability,"@droazen I investigated working in the other direction: i.e. refining the shading in google-cloud-java to remove the conflict. Unfortunately, I can't get it to work either. What I did was to shade less in google-cloud-java (see [this branch](https://github.com/tomwhite/google-cloud-java/tree/nio-bigquery)). With this change I could successfully run `ExampleBigQueryReader` from [this GATK branch](https://github.com/broadinstitute/gatk/tree/tw_jts_bigquery_spark_example): . ```; $ ./gradlew clean localJar; $ export GOOGLE_APPLICATION_CREDENTIALS=...; $ ./gatk ExampleBigQueryReader; ...; 14:16:43.468 INFO BigQueryUtils - Query returned 10 results.; ...; ```. However, the mini cluster for testing doesn't work any more:. ```; $ ./gradlew test -Dtest.single=ReadsSparkSinkUnitTest; org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSinkUnitTest.setupMiniCluster FAILED; java.lang.NoSuchMethodError: com.google.common.base.Objects.toStringHelper(Ljava/lang/Object;)Lcom/google/common/base/Objects$ToStringHelper;; ```. It seems that the Guava conflict can't be resolved either way, since the fundamental problem is that the internals of Hadoop (used for the mini cluster) depend on an older, incompatible version of Guava than BigQuery does.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5928#issuecomment-494393817:694,test,testing,694,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5928#issuecomment-494393817,2,['test'],"['test', 'testing']"
Testability,"@droazen I know it's too late now but for the future... I would still recommend requiring the author to do a manual rebase to clean up the commit history, otherwise later it's going to be a pain to do things like assemble coherent and succinct version notes. We end up with many lines in the logs that consist of ""addressing comments"" and ""fixing tests"", which are completely uninformative.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2131#issuecomment-246813776:292,log,logs,292,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2131#issuecomment-246813776,2,"['log', 'test']","['logs', 'tests']"
Testability,@droazen I loosened the failing test and responded to your comments? Anything else before we can get this in?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7660#issuecomment-1064190387:32,test,test,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7660#issuecomment-1064190387,1,['test'],['test']
Testability,"@droazen I posted the complete command line I used (the version is above). I posted a test.sam that reproducibly fails on my machine (OSX). And below is the log from my machine:. ```; 22:42:22.298 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/nhomer/miniconda3/envs/bfx/share/gatk4-4.1.8.1-0/gatk-package-4.1.8.1-local.jar!/com/intel/gkl/native/libgkl_compression.dylib; Aug 01, 2020 10:42:22 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 22:42:22.412 INFO HaplotypeCaller - ------------------------------------------------------------; 22:42:22.412 INFO HaplotypeCaller - The Genome Analysis Toolkit (GATK) v4.1.8.1; 22:42:22.412 INFO HaplotypeCaller - For support and documentation go to https://software.broadinstitute.org/gatk/; 22:42:22.412 INFO HaplotypeCaller - Executing as nhomer@ip-192-168-7-102.ec2.internal on Mac OS X v10.14.6 x86_64; 22:42:22.412 INFO HaplotypeCaller - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_192-b01; 22:42:22.412 INFO HaplotypeCaller - Start Date/Time: August 1, 2020 10:42:22 PM MST; 22:42:22.412 INFO HaplotypeCaller - ------------------------------------------------------------; 22:42:22.412 INFO HaplotypeCaller - ------------------------------------------------------------; 22:42:22.413 INFO HaplotypeCaller - HTSJDK Version: 2.23.0; 22:42:22.413 INFO HaplotypeCaller - Picard Version: 2.22.8; 22:42:22.413 INFO HaplotypeCaller - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 22:42:22.413 INFO HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 22:42:22.413 INFO HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 22:42:22.413 INFO HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 22:42:22.413 INFO HaplotypeCaller - Deflater: IntelDeflater; 22:42:22.413 INFO HaplotypeCaller - Inflater: IntelInflater; 22:42:22.413 INFO HaplotypeCaller ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6733#issuecomment-667631737:86,test,test,86,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6733#issuecomment-667631737,2,"['log', 'test']","['log', 'test']"
Testability,@droazen I profiled a lot and did some unit test experiments and basically there's no difference. Depending on average depths one or the other can be faster by up to 15 seconds per billion sites. I really just wanted to cull the list of open issues and had nothing against the old downsampler code. How about we close this PR *and* close Adam's GATK issue?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5074#issuecomment-433994089:44,test,test,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5074#issuecomment-433994089,1,['test'],['test']
Testability,@droazen I put a new github api token in and tested it here https://github.com/broadinstitute/gatk/pull/7537. It successfully skipped. I'm not sure what went wrong but I must have messed up the token when I rotated keys. . Going to close this. Reopen if you see this again going forward. The token is set directly in travis so it propagates without a rebase.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7536#issuecomment-955006474:45,test,tested,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7536#issuecomment-955006474,1,['test'],['tested']
Testability,"@droazen I ran #4314 and it did not solve the problem. When I reverted the ADAM patch from the #4314 branch I got the normal performance. @fnothaft I wish I knew. @lbergelson said he saw more logs being produced. Another (untested) theory is that the Kryo registrations changed somehow. GATK only uses the 2bit code from ADAM, so it is surprising that it is having such an effect. I'm not sure how to track down the problem at this point.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4376#issuecomment-366294101:192,log,logs,192,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4376#issuecomment-366294101,1,['log'],['logs']
Testability,"@droazen I ran the quick test, it looks like we're still slow. We'll first have to make sure the result is correct anyways, and then do a proper profiling to see where the time goes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/987#issuecomment-148549971:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/987#issuecomment-148549971,1,['test'],['test']
Testability,@droazen I rebased this on master to pick up the disabling of htsget tests so it can pass tests. I think I responded to everything - feel free to merge if so.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6800#issuecomment-689832810:69,test,tests,69,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6800#issuecomment-689832810,2,['test'],['tests']
Testability,@droazen I resolved your comments and fixed the test I broke. Can this be merged so we can move forward on that other branch?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5887#issuecomment-567970124:48,test,test,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5887#issuecomment-567970124,1,['test'],['test']
Testability,@droazen I responded to your comments. I've additionally some changes to the readme to include information about the test environment variables. Let me know if there are horrible spelling errors that I somehow missed.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2399#issuecomment-278802390:117,test,test,117,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2399#issuecomment-278802390,1,['test'],['test']
Testability,"@droazen I think I see how #4801 could introduce a rounding error that creates an extremely small positive log10 probability, which triggers the error. The old code was ; ```; log10PNoVariant += log10GenotypePosteriors[HOM_REF_GENOTYPE_INDEX]; ```. and the new code to handle spanning deletion is; ```; log10PNoVariant += MathUtils.log10SumLog10(nonVariantLog10Posteriors); ```; where `nonVariantLog10Posteriors` includes but the hom ref posterior *and* the posteriors of ref / span del het genotypes. So instead of A, where A is the log 10 hom ref posterior, we have log10(10^A + 10^B), where B is the ref/span del het log10 posterior. This latter quantity should never be positive, but the `log10SumLog10` method it relies on doesn't know that and has finite precision. Given that the problematic number is truly miniscule, `2.559797571100845E-21`, my money is on that explanation. I think a reasonable solution is just to replace it by zero, because we know that's where it comes from. That is, the code should become; ```; log10PNoVariant += Math.min(MathUtils.log10SumLog10(nonVariantLog10Posteriors), 0);; ```. If there is a way for me to debug without having to learn to use GenomicsDB I would like to confirm this myself. Otherwise, @sooheelee can I give you a jar to try out on the tutorial data where you spotted the problem earlier?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4975#issuecomment-402175972:534,log,log,534,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4975#issuecomment-402175972,1,['log'],['log']
Testability,@droazen I think I've addressed all your comments. Going to merge when tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2675#issuecomment-299953549:71,test,tests,71,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2675#issuecomment-299953549,1,['test'],['tests']
Testability,"@droazen I think we could still leave this open and when Google updates the preview image on dataproc to 2.0.2, I'll go back and test it again without messing the logging level.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2277#issuecomment-262641183:129,test,test,129,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2277#issuecomment-262641183,2,"['log', 'test']","['logging', 'test']"
Testability,@droazen I tried the tests locally but I still have to install a bunch of things for them to work. I expect to have time for it later this week.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232410013:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232410013,1,['test'],['tests']
Testability,@droazen I tried to relax absolutely everything but i stopped short of that. I have a test that any of the optional fields we previously special cased can now have any arbitrary value in them (which was the problem that sunk us here). However if they make DRASTIC changes to future gencode releases (like adding new top level transcript types or inventing a new reference orientation than + or -) then all bets are off...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8351#issuecomment-1581286010:86,test,test,86,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8351#issuecomment-1581286010,1,['test'],['test']
Testability,"@droazen I understand that -- the issue is that `ScriptExecutor` does not print either stdout or stderr from the external process unless debug is enabled (cf. `ScriptExecutor.java` ln. 92):. ```; //if debug is enabled, output the stdout and stderr, otherwise capture it to a buffer; if (logger.isDebugEnabled()) {; processSettings.getStdoutSettings().printStandard(true);; processSettings.getStderrSettings().printStandard(true);; } else {; processSettings.getStdoutSettings().setBufferSize(8192);; processSettings.getStderrSettings().setBufferSize(8192);; }; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4629#issuecomment-379385291:287,log,logger,287,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4629#issuecomment-379385291,1,['log'],['logger']
Testability,@droazen I would rather not get into why exactly the CNV tests are relying on bogus intervals that don't pass validation and what to do about it on this branch. I would rather get this version of things in now to help in at least the -L interval file use case,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7295#issuecomment-860948476:57,test,tests,57,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7295#issuecomment-860948476,1,['test'],['tests']
Testability,@droazen I'd like this to squeeze into 4.1. Tests pass locally after the second commit.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5615#issuecomment-458285149:44,Test,Tests,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5615#issuecomment-458285149,1,['Test'],['Tests']
Testability,"@droazen I'm not sure what sort of test I can have for this change. Any thoughts? . It's good that I looked at this again, it had a stupid bug in it the way I did it at first.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2366#issuecomment-276525494:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2366#issuecomment-276525494,1,['test'],['test']
Testability,"@droazen If possible, we should try to get this in before tonight's cron job runs. Also, I think we should make this change either way, since otherwise we get a lot of unnecessary log output.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3715#issuecomment-337698045:180,log,log,180,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3715#issuecomment-337698045,1,['log'],['log']
Testability,@droazen Integration tests went from ~58 minutes to ~50 minutes as a result of this branch.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4992#issuecomment-403528803:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4992#issuecomment-403528803,1,['test'],['tests']
Testability,"@droazen It occurs to me that one other axis that might be worth looking at is quality score quantization. I think the BAMs I was looking at were ones that had [unrecalibrated] full range quality scores, not ones that had been quantized to ~8 or fewer values. I wonder if the test files used above were all HiSeq-X whether that could have made a difference.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3413#issuecomment-320341028:276,test,test,276,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3413#issuecomment-320341028,1,['test'],['test']
Testability,@droazen Its a compile issue - I left out a `serialVersionUID` in new test code. Its a quick fix - I'll push a commit.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6718#issuecomment-705740891:70,test,test,70,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6718#issuecomment-705740891,1,['test'],['test']
Testability,"@droazen Looks good. Excellent description of what's going on, thanks for all the comments. Major improvement. . I don't know what we should do about tests, in general I like having a test for every public method, but IntervalUtils is a morass of indirectly tested things. Feel free to merge once you've addressed the very minor comments (up to you what you want to do with additional tests cases or not.)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/768#issuecomment-126107710:150,test,tests,150,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/768#issuecomment-126107710,4,['test'],"['test', 'tested', 'tests']"
Testability,"@droazen Looks good. I'm so glad to see that repetitive loading code gone. Just a few minor comments. Feel free to merge when tests pass. (providing that they do pass... I think you've changed the behavior of a few tools to now pull in unmapped reads, which is an improvement, but it's possible the tests are assuming that unmapped reads are ignored)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/955#issuecomment-146009870:126,test,tests,126,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/955#issuecomment-146009870,2,['test'],['tests']
Testability,"@droazen Major improvements here. Do you think we should add a table of contents under the quick start to help people got to what they need? I think it might not be a bad idea to move the developer specific information, i.e. testing, style information, uploading archives, etc into a developer specific readme.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1327#issuecomment-163739004:225,test,testing,225,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1327#issuecomment-163739004,1,['test'],['testing']
Testability,"@droazen Mark has been CNV tech lead for some time now, so I’ll let him take a first crack at this or delegate. However, I will point out #4782, which is tangentially related. Looks like handling the global compiler lock appropriately should also address the main issue. Finally, I’ll add that we should include such computing environments in our future testing infrastructure.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547470844:354,test,testing,354,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547470844,1,['test'],['testing']
Testability,"@droazen No, it was not tested or merged. I don't want to merge until we can confirm that the fix works. Is there any way for me to get a copy of the failing BAM file? /cc @achevali @lbergelson",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2113#issuecomment-291171222:24,test,tested,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2113#issuecomment-291171222,1,['test'],['tested']
Testability,"@droazen Now that https://github.com/broadinstitute/gatk/pull/6634 is merged, can we move forward with this PR? If you haven't had time to check them out already, do you want to take a look at the changes I made to allow `GenotypeGCVFsIntegrationTest` update its own test files?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6859#issuecomment-715456004:267,test,test,267,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6859#issuecomment-715456004,1,['test'],['test']
Testability,@droazen OK - back to you for another round. I added that dbSNP test like we talked about.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6660#issuecomment-686514853:64,test,test,64,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6660#issuecomment-686514853,1,['test'],['test']
Testability,@droazen OK - the tests in `DataSourceUtilsUnitTest` pass for me locally. I had to substantially refactor the tests and I added some log messages and some `final` modifiers to clean up some other Intellij warnings.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6807#issuecomment-694956600:18,test,tests,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6807#issuecomment-694956600,3,"['log', 'test']","['log', 'tests']"
Testability,"@droazen OK, just added another 2 tests and rebased. Can you take another look at this? I think the issue I reported above has been resolved.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6054#issuecomment-534654120:34,test,tests,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6054#issuecomment-534654120,1,['test'],['tests']
Testability,"@droazen Off the top of my head, we. * cache `log10(n)` and `log10(n!)` up to some large value.; * have a fast version of `log10SumLog10(double a, double a)` that works as follows: we want to compute `log10(10^a + 10^b)`. WLOG `a < b`, so this comes out to `a + log10(1 + 10^(a - b))`. I believe we cache the values of `log10(1 + 10^(x)` over a finely-spaced grid and round `a-b` to the nearest cached `x`. . There might not be anything else. There's a lot of stuff to keep calculations in log space for numerical stability but those don't avoid `log10()` and `Math.pow()`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2577#issuecomment-292584322:490,log,log,490,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2577#issuecomment-292584322,1,['log'],['log']
Testability,"@droazen Per our discussion about whether the default stringency should be SILENT or STRICT, I re-ran the BaseRecalibrator integration tests (remember these were the only tests that failed with STRINGENCY=STRICT, at least non-Spark tests which is all that are affected by this PR) to see why they failed. There are about 15 tests, totalling about 10 bams used there that fail validation. Based on Picard validation, some have >100 errors, some have a handful; the most common errors are:. -Mate not found for paired read; -Mate Alignment start should be 0 because reference name = *; -Mapped mate should have mate reference name. There are also a handful of missing NM tags. I have the file-by-file breakdown if you want to see it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1439#issuecomment-174663312:135,test,tests,135,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1439#issuecomment-174663312,4,['test'],['tests']
Testability,@droazen Please review. I'll also launch a test of this tonight to make sure the changes didn't introduce any stupid bugs.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3327#issuecomment-317091130:43,test,test,43,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3327#issuecomment-317091130,1,['test'],['test']
Testability,"@droazen Please take a look at this. I believe this has a pair of pretty good test cases, but please suggest additional ones.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3675#issuecomment-334854792:78,test,test,78,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3675#issuecomment-334854792,1,['test'],['test']
Testability,@droazen Please take a look. Note that I removed the functional programming in `SelectVariants.setFilteredGenotypeToNocall()`. I could not think of a clean way to implement the added logic.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1871#issuecomment-238309419:183,log,logic,183,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1871#issuecomment-238309419,1,['log'],['logic']
Testability,@droazen Rebased and waiting for tests.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/685#issuecomment-123832048:33,test,tests,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/685#issuecomment-123832048,1,['test'],['tests']
Testability,@droazen Test enabled.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3398#issuecomment-320052914:9,Test,Test,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3398#issuecomment-320052914,1,['Test'],['Test']
Testability,"@droazen Thank you for the confirmation that HaplotypeCaller performs separate filtering passes on the read mapping qualities, and that the code on line 729 of HaplotypeCallerEngine.java (method ```filterNonPassingReads()``` ) is indeed executing subsequent to the ```MappingQualityReadFilter```. May I suggest, however, that MAPQ values less than 20 might not necessarily lead to an increase in FP variant calls? My understanding is that HaplotypeCaller uses MAPQ values only in a nonparametric rank sum test, in which case MAPQ is treated as an ordinal. This seems appropriate since the magnitude of a MAPQ value depends both on the data and on the computational model the read aligner uses to calculate it. With this in mind, a set of mappings with MAPQ in a lower range (e.g., ```--minimum-mapping-quality 10``` and a correspondingly lower ```--maximum-mapping-quality``` as well) might very well be appropriate for variant calling. So changing the semantics of ```MappingQualityReadFilter``` or parameterizing the currently-hardwired MAPQ range would enable additional control without affecting performance. @jamesemery I will watch for the HaplotypeCaller update that implements that functionality. And if you have a moment, could you please point me to the code that might be adversely affected by decreasing the low-end MAPQ threshold? I might have some ideas about that (or not!)... Thanks again!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6854#issuecomment-701512278:505,test,test,505,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6854#issuecomment-701512278,1,['test'],['test']
Testability,@droazen Thank you for the thorough explanation. That makes sense. For now I've changed `presorted = false` and that integration test is now passing (meaning the output now matches GATK3). Back to you!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1853#issuecomment-224706860:129,test,test,129,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1853#issuecomment-224706860,1,['test'],['test']
Testability,"@droazen That's probably the best way to do it, although I don't think we can be sure of a quick fix until we have a failing unit test for this on GCS. The turnaround time for manual testing is slow (for me at the moment). If someone could write such a test that would be very helpful.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2287#issuecomment-265800104:130,test,test,130,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2287#issuecomment-265800104,3,['test'],"['test', 'testing']"
Testability,@droazen The PR is #6544. James has reviewed and requested a few more tests. It's working fine on validations including ~30 exomes and ~15 genomes.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6533#issuecomment-611223334:70,test,tests,70,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6533#issuecomment-611223334,1,['test'],['tests']
Testability,@droazen The user provided test data(problematic BAM file and its md5sum): https://drive.google.com/drive/folders/1a6q_c7xNlsFqG1B3TdrdVL51_QB5e7RD; The command they used:; `gatk SplitNCigarReads -R hg38_primary_refseq.fa -I SOD1P_A272C_rep2.Dedup.bam -O SOD1P_A272C_rep2.Split.bam`. Additional info: The original raw data is publicly available in the SRA: SRR5273292,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6776#issuecomment-689025052:27,test,test,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6776#issuecomment-689025052,1,['test'],['test']
Testability,@droazen There are tests for the file handling in htsjdk but not a specific one for MergeVcfs.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6702#issuecomment-660253457:19,test,tests,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6702#issuecomment-660253457,1,['test'],['tests']
Testability,"@droazen This does not affect any of the integration tests or unit tests in gatk-protected, except insofar as `InfiniteRandomMatingPopulationModel` must be renamed.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1855#issuecomment-222225770:53,test,tests,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1855#issuecomment-222225770,2,['test'],['tests']
Testability,"@droazen This is a straight-up port -- it was copy and paste except I had to update some method names, like `alleleCount()` -> `numberOfAlleles()` and `sampleIndex` -> `indexOfSample`. And of course I couldn't port the changes to integration tests md5s.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2710#issuecomment-301089484:242,test,tests,242,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2710#issuecomment-301089484,1,['test'],['tests']
Testability,@droazen This is still failing after re-run. Looks like it's an oom issue. Tests pass locally. Any thoughts?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/915#issuecomment-142618506:75,Test,Tests,75,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/915#issuecomment-142618506,1,['Test'],['Tests']
Testability,"@droazen This should be ready for a second review. I refactored it. I don't have direct tests for tiledb in FeatureDataSource tests since I included them in GenomicsDBIntegration test, let me know if you think we need them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1975#issuecomment-235097132:88,test,tests,88,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1975#issuecomment-235097132,3,['test'],"['test', 'tests']"
Testability,"@droazen Those data are fine to share. The resources/VariantsEval/*.vcf are all either anonymized or (public) 1000G samples. @bbimber since we now include all the test data in the repo, we restrict ourselves to chromosomes 19 and 20 (there should already be a chromosome 19 and 20 reference fasta in the repo and probably the dbsnp too). Most of the files use just variants from 20, but MendelianViolationEval data is on chromosome 1 and will need to be modified. I'd love for all our test data to be valid VCFs, so I wouldn't want to just change 1 to 20 (because the reference allele won't match). Maybe there's a quick and dirty way to change the alleles?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-358052355:163,test,test,163,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-358052355,2,['test'],['test']
Testability,@droazen Updated the test so it's more stringent,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4167#issuecomment-358339959:21,test,test,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4167#issuecomment-358339959,1,['test'],['test']
Testability,@droazen What's the status of the failing WDL tests?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8889#issuecomment-2192905226:46,test,tests,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8889#issuecomment-2192905226,1,['test'],['tests']
Testability,"@droazen When we left off you showed me how to use JProfiler (which I now use regularly) and had pointed me to instructions for running GATK on a Spark cluster. I realize I'm going to need another round of hand-holding, because I'm not sure which Spark cluster to test on, and I'm not sure which command to test. And beyond measuring total runtime and looking for any new hotspots in JProfiler I don't know what else to measure. Could I get some more help from someone on the engine team?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4154#issuecomment-393933239:264,test,test,264,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4154#issuecomment-393933239,2,['test'],['test']
Testability,"@droazen Yeah, that would work - didn't think of it that way :) I just ran a quick test using the following command, while changing the `end`:. ```; time( java -jar genomics-tools-client-java-v1beta2.jar getreferencebases --id EPDikenvqJioOA --start 1 --end 1000000 ); ```. There seems to be a point where it starts to get faster when the regions are longer or if you have many multiple small-region requests:. | start | end | time to retrieve region (seconds) | total human genome | total time retrieve genome (seconds) |; | --- | --- | --- | --- | --- |; | 1 | 1000 | 2.13 | 3234830000 | 6890187.9 |; | 1 | 100000 | 2.183 | 3234830000 | 70616.3389 |; | 1 | 1000000 | 4.087 | 3234830000 | 13220.75021 |; | 1 | 10000000 | 22.328 | 3234830000 | 7222.728424 |; | 1 | 1000000000 | 298.418 | 3234830000 | 965.3314989 |. Looks promising but I'm still curious of the offical times :). ~p",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/567#issuecomment-112884863:83,test,test,83,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/567#issuecomment-112884863,1,['test'],['test']
Testability,"@droazen [OSU Open Source Lab](http://osuosl.org/services/powerdev) provides the POWER8 cluster for open-source projects. Is it usable for your testing on PPC? Many open-source projects are using it. . With the source tree in a single repo that I propose, changes that are specific to AVX will be made only for the files under ""avx/"" directory, which are not used for building the PPC binary. For example, build.gradle will specify ""avx/"" when building the binary on x86_64 (""power8/"" on ppc64le). If the files under ""common/"" are changed (e.g., the package name is renamed from hellbender to gatk4), the changes should work on PPC if the tests don't fail on x86_64.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1748#issuecomment-215324733:144,test,testing,144,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1748#issuecomment-215324733,2,['test'],"['testing', 'tests']"
Testability,"@droazen a few minor tests I missed, but this should be good to go otherwise. I did the refactor for Evoquer and I think everything else has been addressed.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4947#issuecomment-514690456:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4947#issuecomment-514690456,1,['test'],['tests']
Testability,@droazen added a quick unit test that failed without my change but passes now. look ok?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5341#issuecomment-432078324:28,test,test,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5341#issuecomment-432078324,1,['test'],['test']
Testability,"@droazen added a test, back to you.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6147#issuecomment-529657131:17,test,test,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6147#issuecomment-529657131,1,['test'],['test']
Testability,@droazen and @akiezun I added the separate unit test as well as the (currently broken) regression test. The issue that's preventing the regression test from running is #1865.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1853#issuecomment-222237452:48,test,test,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1853#issuecomment-222237452,3,['test'],['test']
Testability,@droazen and/or @jonn-smith: is there anything else you need on this PR? It appears the test is passing,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1622564392:88,test,test,88,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1622564392,1,['test'],['test']
Testability,"@droazen any thoughts how we should proceed here, if at all? @ldgauthier reminded me that this story was unfinished and is getting a little stale. @fleharty take note if we want to report progress on this front to our MalariaGEN collaborators. On my end, there are a couple of things to do:; - [x] rebase and resolve conflicts; - [x] change TSV input as discussed above; - [x] add doc strings for new arguments; - [x] add integration tests to make absolutely sure exposure was done correctly, perhaps? I'm open to discussion about how this should be done. Complete coverage here will be difficult and perhaps not worth the effort, but I can probably put in a few tests that make sure changing the hard-coded values in master and doing the same via the exposed parameters in this branch have the same effect on a few existing test cases. However, while I'm doing the last three, I wonder if we could run whatever canonical evaluations/optimizations we have to see whether it's worth consolidating some of the parameter sets at this stage? I think there's an argument for having at least two sets (haplotype-to-reference + read-to-haplotype), but I'm not sure how to justify having a separate set for dangling heads/tails. But also not sure which set the latter should be consolidated with---@jamesemery thoughts? Again, let me reiterate that it seems that many of these parameter values were chosen arbitrarily (or, if not, that the procedure for choosing them has been lost). As a start, you can see the results of some optimizations I did on the CHM mix on slide 15 at https://docs.google.com/presentation/d/1zGuquAZWSUQ-wNxp8D6HhGNjIaFcV0_X9WAS4LODbEo/edit?usp=sharing Here, I optimized over haplotype-to-reference + read-to-haplotype SW parameters on various metrics after variant normalization using vcfeval. These optimizations were done using the Bayesian optimization framework I prototyped long ago (see https://github.com/broadinstitute/gatk-evaluation/tree/master/pipeline-optimizer and http",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-891907471:434,test,tests,434,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-891907471,3,['test'],"['test', 'tests']"
Testability,@droazen back to you. Tests fixed locally and I will rebase and merge AlleleSubsettingUtils now.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7655#issuecomment-1026919246:22,Test,Tests,22,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7655#issuecomment-1026919246,1,['Test'],['Tests']
Testability,@droazen can you run it on GSC or maybe ask @jean-philippe-martin ? I put the bam file in the hellbender-validation/test-input/NA12878 bucket,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/995#issuecomment-170034661:116,test,test-input,116,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/995#issuecomment-170034661,1,['test'],['test-input']
Testability,"@droazen didn't you have an objection to these PRs, (this one and #5451)? What was the issue with unifying the test code again?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5723#issuecomment-519560848:111,test,test,111,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5723#issuecomment-519560848,1,['test'],['test']
Testability,"@droazen do we still care about this? Given that we've been moving to non-exact match integration tests and fuzzy comparisons in production, maybe this isn't worth the effort.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1572#issuecomment-590346422:98,test,tests,98,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1572#issuecomment-590346422,1,['test'],['tests']
Testability,@droazen do you have any logs of the failed runs?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162537544:25,log,logs,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162537544,1,['log'],['logs']
Testability,@droazen do you have any test data with the conditions that you want to support?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2442#issuecomment-307844048:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2442#issuecomment-307844048,1,['test'],['test']
Testability,"@droazen how about I first push to a new branch on broadinstitute:, so we can run the Travis tests on this code?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232108937:93,test,tests,93,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232108937,1,['test'],['tests']
Testability,@droazen it may be prudent to also include `innerOpen` in the retry logic.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3253#issuecomment-314825851:68,log,logic,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3253#issuecomment-314825851,1,['log'],['logic']
Testability,@droazen looks good. Merge when the tests pass,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4430#issuecomment-367144253:36,test,tests,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4430#issuecomment-367144253,1,['test'],['tests']
Testability,"@droazen ok, please rereview (assuming tests pass)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/258#issuecomment-78069930:39,test,tests,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/258#issuecomment-78069930,1,['test'],['tests']
Testability,@droazen or @jonn-smith: checking back: any chance someone would be able to approve the workflow so tests can run?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1607873947:100,test,tests,100,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1607873947,1,['test'],['tests']
Testability,"@droazen please review. don't be alarmed by the number of files - a whole bunch of test data is there as well as import fixes. The important code is in VariantFiltration and in the engine classes: `FeatureManager`, `VariantDataSource`, `FeatureContext`",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/614#issuecomment-119014252:83,test,test,83,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/614#issuecomment-119014252,1,['test'],['test']
Testability,"@droazen revised the code, but got error in rebasing:; `error: could not apply 37f19b8... disabled pairHMM binary build on PPC64LE; fixed floating comparison issue; `; Here is the list I saw when running: `git rebase -i upstream/master`:. ```; pick 37f19b8 disabled pairHMM binary build on PPC64LE; fixed floating comparison issue; pick 02a5c45 fixed tab/space; pick 7229770 determine the number of spark cores to use from env. var.; disable IntelDeflator testing; pick 42d6661 don't use dataflow serializablefunction; pick 856243d adding gatk-launch to the jar; pick 71a6feb add IBM to AUTHORS; pick 23d9d6e determine the number of spark cores to use from env. var.; pick 3d0017f disable IntelDeflator testing; fix bug left behind; pick 3c078ad revised determineDefaultSparkMaster() method after review; ```. I also don't recognize commits `42d6`, `8562`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1776#issuecomment-215601277:456,test,testing,456,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1776#issuecomment-215601277,2,['test'],['testing']
Testability,"@droazen tests pass -- look good enough? (My other PR merged this branch, so this should go in first.)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6168#issuecomment-535164332:9,test,tests,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6168#issuecomment-535164332,1,['test'],['tests']
Testability,"@droazen thanks for the quick response! Just to be clear, my concerns were about testing that I didn't somehow screw up the original behavior through the exposure, not just testing that *some* behavior was exposed. But message received---will keep things on the simple side!. Also, please see the plots in #5564 to get an idea of the effect on outputs, if you haven't already. Would appreciate any thoughts you might have on that thread!. Will try to get this done in the next day or two, thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-896328697:81,test,testing,81,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-896328697,2,['test'],['testing']
Testability,"@droazen thanks for the review. I have now addressed all of your feedback, with the main changes being; - Revert the change to ShardBoundary that uses the padded interval as its interval, and use an anonymous class instead.; - Add a new join strategy (OVERLAPS_PARTITIONER) so that running BQSR can be done using the old way still.; - Add a check for overly long read sizes. If exceeded the job will fail with an exception.; - Be more conservative about the partition end point by using the maximum read length, rather than just the length of the read that happens the start the next partition.; - Rather than making a field in FeatureManager transient, do a better job of reinstating the field that is not serializable (a logger).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2190#issuecomment-257368260:723,log,logger,723,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2190#issuecomment-257368260,1,['log'],['logger']
Testability,@droazen thanks. I've created https://github.com/broadinstitute/gatk/pull/2306 which reverts the commits that caused the problem on GCS. I've tested the above command (MarkDuplicatesSpark) on GCS and it works fine.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2287#issuecomment-265998571:142,test,tested,142,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2287#issuecomment-265998571,1,['test'],['tested']
Testability,"@droazen that looks very bad. I don't know why my own testing didn't fail with this. It looks like unless gcloud quickly does a dot release, we'll be obliged to make our own nio jar for a bit :(",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2220#issuecomment-257687010:54,test,testing,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2220#issuecomment-257687010,1,['test'],['testing']
Testability,"@droazen the bam that I added was aligned with minimap2. However, it is a really small BAM, so I could not run it through the integration tests. It sounds useful to add minimap2-aligned bam to HaplotypeCallerIntegrationTest. Can you or @jamesemery point me to a suitable BAM for that?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8337#issuecomment-1558588144:138,test,tests,138,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8337#issuecomment-1558588144,1,['test'],['tests']
Testability,"@droazen there might be some new test failures (which I will address if/when they arise), but this is ready for re-review.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7670#issuecomment-1041936461:33,test,test,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7670#issuecomment-1041936461,1,['test'],['test']
Testability,@droazen this has passed tests,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7295#issuecomment-865315733:25,test,tests,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7295#issuecomment-865315733,1,['test'],['tests']
Testability,@droazen this is ready for review now. The tests failures are all due to accidentally getting htjsdk 2.5.1 and are fixed in the commit that's running now.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1975#issuecomment-233023985:43,test,tests,43,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1975#issuecomment-233023985,1,['test'],['tests']
Testability,@droazen would you like me to take care of that by making a branch for @meganshand to test?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1950#issuecomment-300902310:86,test,test,86,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1950#issuecomment-300902310,1,['test'],['test']
Testability,"@droazen yes, that was my initial inclination, but @jamesemery suggested TSV input in https://github.com/broadinstitute/gatk/issues/6863#issuecomment-705611993. I do log the values as a compromise, but I can understand if you might want to see them in the header. Happy to go back and change this upon review, but the table approach seems to make things easier on me for experimenting, at least.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-708470566:166,log,log,166,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-708470566,1,['log'],['log']
Testability,"@droazen you were asking for a check of the performance. I ran the following two commands:. ```; $ ./gatk-launch PrintReads -I gs://$MYBUCKET/CEUTrio.HiSeq.WGS.b37.ch20.1m-2m.NA12878.bam -O gs://$MYBUCKET/pr.bam; $ ./gatk-launch PrintReads -I gs://$MYBUCKET/CEUTrio.HiSeq.WGS.b37.ch20.1m-2m.NA12878.bam -O /tmp/pr.bam; ```. output to: | local disk | GCS; --|--|--; run 1 | 0.12 min | 0.68 min; run 2 | 0.12 min | 0.29 min; run 3 | 0.12 min | 0.28 min; **median** |**0.12 min** | **0.29 min**. So it looks like there's a significant performance difference. For what it's worth, copying the output file to GCS from my desktop takes 3.5s. The log when running PrintReads indicates:. ```; 11:06:13.011 INFO PrintReads - HTSJDK Defaults.COMPRESSION_LEVEL : 1; 11:06:13.011 INFO PrintReads - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 11:06:13.011 INFO PrintReads - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 11:06:13.011 INFO PrintReads - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-336978915:640,log,log,640,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-336978915,1,['log'],['log']
Testability,"@droazen, @lbergelson I have the following argument to the tool:. ```java; @Argument(fullName = ""read-tags"", doc = ""read tag names to recover""); public List<String> readTags = DEFAULT_READ_TAGS;; ```. On the command line I want to say. ```; java -jar gatk.jar …; ...; --read-tags RX; ```. and want readTags to be a singleton list. But in my test it's not parsing the arguments correctly---what am I doing wrong here?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7739#issuecomment-1081090913:341,test,test,341,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7739#issuecomment-1081090913,1,['test'],['test']
Testability,"@droazen, I have pushed a debugging test. It just prints out all the keys and not private and not id values in the service json pointed by GOOGLE_APPLICATION_CREDENTIALS env. Would it be possible to accept this into the nalinigans_genomicsdb_uri_support branch, so I can browse through the stdout for that test on Travis? By the way, the failures in the build seem to be unrelated to my change. Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5017#issuecomment-423026481:36,test,test,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5017#issuecomment-423026481,2,['test'],['test']
Testability,"@droazen, I think I have pushed most of the changes requested -. * Moved out `appendPathToDir` from BucketUtils to IOUtils; * `appendPathToDir` now uses Path.resolve() to append a given path to dir; * If a workspace already exists and `overExistingWorkspace` is false, a `UnableToCreateGenomicsDBWorkspace` exception is thrown while creating a GenomicsDB workspace.; * Made sure all paths passed to GenomicsDB are absolute.; * Introduced `gendb.hdfs:` and `gendb.gs:` URI schemes in addition to the existing `gendb:` scheme for identifying Cloud paths in GenomicsDB with unit testing for these new schemes.; * Added unit tests to test writing to GenomicsDB workspace/arrays to GCS and then reading/querying from the same GenomicsDB instance from GCS with validation.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5017#issuecomment-415611303:576,test,testing,576,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5017#issuecomment-415611303,3,['test'],"['test', 'testing', 'tests']"
Testability,"@droazen, I think that the tests are failing here because a cromwell issue...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3175#issuecomment-324277969:27,test,tests,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3175#issuecomment-324277969,1,['test'],['tests']
Testability,"@droazen, I updated the PR message to describe the changes, because I tried to get all the code referring to test resources packaged in src/test. Now it should pass the tests too.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-324295384:109,test,test,109,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-324295384,3,['test'],"['test', 'tests']"
Testability,"@droazen, also the test pass in our diff tool with both BCF2 and VCF codecs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-293699920:19,test,test,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-293699920,1,['test'],['test']
Testability,"@droazen, both batch size and consolidate arguments are pushed. all tests pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2634#issuecomment-298807246:68,test,tests,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2634#issuecomment-298807246,1,['test'],['tests']
Testability,"@droazen, could you review this PR? Before I implement the integration test I would be important that you check if it is possible the change of the `ReadShard` contract (null `ReadsDataSource` are now allowed, and I don't know if this will affect other parts of GATK. Thank you very much in advance.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1708#issuecomment-219990301:71,test,test,71,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1708#issuecomment-219990301,1,['test'],['test']
Testability,"@droazen, just to make sure I understand...you are suggesting that we keep doing the wrong things in GATK4 just so the integration tests match their results in GATK3?. Wouldn't it be better to have a GATK3_EQUIVALENCE_MODE flag and create new tests that do the right thing?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3680#issuecomment-342985499:131,test,tests,131,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3680#issuecomment-342985499,2,['test'],['tests']
Testability,"@droazen, thanks for the comments. I've added a unit test to demonstrate the issue. The test shows that a shallow copy is fine, so that has been changed as well.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4926#issuecomment-404248365:53,test,test,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4926#issuecomment-404248365,2,['test'],['test']
Testability,"@droazen, we have fixed all issues in genomicsdb code. the test now fails giving this message:. java.lang.AssertionError: Attribute MIN_DP expected [27.0] but found [27]; Expected :27.0; Actual :27. As I told you before I am using VariantContextTestUtils.assertVariantContextsAreEqual() to compare two feature reader iterators. is this the correct method to use?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-292376903:59,test,test,59,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-292376903,3,"['Assert', 'assert', 'test']","['AssertionError', 'assertVariantContextsAreEqual', 'test']"
Testability,"@droazen, we were able to go past the MIN_DP and ExcessHet problem. GenomicsDB calls the appropriate combine operation for this field from the given samples and the error went away. However, we have run into another problem: assertVariantContextsAreEqual() method compares two lists of Alleles and if these lists are not ordered in the same way, the check fails. The order in which alleles are read from GenomicsDB does not always match that generated by your tool. For example, for position 17966384, the alleles are CAA, CA, C, <NON_REF> and GenomicsDB feature reader shows them as CAA, C, CA, <NON_REF>. Our ""vcfdiff"" tool in GenomicsDB passes the test and all data looks good. So, either we check the variant contexts using our diff tool or you fix the assertion method.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-293699648:225,assert,assertVariantContextsAreEqual,225,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-293699648,3,"['assert', 'test']","['assertVariantContextsAreEqual', 'assertion', 'test']"
Testability,"@droazen, we were able to move past the MIN_DP problem by using a VCFCodec instead of a BCF2Codec for GenomicsDB feature reader. Header in memory looks good. Found another bug in the import tool that we're fixing now. Will push once the test goes through.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-293494329:237,test,test,237,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-293494329,1,['test'],['test']
Testability,"@droazen, will put some debug print statements in the two tests that are failing while authenticating with GCS and issue another pull request to _nalinigans_genomicsdb_uri_support_ branch. Hope that is OK. Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422843915:58,test,tests,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422843915,1,['test'],['tests']
Testability,"@droazen: test added (technically a unit test), but I dont think I'm able to kick off the test suite.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1603301480:10,test,test,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1603301480,3,['test'],['test']
Testability,@droazen: the change is added. it looks like this needs approval to kick off tests?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1625683244:77,test,tests,77,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1625683244,1,['test'],['tests']
Testability,"@dror27 - I addressed the comments that were assigned to me. There is some documentation task left and that failing test and then we are ready, I think.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8697#issuecomment-2026047858:116,test,test,116,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8697#issuecomment-2026047858,1,['test'],['test']
Testability,@drozen htsjdk PR is [here](https://github.com/samtools/htsjdk/pull/968/). I'm running gatk tests locally as a sanity check.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3448#issuecomment-322799380:92,test,tests,92,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3448#issuecomment-322799380,1,['test'],['tests']
Testability,"@dwuab, we are making some performance improvements with GenomicsDB and still are in the testing stage. Just wondering if you could try gatk from this branch `https://github.com/broadinstitute/gatk/tree/genomicsdb_142` to import large intervals(the ones that were problematic before) and let us know.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7012#issuecomment-930343647:89,test,testing,89,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7012#issuecomment-930343647,1,['test'],['testing']
Testability,@edwardkw one comment then feel free to squash and merge once tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/594#issuecomment-114593815:62,test,tests,62,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/594#issuecomment-114593815,1,['test'],['tests']
Testability,"@eitanbanks Comments addressed, tests passing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3255#issuecomment-316709556:32,test,tests,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3255#issuecomment-316709556,1,['test'],['tests']
Testability,@eitanbanks please review (by testing out the repair tool),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3868#issuecomment-346449167:30,test,testing,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3868#issuecomment-346449167,1,['test'],['testing']
Testability,@eitanbanks thanks. the code and tests are now in hellbender too.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/380#issuecomment-94984339:33,test,tests,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/380#issuecomment-94984339,1,['test'],['tests']
Testability,@elcortegano Thank you for reporting this and providing the test data! The fix was just merged so the next release of GATK should resolve this issue for you.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8455#issuecomment-1671933182:60,test,test,60,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8455#issuecomment-1671933182,1,['test'],['test']
Testability,@erniebrau I don't think we can exclude log4j 1.x. A lot of our dependencies use it. This branch is failing with various ClassNotFound errors. ex: https://storage.googleapis.com/hellbender/test/build_reports/11489.3/tests/test/classes/org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSourceUnitTest.html#testReadFromFileAndHDFS,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3416#issuecomment-320696279:189,test,test,189,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3416#issuecomment-320696279,4,['test'],"['test', 'testReadFromFileAndHDFS', 'tests']"
Testability,"@erniebrau, the mesage and log file corresponds to the latest master (GKL 0.5.8); for the GKL 0.5.3 the error message is the following:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGILL (0x4) at pc=0x000000011dc557f4, pid=20586, tid=20739; #; # JRE version: Java(TM) SE Runtime Environment (8.0_60-b27) (build 1.8.0_60-b27); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.60-b23 mixed mode bsd-amd64 compressed oops); # Problematic frame:; # C [libgkl_compression1417468606951982528.dylib+0x17f4] Java_com_intel_gkl_compression_IntelDeflater_resetNative+0x164; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/daniel/workspaces/ReadTools/hs_err_pid20586.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. And the log file: [hs_err_pid20586.log.txt](https://github.com/broadinstitute/gatk/files/1264191/hs_err_pid20586.log.txt). Let me know if you need more information.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3532#issuecomment-326031152:27,log,log,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3532#issuecomment-326031152,5,['log'],['log']
Testability,"@fleharty Can you replace the .crai with a .bai ? We're trying to discourage proliferation of .crai files due to issues with the internal .crai->.bai conversion done by htsjdk. Any recent gatk4 will produce a .bai if you run the .cram file through PrintReads, just make sure to submit both the .cram and .crai that are produced, since the output .cram will almost certainly be different than the input one. Otherwise looks good - thanks for adding this test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2174#issuecomment-248304366:453,test,test,453,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2174#issuecomment-248304366,1,['test'],['test']
Testability,"@fleharty fixed the bug, the tests should pass now",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5286#issuecomment-428288360:29,test,tests,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5286#issuecomment-428288360,1,['test'],['tests']
Testability,@fleharty test added.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6908#issuecomment-730580154:10,test,test,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6908#issuecomment-730580154,1,['test'],['test']
Testability,"@fnothaft When you submit a PR, you should include a brief description of the motivation behind the change, as well as a good unit test covering it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4432#issuecomment-367374828:131,test,test,131,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4432#issuecomment-367374828,1,['test'],['test']
Testability,"@forg-yu Glad to hear you have it working!. You are correct about the difference between the Gencode versions long non-coding RNA tag. In addition to this, there are several other tags used in Gencode v34 that were not present in v28. The latest Funcotator code (not yet merged into master - pr #6660) has parser updates to allow for these new values, but the old code (GATK 4.1.8.1 and earlier) doesn't have these parsing updates. This is the unfortunate price we pay for updating the Gencode datasource with the new datasources release. ☹️ . The issue you ran into is not exactly a bug, but an artifact of our data source release process. In order to test them, the data sources must be posted before the code changes to support them (so we can test the code against the data sources as released). Unfortunately there was no warning mechanism to users to let them know that newer data source versions are not yet supported (checks against older versions were already present). I've created an issue (#6712) and a branch ([jts_funcotator_version_max_6712](https://github.com/broadinstitute/gatk/tree/jts_funcotator_version_max_6712)) that adds in such checks, so pretty soon there will be a warning rather than a confusing stack trace.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6708#issuecomment-662200608:653,test,test,653,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6708#issuecomment-662200608,2,['test'],['test']
Testability,"@fpbarthel I did use 4.1.0.0 to test this as well as 4.0.9.0. I think that it must have been fixed, but I am glad that you were able to find a workaround. Let us know if this error occurs again though.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5683#issuecomment-888363150:32,test,test,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5683#issuecomment-888363150,1,['test'],['test']
Testability,"@frank-y-liu Thanks for the pull request! Looks good to me except for a very minor nitpick about tabs. In general we always use spaces. You should be able to set your IDE to autoconvert them. . I'm happy to merge without the cloud tests. It's a security hazard to let pull request from forks have access to those tokens, so they don't get passed to builds from forks. We separate the clouds tests explicitly so they can be skipped without breaking the rest of the tests when this happens. Your code should not effect any of the cloud functionality so I'm not worried if those tests didn't run. We can give you direct push access as well if that's more convenient for you. Then the tests will all run.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1761#issuecomment-213575978:231,test,tests,231,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1761#issuecomment-213575978,5,['test'],['tests']
Testability,"@frank-y-liu There may also be a failing test on power in `IntelDeflaterIntegrationTest`. I wasn't sure what condition to use to exempt power from that test was. I can't tell for sure though, if it works for you then I guess it works fine :)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1761#issuecomment-213576572:41,test,test,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1761#issuecomment-213576572,2,['test'],['test']
Testability,@gbrandt6 @bhanugandham do we have access to gvcfs that reproduce this problem? just want something real to test a fix with.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6766#issuecomment-689720463:108,test,test,108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6766#issuecomment-689720463,1,['test'],['test']
Testability,"@gbrandt6 So now the protocol is that you wait for tests to pass (although it's unlikely this could break them...) and then you can merge with ""squash and merge"". You can edit the commit message in the browser to make sure it is clear. `Fix typo in --tmp-dir argument in GenomicsDB docs` is a pretty good description for this one though :)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6785#issuecomment-684939263:51,test,tests,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6785#issuecomment-684939263,1,['test'],['tests']
Testability,"@gbrandt6 The additional logging @ldgauthier is talking about adding would help the user locate the actual site(s) with the reference allele mismatch, but as discussed above this is likely a problem with their data rather than the tool. The user should check that all VCFs are using the same reference -- the fact that several VCFs lack sequence dictionaries make it likely that this is not the case.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6701#issuecomment-663089939:25,log,logging,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6701#issuecomment-663089939,1,['log'],['logging']
Testability,"@gevro @yaottianran. I know this is old, but if you want to test with a recent GATK release that includes the upgraded intel gkl it has hopefully fixed this issue.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5690#issuecomment-993699280:60,test,test,60,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5690#issuecomment-993699280,1,['test'],['test']
Testability,"@gevro To amend my previous comment: it was brought to my attention that the docker image snapshot I linked to above does not actually come with the newer GKL release that might fix your issue. Sorry for the miscommunication! We're working on building a test GATK image that does contain the newer GKL release, and once we have that I'll post a link to it here.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5690#issuecomment-784458143:254,test,test,254,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5690#issuecomment-784458143,1,['test'],['test']
Testability,"@gokalpcelik This isn't an insane request, but it's probably not going to happen very quickly. . I don't think it's a trivial change to just exclude log4j, we'd need a compatible replacement or you'd end up with crashes in weird places when a transitive dependency tries to log with it. We can (and might) do it, but it's not super high priority at the moment. I think there's internal interest in changing out the logger but at the moment our strategy is to patch to the newest version as they become available. . That said, if you find a way to build a log4j free version without weird issues please let us know :)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7626#issuecomment-1005810220:274,log,log,274,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7626#issuecomment-1005810220,2,['log'],"['log', 'logger']"
Testability,@greekkey I would be really interested if the problem had resolved if you ran without that option using 4.2.4.1. We updated the compression library and I'm hoping that it's fixed whatever was causing the problem but I'm not able to reproduce it so it's hard to know. . What OS/hardware are you running on @greekkey? I'm wondering if this is a problem on a specific OSX version or something which we're not testing on.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7614#issuecomment-1005763165:406,test,testing,406,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7614#issuecomment-1005763165,1,['test'],['testing']
Testability,"@gspowley 2 minor comments, I think the test still has funny skipping behavior at the moment, and an exception nitpick that I missed before.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2259#issuecomment-263700208:40,test,test,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2259#issuecomment-263700208,1,['test'],['test']
Testability,"@gspowley Can you take a look? This problem started happening with https://github.com/broadinstitute/gatk/commit/dfa9cf1a420490285b7be7917082222a07e2b042. I can pretty reliably move back to the previous commit and it goes away. It always surfaces in the VariantSparkSinkUnitTests, but it seems to be the result of a cumulative effect since AFAICT it only happens when running the full test suite via ""./gradlew clean test"". I tried changing the default values of useJdkInflater and useJdkDeflater to true, and I still get the same problem. Interestingly, disabling all of the tests in IntelInflaterDeflaterIntegrationTest seems to reliably fix it (even with useJdkInflater/Deflater set to false), so I'd start there. If thats the culprit, it might explain why we don't see this in travis since we run the unit tests and integration tests separately there.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2490#issuecomment-288098956:385,test,test,385,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2490#issuecomment-288098956,5,['test'],"['test', 'tests']"
Testability,"@gspowley Could you close this, and open a new PR against master?. We've also become concerned that if something in the jvm is unsetting FTZ, turning it on at startup won't be sufficient. We added a protective ""turn FTZ on"" on every call to `jniComputeLikelihoods()`, which at least allows us to produce consistent test results, but we still have no protection outside the PairHMM against FTZ getting disabled.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1584#issuecomment-215242788:315,test,test,315,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1584#issuecomment-215242788,1,['test'],['test']
Testability,"@gspowley Heads up, I'm reverting this for now since it's blocking updates to gatk-protected. We'll bring it back in when we get that issue figured out. . @droazen Tests are passing so I'm just going to merge this one as we talked about earlier.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2319#issuecomment-267709008:164,Test,Tests,164,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2319#issuecomment-267709008,1,['Test'],['Tests']
Testability,@gspowley Looks like integration tests are failing?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-282054550:33,test,tests,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-282054550,1,['test'],['tests']
Testability,"@gspowley Steps to replicate:; 1. Check out the `dr_runnable_haplotypecaller` branch (in this repo -- this would be too painful to reproduce with the version in gatk-protected).; 2. Revert the change in https://github.com/broadinstitute/gatk/pull/1764 in your local copy of the branch.; 3. Run `HaplotypeCallerIntegrationTest`, watch it fail due to a mismatch on a single QUAL field (we've confirmed this is due to FTZ vs. no FTZ).; 4. Rename one of the failing tests with a prefix like `aaa` so that TestNG will run it first, and watch it pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1771#issuecomment-214508475:462,test,tests,462,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1771#issuecomment-214508475,2,"['Test', 'test']","['TestNG', 'tests']"
Testability,"@gspowley Thanks for looking into this. I suppose its possible that we've just gone over some threshold in the normal course of things, but I'm still a bit skeptical. I'm going to do a bit more analysis/testing and see if I can get any more insight.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2490#issuecomment-288781788:203,test,testing,203,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2490#issuecomment-288781788,1,['test'],['testing']
Testability,"@gspowley That seems to do it (I also needed to use the GKL snapshot library, otherwise I see the malloc bug more frequently), but I was able to run the whole test suite on both of my laptops as long as I have both fixes. We are propagating that DEBUG log level setting to kryo, which was printing out [tons](https://github.com/EsotericSoftware/kryo/blob/f3700c49cad803f8e1782c07737197e425b1b229/src/com/esotericsoftware/kryo/Kryo.java#L675) of DEBUG output, eventually resulting in the OOM error.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2490#issuecomment-290990465:159,test,test,159,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2490#issuecomment-290990465,2,"['log', 'test']","['log', 'test']"
Testability,"@gspowley The first test run seems to still produce the original problem (the tests hang in the same spot). The change may have fixed #2535 , but I'll do a couple more some more test runs and see what other results I get.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2490#issuecomment-289553520:20,test,test,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2490#issuecomment-289553520,3,['test'],"['test', 'tests']"
Testability,"@gspowley Would it be possible to add an osx build to the gkl test runs? Likewise, we need an osx run on our travis runs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2315#issuecomment-267136515:62,test,test,62,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2315#issuecomment-267136515,1,['test'],['test']
Testability,@gspowley can you open a pull request with the native code and tests for it?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1492#issuecomment-184981044:63,test,tests,63,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1492#issuecomment-184981044,1,['test'],['tests']
Testability,@gspowley this works for me - i tested on linux and mac. I do see speedups too!. I think it's good to me merged. Can you enter tickets for the remaining work items and add them as comments here? . mac osx ; master; real 1m51.375s; user 2m39.498s. real 1m51.152s; user 2m38.079s. new gkl; real 1m46.342s; user 2m38.097s. real 1m46.603s; user 2m36.670s. linux (cloud vm); master; JNI 73.7; real 2m35.924s; user 3m37.316s. JNI 74.39; real 2m32.028s; user 3m29.936s. new gkl; JNI 57.67; real 2m20.550s; user 3m27.520s. JNI 53.92241665; real 2m18.047s; user 3m20.288s,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1935#issuecomment-228512721:32,test,tested,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1935#issuecomment-228512721,1,['test'],['tested']
Testability,@gspowley try changing the addons block in the .travis.yml to look like the following:. ```; addons: ; apt:; sources:; - r-packages-precise; - ubuntu-toolchain-r-test; packages:; - r-base; - gcc-4.8; - g++-4.8; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1492#issuecomment-185775275:162,test,test,162,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1492#issuecomment-185775275,1,['test'],['test']
Testability,@gspowley 👍 Looks good to me now. Ready to merge when tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2259#issuecomment-263711533:54,test,tests,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2259#issuecomment-263711533,1,['test'],['tests']
Testability,"@gspowley, it also blows up without initialize PairHMM... I can do another test without that to send you the log. And here it's the result from `sysctl -a | grep machdep.cpu.*features`:. ```; machdep.cpu.features: FPU VME DE PSE TSC MSR PAE MCE CX8 APIC SEP MTRR PGE MCA CMOV PAT PSE36 CLFSH DS ACPI MMX FXSR SSE SSE2 SS HTT TM PBE SSE3 DTES64 MON DSCPL VMX SMX EST TM2 SSSE3 CX16 TPR PDCM SSE4.1 SSE4.2 POPCNT; machdep.cpu.extfeatures: SYSCALL XD EM64T LAHF RDTSCP TSCI; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1985#issuecomment-231398955:75,test,test,75,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1985#issuecomment-231398955,2,"['log', 'test']","['log', 'test']"
Testability,"@haileypfox This PR has test failures in `FuncotatorIntegrationTest` -- you can inspect these failures in the logs linked in the most recent comment from ""gatk-bot"" above. These will have to be resolved before we can merge this PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7343#issuecomment-881612419:24,test,test,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7343#issuecomment-881612419,2,"['log', 'test']","['logs', 'test']"
Testability,@haileypfox You have a failing test in `FuncotatorIntegrationTest` -- see the test logs in the `gatk-bot` comment above:. https://storage.googleapis.com/hellbender-test-logs/build_reports/master_34997.12/tests/test/index.html; https://storage.googleapis.com/hellbender-test-logs/build_reports/master_34997.2/tests/test/index.html. Can you fix this test failure before I re-review?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7349#issuecomment-882812134:31,test,test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7349#issuecomment-882812134,10,"['log', 'test']","['logs', 'test', 'test-logs', 'tests']"
Testability,"@heliac2000 Thanks for the report - I don't think we've done much testing with gpu-enabled environments yet, but one thing that would be useful is to re-run adding the `--enable-journal` command line argument to GATK. That will produce a file in the current directory with a name of the form ""gatkStreamingProcessJournal-nnnnnnn.txt"". If you post that file here it will help us see a bit more about what's happening.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4696#issuecomment-383909813:66,test,testing,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4696#issuecomment-383909813,1,['test'],['testing']
Testability,@heuermh Thanks for the info! I updated from adam-core_2.10 -> adam-core_2.11 but I didn't realize we needed to change to adam-core2_2.11. I'll open a new patch. Our tests for adam interop are pretty thin so we must have just not hit whatever errors are lurking out there yet.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2264#issuecomment-261066471:166,test,tests,166,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2264#issuecomment-261066471,1,['test'],['tests']
Testability,"@hliang I see that many of the tasks are failing and it looks like one of the executors crashed. To find the cause, you can check the error logs of these tasks through the web UI. I suspect increasing executor memory will fix the problem. Heartbeat timeouts usually occur when an executor JVM runs out of memory or requests more memory than the node will allow.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3186#issuecomment-313197140:140,log,logs,140,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3186#issuecomment-313197140,1,['log'],['logs']
Testability,@icemduru ; Can you provide more details on your issue? How many samples do you have? How did you combine them and what are your command lines for this process? ; Can you provide more details on the system that you are running these commands on?. GenotypeGVCFs is not known to have memory leak issues. Our tests indicated that it only needs around 4~6GBs of total memory to genotype 120 whole genome samples (Per contig).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8918#issuecomment-2283618495:306,test,tests,306,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8918#issuecomment-2283618495,1,['test'],['tests']
Testability,"@igordot I have not yet succeeded in reproducing the error with the few hg38 samples I have tested (2) and nothing obvious showed up in various `grep` regexes of our hg38 gnomAD (1). I am starting to think that we actually have solved all the hg38 issues and this is unrelated to my initial guess. If you can share your unfiltered vcf input it would be very helpful, but if that's not possible could you post the contents of your `contamination-table` input? I have a hunch that the small size of the panel is causing `CalculateContamination` to give an unreliable result. For targeted panels we recommend running Mutect2 without CalculateContamination. If you're running from Terra/Firecloud or from the wdl, this means leaving the optional `variants_for_contamination` input empty.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5821#issuecomment-478444912:92,test,tested,92,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5821#issuecomment-478444912,1,['test'],['tested']
Testability,@ilyasoifer could you please take a look at the two failing CI/tests and see if there is something to be done - or it is a usual/environmental thing? Thanx,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8982#issuecomment-2384672504:63,test,tests,63,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8982#issuecomment-2384672504,1,['test'],['tests']
Testability,"@ilyasoifer do you have the means to quickly run minimap2? I would recommend simply realigning src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam with minimap2 and making a quick ""are tests consistent with pervious versions"" test with a checked in vcf output. I don't know how to wrangle minimap2 to handle mates correctly however so i don't know if this is easy",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8337#issuecomment-1559878651:99,test,test,99,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8337#issuecomment-1559878651,3,['test'],"['test', 'tests']"
Testability,"@jamesemery - I addressed your comments, but the tests that are failing are due to invalid interval creation within tests that randomly generate targets. I will need the help to the developer of these tests (I think that it is @vruano) to fix the tests without reducing the number of targets generated...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3778#issuecomment-342812355:49,test,tests,49,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3778#issuecomment-342812355,4,['test'],['tests']
Testability,"@jamesemery - I rebased to solve the conflict and I open an issue regarding the `SimpleIntervalTestFactory` to do not block this work any longer, because this is already a big change in the testing framework. . Because the changes are big and we are working in different timezones, conflicts pop up everyday when another PR is accepted before this if they modify any of the test files (which is often the case). If we continue delaying this, it would never be possible to merge...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-341093236:190,test,testing,190,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-341093236,2,['test'],"['test', 'testing']"
Testability,"@jamesemery - I think that the rebase is done. I'd like to have this in as soon as it can be, to avoid the extra-work of rebasing due to new tests or refactoring of them.... Thank you in advance!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-338990541:141,test,tests,141,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-338990541,1,['test'],['tests']
Testability,"@jamesemery - i will also look into whether this file is somehow created by subsetting another during tests. in the meantime, would it be possible to also get these? i'm pretty confident this is the final list:. gsa-hpprojects\GATK\data\Comparisons\Validated\HapMap\3.3\genotypes_r27_nr.b37_fwd.vcf. and the following are in privateTestDir:. overlapTest.bed; PhaseByTransmission/PhaseByTransmission.IntegrationTest.goodFamilies.ped; PhaseByTransmission/PhaseByTransmission.IntegrationTest.TP.vcf; NA12878.HiSeq.WGS.b37_decoy.indel.recalibrated.vcf; yri.trio.gatk.ug.head.vcf; NA12878.HiSeq.WGS.b37_decoy.indel.recalibrated.vcf; Mills_and_1000G_gold_standard.indels.b37.sites.vcf; validationReportComp.vcf; validationReportComp.noGenotypes.vcf",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-366799537:102,test,tests,102,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-366799537,1,['test'],['tests']
Testability,"@jamesemery - sorry to keep bothering you on this, but is there any chance you could upload the files above? I have GATK4 VariantEval passing using all the GATK3 tests, except for the handful of ones depending on these files. Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-370491290:162,test,tests,162,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-370491290,1,['test'],['tests']
Testability,"@jamesemery - we should get this merge as soon as possible to avoid conflicts that pop up in every round of comments. Once this is in, I can go to the open PRs to point out the conflicts and the new structure (e.g., change the new tests to extend `GATKBaseTest`). I added a new commit addressing the issues and I will rebase to resolve conflicts again.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-340724214:231,test,tests,231,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-340724214,1,['test'],['tests']
Testability,"@jamesemery . User shared log file and the first few lines of the GVCF file you requested in a zip file here: https://www.dropbox.com/s/p2smhpm5btsf2cq/jiehuang.zip?dl=0,",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6340#issuecomment-568510250:26,log,log,26,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6340#issuecomment-568510250,1,['log'],['log']
Testability,"@jamesemery : i have run all integration tests, and I think this is a complete list of the remaining files I can hopefully get:. /private/gatk-tools-private/src/test/resources/withSymbolic.b37.vcf; /private/gatk-tools-private/src/test/resources/PhaseByTransmission/PhaseByTransmission.IntegrationTest.TP.vcf ; /private/gatk-tools-private/src/test/resources/yri.trio.gatk_glftrio.intersection.annotated.filtered.chr1.vcf ; /private/gatk-tools-private/src/test/resources/NA12878.HiSeq.WGS.b37_decoy.indel.recalibrated.vcf ; /private/gatk-tools-private/src/test/resources/validationReportEval.noGenotypes.vcf ; /private/gatk-tools-private/src/test/resources/validationReportEval.vcf ; /private/gatk-tools-private/src/test/resources/ac0.vcf ; /humgen/gsa-hpprojects/GATK/data/Comparisons/Validated/HapMap/3.3/genotypes_r27_nr.b37_fwd.vcf; /humgen/gsa-hpprojects/GATK/data/Validation_Data/snpEff2.0.5.AFR.unfiltered.VariantAnnotator.output.vcf. Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-366146129:41,test,tests,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-366146129,8,['test'],"['test', 'tests']"
Testability,"@jamesemery @cmnbroad This fixes a personal pet peeve of mine, which is that we're packaging a bunch of test classes as a runtime dependency. It splits out a new test artifact which contains just the classes in utils.test and allows it to be published and consumed separately from the rest of the gatk. This allows us to make testng and minicluster no longer compile dependencies",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5112#issuecomment-413011677:104,test,test,104,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5112#issuecomment-413011677,4,['test'],"['test', 'testng']"
Testability,"@jamesemery @droazen I've updated this branch to ensure all read and write paths to shared state in `GenotypeLikelihoodCalculators` is synchronized. I then wrote a little [test](https://github.com/broadinstitute/gatk/commit/3bb178746b1dd286f55ba77e6939e2104ced98d0) using `AlleleSubsettingUtils` to access `GenotypeLikelihoodCalculators` 10^6 times to see the effect of adding synchronization. R session (times are in millis):; ```; > without_sync = c(10166, 10049, 10306, 10059, 10165); > with_sync = c(10700, 10384, 9923, 10097, 10190); > t.test(without_sync, with_sync, paired=TRUE). 	Paired t-test. data: without_sync and with_sync; t = -0.70447, df = 4, p-value = 0.52; alternative hypothesis: true difference in means is not equal to 0; 95 percent confidence interval:; -542.5421 322.9421; sample estimates:; mean of the differences ; -109.8 ; ```. The p-value is not less than 0.05, so we can't reject the null hypothesis (that the mean times are the same). So adding synchronization doesn't seem to make any difference in this test. BTW, I noticed that `GenotypeLikelihoods` has synchronization, so there is some precedent for thread-safety using this means.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479:172,test,test,172,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479,4,['test'],['test']
Testability,@jamesemery Apparently my test doesn't work on travis. Gaaah.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4666#issuecomment-387097386:26,test,test,26,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4666#issuecomment-387097386,1,['test'],['test']
Testability,"@jamesemery Back to you, at long last. I adopted your suggestion of a proper search that doesn't revisit already-seen vertices and came up with a better way of seeding the ""good"" subgraph that is safe from your STR concern. As far as code is concerned it's a total rewrite — you can pretend the first PR commit doesn't exist. The new criterion for seeding the search is chains with good log odds on both ends and which are incident on a vertex with multiple good out-edges or multiple good in-edges. The rationale is that the adjacency of two bad edges may have good log odds (Suppose a bad edge comes in and two bad edges come out. One is a new error on top of the original error and one is the continuation of the original error) but two have two outgoing edges with good log odds requires an actual real variant. On our M2 validations this essentially no effect on sensitivity and a mild reduction in false positives. I will leave it to you (or to me when I don't have to work like a vampire) to investigate how well it interacts with junction trees. As a first step I wrote a basic unit test for the basic pathology of the old method.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6520#issuecomment-624265441:387,log,log,387,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6520#issuecomment-624265441,4,"['log', 'test']","['log', 'test']"
Testability,"@jamesemery Can we instrument the `HaplotypeCaller` to dump additional info to its log that would help us narrow this down? Such as the number of reads in each region, etc.?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6105#issuecomment-528986200:83,log,log,83,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6105#issuecomment-528986200,1,['log'],['log']
Testability,"@jamesemery Can you rebase this branch onto latest master to resolve the conflicts? Recommend doing a local squash first given the number of commits here to make it less painful (by ""local squash"" I mean first `rebase -i` onto the hash of the first commit in the `git log` history that's not your own, and then rebase onto `origin/master`).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3803#issuecomment-359036049:268,log,log,268,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3803#issuecomment-359036049,1,['log'],['log']
Testability,"@jamesemery Can you remove the non-functional test, and merge this once tests pass?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3042#issuecomment-453565602:46,test,test,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3042#issuecomment-453565602,2,['test'],"['test', 'tests']"
Testability,@jamesemery Can you take a quick look at this when you get a chance? It speeds up docker builds and might somewhat reduce test times.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7727#issuecomment-1069500093:122,test,test,122,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7727#issuecomment-1069500093,1,['test'],['test']
Testability,@jamesemery Could you also add an integration test with the pipeline above? You'll need to run bash using `ProcessController` or similar,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4167#issuecomment-358108007:46,test,test,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4167#issuecomment-358108007,1,['test'],['test']
Testability,@jamesemery Have you tried a 5 minute file to test? If it's as big as it looks it should show up.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5607#issuecomment-457753785:46,test,test,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5607#issuecomment-457753785,1,['test'],['test']
Testability,"@jamesemery How close is this to being merged? Once you've addressed all review comments to your satisfaction and have rebased to resolve the conflicts, let me know and I can give final approval after tests are green.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5913#issuecomment-601285399:201,test,tests,201,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5913#issuecomment-601285399,1,['test'],['tests']
Testability,"@jamesemery I added a pretty comprehensive set of tests for various kinds of corrupt BGZF files (as well as a regular GZIP file), and patched the tool to report something sensible in these cases. You can see the new tool output in the `*.out` files included in the branch. Needs another review from you before we can merge.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4239#issuecomment-453686695:50,test,tests,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4239#issuecomment-453686695,1,['test'],['tests']
Testability,"@jamesemery I consolidated the additions to ``GATKVariantContextUtils`` to use the methods in ``AlleleSubsettingUtils`` as much as possible, and also added more tests of pathological case (long alleles in long repeats, etc.) so now back to you.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5144#issuecomment-420384916:161,test,tests,161,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5144#issuecomment-420384916,1,['test'],['tests']
Testability,"@jamesemery I fixed a problem with the test where I wasn't marking it as ""Cloud"", when things pass I'll merge.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4778#issuecomment-389904639:39,test,test,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4778#issuecomment-389904639,1,['test'],['test']
Testability,"@jamesemery I just need to fix one test. Will merge by the end of the week, is that acceptable?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6696#issuecomment-676623320:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6696#issuecomment-676623320,1,['test'],['test']
Testability,"@jamesemery I regenerated the file based on master, and see the same shift in QUAL scores. I managed to track this QUAL score shift back to #6401, which makes sense. If you look at the files changed in that PR, there are a number of expected test output files changed with this same QUAL score shift. I guess this particular file just got missed, and since there's enough leeway tests still passed. So I'm going to go ahead and merge. Thanks again for the review!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6626#issuecomment-641431772:242,test,test,242,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6626#issuecomment-641431772,2,['test'],"['test', 'tests']"
Testability,@jamesemery I was unable to test out this fix due to repeatedly encountering a (seemingly) unrelated git lfs error:. ```; Git LFS: (0 of 104 files) 0 B / 1.28 GB ; batch request: Host key verification failed.: exit status 255; batch request: Host key verification failed.: exit status 255; error: failed to fetch some objects from 'https://github.com/broadinstitute/gatk.git/info/lfs'; ```. I'll attempt to test this branch again in January prior to the next GATK release.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6883#issuecomment-733954722:28,test,test,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6883#issuecomment-733954722,2,['test'],['test']
Testability,"@jamesemery I will gladly review. If I understand the code change it seems like there was already basically the right logic to avoid this _but_ the code was neglecting to put the force calling alleles in a representation consistent with the output VCF. And the fix is simply to compute `forcedAlleles = AssemblyBasedCallerUtils.getAllelesConsistentWithGivenAlleles(givenAlleles, vc)` a bit upstream of where we were doing so previously. If I've got that right, this PR gets my :thumbsup:.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7740#issuecomment-1081342841:118,log,logic,118,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7740#issuecomment-1081342841,1,['log'],['logic']
Testability,"@jamesemery I've opened a ticket in hadoop bam.; @droazen Could you re-review this when you get a chance? It's super useful functionality. If we don't trust the fix for sharded files, we could globally disable them for cram/sam instead. I think the problem is not unique to this branch, it's just the first to test the file order or reading sharded cram/sam.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4545#issuecomment-395191688:310,test,test,310,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4545#issuecomment-395191688,1,['test'],['test']
Testability,"@jamesemery It looks like the tests are failing with:. ```; testBaseQualRawAnnotate FAILED; java.lang.AssertionError: expected [50,1,60,1|10,1,20,1] but found [|-1.4,1]; at org.testng.Assert.fail(Assert.java:93); at org.testng.Assert.failNotEquals(Assert.java:512); at org.testng.Assert.assertEqualsImpl(Assert.java:134); at org.testng.Assert.assertEquals(Assert.java:115); at org.testng.Assert.assertEquals(Assert.java:178); at org.broadinstitute.hellbender.tools.walkers.annotator.BaseQualityRankSumTestUnitTest.testBaseQualRawAnnotate(BaseQualityRankSumTestUnitTest.java:97); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3527#issuecomment-326647631:30,test,tests,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3527#issuecomment-326647631,22,"['Assert', 'assert', 'test']","['Assert', 'AssertionError', 'assertEquals', 'assertEqualsImpl', 'testBaseQualRawAnnotate', 'testng', 'tests']"
Testability,@jamesemery Looks good. I had a few very minor comments. . Could you also add a test that does the same thing but uses a -L interval since you had to do some extra stuff to get that working and it tends to be a bit touchy?; Thank you!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2124#issuecomment-242830993:80,test,test,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2124#issuecomment-242830993,1,['test'],['test']
Testability,@jamesemery Looks like there is a test failure in this PR now.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4674#issuecomment-388402050:34,test,test,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4674#issuecomment-388402050,1,['test'],['test']
Testability,"@jamesemery Okay, we'ce got some really good tests for EventGroup clustering _and_ branching now. It's ready for you to take another look.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8492#issuecomment-1716890925:45,test,tests,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8492#issuecomment-1716890925,1,['test'],['tests']
Testability,@jamesemery Some test failures here https://storage.googleapis.com/hellbender-test-logs/build_reports/master_16064.3/tests/test/index.html,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4082#issuecomment-356017217:17,test,test,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4082#issuecomment-356017217,4,['test'],"['test', 'test-logs', 'tests']"
Testability,@jamesemery Still some test failures https://storage.googleapis.com/hellbender-test-logs/build_reports/master_19811.2/tests/test/classes/org.broadinstitute.hellbender.tools.spark.validation.CompareDuplicatesSparkIntegrationTest.html#testOutputFile,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4894#issuecomment-397343622:23,test,test,23,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4894#issuecomment-397343622,5,['test'],"['test', 'test-logs', 'testOutputFile', 'tests']"
Testability,"@jamesemery The test looks good. I am averse to exact match tests and would prefer to just strea the VCF output and check for empty calls. Nonetheless, I understand that there's a tradition of exact match tests in some of our tools. I leave it up to you.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7740#issuecomment-1083589321:16,test,test,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7740#issuecomment-1083589321,3,['test'],"['test', 'tests']"
Testability,@jamesemery There appear to be some lingering test failures here after the rebase (mismatches between actual and expected VCF files).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5913#issuecomment-601852368:46,test,test,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5913#issuecomment-601852368,1,['test'],['test']
Testability,"@jamesemery There isn't an explicit test for the fix, because the the results with the fix are identical to the results without the fix. There is a test reading with an SBI index in disq, previously it was just falling back to the guesser though, which produces the same results. . What do you want me to add? A test reading with an sbi file? Hard to prove that it's not falling back to split guessing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6323#issuecomment-566777560:36,test,test,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6323#issuecomment-566777560,3,['test'],['test']
Testability,@jamesemery This is failing with a compiler error:. ```; error: package org.testng.annotations does not exist; import org.testng.annotations.Test; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4212#issuecomment-420053841:76,test,testng,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4212#issuecomment-420053841,3,"['Test', 'test']","['Test', 'testng']"
Testability,"@jamesemery This was the first pass where I reviewed the tests, so there are a bunch of new comments, and also some issues with the founder id integration.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3851#issuecomment-361723540:57,test,tests,57,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3851#issuecomment-361723540,1,['test'],['tests']
Testability,@jamesemery We have test failures again https://storage.googleapis.com/hellbender-test-logs/build_reports/master_19079.2/tests/test/index.html,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4750#issuecomment-388422469:20,test,test,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4750#issuecomment-388422469,4,['test'],"['test', 'test-logs', 'tests']"
Testability,"@jamesemery What I'm actually trying to do is essentially `GENOTYPE_GIVEN_ALLELES` except that I don't know the ALTs. I realize that may sound silly. What I've ended up doing for now is generate a gVCF, genotype it, and then write a custom tool that consumes VCF and gVCF and inserts hom-ref genotypes based on a) where there is no call in the VCF and b) there is confidence in the hom-ref genotype in the gVCF. My point in logging this issue is mostly that `EMIT_ALL_SITES` is pretty misleading as it stands. I think it would be good, at a minimum, to update the documentation for that option to make it very clear that it does not in fact ""emit all sites"" but instead ""emits more sites, but still a subset of all sites in the region being called"".",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6059#issuecomment-530535087:424,log,logging,424,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6059#issuecomment-530535087,1,['log'],['logging']
Testability,"@jamesemery and @droazen thank you for reviewing. @jamesemery I have enabled `GenomicsDBImportIntegrationTest.testGenomicsDBAlleleSpecificAnnotations()` and this test is passing. Is anything else required?. @droazen I incremented the GenomicsDB release that incorporates a fix for resizing LUTs when dealing with spanning deletions - this was a single line change in GenomicsDB that should fall under the umbrella of enabling allele-specific annotation support [3707](https://github.com/broadinstitute/gatk/issues/3707). This updated jar has been uploaded, but isn't available on Maven yet (it should be within the next hour). I agree that additional tests should be added for the bugs that this PR addresses. I'll plan on adding tests for the two high priority fixes ([4160](https://github.com/broadinstitute/gatk/issues/4160) and [3736](https://github.com/broadinstitute/gatk/issues/3736)) this afternoon.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4261#issuecomment-360881092:110,test,testGenomicsDBAlleleSpecificAnnotations,110,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4261#issuecomment-360881092,4,['test'],"['test', 'testGenomicsDBAlleleSpecificAnnotations', 'tests']"
Testability,@jamesemery are these test failures expected/known? They seem unrelated to this PR.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8347#issuecomment-1609714705:22,test,test,22,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8347#issuecomment-1609714705,1,['test'],['test']
Testability,"@jamesemery back to you -- in the _other_ PR, which was an accident. While you take another look I think I will work on a unit test for the new branching code.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1714186038:127,test,test,127,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1714186038,1,['test'],['test']
Testability,@jamesemery feel free to push the test to the branch. I’m not going to get to it this week.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7125#issuecomment-793033943:34,test,test,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7125#issuecomment-793033943,1,['test'],['test']
Testability,"@jamesemery has completed the work of updating the tool to support the newer Gencode, and is currently testing a new datasource release. Once that's done, we plan to do a release.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8296#issuecomment-1653870847:103,test,testing,103,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8296#issuecomment-1653870847,1,['test'],['testing']
Testability,"@jamesemery in order to get the tests to pass I had to regenerate one of the expected output vcf's for a GenotypGvcfs integration test, which makes sense because I'm changing the way we annotate variant id's. Can I just get a quick thumbs up if you are comfortable with this additional change before I merge, assuming tests now pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6626#issuecomment-639121904:32,test,tests,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6626#issuecomment-639121904,3,['test'],"['test', 'tests']"
Testability,"@jamesemery requests test files that show what a possible de novo looks like and I have agreed to prep some data towards this. Here is the data bundle that includes a GATK3.7 result.; [VariantAnnotator_PossibleDeNovo_sooheelee.zip](https://github.com/broadinstitute/gatk/files/2852379/VariantAnnotator_PossibleDeNovo_sooheelee.zip). The command I used with GATK3.7:; ```; java -jar $GATK -T VariantAnnotator \; -R ref/ref.fasta \; -V precomputed/trioGGVCF.vcf.gz \; -o trioVA.denovo.vcf.gz \; -A PossibleDeNovo ; -ped trio.ped; ```. Here are the three records that then show either `loConfDeNovo` or `hiConfDeNovo` annotations as a result:; ![screenshot 2019-02-11 13 10 16](https://user-images.githubusercontent.com/11543866/52583757-64f17680-2dfe-11e9-8c8e-11a9751f881c.png). For all of the records that change, see https://gatkforums.broadinstitute.org/gatk/discussion/comment/56268#Comment_56268.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4987#issuecomment-462433251:21,test,test,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4987#issuecomment-462433251,1,['test'],['test']
Testability,"@jamesemery sorry to bug on this topic, but I'm hoping to make a push early this year to fully migrate my lab off GATK3 . I looked more closely at the specific annotations we need to migrate. I decided that I will implement our walker, 'DiscvrVariantAnnotator', which is basically a light wrapper around VariantAnnotation. This will make it easier to spike in custom annotations. In that walker, I will override makeVariantAnnotations(). I will make a new marker interface for EngineAwareAnnotation, and test that on all the Annotation classes, and use this to inject FeatureManager. So no core GATK changes needed. I did find one thing I'd like to propose. You probably know PedigreeAnnotation is special-cased in GATK. Annotations that use it have automatic argument validation and have the SampleDB injected. Currently, PedigreeAnnotation is a subclass of InfoFieldAnnotation, so isnt available to GenotypeAnnotations. There doesnt appear to be a solid reason why. I tried to fix that and my best idea is the proposal here: #7041 . The core idea is to convert InfoFieldAnnotation and GenotypeAnnotation to interfaces. This is generally a trivial switch in existing code. With that, it becomes possible for classes that currently extend PedigreeAnnotation (which I switched to no longer extend InfoFieldAnnotation) to simply PedigreeAnnotation and implement InfoFieldAnnotation. This makes it possible for future classes to extend PedigreeAnnotation and implement GenotypeAnnotation.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6930#issuecomment-760424063:504,test,test,504,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6930#issuecomment-760424063,1,['test'],['test']
Testability,"@jamesemery thanks for the review. I don't think indels of various lengths should cause any problems, because the reference alleles are required to match in addition to the alt alleles. I added some tests to confirm this and things appear to be behaving correctly. . back to you!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6626#issuecomment-639011917:199,test,tests,199,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6626#issuecomment-639011917,1,['test'],['tests']
Testability,"@jamesemery the only way I could get genomicsDB tests to pass was to upgrade to the latest version and use the protobuf implementation for the vidmap by merging in #4993. That PR is blocked because I asked for allele-specific features and it's looking like no one is going to do that anytime soon. But if you'd rather merge that first and then rebase this to keep things tidy, I understand.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5237#issuecomment-425450125:48,test,tests,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5237#issuecomment-425450125,1,['test'],['tests']
Testability,"@jamesemery you can see from my log above I am using `4.2.0.0`, and a test case (hg19 SAM file) is attached above if you're interested in looking. I did play around with the `--mapping-quality-threshold-for-genotyping` option but it didn't seem to have an effect, but I am not 100% certain what I exactly did.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7124#issuecomment-794571777:32,log,log,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7124#issuecomment-794571777,2,"['log', 'test']","['log', 'test']"
Testability,"@jamesemery, thanks for kicking off tests. the compile failure is probably due to a bad merge. I pushed a fix - would you be able to restart tests?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8871#issuecomment-2189263528:36,test,tests,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8871#issuecomment-2189263528,2,['test'],['tests']
Testability,"@jamesemery, the bug report, i.e. test data from the researcher, is at `/humgen/gsa-scr1/pub/incoming/Exception_in_SplitNCigarReads.tgz`, as stated above.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5230#issuecomment-426410709:34,test,test,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5230#issuecomment-426410709,1,['test'],['test']
Testability,"@jamesemery, yes, I've opened #5248 with the isolated fix (and unit test). I'll leave this open for the `CollectAllelicCountsSpark` changes, which I'll update when the other changes it depends on are merged.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5222#issuecomment-426317398:68,test,test,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5222#issuecomment-426317398,1,['test'],['test']
Testability,"@jamesemery: thank you. however, I am probably missing something obvious here. i tried to access this using 'gsutil cp'; however, i get an AccessDeniedException: bbimber@gmail.com does not have storage.objects.list access to variant-eval-test-data. Should I, and/or is there another way to access this?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-363220456:238,test,test-data,238,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-363220456,1,['test'],['test-data']
Testability,@jason-weirather I see the error in the config file - this is definitely a bug in the data source release. There will need to be another data sources release to fix this and another data sources bug. I expect that this will be released by end of week. I will run through some additional tests on hg38 data to see if I can duplicate the null pointer exception.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4521#issuecomment-372345798:287,test,tests,287,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4521#issuecomment-372345798,1,['test'],['tests']
Testability,"@jason-weirather OK, I found the problem. It was _another_ issue with the data sources. I've fixed it in my local copy - we'll have to release another version tomorrow. I have also made a few logging upgrades so you'll get more information about errors. I'm opening the PR for this now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4521#issuecomment-375469404:192,log,logging,192,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4521#issuecomment-375469404,1,['log'],['logging']
Testability,"@jason-weirather There is a new set of data sources available in the data sources area (v1.1). I still haven't tested very thoroughly, but it should have all required files for hg38. I'm planning to test this further later this week / early next week.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4521#issuecomment-375059321:111,test,tested,111,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4521#issuecomment-375059321,2,['test'],"['test', 'tested']"
Testability,"@jean-philippe-martin , my thought was that we'd push RefAPISource down as far as it was needed (no calls to RefAPISource.getInstance()). It's a style question (pass down the instance of the class or have a Singleton and .getInstance(). Since we're going to have two or three legitimate classes behind RefAPISource, I think it's good to be explicit that it's not just one thing. I'd favor Singleton and .getInstance() if the only extra class was a mock for testing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/804#issuecomment-130901998:448,mock,mock,448,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/804#issuecomment-130901998,2,"['mock', 'test']","['mock', 'testing']"
Testability,"@jean-philippe-martin Agree that we probably shouldn't refactor `IntegrationTest` as part of this PR, but it looks like some other tests are failing now. The PR build failures are [here](https://travis-ci.com/broadinstitute/gatk/builds/97887212). There are some CRAN mirror problems that are affecting all builds at the moment, but there are also some failures that are fallout from the `IntegrationTest` changes. See [this](https://travis-ci.com/broadinstitute/gatk/jobs/171535202). The previous (`XReadLines`) code was gzip aware, but the new code is not, which is causing the test failures.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889:131,test,tests,131,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889,2,['test'],"['test', 'tests']"
Testability,@jean-philippe-martin Any thoughts on the cause of the failure to load class `org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos` in travis? Do tests pass for you if you run them locally using `./gradlew test`?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232406786:160,test,tests,160,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232406786,2,['test'],"['test', 'tests']"
Testability,@jean-philippe-martin Are your jars properly set up? I'm seeing the Travis build fail the following way:. ```; ...; Gradle suite > Gradle test > org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSourceUnitTest.testReadFromFileAndHDFS FAILED; org.apache.hadoop.ipc.RemoteException(java.lang.NoClassDefFoundError): Could not initialize class org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos; at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol.getDescriptor(ClientNamenodeProtocolProtos.java); at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.getDescriptorForType(ClientNamenodeProtocolProtos.java); at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:598); ...; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232254552:138,test,test,138,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232254552,2,['test'],"['test', 'testReadFromFileAndHDFS']"
Testability,@jean-philippe-martin Could you please rebase this onto the latest master? This branch needs a git-lfs-related change in order to pass tests. Thanks!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3070#issuecomment-331986909:135,test,tests,135,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3070#issuecomment-331986909,1,['test'],['tests']
Testability,"@jean-philippe-martin I had assumed that there were already CRAM tests in ReadUtilsUnitTest for the old createSAMWriter method, but there aren't (there are integration tests that exercise the cram code path through PrintReadsIntegrationTest.) In general you have to just know which reference goes with which cram. The canonical file we use is print_reads.cram/print_reads.fasta (in the tools test folder). You should probably copy them into the ReadUtils test folder to use it in those tests. If you do,you'll have to also copy print_reads.fasta.fai, or you'll get misleading CRAM errors. Also note that you won't be able to use iterator comparison when comparing an Iterator<CRAMRecord> with Iterator<BAMRecord>.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332212832:65,test,tests,65,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332212832,5,['test'],"['test', 'tests']"
Testability,"@jean-philippe-martin I like your counter proposal in general for testing path integration. I think writing to GCS over NIO is an important enough feature that we should have at least 1 test in gatk that actually writes to a real GCS bucket in case there's ever an issue specifically with GCS (authentication issues are one potential problem I can imagine). . It seems like we should be able to design in a way that avoids collisions. What does `Files.createTempFile()` do with gcs? My guess is that it probably doesn't do the right thing, but maybe we could fix it so it would? Or use some sort of scheme with random UUID's like the methods in BucketUtils that we have already.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332235140:66,test,testing,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332235140,2,['test'],"['test', 'testing']"
Testability,@jean-philippe-martin I think this seems good now. There were some merge conflicts so I resolved those. Hopefully tests will pass on the new version and we can merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3921#issuecomment-353471063:114,test,tests,114,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3921#issuecomment-353471063,1,['test'],['tests']
Testability,"@jean-philippe-martin I've implemented an initial patch for this issue here: https://github.com/droazen/google-cloud-java/tree/dr_retry_CloudStorageReadChannel_fetchSize. Since we still don't have our Google CLA issues worked out, I'm unable to PR it directly against `google-cloud-java`, so you'll have to do that part. We'll test it out on our end and see if the 503s are finally conquered once and for all!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3253#issuecomment-314566670:327,test,test,327,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3253#issuecomment-314566670,1,['test'],['test']
Testability,"@jean-philippe-martin In our initial tests with the latest gatk, we're still getting errors like this at a rate of ~2%:. ```; com.google.cloud.storage.StorageException: 503 Service Unavailable; java.lang.IllegalArgumentException: A project ID is required for this service but could not be determined from the builder or the environment. Please set a project ID using the builder.; com.google.cloud.storage.StorageException: 503 Service Unavailable; com.google.cloud.storage.StorageException: 503 Service Unavailable; java.lang.RuntimeException: java.util.concurrent.ExecutionException: com.google.cloud.storage.StorageException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; com.google.cloud.storage.StorageException: 503 Service Unavailable; com.google.cloud.storage.StorageException: 503 Service Unavailable; com.google.cloud.storage.StorageException: 503 Service Unavailable; com.google.cloud.storage.StorageException: 503 Service Unavailable; com.google.cloud.storage.StorageException: 503 Service Unavailable; java.lang.RuntimeException: java.util.concurrent.ExecutionException: com.google.cloud.storage.StorageException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; htsjdk.tribble.TribbleException$MalformedFeatureFile: Unable to parse header with error: Remote host closed connection during handshake, for input source:; ```. Now, I know that you put in an explicit retry for 503's, so I'm wondering what could be going on. I've asked the person running the tests to check that they're using an up-to-date GATK jar, but I'm wondering if we're setting all the right retry options on the GATK side. Eg., your PR https://github.com/GoogleCloudPlatform/google-cloud-java/pull/2083 says ""but only when OptionMaxChannelReopens is set"" -- are we setting this properly? Any other thoughts on things we could try?. Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2749#issuecomment-306944607:37,test,tests,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2749#issuecomment-306944607,2,['test'],['tests']
Testability,@jean-philippe-martin It looks like `ReferenceDataSourceUnitTest` is what's covering the `engine.ReferenceFileSource` functionality. It should be easy to adapt one of those tests to run in jmfs.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3921#issuecomment-349752680:173,test,tests,173,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3921#issuecomment-349752680,1,['test'],['tests']
Testability,"@jean-philippe-martin It looks like it works fine on the cloud. I provided the `HELLBENDER_TEST_APIKEY`, and then removed the `cloud` group - from being excluded in `test` - from within `build.gradle` to look like this:. ```; test {; // enable TestNG support (default is JUnit); useTestNG{; excludeGroups 'bucket'; }; ...; ```. And then ran the following integration test, which finished successfully:. ```; $ gradle test -Dtest.single=BaseRecalibratorDataflowIntegrationTest --stacktrace; ...; Runtime.totalMemory()=1541406720. BUILD SUCCESSFUL. Total time: 32.277 secs. This build could be faster, please consider using the Gradle Daemon: http://gradle.org/docs/2.4/userguide/gradle_daemon.html; $; ```. How are you getting the error to show up?. Thanks,; Paul",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/580#issuecomment-113953068:166,test,test,166,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/580#issuecomment-113953068,5,"['Test', 'test']","['TestNG', 'test']"
Testability,"@jean-philippe-martin It's interesting, though, that out of the two implementations only sharded failed with an out-of-memory error on 256 GB (in my tests, at least). I think it's premature to conclude that broadcast is inherently the more memory-hungry of the two, though it may well be the case -- more testing is needed. I agree that seeing how memory usage scales as we increase the bam size will be crucial, as we're already over-provisioning memory by a large amount on these smaller files.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/995#issuecomment-157865508:149,test,tests,149,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/995#issuecomment-157865508,2,['test'],"['testing', 'tests']"
Testability,@jean-philippe-martin Looks good. I think we should move that example test file into our wiki and out of the codebase. Needs a rebase as well but I think that should be minimal. Feel free to merge once it's rebased and the `TestMath` is moved.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/878#issuecomment-141123523:70,test,test,70,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/878#issuecomment-141123523,2,"['Test', 'test']","['TestMath', 'test']"
Testability,"@jean-philippe-martin Looks good. It seems to be conflicted now, but assuming that those are trivial changes feel free to merge when squashed and tests pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/556#issuecomment-111554955:146,test,tests,146,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/556#issuecomment-111554955,1,['test'],['tests']
Testability,"@jean-philippe-martin Ok, ping me once tests are passing and I'll finish the review.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232410706:39,test,tests,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232410706,1,['test'],['tests']
Testability,"@jean-philippe-martin So I ran the following specific test and it built successfully:. ```; $ gradle -Dtest.single=BaseRecalibratorDataflowIntegration test; ...lot's of output... Runtime.totalMemory()=1484259328. BUILD SUCCESSFUL. Total time: 27.859 secs. This build could be faster, please consider using the Gradle Daemon: http://gradle.org/docs/2.4/userguide/gradle_daemon.html; $; ```. Below is by running one of the local tests directly - thank you for the directions to the Readme as I was launching it previously differently compared to the recommended way:. ```; $ build/install/hellbender/bin/hellbender BaseRecalibratorDataflow -R src/test/resources/org/broadinstitute/hellbender/tools/BQSR/human_b36_both.chr1_1k.fasta -I src/test/resources/org/broadinstitute/hellbender/tools/BQSR/originalQuals.1kg.chr1.1-1K.1RG.dictFix.bam --secret client-secrets.json -OQ -knownSites src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b36.excluding_sites_after_129.chr1_1k.vcf --RECAL_TABLE_FILE walktest.tmp -sortAllCols; [Tue Jun 02 03:22:33 EDT 2015] org.broadinstitute.hellbender.dev.tools.walkers.bqsr.BaseRecalibratorDataflow --knownSites /home/pgrosu/me/gg_hellbender_broad_institute/hellbender/src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b36.excluding_sites_after_129.chr1_1k.vcf --RECAL_TABLE_FILE walktest.tmp --sort_by_all_columns true --input src/test/resources/org/broadinstitute/hellbender/tools/BQSR/originalQuals.1kg.chr1.1-1K.1RG.dictFix.bam --reference src/test/resources/org/broadinstitute/hellbender/tools/BQSR/human_b36_both.chr1_1k.fasta --useOriginalQualities true --client_secret client-secrets.json --run_without_dbsnp_potentially_ruining_quality false --solid_recal_mode SET_Q_ZERO --solid_nocall_strategy THROW_EXCEPTION --mismatches_context_size 2 --indels_context_size 3 --maximum_cycle_value 500 --mismatches_default_quality -1 --insertions_default_quality 45 --deletions_default_quality 45 --low_quality_tail 2 --quantizing_lev",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/535#issuecomment-107794672:54,test,test,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/535#issuecomment-107794672,6,['test'],"['test', 'tests']"
Testability,"@jean-philippe-martin Sorry, I originally typed ""you can't compare `Iterator<CRAMRecord>` with `Iterator<SAMRecord>`"" , but I didn't quote it, so it displays as ""you can't compare Iterator with Iterator"". Anyway, it looks like you're not doing that. Thanks for adding the CRAM tests. Rather than adding separate data providers and methods for them though, can you just change the existing providers and methods to have an output extension and a reference (null is OK), and then thread those through the test code. I made a branch of your branch with a commit [here](https://github.com/broadinstitute/gatk/commit/5e52fca813e57065713852d12f80a7599fcbc3ce) to make sure that would work - it eliminates a lot of redundant code.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332381114:277,test,tests,277,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332381114,2,['test'],"['test', 'tests']"
Testability,"@jean-philippe-martin Tests fail in my branch, but they all look to be legitimate failures, missing environment variables and such. https://storage.googleapis.com/hellbender/test/build_reports/5237.2/tests/index.html",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1662#issuecomment-205463141:22,Test,Tests,22,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1662#issuecomment-205463141,3,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,"@jean-philippe-martin Thank you for putting this together, but performing authentication and reading the first byte might be too small a test for running on the Cloud. Could you run a profile test using `gcloud-java-nio` with 100 GB, 500 GB, 1 TB, 10 TB of data and process it?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2013#issuecomment-233417619:137,test,test,137,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2013#issuecomment-233417619,2,['test'],['test']
Testability,"@jean-philippe-martin Thanks for adding the additional test, but by ""integration test"", I meant something that exercises an actual tool (which is why I mentioned SelectVariants) with a non-default provider, not another unit test that uses GCS. I suggested SelectVariants since I thought it would be easy:. > all the previous comments have been addressed with the exception of adding a SelectVariants integration test. It should be pretty easy to clone an existing case and change it use a non-default nio provider. I think this last test is redundant with the one you already added. My apologies if that was confusing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135:55,test,test,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135,5,['test'],['test']
Testability,"@jean-philippe-martin Travis runs the cloud tests using a service account on a non gcs machine. (at least I assume it's not a gcs vm, I think they use amazon cloud although that could have changed...) All we do to log in is:. ```; gcloud config set project broad-dsde-dev;; gcloud auth activate-service-account --key-file servicekey.json; ```. @kcibul Where you connecting from the broad network? I've had problems connecting to gcs from home because of IP restrictions on the broad projects. Maybe your gsutil has some configuration setup to do tunneling but gatk doesn't? Sort of a long shot since I would expect both to not work if either doesn't.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2425#issuecomment-282406671:44,test,tests,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2425#issuecomment-282406671,2,"['log', 'test']","['log', 'tests']"
Testability,@jean-philippe-martin We are testing this internally now to see if it resolves our GCS connection issues -- fingers crossed!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3044#issuecomment-306867623:29,test,testing,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3044#issuecomment-306867623,1,['test'],['testing']
Testability,"@jean-philippe-martin When I build a fatJar manually, and then run just using that, it seem to throw an exception :(. ```; $ gradle fatJar; $ java -jar build/libs/hellbender-all-GATK.4.alpha-380-g9f167ee-SNAPSHOT.jar BaseRecalibratorDataflow -R src/test/resources/org/broadinstitute/hellbender/tools/BQSR/human_b36_both.chr1_1k.fasta -I src/test/resources/org/broadinstitute/hellbender/tools/BQSR/originalQuals.1kg.chr1.1-1K.1RG.dictFix.bam --secret client-secrets.json -OQ -knownSites src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b36.excluding_sites_after_129.chr1_1k.vcf --RECAL_TABLE_FILE walktest.tmp -sortAllCols; ...; java.lang.RuntimeException: java.lang.NoSuchMethodError: com.google.common.base.Stopwatch.createStarted()Lcom/google/common/base/Stopwatch;; at com.google.cloud.dataflow.sdk.Pipeline.run(Pipeline.java:155); at org.broadinstitute.hellbender.engine.dataflow.DataflowCommandLineProgram.runPipeline(DataflowCommandLineProgram.java:135); at org.broadinstitute.hellbender.engine.dataflow.DataflowCommandLineProgram.doWork(DataflowCommandLineProgram.java:101); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:97); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:150); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:71); at org.broadinstitute.hellbender.Main.main(Main.java:86); Caused by: java.lang.NoSuchMethodError: com.google.common.base.Stopwatch.createStarted()Lcom/google/common/base/Stopwatch;; at org.broadinstitute.hellbender.dev.pipelines.bqsr.BaseRecalibratorDataflowUtils$4.startBundle(BaseRecalibratorDataflowUtils.java:223); $; ```. ~p. ```; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/580#issuecomment-115040107:249,test,test,249,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/580#issuecomment-115040107,3,['test'],['test']
Testability,@jean-philippe-martin Where are you seeing that test failure? I'm seeing the travis failures as . ```; htsjdk.samtools.SAMException: Exception when processing alignment for BAM index i 1/2 76b aligned read.; 	at htsjdk.samtools.BAMFileWriter.writeAlignment(BAMFileWriter.java:142); 	at htsjdk.samtools.SAMFileWriterImpl.addAlignment(SAMFileWriterImpl.java:201); 	at htsjdk.samtools.AsyncSAMFileWriter.synchronouslyWrite(AsyncSAMFileWriter.java:36); 	at htsjdk.samtools.AsyncSAMFileWriter.synchronouslyWrite(AsyncSAMFileWriter.java:16); 	at htsjdk.samtools.util.AbstractAsyncWriter$WriterRunnable.run(AbstractAsyncWriter.java:124); 	at java.lang.Thread.run(Thread.java:748); Caused by: htsjdk.samtools.SAMException: Exception creating BAM index for record i 1/2 76b aligned read.; 	at htsjdk.samtools.BAMIndexer.processAlignment(BAMIndexer.java:119); 	at htsjdk.samtools.BAMFileWriter.writeAlignment(BAMFileWriter.java:139); 	... 5 more; Caused by: htsjdk.samtools.SAMException: IOException in BinaryBAMIndexWriter reference 0; 	at htsjdk.samtools.BinaryBAMIndexWriter.writeReference(BinaryBAMIndexWriter.java:151); 	at htsjdk.samtools.BAMIndexer.advanceToReference(BAMIndexer.java:138); 	at htsjdk.samtools.BAMIndexer.processAlignment(BAMIndexer.java:115); 	... 6 more; Caused by: java.nio.channels.ClosedByInterruptException; 	at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202); 	at sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:216); 	at java.nio.channels.Channels.writeFullyImpl(Channels.java:78); 	at java.nio.channels.Channels.writeFully(Channels.java:101); 	at java.nio.channels.Channels.access$000(Channels.java:61); 	at java.nio.channels.Channels$1.write(Channels.java:174); 	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82); 	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140); 	at htsjdk.samtools.BinaryBAMIndexWriter.writeReference(BinaryBAMIndexWriter.java:149); 	... 8 more; ```. One of the ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-329967977:48,test,test,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-329967977,1,['test'],['test']
Testability,"@jean-philippe-martin Yeah, I'm seeing that. I suspect it's because we aren't passing the environment variables correctly to the docker tests so it's exploding with an unhelpful error during test initialization.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3159#issuecomment-314237740:136,test,tests,136,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3159#issuecomment-314237740,2,['test'],"['test', 'tests']"
Testability,@jean-philippe-martin You should have the ability to manually trigger builds on jenkins if you sign in as well. That would be an easy way to test if you don't want to wait for the nightly to run.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2517#issuecomment-292757760:141,test,test,141,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2517#issuecomment-292757760,1,['test'],['test']
Testability,"@jean-philippe-martin You're going to have to rebase this branch onto the latest master in order to pass tests, due to a change @lbergelson made in master.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3044#issuecomment-306597002:105,test,tests,105,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3044#issuecomment-306597002,1,['test'],['tests']
Testability,"@jean-philippe-martin Yup, reading hundreds of different files in the same tool. We're trying to optimize the buffer size for that case, that's what we're looking at in that other thread you were commenting on. It seems like we may have some memory leak somewhere else, you seem to need much more memory than we would expect if everything is working as expected. . This branch should fix the thread leak we were seeing. 👍 Merge when tests pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2643#issuecomment-299038867:433,test,tests,433,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2643#issuecomment-299038867,1,['test'],['tests']
Testability,"@jean-philippe-martin has added support for requester pays to gcloud. ; See https://github.com/GoogleCloudPlatform/google-cloud-java/pull/3406 . I've set up a new fork of the project at https://github.com/broadinstitute/google-cloud-java. I have a branch https://github.com/broadinstitute/google-cloud-java/tree/lb_update_pom_to_publish_to_orgbroad which I believe should make the changes necessary to run on dataproc and avoid https://github.com/GoogleCloudPlatform/google-cloud-java/issues/2453. However, if you rollback the dependencies the project no longer compiles. You can compile the nio-subproject, but the parent project can no longer build against the old dependencies. That makes me very nervous because it seems likely that we will encounter runtime errors if we substitute them. . JP created a small test case to reproduce the error and it seems like the dataproc team is looking at it. Hopefully they can resolve the issue and we can switch to the base library instead of needing to publish an additional sketchy version of it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4828#issuecomment-404322757:814,test,test,814,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4828#issuecomment-404322757,1,['test'],['test']
Testability,@jean-philippe-martin since you have push access to this repo you should be able to force travis to rerun a branch if you're logged in,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1662#issuecomment-207072471:125,log,logged,125,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1662#issuecomment-207072471,1,['log'],['logged']
Testability,@jean-philippe-martin thanks for getting the nio fix and testing on dataproc!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2220#issuecomment-259089650:57,test,testing,57,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2220#issuecomment-259089650,1,['test'],['testing']
Testability,"@jean-philippe-martin, this change changes `testBQSRLocal` to be truly local, so that it reads the reference from the local filesystem (which was added in https://github.com/broadinstitute/hellbender/pull/827). So, for that test no API key is needed. . The `testBQSRRefCloud` test still loads the reference from the cloud, so we're still testing that case too.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/862#issuecomment-136760832:44,test,testBQSRLocal,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/862#issuecomment-136760832,5,['test'],"['test', 'testBQSRLocal', 'testBQSRRefCloud', 'testing']"
Testability,"@jjfarrell @cmnbroad I tracked the problem down to htsjdk, see https://github.com/samtools/htsjdk/pull/1255. What seems to be happening is that `SeekableStream#available()` is returning a negative value due to int overflow, which `ReadableByteChannelImpl` is relying on to fill its byte buffer (from `AbstractIndexedFastaSequenceFile#getSubsequenceAt`). When it gets a negative value it returns early, without filling the buffer. The end result is that the reference is not read correctly, hence the MD5 mismatch errors. The reason we haven't seen this before is that we've only tested on CRAMs with FASTA files that are less than 2GB (ones that don't cover the whole genome, or ones that are gzipped). When the file is less than 2GB there's no int overflow, so we don't see the error.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5547#issuecomment-452676624:579,test,tested,579,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5547#issuecomment-452676624,1,['test'],['tested']
Testability,"@jjfarrell If possible, could you pull from the latest master branch of GATK and test the updated SV pipeline on your data? Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4458#issuecomment-370449193:81,test,test,81,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4458#issuecomment-370449193,1,['test'],['test']
Testability,"@jjfarrell Yes, the fix was included in 4.0.0.0, if you're still encountering the problem then the fix must be incomplete. Would it be possible to provide a test case that triggers the bug in 4.0.0.0?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3845#issuecomment-358446091:157,test,test,157,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3845#issuecomment-358446091,1,['test'],['test']
Testability,"@jjfarrell and @mlathara: thanks for running these tests and sorry I havent been able to do anything yet with our data. I'm under some grant deadlines until into Oct, but I do hope to add to this. A couple comments:. 1) that broadly matches my experience. 2) My sense is that we were caught between and rock and a hard place with GenomicsDb and GenotypeGVCFs. Our workflow until this summer involved creating a workspace (running per-contig), which involved importing >1500 animals at first. This would execute OK when using a reasonable --batch-size on GenomicsDbImport. However, when we had large workspaces that were imported in lots of batches, GenotypeGVCFs (which we execute scattered, where each job works on a small interval) tended to perform badly and was a bottleneck (i.e. would effectively stall). Therefore we began to --consolidate the workspaces using GenomicsDBImport during the append process. Initially --consolidate worked; however, as @jjfarrell noted, that's memory intensive and once our workspace was a certain size, this basically died again. Therefore we even worked with @nalinigans to their the standalone GenomicsDB consolidate tool. This was a viable way to consolidate the workspaces and we successfully aggregated and consolidated all our data (which took a while). However, these massive, consolidated workspaces seem to choke GenotypeGVCFs. Therefore this process is still basically dead. 3) As I noted above, I'm currently giving up on trying to maintain permanent data in genomicsDB. There's so many advantages to not doing so, and letting the gVCFs exist as the permanent store. Notably, there are many reasons we would want/need to remake a gVCF (like the introduction of reblocking). Whenever any one of the source gVCFs changes, the workspace is basically worthless anyway (which is a massive waste of computation time). We've had great success running each GenotypeGVCFs scattered, where each job runs GenomicsDbImport on-the-fly, to make a transient workspace",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7968#issuecomment-1256246852:51,test,tests,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7968#issuecomment-1256246852,1,['test'],['tests']
Testability,"@jkobject Actually, we just noticed that your error is triggered by the file `gs://fc-secure-bd7b8bc9-f665-4269-997e-5a402088a369/5c2db926-3b1c-479c-9ed3-a99ce518de91/omics_mutect2/60955825-7723-4bc9-8202-bdd9975bb5c0/call-mutect2/Mutect2/7d737efc-c8be-4a6d-8803-4f786129521a/call-SplitIntervals/glob-0fc990c5ca95eebc97c4c204e3e303e1/0000-scattered.interval_list`, not the bam. Could you attempt the `gsutil` test on that file instead, and let us know what happens? Eg.,. ```; gsutil -u broad-firecloud-ccle cp gs://fc-secure-bd7b8bc9-f665-4269-997e-5a402088a369/5c2db926-3b1c-479c-9ed3-a99ce518de91/omics_mutect2/60955825-7723-4bc9-8202-bdd9975bb5c0/call-mutect2/Mutect2/7d737efc-c8be-4a6d-8803-4f786129521a/call-SplitIntervals/glob-0fc990c5ca95eebc97c4c204e3e303e1/0000-scattered.interval_list .; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1064482965:409,test,test,409,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1064482965,1,['test'],['test']
Testability,"@jkobject After further testing we think the issue might be more specific: the error seems to occur only when checking for the existence of non-existent files in non-requester-pays buckets when a requester-pays project is specified. In your case, it is checking for the existence of an index for your `interval_list` file and failing, since `interval_list` files don't have indices. As another experiment, it would be helpful to know whether your `Mutect2` command succeeds if you specify a specific interval string like ""1:1000000-2000000"" (doesn't matter which interval) for the `-L` argument instead of the `interval_list` file (but keeping all other inputs the same).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1065230706:24,test,testing,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1065230706,1,['test'],['testing']
Testability,"@jkobject After further testing we think the issue might be more specific: the error seems to occur only when checking for the existence of non-existent files in non-requester-pays buckets when a requester-pays project is specified. In your case, it is checking for the existence of an index for your interval_list file and failing, since interval_list files don't have indices. As another experiment, it would be helpful to know whether your Mutect2 command succeeds if you specify a specific interval string like ""1:1000000-2000000"" (doesn't matter which interval) for the -L argument instead of the interval_list file (but keeping all other inputs the same).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7716#issuecomment-1065238192:24,test,testing,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7716#issuecomment-1065238192,1,['test'],['testing']
Testability,"@jkobject Here's an update for you on this issue, as promised: we've tested the patch in https://github.com/broadinstitute/gatk/pull/7730 extensively on both our local machines and on a clean Google Cloud VM, and found it to work perfectly with all kinds of requester pays inputs to GATK (fastas, bams, vcfs, interval_lists, etc.). We now believe that the test failures in the PR are artifacts of some configuration issue in our Travis CI test environment, and that the PR does actually fix requester pays support in GATK. We are considering merging and releasing the branch as-is, and dealing with the issues in our test suite post-release. It would make us more confident doing this if you could test the branch out as well on your end and confirm whether it works for you. You can do this using the following commands:. ```; git clone https://github.com/broadinstitute/gatk.git gatk; cd gatk; git fetch; git checkout -b lb_refix_requester_pays origin/lb_refix_requester_pays; ./gradlew clean installDist; ./gatk <a GATK command that failed for you previously>; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7716#issuecomment-1079421576:69,test,tested,69,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7716#issuecomment-1079421576,5,['test'],"['test', 'tested']"
Testability,"@jkobject Our testing of the nightly image with our own service account and billing project suggests that the requester pays access issue is resolved, so we're not sure what's causing it to continue to fail for you. As an experiment, could you try this: within the gatk-nightly image, try to access your requester pays file `gs://cclebams/wgs_hg38/CDS-0b4jFH.wgs_ccle.bam` using the `gsutil` command with the `-u` option. Eg., `gsutil -u broad-firecloud-ccle cp gs://cclebams/wgs_hg38/CDS-0b4jFH.wgs_ccle.bam .`, and report whether that succeeds. Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1064477058:14,test,testing,14,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1064477058,1,['test'],['testing']
Testability,"@jkobject Sure, no problem! In the meantime we'll do additional testing on our end to try to confirm this theory, and submit another patch to Google. We are considering forking the library for now in the interests of getting a fully-working version of GATK released as soon as possible.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1065282902:64,test,testing,64,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1065282902,1,['test'],['testing']
Testability,"@jkobject Thanks for testing that for us! After looking into this issue a bit more, it seems that there might be a problem in the latest Google libraries with handling the case of a non-requester-pays input when a requester-pays project is provided. In our tests, running a similar `Mutect2` command line to yours with _all_ inputs in requester pays buckets succeeds, but when we run with a mix of requester-pays and non-requester-pays inputs, or all non-requester-pays inputs, and do specify a requester pays project, we're able to replicate your error. We are looking in a debugger now to pin down the cause. Can you tell us whether running `Mutect2` with a mix of requester-pays and non-requester-pays inputs and `--gcs-project-for-requester-pays` specified succeeded for you previously? If so, with which version(s) of GATK?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1064548850:21,test,testing,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1064548850,2,['test'],"['testing', 'tests']"
Testability,"@jkobject Thanks, we are testing with the nightly image now",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1064452736:25,test,testing,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1064452736,1,['test'],['testing']
Testability,"@jkobject We are currently testing the new `google-cloud-nio` release in https://github.com/broadinstitute/gatk/pull/7730. In that branch, we added tests for all possible combinations of requester-pays and non-requester-pays inputs, but not all of the tests are passing yet. We're still looking into the reasons for the failures -- it could be a flaw in the way the tests are set up, or it could be that the failures are real. We should have an update by end of the week.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7716#issuecomment-1077813713:27,test,testing,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7716#issuecomment-1077813713,4,['test'],"['testing', 'tests']"
Testability,@jkobject thanks for the PR! This seems to only affect a subset of the issues you mentioned above - specifically #6345. Did this patch fix the error you're seeing in your data that you posted in #6651?. It's a good bandaid for this error case. There are some other places where a fix like this will need to be added as well. Are you able to update those areas and make some tests for this case?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7936#issuecomment-1182113899:374,test,tests,374,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7936#issuecomment-1182113899,1,['test'],['tests']
Testability,"@jmstover Thank you for your recommendation. I added the following line in the beginning of test.pbs. ```; source activate gatk; ```. However, running the following command still threw the same error. ; ```; singularity exec gatk.simg ./test.pbs; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4782#issuecomment-433550679:92,test,test,92,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4782#issuecomment-433550679,2,['test'],['test']
Testability,"@jmstover Yes, I pulled from broadinstiture/gatk. ; ```; singularity build gatk.simg docker://broadinstitute/gatk; ```; I don't have root permission to build Singularity image from definition file now. I may need to install a virtual machine first to test it. However, just like the activation of environment, I added the export command in my test.pbs and it worked. :-). ```; export HOME=/scratch/cqs/shengq2; source activate gatk; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4782#issuecomment-433561271:251,test,test,251,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4782#issuecomment-433561271,2,['test'],['test']
Testability,@jmthibault79 This fails with a compiler error: . ```; :compileTestJava/home/travis/build/broadinstitute/gatk/src/test/java/org/broadinstitute/hellbender/engine/spark/datasources/VariantsSparkSinkUnitTest.java:240: error: cannot find symbol; return inferFromUncompressedData(IOUtil.isGZIPInputStream(bis) ? new GZIPInputStream(bis) : bis);; ^; symbol: method isGZIPInputStream(BufferedInputStream); location: class IOUtil; 1 error; FAILED; ```. I think you perhaps need to update the htsjdk dependency to a release that includes this change?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5583#issuecomment-454957265:114,test,test,114,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5583#issuecomment-454957265,1,['test'],['test']
Testability,"@jnktsj see this PR to get an idea of how minimal the changes would be to switch the FC Featured versions of the ModelSegments WDLs to use NIO. For various reasons, I cannot easily make the switch to the WDLs in the repo here (as you can see, this causes tests to fail). So if you would like to go ahead and start testing, I would suggest that you simply clone the Featured WDLs and make the changes yourself, if that's something you're comfortable with.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5015#issuecomment-406044277:255,test,tests,255,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5015#issuecomment-406044277,2,['test'],"['testing', 'tests']"
Testability,"@jonn-smith @LeeTL1220 @droazen Thanks for sharing the information above, and I looked at it. It seems to me that once we have a chain file for one reference and another reference, the remaining steps are straightforward. I also noticed the following Picard utility [Picard LiftoverVcf]( https://broadinstitute.github.io/picard/command-line-overview.html#LiftoverVcf ) that can Lift over a VCF file from one reference to another. ; Therefore, creating the chain file between a pair of references (and limiting ourselves to cases where both references are from the same species, mouse/human) is the key. To that end, according to the following post [List of chain file creators](https://www.biostars.org/p/65558/) most of the chain file creation tools are available as a web interface. However, the UCSC one seems to be more popular, and fortunately, they have the utilities as open source and to some degree explain their steps in the [LiverOver_Howto](http://genomewiki.ucsc.edu/index.php/LiftOver_Howto) link you sent. With this approach, they first BLAT the pairwise contigs in the reference files and then use the utility DoSameSpeciesLiftOver.pl. . Based on this, it appears to me I should think about the following steps:; a) First, try out their code (UCSC) and make sure it works to produce chain files for two references successfully.; b) Design/propose a solution putting the logic in DoSameSpeciesLiftOver.pl into GATK, which also might need a BLAT run . Let me know what you think of this or have any suggestions about how I should proceed.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6837#issuecomment-804188470:1386,log,logic,1386,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6837#issuecomment-804188470,1,['log'],['logic']
Testability,"@jonn-smith @LeeTL1220 The CNV test timeout was a temporary issue, but its been fixed. I'm pretty sure if you rebase on current master, it will go away.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4063#issuecomment-355795000:31,test,test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4063#issuecomment-355795000,1,['test'],['test']
Testability,@jonn-smith @droazen Had to make two very small changes. Should be ready for review if tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5134#issuecomment-416596440:87,test,tests,87,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5134#issuecomment-416596440,1,['test'],['tests']
Testability,"@jonn-smith @droazen I forgot to run the tests on my laptop before PR. Anyway, should be okay now. If not, I'll fix (again).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5134#issuecomment-416313694:41,test,tests,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5134#issuecomment-416313694,1,['test'],['tests']
Testability,"@jonn-smith All comments (except for https://github.com/broadinstitute/gatk/issues/5417) addressed, and the branch has been rebased onto your latest changes. If you give me a final thumbs up, I'll merge once tests pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5403#issuecomment-439152369:208,test,tests,208,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5403#issuecomment-439152369,1,['test'],['tests']
Testability,"@jonn-smith Assuming the tests pass, please review latest changes. If the tests have failed, I will see it tomorrow and address.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4872#issuecomment-397490924:25,test,tests,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4872#issuecomment-397490924,2,['test'],['tests']
Testability,"@jonn-smith Back to you. It took a fair amount of machinery to get a cromwell execution test running on travis with dummy inputs, etc., but its finally working. For the moment, the only tool that is annotated for WDLGen is PrintReads, but as soon as this goes in I'll start annotating others in a separate PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6504#issuecomment-648424901:88,test,test,88,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6504#issuecomment-648424901,1,['test'],['test']
Testability,@jonn-smith Can I merge if the tests pass?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5046#issuecomment-413336498:31,test,tests,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5046#issuecomment-413336498,1,['test'],['tests']
Testability,@jonn-smith Can you explain briefly why the tests are failing? It seems like this is the sort of change that our test code should just ignore.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4571#issuecomment-455234300:44,test,tests,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4571#issuecomment-455234300,2,['test'],"['test', 'tests']"
Testability,@jonn-smith Can you make sure that the test failure is nothing to block merging?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4063#issuecomment-355789698:39,test,test,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4063#issuecomment-355789698,1,['test'],['test']
Testability,"@jonn-smith Can you run the Carrot HaplotypeCaller tests on this branch? Agree that it might finally be time to make this the default, if we can convince ourselves that the accelerated implementation is stable.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684309813:51,test,tests,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684309813,1,['test'],['tests']
Testability,"@jonn-smith Could you comment on this one? The tool output clearly states that we don't support this version of Gencode, and that errors may occur:. ```; GENCODE GTF Header line 1 has a version number that is above maximum tested version (v 34) (given: 38): ##description: evidence-based annotation of the human genome (GRCh38), version 38 (Ensembl 104), mapped to GRCh37 with gencode-backmap Continuing, but errors may occur.; ```. Do we claim to support 38 anywhere? (eg., in documentation, etc.)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7385#issuecomment-891227342:223,test,tested,223,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7385#issuecomment-891227342,1,['test'],['tested']
Testability,@jonn-smith Handing this one off to you for now. I wasn't sure what to do about test exactly.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6178#issuecomment-534581298:80,test,test,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6178#issuecomment-534581298,1,['test'],['test']
Testability,@jonn-smith Has this new version of the script been tested / is it in actual use?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7759#issuecomment-1090594754:52,test,tested,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7759#issuecomment-1090594754,1,['test'],['tested']
Testability,"@jonn-smith I am going to need to discuss with you how to fix the remaining broken test. I believe that the the issue is with the design of the test itself, not the code in this PR. There is an implicit assumption that the MafOutputRenderer will never create a Funcotation, which this PR violates. I believe that we should eliminate this assumption.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4917#issuecomment-398951356:83,test,test,83,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4917#issuecomment-398951356,2,['test'],['test']
Testability,@jonn-smith I did not fully tackle the tests for the uplaoder script and I suspect they are pretty broken now... I have spot-checked that they work with all 4 bundles...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8512#issuecomment-1703246347:39,test,tests,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8512#issuecomment-1703246347,1,['test'],['tests']
Testability,"@jonn-smith I forgot to change the default in the GATKConfig.java, and your test caught it. That's awesome!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4547#issuecomment-374994787:76,test,test,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4547#issuecomment-374994787,1,['test'],['test']
Testability,"@jonn-smith I tried running this with the proposed htsjdk change (since I'm unclear on whats broken there exactly), but the new test you added here seems to fail even with that change.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6223#issuecomment-545498470:128,test,test,128,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6223#issuecomment-545498470,1,['test'],['test']
Testability,@jonn-smith I'll add that it would be good to include an end-to-end integration test here as well to prove that the tool can successfully run to completion when the bounds-checking gets triggered.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7513#issuecomment-948797839:80,test,test,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7513#issuecomment-948797839,1,['test'],['test']
Testability,@jonn-smith I'll fix the tests and notify you.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4872#issuecomment-397418459:25,test,tests,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4872#issuecomment-397418459,1,['test'],['tests']
Testability,"@jonn-smith If tests pass, can I merge?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4881#issuecomment-397036412:15,test,tests,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4881#issuecomment-397036412,1,['test'],['tests']
Testability,@jonn-smith If you make the changes in a branch I can run it through the M2 testing Terra workspace.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5841#issuecomment-481373763:76,test,testing,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5841#issuecomment-481373763,1,['test'],['testing']
Testability,"@jonn-smith Looks good, merge when tests pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6492#issuecomment-598420328:35,test,tests,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6492#issuecomment-598420328,1,['test'],['tests']
Testability,@jonn-smith Looks like that did the trick. The tests are passing now. How do you want to handle this branch? should I give you a review or try to take it over and let you review the changes i make to it?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8863#issuecomment-2386252218:47,test,tests,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8863#issuecomment-2386252218,1,['test'],['tests']
Testability,@jonn-smith Please review that I have tested to your satisfaction. Particularly around `FuncotationMap`. Please note that several issues are closed with this PR.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4838#issuecomment-393659921:38,test,tested,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4838#issuecomment-393659921,1,['test'],['tested']
Testability,"@jonn-smith Something is weird here, it looks like the the stubs are committed now by accident. That's what I see if I check it out locally. They're still valid git-lfs stubs, so running a `git-lfs checkout` will pull them down and then git will think that they've all been modified since they're not being tracked correctly by git-lfs... In the past to move things out of git-lfs I've had to do it in 2 commits. ; 1. remove the file from git, ; 2. re-commit it to a new location that isnt tracked by git-lfs. `git lfs migrate export` might help, but I've never used it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5381#issuecomment-434782675:59,stub,stubs,59,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5381#issuecomment-434782675,2,['stub'],['stubs']
Testability,@jonn-smith Thank you. I will be looking at the ucsc. I also found the following tool that implements the ucsc liftover file creation....the logic seems simple.; https://github.com/konstantint/pyliftover,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6837#issuecomment-800419348:141,log,logic,141,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6837#issuecomment-800419348,1,['log'],['logic']
Testability,@jonn-smith There are a bunch of test failures on this branch in travis -- could you fix these before we review? Thanks!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3410#issuecomment-320329698:33,test,test,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3410#issuecomment-320329698,1,['test'],['test']
Testability,@jonn-smith This should be good to go now. I added a non-regenerated integration test for the specific problem.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6178#issuecomment-538132773:81,test,test,81,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6178#issuecomment-538132773,1,['test'],['test']
Testability,"@jonn-smith and @LeeTL1220 please review. I still plan to add a few more tests (in particular, for overlapping genes and for all-transcripts mode), but I will add these during review rather than holding this branch up any longer.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5403#issuecomment-437496907:73,test,tests,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5403#issuecomment-437496907,1,['test'],['tests']
Testability,@jonn-smith back to you. I fixed the broken test... Should be good for you to do your final datasource testing,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8512#issuecomment-1714396277:44,test,test,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8512#issuecomment-1714396277,2,['test'],"['test', 'testing']"
Testability,"@jonn-smith i added a readme in the LFS files. Looks like github won't display it though which is slightly annoying. Here is what it says (WARNING.txt: NOTE: this gencode.v43.PIK3CA.gtf file is slightly edited for the sake of testing MANE_SELECT and MANE_PLUS_CLINICAL.; transcript ""ENST00000643187.1"" is not actually classified as MANE_Plus_Clinical but it is included in the file for testing purposes.)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/9012#issuecomment-2429685461:226,test,testing,226,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/9012#issuecomment-2429685461,2,['test'],['testing']
Testability,@jonn-smith is this in a release or would we have to download/compile to test?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6289#issuecomment-951261199:73,test,test,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6289#issuecomment-951261199,1,['test'],['test']
Testability,@jonn-smith tested a workaround using JEXL expressions to filter out spanning deletions but it was not working. This seems like a bug because spanning deletions can cause downstream issues.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7341#issuecomment-876574736:12,test,tested,12,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7341#issuecomment-876574736,1,['test'],['tested']
Testability,"@jonn-smith this is tested on my end. would you mind testing on yours and reviewing the pull request?. Also I am trying to run it using the jar file but when I use it I get an error:; ```; Error: A JNI error has occurred, please check your installation and try again; Exception in thread ""main"" java.lang.NoClassDefFoundError: org/broadinstitute/barclay/argparser/CommandLineException; ```; let me know if you have any inputs on this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7936#issuecomment-1185730223:20,test,tested,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7936#issuecomment-1185730223,2,['test'],"['tested', 'testing']"
Testability,"@jonn-smith, I did see XsvLocatableTableCodec and the .config file path, but this does not appear to work. To be clear this is something like:; ```; gatk IndexFeatureFile -I ./hg19/testTextSource.config; ```; In IndexFeatureFile (https://github.com/broadinstitute/gatk/blob/abe8148bda234edf6bd00fa51df44d456e8e2641/src/main/java/org/broadinstitute/hellbender/tools/IndexFeatureFile.java#L118), it does identify the correct codec; however, it then calls:. IndexFactory.createDynamicIndex(featurePath.toPath(), ...). where featurePath is the config file. This calls IndexFactory to open a lineReader on the config file (not the backing data source): https://github.com/samtools/htsjdk/blob/6d3fc7bc1f613ecfce1c22d368f3ae17cb86823d/src/main/java/htsjdk/tribble/index/IndexFactory.java#L598. . This then fails during XsvLocatableTableCodec.readActualHeader(), since this is trying to read the config file, not the TXT file.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1591678472:181,test,testTextSource,181,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1591678472,1,['test'],['testTextSource']
Testability,"@jonn-smith: any thoughts on the PR? I could try to put in a test, but this does allow Funcotator to read gzipped TSV files, which is rather useful when you're dealing with large inputs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1601753831:61,test,test,61,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1601753831,1,['test'],['test']
Testability,@jonn-smith: thanks. looks like the tests passed. what do you think about the PR and level of testing?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1608133539:36,test,tests,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1608133539,2,['test'],"['testing', 'tests']"
Testability,"@joshwilding4444 Were you able to get our test suite running, or are you still running into this? We've never seen this error before and are not sure of the cause. Are you running with Java 8, or a later version of Java?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6748#issuecomment-696286788:42,test,test,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6748#issuecomment-696286788,1,['test'],['test']
Testability,"@jrvanalstine I'd strongly suggest that you upgrade. As discussed in the linked issue above, the underlying segmentation algorithm is completely different from that used in the beta workflows. Major changes were made to file formats and the overall structure of the pipeline as well. That said, it may still be the case that heavily downsampled input still gives strange results---if you are just downsampling to create test BAMs, I'd suggest that you increase the bin size to maintain a reasonable number of counts in each bin.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2944#issuecomment-474513366:420,test,test,420,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2944#issuecomment-474513366,1,['test'],['test']
